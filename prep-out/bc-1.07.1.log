Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/bc-1.07.1
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 20 files out of 20 in compilation database ...
[ 1/20][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmp_v5og4ty.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/lib/getopt.c
[ 2/20][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpf_nvfdri.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/lib/getopt1.c
[ 3/20][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpww_jeo__.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/dc/array.c
[1marray.c:66:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |                 if (cur->value.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   67 |                         dc_free_num(&cur->value.v.number);[0m
   68 |                 else if (cur->value.dc_type == DC_STRING)[0m
      | [0;32m                } 
[0m[1marray.c:68:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |                 else if (cur->value.dc_type == DC_STRING)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   69 |                         dc_free_str(&cur->value.v.string);[0m
   70 |                 else[0m
      | [0;32m                } 
[0m[1marray.c:70:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   71 |                         dc_garbage(" in array", array_id);[0m
      | [0;1;32m                                                          
[0m[1marray.c:78:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |                 if (prev != NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   79 |                         prev->next = newentry;[0m
   80 |                 else[0m
      | [0;32m                } 
[0m[1marray.c:80:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   81 |                         dc_set_stacked_array(array_id, newentry);[0m
      | [0;1;32m                                                                 
[0m[1marray.c:94:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |         while (cur != NULL  &&  cur->Index < Index)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   95 |                 cur = cur->next;[0m
      | [0;1;32m                                
[0m[1marray.c:96:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |         if (cur !=NULL  &&  cur->Index == Index)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   97 |                 return dc_dup(cur->value);[0m
      | [0;1;32m                                          
[0m[1marray.c:111:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |                 if (cur->value.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  112 |                         dc_free_num(&cur->value.v.number);[0m
  113 |                 else if (cur->value.dc_type == DC_STRING)[0m
      | [0;32m                } 
[0m[1marray.c:113:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |                 else if (cur->value.dc_type == DC_STRING)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  114 |                         dc_free_str(&cur->value.v.string);[0m
  115 |                 else[0m
      | [0;32m                } 
[0m[1marray.c:115:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  116 |                         dc_garbage("in stack", -1);[0m
      | [0;1;32m                                                   
[0m12 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 4/20][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmp8_c0nj50.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/scan.c
[1mscan.c:1096:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |                 if ( ! (yy_start) )[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1097 |                         (yy_start) = 1; /* first start state */[0m
      | [0;1;32m                                                               
[0m[1mscan.c:1099:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1099 |                 if ( ! yyin )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1100 |                         yyin = stdin;[0m
      | [0;1;32m                                     
[0m[1mscan.c:1102:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |                 if ( ! yyout )[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1103 |                         yyout = stdout;[0m
      | [0;1;32m                                       
[0m[1mscan.c:1139:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1139 |                                 if ( yy_current_state >= 316 )[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1140 |                                         yy_c = yy_meta[(unsigned int) yy_c];[0m
      | [0;1;32m                                                                            
[0m[1mscan.c:1164:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1164 |                         *yy_cp = (yy_hold_char);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1165 |                         yy_cp = (yy_last_accepting_cpos);[0m
 1166 |                         yy_current_state = (yy_last_accepting_state);[0m
 1167 |                         goto yy_find_action;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mscan.c:1173:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1173 |                   if (!std_only)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1174 |                     BEGIN(slcomment);[0m
 1175 |                   else[0m
      | [0;32m                  } 
[0m[1mscan.c:1175:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1175 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1176 |                     yyerror ("illegal character: #");[0m
      | [0;1;32m                                                     
[0m[1mscan.c:1411:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1411 |             while ( ((c=input()) != '*') && (c != EOF)) [0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1412 |               /* eat it */[0m
 1413 |               if (c == '\n') line_no++;[0m
      | [0;1;32m                                       
[0m[1mscan.c:1413:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1413 |               if (c == '\n') line_no++;[0m
      | [0;1;32m                            ^          
[0m      | [0;32m                             {
[0m[1mscan.c:1416:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1416 |                 while ( (c=input()) == '*') /* eat it*/;[0m
      | [0;1;32m                                           ^            
[0m      | [0;32m                                            {
[0m[1mscan.c:1417:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1417 |                 if (c == '/') break; /* at end of comment */[0m
      | [0;1;32m                             ^                              
[0m      | [0;32m                              {
[0m[1mscan.c:1418:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1418 |                 if (c == '\n') line_no++;[0m
      | [0;1;32m                              ^          
[0m      | [0;32m                               {
[0m[1mscan.c:1443:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1443 |                   if (*look == '\n') line_no++;[0m
      | [0;1;32m                                    ^          
[0m      | [0;32m                                     {
[0m[1mscan.c:1444:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1444 |                   if (*look == '"')  count++;[0m
      | [0;1;32m                                   ^         
[0m      | [0;32m                                    {
[0m[1mscan.c:1446:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1446 |               if (count != 2) yyerror ("NUL character in string.");[0m
      | [0;1;32m                             ^                                     
[0m      | [0;32m                              {
[0m[1mscan.c:1459:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1459 |               if (yytext[len-1] == '.')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1460 |                 yytext[len-1] = 0;[0m
      | [0;1;32m                                  
[0m[1mscan.c:1464:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1464 |               while (*src == '0') src++;[0m
      | [0;1;32m                                 ^      
[0m      | [0;32m                                  {
[0m[1mscan.c:1465:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1465 |               if (*src == 0) src--;[0m
      | [0;1;32m                            ^      
[0m      | [0;32m                             {
[0m[1mscan.c:1479:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1479 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1480 |                     *dst++ = *src++;[0m
      | [0;1;32m                                    
[0m[1mscan.c:1491:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1491 |           if (yytext[0] < ' ')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1492 |             yyerror ("illegal character: ^%c",yytext[0] + '@');[0m
 1493 |           else[0m
      | [0;32m          } 
[0m[1mscan.c:1494:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |             if (yytext[0] > '~')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1495 |               yyerror ("illegal character: \\%03o", (int) yytext[0]);[0m
 1496 |             else[0m
      | [0;32m            } 
[0m[1mscan.c:1496:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1496 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1497 |               yyerror ("illegal character: %s",yytext);[0m
      | [0;1;32m                                                       
[0m[1mscan.c:1578:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1578 |                 else switch ( yy_get_next_buffer(  ) )[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m[1mscan.c:1603:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1603 |                                         if ( ! (yy_did_buffer_switch_on_eof) )[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1604 |                                                 YY_NEW_FILE;[0m
      | [0;1;32m                                                            
[0m[1mscan.c:1610:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1610 |                                 (yy_c_buf_p) =[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1611 |                                         (yytext_ptr) + yy_amount_of_matched_text;[0m
 1612 | [0m
 1613 |                                 yy_current_state = yy_get_previous_state(  );[0m
 1614 | [0m
 1615 |                                 yy_cp = (yy_c_buf_p);[0m
 1616 |                                 yy_bp = (yytext_ptr) + YY_MORE_ADJ;[0m
 1617 |                                 goto yy_match;[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mscan.c:1620:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1620 |                                 (yy_c_buf_p) =[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1621 |                                 &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];[0m
 1622 | [0m
 1623 |                                 yy_current_state = yy_get_previous_state(  );[0m
 1624 | [0m
 1625 |                                 yy_cp = (yy_c_buf_p);[0m
 1626 |                                 yy_bp = (yytext_ptr) + YY_MORE_ADJ;[0m
 1627 |                                 goto yy_find_action;[0m
      | [0;1;32m                                                   
[0m      | [0;32m                                                   ;} 
[0m[1mscan.c:1633:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1633 |                 YY_FATAL_ERROR([0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1634 |                         "fatal flex scanner internal error--no action found" );[0m
      | [0;1;32m                                                                              
[0m      | [0;32m                                                                              ;} 
[0m[1mscan.c:1045:29: [0m[0;1;36mnote: [0mexpanded from macro 'YY_FATAL_ERROR'[0m
 1045 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )[0m
      | [0;1;32m                            ^
[0m[1mscan.c:1653:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1653 |         if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m 1654 |                 YY_FATAL_ERROR([0m
 1655 |                 "fatal flex scanner internal error--end of buffer missed" );[0m
      | [0;1;32m                                                                            
[0m[1mscan.c:1681:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1681 |         for ( i = 0; i < number_to_move; ++i )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1682 |                 *(dest++) = *(source++);[0m
      | [0;1;32m                                        
[0m[1mscan.c:1684:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1684 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 1685 |                 /* don't do the read, it's not guaranteed to return an EOF,[0m
 1686 |                  * just force an EOF[0m
 1687 |                  */[0m
 1688 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;[0m
 1689 | [0m
 1690 |         else[0m
      | [0;32m        } 
[0m[1mscan.c:1708:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1708 |                                 if ( new_size <= 0 )[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1709 |                                         b->yy_buf_size += b->yy_buf_size / 8;[0m
 1710 |                                 else[0m
      | [0;32m                                } 
[0m[1mscan.c:1710:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1710 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1711 |                                         b->yy_buf_size *= 2;[0m
      | [0;1;32m                                                            
[0m[1mscan.c:1717:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1717 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1718 |                                 /* Can't grow it, we don't own it. */[0m
 1719 |                                 b->yy_ch_buf = 0;[0m
      | [0;1;32m                                                 
[0m[1mscan.c:1721:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1721 |                         if ( ! b->yy_ch_buf )[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1722 |                                 YY_FATAL_ERROR([0m
 1723 |                                 "fatal error - scanner input buffer overflow" );[0m
      | [0;1;32m                                                                                
[0m[1mscan.c:1732:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1732 |                 if ( num_to_read > YY_READ_BUF_SIZE )[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1733 |                         num_to_read = YY_READ_BUF_SIZE;[0m
      | [0;1;32m                                                       
[0m[1mscan.c:1758:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1758 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1759 |                 ret_val = EOB_ACT_CONTINUE_SCAN;[0m
      | [0;1;32m                                                
[0m[1mscan.c:1765:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1765 |                 if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1766 |                         YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );[0m
      | [0;1;32m                                                                                          
[0m[1mscan.c:1798:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1798 |                         if ( yy_current_state >= 316 )[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1799 |                                 yy_c = yy_meta[(unsigned int) yy_c];[0m
      | [0;1;32m                                                                    
[0m[1mscan.c:1826:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1826 |                 if ( yy_current_state >= 316 )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1827 |                         yy_c = yy_meta[(unsigned int) yy_c];[0m
      | [0;1;32m                                                            
[0m[1mscan.c:1855:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1855 |                 while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1856 |                         *--dest = *--source;[0m
      | [0;1;32m                                            
[0m[1mscan.c:1863:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1863 |                 if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1864 |                         YY_FATAL_ERROR( "flex scanner push-back overflow" );[0m
      | [0;1;32m                                                                            
[0m[1mscan.c:1894:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1894 |                 if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m 1895 |                         /* This was really a NUL. */[0m
 1896 |                         *(yy_c_buf_p) = '\0';[0m
 1897 | [0m
 1898 |                 else[0m
      | [0;32m                } 
[0m[1mscan.c:1917:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1917 |                                         yyrestart(yyin );[0m
      | [0;1;32m                                        ^               
[0m      | [0;32m                                        {               ;} 
[0m[1mscan.c:1923:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1923 |                                         if ( yywrap( ) )[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1924 |                                                 return EOF;[0m
      | [0;1;32m                                                           
[0m[1mscan.c:1926:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1926 |                                         if ( ! (yy_did_buffer_switch_on_eof) )[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1927 |                                                 YY_NEW_FILE;[0m
      | [0;1;32m                                                            
[0m[1mscan.c:1936:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1936 |                                         (yy_c_buf_p) = (yytext_ptr) + offset;[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                        {
[0m 1937 |                                         break;[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mscan.c:1981:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1981 |         if ( YY_CURRENT_BUFFER == new_buffer )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1982 |                 return;[0m
      | [0;1;32m                       
[0m[1mscan.c:2022:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2022 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2023 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );[0m
      | [0;1;32m                                                                                
[0m[1mscan.c:2031:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2031 |         if ( ! b->yy_ch_buf )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2032 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );[0m
      | [0;1;32m                                                                                
[0m[1mscan.c:2048:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2048 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2049 |                 return;[0m
      | [0;1;32m                       
[0m[1mscan.c:2051:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2051 |         if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2052 |                 YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;[0m
      | [0;1;32m                                                               
[0m[1mscan.c:2054:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2054 |         if ( b->yy_is_our_buffer )[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2055 |                 yyfree((void *) b->yy_ch_buf  );[0m
      | [0;1;32m                                                
[0m[1mscan.c:2098:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2098 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2099 |                 return;[0m
      | [0;1;32m                       
[0m[1mscan.c:2115:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2115 |         if ( b == YY_CURRENT_BUFFER )[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2116 |                 yy_load_buffer_state( );[0m
      | [0;1;32m                                        
[0m[1mscan.c:2127:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2127 |         if (new_buffer == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2128 |                 return;[0m
      | [0;1;32m                       
[0m[1mscan.c:2142:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2142 |         if (YY_CURRENT_BUFFER)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2143 |                 (yy_buffer_stack_top)++;[0m
      | [0;1;32m                                        
[0m[1mscan.c:2157:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2157 |         if (!YY_CURRENT_BUFFER)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2158 |                 return;[0m
      | [0;1;32m                       
[0m[1mscan.c:2162:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2162 |         if ((yy_buffer_stack_top) > 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2163 |                 --(yy_buffer_stack_top);[0m
      | [0;1;32m                                        
[0m[1mscan.c:2188:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2188 |                 if ( ! (yy_buffer_stack) )[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2189 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );[0m
      | [0;1;32m                                                                                             
[0m[1mscan.c:2208:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2208 |                 if ( ! (yy_buffer_stack) )[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2209 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );[0m
      | [0;1;32m                                                                                             
[0m[1mscan.c:2229:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2229 |              base[size-1] != YY_END_OF_BUFFER_CHAR )[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2230 |                 /* They forgot to leave room for the EOB's. */[0m
 2231 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mscan.c:2234:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2234 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2235 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );[0m
      | [0;1;32m                                                                              
[0m[1mscan.c:2283:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2283 |         if ( ! buf )[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2284 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );[0m
      | [0;1;32m                                                                             
[0m[1mscan.c:2286:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2286 |         for ( i = 0; i < _yybytes_len; ++i )[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2287 |                 buf[i] = yybytes[i];[0m
      | [0;1;32m                                    
[0m[1mscan.c:2292:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2292 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2293 |                 YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );[0m
      | [0;1;32m                                                                  
[0m[1mscan.c:2519:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2519 |   if (!open_new_file ()) return (1);    /* EOF on standard in. */[0m
      | [0;1;32m                        ^                                        
[0m      | [0;32m                         {
[0m68 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 5/20][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmp8sdmk_2z.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/lib/vfprintf.c
[ 6/20][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpqz4zvtdp.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/dc/misc.c
[1mmisc.c:60:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   60 |         fprintf(stderr, "%s: out of memory\n", progname);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mmisc.c:60:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   60 |         fprintf(stderr, "%s: out of memory\n", progname);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mmisc.c:71:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |         if (result == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   72 |                 dc_memfail();[0m
      | [0;1;32m                             
[0m[1mmisc.c:88:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |         if (isgraph(id))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   89 |                 fprintf(fp, "'%c' (%#o)%s", (unsigned int) id, id, suffix);[0m
   90 |         else[0m
      | [0;32m        } 
[0m[1mmisc.c:89:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   89 |                 fprintf(fp, "'%c' (%#o)%s", (unsigned int) id, id, suffix);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:89:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   89 |                 fprintf(fp, "'%c' (%#o)%s", (unsigned int) id, id, suffix);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:90:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   91 |                 fprintf(fp, "%#o%s", (unsigned int) id, suffix);[0m
      | [0;1;32m                                                                
[0m[1mmisc.c:91:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   91 |                 fprintf(fp, "%#o%s", (unsigned int) id, suffix);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:91:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   91 |                 fprintf(fp, "%#o%s", (unsigned int) id, suffix);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:111:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  111 |                 fprintf(stderr, "%s: garbage %s\n", progname, msg);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:111:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  111 |                 fprintf(stderr, "%s: garbage %s\n", progname, msg);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:113:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  113 |                 fprintf(stderr, "%s:%s register ", progname, msg);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:113:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  113 |                 fprintf(stderr, "%s:%s register ", progname, msg);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:138:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  138 |                 strncpy(tmpstr, s, len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:138:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  138 |                 strncpy(tmpstr, s, len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmisc.c:164:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |         if (newline_p == DC_WITHNL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  165 |                 putchar ('\n');[0m
      | [0;1;32m                               
[0m[1mmisc.c:174:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |         if (value.dc_type!=DC_NUMBER && value.dc_type!=DC_STRING)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  175 |                 dc_garbage("in value being duplicated", -1);[0m
      | [0;1;32m                                                            
[0m[1mmisc.c:176:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |         if (value.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  177 |                 return dc_dup_num(value.v.number);[0m
      | [0;1;32m                                                  
[0m14 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 7/20][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpx69gsj68.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/warranty.c
[1mwarranty.c:56:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   56 | warranty(prefix)[0m
      | [0;1;32m^
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 8/20][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmp_kqhvib9.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/global.c
[ 9/20][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmp7j_nxdl4.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/bc.c
[1mbc.c:1282:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1282 |   if (!yymsg)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1283 |     yymsg = "Deleting";[0m
      | [0;1;32m                       
[0m[1mbc.c:1407:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1407 |       if (YYMAXDEPTH <= yystacksize)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1408 |         goto yyexhaustedlab;[0m
      | [0;1;32m                            
[0m[1mbc.c:1410:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1410 |       if (YYMAXDEPTH < yystacksize)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1411 |         yystacksize = YYMAXDEPTH;[0m
      | [0;1;32m                                 
[0m[1mbc.c:1417:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1417 |         if (! yyptr)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1418 |           goto yyexhaustedlab;[0m
      | [0;1;32m                              
[0m[1mbc.c:1422:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1422 |         if (yyss1 != yyssa)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1423 |           YYSTACK_FREE (yyss1);[0m
      | [0;1;32m                               
[0m[1mbc.c:1434:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1434 |       if (yyss + yystacksize - 1 <= yyssp)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1435 |         YYABORT;[0m
      | [0;1;32m                
[0m[1mbc.c:1440:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1440 |   if (yystate == YYFINAL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1441 |     YYACCEPT;[0m
      | [0;1;32m             
[0m[1mbc.c:1455:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1455 |   if (yypact_value_is_default (yyn))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1456 |     goto yydefault;[0m
      | [0;1;32m                   
[0m[1mbc.c:1481:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1481 |   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1482 |     goto yydefault;[0m
      | [0;1;32m                   
[0m[1mbc.c:1486:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1486 |       if (yytable_value_is_error (yyn))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1487 |         goto yyerrlab;[0m
      | [0;1;32m                      
[0m[1mbc.c:1494:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |   if (yyerrstatus)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1495 |     yyerrstatus--;[0m
      | [0;1;32m                  
[0m[1mbc.c:1516:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1516 |   if (yyn == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1517 |     goto yyerrlab;[0m
      | [0;1;32m                  
[0m[1mbc.c:1544:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1544 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1545 |                               (yyval.i_value) = 0;[0m
 1546 |                               if (interactive && !quiet)[0m
 1547 |                                 {[0m
 1548 |                                   show_bc_version ();[0m
 1549 |                                   welcome ();[0m
 1550 |                                 }[0m
 1551 |                             }[0m
 1552 | #line 1553 "bc.c" /* yacc.c:1646  */[0m
 1553 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1557:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1557 |     { run_code (); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1558 | #line 1559 "bc.c" /* yacc.c:1646  */[0m
 1559 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1563:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1563 |     { run_code (); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1564 | #line 1565 "bc.c" /* yacc.c:1646  */[0m
 1565 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1569:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1569 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1570 |                               yyerrok;[0m
 1571 |                               init_gen ();[0m
 1572 |                             }[0m
 1573 | #line 1574 "bc.c" /* yacc.c:1646  */[0m
 1574 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1578:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1578 |     { ct_warn ("newline not allowed"); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1579 | #line 1580 "bc.c" /* yacc.c:1646  */[0m
 1580 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1584:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1584 |     { (yyval.i_value) = 0; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1585 | #line 1586 "bc.c" /* yacc.c:1646  */[0m
 1586 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1590:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1590 |     { (yyval.i_value) = 0; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1591 | #line 1592 "bc.c" /* yacc.c:1646  */[0m
 1592 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1596:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1596 |     { (yyval.i_value) = (yyvsp[0].i_value); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1597 | #line 1598 "bc.c" /* yacc.c:1646  */[0m
 1598 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1602:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1602 |     { warranty (""); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1603 | #line 1604 "bc.c" /* yacc.c:1646  */[0m
 1604 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1608:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1608 |     { limits (); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1609 | #line 1610 "bc.c" /* yacc.c:1646  */[0m
 1610 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1614:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1614 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1615 |                               if ((yyvsp[0].i_value) & EX_COMP)[0m
 1616 |                                 ct_warn ("comparison in expression");[0m
 1617 |                               if ((yyvsp[0].i_value) & EX_REG)[0m
 1618 |                                 generate ("W");[0m
 1619 |                               else [0m
 1620 |                                 generate ("p");[0m
 1621 |                             }[0m
 1622 | #line 1623 "bc.c" /* yacc.c:1646  */[0m
 1623 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1615:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1615 |                               if ((yyvsp[0].i_value) & EX_COMP)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1616 |                                 ct_warn ("comparison in expression");[0m
      | [0;1;32m                                                                     
[0m[1mbc.c:1617:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1617 |                               if ((yyvsp[0].i_value) & EX_REG)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1618 |                                 generate ("W");[0m
 1619 |                               else [0m
      | [0;32m                              } 
[0m[1mbc.c:1619:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1619 |                               else [0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1620 |                                 generate ("p");[0m
      | [0;1;32m                                               
[0m[1mbc.c:1627:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1627 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1628 |                               (yyval.i_value) = 0;[0m
 1629 |                               generate ("w");[0m
 1630 |                               generate ((yyvsp[0].s_value));[0m
 1631 |                               free ((yyvsp[0].s_value));[0m
 1632 |                             }[0m
 1633 | #line 1634 "bc.c" /* yacc.c:1646  */[0m
 1634 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1638:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1638 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1639 |                               if (break_label == 0)[0m
 1640 |                                 yyerror ("Break outside a for/while");[0m
 1641 |                               else[0m
 1642 |                                 {[0m
 1643 |                                   snprintf (genstr, genlen, "J%1d:",[0m
 1644 |                                             break_label);[0m
 1645 |                                   generate (genstr);[0m
 1646 |                                 }[0m
 1647 |                             }[0m
 1648 | #line 1649 "bc.c" /* yacc.c:1646  */[0m
 1649 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1639:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1639 |                               if (break_label == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1640 |                                 yyerror ("Break outside a for/while");[0m
 1641 |                               else[0m
      | [0;32m                              } 
[0m[1mbc.c:1653:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1653 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1654 |                               ct_warn ("Continue statement");[0m
 1655 |                               if (continue_label == 0)[0m
 1656 |                                 yyerror ("Continue outside a for");[0m
 1657 |                               else[0m
 1658 |                                 {[0m
 1659 |                                   snprintf (genstr, genlen, "J%1d:", [0m
 1660 |                                             continue_label);[0m
 1661 |                                   generate (genstr);[0m
 1662 |                                 }[0m
 1663 |                             }[0m
 1664 | #line 1665 "bc.c" /* yacc.c:1646  */[0m
 1665 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1655:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1655 |                               if (continue_label == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1656 |                                 yyerror ("Continue outside a for");[0m
 1657 |                               else[0m
      | [0;32m                              } 
[0m[1mbc.c:1669:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1669 |     { bc_exit (0); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1670 | #line 1671 "bc.c" /* yacc.c:1646  */[0m
 1671 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1675:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1675 |     { generate ("h"); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1676 | #line 1677 "bc.c" /* yacc.c:1646  */[0m
 1677 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1681:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1681 |     { generate ("R"); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1682 | #line 1683 "bc.c" /* yacc.c:1646  */[0m
 1683 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1687:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1687 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1688 |                               (yyvsp[0].i_value) = break_label; [0m
 1689 |                               break_label = next_label++;[0m
 1690 |                             }[0m
 1691 | #line 1692 "bc.c" /* yacc.c:1646  */[0m
 1692 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1696:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1696 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1697 |                               if ((yyvsp[-1].i_value) & EX_COMP)[0m
 1698 |                                 ct_warn ("Comparison in first for expression");[0m
 1699 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 1700 |                                 yyerror ("first expression is void");[0m
 1701 |                               if (!((yyvsp[-1].i_value) & EX_EMPTY))[0m
 1702 |                                 generate ("p");[0m
 1703 |                               (yyvsp[-1].i_value) = next_label++;[0m
 1704 |                               snprintf (genstr, genlen, "N%1d:", (yyvsp[-1].i_value));[0m
 1705 |                               generate (genstr);[0m
 1706 |                             }[0m
 1707 | #line 1708 "bc.c" /* yacc.c:1646  */[0m
 1708 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1697:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1697 |                               if ((yyvsp[-1].i_value) & EX_COMP)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1698 |                                 ct_warn ("Comparison in first for expression");[0m
      | [0;1;32m                                                                               
[0m[1mbc.c:1699:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1699 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1700 |                                 yyerror ("first expression is void");[0m
      | [0;1;32m                                                                     
[0m[1mbc.c:1701:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1701 |                               if (!((yyvsp[-1].i_value) & EX_EMPTY))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1702 |                                 generate ("p");[0m
      | [0;1;32m                                               
[0m[1mbc.c:1712:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1712 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1713 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 1714 |                                 yyerror ("second expression is void");[0m
 1715 |                               if ((yyvsp[-1].i_value) & EX_EMPTY ) generate ("1");[0m
 1716 |                               (yyvsp[-1].i_value) = next_label++;[0m
 1717 |                               snprintf (genstr, genlen, "B%1d:J%1d:", (yyvsp[-1].i_value),[0m
 1718 |                                         break_label);[0m
 1719 |                               generate (genstr);[0m
 1720 |                               (yyval.i_value) = continue_label;[0m
 1721 |                               continue_label = next_label++;[0m
 1722 |                               snprintf (genstr, genlen, "N%1d:", [0m
 1723 |                                         continue_label);[0m
 1724 |                               generate (genstr);[0m
 1725 |                             }[0m
 1726 | #line 1727 "bc.c" /* yacc.c:1646  */[0m
 1727 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1713:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1713 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1714 |                                 yyerror ("second expression is void");[0m
      | [0;1;32m                                                                      
[0m[1mbc.c:1715:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1715 |                               if ((yyvsp[-1].i_value) & EX_EMPTY ) generate ("1");[0m
      | [0;1;32m                                                                  ^               
[0m      | [0;32m                                                                   {
[0m[1mbc.c:1731:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1731 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1732 |                               if ((yyvsp[-1].i_value) & EX_COMP)[0m
 1733 |                                 ct_warn ("Comparison in third for expression");[0m
 1734 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 1735 |                                 yyerror ("third expression is void");[0m
 1736 |                               if ((yyvsp[-1].i_value) & EX_EMPTY)[0m
 1737 |                                 snprintf (genstr, genlen, "J%1d:N%1d:", (yyvsp[-7].i_value), (yyvsp[-4].i_value));[0m
 1738 |                               else[0m
 1739 |                                 snprintf (genstr, genlen, "pJ%1d:N%1d:", (yyvsp[-7].i_value), (yyvsp[-4].i_value));[0m
 1740 |                               generate (genstr);[0m
 1741 |                             }[0m
 1742 | #line 1743 "bc.c" /* yacc.c:1646  */[0m
 1743 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1732:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1732 |                               if ((yyvsp[-1].i_value) & EX_COMP)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1733 |                                 ct_warn ("Comparison in third for expression");[0m
      | [0;1;32m                                                                               
[0m[1mbc.c:1734:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1734 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1735 |                                 yyerror ("third expression is void");[0m
      | [0;1;32m                                                                     
[0m[1mbc.c:1736:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1736 |                               if ((yyvsp[-1].i_value) & EX_EMPTY)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1737 |                                 snprintf (genstr, genlen, "J%1d:N%1d:", (yyvsp[-7].i_value), (yyvsp[-4].i_value));[0m
 1738 |                               else[0m
      | [0;32m                              } 
[0m[1mbc.c:1738:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1738 |                               else[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1739 |                                 snprintf (genstr, genlen, "pJ%1d:N%1d:", (yyvsp[-7].i_value), (yyvsp[-4].i_value));[0m
      | [0;1;32m                                                                                                                   
[0m[1mbc.c:1747:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1747 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1748 |                               snprintf (genstr, genlen, "J%1d:N%1d:",[0m
 1749 |                                        continue_label, break_label);[0m
 1750 |                               generate (genstr);[0m
 1751 |                               break_label = (yyvsp[-13].i_value);[0m
 1752 |                               continue_label = (yyvsp[-5].i_value);[0m
 1753 |                             }[0m
 1754 | #line 1755 "bc.c" /* yacc.c:1646  */[0m
 1755 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1759:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1759 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1760 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 1761 |                                 yyerror ("void expression");[0m
 1762 |                               (yyvsp[-1].i_value) = if_label;[0m
 1763 |                               if_label = next_label++;[0m
 1764 |                               snprintf (genstr, genlen, "Z%1d:", if_label);[0m
 1765 |                               generate (genstr);[0m
 1766 |                             }[0m
 1767 | #line 1768 "bc.c" /* yacc.c:1646  */[0m
 1768 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1760:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1760 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1761 |                                 yyerror ("void expression");[0m
      | [0;1;32m                                                            
[0m[1mbc.c:1772:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1772 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1773 |                               snprintf (genstr, genlen, "N%1d:", if_label); [0m
 1774 |                               generate (genstr);[0m
 1775 |                               if_label = (yyvsp[-5].i_value);[0m
 1776 |                             }[0m
 1777 | #line 1778 "bc.c" /* yacc.c:1646  */[0m
 1778 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1782:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1782 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1783 |                               (yyvsp[0].i_value) = continue_label;[0m
 1784 |                               continue_label = next_label++;[0m
 1785 |                               snprintf (genstr, genlen, "N%1d:", [0m
 1786 |                                         continue_label);[0m
 1787 |                               generate (genstr);[0m
 1788 |                             }[0m
 1789 | #line 1790 "bc.c" /* yacc.c:1646  */[0m
 1790 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1794:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1794 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1795 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
 1796 |                                 yyerror ("void expression");[0m
 1797 |                               (yyvsp[0].i_value) = break_label; [0m
 1798 |                               break_label = next_label++;[0m
 1799 |                               snprintf (genstr, genlen, "Z%1d:", break_label);[0m
 1800 |                               generate (genstr);[0m
 1801 |                             }[0m
 1802 | #line 1803 "bc.c" /* yacc.c:1646  */[0m
 1803 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1795:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1795 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1796 |                                 yyerror ("void expression");[0m
      | [0;1;32m                                                            
[0m[1mbc.c:1807:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1807 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1808 |                               snprintf (genstr, genlen, "J%1d:N%1d:", [0m
 1809 |                                         continue_label, break_label);[0m
 1810 |                               generate (genstr);[0m
 1811 |                               break_label = (yyvsp[-4].i_value);[0m
 1812 |                               continue_label = (yyvsp[-7].i_value);[0m
 1813 |                             }[0m
 1814 | #line 1815 "bc.c" /* yacc.c:1646  */[0m
 1815 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1819:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1819 |     { (yyval.i_value) = 0; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1820 | #line 1821 "bc.c" /* yacc.c:1646  */[0m
 1821 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1825:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1825 |     {  ct_warn ("print statement"); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1826 | #line 1827 "bc.c" /* yacc.c:1646  */[0m
 1827 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1831:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1831 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1832 |                               generate ("O");[0m
 1833 |                               generate ((yyvsp[0].s_value));[0m
 1834 |                               free ((yyvsp[0].s_value));[0m
 1835 |                             }[0m
 1836 | #line 1837 "bc.c" /* yacc.c:1646  */[0m
 1837 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1841:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1841 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1842 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
 1843 |                                 yyerror ("void expression in print");[0m
 1844 |                               generate ("P");[0m
 1845 |                             }[0m
 1846 | #line 1847 "bc.c" /* yacc.c:1646  */[0m
 1847 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1842:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1842 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1843 |                                 yyerror ("void expression in print");[0m
      | [0;1;32m                                                                     
[0m[1mbc.c:1851:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1851 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1852 |                               ct_warn ("else clause in if statement");[0m
 1853 |                               (yyvsp[0].i_value) = next_label++;[0m
 1854 |                               snprintf (genstr, genlen, "J%d:N%1d:", (yyvsp[0].i_value),[0m
 1855 |                                         if_label); [0m
 1856 |                               generate (genstr);[0m
 1857 |                               if_label = (yyvsp[0].i_value);[0m
 1858 |                             }[0m
 1859 | #line 1860 "bc.c" /* yacc.c:1646  */[0m
 1860 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1864:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1864 |     { char *params, *autos;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mbc.c:1886:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1886 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1887 |                               generate ("0R]");[0m
 1888 |                               next_label = (yyvsp[-12].i_value);[0m
 1889 |                               cur_func = -1;[0m
 1890 |                             }[0m
 1891 | #line 1892 "bc.c" /* yacc.c:1646  */[0m
 1892 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1896:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1896 |     { (yyval.i_value) = 0; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1897 | #line 1898 "bc.c" /* yacc.c:1646  */[0m
 1898 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1902:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1902 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1903 |                               (yyval.i_value) = 1;[0m
 1904 |                               ct_warn ("void functions");[0m
 1905 |                             }[0m
 1906 | #line 1907 "bc.c" /* yacc.c:1646  */[0m
 1907 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1911:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1911 |     { (yyval.a_value) = NULL; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1912 | #line 1913 "bc.c" /* yacc.c:1646  */[0m
 1913 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1917:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1917 |     { (yyval.a_value) = NULL; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1918 | #line 1919 "bc.c" /* yacc.c:1646  */[0m
 1919 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1923:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1923 |     { (yyval.a_value) = (yyvsp[-1].a_value); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1924 | #line 1925 "bc.c" /* yacc.c:1646  */[0m
 1925 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1929:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1929 |     { (yyval.a_value) = (yyvsp[-1].a_value); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1930 | #line 1931 "bc.c" /* yacc.c:1646  */[0m
 1931 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1935:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1935 |     { (yyval.a_value) = nextarg (NULL, lookup ((yyvsp[0].s_value),SIMPLE), FALSE);}[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1936 | #line 1937 "bc.c" /* yacc.c:1646  */[0m
 1937 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1941:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1941 |     { (yyval.a_value) = nextarg (NULL, lookup ((yyvsp[-2].s_value),ARRAY), FALSE); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1942 | #line 1943 "bc.c" /* yacc.c:1646  */[0m
 1943 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1947:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1947 |     { (yyval.a_value) = nextarg (NULL, lookup ((yyvsp[-2].s_value),ARRAY), TRUE);[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1948 |                               ct_warn ("Call by variable arrays");[0m
 1949 |                             }[0m
 1950 | #line 1951 "bc.c" /* yacc.c:1646  */[0m
 1951 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1955:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1955 |     { (yyval.a_value) = nextarg (NULL, lookup ((yyvsp[-2].s_value),ARRAY), TRUE);[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1956 |                               ct_warn ("Call by variable arrays");[0m
 1957 |                             }[0m
 1958 | #line 1959 "bc.c" /* yacc.c:1646  */[0m
 1959 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1963:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1963 |     { (yyval.a_value) = nextarg ((yyvsp[-2].a_value), lookup ((yyvsp[0].s_value),SIMPLE), FALSE); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1964 | #line 1965 "bc.c" /* yacc.c:1646  */[0m
 1965 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1969:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1969 |     { (yyval.a_value) = nextarg ((yyvsp[-4].a_value), lookup ((yyvsp[-2].s_value),ARRAY), FALSE); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1970 | #line 1971 "bc.c" /* yacc.c:1646  */[0m
 1971 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1975:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1975 |     { (yyval.a_value) = nextarg ((yyvsp[-5].a_value), lookup ((yyvsp[-2].s_value),ARRAY), TRUE);[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1976 |                               ct_warn ("Call by variable arrays");[0m
 1977 |                             }[0m
 1978 | #line 1979 "bc.c" /* yacc.c:1646  */[0m
 1979 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1983:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1983 |     { (yyval.a_value) = nextarg ((yyvsp[-5].a_value), lookup ((yyvsp[-2].s_value),ARRAY), TRUE);[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1984 |                               ct_warn ("Call by variable arrays");[0m
 1985 |                             }[0m
 1986 | #line 1987 "bc.c" /* yacc.c:1646  */[0m
 1987 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1991:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1991 |     { (yyval.a_value) = NULL; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1992 | #line 1993 "bc.c" /* yacc.c:1646  */[0m
 1993 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1997:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1997 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1998 |                               if ((yyvsp[0].i_value) & EX_COMP)[0m
 1999 |                                 ct_warn ("comparison in argument");[0m
 2000 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
 2001 |                                 yyerror ("void argument");[0m
 2002 |                               (yyval.a_value) = nextarg (NULL,0,FALSE);[0m
 2003 |                             }[0m
 2004 | #line 2005 "bc.c" /* yacc.c:1646  */[0m
 2005 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:1998:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1998 |                               if ((yyvsp[0].i_value) & EX_COMP)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1999 |                                 ct_warn ("comparison in argument");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2000:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2000 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2001 |                                 yyerror ("void argument");[0m
      | [0;1;32m                                                          
[0m[1mbc.c:2009:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2009 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2010 |                               snprintf (genstr, genlen, "K%d:",[0m
 2011 |                                         -lookup ((yyvsp[-2].s_value),ARRAY));[0m
 2012 |                               generate (genstr);[0m
 2013 |                               (yyval.a_value) = nextarg (NULL,1,FALSE);[0m
 2014 |                             }[0m
 2015 | #line 2016 "bc.c" /* yacc.c:1646  */[0m
 2016 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2020:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2020 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2021 |                               if ((yyvsp[0].i_value) & EX_COMP)[0m
 2022 |                                 ct_warn ("comparison in argument");[0m
 2023 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
 2024 |                                 yyerror ("void argument");[0m
 2025 |                               (yyval.a_value) = nextarg ((yyvsp[-2].a_value),0,FALSE);[0m
 2026 |                             }[0m
 2027 | #line 2028 "bc.c" /* yacc.c:1646  */[0m
 2028 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2021:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2021 |                               if ((yyvsp[0].i_value) & EX_COMP)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2022 |                                 ct_warn ("comparison in argument");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2023:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2023 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2024 |                                 yyerror ("void argument");[0m
      | [0;1;32m                                                          
[0m[1mbc.c:2032:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2032 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2033 |                               snprintf (genstr, genlen, "K%d:", [0m
 2034 |                                         -lookup ((yyvsp[-2].s_value),ARRAY));[0m
 2035 |                               generate (genstr);[0m
 2036 |                               (yyval.a_value) = nextarg ((yyvsp[-4].a_value),1,FALSE);[0m
 2037 |                             }[0m
 2038 | #line 2039 "bc.c" /* yacc.c:1646  */[0m
 2039 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2043:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2043 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2044 |                               (yyval.i_value) = EX_EMPTY;[0m
 2045 |                               ct_warn ("Missing expression in for statement");[0m
 2046 |                             }[0m
 2047 | #line 2048 "bc.c" /* yacc.c:1646  */[0m
 2048 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2052:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2052 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2053 |                               (yyval.i_value) = 0;[0m
 2054 |                               generate ("0");[0m
 2055 |                               if (cur_func == -1)[0m
 2056 |                                 yyerror("Return outside of a function.");[0m
 2057 |                             }[0m
 2058 | #line 2059 "bc.c" /* yacc.c:1646  */[0m
 2059 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2055:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2055 |                               if (cur_func == -1)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2056 |                                 yyerror("Return outside of a function.");[0m
      | [0;1;32m                                                                         
[0m[1mbc.c:2063:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2063 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2064 |                               if ((yyvsp[0].i_value) & EX_COMP)[0m
 2065 |                                 ct_warn ("comparison in return expresion");[0m
 2066 |                               if (!((yyvsp[0].i_value) & EX_PAREN))[0m
 2067 |                                 ct_warn ("return expression requires parenthesis");[0m
 2068 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
 2069 |                                 yyerror("return requires non-void expression");[0m
 2070 |                               if (cur_func == -1)[0m
 2071 |                                 yyerror("Return outside of a function.");[0m
 2072 |                               else if (functions[cur_func].f_void)[0m
 2073 |                                 yyerror("Return expression in a void function.");[0m
 2074 |                             }[0m
 2075 | #line 2076 "bc.c" /* yacc.c:1646  */[0m
 2076 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2064:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2064 |                               if ((yyvsp[0].i_value) & EX_COMP)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2065 |                                 ct_warn ("comparison in return expresion");[0m
      | [0;1;32m                                                                           
[0m[1mbc.c:2066:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2066 |                               if (!((yyvsp[0].i_value) & EX_PAREN))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 2067 |                                 ct_warn ("return expression requires parenthesis");[0m
      | [0;1;32m                                                                                   
[0m[1mbc.c:2068:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2068 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2069 |                                 yyerror("return requires non-void expression");[0m
      | [0;1;32m                                                                               
[0m[1mbc.c:2070:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2070 |                               if (cur_func == -1)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2071 |                                 yyerror("Return outside of a function.");[0m
 2072 |                               else if (functions[cur_func].f_void)[0m
      | [0;32m                              } 
[0m[1mbc.c:2072:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2072 |                               else if (functions[cur_func].f_void)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 2073 |                                 yyerror("Return expression in a void function.");[0m
      | [0;1;32m                                                                                 
[0m[1mbc.c:2080:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2080 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2081 |                               if ((yyvsp[0].c_value) != '=')[0m
 2082 |                                 {[0m
 2083 |                                   if ((yyvsp[-1].i_value) < 0)[0m
 2084 |                                     snprintf (genstr, genlen, "DL%d:", -(yyvsp[-1].i_value));[0m
 2085 |                                   else[0m
 2086 |                                     snprintf (genstr, genlen, "l%d:", (yyvsp[-1].i_value));[0m
 2087 |                                   generate (genstr);[0m
 2088 |                                 }[0m
 2089 |                             }[0m
 2090 | #line 2091 "bc.c" /* yacc.c:1646  */[0m
 2091 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2083:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2083 |                                   if ((yyvsp[-1].i_value) < 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2084 |                                     snprintf (genstr, genlen, "DL%d:", -(yyvsp[-1].i_value));[0m
 2085 |                                   else[0m
      | [0;32m                                  } 
[0m[1mbc.c:2085:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2085 |                                   else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2086 |                                     snprintf (genstr, genlen, "l%d:", (yyvsp[-1].i_value));[0m
      | [0;1;32m                                                                                           
[0m[1mbc.c:2095:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2095 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mbc.c:2096:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2096 |                               if ((yyvsp[0].i_value) & EX_ASSGN)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2097 |                                 ct_warn("comparison in assignment");[0m
      | [0;1;32m                                                                    
[0m[1mbc.c:2098:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2098 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2099 |                                 yyerror("Assignment of a void expression");[0m
      | [0;1;32m                                                                           
[0m[1mbc.c:2105:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2105 |                               if ((yyvsp[-3].i_value) < 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2106 |                                 snprintf (genstr, genlen, "S%d:", -(yyvsp[-3].i_value));[0m
 2107 |                               else[0m
      | [0;32m                              } 
[0m[1mbc.c:2107:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2107 |                               else[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2108 |                                 snprintf (genstr, genlen, "s%d:", (yyvsp[-3].i_value));[0m
      | [0;1;32m                                                                                       
[0m[1mbc.c:2117:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2117 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2118 |                               ct_warn("&& operator");[0m
 2119 |                               (yyvsp[0].i_value) = next_label++;[0m
 2120 |                               snprintf (genstr, genlen, "DZ%d:p", (yyvsp[0].i_value));[0m
 2121 |                               generate (genstr);[0m
 2122 |                             }[0m
 2123 | #line 2124 "bc.c" /* yacc.c:1646  */[0m
 2124 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2128:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2128 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2129 |                               if (((yyvsp[-3].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
 2130 |                                 yyerror ("void expression with &&");[0m
 2131 |                               snprintf (genstr, genlen, "DZ%d:p1N%d:", (yyvsp[-2].i_value), (yyvsp[-2].i_value));[0m
 2132 |                               generate (genstr);[0m
 2133 |                               (yyval.i_value) = ((yyvsp[-3].i_value) | (yyvsp[0].i_value)) & ~EX_PAREN;[0m
 2134 |                             }[0m
 2135 | #line 2136 "bc.c" /* yacc.c:1646  */[0m
 2136 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2129:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2129 |                               if (((yyvsp[-3].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2130 |                                 yyerror ("void expression with &&");[0m
      | [0;1;32m                                                                    
[0m[1mbc.c:2140:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2140 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2141 |                               ct_warn("|| operator");[0m
 2142 |                               (yyvsp[0].i_value) = next_label++;[0m
 2143 |                               snprintf (genstr, genlen, "B%d:", (yyvsp[0].i_value));[0m
 2144 |                               generate (genstr);[0m
 2145 |                             }[0m
 2146 | #line 2147 "bc.c" /* yacc.c:1646  */[0m
 2147 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2151:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2151 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2152 |                               int tmplab;[0m
 2153 |                               if (((yyvsp[-3].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
 2154 |                                 yyerror ("void expression with ||");[0m
 2155 |                               tmplab = next_label++;[0m
 2156 |                               snprintf (genstr, genlen, "B%d:0J%d:N%d:1N%d:",[0m
 2157 |                                        (yyvsp[-2].i_value), tmplab, (yyvsp[-2].i_value), tmplab);[0m
 2158 |                               generate (genstr);[0m
 2159 |                               (yyval.i_value) = ((yyvsp[-3].i_value) | (yyvsp[0].i_value)) & ~EX_PAREN;[0m
 2160 |                             }[0m
 2161 | #line 2162 "bc.c" /* yacc.c:1646  */[0m
 2162 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2153:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2153 |                               if (((yyvsp[-3].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2154 |                                 yyerror ("void expression with ||");[0m
      | [0;1;32m                                                                    
[0m[1mbc.c:2166:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2166 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2167 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
 2168 |                                 yyerror ("void expression with !");[0m
 2169 |                               (yyval.i_value) = (yyvsp[0].i_value) & ~EX_PAREN;[0m
 2170 |                               ct_warn("! operator");[0m
 2171 |                               generate ("!");[0m
 2172 |                             }[0m
 2173 | #line 2174 "bc.c" /* yacc.c:1646  */[0m
 2174 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2167:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2167 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2168 |                                 yyerror ("void expression with !");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2178:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2178 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mbc.c:2179:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2179 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2180 |                                 yyerror ("void expression with comparison");[0m
      | [0;1;32m                                                                            
[0m[1mbc.c:2185:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2185 |                                   generate ("=");[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                  {
[0m 2186 |                                   break;[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mbc.c:2189:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2189 |                                   generate ("#");[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                  {
[0m 2190 |                                   break;[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mbc.c:2193:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2193 |                                   if ((yyvsp[-1].s_value)[1] == '=')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                  {
[0m 2194 |                                     generate ("{");[0m
 2195 |                                   else[0m
 2196 |                                     generate ("<");[0m
 2197 |                                   break;[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mbc.c:2193:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2193 |                                   if ((yyvsp[-1].s_value)[1] == '=')[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2194 |                                     generate ("{");[0m
 2195 |                                   else[0m
      | [0;32m                                  } 
[0m[1mbc.c:2195:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2195 |                                   else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2196 |                                     generate ("<");[0m
      | [0;1;32m                                                   
[0m[1mbc.c:2200:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2200 |                                   if ((yyvsp[-1].s_value)[1] == '=')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                  {
[0m 2201 |                                     generate ("}");[0m
 2202 |                                   else[0m
 2203 |                                     generate (">");[0m
 2204 |                                   break;[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mbc.c:2200:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2200 |                                   if ((yyvsp[-1].s_value)[1] == '=')[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2201 |                                     generate ("}");[0m
 2202 |                                   else[0m
      | [0;32m                                  } 
[0m[1mbc.c:2202:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2202 |                                   else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2203 |                                     generate (">");[0m
      | [0;1;32m                                                   
[0m[1mbc.c:2213:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2213 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2214 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
 2215 |                                 yyerror ("void expression with +");[0m
 2216 |                               generate ("+");[0m
 2217 |                               (yyval.i_value) = ((yyvsp[-2].i_value) | (yyvsp[0].i_value)) & ~EX_PAREN;[0m
 2218 |                             }[0m
 2219 | #line 2220 "bc.c" /* yacc.c:1646  */[0m
 2220 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2214:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2214 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2215 |                                 yyerror ("void expression with +");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2224:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2224 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2225 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
 2226 |                                 yyerror ("void expression with -");[0m
 2227 |                               generate ("-");[0m
 2228 |                               (yyval.i_value) = ((yyvsp[-2].i_value) | (yyvsp[0].i_value)) & ~EX_PAREN;[0m
 2229 |                             }[0m
 2230 | #line 2231 "bc.c" /* yacc.c:1646  */[0m
 2231 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2225:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2225 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2226 |                                 yyerror ("void expression with -");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2235:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2235 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2236 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
 2237 |                                 yyerror ("void expression with *");[0m
 2238 |                               generate ("*");[0m
 2239 |                               (yyval.i_value) = ((yyvsp[-2].i_value) | (yyvsp[0].i_value)) & ~EX_PAREN;[0m
 2240 |                             }[0m
 2241 | #line 2242 "bc.c" /* yacc.c:1646  */[0m
 2242 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2236:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2236 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2237 |                                 yyerror ("void expression with *");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2246:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2246 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2247 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
 2248 |                                 yyerror ("void expression with /");[0m
 2249 |                               generate ("/");[0m
 2250 |                               (yyval.i_value) = ((yyvsp[-2].i_value) | (yyvsp[0].i_value)) & ~EX_PAREN;[0m
 2251 |                             }[0m
 2252 | #line 2253 "bc.c" /* yacc.c:1646  */[0m
 2253 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2247:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2247 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2248 |                                 yyerror ("void expression with /");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2257:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2257 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2258 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
 2259 |                                 yyerror ("void expression with %");[0m
 2260 |                               generate ("%");[0m
 2261 |                               (yyval.i_value) = ((yyvsp[-2].i_value) | (yyvsp[0].i_value)) & ~EX_PAREN;[0m
 2262 |                             }[0m
 2263 | #line 2264 "bc.c" /* yacc.c:1646  */[0m
 2264 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2258:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2258 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2259 |                                 yyerror ("void expression with %");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2268:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2268 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2269 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
 2270 |                                 yyerror ("void expression with ^");[0m
 2271 |                               generate ("^");[0m
 2272 |                               (yyval.i_value) = ((yyvsp[-2].i_value) | (yyvsp[0].i_value)) & ~EX_PAREN;[0m
 2273 |                             }[0m
 2274 | #line 2275 "bc.c" /* yacc.c:1646  */[0m
 2275 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2269:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2269 |                               if (((yyvsp[-2].i_value) & EX_VOID) || ((yyvsp[0].i_value) & EX_VOID))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2270 |                                 yyerror ("void expression with ^");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2279:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2279 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2280 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
 2281 |                                 yyerror ("void expression with unary -");[0m
 2282 |                               generate ("n");[0m
 2283 |                               (yyval.i_value) = (yyvsp[0].i_value) & ~EX_PAREN;[0m
 2284 |                             }[0m
 2285 | #line 2286 "bc.c" /* yacc.c:1646  */[0m
 2286 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2280:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2280 |                               if ((yyvsp[0].i_value) & EX_VOID)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2281 |                                 yyerror ("void expression with unary -");[0m
      | [0;1;32m                                                                         
[0m[1mbc.c:2290:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2290 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2291 |                               (yyval.i_value) = EX_REG;[0m
 2292 |                               if ((yyvsp[0].i_value) < 0)[0m
 2293 |                                 snprintf (genstr, genlen, "L%d:", -(yyvsp[0].i_value));[0m
 2294 |                               else[0m
 2295 |                                 snprintf (genstr, genlen, "l%d:", (yyvsp[0].i_value));[0m
 2296 |                               generate (genstr);[0m
 2297 |                             }[0m
 2298 | #line 2299 "bc.c" /* yacc.c:1646  */[0m
 2299 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2292:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2292 |                               if ((yyvsp[0].i_value) < 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2293 |                                 snprintf (genstr, genlen, "L%d:", -(yyvsp[0].i_value));[0m
 2294 |                               else[0m
      | [0;32m                              } 
[0m[1mbc.c:2294:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2294 |                               else[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2295 |                                 snprintf (genstr, genlen, "l%d:", (yyvsp[0].i_value));[0m
      | [0;1;32m                                                                                      
[0m[1mbc.c:2303:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2303 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mbc.c:2306:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2306 |                               if (len == 1 && *(yyvsp[0].s_value) == '0')[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 2307 |                                 generate ("0");[0m
 2308 |                               else if (len == 1 && *(yyvsp[0].s_value) == '1')[0m
      | [0;32m                              } 
[0m[1mbc.c:2308:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2308 |                               else if (len == 1 && *(yyvsp[0].s_value) == '1')[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2309 |                                 generate ("1");[0m
 2310 |                               else[0m
      | [0;32m                              } 
[0m[1mbc.c:2323:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2323 |     { [0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2324 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 2325 |                                 yyerror ("void expression in parenthesis");[0m
 2326 |                               (yyval.i_value) = (yyvsp[-1].i_value) | EX_REG | EX_PAREN;[0m
 2327 |                             }[0m
 2328 | #line 2329 "bc.c" /* yacc.c:1646  */[0m
 2329 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2324:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2324 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2325 |                                 yyerror ("void expression in parenthesis");[0m
      | [0;1;32m                                                                           
[0m[1mbc.c:2333:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2333 |     { int fn;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mbc.c:2335:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2335 |                               if (functions[fn].f_void)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2336 |                                 (yyval.i_value) = EX_VOID;[0m
 2337 |                               else[0m
      | [0;32m                              } 
[0m[1mbc.c:2337:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2337 |                               else[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2338 |                                 (yyval.i_value) = EX_REG;[0m
      | [0;1;32m                                                         
[0m[1mbc.c:2357:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2357 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mbc.c:2361:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2361 |                                   if ((yyvsp[-1].c_value) == '+')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2362 |                                     snprintf (genstr, genlen, "DA%d:L%d:", -(yyvsp[0].i_value), -(yyvsp[0].i_value));[0m
 2363 |                                   else[0m
      | [0;32m                                  } 
[0m[1mbc.c:2363:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2363 |                                   else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2364 |                                     snprintf (genstr, genlen, "DM%d:L%d:", -(yyvsp[0].i_value), -(yyvsp[0].i_value));[0m
      | [0;1;32m                                                                                                                     
[0m[1mbc.c:2368:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2368 |                                   if ((yyvsp[-1].c_value) == '+')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2369 |                                     snprintf (genstr, genlen, "i%d:l%d:", (yyvsp[0].i_value), (yyvsp[0].i_value));[0m
 2370 |                                   else[0m
      | [0;32m                                  } 
[0m[1mbc.c:2370:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2370 |                                   else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2371 |                                     snprintf (genstr, genlen, "d%d:l%d:", (yyvsp[0].i_value), (yyvsp[0].i_value));[0m
      | [0;1;32m                                                                                                                  
[0m[1mbc.c:2380:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2380 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mbc.c:2386:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2386 |                                   if ((yyvsp[0].c_value) == '+')[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2387 |                                     snprintf (genstr, genlen, "A%d:", -(yyvsp[-1].i_value));[0m
 2388 |                                   else[0m
      | [0;32m                                  } 
[0m[1mbc.c:2388:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2388 |                                   else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2389 |                                       snprintf (genstr, genlen, "M%d:", -(yyvsp[-1].i_value));[0m
      | [0;1;32m                                                                                              
[0m[1mbc.c:2395:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2395 |                                   if ((yyvsp[0].c_value) == '+')[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2396 |                                     snprintf (genstr, genlen, "i%d:", (yyvsp[-1].i_value));[0m
 2397 |                                   else[0m
      | [0;32m                                  } 
[0m[1mbc.c:2397:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2397 |                                   else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2398 |                                     snprintf (genstr, genlen, "d%d:", (yyvsp[-1].i_value));[0m
      | [0;1;32m                                                                                           
[0m[1mbc.c:2407:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2407 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2408 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 2409 |                                 yyerror ("void expression in length()");[0m
 2410 |                               generate ("cL");[0m
 2411 |                               (yyval.i_value) = EX_REG;[0m
 2412 |                             }[0m
 2413 | #line 2414 "bc.c" /* yacc.c:1646  */[0m
 2414 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2408:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2408 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2409 |                                 yyerror ("void expression in length()");[0m
      | [0;1;32m                                                                        
[0m[1mbc.c:2418:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2418 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2419 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 2420 |                                 yyerror ("void expression in sqrt()");[0m
 2421 |                               generate ("cR");[0m
 2422 |                               (yyval.i_value) = EX_REG;[0m
 2423 |                             }[0m
 2424 | #line 2425 "bc.c" /* yacc.c:1646  */[0m
 2425 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2419:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2419 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2420 |                                 yyerror ("void expression in sqrt()");[0m
      | [0;1;32m                                                                      
[0m[1mbc.c:2429:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2429 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2430 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 2431 |                                 yyerror ("void expression in scale()");[0m
 2432 |                               generate ("cS");[0m
 2433 |                               (yyval.i_value) = EX_REG;[0m
 2434 |                             }[0m
 2435 | #line 2436 "bc.c" /* yacc.c:1646  */[0m
 2436 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2430:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2430 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2431 |                                 yyerror ("void expression in scale()");[0m
      | [0;1;32m                                                                       
[0m[1mbc.c:2440:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2440 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2441 |                               ct_warn ("read function");[0m
 2442 |                               generate ("cI");[0m
 2443 |                               (yyval.i_value) = EX_REG;[0m
 2444 |                             }[0m
 2445 | #line 2446 "bc.c" /* yacc.c:1646  */[0m
 2446 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2450:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2450 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2451 |                               ct_warn ("random function");[0m
 2452 |                               generate ("cX");[0m
 2453 |                               (yyval.i_value) = EX_REG;[0m
 2454 |                             }[0m
 2455 | #line 2456 "bc.c" /* yacc.c:1646  */[0m
 2456 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2460:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2460 |     { (yyval.i_value) = lookup((yyvsp[0].s_value),SIMPLE); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2461 | #line 2462 "bc.c" /* yacc.c:1646  */[0m
 2462 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2466:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2466 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2467 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
 2468 |                                 yyerror("void expression as subscript");[0m
 2469 |                               if ((yyvsp[-1].i_value) & EX_COMP)[0m
 2470 |                                 ct_warn("comparison in subscript");[0m
 2471 |                               (yyval.i_value) = lookup((yyvsp[-3].s_value),ARRAY);[0m
 2472 |                             }[0m
 2473 | #line 2474 "bc.c" /* yacc.c:1646  */[0m
 2474 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2467:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2467 |                               if ((yyvsp[-1].i_value) & EX_VOID)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2468 |                                 yyerror("void expression as subscript");[0m
      | [0;1;32m                                                                        
[0m[1mbc.c:2469:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2469 |                               if ((yyvsp[-1].i_value) & EX_COMP)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2470 |                                 ct_warn("comparison in subscript");[0m
      | [0;1;32m                                                                   
[0m[1mbc.c:2478:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2478 |     { (yyval.i_value) = 0; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2479 | #line 2480 "bc.c" /* yacc.c:1646  */[0m
 2480 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2484:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2484 |     { (yyval.i_value) = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2485 | #line 2486 "bc.c" /* yacc.c:1646  */[0m
 2486 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2490:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2490 |     { (yyval.i_value) = 2; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2491 | #line 2492 "bc.c" /* yacc.c:1646  */[0m
 2492 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2496:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2496 |     { (yyval.i_value) = 3;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2497 |                               ct_warn ("History variable");[0m
 2498 |                             }[0m
 2499 | #line 2500 "bc.c" /* yacc.c:1646  */[0m
 2500 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2504:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2504 |     { (yyval.i_value) = 4;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2505 |                               ct_warn ("Last variable");[0m
 2506 |                             }[0m
 2507 | #line 2508 "bc.c" /* yacc.c:1646  */[0m
 2508 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2512:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2512 |     { ct_warn ("End of line required"); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2513 | #line 2514 "bc.c" /* yacc.c:1646  */[0m
 2514 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2518:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2518 |     { ct_warn ("Too many end of lines"); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2519 | #line 2520 "bc.c" /* yacc.c:1646  */[0m
 2520 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mbc.c:2524:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2524 |       default: break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mbc.c:2552:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2552 |   if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2553 |     yystate = yytable[yystate];[0m
 2554 |   else[0m
      | [0;32m  } 
[0m[1mbc.c:2554:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2554 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2555 |     yystate = yydefgoto[yyn - YYNTOKENS];[0m
      | [0;1;32m                                         
[0m[1mbc.c:2618:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2618 |           if (yychar == YYEOF)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2619 |             YYABORT;[0m
      | [0;1;32m                    
[0m[1mbc.c:2642:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2642 |   if (/*CONSTCOND*/ 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2643 |      goto yyerrorlab;[0m
      | [0;1;32m                     
[0m[1mbc.c:2669:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2669 |               if (0 < yyn)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2670 |                 break;[0m
      | [0;1;32m                      
[0m[1mbc.c:2675:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2675 |       if (yyssp == yyss)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2676 |         YYABORT;[0m
      | [0;1;32m                
[0m[1mbc.c:2742:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2742 |   if (yyss != yyssa)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2743 |     YYSTACK_FREE (yyss);[0m
      | [0;1;32m                        
[0m185 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[10/20][3.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpf6w7e9g5.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/dc/string.c
[1mstring.c:97:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |         if (discard_flag == DC_TOSS)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   98 |                 dc_free_str(&value);[0m
      | [0;1;32m                                    
[0m[1mstring.c:115:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  115 |         memcpy(string->s_ptr, s, len);[0m
      | [0;1;32m        ^~~~~~
[0m[1mstring.c:115:2: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  115 |         memcpy(string->s_ptr, s, len);[0m
      | [0;1;32m        ^~~~~~
[0m[1mstring.c:152:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |                 if (c == EOF)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  153 |                         break;[0m
  154 |                 else if (c == rdelim && --depth < 1)[0m
      | [0;32m                } 
[0m[1mstring.c:154:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |                 else if (c == rdelim && --depth < 1)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  155 |                         break;[0m
  156 |                 else if (c == ldelim)[0m
      | [0;32m                } 
[0m[1mstring.c:156:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |                 else if (c == ldelim)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  157 |                         ++depth;[0m
      | [0;1;32m                                
[0m[1mstring.c:165:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |                         if (line_buf == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  166 |                                 dc_memfail();[0m
      | [0;1;32m                                             
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[11/20][4.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpdr89y2xk.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/dc/stack.c
[1mstack.c:88:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:88:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   88 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:93:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   93 |                 fprintf(stderr, "%s: non-numeric value\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:93:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   93 |                 fprintf(stderr, "%s: non-numeric value\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:98:6: [0m[0;1;35mwarning: [0m[1m1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
   98 |         if ((*op)(a.v.number, b.v.number, kscale, &r.v.number) == DC_SUCCESS){[0m
      | [0;1;32m            ^     ~~~~~~~~~~
[0m[1mstack.c:87:6: [0m[0;1;36mnote: [0mAssuming 'dc_stack' is not equal to NULL[0m
   87 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~
[0m[1mstack.c:87:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mstack.c:87:28: [0m[0;1;36mnote: [0mAssuming field 'link' is not equal to NULL[0m
   87 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:87:2: [0m[0;1;36mnote: [0mTaking false branch[0m
   87 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m        ^
[0m[1mstack.c:91:6: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
   91 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:91:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mstack.c:92:7: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
   92 |                         || dc_stack->link->value.dc_type!=DC_NUMBER){[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:91:2: [0m[0;1;36mnote: [0mTaking false branch[0m
   91 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m        ^
[0m[1mstack.c:97:8: [0m[0;1;36mnote: [0mCalling 'dc_pop'[0m
   97 |         (void)dc_pop(&a);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mstack.c:376:6: [0m[0;1;36mnote: [0mAssuming 'r' is equal to NULL[0m
  376 |         if (r==NULL || r->value.dc_type==DC_UNINITIALIZED){[0m
      | [0;1;32m            ^~~~~~~
[0m[1mstack.c:376:14: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  376 |         if (r==NULL || r->value.dc_type==DC_UNINITIALIZED){[0m
      | [0;1;32m                    ^
[0m[1mstack.c:378:3: [0m[0;1;36mnote: [0mReturning without writing to '->v.number'[0m
  378 |                 return DC_FAIL;[0m
      | [0;1;32m                ^
[0m[1mstack.c:97:8: [0m[0;1;36mnote: [0mReturning from 'dc_pop'[0m
   97 |         (void)dc_pop(&a);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mstack.c:98:6: [0m[0;1;36mnote: [0m1st function call argument is an uninitialized value[0m
   98 |         if ((*op)(a.v.number, b.v.number, kscale, &r.v.number) == DC_SUCCESS){[0m
      | [0;1;32m            ^     ~~~~~~~~~~
[0m[1mstack.c:128:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  128 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:128:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  128 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:133:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  133 |                 fprintf(stderr, "%s: non-numeric value\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:133:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  133 |                 fprintf(stderr, "%s: non-numeric value\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:138:6: [0m[0;1;35mwarning: [0m[1m1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
  138 |         if ((*op)(a.v.number, b.v.number, kscale,[0m
      | [0;1;32m            ^     ~~~~~~~~~~
[0m[1mstack.c:127:6: [0m[0;1;36mnote: [0mAssuming 'dc_stack' is not equal to NULL[0m
  127 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~
[0m[1mstack.c:127:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mstack.c:127:28: [0m[0;1;36mnote: [0mAssuming field 'link' is not equal to NULL[0m
  127 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:127:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  127 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m        ^
[0m[1mstack.c:131:6: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
  131 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:131:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mstack.c:132:7: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
  132 |                         || dc_stack->link->value.dc_type!=DC_NUMBER){[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:131:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  131 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m        ^
[0m[1mstack.c:137:8: [0m[0;1;36mnote: [0mCalling 'dc_pop'[0m
  137 |         (void)dc_pop(&a);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mstack.c:376:6: [0m[0;1;36mnote: [0mAssuming 'r' is equal to NULL[0m
  376 |         if (r==NULL || r->value.dc_type==DC_UNINITIALIZED){[0m
      | [0;1;32m            ^~~~~~~
[0m[1mstack.c:376:14: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  376 |         if (r==NULL || r->value.dc_type==DC_UNINITIALIZED){[0m
      | [0;1;32m                    ^
[0m[1mstack.c:378:3: [0m[0;1;36mnote: [0mReturning without writing to '->v.number'[0m
  378 |                 return DC_FAIL;[0m
      | [0;1;32m                ^
[0m[1mstack.c:137:8: [0m[0;1;36mnote: [0mReturning from 'dc_pop'[0m
  137 |         (void)dc_pop(&a);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mstack.c:138:6: [0m[0;1;36mnote: [0m1st function call argument is an uninitialized value[0m
  138 |         if ((*op)(a.v.number, b.v.number, kscale,[0m
      | [0;1;32m            ^     ~~~~~~~~~~
[0m[1mstack.c:166:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  166 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:166:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  166 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:171:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  171 |                 fprintf(stderr, "%s: non-numeric value\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:171:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  171 |                 fprintf(stderr, "%s: non-numeric value\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:176:11: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
  176 |         result = dc_compare(b.v.number, a.v.number);[0m
      | [0;1;32m                 ^                      ~~~~~~~~~~
[0m[1mstack.c:165:6: [0m[0;1;36mnote: [0mAssuming 'dc_stack' is not equal to NULL[0m
  165 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~
[0m[1mstack.c:165:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mstack.c:165:28: [0m[0;1;36mnote: [0mAssuming field 'link' is not equal to NULL[0m
  165 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:165:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  165 |         if (dc_stack == NULL  ||  dc_stack->link == NULL){[0m
      | [0;1;32m        ^
[0m[1mstack.c:169:6: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
  169 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:169:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mstack.c:170:7: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
  170 |                         || dc_stack->link->value.dc_type!=DC_NUMBER){[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:169:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m        ^
[0m[1mstack.c:175:8: [0m[0;1;36mnote: [0mCalling 'dc_pop'[0m
  175 |         (void)dc_pop(&a);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mstack.c:376:6: [0m[0;1;36mnote: [0mAssuming 'r' is equal to NULL[0m
  376 |         if (r==NULL || r->value.dc_type==DC_UNINITIALIZED){[0m
      | [0;1;32m            ^~~~~~~
[0m[1mstack.c:376:14: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  376 |         if (r==NULL || r->value.dc_type==DC_UNINITIALIZED){[0m
      | [0;1;32m                    ^
[0m[1mstack.c:378:3: [0m[0;1;36mnote: [0mReturning without writing to '->v.number'[0m
  378 |                 return DC_FAIL;[0m
      | [0;1;32m                ^
[0m[1mstack.c:175:8: [0m[0;1;36mnote: [0mReturning from 'dc_pop'[0m
  175 |         (void)dc_pop(&a);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mstack.c:176:11: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
  176 |         result = dc_compare(b.v.number, a.v.number);[0m
      | [0;1;32m                 ^                      ~~~~~~~~~~
[0m[1mstack.c:202:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  202 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:202:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  202 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:208:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  208 |                 fprintf(stderr, "%s: non-numeric value\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:208:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  208 |                 fprintf(stderr, "%s: non-numeric value\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:214:6: [0m[0;1;35mwarning: [0m[1m1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
  214 |         if ((*op)(a.v.number, b.v.number, c.v.number,[0m
      | [0;1;32m            ^     ~~~~~~~~~~
[0m[1mstack.c:199:6: [0m[0;1;36mnote: [0mAssuming 'dc_stack' is not equal to NULL[0m
  199 |         if (dc_stack == NULL[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~
[0m[1mstack.c:199:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mstack.c:200:7: [0m[0;1;36mnote: [0mAssuming field 'link' is not equal to NULL[0m
  200 |                         || dc_stack->link == NULL[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:199:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  199 |         if (dc_stack == NULL[0m
      | [0;1;32m            ^
[0m[1mstack.c:201:7: [0m[0;1;36mnote: [0mAssuming field 'link' is not equal to NULL[0m
  201 |                         || dc_stack->link->link == NULL){[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:199:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  199 |         if (dc_stack == NULL[0m
      | [0;1;32m        ^
[0m[1mstack.c:205:6: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
  205 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:205:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mstack.c:206:7: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
  206 |                         || dc_stack->link->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:205:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  205 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m            ^
[0m[1mstack.c:207:7: [0m[0;1;36mnote: [0mAssuming field 'dc_type' is equal to DC_NUMBER[0m
  207 |                         || dc_stack->link->link->value.dc_type!=DC_NUMBER){[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mstack.c:205:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  205 |         if (dc_stack->value.dc_type!=DC_NUMBER[0m
      | [0;1;32m        ^
[0m[1mstack.c:213:8: [0m[0;1;36mnote: [0mCalling 'dc_pop'[0m
  213 |         (void)dc_pop(&a);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mstack.c:376:6: [0m[0;1;36mnote: [0m'r' is equal to NULL[0m
  376 |         if (r==NULL || r->value.dc_type==DC_UNINITIALIZED){[0m
      | [0;1;32m            ^
[0m[1mstack.c:376:14: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  376 |         if (r==NULL || r->value.dc_type==DC_UNINITIALIZED){[0m
      | [0;1;32m                    ^
[0m[1mstack.c:378:3: [0m[0;1;36mnote: [0mReturning without writing to '->v.number'[0m
  378 |                 return DC_FAIL;[0m
      | [0;1;32m                ^
[0m[1mstack.c:213:8: [0m[0;1;36mnote: [0mReturning from 'dc_pop'[0m
  213 |         (void)dc_pop(&a);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mstack.c:214:6: [0m[0;1;36mnote: [0m1st function call argument is an uninitialized value[0m
  214 |         if ((*op)(a.v.number, b.v.number, c.v.number,[0m
      | [0;1;32m            ^     ~~~~~~~~~~
[0m[1mstack.c:236:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |         for (i=0; i<DC_REGCOUNT; ++i)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  237 |                 dc_register[i] = NULL;[0m
      | [0;1;32m                                      
[0m[1mstack.c:249:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |                 if (n->value.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  250 |                         dc_free_num(&n->value.v.number);[0m
  251 |                 else if (n->value.dc_type == DC_STRING)[0m
      | [0;32m                } 
[0m[1mstack.c:251:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |                 else if (n->value.dc_type == DC_STRING)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  252 |                         dc_free_str(&n->value.v.string);[0m
  253 |                 else[0m
      | [0;32m                } 
[0m[1mstack.c:253:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  254 |                         dc_garbage("in stack", -1);[0m
      | [0;1;32m                                                   
[0m[1mstack.c:268:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |         if (value.dc_type!=DC_NUMBER && value.dc_type!=DC_STRING)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  269 |                 dc_garbage("in data being pushed", -1);[0m
      | [0;1;32m                                                       
[0m[1mstack.c:301:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  301 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:301:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  301 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:305:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                         && dc_stack->value.dc_type!=DC_STRING)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  306 |                 dc_garbage("at top of stack", -1);[0m
      | [0;1;32m                                                  
[0m[1mstack.c:329:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  329 |                 fprintf(stderr, "%s: BUG: register ", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:329:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  329 |                 fprintf(stderr, "%s: BUG: register ", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:351:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |         if (r == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  352 |                 dc_register[regid] = dc_alloc();[0m
  353 |         else if (r->value.dc_type == DC_NUMBER)[0m
      | [0;32m        } 
[0m[1mstack.c:353:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |         else if (r->value.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  354 |                 dc_free_num(&r->value.v.number);[0m
  355 |         else if (r->value.dc_type == DC_STRING)[0m
      | [0;32m        } 
[0m[1mstack.c:355:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |         else if (r->value.dc_type == DC_STRING)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  356 |                 dc_free_str(&r->value.v.string);[0m
  357 |         else if (r->value.dc_type == DC_UNINITIALIZED)[0m
      | [0;32m        } 
[0m[1mstack.c:357:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |         else if (r->value.dc_type == DC_UNINITIALIZED)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  358 |                 ;[0m
  359 |         else[0m
      | [0;32m        } 
[0m[1mstack.c:359:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  360 |                 dc_garbage("", regid);[0m
      | [0;1;32m                                      
[0m[1mstack.c:377:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  377 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:377:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  377 |                 Empty_Stack;[0m
      | [0;1;32m                ^
[0m[1mstack.c:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'Empty_Stack'[0m
   38 | #define Empty_Stack     fprintf(stderr, "%s: stack empty\n", progname)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mstack.c:380:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |         if (r->value.dc_type!=DC_NUMBER && r->value.dc_type!=DC_STRING)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  381 |                 dc_garbage("at top of stack", -1);[0m
      | [0;1;32m                                                  
[0m[1mstack.c:404:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  404 |                 fprintf(stderr, "%s: stack register ", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:404:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  404 |                 fprintf(stderr, "%s: stack register ", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mstack.c:408:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |         if (r->value.dc_type!=DC_NUMBER && r->value.dc_type!=DC_STRING)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  409 |                 dc_garbage(" stack", stackid);[0m
      | [0;1;32m                                              
[0m[1mstack.c:433:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |         if (!dc_stack || absn < 2)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  434 |                 return;[0m
      | [0;1;32m                       
[0m[1mstack.c:437:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |         for (p=dc_stack; p->link && --absn>0; p=p->link)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  438 |                 r = p;[0m
      | [0;1;32m                      
[0m[1mstack.c:440:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |         if (!r)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  441 |                 return;[0m
      | [0;1;32m                       
[0m[1mstack.c:463:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |         for (n=dc_stack; n!=NULL; n=n->link)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  464 |                 ++depth;[0m
      | [0;1;32m                        
[0m[1mstack.c:484:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |                 if (discard_p == DC_TOSS)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  485 |                         dc_free_num(&value.v.number);[0m
      | [0;1;32m                                                     
[0m[1mstack.c:488:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |                 if (discard_p == DC_TOSS)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  489 |                         dc_free_str(&value.v.string);[0m
      | [0;1;32m                                                     
[0m[1mstack.c:507:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |         for (n=dc_stack; n!=NULL; n=n->link)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  508 |                 dc_print(n->value, obase, DC_WITHNL, DC_KEEP);[0m
      | [0;1;32m                                                              
[0m[1mstack.c:533:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |         if (r == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  534 |                 r = dc_register[array_id] = dc_alloc();[0m
      | [0;1;32m                                                       
[0m39 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[12/20][15.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpox9r4zlh.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/dc/numeric.c
[1mnumeric.c:135:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  135 |                 fprintf(stderr, "%s: divide by zero\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:135:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  135 |                 fprintf(stderr, "%s: divide by zero\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:157:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  157 |                 fprintf(stderr, "%s: divide by zero\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:157:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  157 |                 fprintf(stderr, "%s: divide by zero\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:175:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  175 |                 fprintf(stderr, "%s: remainder by zero\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:175:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  175 |                 fprintf(stderr, "%s: remainder by zero\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:192:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |                 if (bc_is_zero(CastNum(mod)))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  193 |                         fprintf(stderr, "%s: remainder by zero\n", progname);[0m
      | [0;1;32m                                                                             
[0m[1mnumeric.c:193:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  193 |                         fprintf(stderr, "%s: remainder by zero\n", progname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mnumeric.c:193:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  193 |                         fprintf(stderr, "%s: remainder by zero\n", progname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mnumeric.c:227:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  227 |                 fprintf(stderr, "%s: square root of negative number\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:227:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  227 |                 fprintf(stderr, "%s: square root of negative number\n", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:260:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  260 |                 fprintf(stderr, "%s: value overflows simple integer; punting...\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:260:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  260 |                 fprintf(stderr, "%s: value overflows simple integer; punting...\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnumeric.c:264:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |         if (discard_p == DC_TOSS)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  265 |                 dc_free_num(&value);[0m
      | [0;1;32m                                    
[0m[1mnumeric.c:317:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |         while (isspace(c))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  318 |                 c = (*input)();[0m
      | [0;1;32m                               
[0m[1mnumeric.c:325:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |         while (isspace(c))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  326 |                 c = (*input)();[0m
      | [0;1;32m                               
[0m[1mnumeric.c:328:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |                 if (isdigit(c))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  329 |                         digit = c - '0';[0m
  330 |                 else if ('A' <= c && c <= 'F')[0m
      | [0;32m                } 
[0m[1mnumeric.c:330:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |                 else if ('A' <= c && c <= 'F')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  331 |                         digit = 10 + c - 'A';[0m
  332 |                 else[0m
      | [0;32m                } 
[0m[1mnumeric.c:332:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  333 |                         break;[0m
      | [0;1;32m                              
[0m[1mnumeric.c:347:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |                         if (isdigit(c))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  348 |                                 digit = c - '0';[0m
  349 |                         else if ('A' <= c && c <= 'F')[0m
      | [0;32m                        } 
[0m[1mnumeric.c:349:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |                         else if ('A' <= c && c <= 'F')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  350 |                                 digit = 10 + c - 'A';[0m
  351 |                         else[0m
      | [0;32m                        } 
[0m[1mnumeric.c:351:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  352 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mnumeric.c:363:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |         if (negative)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  364 |                 bc_sub(_zero_, result, &result, 0);[0m
      | [0;1;32m                                                   
[0m[1mnumeric.c:369:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |         if (readahead)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  370 |                 *readahead = c;[0m
      | [0;1;32m                               
[0m[1mnumeric.c:389:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |         while (1<i && *p=='\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  390 |                 --i, ++p;[0m
      | [0;1;32m                         
[0m[1mnumeric.c:405:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |         if (discard_p == DC_TOSS)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  406 |                 dc_free_num(&value);[0m
      | [0;1;32m                                    
[0m[1mnumeric.c:429:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |         if (discard_p == DC_TOSS)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  430 |                 dc_free_num(&value);[0m
      | [0;1;32m                                    
[0m[1mnumeric.c:459:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |         if (discard_p == DC_TOSS)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  460 |                 dc_free_num(&dcvalue);[0m
      | [0;1;32m                                      
[0m[1mnumeric.c:563:10: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  563 |                 while (isspace(*(const unsigned char *)endptr))[0m
      | [0;1;32m                       ^
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumeric.c:554:29: [0m[0;1;36mnote: [0mTaint originated here[0m
  554 |         const char *env_line_len = getenv("DC_LINE_LENGTH");[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumeric.c:554:29: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  554 |         const char *env_line_len = getenv("DC_LINE_LENGTH");[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumeric.c:554:29: [0m[0;1;36mnote: [0mAssuming the environment variable exists[0m
  554 |         const char *env_line_len = getenv("DC_LINE_LENGTH");[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumeric.c:557:6: [0m[0;1;36mnote: [0m'env_line_len' is non-null[0m
  557 |         if (env_line_len) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumeric.c:557:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  557 |         if (env_line_len) {[0m
      | [0;1;32m        ^
[0m[1mnumeric.c:559:28: [0m[0;1;36mnote: [0mTaint propagated to the 2nd argument[0m
  559 |                 long proposed_line_len = strtol(env_line_len, &endptr, 0);[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumeric.c:563:10: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  563 |                 while (isspace(*(const unsigned char *)endptr))[0m
      | [0;1;32m                       ^
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumeric.c:563:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |                 while (isspace(*(const unsigned char *)endptr))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  564 |                         ++endptr;[0m
      | [0;1;32m                                 
[0m[1mnumeric.c:566:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  566 |                                         || line_max < 0 || line_max == 1)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  567 |                         line_max = DEFAULT_LINE_MAX;[0m
      | [0;1;32m                                                    
[0m[1mnumeric.c:576:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  576 | out_char (ch)[0m
      | [0;1;32m^
[0m[1mnumeric.c:582:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |                 if (line_max < 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  583 |                         set_line_max_from_environment();[0m
      | [0;1;32m                                                        
[0m[1mnumeric.c:620:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  620 |         fprintf (stderr, "Runtime error: ");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnumeric.c:620:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  620 |         fprintf (stderr, "Runtime error: ");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnumeric.c:628:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  628 |         fprintf (stderr, "\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnumeric.c:628:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  628 |         fprintf (stderr, "\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnumeric.c:653:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  653 |         fprintf (stderr, "Runtime warning: ");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnumeric.c:653:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  653 |         fprintf (stderr, "Runtime warning: ");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnumeric.c:661:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  661 |         fprintf (stderr, "\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnumeric.c:661:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  661 |         fprintf (stderr, "\n");[0m
      | [0;1;32m        ^~~~~~~
[0m33 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[13/20][32.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpze7zcqhz.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/main.c
[1mmain.c:95:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |       if (optch == EOF)  /* End of arguments. */[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   96 |         break;[0m
      | [0;1;32m              
[0m[1mmain.c:101:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  101 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mmain.c:104:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  104 |           compile_only = TRUE;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  105 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:108:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  108 |           usage(argv[0]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  109 |           bc_exit (0);[0m
  110 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:113:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |           interactive = TRUE;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  114 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:117:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  117 |           use_math = TRUE;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  118 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:121:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  121 |           quiet = TRUE;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  122 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:125:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |           std_only = TRUE;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  126 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:129:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  129 |           show_bc_version ();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  130 |           bc_exit (0);[0m
  131 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:134:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |           warn_not_std = TRUE;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  135 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:138:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  138 |           usage(argv[0]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  139 |           bc_exit (1);[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mmain.c:153:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |       if (last == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  154 |         file_names = temp;[0m
  155 |       else[0m
      | [0;32m      } 
[0m[1mmain.c:155:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  156 |         last->next = temp;[0m
      | [0;1;32m                          
[0m[1mmain.c:171:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |   if (isatty(0) && isatty(1)) [0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  172 |     interactive = TRUE;[0m
      | [0;1;32m                       
[0m[1mmain.c:190:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |               while (*env_value != ' ' && *env_value != 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  191 |                 env_value++;[0m
      | [0;1;32m                            
[0m[1mmain.c:198:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  199 |             env_value++;[0m
      | [0;1;32m                        
[0m[1mmain.c:208:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |   if (getenv ("POSIXLY_CORRECT") != NULL)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  209 |     std_only = TRUE;[0m
      | [0;1;32m                    
[0m[1mmain.c:215:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |       if (line_size < 3 && line_size != 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  216 |         line_size = 70;[0m
      | [0;1;32m                       
[0m[1mmain.c:218:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  219 |     line_size = 70;[0m
      | [0;1;32m                   
[0m[1mmain.c:226:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |   if (interactive)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  227 |     signal (SIGINT, use_quit);[0m
      | [0;1;32m                              
[0m[1mmain.c:234:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |   if (!open_new_file ())[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  235 |     bc_exit (1);[0m
      | [0;1;32m                
[0m[1mmain.c:263:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (compile_only)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  264 |     printf ("\n");[0m
      | [0;1;32m                  
[0m[1mmain.c:285:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |   if (is_std_in) return (FALSE);[0m
      | [0;1;32m                ^               
[0m      | [0;32m                 {
[0m[1mmain.c:322:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  322 |       fprintf (stderr, "File %s is unavailable.\n", file_names->name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:322:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  322 |       fprintf (stderr, "File %s is unavailable.\n", file_names->name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:338:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |   if (!first_file) fclose (yyin);[0m
      | [0;1;32m                  ^              
[0m      | [0;32m                   {
[0m28 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[14/20][34.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpvjnmrigi.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/dc/dc.c
[1mdc.c:79:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   79 |         fprintf(f, "\[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdc.c:79:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   79 |         fprintf(f, "\[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdc.c:100:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |         if (p == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  101 |                 return s;[0m
      | [0;1;32m                         
[0m[1mdc.c:113:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  113 |                 fprintf(stderr, "%s: Could not open file %s\n", progname, filename);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mdc.c:113:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  113 |                 fprintf(stderr, "%s: Could not open file %s\n", progname, filename);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mdc.c:169:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  169 |                         fprintf(stderr, "%s: Could not fstat file ", progname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mdc.c:169:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  169 |                         fprintf(stderr, "%s: Could not fstat file ", progname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mdc.c:176:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  176 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mdc.c:176:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  176 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mdc.c:184:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  184 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mdc.c:184:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  184 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mdc.c:202:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  202 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mdc.c:202:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  202 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mdc.c:209:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |         if (dc_evalfile(input) != DC_SUCCESS)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  210 |                 exit(EXIT_FAILURE);[0m
      | [0;1;32m                                   
[0m[1mdc.c:212:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |         if (input != stdin)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  213 |                 fclose(input);[0m
      | [0;1;32m                              
[0m[1mdc.c:214:1: [0m[0;1;35mwarning: [0m[1mOpened stream never closed. Potential resource leak [clang-analyzer-unix.Stream][0m
  214 | }[0m
      | [0;1;32m^
[0m[1mdc.c:268:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  268 |         while ((c = getopt_long(argc, argv, "hVe:f:", long_opts, (int *)0)) != EOF) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdc.c:268:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  268 |         while ((c = getopt_long(argc, argv, "hVe:f:", long_opts, (int *)0)) != EOF) {[0m
      | [0;1;32m        ^
[0m[1mdc.c:269:3: [0m[0;1;36mnote: [0mControl jumps to 'case 102:'  at line 278[0m
  269 |                 switch (c) {[0m
      | [0;1;32m                ^
[0m[1mdc.c:279:4: [0m[0;1;36mnote: [0mCalling 'try_file'[0m
  279 |                         try_file(optarg);[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m[1mdc.c:110:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  110 |         if (strcmp(filename, "-") == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdc.c:110:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  110 |         if (strcmp(filename, "-") == 0) {[0m
      | [0;1;32m        ^
[0m[1mdc.c:112:21: [0m[0;1;36mnote: [0mStream opened here[0m
  112 |         } else if ( (input=fopen(filename, "r")) == NULL ) {[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~
[0m[1mdc.c:112:21: [0m[0;1;36mnote: [0mAssuming that 'fopen' is successful[0m
  112 |         } else if ( (input=fopen(filename, "r")) == NULL ) {[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~
[0m[1mdc.c:112:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  112 |         } else if ( (input=fopen(filename, "r")) == NULL ) {[0m
      | [0;1;32m               ^
[0m[1mdc.c:167:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  167 |             if (fstat(fileno(input), &s) == -1) {[0m
      | [0;1;32m            ^
[0m[1mdc.c:171:4: [0m[0;1;36mnote: [0mControl jumps to line 212[0m
  171 |                         goto close;[0m
      | [0;1;32m                        ^
[0m[1mdc.c:212:6: [0m[0;1;36mnote: [0mAssuming 'input' is equal to 'stdin'[0m
  212 |         if (input != stdin)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mdc.c:212:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  212 |         if (input != stdin)[0m
      | [0;1;32m        ^
[0m[1mdc.c:214:1: [0m[0;1;36mnote: [0mOpened stream never closed. Potential resource leak[0m
  214 | }[0m
      | [0;1;32m^
[0m[1mdc.c:228:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |         if (ferror(stdout))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  229 |                 errmsg = "error writing to stdout";[0m
  230 |         else if (fflush(stdout))[0m
      | [0;32m        } 
[0m[1mdc.c:230:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |         else if (fflush(stdout))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  231 |                 errmsg = "error flushing stdout";[0m
  232 |         else if (fclose(stdout))[0m
      | [0;32m        } 
[0m[1mdc.c:232:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |         else if (fclose(stdout))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  233 |                 errmsg = "error closing stdout";[0m
      | [0;1;32m                                                
[0m[1mdc.c:236:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  236 |                 fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mdc.c:236:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  236 |                 fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mdc.c:241:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |         if (ferror(stderr) || fclose(stderr))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  242 |                 r = EXIT_FAILURE;[0m
      | [0;1;32m                                 
[0m[1mdc.c:271:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  271 |                         {       dc_data string = dc_makestring(optarg, strlen(optarg));[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  272 |                                 if (dc_evalstr(&string) != DC_SUCCESS)[0m
  273 |                                         return flush_okay();[0m
  274 |                                 dc_free_str(&string.v.string);[0m
  275 |                                 did_eval = 1;[0m
  276 |                         }[0m
  277 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mdc.c:272:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |                                 if (dc_evalstr(&string) != DC_SUCCESS)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  273 |                                         return flush_okay();[0m
      | [0;1;32m                                                            
[0m[1mdc.c:279:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  279 |                         try_file(optarg);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  280 |                         did_eval = 1;[0m
  281 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mdc.c:283:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  283 |                         usage(stdout);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  284 |                         return flush_okay();[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdc.c:286:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  286 |                         show_version();[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  287 |                         return flush_okay();[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdc.c:289:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  289 |                         usage(stderr);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  290 |                         return EXIT_FAILURE;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdc.c:300:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                 if (dc_evalfile(stdin) != DC_SUCCESS)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  301 |                         return EXIT_FAILURE;[0m
      | [0;1;32m                                            
[0m25 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[15/20][44.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpvmgclvcl.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/storage.c
[1mstorage.c:147:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |   for (; indx < v_count; indx++)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  148 |     variables[indx] = NULL;[0m
      | [0;1;32m                           
[0m[1mstorage.c:185:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |   for (; indx < a_count; indx++)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  186 |     arrays[indx] = NULL;[0m
      | [0;1;32m                        
[0m[1mstorage.c:408:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |           for (ix=1; ix < NODE_SIZE; ix++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  409 |             temp->n_items.n_down[ix] = NULL;[0m
      | [0;1;32m                                            
[0m[1mstorage.c:413:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  413 |           for (ix=0; ix < NODE_SIZE; ix++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  414 |             temp->n_items.n_num[ix] = bc_copy_num(_zero_);[0m
      | [0;1;32m                                                          
[0m[1mstorage.c:429:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |           if (log > 1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  430 |             for (ix=0; ix < NODE_SIZE; ix++)[0m
  431 |               temp->n_items.n_down[ix] = NULL;[0m
  432 |           else[0m
      | [0;32m          } 
[0m[1mstorage.c:430:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |             for (ix=0; ix < NODE_SIZE; ix++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  431 |               temp->n_items.n_down[ix] = NULL;[0m
      | [0;1;32m                                              
[0m[1mstorage.c:432:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  433 |             for (ix=0; ix < NODE_SIZE; ix++)[0m
  434 |               temp->n_items.n_num[ix] = bc_copy_num(_zero_);[0m
      | [0;1;32m                                                            
[0m[1mstorage.c:433:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |             for (ix=0; ix < NODE_SIZE; ix++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  434 |               temp->n_items.n_num[ix] = bc_copy_num(_zero_);[0m
      | [0;1;32m                                                            
[0m[1mstorage.c:436:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  437 |         temp = temp->n_items.n_down[ix1];[0m
      | [0;1;32m                                         
[0m[1mstorage.c:475:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  475 |               rt_warn ("negative ibase, set to 2");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  476 |               temp = 2;[0m
  477 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mstorage.c:479:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |               rt_warn ("negative obase, set to 2");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  480 |               temp = 2;[0m
  481 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mstorage.c:483:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  483 |               rt_warn ("negative scale, set to 0");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  484 |               temp = 0;[0m
  485 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mstorage.c:496:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |           if (!bc_is_zero (ex_stack->s_num) && temp == 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  497 |             toobig = TRUE;[0m
      | [0;1;32m                          
[0m[1mstorage.c:502:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  502 |           if (temp < 2 && !toobig)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mstorage.c:522:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |                      if (temp >= 16 && warn_not_std)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  523 |                        rt_warn ("ibase larger than 16 is non-standard");[0m
      | [0;1;32m                                                                        
[0m[1mstorage.c:527:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  528 |               i_base = (int) temp;[0m
      | [0;1;32m                                  
[0m[1mstorage.c:532:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  532 |           if (temp < 2 && !toobig)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  533 |             {[0m
  534 |               o_base = 2;[0m
  535 |               rt_warn ("obase too small, set to 2");[0m
  536 |             }[0m
  537 |           else[0m
  538 |             if (temp > BC_BASE_MAX || toobig)[0m
  539 |               {[0m
  540 |                 o_base = BC_BASE_MAX;[0m
  541 |                 rt_warn ("obase too large, set to %d", BC_BASE_MAX);[0m
  542 |               }[0m
  543 |             else[0m
  544 |               o_base = (int) temp;[0m
  545 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mstorage.c:543:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  544 |               o_base = (int) temp;[0m
      | [0;1;32m                                  
[0m[1mstorage.c:550:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  550 |           if (temp > BC_SCALE_MAX || toobig )[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  551 |             {[0m
  552 |               scale = BC_SCALE_MAX;[0m
  553 |               rt_warn ("scale too large, set to %d", BC_SCALE_MAX);[0m
  554 |             }[0m
  555 |           else[0m
  556 |             scale = (int) temp;[0m
  557 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mstorage.c:555:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  556 |             scale = (int) temp;[0m
      | [0;1;32m                               
[0m[1mstorage.c:591:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |   if (!check_stack(2)) return;[0m
      | [0;1;32m                      ^       
[0m      | [0;32m                       {
[0m[1mstorage.c:594:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |       (idx == 0 && !bc_is_zero(ex_stack->s_next->s_num))) [0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  595 |     rt_error ("Array %s subscript out of bounds.", a_names[var_name]);[0m
  596 |   else[0m
      | [0;32m  } 
[0m[1mstorage.c:625:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  625 |       push_copy (_zero_);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  626 |       bc_int2num (&ex_stack->s_num, i_base);[0m
  627 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:631:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  631 |       push_copy (_zero_);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  632 |       bc_int2num (&ex_stack->s_num, o_base);[0m
  633 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:637:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  637 |       push_copy (_zero_);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  638 |       bc_int2num (&ex_stack->s_num, scale);[0m
  639 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:651:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  651 |       var_ptr = variables[var_name];[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  652 |       if (var_ptr != NULL)[0m
  653 |         push_copy (var_ptr->v_value);[0m
  654 |       else[0m
  655 |         push_copy (_zero_);[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mstorage.c:652:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |       if (var_ptr != NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  653 |         push_copy (var_ptr->v_value);[0m
  654 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:654:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  654 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  655 |         push_copy (_zero_);[0m
      | [0;1;32m                           
[0m[1mstorage.c:669:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  669 |   if (!check_stack(1)) return;[0m
      | [0;1;32m                      ^       
[0m      | [0;32m                       {
[0m[1mstorage.c:672:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  672 |      (idx == 0 && !bc_is_zero(ex_stack->s_num))) [0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  673 |     rt_error ("Array %s subscript out of bounds.", a_names[var_name]);[0m
  674 |   else[0m
      | [0;32m  } 
[0m[1mstorage.c:698:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  698 |       if (i_base > 2)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  699 |         i_base--;[0m
  700 |       else[0m
  701 |         rt_warn ("ibase too small in --");[0m
  702 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:698:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  698 |       if (i_base > 2)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  699 |         i_base--;[0m
  700 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:700:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  700 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  701 |         rt_warn ("ibase too small in --");[0m
      | [0;1;32m                                          
[0m[1mstorage.c:705:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  705 |       if (o_base > 2)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  706 |         o_base--;[0m
  707 |       else[0m
  708 |         rt_warn ("obase too small in --");[0m
  709 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:705:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  705 |       if (o_base > 2)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  706 |         o_base--;[0m
  707 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:707:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  708 |         rt_warn ("obase too small in --");[0m
      | [0;1;32m                                          
[0m[1mstorage.c:712:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  712 |       if (scale > 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  713 |         scale--;[0m
  714 |       else[0m
  715 |         rt_warn ("scale can not be negative in -- ");[0m
  716 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:712:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  712 |       if (scale > 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  713 |         scale--;[0m
  714 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:714:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  715 |         rt_warn ("scale can not be negative in -- ");[0m
      | [0;1;32m                                                     
[0m[1mstorage.c:733:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  733 |       var_ptr = get_var (var_name);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  734 |       if (var_ptr != NULL)[0m
  735 |         bc_sub (var_ptr->v_value,_one_,&var_ptr->v_value, 0);[0m
      | [0;1;32m                                                            
[0m      | [0;32m                                                            ;} 
[0m[1mstorage.c:734:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  734 |       if (var_ptr != NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  735 |         bc_sub (var_ptr->v_value,_one_,&var_ptr->v_value, 0);[0m
      | [0;1;32m                                                             
[0m[1mstorage.c:750:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |   if (!check_stack (1)) return;[0m
      | [0;1;32m                       ^       
[0m      | [0;32m                        {
[0m[1mstorage.c:753:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |      (idx == 0 && !bc_is_zero (ex_stack->s_num))) [0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  754 |     rt_error ("Array %s subscript out of bounds.", a_names[var_name]);[0m
  755 |   else[0m
      | [0;32m  } 
[0m[1mstorage.c:779:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  779 |       if (i_base < 16)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  780 |         i_base++;[0m
  781 |       else[0m
  782 |         rt_warn ("ibase too big in ++");[0m
  783 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:779:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  779 |       if (i_base < 16)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  780 |         i_base++;[0m
  781 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:781:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  782 |         rt_warn ("ibase too big in ++");[0m
      | [0;1;32m                                        
[0m[1mstorage.c:786:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  786 |       if (o_base < BC_BASE_MAX)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  787 |         o_base++;[0m
  788 |       else[0m
  789 |         rt_warn ("obase too big in ++");[0m
  790 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:786:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  786 |       if (o_base < BC_BASE_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  787 |         o_base++;[0m
  788 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:788:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  789 |         rt_warn ("obase too big in ++");[0m
      | [0;1;32m                                        
[0m[1mstorage.c:793:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  793 |       if (scale < BC_SCALE_MAX)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  794 |         scale++;[0m
  795 |       else[0m
  796 |         rt_warn ("Scale too big in ++");[0m
  797 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mstorage.c:793:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |       if (scale < BC_SCALE_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  794 |         scale++;[0m
  795 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:795:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  795 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  796 |         rt_warn ("Scale too big in ++");[0m
      | [0;1;32m                                        
[0m[1mstorage.c:814:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  814 |       var_ptr = get_var (var_name);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  815 |       if (var_ptr != NULL)[0m
  816 |         bc_add (var_ptr->v_value, _one_, &var_ptr->v_value, 0);[0m
      | [0;1;32m                                                              
[0m      | [0;32m                                                              ;} 
[0m[1mstorage.c:815:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  815 |       if (var_ptr != NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  816 |         bc_add (var_ptr->v_value, _one_, &var_ptr->v_value, 0);[0m
      | [0;1;32m                                                               
[0m[1mstorage.c:831:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |   if (!check_stack (1)) return;[0m
      | [0;1;32m                       ^       
[0m      | [0;32m                        {
[0m[1mstorage.c:834:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  834 |       (idx == 0 && !bc_is_zero (ex_stack->s_num))) [0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  835 |     rt_error ("Array %s subscript out of bounds.", a_names[var_name]);[0m
  836 |   else[0m
      | [0;32m  } 
[0m[1mstorage.c:891:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  891 |       if (depth > 1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  892 |         for (ix = 0; ix < NODE_SIZE; ix++)[0m
  893 |           free_a_tree (root->n_items.n_down[ix], depth-1);[0m
  894 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:892:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  892 |         for (ix = 0; ix < NODE_SIZE; ix++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  893 |           free_a_tree (root->n_items.n_down[ix], depth-1);[0m
      | [0;1;32m                                                          
[0m[1mstorage.c:894:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  895 |         for (ix = 0; ix < NODE_SIZE; ix++)[0m
  896 |           bc_free_num ( &(root->n_items.n_num[ix]));[0m
      | [0;1;32m                                                    
[0m[1mstorage.c:895:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  895 |         for (ix = 0; ix < NODE_SIZE; ix++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  896 |           bc_free_num ( &(root->n_items.n_num[ix]));[0m
      | [0;1;32m                                                    
[0m[1mstorage.c:954:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  954 |   if (depth > 1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  955 |     for (i=0; i<NODE_SIZE; i++)[0m
  956 |       if (ary_node->n_items.n_down[i] != NULL)[0m
  957 |         res->n_items.n_down[i] =[0m
  958 |           copy_tree (ary_node->n_items.n_down[i], depth - 1);[0m
  959 |       else[0m
  960 |         res->n_items.n_down[i] = NULL;[0m
  961 |   else[0m
      | [0;32m  } 
[0m[1mstorage.c:955:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  955 |     for (i=0; i<NODE_SIZE; i++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  956 |       if (ary_node->n_items.n_down[i] != NULL)[0m
  957 |         res->n_items.n_down[i] =[0m
  958 |           copy_tree (ary_node->n_items.n_down[i], depth - 1);[0m
  959 |       else[0m
  960 |         res->n_items.n_down[i] = NULL;[0m
      | [0;1;32m                                      
[0m[1mstorage.c:956:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  956 |       if (ary_node->n_items.n_down[i] != NULL)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  957 |         res->n_items.n_down[i] =[0m
  958 |           copy_tree (ary_node->n_items.n_down[i], depth - 1);[0m
  959 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:959:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  959 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  960 |         res->n_items.n_down[i] = NULL;[0m
      | [0;1;32m                                      
[0m[1mstorage.c:961:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  961 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  962 |     for (i=0; i<NODE_SIZE; i++)[0m
  963 |       if (ary_node->n_items.n_num[i] != NULL)[0m
  964 |         res->n_items.n_num[i] = bc_copy_num (ary_node->n_items.n_num[i]);[0m
  965 |       else[0m
  966 |         res->n_items.n_num[i] = NULL;[0m
      | [0;1;32m                                     
[0m[1mstorage.c:962:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  962 |     for (i=0; i<NODE_SIZE; i++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  963 |       if (ary_node->n_items.n_num[i] != NULL)[0m
  964 |         res->n_items.n_num[i] = bc_copy_num (ary_node->n_items.n_num[i]);[0m
  965 |       else[0m
  966 |         res->n_items.n_num[i] = NULL;[0m
      | [0;1;32m                                     
[0m[1mstorage.c:963:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  963 |       if (ary_node->n_items.n_num[i] != NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  964 |         res->n_items.n_num[i] = bc_copy_num (ary_node->n_items.n_num[i]);[0m
  965 |       else[0m
      | [0;32m      } 
[0m[1mstorage.c:965:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  965 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  966 |         res->n_items.n_num[i] = NULL;[0m
      | [0;1;32m                                     
[0m[1mstorage.c:1028:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1028 |                 if (ix == ix1) [0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1029 |                   a_src = arrays[ix]->a_next;[0m
 1030 |                 else[0m
      | [0;32m                } 
[0m[1mstorage.c:1030:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1030 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1031 |                   a_src = arrays[ix];[0m
      | [0;1;32m                                     
[0m[1mstorage.c:1046:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |                 if (params->av_name < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1047 |                   rt_error ("Parameter type mismatch parameter %s.",[0m
 1048 |                             a_names[-params->av_name]);[0m
 1049 |                 else[0m
      | [0;32m                } 
[0m[1mstorage.c:1049:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1049 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1050 |                   rt_error ("Parameter type mismatch, parameter %s.",[0m
 1051 |                             v_names[params->av_name]);[0m
      | [0;1;32m                                                      
[0m[1mstorage.c:1063:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1063 |   if (params != NULL) [0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1064 |     rt_error ("Parameter number mismatch");[0m
      | [0;1;32m                                           
[0m75 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[16/20][106.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmp3gl6bmzw.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/load.c
[1mload.c:59:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (had_error) return;[0m
      | [0;1;32m                ^       
[0m      | [0;32m                 {
[0m[1mload.c:69:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   69 |       memcpy(new_body, f->f_body, f->f_body_size/2);[0m
      | [0;1;32m      ^~~~~~
[0m[1mload.c:69:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   69 |       memcpy(new_body, f->f_body, f->f_body_size/2);[0m
      | [0;1;32m      ^~~~~~
[0m[1mload.c:132:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  132 |   while (isdigit((int)(**str))) [0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  133 |     val = val*10 + *(*str)++ - '0';[0m
      | [0;1;32m                                   
[0m[1mload.c:135:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |   if (neg)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  136 |     return -val;[0m
  137 |   else[0m
      | [0;32m  } 
[0m[1mload.c:137:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  138 |     return val;[0m
      | [0;1;32m               
[0m[1mload.c:161:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |       if (had_error) return;[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                     {
[0m[1mload.c:165:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |           if (*str == '"') load_str = FALSE;[0m
      | [0;1;32m                          ^                 
[0m      | [0;32m                           {
[0m[1mload.c:171:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |             if (*str == '\n') [0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  172 |               str++;[0m
  173 |             else[0m
      | [0;32m            } 
[0m[1mload.c:181:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |                   if (*str == '.')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  182 |                     addbyte (*str++);[0m
  183 |                   else[0m
      | [0;32m                  } 
[0m[1mload.c:187:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |                           if (std_only)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  188 |                             yyerror ("Error in numeric constant");[0m
  189 |                           else[0m
      | [0;32m                          } 
[0m[1mload.c:189:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |                           else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  190 |                             ct_warn ("Non-standard base in numeric constant");[0m
      | [0;1;32m                                                                              
[0m[1mload.c:192:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |                       if (*str >= 'A')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  193 |                         addbyte (*str++ + 10 - 'A');[0m
  194 |                       else[0m
      | [0;32m                      } 
[0m[1mload.c:194:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  195 |                         addbyte (*str++ - '0');[0m
      | [0;1;32m                                               
[0m[1mload.c:205:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  205 |                 load_str = TRUE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  206 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:209:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  209 |                 str++;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  210 |                 label_no = long_val (&str);[0m
  211 |                 def_label (label_no);[0m
  212 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:218:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  218 |                 label_no = long_val (&str);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  219 |                 if (label_no > 65535L)[0m
  220 |                   {  /* Better message? */[0m
  221 |                     fprintf (stderr,"Program too big.\n");[0m
  222 |                     bc_exit(1);[0m
  223 |                   }[0m
  224 |                 addbyte ( (char) (label_no & 0xFF));[0m
  225 |                 addbyte ( (char) (label_no >> 8));[0m
  226 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:221:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |                     fprintf (stderr,"Program too big.\n");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mload.c:221:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  221 |                     fprintf (stderr,"Program too big.\n");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mload.c:229:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  229 |                 str++;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mload.c:269:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |                     if (*str == ',') str++;[0m
      | [0;1;32m                                    ^      
[0m      | [0;32m                                     {
[0m[1mload.c:283:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  283 |                 functions[load_adr.pc_func].f_defined = TRUE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  284 |                 load_adr = save_adr;[0m
  285 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:288:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  288 |                 addbyte (*str++);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  289 |                 func = long_val (&str);[0m
  290 |                 if (func < 128)[0m
  291 |                   addbyte ( (char) func);[0m
  292 |                 else[0m
  293 |                   {[0m
  294 |                     addbyte (((func >> 8) & 0xff) | 0x80);[0m
  295 |                     addbyte (func & 0xff);[0m
  296 |                   }[0m
  297 |                 if (*str == ',') str++;[0m
  298 |                 while (*str != ':')[0m
  299 |                   addbyte (*str++);[0m
  300 |                 addbyte (':');[0m
  301 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:290:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |                 if (func < 128)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  291 |                   addbyte ( (char) func);[0m
  292 |                 else[0m
      | [0;32m                } 
[0m[1mload.c:297:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |                 if (*str == ',') str++;[0m
      | [0;1;32m                                ^      
[0m      | [0;32m                                 {
[0m[1mload.c:298:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |                 while (*str != ':')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  299 |                   addbyte (*str++);[0m
      | [0;1;32m                                   
[0m[1mload.c:304:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  304 |                 addbyte (*str++);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  305 |                 addbyte (*str);[0m
  306 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:309:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  309 |                 addbyte (*str);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  310 |                 load_const = TRUE;[0m
  311 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:322:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  322 |                 vaf_name = long_val (&str);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  323 |                 if (vaf_name < 128)[0m
  324 |                   addbyte (vaf_name);[0m
  325 |                 else[0m
  326 |                   {[0m
  327 |                     addbyte (((vaf_name >> 8) & 0xff) | 0x80);[0m
  328 |                     addbyte (vaf_name & 0xff);[0m
  329 |                   }[0m
  330 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:323:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |                 if (vaf_name < 128)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  324 |                   addbyte (vaf_name);[0m
  325 |                 else[0m
      | [0;32m                } 
[0m[1mload.c:333:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  333 |                 switch (*(++str))[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  334 |                   {[0m
  335 |                   case 'i':[0m
  336 |                     init_load ();[0m
  337 |                     break;[0m
  338 |                   case 'r':[0m
  339 |                     execute ();[0m
  340 |                     break;[0m
  341 |                   } [0m
  342 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mload.c:336:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  336 |                     init_load ();[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  337 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mload.c:339:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  339 |                     execute ();[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  340 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mload.c:345:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  345 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mload.c:348:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  348 |                 addbyte (*str);    [0m
      | [0;1;32m                ^             
[0m      | [0;32m                {             ;} 
[0m35 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[17/20][108.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpqeluhkvz.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/dc/eval.c
[1meval.c:112:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |         if (*input_str_string == '\0')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  113 |                 return EOF;[0m
      | [0;1;32m                           
[0m[1meval.c:130:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |         if (string->dc_type == DC_STRING)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  131 |                 dc_free_str(&string->v.string);[0m
      | [0;1;32m                                               
[0m[1meval.c:153:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |         if (p != NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  154 |                 return p+1;[0m
      | [0;1;32m                           
[0m[1meval.c:189:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  189 |                 dc_binop(dc_add, dc_scale);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  190 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:192:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  192 |                 dc_binop(dc_sub, dc_scale);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  193 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:195:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  195 |                 dc_binop(dc_mul, dc_scale);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  196 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:198:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  198 |                 dc_binop(dc_div, dc_scale);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  199 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:202:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  202 |                 dc_binop(dc_rem, dc_scale);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  203 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:209:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  209 |                 dc_binop2(dc_divrem, dc_scale);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  210 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:222:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  222 |                 dc_triop(dc_modexp, dc_scale);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  223 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:225:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  225 |                 dc_binop(dc_exp, dc_scale);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  226 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:231:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  231 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  232 |                         return DC_EOF_ERROR;[0m
  233 |                 if ( (dc_cmpop() <  0) == (negcmp==0) )[0m
  234 |                         return DC_EVALREG;[0m
  235 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:231:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  232 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:233:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |                 if ( (dc_cmpop() <  0) == (negcmp==0) )[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  234 |                         return DC_EVALREG;[0m
      | [0;1;32m                                          
[0m[1meval.c:240:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  240 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  241 |                         return DC_EOF_ERROR;[0m
  242 |                 if ( (dc_cmpop() == 0) == (negcmp==0) )[0m
  243 |                         return DC_EVALREG;[0m
  244 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:240:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  241 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:242:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |                 if ( (dc_cmpop() == 0) == (negcmp==0) )[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  243 |                         return DC_EVALREG;[0m
      | [0;1;32m                                          
[0m[1meval.c:249:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  249 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  250 |                         return DC_EOF_ERROR;[0m
  251 |                 if ( (dc_cmpop() >  0) == (negcmp==0) )[0m
  252 |                         return DC_EVALREG;[0m
  253 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:249:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  250 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:251:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |                 if ( (dc_cmpop() >  0) == (negcmp==0) )[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  252 |                         return DC_EVALREG;[0m
      | [0;1;32m                                          
[0m[1meval.c:255:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  255 |                 if (stdin_lookahead != EOF){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  256 |                         ungetc(stdin_lookahead, stdin);[0m
  257 |                         stdin_lookahead = EOF;[0m
  258 |                 }[0m
  259 |                 datum = dc_readstring(stdin, '\n', '\n');[0m
  260 |                 if (ferror(stdin))[0m
  261 |                         return DC_EOF_ERROR;[0m
  262 |                 dc_push(datum);[0m
  263 |                 return DC_EVALTOS;[0m
      | [0;1;32m                                 
[0m      | [0;32m                                 ;} 
[0m[1meval.c:260:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |                 if (ferror(stdin))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  261 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:265:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  265 |                 return DC_STR;[0m
      | [0;1;32m                ^            
[0m      | [0;32m                {            ;} 
[0m[1meval.c:267:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  267 |                 if (peekc == '<' || peekc == '=' || peekc == '>')[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  268 |                         return DC_NEGCMP;[0m
  269 |                 return DC_SYSTEM;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:267:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |                 if (peekc == '<' || peekc == '=' || peekc == '>')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  268 |                         return DC_NEGCMP;[0m
      | [0;1;32m                                         
[0m[1meval.c:271:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  271 |                 return DC_COMMENT;[0m
      | [0;1;32m                ^                
[0m      | [0;32m                {                ;} 
[0m[1meval.c:274:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  274 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  275 |                         char tmps;[0m
  276 |                         if (datum.dc_type == DC_NUMBER){[0m
  277 |                                 tmps = (char) dc_num2int(datum.v.number, DC_TOSS);[0m
  278 |                         }else if (datum.dc_type == DC_STRING){[0m
  279 |                                 tmps = *dc_str2charp(datum.v.string);[0m
  280 |                                 dc_free_str(&datum.v.string);[0m
  281 |                         }else{[0m
  282 |                                 dc_garbage("at top of stack", -1);[0m
  283 |                         }[0m
  284 |                         dc_push(dc_makestring(&tmps, 1));[0m
  285 |                 }[0m
  286 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:288:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  288 |                 dc_clear_stack();[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  289 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:291:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  291 |                 if (dc_top_of_stack(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  292 |                         dc_push(dc_dup(datum));[0m
  293 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:291:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                 if (dc_top_of_stack(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  292 |                         dc_push(dc_dup(datum));[0m
      | [0;1;32m                                               
[0m[1meval.c:295:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  295 |                 dc_printall(dc_obase);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  296 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:298:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  298 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  299 |                         tmpint = 0;[0m
  300 |                         if (datum.dc_type == DC_NUMBER)[0m
  301 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
  302 |                         if (2 <= tmpint  &&  tmpint <= DC_IBASE_MAX)[0m
  303 |                                 dc_ibase = tmpint;[0m
  304 |                         else[0m
  305 |                                 fprintf(stderr,[0m
  306 |                                                 "%s: input base must be a number \[0m
  307 | between 2 and %d (inclusive)\n",[0m
  308 |                                                 progname, DC_IBASE_MAX);[0m
  309 |                 }[0m
  310 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:300:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  301 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
      | [0;1;32m                                                                             
[0m[1meval.c:302:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |                         if (2 <= tmpint  &&  tmpint <= DC_IBASE_MAX)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  303 |                                 dc_ibase = tmpint;[0m
  304 |                         else[0m
      | [0;32m                        } 
[0m[1meval.c:304:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  305 |                                 fprintf(stderr,[0m
  306 |                                                 "%s: input base must be a number \[0m
  307 | between 2 and %d (inclusive)\n",[0m
  308 |                                                 progname, DC_IBASE_MAX);[0m
      | [0;1;32m                                                                        
[0m[1meval.c:305:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  305 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:305:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  305 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:312:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  312 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  313 |                         tmpint = -1;[0m
  314 |                         if (datum.dc_type == DC_NUMBER)[0m
  315 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
  316 |                         if ( ! (tmpint >= 0) )[0m
  317 |                                 fprintf(stderr,[0m
  318 |                                                 "%s: scale must be a nonnegative number\n",[0m
  319 |                                                 progname);[0m
  320 |                         else[0m
  321 |                                 dc_scale = tmpint;[0m
  322 |                 }[0m
  323 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:314:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  315 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
      | [0;1;32m                                                                             
[0m[1meval.c:316:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                         if ( ! (tmpint >= 0) )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  317 |                                 fprintf(stderr,[0m
  318 |                                                 "%s: scale must be a nonnegative number\n",[0m
  319 |                                                 progname);[0m
  320 |                         else[0m
      | [0;32m                        } 
[0m[1meval.c:317:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  317 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:317:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  317 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:320:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  321 |                                 dc_scale = tmpint;[0m
      | [0;1;32m                                                  
[0m[1meval.c:328:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  328 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  329 |                         return DC_EOF_ERROR;[0m
  330 |                 if (dc_register_get(peekc, &datum) == DC_SUCCESS)[0m
  331 |                         dc_push(datum);[0m
  332 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:328:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  329 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:330:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |                 if (dc_register_get(peekc, &datum) == DC_SUCCESS)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  331 |                         dc_push(datum);[0m
      | [0;1;32m                                       
[0m[1meval.c:336:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  336 |                 if (dc_pop(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  337 |                         dc_print(datum, dc_obase, DC_NONL, DC_TOSS);[0m
  338 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:336:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |                 if (dc_pop(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  337 |                         dc_print(datum, dc_obase, DC_NONL, DC_TOSS);[0m
      | [0;1;32m                                                                    
[0m[1meval.c:340:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  340 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  341 |                         tmpint = 0;[0m
  342 |                         if (datum.dc_type == DC_NUMBER)[0m
  343 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
  344 |                         if ( ! (tmpint > 1) )[0m
  345 |                                 fprintf(stderr,[0m
  346 |                                                 "%s: output base must be a number greater than 1\n",[0m
  347 |                                                 progname);[0m
  348 |                         else[0m
  349 |                                 dc_obase = tmpint;[0m
  350 |                 }[0m
  351 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:342:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  343 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
      | [0;1;32m                                                                             
[0m[1meval.c:344:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |                         if ( ! (tmpint > 1) )[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  345 |                                 fprintf(stderr,[0m
  346 |                                                 "%s: output base must be a number greater than 1\n",[0m
  347 |                                                 progname);[0m
  348 |                         else[0m
      | [0;32m                        } 
[0m[1meval.c:345:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  345 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:345:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  345 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:348:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  349 |                                 dc_obase = tmpint;[0m
      | [0;1;32m                                                  
[0m[1meval.c:355:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  355 |                 if (dc_top_of_stack(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  356 |                         dc_print(datum, dc_obase, DC_WITHNL, DC_KEEP);[0m
  357 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:355:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |                 if (dc_top_of_stack(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  356 |                         dc_print(datum, dc_obase, DC_WITHNL, DC_KEEP);[0m
      | [0;1;32m                                                                      
[0m[1meval.c:359:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  359 |                 unwind_depth = 1; /* the return below is the first level of returns */[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  360 |                 unwind_noexit = DC_FALSE;[0m
  361 |                 return DC_QUIT;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1meval.c:363:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  363 |                 dc_stack_rotate(2);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  364 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:369:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  369 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  370 |                         return DC_EOF_ERROR;[0m
  371 |                 if (dc_pop(&datum) == DC_SUCCESS)[0m
  372 |                         dc_register_set(peekc, datum);[0m
  373 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:369:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  370 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:371:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |                 if (dc_pop(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  372 |                         dc_register_set(peekc, datum);[0m
      | [0;1;32m                                                      
[0m[1meval.c:375:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  375 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  376 |                         dc_num tmpnum;[0m
  377 |                         if (datum.dc_type != DC_NUMBER){[0m
  378 |                                 fprintf(stderr,[0m
  379 |                                                 "%s: square root of nonnumeric attempted\n",[0m
  380 |                                                 progname);[0m
  381 |                         }else if (dc_sqrt(datum.v.number, dc_scale, &tmpnum) == DC_SUCCESS){[0m
  382 |                                 dc_free_num(&datum.v.number);[0m
  383 |                                 datum.v.number = tmpnum;[0m
  384 |                                 dc_push(datum);[0m
  385 |                         }[0m
  386 |                 }[0m
  387 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:378:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  378 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:378:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  378 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:389:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |                 return DC_EVALTOS;[0m
      | [0;1;32m                ^                
[0m      | [0;32m                {                ;} 
[0m[1meval.c:391:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  391 |                 dc_push(dc_int2data(dc_tell_stackdepth()));[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  392 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:395:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  395 |                 dc_push(dc_int2data(dc_ibase));[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  396 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:398:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  398 |                 dc_push(dc_int2data(dc_scale));[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  399 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:403:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  403 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  404 |                         return DC_EOF_ERROR;[0m
  405 |                 if (dc_register_pop(peekc, &datum) == DC_SUCCESS)[0m
  406 |                         dc_push(datum);[0m
  407 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:403:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  404 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:405:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |                 if (dc_register_pop(peekc, &datum) == DC_SUCCESS)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  406 |                         dc_push(datum);[0m
      | [0;1;32m                                       
[0m[1meval.c:409:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  409 |                 dc_push(dc_int2data(dc_obase));[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  410 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:418:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  418 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  419 |                         if (datum.dc_type == DC_NUMBER)[0m
  420 |                                 dc_dump_num(datum.v.number, DC_TOSS);[0m
  421 |                         else if (datum.dc_type == DC_STRING)[0m
  422 |                                 dc_out_str(datum.v.string, DC_TOSS);[0m
  423 |                         else[0m
  424 |                                 dc_garbage("at top of stack", -1);[0m
  425 |                 }[0m
  426 |                 fflush(stdout);[0m
  427 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:419:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  420 |                                 dc_dump_num(datum.v.number, DC_TOSS);[0m
  421 |                         else if (datum.dc_type == DC_STRING)[0m
      | [0;32m                        } 
[0m[1meval.c:421:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |                         else if (datum.dc_type == DC_STRING)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  422 |                                 dc_out_str(datum.v.string, DC_TOSS);[0m
  423 |                         else[0m
      | [0;32m                        } 
[0m[1meval.c:423:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  424 |                                 dc_garbage("at top of stack", -1);[0m
      | [0;1;32m                                                                  
[0m[1meval.c:432:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  432 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  433 |                         unwind_depth = 0;[0m
  434 |                         unwind_noexit = DC_TRUE;[0m
  435 |                         if (datum.dc_type == DC_NUMBER)[0m
  436 |                                 unwind_depth = dc_num2int(datum.v.number, DC_TOSS);[0m
  437 |                         if (unwind_depth-- > 0)[0m
  438 |                                 return DC_QUIT;[0m
  439 |                         unwind_depth = 0;       /* paranoia */[0m
  440 |                         fprintf(stderr,[0m
  441 |                                         "%s: Q command requires a number >= 1\n",[0m
  442 |                                         progname);[0m
  443 |                 }[0m
  444 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:435:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  436 |                                 unwind_depth = dc_num2int(datum.v.number, DC_TOSS);[0m
      | [0;1;32m                                                                                   
[0m[1meval.c:437:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |                         if (unwind_depth-- > 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  438 |                                 return DC_QUIT;[0m
      | [0;1;32m                                               
[0m[1meval.c:440:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  440 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:440:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  440 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:450:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  450 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  451 |                         tmpint = 0;[0m
  452 |                         if (datum.dc_type == DC_NUMBER)[0m
  453 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
  454 |                         dc_stack_rotate(tmpint);[0m
  455 |                 }[0m
  456 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:452:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  453 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
      | [0;1;32m                                                                             
[0m[1meval.c:460:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  460 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  461 |                         return DC_EOF_ERROR;[0m
  462 |                 if (dc_pop(&datum) == DC_SUCCESS)[0m
  463 |                         dc_register_push(peekc, datum);[0m
  464 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:460:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  461 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:462:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |                 if (dc_pop(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  463 |                         dc_register_push(peekc, datum);[0m
      | [0;1;32m                                                       
[0m[1meval.c:466:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  466 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  467 |                         tmpint = 0;[0m
  468 |                         if (datum.dc_type == DC_NUMBER)[0m
  469 |                                 tmpint = dc_tell_scale(datum.v.number, DC_TOSS);[0m
  470 |                         dc_push(dc_int2data(tmpint));[0m
  471 |                 }[0m
  472 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:468:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  469 |                                 tmpint = dc_tell_scale(datum.v.number, DC_TOSS);[0m
      | [0;1;32m                                                                                
[0m[1meval.c:474:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  474 |                 if (dc_pop(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  475 |                         dc_push(dc_int2data(dc_tell_length(datum, DC_TOSS)));[0m
  476 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:474:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                 if (dc_pop(&datum) == DC_SUCCESS)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  475 |                         dc_push(dc_int2data(dc_tell_length(datum, DC_TOSS)));[0m
      | [0;1;32m                                                                             
[0m[1meval.c:479:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  480 |                         return DC_EOF_ERROR;[0m
  481 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
  482 |                         tmpint = -1;[0m
  483 |                         if (datum.dc_type == DC_NUMBER)[0m
  484 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
  485 |                         if (dc_pop(&datum) == DC_SUCCESS){[0m
  486 |                                 if (tmpint < 0)[0m
  487 |                                         fprintf(stderr,[0m
  488 |                                                         "%s: array index must be a nonnegative integer\n",[0m
  489 |                                                         progname);[0m
  490 |                                 else[0m
  491 |                                         dc_array_set(peekc, tmpint, datum);[0m
  492 |                         }[0m
  493 |                 }[0m
  494 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:479:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  480 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:483:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  483 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  484 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
      | [0;1;32m                                                                             
[0m[1meval.c:486:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                                 if (tmpint < 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  487 |                                         fprintf(stderr,[0m
  488 |                                                         "%s: array index must be a nonnegative integer\n",[0m
  489 |                                                         progname);[0m
  490 |                                 else[0m
      | [0;32m                                } 
[0m[1meval.c:487:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  487 |                                         fprintf(stderr,[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1meval.c:487:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  487 |                                         fprintf(stderr,[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1meval.c:490:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  490 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  491 |                                         dc_array_set(peekc, tmpint, datum);[0m
      | [0;1;32m                                                                           
[0m[1meval.c:496:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  496 |                 if (peekc == EOF)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  497 |                         return DC_EOF_ERROR;[0m
  498 |                 if (dc_pop(&datum) == DC_SUCCESS){[0m
  499 |                         tmpint = -1;[0m
  500 |                         if (datum.dc_type == DC_NUMBER)[0m
  501 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
  502 |                         if (tmpint < 0)[0m
  503 |                                 fprintf(stderr,[0m
  504 |                                                 "%s: array index must be a nonnegative integer\n",[0m
  505 |                                                 progname);[0m
  506 |                         else[0m
  507 |                                 dc_push(dc_array_get(peekc, tmpint));[0m
  508 |                 }[0m
  509 |                 return DC_EATONE;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1meval.c:496:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |                 if (peekc == EOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  497 |                         return DC_EOF_ERROR;[0m
      | [0;1;32m                                            
[0m[1meval.c:500:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |                         if (datum.dc_type == DC_NUMBER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  501 |                                 tmpint = dc_num2int(datum.v.number, DC_TOSS);[0m
      | [0;1;32m                                                                             
[0m[1meval.c:502:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |                         if (tmpint < 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  503 |                                 fprintf(stderr,[0m
  504 |                                                 "%s: array index must be a nonnegative integer\n",[0m
  505 |                                                 progname);[0m
  506 |                         else[0m
      | [0;32m                        } 
[0m[1meval.c:503:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  503 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:503:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  503 |                                 fprintf(stderr,[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:506:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  507 |                                 dc_push(dc_array_get(peekc, tmpint));[0m
      | [0;1;32m                                                                     
[0m[1meval.c:512:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  512 |                 fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1meval.c:512:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  512 |                 fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1meval.c:512:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |                 fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  513 |                 dc_show_id(stdout, c, " unimplemented\n");[0m
  514 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1meval.c:538:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  538 |                 fprintf(stderr,[0m
      | [0;1;32m                ^~~~~~~
[0m[1meval.c:538:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  538 |                 fprintf(stderr,[0m
      | [0;1;32m                ^~~~~~~
[0m[1meval.c:549:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |                 if (s < end)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  550 |                         peekc = *(const unsigned char *)s;[0m
      | [0;1;32m                                                          
[0m[1meval.c:555:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  555 |                         break;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                        {    ;} 
[0m[1meval.c:557:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  557 |                         if (peekc != EOF)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  558 |                                 ++s;[0m
  559 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:557:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  557 |                         if (peekc != EOF)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  558 |                                 ++s;[0m
      | [0;1;32m                                    
[0m[1meval.c:562:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  562 |                         ++s;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  563 |                         if (dc_register_get(peekc, &evalstr) != DC_SUCCESS)[0m
  564 |                                 break;[0m
  565 |                         dc_push(evalstr);[0m
      | [0;1;32m                                        
[0m      | [0;32m                                        ;} 
[0m[1meval.c:563:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |                         if (dc_register_get(peekc, &evalstr) != DC_SUCCESS)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  564 |                                 break;[0m
      | [0;1;32m                                      
[0m[1meval.c:569:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  569 |                         while (s<end && (*s==' '||*s=='\t'||*s=='\n'||*s=='#')){[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1meval.c:570:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  570 |                                 if (*s++ == '#')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  571 |                                         s = skip_past_eol(s, end);[0m
      | [0;1;32m                                                                  
[0m[1meval.c:595:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  595 |                         if (unwind_depth >= tail_depth){[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  596 |                                 unwind_depth -= tail_depth;[0m
  597 |                                 return DC_QUIT;[0m
  598 |                         }[0m
  599 |                         /*adjust tail recursion accounting and continue*/[0m
  600 |                         tail_depth -= unwind_depth;[0m
  601 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:604:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  604 |                         input_str_string = s - 1;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  605 |                         dc_push(dc_getnum(input_str, dc_ibase, &peekc));[0m
  606 |                         s = input_str_string;[0m
  607 |                         if (peekc != EOF)[0m
  608 |                                 --s;[0m
  609 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:607:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |                         if (peekc != EOF)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  608 |                                 --s;[0m
      | [0;1;32m                                    
[0m[1meval.c:611:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  611 |                         count = 1;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  612 |                         for (p=s; p<end && count>0; ++p)[0m
  613 |                                 if (*p == ']')[0m
  614 |                                         --count;[0m
  615 |                                 else if (*p == '[')[0m
  616 |                                         ++count;[0m
  617 |                         len = (size_t) (p - s);[0m
  618 |                         dc_push(dc_makestring(s, (count==0 ? len-1 : len)));[0m
  619 |                         s = p;[0m
  620 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:612:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |                         for (p=s; p<end && count>0; ++p)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  613 |                                 if (*p == ']')[0m
  614 |                                         --count;[0m
  615 |                                 else if (*p == '[')[0m
  616 |                                         ++count;[0m
      | [0;1;32m                                                
[0m[1meval.c:613:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |                                 if (*p == ']')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  614 |                                         --count;[0m
  615 |                                 else if (*p == '[')[0m
      | [0;32m                                } 
[0m[1meval.c:615:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  615 |                                 else if (*p == '[')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  616 |                                         ++count;[0m
      | [0;1;32m                                                
[0m[1meval.c:622:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  622 |                         s = dc_system(s);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  623 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:625:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  625 |                         s = skip_past_eol(s, end);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  626 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:628:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  628 |                         next_negcmp = 1;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  629 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:632:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  632 |                         if (ferror(stdin)) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  633 |                                 fprintf(stderr, "%s: ", progname);[0m
  634 |                                 perror("error reading stdin");[0m
  635 |                                 return DC_FAIL;[0m
  636 |                         }[0m
  637 |                         fprintf(stderr, "%s: unexpected EOS\n", progname);[0m
  638 |                         return DC_OKAY;[0m
      | [0;1;32m                                      
[0m      | [0;32m                                      ;} 
[0m[1meval.c:633:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  633 |                                 fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:633:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  633 |                                 fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1meval.c:637:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  637 |                         fprintf(stderr, "%s: unexpected EOS\n", progname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:637:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  637 |                         fprintf(stderr, "%s: unexpected EOS\n", progname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:650:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  650 |            return DC_SUCCESS;[0m
      | [0;1;32m           ^                
[0m      | [0;32m           {                ;} 
[0m[1meval.c:652:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  652 |            if (unwind_noexit != DC_TRUE)[0m
      | [0;1;32m           ^
[0m      | [0;32m           {
[0m  653 |                    return DC_FAIL;[0m
  654 |            return DC_SUCCESS;[0m
      | [0;1;32m                            
[0m      | [0;32m                            ;} 
[0m[1meval.c:652:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |            if (unwind_noexit != DC_TRUE)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  653 |                    return DC_FAIL;[0m
      | [0;1;32m                                  
[0m[1meval.c:656:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  656 |            return DC_FAIL;[0m
      | [0;1;32m           ^             
[0m      | [0;32m           {             ;} 
[0m[1meval.c:688:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |         if ( ! isatty(fileno(fp)) )[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  689 |                 sigint_handler = sigint_default;[0m
      | [0;1;32m                                                
[0m[1meval.c:699:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |                 if (fp == stdin)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  700 |                         stdin_lookahead = peekc;[0m
      | [0;1;32m                                                
[0m[1meval.c:720:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  720 |                         if (stdin_lookahead != peekc  &&  fp == stdin)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  721 |                                 peekc = getc(fp);[0m
  722 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:720:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  720 |                         if (stdin_lookahead != peekc  &&  fp == stdin)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  721 |                                 peekc = getc(fp);[0m
      | [0;1;32m                                                 
[0m[1meval.c:724:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  724 |                         peekc = getc(fp);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  725 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:728:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  728 |                         c = peekc;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  729 |                         peekc = getc(fp);[0m
  730 |                         stdin_lookahead = peekc;[0m
  731 |                         if (dc_register_get(c, &datum) != DC_SUCCESS)[0m
  732 |                                 break;[0m
  733 |                         dc_push(datum);[0m
      | [0;1;32m                                      
[0m      | [0;32m                                      ;} 
[0m[1meval.c:731:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |                         if (dc_register_get(c, &datum) != DC_SUCCESS)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  732 |                                 break;[0m
      | [0;1;32m                                      
[0m[1meval.c:736:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  736 |                         if (stdin_lookahead != peekc  &&  fp == stdin)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1meval.c:736:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  736 |                         if (stdin_lookahead != peekc  &&  fp == stdin)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  737 |                                 peekc = getc(fp);[0m
      | [0;1;32m                                                 
[0m[1meval.c:743:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  743 |                                                 if (unwind_noexit != DC_TRUE)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  744 |                                                         goto reset_and_exit_quit;[0m
      | [0;1;32m                                                                                 
[0m[1meval.c:745:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  745 |                                                 fprintf(stderr, "%s: Q command argument exceeded \[0m
      | [0;1;32m                                                ^~~~~~~
[0m[1meval.c:745:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  745 |                                                 fprintf(stderr, "%s: Q command argument exceeded \[0m
      | [0;1;32m                                                ^~~~~~~
[0m[1meval.c:754:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  754 |                         if (unwind_noexit != DC_TRUE)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  755 |                                 goto reset_and_exit_quit;[0m
  756 |                         fprintf(stderr,[0m
  757 |                                         "%s: Q command argument exceeded string execution depth\n",[0m
  758 |                                         progname);[0m
  759 |                         if (stdin_lookahead != peekc  &&  fp == stdin)[0m
  760 |                                 peekc = getc(fp);[0m
  761 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:754:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  754 |                         if (unwind_noexit != DC_TRUE)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  755 |                                 goto reset_and_exit_quit;[0m
      | [0;1;32m                                                         
[0m[1meval.c:756:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  756 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:756:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  756 |                         fprintf(stderr,[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:759:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |                         if (stdin_lookahead != peekc  &&  fp == stdin)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  760 |                                 peekc = getc(fp);[0m
      | [0;1;32m                                                 
[0m[1meval.c:764:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  764 |                         input_fil_fp = fp;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  765 |                         input_pushback = c;[0m
  766 |                         ungetc(peekc, fp);[0m
  767 |                         dc_push(dc_getnum(input_fil, dc_ibase, &peekc));[0m
  768 |                         if (ferror(fp))[0m
  769 |                                 goto error_fail;[0m
  770 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:768:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  768 |                         if (ferror(fp))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  769 |                                 goto error_fail;[0m
      | [0;1;32m                                                
[0m[1meval.c:772:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  772 |                         ungetc(peekc, fp);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  773 |                         datum = dc_readstring(fp, '[', ']');[0m
  774 |                         if (ferror(fp))[0m
  775 |                                 goto error_fail;[0m
  776 |                         dc_push(datum);[0m
  777 |                         peekc = getc(fp);[0m
  778 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:774:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |                         if (ferror(fp))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  775 |                                 goto error_fail;[0m
      | [0;1;32m                                                
[0m[1meval.c:780:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  780 |                         ungetc(peekc, fp);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  781 |                         datum = dc_readstring(fp, '\n', '\n');[0m
  782 |                         if (ferror(fp))[0m
  783 |                                 goto error_fail;[0m
  784 |                         (void)dc_system(dc_str2charp(datum.v.string));[0m
  785 |                         dc_free_str(&datum.v.string);[0m
  786 |                         peekc = getc(fp);[0m
  787 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:782:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  782 |                         if (ferror(fp))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  783 |                                 goto error_fail;[0m
      | [0;1;32m                                                
[0m[1meval.c:789:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  789 |                         while (peekc!=EOF && peekc!='\n')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  790 |                                 peekc = getc(fp);[0m
  791 |                         if (peekc != EOF)[0m
  792 |                                 peekc = getc(fp);[0m
  793 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:789:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |                         while (peekc!=EOF && peekc!='\n')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  790 |                                 peekc = getc(fp);[0m
      | [0;1;32m                                                 
[0m[1meval.c:791:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |                         if (peekc != EOF)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  792 |                                 peekc = getc(fp);[0m
      | [0;1;32m                                                 
[0m[1meval.c:795:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  795 |                         next_negcmp = 1;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  796 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1meval.c:799:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  799 |                         if (ferror(fp))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  800 |                                 goto error_fail;[0m
  801 |                         fprintf(stderr, "%s: unexpected EOF\n", progname);[0m
  802 |                         goto reset_and_exit_fail;[0m
      | [0;1;32m                                                
[0m      | [0;32m                                                ;} 
[0m[1meval.c:799:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  799 |                         if (ferror(fp))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  800 |                                 goto error_fail;[0m
      | [0;1;32m                                                
[0m[1meval.c:801:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  801 |                         fprintf(stderr, "%s: unexpected EOF\n", progname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:801:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  801 |                         fprintf(stderr, "%s: unexpected EOF\n", progname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:805:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |                 if (interrupt_seen)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  806 |                         fprintf(stderr, "\nInterrupt!\n");[0m
      | [0;1;32m                                                          
[0m[1meval.c:806:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  806 |                         fprintf(stderr, "\nInterrupt!\n");[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:806:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  806 |                         fprintf(stderr, "\nInterrupt!\n");[0m
      | [0;1;32m                        ^~~~~~~
[0m[1meval.c:810:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |         if (!ferror(fp))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  811 |                 goto reset_and_exit_success;[0m
      | [0;1;32m                                            
[0m[1meval.c:814:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  814 |         fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m        ^~~~~~~
[0m[1meval.c:814:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  814 |         fprintf(stderr, "%s: ", progname);[0m
      | [0;1;32m        ^~~~~~~
[0m157 warnings generated.

[18/20][108.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmp9avul85r.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/execute.c
[1mexecute.c:114:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  114 |         var_name = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  115 |         if ((var_name & 0x80) != 0)[0m
  116 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
  117 |         incr_array (var_name);[0m
  118 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:115:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |         if ((var_name & 0x80) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  116 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:123:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  123 |         pop ();[0m
      | [0;1;32m        ^     
[0m      | [0;32m        {     ;} 
[0m[1mexecute.c:126:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  126 |         label_num = byte(&pc);  /* Low order bits first. */[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  127 |         label_num += byte(&pc) << 8;[0m
  128 |         if (inst == 'J' || (inst == 'B' && c_code)[0m
  129 |             || (inst == 'Z' && !c_code)) {[0m
  130 |           gp = functions[pc.pc_func].f_label;[0m
  131 |           l_gp  = label_num >> BC_LABEL_LOG;[0m
  132 |           l_off = label_num % BC_LABEL_GROUP;[0m
  133 |           while (l_gp-- > 0) gp = gp->l_next;[0m
  134 |           if (gp)[0m
  135 |             pc.pc_addr = gp->l_adrs[l_off];[0m
  136 |           else {[0m
  137 |             rt_error ("Internal error.");[0m
  138 |             break;[0m
  139 |           }[0m
  140 |         }[0m
  141 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:133:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |           while (l_gp-- > 0) gp = gp->l_next;[0m
      | [0;1;32m                            ^                
[0m      | [0;32m                             {
[0m[1mexecute.c:134:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |           if (gp)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  135 |             pc.pc_addr = gp->l_adrs[l_off];[0m
  136 |           else {[0m
      | [0;32m          } 
[0m[1mexecute.c:145:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  145 |         new_func = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mexecute.c:146:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  146 |         if ((new_func & 0x80) != 0) [0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  147 |           new_func = ((new_func & 0x7f) << 8) + byte(&pc);[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:162:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |              auto_list = auto_list->next)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  163 |           auto_var (auto_list->av_name);[0m
      | [0;1;32m                                        
[0m[1mexecute.c:176:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  176 |         push_copy (ex_stack->s_num);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  177 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:181:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  181 |         if (pc.pc_func == 0) [0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  182 |           const_base = i_base;[0m
  183 |         else[0m
  184 |           const_base = fn_stack->s_val;[0m
  185 |         if (const_base == 10)[0m
  186 |           push_b10_const (&pc);[0m
  187 |         else[0m
  188 |           push_constant (prog_char, const_base);[0m
  189 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:181:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |         if (pc.pc_func == 0) [0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  182 |           const_base = i_base;[0m
  183 |         else[0m
      | [0;32m        } 
[0m[1mexecute.c:183:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  183 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  184 |           const_base = fn_stack->s_val;[0m
      | [0;1;32m                                       
[0m[1mexecute.c:185:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |         if (const_base == 10)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  186 |           push_b10_const (&pc);[0m
  187 |         else[0m
      | [0;32m        } 
[0m[1mexecute.c:187:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  188 |           push_constant (prog_char, const_base);[0m
      | [0;1;32m                                                
[0m[1mexecute.c:192:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  192 |         var_name = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  193 |         if ((var_name & 0x80) != 0)[0m
  194 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
  195 |         load_array (var_name);[0m
  196 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:193:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |         if ((var_name & 0x80) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  194 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:199:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  199 |         var_name = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  200 |         if ((var_name & 0x80) != 0)[0m
  201 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
  202 |         decr_array (var_name);[0m
  203 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:200:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |         if ((var_name & 0x80) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  201 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:206:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  206 |         while ((ch = byte(&pc)) != '"')[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mexecute.c:206:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |         while ((ch = byte(&pc)) != '"')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m[1mexecute.c:207:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |           if (ch != '\\')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  208 |             out_schar (ch);[0m
  209 |           else[0m
      | [0;32m          } 
[0m[1mexecute.c:212:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |               if (ch == '"') break;[0m
      | [0;1;32m                            ^      
[0m      | [0;32m                             {
[0m[1mexecute.c:215:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  215 |                 case 'a':  out_schar (007); break;[0m
      | [0;1;32m                           ^                     
[0m      | [0;32m                           {                     ;} 
[0m[1mexecute.c:216:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  216 |                 case 'b':  out_schar ('\b'); break;[0m
      | [0;1;32m                           ^                      
[0m      | [0;32m                           {                      ;} 
[0m[1mexecute.c:217:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  217 |                 case 'f':  out_schar ('\f'); break;[0m
      | [0;1;32m                           ^                      
[0m      | [0;32m                           {                      ;} 
[0m[1mexecute.c:218:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  218 |                 case 'n':  out_schar ('\n'); break;[0m
      | [0;1;32m                           ^                      
[0m      | [0;32m                           {                      ;} 
[0m[1mexecute.c:219:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  219 |                 case 'q':  out_schar ('"'); break;[0m
      | [0;1;32m                           ^                     
[0m      | [0;32m                           {                     ;} 
[0m[1mexecute.c:220:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  220 |                 case 'r':  out_schar ('\r'); break;[0m
      | [0;1;32m                           ^                      
[0m      | [0;32m                           {                      ;} 
[0m[1mexecute.c:221:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  221 |                 case 't':  out_schar ('\t'); break;[0m
      | [0;1;32m                           ^                      
[0m      | [0;32m                           {                      ;} 
[0m[1mexecute.c:222:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  222 |                 case '\\': out_schar ('\\'); break;[0m
      | [0;1;32m                           ^                      
[0m      | [0;32m                           {                      ;} 
[0m[1mexecute.c:223:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  223 |                 default:  break;[0m
      | [0;1;32m                          ^    
[0m      | [0;32m                          {    ;} 
[0m[1mexecute.c:230:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  230 |         if (pc.pc_func != 0)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  231 |           {[0m
  232 |             /* "Pop" autos and parameters. */[0m
  233 |             pop_vars(functions[pc.pc_func].f_autos);[0m
  234 |             pop_vars(functions[pc.pc_func].f_params);[0m
  235 |             /* reset the pc. */[0m
  236 |             fpop ();[0m
  237 |             pc.pc_addr = fpop ();[0m
  238 |             pc.pc_func = fpop ();[0m
  239 |           }[0m
  240 |         else[0m
  241 |           rt_error ("Return from main program.");[0m
  242 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:240:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  241 |           rt_error ("Return from main program.");[0m
      | [0;1;32m                                                 
[0m[1mexecute.c:245:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  245 |         var_name = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  246 |         if ((var_name & 0x80) != 0)[0m
  247 |           var_name = ((var_name & 0x7f ) << 8) + byte(&pc);[0m
  248 |         store_array (var_name);[0m
  249 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:246:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |         if ((var_name & 0x80) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  247 |           var_name = ((var_name & 0x7f ) << 8) + byte(&pc);[0m
      | [0;1;32m                                                           
[0m[1mexecute.c:252:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  252 |         c_code = bc_is_zero (ex_stack->s_num);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  253 |         assign (c_code);[0m
  254 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:259:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  259 |         if (inst == 'W') out_char ('\n');[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  260 |         store_var (4);  /* Special variable "last". */[0m
  261 |         fflush (stdout);[0m
  262 |         pop ();[0m
  263 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:259:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  259 |         if (inst == 'W') out_char ('\n');[0m
      | [0;1;32m                        ^                
[0m      | [0;32m                         {
[0m[1mexecute.c:266:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  266 |         new_func = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mexecute.c:272:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  272 |           if (ex_stack->s_num->n_len == 1 &&[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  273 |               ex_stack->s_num->n_scale != 0 &&[0m
  274 |               ex_stack->s_num->n_value[0] == 0 )[0m
  275 |             bc_int2num (&ex_stack->s_num, ex_stack->s_num->n_scale);[0m
  276 |           else[0m
  277 |             bc_int2num (&ex_stack->s_num, ex_stack->s_num->n_len[0m
  278 |                      + ex_stack->s_num->n_scale);[0m
  279 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mexecute.c:274:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |               ex_stack->s_num->n_value[0] == 0 )[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  275 |             bc_int2num (&ex_stack->s_num, ex_stack->s_num->n_scale);[0m
  276 |           else[0m
      | [0;32m          } 
[0m[1mexecute.c:276:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  277 |             bc_int2num (&ex_stack->s_num, ex_stack->s_num->n_len[0m
  278 |                      + ex_stack->s_num->n_scale);[0m
      | [0;1;32m                                                 
[0m[1mexecute.c:282:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  282 |           bc_int2num (&ex_stack->s_num, ex_stack->s_num->n_scale);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  283 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mexecute.c:286:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  286 |           if (!bc_sqrt (&ex_stack->s_num, scale))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  287 |             rt_error ("Square root of a negative number");[0m
  288 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mexecute.c:286:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |           if (!bc_sqrt (&ex_stack->s_num, scale))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  287 |             rt_error ("Square root of a negative number");[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:291:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  291 |           push_constant (input_char, i_base);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  292 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mexecute.c:295:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  295 |           push_copy (_zero_);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  296 |           bc_int2num (&ex_stack->s_num, random());[0m
  297 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mexecute.c:302:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  302 |         var_name = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  303 |         if ((var_name & 0x80) != 0)[0m
  304 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
  305 |         decr_var (var_name);[0m
  306 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:303:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |         if ((var_name & 0x80) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  304 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:309:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  309 |         bc_exit (0);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  310 |         /* NOTREACHED */[0m
  311 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:314:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  314 |         var_name = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  315 |         if ((var_name & 0x80) != 0)[0m
  316 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
  317 |         incr_var (var_name);[0m
  318 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:315:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |         if ((var_name & 0x80) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  316 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:321:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  321 |         var_name = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  322 |         if ((var_name & 0x80) != 0)[0m
  323 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
  324 |         load_var (var_name);[0m
  325 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:322:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |         if ((var_name & 0x80) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  323 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:328:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  328 |         bc_sub (_zero_, ex_stack->s_num, &ex_stack->s_num, 0);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  329 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:332:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  332 |         pop ();[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  333 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:336:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  336 |         var_name = byte(&pc);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  337 |         if ((var_name & 0x80) != 0)[0m
  338 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
  339 |         store_var (var_name);[0m
  340 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:337:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |         if ((var_name & 0x80) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  338 |           var_name = ((var_name & 0x7f) << 8) + byte(&pc);[0m
      | [0;1;32m                                                          
[0m[1mexecute.c:343:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  343 |         while ((ch = byte(&pc)) != '"') out_schar (ch);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  344 |         fflush (stdout);[0m
  345 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:343:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |         while ((ch = byte(&pc)) != '"') out_schar (ch);[0m
      | [0;1;32m                                       ^               
[0m      | [0;32m                                        {
[0m[1mexecute.c:348:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  348 |         if (check_stack(2)) {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  349 |           bc_num temp = ex_stack->s_num;[0m
  350 |           ex_stack->s_num = ex_stack->s_next->s_num;[0m
  351 |           ex_stack->s_next->s_num = temp;[0m
  352 |         }[0m
  353 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:356:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  356 |         push_copy (_zero_);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  357 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:360:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  360 |         push_copy (_one_);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  361 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:364:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  364 |         c_code = bc_is_zero (ex_stack->s_num);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  365 |         assign (c_code);[0m
  366 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:369:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  369 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  370 |           {[0m
  371 |             c_code = !bc_is_zero (ex_stack->s_next->s_num)[0m
  372 |               && !bc_is_zero (ex_stack->s_num);[0m
  373 |             pop ();[0m
  374 |             assign (c_code);[0m
  375 |           }[0m
  376 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:379:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  379 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  380 |           {[0m
  381 |             c_code = !bc_is_zero (ex_stack->s_next->s_num)[0m
  382 |               || !bc_is_zero (ex_stack->s_num);[0m
  383 |             pop ();[0m
  384 |             assign (c_code);[0m
  385 |           }[0m
  386 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:389:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  390 |           {[0m
  391 |             bc_add (ex_stack->s_next->s_num, ex_stack->s_num, &temp_num, 0);[0m
  392 |             pop();[0m
  393 |             pop();[0m
  394 |             push_num (temp_num);[0m
  395 |             bc_init_num (&temp_num);[0m
  396 |           }[0m
  397 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:400:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  400 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  401 |           {[0m
  402 |             bc_sub (ex_stack->s_next->s_num, ex_stack->s_num, &temp_num, 0);[0m
  403 |             pop();[0m
  404 |             pop();[0m
  405 |             push_num (temp_num);[0m
  406 |             bc_init_num (&temp_num);[0m
  407 |           }[0m
  408 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:411:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  411 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  412 |           {[0m
  413 |             bc_multiply (ex_stack->s_next->s_num, ex_stack->s_num,[0m
  414 |                          &temp_num, scale);[0m
  415 |             pop();[0m
  416 |             pop();[0m
  417 |             push_num (temp_num);[0m
  418 |             bc_init_num (&temp_num);[0m
  419 |           }[0m
  420 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:423:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  423 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  424 |           {[0m
  425 |             if (bc_divide (ex_stack->s_next->s_num,[0m
  426 |                            ex_stack->s_num, &temp_num, scale) == 0)[0m
  427 |               {[0m
  428 |                 pop();[0m
  429 |                 pop();[0m
  430 |                 push_num (temp_num);[0m
  431 |                 bc_init_num (&temp_num);[0m
  432 |               }[0m
  433 |             else[0m
  434 |               rt_error ("Divide by zero");[0m
  435 |           }[0m
  436 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:433:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  434 |               rt_error ("Divide by zero");[0m
      | [0;1;32m                                          
[0m[1mexecute.c:439:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  439 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  440 |           {[0m
  441 |             if (bc_is_zero (ex_stack->s_num))[0m
  442 |               rt_error ("Modulo by zero");[0m
  443 |             else[0m
  444 |               {[0m
  445 |                 bc_modulo (ex_stack->s_next->s_num,[0m
  446 |                            ex_stack->s_num, &temp_num, scale);[0m
  447 |                 pop();[0m
  448 |                 pop();[0m
  449 |                 push_num (temp_num);[0m
  450 |                 bc_init_num (&temp_num);[0m
  451 |               }[0m
  452 |           }[0m
  453 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:441:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |             if (bc_is_zero (ex_stack->s_num))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  442 |               rt_error ("Modulo by zero");[0m
  443 |             else[0m
      | [0;32m            } 
[0m[1mexecute.c:456:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  456 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  457 |           {[0m
  458 |             bc_raise (ex_stack->s_next->s_num,[0m
  459 |                       ex_stack->s_num, &temp_num, scale);[0m
  460 |             if (bc_is_zero (ex_stack->s_next->s_num) && bc_is_neg (ex_stack->s_num))[0m
  461 |               rt_error ("divide by zero");[0m
  462 |             pop();[0m
  463 |             pop();[0m
  464 |             push_num (temp_num);[0m
  465 |             bc_init_num (&temp_num);[0m
  466 |           }[0m
  467 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:460:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |             if (bc_is_zero (ex_stack->s_next->s_num) && bc_is_neg (ex_stack->s_num))[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m  461 |               rt_error ("divide by zero");[0m
      | [0;1;32m                                          
[0m[1mexecute.c:470:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  470 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  471 |           {[0m
  472 |             c_code = bc_compare (ex_stack->s_next->s_num,[0m
  473 |                                  ex_stack->s_num) == 0;[0m
  474 |             pop ();[0m
  475 |             assign (c_code);[0m
  476 |           }[0m
  477 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:480:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  480 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  481 |           {[0m
  482 |             c_code = bc_compare (ex_stack->s_next->s_num,[0m
  483 |                                  ex_stack->s_num) != 0;[0m
  484 |             pop ();[0m
  485 |             assign (c_code);[0m
  486 |           }[0m
  487 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:490:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  491 |           {[0m
  492 |             c_code = bc_compare (ex_stack->s_next->s_num,[0m
  493 |                                  ex_stack->s_num) == -1;[0m
  494 |             pop ();[0m
  495 |             assign (c_code);[0m
  496 |           }[0m
  497 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:500:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  500 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  501 |           {[0m
  502 |             c_code = bc_compare (ex_stack->s_next->s_num,[0m
  503 |                                  ex_stack->s_num) <= 0;[0m
  504 |             pop ();[0m
  505 |             assign (c_code);[0m
  506 |           }[0m
  507 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:510:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  510 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  511 |           {[0m
  512 |             c_code = bc_compare (ex_stack->s_next->s_num,[0m
  513 |                                  ex_stack->s_num) == 1;[0m
  514 |             pop ();[0m
  515 |             assign (c_code);[0m
  516 |           }[0m
  517 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:520:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |         if (check_stack(2))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  521 |           {[0m
  522 |             c_code = bc_compare (ex_stack->s_next->s_num,[0m
  523 |                                  ex_stack->s_num) >= 0;[0m
  524 |             pop ();[0m
  525 |             assign (c_code);[0m
  526 |           }[0m
  527 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mexecute.c:530:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  530 |           rt_error ("bad instruction: inst=%c", inst);[0m
      | [0;1;32m          ^                                          
[0m      | [0;32m          {                                          ;} 
[0m[1mexecute.c:545:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   while (ex_stack != NULL) pop();[0m
      | [0;1;32m                          ^      
[0m      | [0;32m                           {
[0m[1mexecute.c:551:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |       if (had_sigint)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  552 |         printf ("\ninterrupted execution.\n");[0m
      | [0;1;32m                                              
[0m[1mexecute.c:589:7: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  589 |   if (isdigit(in_ch))[0m
      | [0;1;32m      ^
[0m[1m/usr/include/ctype.h:192:21: [0m[0;1;36mnote: [0mexpanded from macro 'isdigit'[0m
  192 | # define isdigit(c)     __isctype((c), _ISdigit)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mexecute.c:576:11: [0m[0;1;36mnote: [0mTaint originated here[0m
  576 |   in_ch = getchar();[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mexecute.c:576:11: [0m[0;1;36mnote: [0mCalling 'getchar'[0m
  576 |   in_ch = getchar();[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/bits/stdio.h:49:10: [0m[0;1;36mnote: [0mTaint originated here[0m
   49 |   return getc (stdin);[0m
      | [0;1;32m         ^~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/bits/stdio.h:49:10: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
   49 |   return getc (stdin);[0m
      | [0;1;32m         ^~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/bits/stdio.h:49:10: [0m[0;1;36mnote: [0mAssuming that 'getc' is successful[0m
   49 |   return getc (stdin);[0m
      | [0;1;32m         ^~~~~~~~~~~~
[0m[1mexecute.c:576:11: [0m[0;1;36mnote: [0mReturning from 'getchar'[0m
  576 |   in_ch = getchar();[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mexecute.c:576:11: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  576 |   in_ch = getchar();[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mexecute.c:579:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  579 |   if (in_ch == '\\')[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1mexecute.c:579:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  579 |   if (in_ch == '\\')[0m
      | [0;1;32m  ^
[0m[1mexecute.c:589:7: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  589 |   if (isdigit(in_ch))[0m
      | [0;1;32m      ^
[0m[1m/usr/include/ctype.h:192:21: [0m[0;1;36mnote: [0mexpanded from macro 'isdigit'[0m
  192 | # define isdigit(c)     __isctype((c), _ISdigit)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mexecute.c:589:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |   if (isdigit(in_ch))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  590 |     return (in_ch - '0');[0m
      | [0;1;32m                         
[0m[1mexecute.c:591:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |   if (in_ch >= 'A' && in_ch <= 'Z')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  592 |     return (in_ch + 10 - 'A');[0m
      | [0;1;32m                              
[0m[1mexecute.c:593:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |   if (in_ch >= 'a' && in_ch <= 'z')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  594 |     return (in_ch + 10 - 'a');[0m
      | [0;1;32m                              
[0m[1mexecute.c:595:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |   if (in_ch == '.' || in_ch == '+' || in_ch == '-')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  596 |     return (in_ch);[0m
      | [0;1;32m                   
[0m[1mexecute.c:597:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  597 |   if (in_ch == '~')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  598 |     return (':');[0m
      | [0;1;32m                 
[0m[1mexecute.c:599:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  599 |   if (in_ch <= ' ')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  600 |     return ('~');[0m
      | [0;1;32m                 
[0m[1mexecute.c:631:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |   while (in_ch == '~')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  632 |     in_ch = in_char();[0m
      | [0;1;32m                      
[0m[1mexecute.c:634:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |   if (in_ch == '+')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  635 |     in_ch = in_char();[0m
  636 |   else[0m
      | [0;32m  } 
[0m[1mexecute.c:648:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |       if (in_ch < 36 && first_ch >= conv_base)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  649 |         first_ch = conv_base - 1;[0m
      | [0;1;32m                                 
[0m[1mexecute.c:656:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |       if (in_ch < 36 && in_ch >= conv_base) in_ch = conv_base-1;[0m
      | [0;1;32m                                           ^                    
[0m      | [0;32m                                            {
[0m[1mexecute.c:665:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |       if (in_ch >= conv_base) in_ch = conv_base-1;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexecute.c:679:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |           if (in_ch < 36 && in_ch >= conv_base) in_ch = conv_base-1;[0m
      | [0;1;32m                                               ^                    
[0m      | [0;32m                                                {
[0m[1mexecute.c:686:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  686 |   if (negative)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  687 |     bc_sub (_zero_, build, &build, 0);[0m
      | [0;1;32m                                      
[0m[1mexecute.c:739:4: [0m[0;1;35mwarning: [0m[1mValue stored to 'inchar' is never read [clang-analyzer-deadcode.DeadStores][0m
  739 |           inchar = byte(progctr);[0m
      | [0;1;32m          ^        ~~~~~~~~~~~~~
[0m[1mexecute.c:739:4: [0m[0;1;36mnote: [0mValue stored to 'inchar' is never read[0m
  739 |           inchar = byte(progctr);[0m
      | [0;1;32m          ^        ~~~~~~~~~~~~~
[0m[1mexecute.c:744:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'inchar' is never read [clang-analyzer-deadcode.DeadStores][0m
  744 |       inchar = byte(progctr);[0m
      | [0;1;32m      ^        ~~~~~~~~~~~~~
[0m[1mexecute.c:744:7: [0m[0;1;36mnote: [0mValue stored to 'inchar' is never read[0m
  744 |       inchar = byte(progctr);[0m
      | [0;1;32m      ^        ~~~~~~~~~~~~~
[0m[1mexecute.c:752:2: [0m[0;1;35mwarning: [0m[1mValue stored to 'inchar' is never read [clang-analyzer-deadcode.DeadStores][0m
  752 |         inchar = byte(progctr);[0m
      | [0;1;32m        ^        ~~~~~~~~~~~~~
[0m[1mexecute.c:752:2: [0m[0;1;36mnote: [0mValue stored to 'inchar' is never read[0m
  752 |         inchar = byte(progctr);[0m
      | [0;1;32m        ^        ~~~~~~~~~~~~~
[0m[1mexecute.c:774:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |           if (inchar > 9)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  775 |             *ptr++ = 9;[0m
  776 |           else[0m
      | [0;32m          } 
[0m[1mexecute.c:776:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  776 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  777 |             *ptr++ = inchar;[0m
      | [0;1;32m                            
[0m[1mexecute.c:791:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |   if (code)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  792 |     ex_stack->s_num = bc_copy_num (_one_);[0m
  793 |   else[0m
      | [0;32m  } 
[0m[1mexecute.c:793:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  794 |     ex_stack->s_num = bc_copy_num (_zero_);[0m
      | [0;1;32m                                           
[0m108 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[19/20][121.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpbtrahz5e.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/bc/util.c
[1mutil.c:48:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   48 |   return (strcpy (temp,str));[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:48:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   48 |   return (strcpy (temp,str));[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:89:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |   if (args != NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   90 |     temp = make_arg_str (args->next, len+12);[0m
   91 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:99:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |   if (args->arg_is_var)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  100 |     if (len != 1) [0m
  101 |       snprintf (sval, sizeof(sval), "*%d,", args->av_name);[0m
  102 |     else[0m
  103 |       snprintf (sval, sizeof(sval), "*%d", args->av_name);[0m
  104 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:100:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |     if (len != 1) [0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  101 |       snprintf (sval, sizeof(sval), "*%d,", args->av_name);[0m
  102 |     else[0m
      | [0;32m    } 
[0m[1mutil.c:101:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  101 |       snprintf (sval, sizeof(sval), "*%d,", args->av_name);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutil.c:101:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  101 |       snprintf (sval, sizeof(sval), "*%d,", args->av_name);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutil.c:102:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  103 |       snprintf (sval, sizeof(sval), "*%d", args->av_name);[0m
      | [0;1;32m                                                          
[0m[1mutil.c:103:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  103 |       snprintf (sval, sizeof(sval), "*%d", args->av_name);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutil.c:103:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  103 |       snprintf (sval, sizeof(sval), "*%d", args->av_name);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutil.c:105:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |     if (len != 1) [0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  106 |       snprintf (sval, sizeof(sval), "%d,", args->av_name);[0m
  107 |     else[0m
      | [0;32m    } 
[0m[1mutil.c:106:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  106 |       snprintf (sval, sizeof(sval), "%d,", args->av_name);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutil.c:106:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  106 |       snprintf (sval, sizeof(sval), "%d,", args->av_name);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutil.c:107:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  108 |       snprintf (sval, sizeof(sval), "%d", args->av_name);[0m
      | [0;1;32m                                                         
[0m[1mutil.c:108:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  108 |       snprintf (sval, sizeof(sval), "%d", args->av_name);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutil.c:108:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  108 |       snprintf (sval, sizeof(sval), "%d", args->av_name);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutil.c:109:10: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  109 |   temp = strcat (temp, sval);[0m
      | [0;1;32m         ^~~~~~
[0m[1mutil.c:109:10: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  109 |   temp = strcat (temp, sval);[0m
      | [0;1;32m         ^~~~~~
[0m[1mutil.c:116:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |   if (arglist2 != NULL) [0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  117 |     free (arglist2);[0m
      | [0;1;32m                    
[0m[1mutil.c:130:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |   if (arglist2 != NULL) [0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  131 |     free (arglist2);[0m
      | [0;1;32m                    
[0m[1mutil.c:135:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |   for (temp = args, arg_count = 0; temp != NULL; temp = temp->next)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  136 |     arg_count++;[0m
      | [0;1;32m                
[0m[1mutil.c:138:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |   for (temp = args, ix=0; temp != NULL; temp = temp->next)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  139 |     arglist1[ix++] = ( temp->av_name ? '1' : '0');[0m
      | [0;1;32m                                                  
[0m[1mutil.c:180:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |               if (tmp2->av_name == tmp1->av_name) [0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  181 |                 yyerror ("duplicate parameter names");[0m
      | [0;1;32m                                                      
[0m[1mutil.c:184:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |           if (tmp1->arg_is_var)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  185 |             ct_warn ("Variable array parameter");[0m
      | [0;1;32m                                                 
[0m[1mutil.c:199:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |               if (tmp2->av_name == tmp1->av_name) [0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  200 |                 yyerror ("duplicate auto variable names");[0m
      | [0;1;32m                                                          
[0m[1mutil.c:203:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |           if (tmp1->arg_is_var)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  204 |             yyerror ("* not allowed here");[0m
      | [0;1;32m                                           
[0m[1mutil.c:218:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |               if (tmp2->av_name == tmp1->av_name) [0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  219 |                 yyerror ("variable in both parameter and auto lists");[0m
      | [0;1;32m                                                                      
[0m[1mutil.c:232:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |     if (genstr != NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  233 |       free(genstr);[0m
      | [0;1;32m                   
[0m[1mutil.c:250:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |   if (compile_only) [0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  251 |     printf ("@i");[0m
  252 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:252:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  253 |     init_load ();[0m
      | [0;1;32m                 
[0m[1mutil.c:276:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  277 |     load_code (str);[0m
      | [0;1;32m                    
[0m[1mutil.c:294:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  295 |         execute ();[0m
      | [0;1;32m                   
[0m[1mutil.c:299:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |   if (did_gen)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  300 |     init_gen();[0m
  301 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:301:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  302 |     had_error = FALSE;[0m
      | [0;1;32m                      
[0m[1mutil.c:372:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  372 |   if (tree == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  373 |     return NULL;[0m
      | [0;1;32m                
[0m[1mutil.c:377:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |   if (cmp_result == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  378 |     return tree;  /* This is the item. */[0m
  379 |   else if (cmp_result < 0)[0m
      | [0;32m  } 
[0m[1mutil.c:379:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |   else if (cmp_result < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  380 |     return find_id (tree->left, id);[0m
  381 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:381:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  382 |     return find_id (tree->right, id);  [0m
[1mutil.c:417:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  417 |               return (FALSE);[0m
      | [0;1;32m              ^             
[0m      | [0;32m              {             ;} 
[0m[1mutil.c:419:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  419 |               return (TRUE);[0m
      | [0;1;32m              ^            
[0m      | [0;32m              {            ;} 
[0m[1mutil.c:421:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  421 |               A = *root;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mutil.c:443:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  443 |                       A->balance = 1;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  444 |                       B->balance = 0;[0m
  445 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mutil.c:447:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  447 |                       A->balance = 0;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  448 |                       B->balance = 0;[0m
  449 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mutil.c:451:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  451 |                       A->balance = 0;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  452 |                       B->balance = -1;[0m
  453 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mutil.c:471:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  471 |               return (FALSE);[0m
      | [0;1;32m              ^             
[0m      | [0;32m              {             ;} 
[0m[1mutil.c:473:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  473 |               return (TRUE);[0m
      | [0;1;32m              ^            
[0m      | [0;32m              {            ;} 
[0m[1mutil.c:475:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  475 |               A = *root;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mutil.c:497:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  497 |                       A->balance = 0;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  498 |                       B->balance = 1;[0m
  499 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mutil.c:501:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  501 |                       A->balance = 0;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  502 |                       B->balance = 0;[0m
  503 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mutil.c:505:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  505 |                       A->balance = -1;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  506 |                       B->balance = 0;[0m
  507 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mutil.c:541:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |   if (strlen(name) != 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  542 |     ct_warn ("multiple letter name - %s", name);[0m
      | [0;1;32m                                                
[0m[1mutil.c:563:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  563 |       if (id->a_name != 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  564 |         {[0m
  565 |           free (name);[0m
  566 |           return (-id->a_name);[0m
  567 |         }[0m
  568 |       id->a_name = next_array++;[0m
  569 |       if (id->a_name < MAX_STORE)[0m
  570 |         {[0m
  571 |           if (id->a_name >= a_count)[0m
  572 |             more_arrays ();[0m
  573 |           a_names[id->a_name] = name;[0m
  574 |           return (-id->a_name);[0m
  575 |         }[0m
  576 |       yyerror ("Too many array variables");[0m
  577 |       bc_exit (1);[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mutil.c:571:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |           if (id->a_name >= a_count)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  572 |             more_arrays ();[0m
      | [0;1;32m                           
[0m[1mutil.c:586:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  586 |           if (use_math && namekind == FUNCTDEF && id->f_name <= 6)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  587 |             id->f_name = next_func++;[0m
      | [0;1;32m                                     
[0m[1mutil.c:590:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  590 |       id->f_name = next_func++;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  591 |       if (id->f_name < MAX_STORE)[0m
  592 |         {[0m
  593 |           if (id->f_name >= f_count)[0m
  594 |             more_functions ();[0m
  595 |           f_names[id->f_name] = name;[0m
  596 |           return (id->f_name);[0m
  597 |         }[0m
  598 |       yyerror ("Too many functions");[0m
  599 |       bc_exit (1);[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mutil.c:593:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |           if (id->f_name >= f_count)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  594 |             more_functions ();[0m
      | [0;1;32m                              
[0m[1mutil.c:603:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  603 |       if (id->v_name != 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  604 |         {[0m
  605 |           free(name);[0m
  606 |           return (id->v_name);[0m
  607 |         }[0m
  608 |       id->v_name = next_var++;[0m
  609 |       if (id->v_name <= MAX_STORE)[0m
  610 |         {[0m
  611 |           if (id->v_name >= v_count)[0m
  612 |             more_variables ();[0m
  613 |           v_names[id->v_name - 1] = name;[0m
  614 |           return (id->v_name);[0m
  615 |         }[0m
  616 |       yyerror ("Too many variables");[0m
  617 |       bc_exit (1);[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mutil.c:611:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  611 |           if (id->v_name >= v_count)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  612 |             more_variables ();[0m
      | [0;1;32m                              
[0m[1mutil.c:653:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |   if (ptr == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  654 |     out_of_memory ();[0m
      | [0;1;32m                     
[0m[1mutil.c:667:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  667 |   fprintf (stderr, "Fatal error: Out of memory for malloc.\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:667:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  667 |   fprintf (stderr, "Fatal error: Out of memory for malloc.\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:699:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |   if (is_std_in)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  700 |     name = "(standard_in)";[0m
  701 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:701:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  701 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  702 |     name = file_name;[0m
      | [0;1;32m                     
[0m[1mutil.c:703:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  703 |   fprintf (stderr,"%s %d: ",name,line_no);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:703:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  703 |   fprintf (stderr,"%s %d: ",name,line_no);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:705:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  705 |   fprintf (stderr, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:705:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  705 |   fprintf (stderr, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:739:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |       if (is_std_in)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  740 |         name = "(standard_in)";[0m
  741 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:741:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  742 |         name = file_name;[0m
      | [0;1;32m                         
[0m[1mutil.c:743:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  743 |       fprintf (stderr,"%s %d: Error: ",name,line_no);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:743:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  743 |       fprintf (stderr,"%s %d: Error: ",name,line_no);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:745:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  745 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:745:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  745 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:751:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |         if (is_std_in)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  752 |           name = "(standard_in)";[0m
  753 |         else[0m
      | [0;32m        } 
[0m[1mutil.c:753:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  754 |           name = file_name;[0m
      | [0;1;32m                           
[0m[1mutil.c:755:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  755 |         fprintf (stderr,"%s %d: (Warning) ",name,line_no);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mutil.c:755:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  755 |         fprintf (stderr,"%s %d: (Warning) ",name,line_no);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mutil.c:757:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  757 |         fprintf (stderr, "\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mutil.c:757:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  757 |         fprintf (stderr, "\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mutil.c:781:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  781 |   fprintf (stderr, "Runtime error (func=%s, adr=%d): ",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:781:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  781 |   fprintf (stderr, "Runtime error (func=%s, adr=%d): ",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:791:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  791 |   fprintf (stderr, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:791:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  791 |   fprintf (stderr, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:815:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  815 |   fprintf (stderr, "Runtime warning (func=%s, adr=%d): ",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:815:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  815 |   fprintf (stderr, "Runtime warning (func=%s, adr=%d): ",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:825:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  825 |   fprintf (stderr, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:825:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  825 |   fprintf (stderr, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m72 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[20/20][219.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/tidy-fixes/tmpzauliolt.yaml -p=/itch/common/crepos/cu-to-rtu/c/bc-1.07.1 /itch/common/crepos/cu-to-rtu/c/bc-1.07.1/lib/number.c
[1mnumber.c:73:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m                     ^                    
[0m      | [0;32m                      {
[0m[1mnumber.c:75:16: [0m[0;1;35mwarning: [0m[1mAccess to field 'n_sign' results in a dereference of a null pointer (loaded from variable 'temp') [clang-analyzer-core.NullDereference][0m
   75 |   temp->n_sign = PLUS;[0m
      | [0;1;32m               ^
[0m[1mnumber.c:109:12: [0m[0;1;36mnote: [0mCalling 'bc_new_num'[0m
  109 |   _zero_ = bc_new_num (1,0);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:68:7: [0m[0;1;36mnote: [0mAssuming '_bc_Free_list' is equal to NULL[0m
   68 |   if (_bc_Free_list != NULL) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:68:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   68 |   if (_bc_Free_list != NULL) {[0m
      | [0;1;32m  ^
[0m[1mnumber.c:72:5: [0m[0;1;36mnote: [0mValue assigned to 'temp'[0m
   72 |     temp = (bc_num) malloc (sizeof(bc_struct));[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:73:9: [0m[0;1;36mnote: [0mAssuming 'temp' is equal to NULL[0m
   73 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:73:9: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
   73 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:73:5: [0m[0;1;36mnote: [0mTaking true branch[0m
   73 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m    ^
[0m[1mnumber.c:75:16: [0m[0;1;36mnote: [0mAccess to field 'n_sign' results in a dereference of a null pointer (loaded from variable 'temp')[0m
   75 |   temp->n_sign = PLUS;[0m
      | [0;1;32m  ~~~~         ^
[0m[1mnumber.c:80:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |   if (temp->n_ptr == NULL) bc_out_of_memory();[0m
      | [0;1;32m                          ^                   
[0m      | [0;32m                           {
[0m[1mnumber.c:82:3: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
   82 |   memset (temp->n_ptr, 0, length+scale);[0m
      | [0;1;32m  ^
[0m[1mnumber.c:109:12: [0m[0;1;36mnote: [0mCalling 'bc_new_num'[0m
  109 |   _zero_ = bc_new_num (1,0);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:68:7: [0m[0;1;36mnote: [0mAssuming '_bc_Free_list' is equal to NULL[0m
   68 |   if (_bc_Free_list != NULL) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:68:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   68 |   if (_bc_Free_list != NULL) {[0m
      | [0;1;32m  ^
[0m[1mnumber.c:73:9: [0m[0;1;36mnote: [0mAssuming 'temp' is not equal to NULL[0m
   73 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:73:5: [0m[0;1;36mnote: [0mTaking false branch[0m
   73 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m    ^
[0m[1mnumber.c:79:3: [0m[0;1;36mnote: [0mValue assigned to field 'n_ptr'[0m
   79 |   temp->n_ptr = (char *) malloc (length+scale);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:80:7: [0m[0;1;36mnote: [0mAssuming field 'n_ptr' is equal to NULL[0m
   80 |   if (temp->n_ptr == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:80:7: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
   80 |   if (temp->n_ptr == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:80:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   80 |   if (temp->n_ptr == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:82:3: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
   82 |   memset (temp->n_ptr, 0, length+scale);[0m
      | [0;1;32m  ^       ~~~~~~~~~~~
[0m[1mnumber.c:82:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   82 |   memset (temp->n_ptr, 0, length+scale);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:82:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   82 |   memset (temp->n_ptr, 0, length+scale);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:92:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |   if (*num == NULL) return;[0m
      | [0;1;32m                   ^       
[0m      | [0;32m                    {
[0m[1mnumber.c:95:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |     if ((*num)->n_ptr)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   96 |       free ((*num)->n_ptr);[0m
      | [0;1;32m                           
[0m[1mnumber.c:142:10: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  142 |   while (*num->n_value == 0 && num->n_len > 1) {[0m
      | [0;1;32m         ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:7: [0m[0;1;36mnote: [0mCalling 'bc_is_zero'[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:282:7: [0m[0;1;36mnote: [0mAssuming 'num' is not equal to '_zero_'[0m
  282 |   if (num == _zero_) return TRUE;[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1mnumber.c:282:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  282 |   if (num == _zero_) return TRUE;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:289:11: [0m[0;1;36mnote: [0mAssuming 'count' is <= 0[0m
  289 |   while ((count > 0) && (*nptr++ == 0)) count--;[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mnumber.c:289:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  289 |   while ((count > 0) && (*nptr++ == 0)) count--;[0m
      | [0;1;32m                     ^
[0m[1mnumber.c:291:7: [0m[0;1;36mnote: [0mAssuming 'count' is not equal to 0[0m
  291 |   if (count != 0)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mnumber.c:291:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  291 |   if (count != 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:7: [0m[0;1;36mnote: [0mReturning from 'bc_is_zero'[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1461:2: [0m[0;1;36mnote: [0mCalling 'bc_sub'[0m
 1461 |         bc_sub (num, int_part, &frac_part, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:7: [0m[0;1;36mnote: [0mAssuming 'n1->n_sign' is equal to 'n2->n_sign'[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:534:7: [0m[0;1;36mnote: [0mControl jumps to 'case 1:'  at line 547[0m
  534 |       switch (cmp_res)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:549:11: [0m[0;1;36mnote: [0mCalling '_bc_do_sub'[0m
  549 |           diff = _bc_do_sub (n1, n2, scale_min);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:429:23: [0m[0;1;36mnote: [0m'n1->n_len' is > 'n2->n_len'[0m
  429 |   diff_len = MAX (n1->n_len, n2->n_len);[0m
      | [0;1;32m                      ^
[0m[1mnumber.c:429:14: [0m[0;1;36mnote: [0m'?' condition is true[0m
  429 |   diff_len = MAX (n1->n_len, n2->n_len);[0m
      | [0;1;32m             ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:430:16: [0m[0;1;36mnote: [0mAssuming 'n1->n_scale' is > 'n2->n_scale'[0m
  430 |   diff_scale = MAX (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:430:16: [0m[0;1;36mnote: [0m'?' condition is true[0m
  430 |   diff_scale = MAX (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:431:23: [0m[0;1;36mnote: [0m'n1->n_len' is > 'n2->n_len'[0m
  431 |   min_len = MIN  (n1->n_len, n2->n_len);[0m
      | [0;1;32m                      ^
[0m[1mnumber.c:431:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
  431 |   min_len = MIN  (n1->n_len, n2->n_len);[0m
      | [0;1;32m            ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:432:24: [0m[0;1;36mnote: [0m'n1->n_scale' is > 'n2->n_scale'[0m
  432 |   min_scale = MIN (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:432:15: [0m[0;1;36mnote: [0m'?' condition is true[0m
  432 |   min_scale = MIN (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m              ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:433:32: [0m[0;1;36mnote: [0mAssuming 'diff_scale' is > 'scale_min'[0m
  433 |   diff = bc_new_num (diff_len, MAX(diff_scale, scale_min));[0m
      | [0;1;32m                               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:433:32: [0m[0;1;36mnote: [0m'?' condition is true[0m
  433 |   diff = bc_new_num (diff_len, MAX(diff_scale, scale_min));[0m
      | [0;1;32m                               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:436:7: [0m[0;1;36mnote: [0m'scale_min' is <= 'diff_scale'[0m
  436 |   if (scale_min > diff_scale)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mnumber.c:436:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  436 |   if (scale_min > diff_scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:452:7: [0m[0;1;36mnote: [0mAssuming 'min_scale' is not equal to field 'n_scale'[0m
  452 |   if (n1->n_scale != min_scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:452:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  452 |   if (n1->n_scale != min_scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:455:45: [0m[0;1;36mnote: [0mAssuming 'count' is <= 0[0m
  455 |       for (count = n1->n_scale - min_scale; count > 0; count--)[0m
      | [0;1;32m                                            ^~~~~~~~~
[0m[1mnumber.c:455:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 477[0m
  455 |       for (count = n1->n_scale - min_scale; count > 0; count--)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:477:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  477 |   for (count = 0; count < min_len + min_scale; count++)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:477:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 491[0m
  477 |   for (count = 0; count < min_len + min_scale; count++)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:491:7: [0m[0;1;36mnote: [0m'diff_len' is not equal to 'min_len'[0m
  491 |   if (diff_len != min_len)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mnumber.c:491:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  491 |   if (diff_len != min_len)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:493:40: [0m[0;1;36mnote: [0mAssuming 'count' is <= 0[0m
  493 |       for (count = diff_len - min_len; count > 0; count--)[0m
      | [0;1;32m                                       ^~~~~~~~~
[0m[1mnumber.c:493:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 508[0m
  493 |       for (count = diff_len - min_len; count > 0; count--)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:508:3: [0m[0;1;36mnote: [0mCalling '_bc_rm_leading_zeros'[0m
  508 |   _bc_rm_leading_zeros (diff);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:142:10: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at index 0[0m
  142 |   while (*num->n_value == 0 && num->n_len > 1) {[0m
      | [0;1;32m         ^~~~~~~~~~~~~
[0m[1mnumber.c:162:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |       if (n1->n_sign == PLUS)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  163 |         return (1);     /* Positive N1 > Negative N2 */[0m
  164 |       else[0m
      | [0;32m      } 
[0m[1mnumber.c:164:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  165 |         return (-1);    /* Negative N1 < Positive N1 */[0m
      | [0;1;32m                                                       
[0m[1mnumber.c:174:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |           if (!use_sign || n1->n_sign == PLUS)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  175 |             return (1);[0m
  176 |           else[0m
      | [0;32m          } 
[0m[1mnumber.c:176:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  177 |             return (-1);[0m
      | [0;1;32m                        
[0m[1mnumber.c:182:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |           if (!use_sign || n1->n_sign == PLUS)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  183 |             return (-1);[0m
  184 |           else[0m
      | [0;32m          } 
[0m[1mnumber.c:184:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  185 |             return (1);[0m
      | [0;1;32m                       
[0m[1mnumber.c:201:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |   if (ignore_last && count == 1 && n1->n_scale == n2->n_scale)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  202 |     return (0);[0m
      | [0;1;32m               
[0m[1mnumber.c:208:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |           if (!use_sign || n1->n_sign == PLUS)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  209 |             return (1);[0m
  210 |           else[0m
      | [0;32m          } 
[0m[1mnumber.c:210:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  211 |             return (-1);[0m
      | [0;1;32m                        
[0m[1mnumber.c:216:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |           if (!use_sign || n1->n_sign == PLUS)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  217 |             return (-1);[0m
  218 |           else[0m
      | [0;32m          } 
[0m[1mnumber.c:218:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  219 |             return (1);[0m
      | [0;1;32m                       
[0m[1mnumber.c:228:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |           for (count = n1->n_scale-n2->n_scale; count>0; count--)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  229 |             if (*n1ptr++ != 0)[0m
  230 |               {[0m
  231 |                 /* Magnitude of n1 > n2. */[0m
  232 |                 if (!use_sign || n1->n_sign == PLUS)[0m
  233 |                   return (1);[0m
  234 |                 else[0m
  235 |                   return (-1);[0m
  236 |               }[0m
      | [0;1;32m               
[0m[1mnumber.c:232:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                 if (!use_sign || n1->n_sign == PLUS)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  233 |                   return (1);[0m
  234 |                 else[0m
      | [0;32m                } 
[0m[1mnumber.c:234:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  235 |                   return (-1);[0m
      | [0;1;32m                              
[0m[1mnumber.c:240:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |           for (count = n2->n_scale-n1->n_scale; count>0; count--)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  241 |             if (*n2ptr++ != 0)[0m
  242 |               {[0m
  243 |                 /* Magnitude of n1 < n2. */[0m
  244 |                 if (!use_sign || n1->n_sign == PLUS)[0m
  245 |                   return (-1);[0m
  246 |                 else[0m
  247 |                   return (1);[0m
  248 |               }[0m
      | [0;1;32m               
[0m[1mnumber.c:244:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |                 if (!use_sign || n1->n_sign == PLUS)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  245 |                   return (-1);[0m
  246 |                 else[0m
      | [0;32m                } 
[0m[1mnumber.c:246:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  247 |                   return (1);[0m
      | [0;1;32m                             
[0m[1mnumber.c:282:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |   if (num == _zero_) return TRUE;[0m
      | [0;1;32m                    ^            
[0m      | [0;32m                     {
[0m[1mnumber.c:289:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |   while ((count > 0) && (*nptr++ == 0)) count--;[0m
      | [0;1;32m                                       ^        
[0m      | [0;32m                                        {
[0m[1mnumber.c:291:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |   if (count != 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  292 |     return FALSE;[0m
  293 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:293:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  294 |     return TRUE;[0m
      | [0;1;32m                
[0m[1mnumber.c:308:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   if (scale > num->n_scale)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  309 |     scale = num->n_scale;[0m
      | [0;1;32m                         
[0m[1mnumber.c:316:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |   while ((count > 0) && (*nptr++ == 0)) count--;[0m
      | [0;1;32m                                       ^        
[0m      | [0;32m                                        {
[0m[1mnumber.c:318:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |   if (count != 0 && (count != 1 || *--nptr != 1))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  319 |     return FALSE;[0m
  320 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:320:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  321 |     return TRUE;[0m
      | [0;1;32m                
[0m[1mnumber.c:347:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |       for (count = scale_min - sum_scale; count > 0; count--)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  348 |         *sumptr++ = 0;[0m
      | [0;1;32m                      
[0m[1mnumber.c:361:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |       if (n1bytes > n2bytes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  362 |         while (n1bytes>n2bytes)[0m
  363 |           { *sumptr-- = *n1ptr--; n1bytes--;}[0m
  364 |       else[0m
      | [0;32m      } 
[0m[1mnumber.c:363:6: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the heap area [clang-analyzer-security.ArrayBound][0m
  363 |           { *sumptr-- = *n1ptr--; n1bytes--;}[0m
      | [0;1;32m            ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1461:2: [0m[0;1;36mnote: [0mCalling 'bc_sub'[0m
 1461 |         bc_sub (num, int_part, &frac_part, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:7: [0m[0;1;36mnote: [0mAssuming 'n1->n_sign' is not equal to 'n2->n_sign'[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:526:14: [0m[0;1;36mnote: [0mCalling '_bc_do_add'[0m
  526 |       diff = _bc_do_add (n1, n2, scale_min);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:339:15: [0m[0;1;36mnote: [0mAssuming 'n1->n_scale' is > 'n2->n_scale'[0m
  339 |   sum_scale = MAX (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m              ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:339:15: [0m[0;1;36mnote: [0m'?' condition is true[0m
  339 |   sum_scale = MAX (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m              ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:340:16: [0m[0;1;36mnote: [0mAssuming 'n1->n_len' is > 'n2->n_len'[0m
  340 |   sum_digits = MAX (n1->n_len, n2->n_len) + 1;[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:340:16: [0m[0;1;36mnote: [0m'?' condition is true[0m
  340 |   sum_digits = MAX (n1->n_len, n2->n_len) + 1;[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:341:33: [0m[0;1;36mnote: [0mAssuming 'sum_scale' is <= 'scale_min'[0m
  341 |   sum = bc_new_num (sum_digits, MAX(sum_scale, scale_min));[0m
      | [0;1;32m                                ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:341:33: [0m[0;1;36mnote: [0m'?' condition is false[0m
  341 |   sum = bc_new_num (sum_digits, MAX(sum_scale, scale_min));[0m
      | [0;1;32m                                ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:344:7: [0m[0;1;36mnote: [0mAssuming 'scale_min' is <= 'sum_scale'[0m
  344 |   if (scale_min > sum_scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:344:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  344 |   if (scale_min > sum_scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:359:7: [0m[0;1;36mnote: [0m'n1bytes' is not equal to 'n2bytes'[0m
  359 |   if (n1bytes != n2bytes)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mnumber.c:359:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  359 |   if (n1bytes != n2bytes)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:361:11: [0m[0;1;36mnote: [0m'n1bytes' is > 'n2bytes'[0m
  361 |       if (n1bytes > n2bytes)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mnumber.c:361:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  361 |       if (n1bytes > n2bytes)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:362:9: [0m[0;1;36mnote: [0m'n1bytes' is > 'n2bytes'[0m
  362 |         while (n1bytes>n2bytes)[0m
      | [0;1;32m               ^~~~~~~
[0m[1mnumber.c:362:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  362 |         while (n1bytes>n2bytes)[0m
      | [0;1;32m        ^
[0m[1mnumber.c:363:18: [0m[0;1;36mnote: [0mAssuming byte offset is less than the extent of the region[0m
  363 |           { *sumptr-- = *n1ptr--; n1bytes--;}[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mnumber.c:363:6: [0m[0;1;36mnote: [0mAccess of the heap area at negative byte offset[0m
  363 |           { *sumptr-- = *n1ptr--; n1bytes--;}[0m
      | [0;1;32m            ^~~~~~~~~
[0m[1mnumber.c:364:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  365 |         while (n2bytes>n1bytes)[0m
  366 |           { *sumptr-- = *n2ptr--; n2bytes--;}[0m
      | [0;1;32m                                             
[0m[1mnumber.c:381:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  382 |         carry = 0;[0m
      | [0;1;32m                  
[0m[1mnumber.c:393:7: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the heap area [clang-analyzer-security.ArrayBound][0m
  393 |       *sumptr = *n1ptr-- + carry;[0m
      | [0;1;32m      ^
[0m[1mnumber.c:1295:7: [0m[0;1;36mnote: [0mAssuming 'cmp_res' is >= 0[0m
 1295 |   if (cmp_res < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1295 |   if (cmp_res < 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1299:11: [0m[0;1;36mnote: [0mAssuming 'cmp_res' is not equal to 0[0m
 1299 |       if (cmp_res == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mnumber.c:1299:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1299 |       if (cmp_res == 0)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:1307:7: [0m[0;1;36mnote: [0mAssuming 'cmp_res' is not equal to 0[0m
 1307 |   if (cmp_res == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:1307:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1307 |   if (cmp_res == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1315:12: [0m[0;1;36mnote: [0mAssuming 'scale' is <= field 'n_scale'[0m
 1315 |   rscale = MAX (scale, (*num)->n_scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:1315:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1315 |   rscale = MAX (scale, (*num)->n_scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:1324:7: [0m[0;1;36mnote: [0mAssuming 'cmp_res' is >= 0[0m
 1324 |   if (cmp_res < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1324:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1324 |   if (cmp_res < 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1345:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1345 |   while (!done)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1350:7: [0m[0;1;36mnote: [0mCalling 'bc_add'[0m
 1350 |       bc_add (guess, guess1, &guess, 0);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:572:7: [0m[0;1;36mnote: [0mAssuming 'n1->n_sign' is equal to 'n2->n_sign'[0m
  572 |   if (n1->n_sign == n2->n_sign)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:572:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  572 |   if (n1->n_sign == n2->n_sign)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:574:13: [0m[0;1;36mnote: [0mCalling '_bc_do_add'[0m
  574 |       sum = _bc_do_add (n1, n2, scale_min);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:339:15: [0m[0;1;36mnote: [0mAssuming 'n1->n_scale' is <= 'n2->n_scale'[0m
  339 |   sum_scale = MAX (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m              ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:339:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
  339 |   sum_scale = MAX (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m              ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:340:16: [0m[0;1;36mnote: [0mAssuming 'n1->n_len' is <= 'n2->n_len'[0m
  340 |   sum_digits = MAX (n1->n_len, n2->n_len) + 1;[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:340:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
  340 |   sum_digits = MAX (n1->n_len, n2->n_len) + 1;[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:341:33: [0m[0;1;36mnote: [0mAssuming 'sum_scale' is <= 'scale_min'[0m
  341 |   sum = bc_new_num (sum_digits, MAX(sum_scale, scale_min));[0m
      | [0;1;32m                                ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:341:33: [0m[0;1;36mnote: [0m'?' condition is false[0m
  341 |   sum = bc_new_num (sum_digits, MAX(sum_scale, scale_min));[0m
      | [0;1;32m                                ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:344:7: [0m[0;1;36mnote: [0mAssuming 'scale_min' is <= 'sum_scale'[0m
  344 |   if (scale_min > sum_scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:344:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  344 |   if (scale_min > sum_scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:359:7: [0m[0;1;36mnote: [0mAssuming 'n1bytes' is equal to 'n2bytes'[0m
  359 |   if (n1bytes != n2bytes)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:359:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  359 |   if (n1bytes != n2bytes)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:373:11: [0m[0;1;36mnote: [0mAssuming 'n1bytes' is > 0[0m
  373 |   while ((n1bytes > 0) && (n2bytes > 0))[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mnumber.c:373:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  373 |   while ((n1bytes > 0) && (n2bytes > 0))[0m
      | [0;1;32m         ^
[0m[1mnumber.c:373:28: [0m[0;1;36mnote: [0mAssuming 'n2bytes' is <= 0[0m
  373 |   while ((n1bytes > 0) && (n2bytes > 0))[0m
      | [0;1;32m                           ^~~~~~~~~~~
[0m[1mnumber.c:373:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 389[0m
  373 |   while ((n1bytes > 0) && (n2bytes > 0))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:389:7: [0m[0;1;36mnote: [0m'n1bytes' is not equal to 0[0m
  389 |   if (n1bytes == 0)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mnumber.c:389:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  389 |   if (n1bytes == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:391:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  391 |   while (n1bytes-- > 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:393:7: [0m[0;1;36mnote: [0mAccess of the heap area at negative byte offset[0m
  393 |       *sumptr = *n1ptr-- + carry;[0m
      | [0;1;32m      ^~~~~~~
[0m[1mnumber.c:399:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  400 |         carry = 0;[0m
      | [0;1;32m                  
[0m[1mnumber.c:405:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |   if (carry == 1)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  406 |     *sumptr += 1;[0m
      | [0;1;32m                 
[0m[1mnumber.c:439:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  439 |       for (count = scale_min - diff_scale; count > 0; count--)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  440 |         *diffptr++ = 0;[0m
      | [0;1;32m                       
[0m[1mnumber.c:455:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |       for (count = n1->n_scale - min_scale; count > 0; count--)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  456 |         *diffptr-- = *n1ptr--;[0m
      | [0;1;32m                              
[0m[1mnumber.c:456:2: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the heap area [clang-analyzer-security.ArrayBound][0m
  456 |         *diffptr-- = *n1ptr--;[0m
      | [0;1;32m        ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1461:2: [0m[0;1;36mnote: [0mCalling 'bc_sub'[0m
 1461 |         bc_sub (num, int_part, &frac_part, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:7: [0m[0;1;36mnote: [0mAssuming 'n1->n_sign' is equal to 'n2->n_sign'[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:534:7: [0m[0;1;36mnote: [0mControl jumps to 'case 1:'  at line 547[0m
  534 |       switch (cmp_res)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:549:11: [0m[0;1;36mnote: [0mCalling '_bc_do_sub'[0m
  549 |           diff = _bc_do_sub (n1, n2, scale_min);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:429:23: [0m[0;1;36mnote: [0m'n1->n_len' is > 'n2->n_len'[0m
  429 |   diff_len = MAX (n1->n_len, n2->n_len);[0m
      | [0;1;32m                      ^
[0m[1mnumber.c:429:14: [0m[0;1;36mnote: [0m'?' condition is true[0m
  429 |   diff_len = MAX (n1->n_len, n2->n_len);[0m
      | [0;1;32m             ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:430:16: [0m[0;1;36mnote: [0mAssuming 'n1->n_scale' is > 'n2->n_scale'[0m
  430 |   diff_scale = MAX (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:430:16: [0m[0;1;36mnote: [0m'?' condition is true[0m
  430 |   diff_scale = MAX (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:431:23: [0m[0;1;36mnote: [0m'n1->n_len' is > 'n2->n_len'[0m
  431 |   min_len = MIN  (n1->n_len, n2->n_len);[0m
      | [0;1;32m                      ^
[0m[1mnumber.c:431:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
  431 |   min_len = MIN  (n1->n_len, n2->n_len);[0m
      | [0;1;32m            ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:432:24: [0m[0;1;36mnote: [0m'n1->n_scale' is > 'n2->n_scale'[0m
  432 |   min_scale = MIN (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:432:15: [0m[0;1;36mnote: [0m'?' condition is true[0m
  432 |   min_scale = MIN (n1->n_scale, n2->n_scale);[0m
      | [0;1;32m              ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:433:32: [0m[0;1;36mnote: [0mAssuming 'diff_scale' is <= 'scale_min'[0m
  433 |   diff = bc_new_num (diff_len, MAX(diff_scale, scale_min));[0m
      | [0;1;32m                               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:433:32: [0m[0;1;36mnote: [0m'?' condition is false[0m
  433 |   diff = bc_new_num (diff_len, MAX(diff_scale, scale_min));[0m
      | [0;1;32m                               ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:436:7: [0m[0;1;36mnote: [0mAssuming 'scale_min' is <= 'diff_scale'[0m
  436 |   if (scale_min > diff_scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:436:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  436 |   if (scale_min > diff_scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:452:22: [0m[0;1;36mnote: [0m'min_scale' is not equal to field 'n_scale'[0m
  452 |   if (n1->n_scale != min_scale)[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mnumber.c:452:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  452 |   if (n1->n_scale != min_scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:455:45: [0m[0;1;36mnote: [0mAssuming 'count' is > 0[0m
  455 |       for (count = n1->n_scale - min_scale; count > 0; count--)[0m
      | [0;1;32m                                            ^~~~~~~~~
[0m[1mnumber.c:455:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  455 |       for (count = n1->n_scale - min_scale; count > 0; count--)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:456:15: [0m[0;1;36mnote: [0mAssuming byte offset is less than the extent of the region[0m
  456 |         *diffptr-- = *n1ptr--;[0m
      | [0;1;32m                     ^~~~~~~~
[0m[1mnumber.c:456:2: [0m[0;1;36mnote: [0mAccess of the heap area at negative byte offset[0m
  456 |         *diffptr-- = *n1ptr--;[0m
      | [0;1;32m        ^~~~~~~~~~
[0m[1mnumber.c:469:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  470 |             borrow = 0;[0m
      | [0;1;32m                       
[0m[1mnumber.c:485:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  485 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  486 |         borrow = 0;[0m
      | [0;1;32m                   
[0m[1mnumber.c:501:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  502 |             borrow = 0;[0m
      | [0;1;32m                       
[0m[1mnumber.c:538:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  538 |           diff = _bc_do_sub (n2, n1, scale_min);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  539 |           diff->n_sign = (n2->n_sign == PLUS ? MINUS : PLUS);[0m
  540 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnumber.c:543:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  543 |           res_scale = MAX (scale_min, MAX(n1->n_scale, n2->n_scale));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  544 |           diff = bc_new_num (1, res_scale);[0m
  545 |           memset (diff->n_value, 0, res_scale+1);[0m
  546 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnumber.c:545:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  545 |           memset (diff->n_value, 0, res_scale+1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:545:4: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  545 |           memset (diff->n_value, 0, res_scale+1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:549:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  549 |           diff = _bc_do_sub (n1, n2, scale_min);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  550 |           diff->n_sign = n1->n_sign;[0m
  551 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnumber.c:585:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  585 |           sum = _bc_do_sub (n2, n1, scale_min);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  586 |           sum->n_sign = n2->n_sign;[0m
  587 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnumber.c:590:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  590 |           res_scale = MAX (scale_min, MAX(n1->n_scale, n2->n_scale));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  591 |           sum = bc_new_num (1, res_scale);[0m
  592 |           memset (sum->n_value, 0, res_scale+1);[0m
  593 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnumber.c:592:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  592 |           memset (sum->n_value, 0, res_scale+1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:592:4: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  592 |           memset (sum->n_value, 0, res_scale+1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:596:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  596 |           sum = _bc_do_sub (n1, n2, scale_min);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  597 |           sum->n_sign = n1->n_sign;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnumber.c:628:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m                     ^                    
[0m      | [0;32m                      {
[0m[1mnumber.c:630:16: [0m[0;1;35mwarning: [0m[1mAccess to field 'n_sign' results in a dereference of a null pointer (loaded from variable 'temp') [clang-analyzer-core.NullDereference][0m
  630 |   temp->n_sign = PLUS;[0m
      | [0;1;32m               ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1471:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1471 |         while (!bc_is_zero (int_part))[0m
      | [0;1;32m        ^
[0m[1mnumber.c:1473:6: [0m[0;1;36mnote: [0mCalling 'bc_modulo'[0m
 1473 |             bc_modulo (int_part, base, &cur_dig, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1136:10: [0m[0;1;36mnote: [0mCalling 'bc_divmod'[0m
 1136 |   return bc_divmod (num1, num2, NULL, result, scale);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1106:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1106 |   if (bc_is_zero (num2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1109:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1109 |   rscale = MAX (num1->n_scale, num2->n_scale+scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:1109:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1109 |   rscale = MAX (num1->n_scale, num2->n_scale+scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:1114:7: [0m[0;1;36mnote: [0m'quot' is null[0m
 1114 |   if (quot)[0m
      | [0;1;32m      ^~~~
[0m[1mnumber.c:1114:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1114 |   if (quot)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1116:3: [0m[0;1;36mnote: [0mCalling 'bc_multiply'[0m
 1116 |   bc_multiply (temp, num2, &temp, rscale);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0mAssuming 'n1->n_scale' is <= 'n2->n_scale'[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1m./../h/number.h:70:29: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                            ^
[0m[1m./../h/number.h:71:29: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                            ^
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:31: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                              ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:49: [0m[0;1;36mnote: [0m'n1->n_scale' is <= 'n2->n_scale'[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                                ^
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:845:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:848:3: [0m[0;1;36mnote: [0mCalling '_bc_rec_mul'[0m
  848 |   _bc_rec_mul (n1, len1, n2, len2, &pval);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mnumber.c:749:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  749 |       || ulen < MUL_SMALL_DIGITS[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m      ^
[0m[1mnumber.c:750:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  750 |       || vlen < MUL_SMALL_DIGITS ) {[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m  ^
[0m[1mnumber.c:756:8: [0m[0;1;36mnote: [0mAssuming 'ulen' is <= 'vlen'[0m
  756 |   n = (MAX(ulen, vlen)+1) / 2;[0m
      | [0;1;32m       ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:756:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
  756 |   n = (MAX(ulen, vlen)+1) / 2;[0m
      | [0;1;32m       ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:759:7: [0m[0;1;36mnote: [0mAssuming 'ulen' is >= 'n'[0m
  759 |   if (ulen < n) {[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mnumber.c:759:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  759 |   if (ulen < n) {[0m
      | [0;1;32m  ^
[0m[1mnumber.c:763:10: [0m[0;1;36mnote: [0mCalling 'new_sub_num'[0m
  763 |     u1 = new_sub_num (ulen-n, 0, u->n_value);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:623:7: [0m[0;1;36mnote: [0mAssuming '_bc_Free_list' is equal to NULL[0m
  623 |   if (_bc_Free_list != NULL) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:623:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  623 |   if (_bc_Free_list != NULL) {[0m
      | [0;1;32m  ^
[0m[1mnumber.c:627:5: [0m[0;1;36mnote: [0mValue assigned to 'temp'[0m
  627 |     temp = (bc_num) malloc (sizeof(bc_struct));[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:628:9: [0m[0;1;36mnote: [0mAssuming 'temp' is equal to NULL[0m
  628 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:628:9: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  628 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:628:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  628 |     if (temp == NULL) bc_out_of_memory ();[0m
      | [0;1;32m    ^
[0m[1mnumber.c:630:16: [0m[0;1;36mnote: [0mAccess to field 'n_sign' results in a dereference of a null pointer (loaded from variable 'temp')[0m
  630 |   temp->n_sign = PLUS;[0m
      | [0;1;32m  ~~~~         ^
[0m[1mnumber.c:660:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  660 |       while ((n1ptr >= n1->n_value) && (n2ptr <= n2end))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  661 |         sum += *n1ptr-- * *n2ptr++;[0m
      | [0;1;32m                                   
[0m[1mnumber.c:680:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  680 |   if (val->n_value[0] == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  681 |     count--;[0m
      | [0;1;32m            
[0m[1mnumber.c:704:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |       if (*accp < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  705 |         *accp-- += BASE;[0m
  706 |       else[0m
      | [0;32m      } 
[0m[1mnumber.c:706:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  706 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  707 |         carry = 0;[0m
      | [0;1;32m                  
[0m[1mnumber.c:723:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  723 |       if (*accp > (BASE-1))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  724 |         *accp-- -= BASE;[0m
  725 |       else[0m
      | [0;32m      } 
[0m[1mnumber.c:725:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  726 |         carry = 0;[0m
      | [0;1;32m                  
[0m[1mnumber.c:785:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'n_len' results in a dereference of a null pointer (loaded from variable 'd1') [clang-analyzer-core.NullDereference][0m
  785 |   d1len = d1->n_len;[0m
      | [0;1;32m          ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1471:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1471 |         while (!bc_is_zero (int_part))[0m
      | [0;1;32m        ^
[0m[1mnumber.c:1473:6: [0m[0;1;36mnote: [0mCalling 'bc_modulo'[0m
 1473 |             bc_modulo (int_part, base, &cur_dig, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1136:10: [0m[0;1;36mnote: [0mCalling 'bc_divmod'[0m
 1136 |   return bc_divmod (num1, num2, NULL, result, scale);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1106:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1106 |   if (bc_is_zero (num2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1109:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1109 |   rscale = MAX (num1->n_scale, num2->n_scale+scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:1109:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1109 |   rscale = MAX (num1->n_scale, num2->n_scale+scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:1114:7: [0m[0;1;36mnote: [0m'quot' is null[0m
 1114 |   if (quot)[0m
      | [0;1;32m      ^~~~
[0m[1mnumber.c:1114:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1114 |   if (quot)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1116:3: [0m[0;1;36mnote: [0mCalling 'bc_multiply'[0m
 1116 |   bc_multiply (temp, num2, &temp, rscale);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0mAssuming 'n1->n_scale' is <= 'n2->n_scale'[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1m./../h/number.h:70:29: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                            ^
[0m[1m./../h/number.h:71:29: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                            ^
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:31: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                              ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:49: [0m[0;1;36mnote: [0m'n1->n_scale' is <= 'n2->n_scale'[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                                ^
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:845:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:848:3: [0m[0;1;36mnote: [0mCalling '_bc_rec_mul'[0m
  848 |   _bc_rec_mul (n1, len1, n2, len2, &pval);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mnumber.c:749:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  749 |       || ulen < MUL_SMALL_DIGITS[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m      ^
[0m[1mnumber.c:750:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  750 |       || vlen < MUL_SMALL_DIGITS ) {[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m  ^
[0m[1mnumber.c:756:8: [0m[0;1;36mnote: [0mAssuming 'ulen' is <= 'vlen'[0m
  756 |   n = (MAX(ulen, vlen)+1) / 2;[0m
      | [0;1;32m       ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:756:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
  756 |   n = (MAX(ulen, vlen)+1) / 2;[0m
      | [0;1;32m       ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:759:7: [0m[0;1;36mnote: [0mAssuming 'ulen' is >= 'n'[0m
  759 |   if (ulen < n) {[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mnumber.c:759:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  759 |   if (ulen < n) {[0m
      | [0;1;32m  ^
[0m[1mnumber.c:766:7: [0m[0;1;36mnote: [0mAssuming 'vlen' is >= 'n'[0m
  766 |   if (vlen < n) {[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mnumber.c:766:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  766 |   if (vlen < n) {[0m
      | [0;1;32m  ^
[0m[1mnumber.c:778:27: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  778 |   m1zero = bc_is_zero(u1) || bc_is_zero(v1);[0m
      | [0;1;32m                          ^
[0m[1mnumber.c:782:3: [0m[0;1;36mnote: [0mCalling 'bc_init_num'[0m
  782 |   bc_init_num(&d1);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:782:3: [0m[0;1;36mnote: [0mReturning from 'bc_init_num'[0m
  782 |   bc_init_num(&d1);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:784:3: [0m[0;1;36mnote: [0mCalling 'bc_sub'[0m
  784 |   bc_sub (u1, u0, &d1, 0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:520:3: [0m[0;1;36mnote: [0m'diff' initialized to a null pointer value[0m
  520 |   bc_num diff = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~
[0m[1mnumber.c:524:7: [0m[0;1;36mnote: [0mAssuming 'n1->n_sign' is equal to 'n2->n_sign'[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:534:7: [0m[0;1;36mnote: [0m'Default' branch taken. Execution continues on line 556[0m
  534 |       switch (cmp_res)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:557:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'd1'[0m
  557 |   *result = diff;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~
[0m[1mnumber.c:784:3: [0m[0;1;36mnote: [0mReturning from 'bc_sub'[0m
  784 |   bc_sub (u1, u0, &d1, 0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:785:11: [0m[0;1;36mnote: [0mAccess to field 'n_len' results in a dereference of a null pointer (loaded from variable 'd1')[0m
  785 |   d1len = d1->n_len;[0m
      | [0;1;32m          ^~
[0m[1mnumber.c:787:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'n_len' results in a dereference of a null pointer (loaded from variable 'd2') [clang-analyzer-core.NullDereference][0m
  787 |   d2len = d2->n_len;[0m
      | [0;1;32m          ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1471:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1471 |         while (!bc_is_zero (int_part))[0m
      | [0;1;32m        ^
[0m[1mnumber.c:1473:6: [0m[0;1;36mnote: [0mCalling 'bc_modulo'[0m
 1473 |             bc_modulo (int_part, base, &cur_dig, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1136:10: [0m[0;1;36mnote: [0mCalling 'bc_divmod'[0m
 1136 |   return bc_divmod (num1, num2, NULL, result, scale);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1106:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1106 |   if (bc_is_zero (num2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1109:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1109 |   rscale = MAX (num1->n_scale, num2->n_scale+scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:1109:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1109 |   rscale = MAX (num1->n_scale, num2->n_scale+scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:1114:7: [0m[0;1;36mnote: [0m'quot' is null[0m
 1114 |   if (quot)[0m
      | [0;1;32m      ^~~~
[0m[1mnumber.c:1114:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1114 |   if (quot)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1116:3: [0m[0;1;36mnote: [0mCalling 'bc_multiply'[0m
 1116 |   bc_multiply (temp, num2, &temp, rscale);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0mAssuming 'n1->n_scale' is <= 'n2->n_scale'[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1m./../h/number.h:70:29: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                            ^
[0m[1m./../h/number.h:71:29: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                            ^
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:31: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                              ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:49: [0m[0;1;36mnote: [0m'n1->n_scale' is <= 'n2->n_scale'[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                                ^
[0m[1mnumber.c:845:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m                                        ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:845:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:845:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
  845 |   prod_scale = MIN(full_scale,MAX(scale,MAX(n1->n_scale,n2->n_scale)));[0m
      | [0;1;32m               ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:848:3: [0m[0;1;36mnote: [0mCalling '_bc_rec_mul'[0m
  848 |   _bc_rec_mul (n1, len1, n2, len2, &pval);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mnumber.c:749:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  749 |       || ulen < MUL_SMALL_DIGITS[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m      ^
[0m[1mnumber.c:750:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  750 |       || vlen < MUL_SMALL_DIGITS ) {[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:748:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  748 |   if ((ulen+vlen) < mul_base_digits[0m
      | [0;1;32m  ^
[0m[1mnumber.c:756:8: [0m[0;1;36mnote: [0mAssuming 'ulen' is <= 'vlen'[0m
  756 |   n = (MAX(ulen, vlen)+1) / 2;[0m
      | [0;1;32m       ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:756:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
  756 |   n = (MAX(ulen, vlen)+1) / 2;[0m
      | [0;1;32m       ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:759:7: [0m[0;1;36mnote: [0mAssuming 'ulen' is >= 'n'[0m
  759 |   if (ulen < n) {[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mnumber.c:759:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  759 |   if (ulen < n) {[0m
      | [0;1;32m  ^
[0m[1mnumber.c:766:7: [0m[0;1;36mnote: [0mAssuming 'vlen' is >= 'n'[0m
  766 |   if (vlen < n) {[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mnumber.c:766:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  766 |   if (vlen < n) {[0m
      | [0;1;32m  ^
[0m[1mnumber.c:778:27: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  778 |   m1zero = bc_is_zero(u1) || bc_is_zero(v1);[0m
      | [0;1;32m                          ^
[0m[1mnumber.c:783:3: [0m[0;1;36mnote: [0mCalling 'bc_init_num'[0m
  783 |   bc_init_num(&d2);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:783:3: [0m[0;1;36mnote: [0mReturning from 'bc_init_num'[0m
  783 |   bc_init_num(&d2);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:786:3: [0m[0;1;36mnote: [0mCalling 'bc_sub'[0m
  786 |   bc_sub (v0, v1, &d2, 0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:520:3: [0m[0;1;36mnote: [0m'diff' initialized to a null pointer value[0m
  520 |   bc_num diff = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~
[0m[1mnumber.c:524:7: [0m[0;1;36mnote: [0mAssuming 'n1->n_sign' is equal to 'n2->n_sign'[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:534:7: [0m[0;1;36mnote: [0m'Default' branch taken. Execution continues on line 556[0m
  534 |       switch (cmp_res)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:557:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'd2'[0m
  557 |   *result = diff;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~
[0m[1mnumber.c:786:3: [0m[0;1;36mnote: [0mReturning from 'bc_sub'[0m
  786 |   bc_sub (v0, v1, &d2, 0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:787:11: [0m[0;1;36mnote: [0mAccess to field 'n_len' results in a dereference of a null pointer (loaded from variable 'd2')[0m
  787 |   d2len = d2->n_len;[0m
      | [0;1;32m          ^~
[0m[1mnumber.c:791:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |   if (m1zero)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  792 |     m1 = bc_copy_num (_zero_);[0m
  793 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:793:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  794 |     _bc_rec_mul (u1, u1->n_len, v1, v1->n_len, &m1);[0m
      | [0;1;32m                                                    
[0m[1mnumber.c:796:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  796 |   if (bc_is_zero(d1) || bc_is_zero(d2))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  797 |     m2 = bc_copy_num (_zero_);[0m
  798 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:798:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  799 |     _bc_rec_mul (d1, d1len, d2, d2len, &m2);[0m
      | [0;1;32m                                            
[0m[1mnumber.c:801:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  801 |   if (bc_is_zero(u0) || bc_is_zero(v0))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  802 |     m3 = bc_copy_num (_zero_);[0m
  803 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:803:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  803 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  804 |     _bc_rec_mul (u0, u0->n_len, v0, v0->n_len, &m3);[0m
      | [0;1;32m                                                    
[0m[1mnumber.c:842:10: [0m[0;1;35mwarning: [0m[1mAccess to field 'n_len' results in a dereference of a null pointer (loaded from variable 'n1') [clang-analyzer-core.NullDereference][0m
  842 |   len1 = n1->n_len + n1->n_scale;[0m
      | [0;1;32m         ^
[0m[1mnumber.c:1295:7: [0m[0;1;36mnote: [0mAssuming 'cmp_res' is >= 0[0m
 1295 |   if (cmp_res < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1295 |   if (cmp_res < 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1299:11: [0m[0;1;36mnote: [0mAssuming 'cmp_res' is not equal to 0[0m
 1299 |       if (cmp_res == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mnumber.c:1299:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1299 |       if (cmp_res == 0)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:1307:7: [0m[0;1;36mnote: [0mAssuming 'cmp_res' is not equal to 0[0m
 1307 |   if (cmp_res == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:1307:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1307 |   if (cmp_res == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1315:12: [0m[0;1;36mnote: [0mAssuming 'scale' is <= field 'n_scale'[0m
 1315 |   rscale = MAX (scale, (*num)->n_scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:1315:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1315 |   rscale = MAX (scale, (*num)->n_scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:1316:3: [0m[0;1;36mnote: [0mCalling 'bc_init_num'[0m
 1316 |   bc_init_num(&guess);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1316:3: [0m[0;1;36mnote: [0mReturning from 'bc_init_num'[0m
 1316 |   bc_init_num(&guess);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1324:7: [0m[0;1;36mnote: [0mAssuming 'cmp_res' is >= 0[0m
 1324 |   if (cmp_res < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1324:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1324 |   if (cmp_res < 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1338:7: [0m[0;1;36mnote: [0mCalling 'bc_raise'[0m
 1338 |       bc_raise (guess, guess1, &guess, 0);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1213:14: [0m[0;1;36mnote: [0mField 'n_scale' is equal to 0[0m
 1213 |    if (num2->n_scale != 0)[0m
      | [0;1;32m             ^
[0m[1mnumber.c:1213:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1213 |    if (num2->n_scale != 0)[0m
      | [0;1;32m   ^
[0m[1mnumber.c:1216:8: [0m[0;1;36mnote: [0m'exponent' is equal to 0[0m
 1216 |    if (exponent == 0 && (num2->n_len > 1 || num2->n_value[0] != 0))[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mnumber.c:1216:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mnumber.c:1216:32: [0m[0;1;36mnote: [0mField 'n_len' is <= 1[0m
 1216 |    if (exponent == 0 && (num2->n_len > 1 || num2->n_value[0] != 0))[0m
      | [0;1;32m                               ^
[0m[1mnumber.c:1216:26: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1216 |    if (exponent == 0 && (num2->n_len > 1 || num2->n_value[0] != 0))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1216:45: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1216 |    if (exponent == 0 && (num2->n_len > 1 || num2->n_value[0] != 0))[0m
      | [0;1;32m                                            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1216:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1216 |    if (exponent == 0 && (num2->n_len > 1 || num2->n_value[0] != 0))[0m
      | [0;1;32m   ^
[0m[1mnumber.c:1220:8: [0m[0;1;36mnote: [0m'exponent' is equal to 0[0m
 1220 |    if (exponent == 0)[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mnumber.c:1220:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1220 |    if (exponent == 0)[0m
      | [0;1;32m   ^
[0m[1mnumber.c:1222:8: [0m[0;1;36mnote: [0mCalling 'bc_free_num'[0m
 1222 |        bc_free_num (result);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:92:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   92 |   if (*num == NULL) return;[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:92:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   92 |   if (*num == NULL) return;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:92:21: [0m[0;1;36mnote: [0mReturning without writing to '*num'[0m
   92 |   if (*num == NULL) return;[0m
      | [0;1;32m                    ^
[0m[1mnumber.c:1222:8: [0m[0;1;36mnote: [0mReturning from 'bc_free_num'[0m
 1222 |        bc_free_num (result);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1338:7: [0m[0;1;36mnote: [0mReturning from 'bc_raise'[0m
 1338 |       bc_raise (guess, guess1, &guess, 0);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1345:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1345 |   while (!done)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1350:7: [0m[0;1;36mnote: [0mCalling 'bc_add'[0m
 1350 |       bc_add (guess, guess1, &guess, 0);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:568:3: [0m[0;1;36mnote: [0m'sum' initialized to a null pointer value[0m
  568 |   bc_num sum = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~
[0m[1mnumber.c:572:7: [0m[0;1;36mnote: [0mAssuming 'n1->n_sign' is not equal to 'n2->n_sign'[0m
  572 |   if (n1->n_sign == n2->n_sign)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:572:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  572 |   if (n1->n_sign == n2->n_sign)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:581:7: [0m[0;1;36mnote: [0m'Default' branch taken. Execution continues on line 602[0m
  581 |       switch (cmp_res)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:603:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'guess'[0m
  603 |   *result = sum;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1mnumber.c:1350:7: [0m[0;1;36mnote: [0mReturning from 'bc_add'[0m
 1350 |       bc_add (guess, guess1, &guess, 0);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1351:20: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 'n1'[0m
 1351 |       bc_multiply (guess, point5, &guess, cscale);[0m
      | [0;1;32m                   ^~~~~
[0m[1mnumber.c:1351:7: [0m[0;1;36mnote: [0mCalling 'bc_multiply'[0m
 1351 |       bc_multiply (guess, point5, &guess, cscale);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:842:10: [0m[0;1;36mnote: [0mAccess to field 'n_len' results in a dereference of a null pointer (loaded from variable 'n1')[0m
  842 |   len1 = n1->n_len + n1->n_scale;[0m
      | [0;1;32m         ^~
[0m[1mnumber.c:856:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (bc_is_zero (pval))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  857 |     pval->n_sign = PLUS;[0m
      | [0;1;32m                        
[0m[1mnumber.c:873:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  873 |   if (digit == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  874 |     memset (result, 0, size);[0m
  875 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:874:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  874 |     memset (result, 0, size);[0m
      | [0;1;32m    ^~~~~~
[0m[1mnumber.c:874:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  874 |     memset (result, 0, size);[0m
      | [0;1;32m    ^~~~~~
[0m[1mnumber.c:877:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |       if (digit == 1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  878 |         memcpy (result, num, size);[0m
  879 |       else[0m
      | [0;32m      } 
[0m[1mnumber.c:878:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  878 |         memcpy (result, num, size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mnumber.c:878:2: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  878 |         memcpy (result, num, size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mnumber.c:893:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  893 |           if (carry != 0) *rptr = carry;[0m
      | [0;1;32m                         ^              
[0m      | [0;32m                          {
[0m[1mnumber.c:893:20: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the heap area [clang-analyzer-security.ArrayBound][0m
  893 |           if (carry != 0) *rptr = carry;[0m
      | [0;1;32m                          ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1457:2: [0m[0;1;36mnote: [0mCalling 'bc_divide'[0m
 1457 |         bc_divide (num, _one_, &int_part, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:918:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  918 |   if (bc_is_zero (n2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:921:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is not equal to 0[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:921:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:939:11: [0m[0;1;36mnote: [0m'scale2' is > 0[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:939:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m         ^
[0m[1mnumber.c:939:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 941[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:943:7: [0m[0;1;36mnote: [0mAssuming 'scale1' is >= 'scale'[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mnumber.c:943:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:948:7: [0m[0;1;36mnote: [0mAssuming 'num1' is not equal to NULL[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:948:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:954:7: [0m[0;1;36mnote: [0mAssuming 'num2' is not equal to NULL[0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:954:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:958:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 965[0m
  958 |   while (*n2ptr == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:965:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  965 |   if (len2 > len1+scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mnumber.c:965:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  965 |   if (len2 > len1+scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:973:11: [0m[0;1;36mnote: [0m'len2' is <= 'len1'[0m
  973 |       if (len2>len1)[0m
      | [0;1;32m          ^~~~
[0m[1mnumber.c:973:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  973 |       if (len2>len1)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:985:7: [0m[0;1;36mnote: [0mAssuming 'mval' is not equal to NULL[0m
  985 |   if (mval == NULL) bc_out_of_memory ();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:985:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  985 |   if (mval == NULL) bc_out_of_memory ();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:988:8: [0m[0;1;36mnote: [0m'zero' is 0[0m
  988 |   if (!zero)[0m
      | [0;1;32m       ^~~~
[0m[1mnumber.c:988:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  988 |   if (!zero)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:992:11: [0m[0;1;36mnote: [0mAssuming 'norm' is not equal to 1[0m
  992 |       if (norm != 1)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mnumber.c:992:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  992 |       if (norm != 1)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:994:4: [0m[0;1;36mnote: [0mCalling '_one_mult'[0m
  994 |           _one_mult (num1, len1+scale1+extra+1, norm, num1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:873:7: [0m[0;1;36mnote: [0mAssuming 'digit' is not equal to 0[0m
  873 |   if (digit == 0)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mnumber.c:873:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  873 |   if (digit == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:877:11: [0m[0;1;36mnote: [0m'digit' is not equal to 1[0m
  877 |       if (digit == 1)[0m
      | [0;1;32m          ^~~~~
[0m[1mnumber.c:877:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  877 |       if (digit == 1)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:886:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  886 |           while (size-- > 0)[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mnumber.c:886:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  886 |           while (size-- > 0)[0m
      | [0;1;32m          ^
[0m[1mnumber.c:886:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  886 |           while (size-- > 0)[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mnumber.c:886:4: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 893[0m
  886 |           while (size-- > 0)[0m
      | [0;1;32m          ^
[0m[1mnumber.c:893:8: [0m[0;1;36mnote: [0mAssuming 'carry' is not equal to 0[0m
  893 |           if (carry != 0) *rptr = carry;[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mnumber.c:893:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  893 |           if (carry != 0) *rptr = carry;[0m
      | [0;1;32m          ^
[0m[1mnumber.c:893:20: [0m[0;1;36mnote: [0mAccess of the heap area at negative byte offset -1[0m
  893 |           if (carry != 0) *rptr = carry;[0m
      | [0;1;32m                          ^~~~~
[0m[1mnumber.c:918:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  918 |   if (bc_is_zero (n2)) return -1;[0m
      | [0;1;32m                      ^          
[0m      | [0;32m                       {
[0m[1mnumber.c:927:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  927 |           memset (&qval->n_value[n1->n_len],0,scale);[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:927:4: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  927 |           memset (&qval->n_value[n1->n_len],0,scale);[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:928:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  928 |           memcpy (qval->n_value, n1->n_value,[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:928:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  928 |           memcpy (qval->n_value, n1->n_value,[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:939:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m                                         ^         
[0m      | [0;32m                                          {
[0m[1mnumber.c:943:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  944 |     extra = scale - scale1;[0m
  945 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:945:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  946 |     extra = 0;[0m
      | [0;1;32m              
[0m[1mnumber.c:948:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m                   ^                   
[0m      | [0;32m                    {
[0m[1mnumber.c:949:3: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  949 |   memset (num1, 0, n1->n_len+n1->n_scale+extra+2);[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1457:2: [0m[0;1;36mnote: [0mCalling 'bc_divide'[0m
 1457 |         bc_divide (num, _one_, &int_part, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:918:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  918 |   if (bc_is_zero (n2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:921:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is equal to 0[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:921:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:923:15: [0m[0;1;36mnote: [0mField 'n_len' is not equal to 1[0m
  923 |       if (n2->n_len == 1 && *n2->n_value == 1)[0m
      | [0;1;32m              ^
[0m[1mnumber.c:923:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  923 |       if (n2->n_len == 1 && *n2->n_value == 1)[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:939:11: [0m[0;1;36mnote: [0m'scale2' is <= 0[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:939:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m                      ^
[0m[1mnumber.c:943:7: [0m[0;1;36mnote: [0mAssuming 'scale1' is >= 'scale'[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mnumber.c:943:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:947:3: [0m[0;1;36mnote: [0mValue assigned to 'num1'[0m
  947 |   num1 = (unsigned char *) malloc (n1->n_len+n1->n_scale+extra+2);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:948:7: [0m[0;1;36mnote: [0mAssuming 'num1' is equal to NULL[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:948:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:949:3: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
  949 |   memset (num1, 0, n1->n_len+n1->n_scale+extra+2);[0m
      | [0;1;32m  ^       ~~~~
[0m[1mnumber.c:949:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  949 |   memset (num1, 0, n1->n_len+n1->n_scale+extra+2);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:949:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  949 |   memset (num1, 0, n1->n_len+n1->n_scale+extra+2);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:950:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  950 |   memcpy (num1+1, n1->n_value, n1->n_len+n1->n_scale);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:950:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  950 |   memcpy (num1+1, n1->n_value, n1->n_len+n1->n_scale);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:954:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m                   ^                   
[0m      | [0;32m                    {
[0m[1mnumber.c:955:3: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  955 |   memcpy (num2, n2->n_value, len2);[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1457:2: [0m[0;1;36mnote: [0mCalling 'bc_divide'[0m
 1457 |         bc_divide (num, _one_, &int_part, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:918:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  918 |   if (bc_is_zero (n2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:921:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is equal to 0[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:921:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:923:15: [0m[0;1;36mnote: [0mField 'n_len' is not equal to 1[0m
  923 |       if (n2->n_len == 1 && *n2->n_value == 1)[0m
      | [0;1;32m              ^
[0m[1mnumber.c:923:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  923 |       if (n2->n_len == 1 && *n2->n_value == 1)[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:939:11: [0m[0;1;36mnote: [0m'scale2' is <= 0[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:939:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m                      ^
[0m[1mnumber.c:943:7: [0m[0;1;36mnote: [0mAssuming 'scale1' is >= 'scale'[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mnumber.c:943:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:948:7: [0m[0;1;36mnote: [0mAssuming 'num1' is not equal to NULL[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:948:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:953:3: [0m[0;1;36mnote: [0mValue assigned to 'num2'[0m
  953 |   num2 = (unsigned char *) malloc (len2+1);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:954:7: [0m[0;1;36mnote: [0mAssuming 'num2' is equal to NULL[0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:954:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:955:3: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
  955 |   memcpy (num2, n2->n_value, len2);[0m
      | [0;1;32m  ^       ~~~~
[0m[1mnumber.c:955:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  955 |   memcpy (num2, n2->n_value, len2);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:955:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  955 |   memcpy (num2, n2->n_value, len2);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:956:3: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the heap area [clang-analyzer-security.ArrayBound][0m
  956 |   *(num2+len2) = 0;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1457:2: [0m[0;1;36mnote: [0mCalling 'bc_divide'[0m
 1457 |         bc_divide (num, _one_, &int_part, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:918:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  918 |   if (bc_is_zero (n2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:921:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is equal to 0[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:921:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:923:15: [0m[0;1;36mnote: [0mField 'n_len' is not equal to 1[0m
  923 |       if (n2->n_len == 1 && *n2->n_value == 1)[0m
      | [0;1;32m              ^
[0m[1mnumber.c:923:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  923 |       if (n2->n_len == 1 && *n2->n_value == 1)[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:939:11: [0m[0;1;36mnote: [0m'scale2' is <= 0[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:939:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m                      ^
[0m[1mnumber.c:943:7: [0m[0;1;36mnote: [0mAssuming 'scale1' is >= 'scale'[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mnumber.c:943:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:948:7: [0m[0;1;36mnote: [0mAssuming 'num1' is not equal to NULL[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:948:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:954:7: [0m[0;1;36mnote: [0mAssuming 'num2' is not equal to NULL[0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:954:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:956:3: [0m[0;1;36mnote: [0mAccess of the heap area at negative byte offset[0m
  956 |   *(num2+len2) = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~
[0m[1mnumber.c:973:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  973 |       if (len2>len1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  974 |         qdigits = scale+1;      /* One for the zero integer part. */[0m
  975 |       else[0m
      | [0;32m      } 
[0m[1mnumber.c:975:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  975 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  976 |         qdigits = len1-len2+scale+1;[0m
      | [0;1;32m                                    
[0m[1mnumber.c:981:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  981 |   memset (qval->n_value, 0, qdigits);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:981:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  981 |   memset (qval->n_value, 0, qdigits);[0m
      | [0;1;32m  ^~~~~~
[0m[1mnumber.c:985:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  985 |   if (mval == NULL) bc_out_of_memory ();[0m
      | [0;1;32m                   ^                    
[0m      | [0;32m                    {
[0m[1mnumber.c:1000:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1000 |       if (len2 > len1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1001 |         qptr = (unsigned char *) qval->n_value+len2-len1;[0m
 1002 |       else[0m
      | [0;32m      } 
[0m[1mnumber.c:1002:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1002 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1003 |         qptr = (unsigned char *) qval->n_value;[0m
      | [0;1;32m                                               
[0m[1mnumber.c:1009:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1009 |           if (*n2ptr == num1[qdig])[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1010 |             qguess = 9;[0m
 1011 |           else[0m
      | [0;32m          } 
[0m[1mnumber.c:1011:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1011 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1012 |             qguess = (num1[qdig]*10 + num1[qdig+1]) / *n2ptr;[0m
      | [0;1;32m                                                             
[0m[1mnumber.c:1023:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |                   + num1[qdig+2])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1024 |                 qguess--;[0m
      | [0;1;32m                         
[0m[1mnumber.c:1031:14: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'mval') [clang-analyzer-core.NullDereference][0m
 1031 |               *mval = 0;[0m
      | [0;1;32m                    ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1457:2: [0m[0;1;36mnote: [0mCalling 'bc_divide'[0m
 1457 |         bc_divide (num, _one_, &int_part, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:918:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  918 |   if (bc_is_zero (n2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:921:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is not equal to 0[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:921:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  921 |   if (n2->n_scale == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:939:11: [0m[0;1;36mnote: [0m'scale2' is > 0[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m          ^~~~~~
[0m[1mnumber.c:939:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m         ^
[0m[1mnumber.c:939:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 941[0m
  939 |   while ((scale2 > 0) && (*n2ptr-- == 0)) scale2--;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:943:7: [0m[0;1;36mnote: [0mAssuming 'scale1' is >= 'scale'[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mnumber.c:943:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  943 |   if (scale1 < scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:948:7: [0m[0;1;36mnote: [0mAssuming 'num1' is not equal to NULL[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:948:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  948 |   if (num1 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:954:7: [0m[0;1;36mnote: [0mAssuming 'num2' is not equal to NULL[0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:954:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  954 |   if (num2 == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:958:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 965[0m
  958 |   while (*n2ptr == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:965:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  965 |   if (len2 > len1+scale)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mnumber.c:965:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  965 |   if (len2 > len1+scale)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:973:11: [0m[0;1;36mnote: [0m'len2' is <= 'len1'[0m
  973 |       if (len2>len1)[0m
      | [0;1;32m          ^~~~
[0m[1mnumber.c:973:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  973 |       if (len2>len1)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:984:3: [0m[0;1;36mnote: [0mValue assigned to 'mval'[0m
  984 |   mval = (unsigned char *) malloc (len2+1);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:985:7: [0m[0;1;36mnote: [0mAssuming 'mval' is equal to NULL[0m
  985 |   if (mval == NULL) bc_out_of_memory ();[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mnumber.c:985:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  985 |   if (mval == NULL) bc_out_of_memory ();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:988:8: [0m[0;1;36mnote: [0m'zero' is 0[0m
  988 |   if (!zero)[0m
      | [0;1;32m       ^~~~
[0m[1mnumber.c:988:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  988 |   if (!zero)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:992:11: [0m[0;1;36mnote: [0mAssuming 'norm' is equal to 1[0m
  992 |       if (norm != 1)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mnumber.c:992:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  992 |       if (norm != 1)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:1000:11: [0m[0;1;36mnote: [0m'len2' is <= 'len1'[0m
 1000 |       if (len2 > len1)[0m
      | [0;1;32m          ^~~~
[0m[1mnumber.c:1000:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1000 |       if (len2 > len1)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:1006:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1006 |       while (qdig <= len1+scale-len2)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:1009:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1009 |           if (*n2ptr == num1[qdig])[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1009:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1009 |           if (*n2ptr == num1[qdig])[0m
      | [0;1;32m          ^
[0m[1mnumber.c:1015:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1015 |           if (n2ptr[1]*qguess >[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~
[0m 1016 |               (num1[qdig]*10 + num1[qdig+1] - *n2ptr*qguess)*10[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1017 |                + num1[qdig+2])[0m
      | [0;1;32m               ~~~~~~~~~~~~~~
[0m[1mnumber.c:1015:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1015 |           if (n2ptr[1]*qguess >[0m
      | [0;1;32m          ^
[0m[1mnumber.c:1029:8: [0m[0;1;36mnote: [0m'qguess' is not equal to 0[0m
 1029 |           if (qguess != 0)[0m
      | [0;1;32m              ^~~~~~
[0m[1mnumber.c:1029:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1029 |           if (qguess != 0)[0m
      | [0;1;32m          ^
[0m[1mnumber.c:1031:14: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'mval')[0m
 1031 |               *mval = 0;[0m
      | [0;1;32m               ~~~~ ^
[0m[1mnumber.c:1043:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1043 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1044 |                     borrow = 0;[0m
      | [0;1;32m                               
[0m[1mnumber.c:1064:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1064 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1065 |                     carry = 0;[0m
      | [0;1;32m                              
[0m[1mnumber.c:1068:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1068 |               if (carry == 1) *ptr1 = (*ptr1 + 1) % 10;[0m
      | [0;1;32m                             ^                         
[0m      | [0;32m                              {
[0m[1mnumber.c:1079:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |   if (bc_is_zero (qval)) qval->n_sign = PLUS;[0m
      | [0;1;32m                        ^                    
[0m      | [0;32m                         {
[0m[1mnumber.c:1106:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1106 |   if (bc_is_zero (num2)) return -1;[0m
      | [0;1;32m                        ^          
[0m      | [0;32m                         {
[0m[1mnumber.c:1114:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1114 |   if (quot)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1115 |     quotient = bc_copy_num (temp);[0m
      | [0;1;32m                                  
[0m[1mnumber.c:1150:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1150 |   if (bc_is_zero(mod)) return -1;[0m
      | [0;1;32m                      ^          
[0m      | [0;32m                       {
[0m[1mnumber.c:1151:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |   if (bc_is_neg(expo)) return -1;[0m
      | [0;1;32m                      ^          
[0m      | [0;32m                       {
[0m[1mnumber.c:1160:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1160 |   if (base->n_scale != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1161 |       bc_rt_warn ("non-zero scale in base");[0m
      | [0;1;32m                                            
[0m[1mnumber.c:1171:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1171 |   if (mod->n_scale != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1172 |       bc_rt_warn ("non-zero scale in modulus");[0m
      | [0;1;32m                                               
[0m[1mnumber.c:1213:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1213 |    if (num2->n_scale != 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1214 |      bc_rt_warn ("non-zero scale in exponent");[0m
      | [0;1;32m                                               
[0m[1mnumber.c:1216:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1216 |    if (exponent == 0 && (num2->n_len > 1 || num2->n_value[0] != 0))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1217 |        bc_rt_error ("exponent too large in raise");[0m
      | [0;1;32m                                                   
[0m[1mnumber.c:1277:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1277 |        if ((*result)->n_scale > rscale)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1278 |          (*result)->n_scale = rscale;[0m
      | [0;1;32m                                     
[0m[1mnumber.c:1295:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1295 |   if (cmp_res < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1296 |     return 0;           /* error */[0m
 1297 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:1355:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1355 |           if (cscale < rscale+1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1356 |             cscale = MIN (cscale*3, rscale+1);[0m
 1357 |           else[0m
      | [0;32m          } 
[0m[1mnumber.c:1357:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1358 |             done = TRUE;[0m
      | [0;1;32m                        
[0m[1mnumber.c:1397:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1397 |   if (space) (*out_char) (' ');[0m
      | [0;1;32m            ^                  
[0m      | [0;32m             {
[0m[1mnumber.c:1398:3: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1398 |   snprintf (digits, sizeof(digits), "%ld", val);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mnumber.c:1398:3: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1398 |   snprintf (digits, sizeof(digits), "%ld", val);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mnumber.c:1405:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1405 |   for (ix=0; ix < len; ix++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1406 |     (*out_char) (digits[ix]);[0m
      | [0;1;32m                             
[0m[1mnumber.c:1421:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m                           ^                  
[0m      | [0;32m                            {
[0m[1mnumber.c:1424:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1425 |     (*out_char) ('0');[0m
 1426 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:1431:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1431 |         if (num->n_len > 1 || *nptr != 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1432 |           for (ix=num->n_len; ix>0; ix--)[0m
 1433 |             (*out_char) (BCD_CHAR(*nptr++));[0m
 1434 |         else[0m
      | [0;32m        } 
[0m[1mnumber.c:1432:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1432 |           for (ix=num->n_len; ix>0; ix--)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1433 |             (*out_char) (BCD_CHAR(*nptr++));[0m
      | [0;1;32m                                            
[0m[1mnumber.c:1434:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1434 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1435 |           nptr++;[0m
      | [0;1;32m                 
[0m[1mnumber.c:1437:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1437 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1438 |           (*out_char) ('0');[0m
      | [0;1;32m                            
[0m[1mnumber.c:1444:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1444 |             for (ix=0; ix<num->n_scale; ix++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1445 |               (*out_char) (BCD_CHAR(*nptr++));[0m
      | [0;1;32m                                              
[0m[1mnumber.c:1451:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1452 |           (*out_char) ('0');[0m
      | [0;1;32m                            
[0m[1mnumber.c:1475:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1475 |             if (temp == NULL) bc_out_of_memory();[0m
      | [0;1;32m                             ^                   
[0m      | [0;32m                              {
[0m[1mnumber.c:1476:18: [0m[0;1;35mwarning: [0m[1mAccess to field 'digit' results in a dereference of a null pointer (loaded from variable 'temp') [clang-analyzer-core.NullDereference][0m
 1476 |             temp->digit = bc_num2long (cur_dig);[0m
      | [0;1;32m            ~~~~        ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1471:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1471 |         while (!bc_is_zero (int_part))[0m
      | [0;1;32m        ^
[0m[1mnumber.c:1474:6: [0m[0;1;36mnote: [0mValue assigned to 'temp'[0m
 1474 |             temp = (stk_rec *) malloc (sizeof(stk_rec));[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1475:10: [0m[0;1;36mnote: [0mAssuming 'temp' is equal to NULL[0m
 1475 |             if (temp == NULL) bc_out_of_memory();[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mnumber.c:1475:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1475 |             if (temp == NULL) bc_out_of_memory();[0m
      | [0;1;32m            ^
[0m[1mnumber.c:1476:18: [0m[0;1;36mnote: [0mAccess to field 'digit' results in a dereference of a null pointer (loaded from variable 'temp')[0m
 1476 |             temp->digit = bc_num2long (cur_dig);[0m
      | [0;1;32m            ~~~~        ^
[0m[1mnumber.c:1490:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1490 |                 if (o_base <= 16)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1491 |                   (*out_char) (ref_str[ (int) temp->digit]);[0m
 1492 |                 else[0m
      | [0;32m                } 
[0m[1mnumber.c:1492:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1492 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1493 |                   bc_out_long (temp->digit, max_o_digit->n_len, 1, out_char);[0m
      | [0;1;32m                                                                             
[0m[1mnumber.c:1509:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1509 |               if (o_base <= 16)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1510 |                 (*out_char) (ref_str[fdigit]);[0m
 1511 |               else {[0m
      | [0;32m              } 
[0m[1mnumber.c:1542:10: [0m[0;1;35mwarning: [0m[1mAccess to field 'n_value' results in a dereference of a null pointer (loaded from variable 'num') [clang-analyzer-core.NullDereference][0m
 1542 |   nptr = num->n_value;[0m
      | [0;1;32m         ^
[0m[1mnumber.c:1421:7: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to MINUS[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1421:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |   if (num->n_sign == MINUS) (*out_char) ('-');[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1424:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1424 |   if (bc_is_zero (num))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1427:9: [0m[0;1;36mnote: [0mAssuming 'o_base' is not equal to 10[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mnumber.c:1427:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |     if (o_base == 10)[0m
      | [0;1;32m    ^
[0m[1mnumber.c:1451:6: [0m[0;1;36mnote: [0mAssuming 'leading_zero' is 0[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnumber.c:1451:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1451 |         if (leading_zero && bc_is_zero (num))[0m
      | [0;1;32m                         ^
[0m[1mnumber.c:1459:2: [0m[0;1;36mnote: [0mCalling 'bc_init_num'[0m
 1459 |         bc_init_num (&cur_dig);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1459:2: [0m[0;1;36mnote: [0mReturning from 'bc_init_num'[0m
 1459 |         bc_init_num (&cur_dig);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1471:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1471 |         while (!bc_is_zero (int_part))[0m
      | [0;1;32m        ^
[0m[1mnumber.c:1473:6: [0m[0;1;36mnote: [0mCalling 'bc_modulo'[0m
 1473 |             bc_modulo (int_part, base, &cur_dig, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1136:10: [0m[0;1;36mnote: [0mCalling 'bc_divmod'[0m
 1136 |   return bc_divmod (num1, num2, NULL, result, scale);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1106:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1106 |   if (bc_is_zero (num2)) return -1;[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1109:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1109 |   rscale = MAX (num1->n_scale, num2->n_scale+scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:1109:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1109 |   rscale = MAX (num1->n_scale, num2->n_scale+scale);[0m
      | [0;1;32m           ^
[0m[1m./../h/number.h:70:24: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
   70 | #define MAX(a,b)      ((a)>(b)?(a):(b))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:1114:7: [0m[0;1;36mnote: [0m'quot' is null[0m
 1114 |   if (quot)[0m
      | [0;1;32m      ^~~~
[0m[1mnumber.c:1114:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1114 |   if (quot)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1117:3: [0m[0;1;36mnote: [0mCalling 'bc_sub'[0m
 1117 |   bc_sub (num1, temp, rem, rscale);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:520:3: [0m[0;1;36mnote: [0m'diff' initialized to a null pointer value[0m
  520 |   bc_num diff = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~
[0m[1mnumber.c:524:7: [0m[0;1;36mnote: [0mAssuming 'n1->n_sign' is equal to 'n2->n_sign'[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:524:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  524 |   if (n1->n_sign != n2->n_sign)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:534:7: [0m[0;1;36mnote: [0m'Default' branch taken. Execution continues on line 556[0m
  534 |       switch (cmp_res)[0m
      | [0;1;32m      ^
[0m[1mnumber.c:557:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'cur_dig'[0m
  557 |   *result = diff;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~
[0m[1mnumber.c:1117:3: [0m[0;1;36mnote: [0mReturning from 'bc_sub'[0m
 1117 |   bc_sub (num1, temp, rem, rscale);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1120:7: [0m[0;1;36mnote: [0m'quot' is null[0m
 1120 |   if (quot)[0m
      | [0;1;32m      ^~~~
[0m[1mnumber.c:1120:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1120 |   if (quot)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1136:10: [0m[0;1;36mnote: [0mReturning from 'bc_divmod'[0m
 1136 |   return bc_divmod (num1, num2, NULL, result, scale);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1473:6: [0m[0;1;36mnote: [0mReturning from 'bc_modulo'[0m
 1473 |             bc_modulo (int_part, base, &cur_dig, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1475:10: [0m[0;1;36mnote: [0mAssuming 'temp' is not equal to NULL[0m
 1475 |             if (temp == NULL) bc_out_of_memory();[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mnumber.c:1475:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 1475 |             if (temp == NULL) bc_out_of_memory();[0m
      | [0;1;32m            ^
[0m[1mnumber.c:1476:33: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 'num'[0m
 1476 |             temp->digit = bc_num2long (cur_dig);[0m
      | [0;1;32m                                       ^~~~~~~
[0m[1mnumber.c:1476:20: [0m[0;1;36mnote: [0mCalling 'bc_num2long'[0m
 1476 |             temp->digit = bc_num2long (cur_dig);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1542:10: [0m[0;1;36mnote: [0mAccess to field 'n_value' results in a dereference of a null pointer (loaded from variable 'num')[0m
 1542 |   nptr = num->n_value;[0m
      | [0;1;32m         ^~~
[0m[1mnumber.c:1543:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1543 |   for (i=num->n_len; (i>0) && (val<=(LONG_MAX/BASE)); i--)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1544 |     val = val*BASE + *nptr++;[0m
      | [0;1;32m                             
[0m[1mnumber.c:1547:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1547 |   if (i>0) val = 0;[0m
      | [0;1;32m          ^        
[0m      | [0;32m           {
[0m[1mnumber.c:1548:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1548 |   if (val < 0) val = 0;[0m
      | [0;1;32m              ^        
[0m      | [0;32m               {
[0m[1mnumber.c:1551:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1551 |   if (num->n_sign == PLUS)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1552 |     return (val);[0m
 1553 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:1553:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1553 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1554 |     return (-val);[0m
      | [0;1;32m                  
[0m[1mnumber.c:1591:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1591 |   if (neg) (*num)->n_sign = MINUS;[0m
      | [0;1;32m          ^                       
[0m      | [0;32m           {
[0m[1mnumber.c:1595:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1595 |   while (ix-- > 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1596 |     *vptr++ = *--bptr;[0m
      | [0;1;32m                      
[0m[1mnumber.c:1610:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1611 |     str = (char *) malloc (num->n_len + num->n_scale + 2 + signch);[0m
 1612 |   else[0m
      | [0;32m  } 
[0m[1mnumber.c:1612:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1612 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1613 |     str = (char *) malloc (num->n_len + 1 + signch);[0m
      | [0;1;32m                                                    
[0m[1mnumber.c:1614:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m                  ^                   
[0m      | [0;32m                   {
[0m[1mnumber.c:1618:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m             ^              
[0m      | [0;32m              {
[0m[1mnumber.c:1618:23: [0m[0;1;35mwarning: [0m[1mDereference of null pointer [clang-analyzer-core.NullDereference][0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m              ~~~~~~~~^~~~~
[0m[1mnumber.c:1609:14: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is not equal to PLUS[0m
 1609 |   signch = ( num->n_sign == PLUS ? 0 : 1 );  /* Number of sign chars. */[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1609:14: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mnumber.c:1610:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is <= 0[0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:1610:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1614:7: [0m[0;1;36mnote: [0mAssuming 'str' is equal to NULL[0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1614:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1618:7: [0m[0;1;36mnote: [0m'signch' is 1[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m      ^~~~~~
[0m[1mnumber.c:1618:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1618:16: [0m[0;1;36mnote: [0mNull pointer value stored to 'sptr'[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m               ^~~~~~
[0m[1mnumber.c:1618:23: [0m[0;1;36mnote: [0mDereference of null pointer[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m              ~~~~~~~~^~~~~
[0m[1mnumber.c:1622:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1622 |   for (i=num->n_len; i>0; i--)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1623 |     *sptr++ = BCD_CHAR(*nptr++);[0m
      | [0;1;32m                                
[0m[1mnumber.c:1623:13: [0m[0;1;35mwarning: [0m[1mDereference of null pointer [clang-analyzer-core.NullDereference][0m
 1623 |     *sptr++ = BCD_CHAR(*nptr++);[0m
      | [0;1;32m    ~~~~~~~~^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1609:14: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is equal to PLUS[0m
 1609 |   signch = ( num->n_sign == PLUS ? 0 : 1 );  /* Number of sign chars. */[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1609:14: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mnumber.c:1610:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is <= 0[0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:1610:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1614:7: [0m[0;1;36mnote: [0mAssuming 'str' is equal to NULL[0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1614:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1618:7: [0m[0;1;36mnote: [0m'signch' is 0[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m      ^~~~~~
[0m[1mnumber.c:1618:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1622:22: [0m[0;1;36mnote: [0mAssuming 'i' is > 0[0m
 1622 |   for (i=num->n_len; i>0; i--)[0m
      | [0;1;32m                     ^~~
[0m[1mnumber.c:1622:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1622 |   for (i=num->n_len; i>0; i--)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1623:6: [0m[0;1;36mnote: [0mNull pointer value stored to 'sptr'[0m
 1623 |     *sptr++ = BCD_CHAR(*nptr++);[0m
      | [0;1;32m     ^~~~~~
[0m[1mnumber.c:1623:13: [0m[0;1;36mnote: [0mDereference of null pointer[0m
 1623 |     *sptr++ = BCD_CHAR(*nptr++);[0m
      | [0;1;32m    ~~~~~~~~^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1628:15: [0m[0;1;35mwarning: [0m[1mDereference of null pointer [clang-analyzer-core.NullDereference][0m
 1628 |       *sptr++ = '.';[0m
      | [0;1;32m      ~~~~~~~~^~~~~
[0m[1mnumber.c:1609:14: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is equal to PLUS[0m
 1609 |   signch = ( num->n_sign == PLUS ? 0 : 1 );  /* Number of sign chars. */[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1609:14: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mnumber.c:1610:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is > 0[0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:1610:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1614:7: [0m[0;1;36mnote: [0mAssuming 'str' is equal to NULL[0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1614:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1618:7: [0m[0;1;36mnote: [0m'signch' is 0[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m      ^~~~~~
[0m[1mnumber.c:1618:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1622:22: [0m[0;1;36mnote: [0mAssuming 'i' is <= 0[0m
 1622 |   for (i=num->n_len; i>0; i--)[0m
      | [0;1;32m                     ^~~
[0m[1mnumber.c:1622:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1626[0m
 1622 |   for (i=num->n_len; i>0; i--)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1626:12: [0m[0;1;36mnote: [0mField 'n_scale' is > 0[0m
 1626 |   if (num->n_scale > 0)[0m
      | [0;1;32m           ^
[0m[1mnumber.c:1626:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1626 |   if (num->n_scale > 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1628:8: [0m[0;1;36mnote: [0mNull pointer value stored to 'sptr'[0m
 1628 |       *sptr++ = '.';[0m
      | [0;1;32m       ^~~~~~
[0m[1mnumber.c:1628:15: [0m[0;1;36mnote: [0mDereference of null pointer[0m
 1628 |       *sptr++ = '.';[0m
      | [0;1;32m      ~~~~~~~~^~~~~
[0m[1mnumber.c:1629:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1629 |       for (i=0; i<num->n_scale; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1630 |         *sptr++ = BCD_CHAR(*nptr++);[0m
      | [0;1;32m                                    
[0m[1mnumber.c:1634:9: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'sptr') [clang-analyzer-core.NullDereference][0m
 1634 |   *sptr = '\0';[0m
      | [0;1;32m   ~~~~ ^
[0m[1mnumber.c:1609:14: [0m[0;1;36mnote: [0mAssuming field 'n_sign' is equal to PLUS[0m
 1609 |   signch = ( num->n_sign == PLUS ? 0 : 1 );  /* Number of sign chars. */[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1609:14: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mnumber.c:1610:7: [0m[0;1;36mnote: [0mAssuming field 'n_scale' is <= 0[0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mnumber.c:1610:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1610 |   if (num->n_scale > 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1613:5: [0m[0;1;36mnote: [0mValue assigned to 'str'[0m
 1613 |     str = (char *) malloc (num->n_len + 1 + signch);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnumber.c:1614:7: [0m[0;1;36mnote: [0mAssuming 'str' is equal to NULL[0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1614:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1614 |   if (str == NULL) bc_out_of_memory();[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1617:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'sptr'[0m
 1617 |   sptr = str;[0m
      | [0;1;32m  ^~~~~~~~~~
[0m[1mnumber.c:1618:7: [0m[0;1;36mnote: [0m'signch' is 0[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m      ^~~~~~
[0m[1mnumber.c:1618:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1618 |   if (signch) *sptr++ = '-';[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1622:22: [0m[0;1;36mnote: [0mAssuming 'i' is <= 0[0m
 1622 |   for (i=num->n_len; i>0; i--)[0m
      | [0;1;32m                     ^~~
[0m[1mnumber.c:1622:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1626[0m
 1622 |   for (i=num->n_len; i>0; i--)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1626:12: [0m[0;1;36mnote: [0mField 'n_scale' is <= 0[0m
 1626 |   if (num->n_scale > 0)[0m
      | [0;1;32m           ^
[0m[1mnumber.c:1626:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1626 |   if (num->n_scale > 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1634:9: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'sptr')[0m
 1634 |   *sptr = '\0';[0m
      | [0;1;32m   ~~~~ ^
[0m[1mnumber.c:1654:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1654 |   if ( (*ptr == '+') || (*ptr == '-'))  ptr++;  /* Sign */[0m
      | [0;1;32m                                      ^                   
[0m      | [0;32m                                       {
[0m[1mnumber.c:1655:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1655 |   while (*ptr == '0') ptr++;                    /* Skip leading zeros. */[0m
      | [0;1;32m                     ^                                                   
[0m      | [0;32m                      {
[0m[1mnumber.c:1656:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1656 |   while (isdigit((int)*ptr)) ptr++, digits++;   /* digits */[0m
      | [0;1;32m                            ^                               
[0m      | [0;32m                             {
[0m[1mnumber.c:1657:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1657 |   if (*ptr == '.') ptr++;                       /* decimal point */[0m
      | [0;1;32m                  ^                                                
[0m      | [0;32m                   {
[0m[1mnumber.c:1658:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1658 |   while (isdigit((int)*ptr)) ptr++, strscale++; /* digits */[0m
      | [0;1;32m                            ^                               
[0m      | [0;32m                             {
[0m[1mnumber.c:1684:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1684 |       if (*ptr == '+') ptr++;[0m
      | [0;1;32m                      ^      
[0m      | [0;32m                       {
[0m[1mnumber.c:1686:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1686 |   while (*ptr == '0') ptr++;                    /* Skip leading zeros. */[0m
      | [0;1;32m                     ^                                                   
[0m      | [0;32m                      {
[0m[1mnumber.c:1693:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1693 |   for (;digits > 0; digits--)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1694 |     *nptr++ = CH_VAL(*ptr++);[0m
      | [0;1;32m                             
[0m[1mnumber.c:1694:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1694 |     *nptr++ = CH_VAL(*ptr++);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mnumber.c:1654:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1654 |   if ( (*ptr == '+') || (*ptr == '-'))  ptr++;  /* Sign */[0m
      | [0;1;32m        ^~~~~~~~~~~
[0m[1mnumber.c:1654:8: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1654 |   if ( (*ptr == '+') || (*ptr == '-'))  ptr++;  /* Sign */[0m
      | [0;1;32m       ^
[0m[1mnumber.c:1654:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1654 |   if ( (*ptr == '+') || (*ptr == '-'))  ptr++;  /* Sign */[0m
      | [0;1;32m                         ^~~~~~~~~~~
[0m[1mnumber.c:1654:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1654 |   if ( (*ptr == '+') || (*ptr == '-'))  ptr++;  /* Sign */[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1655:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1655 |   while (*ptr == '0') ptr++;                    /* Skip leading zeros. */[0m
      | [0;1;32m         ^~~~~~~~~~~
[0m[1mnumber.c:1655:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1656[0m
 1655 |   while (*ptr == '0') ptr++;                    /* Skip leading zeros. */[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1656:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1656 |   while (isdigit((int)*ptr)) ptr++, digits++;   /* digits */[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1656:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1657[0m
[1mnumber.c:1657:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1657 |   if (*ptr == '.') ptr++;                       /* decimal point */[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mnumber.c:1657:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1657 |   if (*ptr == '.') ptr++;                       /* decimal point */[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1658:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1659[0m
 1658 |   while (isdigit((int)*ptr)) ptr++, strscale++; /* digits */[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1659:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1659 |   if ((*ptr != '\0') || (digits+strscale == 0))[0m
      | [0;1;32m       ^~~~~~~~~~~~
[0m[1mnumber.c:1659:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1659 |   if ((*ptr != '\0') || (digits+strscale == 0))[0m
      | [0;1;32m      ^
[0m[1mnumber.c:1659:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1659 |   if ((*ptr != '\0') || (digits+strscale == 0))[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1666:14: [0m[0;1;36mnote: [0mAssuming 'strscale' is > 'scale'[0m
 1666 |   strscale = MIN(strscale, scale);[0m
      | [0;1;32m             ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mnumber.c:1666:14: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1666 |   strscale = MIN(strscale, scale);[0m
      | [0;1;32m             ^
[0m[1m./../h/number.h:71:24: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
   71 | #define MIN(a,b)      ((a)>(b)?(b):(a))[0m
      | [0;1;32m                       ^
[0m[1mnumber.c:1667:7: [0m[0;1;36mnote: [0m'digits' is not equal to 0[0m
 1667 |   if (digits == 0)[0m
      | [0;1;32m      ^~~~~~
[0m[1mnumber.c:1667:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1667 |   if (digits == 0)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1676:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1676 |   if (*ptr == '-')[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1684:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |       if (*ptr == '+') ptr++;[0m
      | [0;1;32m      ^
[0m[1mnumber.c:1686:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1687[0m
 1686 |   while (*ptr == '0') ptr++;                    /* Skip leading zeros. */[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1688:7: [0m[0;1;36mnote: [0m'zero_int' is 0[0m
 1688 |   if (zero_int)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mnumber.c:1688:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1688 |   if (zero_int)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1693:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1693 |   for (;digits > 0; digits--)[0m
      | [0;1;32m  ^
[0m[1mnumber.c:1694:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at index 0[0m
 1694 |     *nptr++ = CH_VAL(*ptr++);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mnumber.c:1701:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1701 |       for (;strscale > 0; strscale--)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1702 |         *nptr++ = CH_VAL(*ptr++);[0m
      | [0;1;32m                                 
[0m165 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
