Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/wget-1.21.4
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 164 files out of 164 in compilation database ...
[  1/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpzwag9287.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unicase/u8-tolower.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  2/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpi7yf66ym.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sig-handler.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  3/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpb1qs6hr7.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/openat-proc.c
[1mopenat-proc.c:83:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |         if (proc_self_fd < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   84 |           proc_status = -1;[0m
   85 |         else[0m
      | [0;32m        } 
[0m[1mopenat-proc.c:93:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   93 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:93:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   93 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:99:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |     if (proc_status < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  100 |       return NULL;[0m
  101 |     else[0m
      | [0;32m    } 
[0m[1mopenat-proc.c:107:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |             if (! result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  108 |               return NULL;[0m
      | [0;1;32m                          
[0m[1mopenat-proc.c:111:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  111 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:111:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  111 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:152:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  152 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mopenat-proc.c:152:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  152 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m10 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  4/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp5ndyk73d.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/stripslash.c
[1mstripslash.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |     base = file;[0m
      | [0;1;32m                
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  5/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpl6z0cxjt.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/timegm.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  6/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp77b85cz1.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/hash-triple-simple.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  7/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp43e16zjk.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unicase/tolower.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  8/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp9yyzl6dp.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/basename.c
[1mbasename.c:61:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   61 |   memcpy (p + dotslash_len, base, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mbasename.c:61:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   61 |   memcpy (p + dotslash_len, base, length);[0m
      | [0;1;32m  ^~~~~~
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  9/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpzxwz2zy6.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sockets.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 10/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp8qc_pjec.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloc/dynarray_at_failure.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 11/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpuvwtmtsd.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unistr/u8-mbtouc-unsafe.c
6 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 12/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp_z1ylw7g.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/pipe-safer.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 13/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpg9rzlie7.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/exitfail.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 14/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp5yxfgrr4.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/pipe2-safer.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 15/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpjjqk2k7j.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/timespec.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 16/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp_u9j26o9.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/glthread/lock.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 17/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxuf5v6q5.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unistr/u8-strlen.c
6 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 18/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpvhl1lrsk.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unistr/u8-uctomb.c
6 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 19/164][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp5eujtqd1.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloc/dynarray_resize_clear.c
[1mmalloc/dynarray_resize_clear.c:31:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (!__libc_dynarray_resize (list, size, scratch, element_size))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   32 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 20/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpv1a7u3xy.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/xattr.c
[1mxattr.c:39:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |       if (retval)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   40 |         DEBUGP (("Failed to set xattr %s.\n", quote(name)));[0m
      | [0;1;32m                                                            
[0m[1mxattr.c:73:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |   if (!origin_url || !fp)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   74 |     return retval;[0m
      | [0;1;32m                  
[0m[1mxattr.c:84:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   84 |           memset(&u, 0, sizeof(u));[0m
      | [0;1;32m          ^~~~~~
[0m[1mxattr.c:84:4: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   84 |           memset(&u, 0, sizeof(u));[0m
      | [0;1;32m          ^~~~~~
[0m30 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 21/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxrpec20n.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/mbchar.c
5 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 22/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpsufzy9ld.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unicase/u8-casemap.c
29 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 23/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmphoxfunnv.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/xmemdup0.c
[1mxmemdup0.c:41:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   if (s > 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   42 |     memcpy (result, p, s);[0m
      | [0;1;32m                          
[0m[1mxmemdup0.c:42:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   42 |     memcpy (result, p, s);[0m
      | [0;1;32m    ^~~~~~
[0m[1mxmemdup0.c:42:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   42 |     memcpy (result, p, s);[0m
      | [0;1;32m    ^~~~~~
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 24/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp5fcagrmj.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloc/scratch_buffer_grow.c
[1mmalloc/scratch_buffer_grow.c:36:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   if (__glibc_likely (new_length >= buffer->length))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   37 |     new_ptr = malloc (new_length);[0m
   38 |   else[0m
      | [0;32m  } 
[0m6 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 25/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmphv3d6v70.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/save-cwd.c
[1msave-cwd.c:66:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   67 |     cwd->desc = fd_safer_flag (cwd->desc, O_CLOEXEC);[0m
      | [0;1;32m                                                     
[0m[1msave-cwd.c:70:19: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   70 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:66:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   66 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:68:7: [0m[0;1;36mnote: [0mAssuming field 'desc' is < 0[0m
   68 |   if (cwd->desc < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1msave-cwd.c:68:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   68 |   if (cwd->desc < 0)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:70:19: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
   70 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:84:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |   if (0 <= cwd->desc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   85 |     return fchdir (cwd->desc);[0m
   86 |   else[0m
      | [0;32m  } 
[0m[1msave-cwd.c:86:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   87 |     return chdir_long (cwd->name);[0m
      | [0;1;32m                                  
[0m[1msave-cwd.c:93:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   if (cwd->desc >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   94 |     close (cwd->desc);[0m
      | [0;1;32m                      
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 26/164][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp21qscdsh.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unistr/u8-cpy.c
8 warnings generated.
Suppressed 8 warnings (8 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 27/164][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp39t5u9yn.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/wctype-h.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 28/164][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp0qleqqzk.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/xalloc-die.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 29/164][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp2fxvzbck.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/gettime.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 30/164][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpa6p038ez.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unicase/empty-suffix-context.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 31/164][3.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpcsfji_34.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/pipe2.c
[1mpipe2.c:106:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |   if (pipe (fd) < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  107 |     return -1;[0m
      | [0;1;32m              
[0m[1mpipe2.c:122:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |           || fcntl (fd[0], F_SETFL, fcntl_flags | O_NONBLOCK) == -1)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  123 |         goto fail;[0m
      | [0;1;32m                  
[0m[1mpipe2.c:133:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |           || fcntl (fd[0], F_SETFD, fcntl_flags | FD_CLOEXEC) == -1)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  134 |         goto fail;[0m
      | [0;1;32m                  
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 32/164][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpjlenlyc8.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloc/dynarray_emplace_enlarge.c
[1mmalloc/dynarray_emplace_enlarge.c:38:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |       if (element_size < 4)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   39 |         new_allocated = 16;[0m
   40 |       else if (element_size < 8)[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:40:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       else if (element_size < 8)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   41 |         new_allocated = 8;[0m
   42 |       else[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:42:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   43 |         new_allocated = 4;[0m
      | [0;1;32m                          
[0m[1mmalloc/dynarray_emplace_enlarge.c:59:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (ckd_mul (&new_size, new_allocated, element_size))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m   60 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_emplace_enlarge.c:66:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:69:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   70 |     new_array = realloc (list->array, new_size);[0m
      | [0;1;32m                                                
[0m[1mmalloc/dynarray_emplace_enlarge.c:71:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   72 |     return false;[0m
      | [0;1;32m                 
[0m12 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 33/164][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp1nbj6n7h.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/af_alg.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 34/164][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpzgyi1lx3.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/basename-lgpl.c
[1mbasename-lgpl.c:35:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   36 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:40:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   41 |         last_was_slash = true;[0m
   42 |       else if (last_was_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:58:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   59 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:62:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   63 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:66:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   67 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 35/164][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxt0hw1yt.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/filenamecat-lgpl.c
[1mfilenamecat-lgpl.c:58:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (! ISSLASH (dir[dirlen - 1]) && ! ISSLASH (*base))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   59 |         sep = '/';[0m
      | [0;1;32m                  
[0m[1mfilenamecat-lgpl.c:72:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (p_concat == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   73 |     return NULL;[0m
      | [0;1;32m                
[0m[1mfilenamecat-lgpl.c:82:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |     if (base_in_result)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   83 |       *base_in_result = p;[0m
      | [0;1;32m                          
[0m7 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 36/164][4.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp2c4n6xkr.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/chdir-long.c
[1mchdir-long.c:76:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   77 |     return -1;[0m
      | [0;1;32m              
[0m[1mchdir-long.c:112:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   if (e == 0 || errno != ENAMETOOLONG)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  113 |     return e;[0m
      | [0;1;32m             
[0m[1mchdir-long.c:150:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  151 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:156:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |         if (cdb_advance_fd (&cdb, "/") != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  157 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:181:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  182 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:189:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |         if (cdb_advance_fd (&cdb, dir) != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  190 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:193:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |     if (cdb_fchdir (&cdb) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  194 |       goto Fail;[0m
      | [0;1;32m                
[0m11 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 37/164][4.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpk07zxjcx.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/css_.c
[1mcss_.c:2650:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2650 |                 if ( ! (yy_start) )[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2651 |                         (yy_start) = 1; /* first start state */[0m
      | [0;1;32m                                                               
[0m[1mcss_.c:2653:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2653 |                 if ( ! yyin )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2654 |                         yyin = stdin;[0m
      | [0;1;32m                                     
[0m[1mcss_.c:2656:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2656 |                 if ( ! yyout )[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2657 |                         yyout = stdout;[0m
      | [0;1;32m                                       
[0m[1mcss_.c:2699:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2699 |                                 if ( yy_current_state >= 1103 )[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2700 |                                         yy_c = yy_meta[yy_c];[0m
      | [0;1;32m                                                             
[0m[1mcss_.c:2720:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2720 |                         *yy_cp = (yy_hold_char);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 2721 |                         yy_cp = (yy_last_accepting_cpos);[0m
 2722 |                         yy_current_state = (yy_last_accepting_state);[0m
 2723 |                         goto yy_find_action;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mcss_.c:2964:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2964 |         yyterminate();[0m
      | [0;1;32m        ^            
[0m      | [0;32m        {            ;} 
[0m[1mcss_.c:2593:23: [0m[0;1;36mnote: [0mexpanded from macro 'yyterminate'[0m
 2593 | #define yyterminate() return YY_NULL[0m
      | [0;1;32m                      ^
[0m[1mcss_.c:3035:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3035 |                 else switch ( yy_get_next_buffer(  ) )[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m[1mcss_.c:3060:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3060 |                                         if ( ! (yy_did_buffer_switch_on_eof) )[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3061 |                                                 YY_NEW_FILE;[0m
      | [0;1;32m                                                            
[0m[1mcss_.c:3067:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3067 |                                 (yy_c_buf_p) =[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 3068 |                                         (yytext_ptr) + yy_amount_of_matched_text;[0m
 3069 | [0m
 3070 |                                 yy_current_state = yy_get_previous_state(  );[0m
 3071 | [0m
 3072 |                                 yy_cp = (yy_c_buf_p);[0m
 3073 |                                 yy_bp = (yytext_ptr) + YY_MORE_ADJ;[0m
 3074 |                                 goto yy_match;[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mcss_.c:3077:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3077 |                                 (yy_c_buf_p) =[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 3078 |                                 &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];[0m
 3079 | [0m
 3080 |                                 yy_current_state = yy_get_previous_state(  );[0m
 3081 | [0m
 3082 |                                 yy_cp = (yy_c_buf_p);[0m
 3083 |                                 yy_bp = (yytext_ptr) + YY_MORE_ADJ;[0m
 3084 |                                 goto yy_find_action;[0m
      | [0;1;32m                                                   
[0m      | [0;32m                                                   ;} 
[0m[1mcss_.c:3090:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3090 |                 YY_FATAL_ERROR([0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 3091 |                         "fatal flex scanner internal error--no action found" );[0m
      | [0;1;32m                                                                              
[0m      | [0;32m                                                                              ;} 
[0m[1mcss_.c:2603:29: [0m[0;1;36mnote: [0mexpanded from macro 'YY_FATAL_ERROR'[0m
 2603 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )[0m
      | [0;1;32m                            ^
[0m[1mcss_.c:3111:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3111 |         if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m 3112 |                 YY_FATAL_ERROR([0m
 3113 |                 "fatal flex scanner internal error--end of buffer missed" );[0m
      | [0;1;32m                                                                            
[0m[1mcss_.c:3139:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3139 |         for ( i = 0; i < number_to_move; ++i )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3140 |                 *(dest++) = *(source++);[0m
      | [0;1;32m                                        
[0m[1mcss_.c:3142:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3142 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 3143 |                 /* don't do the read, it's not guaranteed to return an EOF,[0m
 3144 |                  * just force an EOF[0m
 3145 |                  */[0m
 3146 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;[0m
 3147 | [0m
 3148 |         else[0m
      | [0;32m        } 
[0m[1mcss_.c:3166:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3166 |                                 if ( new_size <= 0 )[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3167 |                                         b->yy_buf_size += b->yy_buf_size / 8;[0m
 3168 |                                 else[0m
      | [0;32m                                } 
[0m[1mcss_.c:3168:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3168 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3169 |                                         b->yy_buf_size *= 2;[0m
      | [0;1;32m                                                            
[0m[1mcss_.c:3176:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3176 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3177 |                                 /* Can't grow it, we don't own it. */[0m
 3178 |                                 b->yy_ch_buf = NULL;[0m
      | [0;1;32m                                                    
[0m[1mcss_.c:3180:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3180 |                         if ( ! b->yy_ch_buf )[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3181 |                                 YY_FATAL_ERROR([0m
 3182 |                                 "fatal error - scanner input buffer overflow" );[0m
      | [0;1;32m                                                                                
[0m[1mcss_.c:3191:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3191 |                 if ( num_to_read > YY_READ_BUF_SIZE )[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3192 |                         num_to_read = YY_READ_BUF_SIZE;[0m
      | [0;1;32m                                                       
[0m[1mcss_.c:3217:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3217 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3218 |                 ret_val = EOB_ACT_CONTINUE_SCAN;[0m
      | [0;1;32m                                                
[0m[1mcss_.c:3225:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3225 |                 if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 3226 |                         YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );[0m
      | [0;1;32m                                                                                          
[0m[1mcss_.c:3260:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3260 |                         if ( yy_current_state >= 1103 )[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3261 |                                 yy_c = yy_meta[yy_c];[0m
      | [0;1;32m                                                     
[0m[1mcss_.c:3288:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3288 |                 if ( yy_current_state >= 1103 )[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3289 |                         yy_c = yy_meta[yy_c];[0m
      | [0;1;32m                                             
[0m[1mcss_.c:3406:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3406 |         if ( YY_CURRENT_BUFFER == new_buffer )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3407 |                 return;[0m
      | [0;1;32m                       
[0m[1mcss_.c:3447:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3447 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3448 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );[0m
      | [0;1;32m                                                                                
[0m[1mcss_.c:3456:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3456 |         if ( ! b->yy_ch_buf )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3457 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );[0m
      | [0;1;32m                                                                                
[0m[1mcss_.c:3473:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3473 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3474 |                 return;[0m
      | [0;1;32m                       
[0m[1mcss_.c:3476:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3476 |         if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3477 |                 YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;[0m
      | [0;1;32m                                                               
[0m[1mcss_.c:3479:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3479 |         if ( b->yy_is_our_buffer )[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3480 |                 yyfree( (void *) b->yy_ch_buf  );[0m
      | [0;1;32m                                                 
[0m[1mcss_.c:3519:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3519 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3520 |                 return;[0m
      | [0;1;32m                       
[0m[1mcss_.c:3536:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3536 |         if ( b == YY_CURRENT_BUFFER )[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3537 |                 yy_load_buffer_state(  );[0m
      | [0;1;32m                                         
[0m[1mcss_.c:3548:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3548 |         if (new_buffer == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3549 |                 return;[0m
      | [0;1;32m                       
[0m[1mcss_.c:3563:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3563 |         if (YY_CURRENT_BUFFER)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3564 |                 (yy_buffer_stack_top)++;[0m
      | [0;1;32m                                        
[0m[1mcss_.c:3578:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3578 |         if (!YY_CURRENT_BUFFER)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3579 |                 return;[0m
      | [0;1;32m                       
[0m[1mcss_.c:3583:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3583 |         if ((yy_buffer_stack_top) > 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3584 |                 --(yy_buffer_stack_top);[0m
      | [0;1;32m                                        
[0m[1mcss_.c:3609:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3609 |                 if ( ! (yy_buffer_stack) )[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3610 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );[0m
      | [0;1;32m                                                                                             
[0m[1mcss_.c:3629:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3629 |                 if ( ! (yy_buffer_stack) )[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3630 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );[0m
      | [0;1;32m                                                                                             
[0m[1mcss_.c:3650:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3650 |              base[size-1] != YY_END_OF_BUFFER_CHAR )[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3651 |                 /* They forgot to leave room for the EOB's. */[0m
 3652 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mcss_.c:3655:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3655 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3656 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );[0m
      | [0;1;32m                                                                              
[0m[1mcss_.c:3704:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3704 |         if ( ! buf )[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3705 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );[0m
      | [0;1;32m                                                                             
[0m[1mcss_.c:3707:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3707 |         for ( i = 0; i < _yybytes_len; ++i )[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3708 |                 buf[i] = yybytes[i];[0m
      | [0;1;32m                                    
[0m[1mcss_.c:3713:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3713 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3714 |                 YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );[0m
      | [0;1;32m                                                                  
[0m64 warnings generated.
Suppressed 22 warnings (22 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 38/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpqc65_tz7.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/c-ctype.c
16 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 39/164][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmplu6p3ge9.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloc/dynarray_resize.c
[1mmalloc/dynarray_resize.c:56:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:59:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   60 |     new_array = realloc (list->array, new_size_bytes);[0m
      | [0;1;32m                                                      
[0m[1mmalloc/dynarray_resize.c:61:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   62 |     return false;[0m
      | [0;1;32m                 
[0m8 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 40/164][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpguzhoyum.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloca.c
[1mmalloca.c:42:56: [0m[0;1;35mwarning: [0m[1m'_Static_assert' with no message is a C23 extension [clang-diagnostic-c23-extensions][0m
   42 | static_assert (2 * sa_alignment_max - 1 <= (small_t) -1);[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                       , ""
[0m[1mmalloca.c:63:37: [0m[0;1;35mwarning: [0m[1mThe left operand of '&' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m[1mmalloca.c:53:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m1 is not equal to 0[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m9223372036854775807 is < -1[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^~~~~~~~~~~
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m'?' condition is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:8: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   33 |        < (n)))[0m
      | [0;1;32m       ~~~~~
[0m[1mmalloca.c:53:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m  ^
[0m[1mmalloca.c:57:11: [0m[0;1;36mnote: [0mAssuming 'mem' is not equal to NULL[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mmalloca.c:57:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:59:44: [0m[0;1;36mnote: [0m'umemplus' declared without an initial value[0m
   59 |           uintptr_t umem = (uintptr_t)mem, umemplus;[0m
      | [0;1;32m                                           ^~~~~~~~
[0m[1mmalloca.c:62:11: [0m[0;1;36mnote: [0mAssuming overflow[0m
   62 |           ckd_add (&umemplus, umem, sizeof (small_t) + sa_alignment_max - 1);[0m
      | [0;1;32m          ^
[0m[1m./stdckdint.h:32:34: [0m[0;1;36mnote: [0mexpanded from macro 'ckd_add'[0m
   32 | #define ckd_add(r, a, b) ((bool) _GL_INT_ADD_WRAPV (a, b, r))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./intprops-internal.h:147:37: [0m[0;1;36mnote: [0mexpanded from macro '_GL_INT_ADD_WRAPV'[0m
  147 | # define _GL_INT_ADD_WRAPV(a, b, r) __builtin_add_overflow (a, b, r)[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:63:37: [0m[0;1;36mnote: [0mThe left operand of '&' is a garbage value[0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 41/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp48_3raxo.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/spider.c
[1mspider.c:62:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   if (is_robots_txt_url (url))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   63 |     return;[0m
      | [0;1;32m           
[0m[1mspider.c:64:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |   if (!nonexisting_urls_set)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   65 |     nonexisting_urls_set = make_string_hash_table (0);[0m
      | [0;1;32m                                                      
[0m29 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 42/164][5.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp9q7_z4pc.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fatal-signal.c
[1mfatal-signal.c:102:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |               && get_handler (&action) == SIG_IGN)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  103 |             fatal_signals[i] = -1;[0m
      | [0;1;32m                                  
[0m[1mfatal-signal.c:143:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |   for (i = 0; i < num_fatal_signals; i++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  144 |     if (fatal_signals[i] >= 0)[0m
  145 |       {[0m
  146 |         int sig = fatal_signals[i];[0m
  147 |         if (saved_sigactions[sig].sa_handler == SIG_IGN)[0m
  148 |           saved_sigactions[sig].sa_handler = SIG_DFL;[0m
  149 |         sigaction (sig, &saved_sigactions[sig], NULL);[0m
  150 |       }[0m
      | [0;1;32m       
[0m[1mfatal-signal.c:147:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |         if (saved_sigactions[sig].sa_handler == SIG_IGN)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  148 |           saved_sigactions[sig].sa_handler = SIG_DFL;[0m
      | [0;1;32m                                                     
[0m[1mfatal-signal.c:163:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |       if (n == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  164 |         break;[0m
      | [0;1;32m              
[0m[1mfatal-signal.c:195:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   for (i = 0; i < num_fatal_signals; i++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  196 |     if (fatal_signals[i] >= 0)[0m
  197 |       {[0m
  198 |         int sig = fatal_signals[i];[0m
  199 | [0m
  200 |         if (!(sig < sizeof (saved_sigactions) / sizeof (saved_sigactions[0])))[0m
  201 |           abort ();[0m
  202 |         sigaction (sig, &action, &saved_sigactions[sig]);[0m
  203 |       }[0m
      | [0;1;32m       
[0m[1mfatal-signal.c:200:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |         if (!(sig < sizeof (saved_sigactions) / sizeof (saved_sigactions[0])))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  201 |           abort ();[0m
      | [0;1;32m                   
[0m[1mfatal-signal.c:217:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |   if (mt) gl_lock_lock (at_fatal_signal_lock);[0m
      | [0;1;32m         ^                                    
[0m      | [0;32m          {
[0m[1mfatal-signal.c:250:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |       for (k = 0; k < old_actions_allocated; k++)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  251 |         new_actions[k] = old_actions[k];[0m
      | [0;1;32m                                        
[0m[1mfatal-signal.c:273:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |   if (mt) gl_lock_unlock (at_fatal_signal_lock);[0m
      | [0;1;32m         ^                                      
[0m      | [0;32m          {
[0m[1mfatal-signal.c:292:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |   for (i = 0; i < num_fatal_signals; i++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  293 |     if (fatal_signals[i] >= 0)[0m
  294 |       sigaddset (&fatal_signal_set, fatal_signals[i]);[0m
      | [0;1;32m                                                      
[0m[1mfatal-signal.c:293:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |     if (fatal_signals[i] >= 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  294 |       sigaddset (&fatal_signal_set, fatal_signals[i]);[0m
      | [0;1;32m                                                      
[0m[1mfatal-signal.c:317:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |   if (mt) gl_lock_lock (fatal_signals_block_lock);[0m
      | [0;1;32m         ^                                        
[0m      | [0;32m          {
[0m[1mfatal-signal.c:325:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |   if (mt) gl_lock_unlock (fatal_signals_block_lock);[0m
      | [0;1;32m         ^                                          
[0m      | [0;32m          {
[0m[1mfatal-signal.c:334:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |   if (mt) gl_lock_lock (fatal_signals_block_lock);[0m
      | [0;1;32m         ^                                        
[0m      | [0;32m          {
[0m[1mfatal-signal.c:336:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |   if (fatal_signals_block_counter == 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  337 |     /* There are more calls to unblock_fatal_signals() than to[0m
  338 |        block_fatal_signals().  */[0m
  339 |     abort ();[0m
      | [0;1;32m             
[0m[1mfatal-signal.c:346:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |   if (mt) gl_lock_unlock (fatal_signals_block_lock);[0m
      | [0;1;32m         ^                                          
[0m      | [0;32m          {
[0m[1mfatal-signal.c:359:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |     for (i = 0; i < num_fatal_signals; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  360 |       if (fatal_signals[i] >= 0)[0m
  361 |         *p++ = fatal_signals[i];[0m
      | [0;1;32m                                
[0m[1mfatal-signal.c:360:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |       if (fatal_signals[i] >= 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  361 |         *p++ = fatal_signals[i];[0m
      | [0;1;32m                                
[0m22 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 43/164][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpzj0x01dm.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/hard-locale.c
[1mhard-locale.c:32:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (setlocale_null_r (category, locale, sizeof (locale)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   33 |     return false;[0m
      | [0;1;32m                 
[0m[1mhard-locale.c:35:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!(strcmp (locale, "C") == 0 || strcmp (locale, "POSIX") == 0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m   36 |     return true;[0m
      | [0;1;32m                
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 44/164][2.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp1l07cxut.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/build_info.c
27 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 45/164][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpjngyrffs.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unictype/combiningclass.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 46/164][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp89qmcm8z.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloc/scratch_buffer_grow_preserve.c
[1mmalloc/scratch_buffer_grow_preserve.c:38:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |       if (new_ptr == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   39 |         return false;[0m
      | [0;1;32m                     
[0m[1mmalloc/scratch_buffer_grow_preserve.c:40:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   40 |       memcpy (new_ptr, buffer->__space.__c, buffer->length);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmalloc/scratch_buffer_grow_preserve.c:40:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   40 |       memcpy (new_ptr, buffer->__space.__c, buffer->length);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmalloc/scratch_buffer_grow_preserve.c:45:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |       if (__glibc_likely (new_length >= buffer->length))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m   46 |         new_ptr = realloc (buffer->data, new_length);[0m
   47 |       else[0m
      | [0;32m      } 
[0m8 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 47/164][3.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp1inq3z5e.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/md5-stream.c
[1mmd5-stream.c:65:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   65 |     case 0: return 0;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1mmd5-stream.c:66:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |     case -EIO: return 1;[0m
      | [0;1;32m               ^       
[0m      | [0;32m               {       ;} 
[0m[1mmd5-stream.c:70:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |   if (!buffer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   71 |     return 1;[0m
      | [0;1;32m             
[0m[1mmd5-stream.c:94:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |           if (feof (stream))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   95 |             goto process_partial_block;[0m
      | [0;1;32m                                       
[0m[1mmd5-stream.c:101:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |           if (sum == BLOCKSIZE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  102 |             break;[0m
      | [0;1;32m                  
[0m[1mmd5-stream.c:127:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |   if (sum > 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  128 |     md5_process_bytes (buffer, sum, &ctx);[0m
      | [0;1;32m                                          
[0m10 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 48/164][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpaw63imnl.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/free.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 49/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpo1fw9n65.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/ialloc.c
7 warnings generated.
Suppressed 7 warnings (7 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 50/164][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpz5i8fzox.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/cloexec.c
[1mcloexec.c:50:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   51 |         return 0;[0m
      | [0;1;32m                 
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 51/164][2.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpwfzb0s77.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/uninorm/u8-normalize.c
26 warnings generated.
Suppressed 26 warnings (26 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 52/164][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpneczdxvo.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/file-set.c
[1mfile-set.c:33:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (ht == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   34 |     return;[0m
      | [0;1;32m           
[0m[1mfile-set.c:66:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (ht == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   67 |     return false;[0m
      | [0;1;32m                 
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 53/164][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpa51dzff9.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/strnlen1.c
[1mstrnlen1.c:31:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (end != NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   32 |     return end - string + 1;[0m
   33 |   else[0m
      | [0;32m  } 
[0m[1mstrnlen1.c:33:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   34 |     return maxlen;[0m
      | [0;1;32m                  
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 54/164][2.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp4bvge79k.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fcntl.c
[1mfcntl.c:329:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:426:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:430:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  430 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  431 |               void *p = va_arg (arg, void *);[0m
  432 |               result = fcntl (fd, action, p);[0m
  433 |             }[0m
  434 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mfcntl.c:524:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |           if (result >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  525 |             have_dupfd_cloexec = -1;[0m
      | [0;1;32m                                    
[0m[1mfcntl.c:528:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  529 | # endif[0m
  530 |     result = rpl_fcntl_DUPFD (fd, target);[0m
      | [0;1;32m                                          
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 55/164][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpiupithgf.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/ioctl.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 56/164][4.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpuxc2n23v.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/uniwidth/width.c
[1muniwidth/width.c:64:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       if (ind >= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   65 |         if ((nonspacing_table_data[64*ind + ((uc >> 3) & 63)] >> (uc & 7)) & 1)[0m
   66 |           {[0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
   68 |               return -1;[0m
   69 |             else[0m
   70 |               return 0;[0m
   71 |           }[0m
      | [0;1;32m           
[0m[1muniwidth/width.c:67:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   68 |               return -1;[0m
   69 |             else[0m
      | [0;32m            } 
[0m[1muniwidth/width.c:69:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   70 |               return 0;[0m
      | [0;1;32m                       
[0m[1muniwidth/width.c:77:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |           if (uc <= 0xe01ef)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   78 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:82:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |           if (uc >= 0xe0020 ? uc <= 0xe007f : uc == 0xe0001)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m   83 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:87:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   if (bitmap_lookup (&u_width2, uc))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   88 |     return 2;[0m
      | [0;1;32m             
[0m[1muniwidth/width.c:92:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |       && is_cjk_encoding (encoding))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   93 |     return 2;[0m
      | [0;1;32m             
[0m37 warnings generated.
Suppressed 30 warnings (30 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 57/164][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpnyjx0zwc.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/pthread_sigmask.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 58/164][3.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpozbf2q1g.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sha512-stream.c
[1msha512-stream.c:55:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   55 |     case 0: return 0;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1msha512-stream.c:56:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   56 |     case -EIO: return 1;[0m
      | [0;1;32m               ^       
[0m      | [0;32m               {       ;} 
[0m[1msha512-stream.c:60:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   60 |   if (!buffer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   61 |     return 1;[0m
      | [0;1;32m             
[0m[1msha512-stream.c:84:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |           if (feof (stream))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   85 |             goto process_partial_block;[0m
      | [0;1;32m                                       
[0m[1msha512-stream.c:91:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |           if (sum == BLOCKSIZE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   92 |             break;[0m
      | [0;1;32m                  
[0m[1msha512-stream.c:117:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   if (sum > 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  118 |     sha512_process_bytes (buffer, sum, &ctx);[0m
      | [0;1;32m                                             
[0m10 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 59/164][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpficfk10l.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/btowc.c
[1mbtowc.c:38:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   38 |       memset (&state, 0, sizeof (mbstate_t));[0m
      | [0;1;32m      ^~~~~~
[0m[1mbtowc.c:38:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   38 |       memset (&state, 0, sizeof (mbstate_t));[0m
      | [0;1;32m      ^~~~~~
[0m[1mbtowc.c:40:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (!(ret == (size_t)(-1) || ret == (size_t)(-2)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m   41 | #else[0m
   42 |       if (mbtowc (&wc, buf, 1) >= 0)[0m
   43 | #endif[0m
   44 |         return wc;[0m
      | [0;1;32m                  
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 60/164][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpgo4ttupo.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fd-safer.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 61/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpen5uifgd.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/xsize.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 62/164][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmppv1a5h0_.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/glthread/threadlib.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 63/164][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxp7ga5nr.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fseeko.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 64/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp87az3bu7.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/hsts.c
27 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 65/164][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpotrs1zr7.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unistr/u8-mbtouc-unsafe-aux.c
[1munistr/u8-mbtouc-unsafe-aux.c:81:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   81 |               if (n == 1 || (s[1] ^ 0x80) >= 0x40)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m   82 |                 return 1;[0m
   83 |               else[0m
      | [0;32m              } 
[0m[1munistr/u8-mbtouc-unsafe-aux.c:83:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   84 |                 return 2;[0m
      | [0;1;32m                         
[0m[1munistr/u8-mbtouc-unsafe-aux.c:125:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |               if (n == 1 || (s[1] ^ 0x80) >= 0x40)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  126 |                 return 1;[0m
  127 |               else if (n == 2 || (s[2] ^ 0x80) >= 0x40)[0m
      | [0;32m              } 
[0m[1munistr/u8-mbtouc-unsafe-aux.c:127:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |               else if (n == 2 || (s[2] ^ 0x80) >= 0x40)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  128 |                 return 2;[0m
  129 |               else[0m
      | [0;32m              } 
[0m[1munistr/u8-mbtouc-unsafe-aux.c:129:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  130 |                 return 3;[0m
      | [0;1;32m                         
[0m11 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 66/164][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpmctak3u2.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloc/dynarray_finalize.c
[1mmalloc/dynarray_finalize.c:32:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (__dynarray_error (list))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   33 |     /* The caller will reported the deferred error.  */[0m
   34 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_finalize.c:43:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   44 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:54:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |       if (list->array != NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m                                                          
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:56:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   57 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:62:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   63 |     /* The caller will perform the freeing operation.  */[0m
   64 |     return false;[0m
      | [0;1;32m                 
[0m10 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 67/164][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpj5xrkwjn.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/openat-die.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 68/164][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpvf5t79v8.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unistd.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 69/164][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp3a1efm96.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fpurge.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 70/164][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpnem38flb.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/stat-time.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 71/164][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpuvsxozlp.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/version.c
[ 72/164][4.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmplggyzuw0.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/ftp-opie.c
[1mftp-opie.c:2129:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2129 |   xzero (cp);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mftp-opie.c:2129:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2129 |   xzero (cp);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mftp-opie.c:2130:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2130 |   memcpy (cp, c, 8);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2130:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2130 |   memcpy (cp, c, 8);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2133:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2133 |   for (p = 0, i = 0; i < 64; i += 2)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2134 |     p += extract (cp, i, 2);[0m
      | [0;1;32m                            
[0m[1mftp-opie.c:2142:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2142 |   memcpy (store, &Wp[extract (cp,  0, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2142:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2142 |   memcpy (store, &Wp[extract (cp,  0, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2145:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2145 |   memcpy (store, &Wp[extract (cp, 11, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2145:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2145 |   memcpy (store, &Wp[extract (cp, 11, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2148:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2148 |   memcpy (store, &Wp[extract (cp, 22, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2148:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2148 |   memcpy (store, &Wp[extract (cp, 22, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2151:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2151 |   memcpy (store, &Wp[extract (cp, 33, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2151:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2151 |   memcpy (store, &Wp[extract (cp, 33, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2154:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2154 |   memcpy (store, &Wp[extract (cp, 44, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2154:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2154 |   memcpy (store, &Wp[extract (cp, 44, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2157:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2157 |   memcpy (store, &Wp[extract (cp, 55, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2157:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2157 |   memcpy (store, &Wp[extract (cp, 55, 11)][0], 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2208:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2208 |   memcpy (key, checksum, 8);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2208:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2208 |   memcpy (key, checksum, 8);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-opie.c:2217:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2217 |       memcpy (key, checksum, 8);[0m
      | [0;1;32m      ^~~~~~
[0m[1mftp-opie.c:2217:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2217 |       memcpy (key, checksum, 8);[0m
      | [0;1;32m      ^~~~~~
[0m40 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 73/164][2.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpx3vi96ja.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/nanosleep.c
[1mnanosleep.c:60:61: [0m[0;1;35mwarning: [0m[1m'_Static_assert' with no message is a C23 extension [clang-diagnostic-c23-extensions][0m
   60 |     static_assert (TYPE_MAXIMUM (time_t) / 24 / 24 / 60 / 60);[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                            , ""
[0m[1mnanosleep.c:74:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |             if (remaining_delay)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   75 |               remaining_delay->tv_sec += seconds;[0m
      | [0;1;32m                                                 
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 74/164][3.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpr7h5t61c.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/md2-stream.c
[1mmd2-stream.c:48:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   48 |   if (!buffer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   49 |     return 1;[0m
      | [0;1;32m             
[0m[1mmd2-stream.c:70:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |           if (sum == BLOCKSIZE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   71 |             break;[0m
      | [0;1;32m                  
[0m[1mmd2-stream.c:89:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |           if (feof (stream))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   90 |             goto process_partial_block;[0m
      | [0;1;32m                                       
[0m[1mmd2-stream.c:102:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   if (sum > 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  103 |     md2_process_bytes (buffer, sum, &ctx);[0m
      | [0;1;32m                                          
[0m8 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 75/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmptbq8w6eu.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unicase/empty-prefix-context.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 76/164][3.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpin7ubgwq.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/md4-stream.c
[1mmd4-stream.c:48:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   48 |   if (!buffer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   49 |     return 1;[0m
      | [0;1;32m             
[0m[1mmd4-stream.c:70:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |           if (sum == BLOCKSIZE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   71 |             break;[0m
      | [0;1;32m                  
[0m[1mmd4-stream.c:89:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |           if (feof (stream))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   90 |             goto process_partial_block;[0m
      | [0;1;32m                                       
[0m[1mmd4-stream.c:102:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   if (sum > 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  103 |     md4_process_bytes (buffer, sum, &ctx);[0m
      | [0;1;32m                                          
[0m8 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 77/164][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp5b0kxt5f.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unicase/cased.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 78/164][3.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpx0m2i0xr.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sha256-stream.c
[1msha256-stream.c:55:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   55 |     case 0: return 0;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1msha256-stream.c:56:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   56 |     case -EIO: return 1;[0m
      | [0;1;32m               ^       
[0m      | [0;32m               {       ;} 
[0m[1msha256-stream.c:60:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   60 |   if (!buffer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   61 |     return 1;[0m
      | [0;1;32m             
[0m[1msha256-stream.c:84:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |           if (feof (stream))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   85 |             goto process_partial_block;[0m
      | [0;1;32m                                       
[0m[1msha256-stream.c:91:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |           if (sum == BLOCKSIZE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   92 |             break;[0m
      | [0;1;32m                  
[0m[1msha256-stream.c:117:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   if (sum > 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  118 |     sha256_process_bytes (buffer, sum, &ctx);[0m
      | [0;1;32m                                             
[0m10 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 79/164][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpll343ikp.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/localcharset.c
[1mlocalcharset.c:911:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |   if (codeset == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  912 |     /* The canonical name cannot be determined.  */[0m
  913 |     codeset = "";[0m
      | [0;1;32m                 
[0m[1mlocalcharset.c:1070:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |         if (codeset[0] == '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1071 |           codeset = "ASCII";[0m
      | [0;1;32m                            
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 80/164][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmph1stab1_.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/getprogname.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 81/164][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpb9yhbnpc.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/strtoll.c
20 warnings generated.
Suppressed 20 warnings (20 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 82/164][2.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp3m43sxoe.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sha1-stream.c
[1msha1-stream.c:53:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   53 |     case 0: return 0;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1msha1-stream.c:54:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |     case -EIO: return 1;[0m
      | [0;1;32m               ^       
[0m      | [0;32m               {       ;} 
[0m[1msha1-stream.c:58:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   if (!buffer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   59 |     return 1;[0m
      | [0;1;32m             
[0m[1msha1-stream.c:82:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |           if (feof (stream))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   83 |             goto process_partial_block;[0m
      | [0;1;32m                                       
[0m[1msha1-stream.c:89:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |           if (sum == BLOCKSIZE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   90 |             break;[0m
      | [0;1;32m                  
[0m[1msha1-stream.c:115:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |   if (sum > 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  116 |     sha1_process_bytes (buffer, sum, &ctx);[0m
      | [0;1;32m                                           
[0m10 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 83/164][7.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpp7egocj2.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/md4.c
[1mmd4.c:63:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   63 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd4.c:63:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   63 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd4.c:91:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |   if (ctx->total[0] < bytes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   92 |     ++ctx->total[1];[0m
      | [0;1;32m                    
[0m[1mmd4.c:95:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   95 |   memcpy (&((char*)ctx->buffer)[bytes], fillbuf, pad);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd4.c:95:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   95 |   memcpy (&((char*)ctx->buffer)[bytes], fillbuf, pad);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd4.c:137:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  137 |       memcpy (&((char*)ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd4.c:137:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  137 |       memcpy (&((char*)ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd4.c:146:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  146 |           memcpy (ctx->buffer, &((char*)ctx->buffer)[(left_over + add) & ~63],[0m
      | [0;1;32m          ^~~~~~
[0m[1mmd4.c:146:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  146 |           memcpy (ctx->buffer, &((char*)ctx->buffer)[(left_over + add) & ~63],[0m
      | [0;1;32m          ^~~~~~
[0m[1mmd4.c:159:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |       if (UNALIGNED_P (buffer))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  160 |         while (len > 64)[0m
  161 |           {[0m
  162 |             md4_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
  163 |             buffer = (const char *) buffer + 64;[0m
  164 |             len -= 64;[0m
  165 |           }[0m
  166 |       else[0m
      | [0;32m      } 
[0m[1mmd4.c:162:32: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  162 |             md4_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
      | [0;1;32m                               ^~~~~~
[0m[1mmd4.c:162:32: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  162 |             md4_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
      | [0;1;32m                               ^~~~~~
[0m[1mmd4.c:180:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  180 |       memcpy (&((char*)ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd4.c:180:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  180 |       memcpy (&((char*)ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd4.c:186:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  186 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m[1mmd4.c:186:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  186 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m11 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 84/164][12.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpbrkzv3bu.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sha256.c
[1msha256.c:91:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   91 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha256.c:91:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   91 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha256.c:102:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   for (i = 0; i < 8; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  103 |     set_uint32 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));[0m
      | [0;1;32m                                                                    
[0m[1msha256.c:114:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |   for (i = 0; i < 7; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  115 |     set_uint32 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));[0m
      | [0;1;32m                                                                    
[0m[1msha256.c:131:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |   if (ctx->total[0] < bytes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  132 |     ++ctx->total[1];[0m
      | [0;1;32m                    
[0m[1msha256.c:142:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |   memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha256.c:142:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  142 |   memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha256.c:206:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  206 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha256.c:206:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  206 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha256.c:216:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  216 |           memcpy (ctx->buffer,[0m
      | [0;1;32m          ^~~~~~
[0m[1msha256.c:216:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  216 |           memcpy (ctx->buffer,[0m
      | [0;1;32m          ^~~~~~
[0m[1msha256.c:230:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |       if (UNALIGNED_P (buffer))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  231 |         while (len > 64)[0m
  232 |           {[0m
  233 |             sha256_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
  234 |             buffer = (const char *) buffer + 64;[0m
  235 |             len -= 64;[0m
  236 |           }[0m
  237 |       else[0m
      | [0;32m      } 
[0m[1msha256.c:233:35: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  233 |             sha256_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
      | [0;1;32m                                  ^~~~~~
[0m[1msha256.c:233:35: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  233 |             sha256_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
      | [0;1;32m                                  ^~~~~~
[0m[1msha256.c:251:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha256.c:251:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  251 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha256.c:259:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  259 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m[1msha256.c:259:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  259 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m13 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 85/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxr0a39_a.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/bitrotate.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 86/164][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpmk3m7kgc.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/concat-filename.c
[1mconcat-filename.c:48:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   48 |       if (result == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   49 |         return NULL; /* errno is set here */[0m
      | [0;1;32m                                            
[0m[1mconcat-filename.c:62:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       if (result == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   63 |         return NULL; /* errno is set here */[0m
      | [0;1;32m                                            
[0m[1mconcat-filename.c:64:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   64 |       memcpy (result, directory, directory_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconcat-filename.c:64:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   64 |       memcpy (result, directory, directory_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconcat-filename.c:66:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (need_slash)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   67 |         *p++ = '/';[0m
      | [0;1;32m                   
[0m[1mconcat-filename.c:70:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |   if (suffix != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   71 |     stpcpy (p, suffix);[0m
      | [0;1;32m                       
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 87/164][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpfv8zchih.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/spawn_faction_addchdir.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 88/164][9.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp_axydmtw.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sha1.c
[1msha1.c:71:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   71 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha1.c:71:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   71 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha1.c:100:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |   if (ctx->total[0] < bytes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  101 |     ++ctx->total[1];[0m
      | [0;1;32m                    
[0m[1msha1.c:107:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  107 |   memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha1.c:107:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  107 |   memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha1.c:144:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  144 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha1.c:144:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  144 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha1.c:154:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  154 |           memcpy (ctx->buffer,[0m
      | [0;1;32m          ^~~~~~
[0m[1msha1.c:154:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  154 |           memcpy (ctx->buffer,[0m
      | [0;1;32m          ^~~~~~
[0m[1msha1.c:168:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |       if (UNALIGNED_P (buffer))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  169 |         while (len > 64)[0m
  170 |           {[0m
  171 |             sha1_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
  172 |             buffer = (const char *) buffer + 64;[0m
  173 |             len -= 64;[0m
  174 |           }[0m
  175 |       else[0m
      | [0;32m      } 
[0m[1msha1.c:171:33: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  171 |             sha1_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
      | [0;1;32m                                ^~~~~~
[0m[1msha1.c:171:33: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  171 |             sha1_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
      | [0;1;32m                                ^~~~~~
[0m[1msha1.c:189:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  189 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha1.c:189:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  189 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha1.c:197:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  197 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m[1msha1.c:197:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  197 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m11 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 89/164][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmph5d3lunh.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fflush.c
[1mfflush.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   if (fp->_flags & _IO_IN_BACKUP)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |     /* _IO_free_backup_area is a bit complicated.  Simply call fseek.  */[0m
   43 |     fseeko (fp, 0, SEEK_CUR);[0m
      | [0;1;32m                             
[0m[1mfflush.c:148:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |   if (stream == NULL || ! freading (stream))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  149 |     return fflush (stream);[0m
      | [0;1;32m                           
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 90/164][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpynxwqhev.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/setlocale_null.c
[1msetlocale_null.c:145:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (bufsize > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  146 |         /* Return an empty string in BUF.[0m
  147 |            This is a convenience for callers that don't want to write explicit[0m
  148 |            code for handling EINVAL.  */[0m
  149 |         buf[0] = '\0';[0m
      | [0;1;32m                      
[0m[1msetlocale_null.c:157:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:157:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m7 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 91/164][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpfew0hc3w.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fd-safer-flag.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 92/164][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpq9hgpemd.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/strerror_r.c
[1mstrerror_r.c:130:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:130:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:144:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |       if (buflen)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  145 |         *buf = '\0';[0m
      | [0;1;32m                    
[0m[1mstrerror_r.c:154:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |     if (msg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  155 |       return safe_copy (buf, buflen, msg);[0m
      | [0;1;32m                                          
[0m[1mstrerror_r.c:165:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'ret' is never read [clang-analyzer-deadcode.DeadStores][0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:165:7: [0m[0;1;36mnote: [0mValue stored to 'ret' is never read[0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:447:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  447 |         snprintf (buf, buflen, "Unknown error %d", errnum);[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mstrerror_r.c:447:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  447 |         snprintf (buf, buflen, "Unknown error %d", errnum);[0m
      | [0;1;32m        ^~~~~~~~
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 93/164][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp69wknoer.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/malloc/scratch_buffer_set_array_size.c
[1mmalloc/scratch_buffer_set_array_size.c:45:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |   if (new_length <= buffer->length)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   46 |     return true;[0m
      | [0;1;32m                
[0m6 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 94/164][2.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmphae9ibuj.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fopen.c
[1mfopen.c:80:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   80 |             open_direction = O_RDONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   81 | #if GNULIB_FOPEN_GNU[0m
   82 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   83 |               *q++ = *p;[0m
   84 | #endif[0m
   85 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:82:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   83 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:87:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   87 |             open_direction = O_WRONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   88 |             open_flags |= O_CREAT | O_TRUNC;[0m
   89 | #if GNULIB_FOPEN_GNU[0m
   90 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   91 |               *q++ = *p;[0m
   92 | #endif[0m
   93 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:90:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   91 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:95:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |             open_direction = O_WRONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   96 |             open_flags |= O_CREAT | O_APPEND;[0m
   97 | #if GNULIB_FOPEN_GNU[0m
   98 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   99 |               *q++ = *p;[0m
  100 | #endif[0m
  101 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:98:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   99 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:106:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  106 |             open_flags |= O_BINARY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  107 | #if GNULIB_FOPEN_GNU[0m
  108 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
  109 |               *q++ = *p;[0m
  110 | #endif[0m
  111 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:108:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  109 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:113:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |             open_direction = O_RDWR;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  114 | #if GNULIB_FOPEN_GNU[0m
  115 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
  116 |               *q++ = *p;[0m
  117 | #endif[0m
  118 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:115:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  116 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:121:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  121 |             open_flags |= O_EXCL;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  122 |             open_flags_gnu = true;[0m
  123 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:125:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |             open_flags |= O_CLOEXEC;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  126 |             open_flags_gnu = true;[0m
  127 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:130:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  130 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfopen.c:137:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |           if (len > fdopen_mode_buf + BUF_SIZE - q)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  138 |             len = fdopen_mode_buf + BUF_SIZE - q;[0m
      | [0;1;32m                                                 
[0m[1mfopen.c:139:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  139 |           memcpy (q, p, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mfopen.c:139:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  139 |           memcpy (q, p, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mfopen.c:214:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |       if (fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  215 |         return NULL;[0m
      | [0;1;32m                    
[0m16 warnings generated.

[ 95/164][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpmet80grz.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/dirname.c
[1mdirname.c:35:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!result)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 96/164][14.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpr5cbggnf.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/regex.c
862 warnings generated.
Suppressed 862 warnings (862 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 97/164][12.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpgncgr3s6.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/md5.c
[1mmd5.c:83:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   83 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd5.c:83:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   83 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd5.c:111:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |   if (ctx->total[0] < bytes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  112 |     ++ctx->total[1];[0m
      | [0;1;32m                    
[0m[1mmd5.c:118:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  118 |   memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd5.c:118:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  118 |   memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd5.c:156:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  156 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd5.c:156:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  156 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd5.c:166:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  166 |           memcpy (ctx->buffer,[0m
      | [0;1;32m          ^~~~~~
[0m[1mmd5.c:166:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  166 |           memcpy (ctx->buffer,[0m
      | [0;1;32m          ^~~~~~
[0m[1mmd5.c:180:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |       if (UNALIGNED_P (buffer))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  181 |         while (len > 64)[0m
  182 |           {[0m
  183 |             md5_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
  184 |             buffer = (const char *) buffer + 64;[0m
  185 |             len -= 64;[0m
  186 |           }[0m
  187 |       else[0m
      | [0;32m      } 
[0m[1mmd5.c:183:32: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  183 |             md5_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
      | [0;1;32m                               ^~~~~~
[0m[1mmd5.c:183:32: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  183 |             md5_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);[0m
      | [0;1;32m                               ^~~~~~
[0m[1mmd5.c:201:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  201 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd5.c:201:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  201 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd5.c:209:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  209 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m[1mmd5.c:209:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  209 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m11 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 98/164][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp4g7t3iam.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/dup-safer-flag.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 99/164][21.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpbhvfzx5b.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/c-strncasecmp.c
[1mc-strncasecmp.c:33:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2 || n == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strncasecmp.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (--n == 0 || c1 == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strncasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strncasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m20 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[100/164][3.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpa_vmjdg5.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/tmpdir.c
[1mtmpdir.c:107:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |       if (plen > 5)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  108 |         plen = 5;[0m
      | [0;1;32m                 
[0m[1mtmpdir.c:114:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       if (d != NULL && direxists (d))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  115 |         dir = d;[0m
  116 |       else if (dir != NULL && direxists (dir))[0m
      | [0;32m      } 
[0m[1mtmpdir.c:116:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |       else if (dir != NULL && direxists (dir))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  117 |         /* nothing */ ;[0m
  118 |       else[0m
      | [0;32m      } 
[0m[1mtmpdir.c:118:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  119 |         dir = NULL;[0m
      | [0;1;32m                   
[0m[1mtmpdir.c:136:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |       if (direxists (P_tmpdir))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  137 |         dir = P_tmpdir;[0m
  138 |       else if (strcmp (P_tmpdir, "/tmp") != 0 && direxists ("/tmp"))[0m
      | [0;32m      } 
[0m[1mtmpdir.c:138:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |       else if (strcmp (P_tmpdir, "/tmp") != 0 && direxists ("/tmp"))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  139 |         dir = "/tmp";[0m
  140 |       else[0m
      | [0;32m      } 
[0m[1mtmpdir.c:161:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  161 |   memcpy (tmpl, dir, dlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtmpdir.c:161:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  161 |   memcpy (tmpl, dir, dlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtmpdir.c:162:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  162 |   sprintf (tmpl + dlen, &"/%.*sXXXXXX"[!add_slash], (int) plen, pfx);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtmpdir.c:162:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  162 |   sprintf (tmpl + dlen, &"/%.*sXXXXXX"[!add_slash], (int) plen, pfx);[0m
      | [0;1;32m  ^~~~~~~
[0m12 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[101/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpr1_vocjt.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sys_socket.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[102/164][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpy77z8f9o.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/freading.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[103/164][16.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpfr4re52t.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/sha512.c
[1msha512.c:91:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   91 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha512.c:91:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   91 |   memcpy (cp, &v, sizeof v);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha512.c:102:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   for (i = 0; i < 8; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  103 |     set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));[0m
      | [0;1;32m                                                                    
[0m[1msha512.c:114:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |   for (i = 0; i < 6; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  115 |     set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));[0m
      | [0;1;32m                                                                    
[0m[1msha512.c:131:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |   if (u64lt (ctx->total[0], u64lo (bytes)))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  132 |     ctx->total[1] = u64plus (ctx->total[1], u64lo (1));[0m
      | [0;1;32m                                                       
[0m[1msha512.c:143:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  143 |   memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 8 - bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha512.c:143:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  143 |   memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 8 - bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1msha512.c:207:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  207 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha512.c:207:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  207 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, add);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha512.c:217:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  217 |           memcpy (ctx->buffer,[0m
      | [0;1;32m          ^~~~~~
[0m[1msha512.c:217:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  217 |           memcpy (ctx->buffer,[0m
      | [0;1;32m          ^~~~~~
[0m[1msha512.c:231:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |       if (UNALIGNED_P (buffer))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  232 |         while (len > 128)[0m
  233 |           {[0m
  234 |             sha512_process_block (memcpy (ctx->buffer, buffer, 128), 128, ctx);[0m
  235 |             buffer = (const char *) buffer + 128;[0m
  236 |             len -= 128;[0m
  237 |           }[0m
  238 |       else[0m
      | [0;32m      } 
[0m[1msha512.c:234:35: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  234 |             sha512_process_block (memcpy (ctx->buffer, buffer, 128), 128, ctx);[0m
      | [0;1;32m                                  ^~~~~~
[0m[1msha512.c:234:35: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  234 |             sha512_process_block (memcpy (ctx->buffer, buffer, 128), 128, ctx);[0m
      | [0;1;32m                                  ^~~~~~
[0m[1msha512.c:252:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  252 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha512.c:252:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  252 |       memcpy (&((char *) ctx->buffer)[left_over], buffer, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msha512.c:260:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  260 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m[1msha512.c:260:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  260 |           memcpy (ctx->buffer, &ctx->buffer[16], left_over);[0m
      | [0;1;32m          ^~~~~~
[0m13 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[104/164][5.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp6nchvcqr.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/xmalloc.c
[1mxmalloc.c:35:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:67:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (!r && (!p || s))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   68 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:85:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (!r && (!p || (n && s)))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   86 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:199:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |       if (ckd_add (&n, n, (n >> 1) + 1))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  200 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mxmalloc.c:240:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |   if (ckd_add (&n, n0, n0 >> 1))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  241 |     n = IDX_MAX;[0m
      | [0;1;32m                
[0m[1mxmalloc.c:242:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |   if (0 <= n_max && n_max < n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  243 |     n = n_max;[0m
      | [0;1;32m              
[0m[1mxmalloc.c:264:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |   if (! pa)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  265 |     *pn = 0;[0m
      | [0;1;32m            
[0m[1mxmalloc.c:269:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |           || ckd_mul (&nbytes, n, s)))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  270 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:314:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  314 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:314:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  314 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:320:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  320 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:320:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  320 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:331:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  331 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:331:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  331 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m18 warnings generated.
Suppressed 7 warnings (7 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[105/164][21.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpbk4q7z71.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/utimens.c
[1mutimens.c:114:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  115 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:122:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |       if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  123 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:139:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |       && timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  140 |     return true;[0m
      | [0;1;32m                
[0m[1mutimens.c:148:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |   if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  149 |     timespec[0] = get_stat_atime (statbuf);[0m
  150 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:150:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  151 |     gettime (&timespec[0]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:153:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |   if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  154 |     timespec[1] = get_stat_mtime (statbuf);[0m
  155 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:155:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  156 |     gettime (&timespec[1]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:185:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  186 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:238:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |           if (fd < 0 ? stat (file, &st) : fstat (fd, &st))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  239 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:240:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  241 |             ts[0] = get_stat_atime (&st);[0m
  242 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:242:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  243 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:274:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  275 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:290:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  291 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:396:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |           && (fd < 0 ? stat (file, &st) : fstat (fd, &st)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  397 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:398:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  399 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:414:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  415 |       t = NULL;[0m
      | [0;1;32m               
[0m[1mutimens.c:474:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                     if (tt)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  475 |                       futimes (fd, tt);[0m
      | [0;1;32m                                       
[0m[1mutimens.c:544:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  544 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  545 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:571:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |           if (lstat (file, &st))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  572 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:573:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  573 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  574 |             ts[0] = get_stat_atime (&st);[0m
  575 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:575:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  576 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:590:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |       if (0 < result)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  591 |         errno = ENOSYS;[0m
      | [0;1;32m                       
[0m[1mutimens.c:609:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |       if (adjustment_needed != 3 && lstat (file, &st))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  610 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:611:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  611 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  612 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:640:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |   if (!(adjustment_needed || REPLACE_FUNC_STAT_FILE) && lstat (file, &st))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  641 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:642:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |   if (!S_ISLNK (st.st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  643 |     return fdutimens (-1, file, ts);[0m
      | [0;1;32m                                    
[0m28 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[106/164][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp2it_drw_.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/mbsrtowcs.c
19 warnings generated.
Suppressed 19 warnings (19 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[107/164][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp73qrsdz3.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/dup-safer.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[108/164][27.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpfgpemm2i.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/wait-process.c
[1mwait-process.c:90:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |       if (n == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   91 |         break;[0m
      | [0;1;32m              
[0m[1mwait-process.c:124:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |       if (at_fatal_signal (cleanup_slaves_action) < 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  125 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mwait-process.c:134:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |     for (; s < s_end; s++)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  135 |       if (!s->used)[0m
  136 |         {[0m
  137 |           /* The two uses of 'volatile' in the slaves_entry_t type above[0m
  138 |              (and ISO C 99 section 5.1.2.3.(5)) ensure that we mark the[0m
  139 |              entry as used only after the child pid has been written to the[0m
  140 |              memory location s->child.  */[0m
  141 |           s->child = child;[0m
  142 |           s->used = 1;[0m
  143 |           return;[0m
  144 |         }[0m
      | [0;1;32m         
[0m[1mwait-process.c:165:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  165 |       memcpy (new_slaves, old_slaves,[0m
      | [0;1;32m      ^~~~~~
[0m[1mwait-process.c:165:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  165 |       memcpy (new_slaves, old_slaves,[0m
      | [0;1;32m      ^~~~~~
[0m[1mwait-process.c:170:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |       if (old_slaves != static_slaves)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  171 |         free (old_slaves);[0m
      | [0;1;32m                          
[0m[1mwait-process.c:192:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |   for (; s < s_end; s++)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  193 |     if (s->used && s->child == child)[0m
  194 |       s->used = 0;[0m
      | [0;1;32m                  
[0m[1mwait-process.c:193:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |     if (s->used && s->child == child)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  194 |       s->used = 0;[0m
      | [0;1;32m                  
[0m[1mwait-process.c:302:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |   if (termsigp != NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  303 |     *termsigp = 0;[0m
      | [0;1;32m                  
[0m[1mwait-process.c:312:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |           if (errno == EINTR)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  313 |             continue;[0m
      | [0;1;32m                     
[0m[1mwait-process.c:324:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |           if (exit_on_error || !null_stderr)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  325 |             error (exit_on_error ? EXIT_FAILURE : 0, errno,[0m
  326 |                    _("%s subprocess"), progname);[0m
      | [0;1;32m                                                 
[0m[1mwait-process.c:333:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |       if (!WIFSTOPPED (status))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  334 |         break;[0m
      | [0;1;32m              
[0m[1mwait-process.c:339:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |   if (slave_process)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  340 |     /* Unregister the child from the list of slave subprocesses, so that[0m
  341 |        later, when we exit, we don't kill a totally unrelated process which[0m
  342 |        may have acquired the same pid.  */[0m
  343 |     unregister_slave_subprocess (child);[0m
      | [0;1;32m                                        
[0m[1mwait-process.c:347:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |       if (termsigp != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  348 |         *termsigp = WTERMSIG (status);[0m
      | [0;1;32m                                      
[0m[1mwait-process.c:350:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |       if (WTERMSIG (status) == SIGPIPE && ignore_sigpipe)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  351 |         return 0;[0m
      | [0;1;32m                 
[0m[1mwait-process.c:353:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |       if (exit_on_error || (!null_stderr && termsigp == NULL))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  354 |         error (exit_on_error ? EXIT_FAILURE : 0, 0,[0m
  355 |                _("%s subprocess got fatal signal %d"),[0m
  356 |                progname, (int) WTERMSIG (status));[0m
      | [0;1;32m                                                  
[0m[1mwait-process.c:359:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |   if (!WIFEXITED (status))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  360 |     abort ();[0m
      | [0;1;32m             
[0m[1mwait-process.c:363:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |       if (exit_on_error || !null_stderr)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  364 |         error (exit_on_error ? EXIT_FAILURE : 0, 0,[0m
  365 |                _("%s subprocess failed"), progname);[0m
      | [0;1;32m                                                    
[0m31 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[109/164][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmph3h8ehcn.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/dirname-lgpl.c
[1mdirname-lgpl.c:49:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |        prefix_length < length; length--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   50 |     if (! ISSLASH (file[length - 1]))[0m
   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:50:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |     if (! ISSLASH (file[length - 1]))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:79:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   if (!dir)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   80 |     return NULL;[0m
      | [0;1;32m                
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:82:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   if (append_dot)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   83 |     dir[length++] = '.';[0m
      | [0;1;32m                        
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[110/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpiu6mlsph.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/uninorm/decompose-internal.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[111/164][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpu4nsl6m5.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/binary-io.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[112/164][2.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp4ycqaqnl.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/exits.c
[1mexits.c:42:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   42 |       return WGET_EXIT_SUCCESS;[0m
      | [0;1;32m      ^                       
[0m      | [0;32m      {                       ;} 
[0m[1mexits.c:51:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |       return WGET_EXIT_SSL_AUTH_FAIL;[0m
      | [0;1;32m      ^                             
[0m      | [0;32m      {                             ;} 
[0m29 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[113/164][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp48gyeatz.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/mbsrtowcs-state.c
[114/164][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpq1o32bg8.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unistr/u8-uctomb-aux.c
[1munistr/u8-uctomb-aux.c:30:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   30 |   if (uc < 0x80)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   31 |     /* The case n >= 1 is already handled by the caller.  */[0m
   32 |     return -2;[0m
   33 |   else if (uc < 0x800)[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:33:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else if (uc < 0x800)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   34 |     count = 2;[0m
   35 |   else if (uc < 0x10000)[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:37:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |       if (uc < 0xd800 || uc >= 0xe000)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   38 |         count = 3;[0m
   39 |       else[0m
      | [0;32m      } 
[0m[1munistr/u8-uctomb-aux.c:39:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   40 |         return -1;[0m
      | [0;1;32m                  
[0m[1munistr/u8-uctomb-aux.c:42:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   else if (uc < 0x110000)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   43 |     count = 4;[0m
   44 |   else[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:44:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   45 |     return -1;[0m
      | [0;1;32m              
[0m[1munistr/u8-uctomb-aux.c:47:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   if (n < count)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   48 |     return -2;[0m
      | [0;1;32m              
[0m[1munistr/u8-uctomb-aux.c:52:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   52 |     case 4: s[3] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0x10000;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   53 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1munistr/u8-uctomb-aux.c:54:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |     case 3: s[2] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0x800;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   55 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1munistr/u8-uctomb-aux.c:56:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   56 |     case 2: s[1] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0xc0;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   57 |   /*case 1:*/ s[0] = uc;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m16 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[115/164][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpg7dtt0hz.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/xstrndup.c
[1mxstrndup.c:33:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (! s)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   34 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[116/164][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmppzovwznu.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unicase/special-casing.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[117/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp_a1gq7sm.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/asnprintf.c
[118/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpz5ld3oln.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unicase/ignorable.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[119/164][23.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp_15rz1b1.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/printf-args.c
[1mprintf-args.c:44:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:48:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   48 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   49 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:51:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   52 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:54:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   55 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:57:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   58 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:60:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   61 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:66:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:69:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   70 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:72:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   73 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:75:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   75 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   76 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:79:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   79 |         ap->a.a_int8_t = va_arg (args, /* int8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   80 |         #else[0m
   81 |         ap->a.a_int8_t = va_arg (args, int8_t);[0m
   82 |         #endif[0m
   83 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:86:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   86 |         ap->a.a_uint8_t = va_arg (args, /* uint8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   87 |         #else[0m
   88 |         ap->a.a_uint8_t = va_arg (args, uint8_t);[0m
   89 |         #endif[0m
   90 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:93:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   93 |         ap->a.a_int16_t = va_arg (args, /* int16_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   94 |         #else[0m
   95 |         ap->a.a_int16_t = va_arg (args, int16_t);[0m
   96 |         #endif[0m
   97 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:100:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  100 |         ap->a.a_uint16_t = va_arg (args, /* uint16_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  101 |         #else[0m
  102 |         ap->a.a_uint16_t = va_arg (args, uint16_t);[0m
  103 |         #endif[0m
  104 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:109:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |         ap->a.a_int32_t = va_arg (args, int32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  110 |         #endif[0m
  111 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:116:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  116 |         ap->a.a_uint32_t = va_arg (args, uint32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  117 |         #endif[0m
  118 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:120:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |         ap->a.a_int64_t = va_arg (args, int64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  121 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:123:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  123 |         ap->a.a_uint64_t = va_arg (args, uint64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  124 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:127:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |         ap->a.a_int_fast8_t = va_arg (args, /* int_fast8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  128 |         #else[0m
  129 |         ap->a.a_int_fast8_t = va_arg (args, int_fast8_t);[0m
  130 |         #endif[0m
  131 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:134:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |         ap->a.a_uint_fast8_t = va_arg (args, /* uint_fast8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  135 |         #else[0m
  136 |         ap->a.a_uint_fast8_t = va_arg (args, uint_fast8_t);[0m
  137 |         #endif[0m
  138 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:143:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |         ap->a.a_int_fast16_t = va_arg (args, int_fast16_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  144 |         #endif[0m
  145 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:150:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |         ap->a.a_uint_fast16_t = va_arg (args, uint_fast16_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  151 |         #endif[0m
  152 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:157:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |         ap->a.a_int_fast32_t = va_arg (args, int_fast32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  158 |         #endif[0m
  159 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:164:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |         ap->a.a_uint_fast32_t = va_arg (args, uint_fast32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  165 |         #endif[0m
  166 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:168:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  168 |         ap->a.a_int_fast64_t = va_arg (args, int_fast64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  169 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:171:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |         ap->a.a_uint_fast64_t = va_arg (args, uint_fast64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  172 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:174:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  174 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  175 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:177:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  177 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  178 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:180:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  180 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  181 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:187:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  187 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  188 |           (sizeof (wint_t) < sizeof (int)[0m
  189 |            ? (wint_t) va_arg (args, int)[0m
  190 |            : va_arg (args, wint_t));[0m
  191 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:194:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  194 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  195 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
  196 |            it occurs quite frequently in printf statements that produce[0m
  197 |            debug output.  Use a fallback in this case.  */[0m
  198 |         if (ap->a.a_string == NULL)[0m
  199 |           ap->a.a_string = "(NULL)";[0m
  200 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:198:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  199 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:203:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  203 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  204 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  205 |            it occurs quite frequently in printf statements that produce[0m
  206 |            debug output.  Use a fallback in this case.  */[0m
  207 |         if (ap->a.a_wide_string == NULL)[0m
  208 |           {[0m
  209 |             static const wchar_t wide_null_string[] =[0m
  210 |               {[0m
  211 |                 (wchar_t)'(',[0m
  212 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  213 |                 (wchar_t)')',[0m
  214 |                 (wchar_t)0[0m
  215 |               };[0m
  216 |             ap->a.a_wide_string = wide_null_string;[0m
  217 |           }[0m
  218 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:221:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  221 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  222 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:224:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  224 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  225 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:227:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  227 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  228 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:230:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  230 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  231 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:233:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  233 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  234 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:236:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  236 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  237 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:239:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |         ap->a.a_count_int8_t_pointer = va_arg (args, int8_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  240 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:242:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |         ap->a.a_count_int16_t_pointer = va_arg (args, int16_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  243 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:245:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  245 |         ap->a.a_count_int32_t_pointer = va_arg (args, int32_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  246 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:248:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  248 |         ap->a.a_count_int64_t_pointer = va_arg (args, int64_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  249 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:251:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  251 |         ap->a.a_count_int_fast8_t_pointer = va_arg (args, int_fast8_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  252 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:254:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  254 |         ap->a.a_count_int_fast16_t_pointer = va_arg (args, int_fast16_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  255 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:257:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  257 |         ap->a.a_count_int_fast32_t_pointer = va_arg (args, int_fast32_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  258 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:260:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  260 |         ap->a.a_count_int_fast64_t_pointer = va_arg (args, int_fast64_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  261 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:303:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  303 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m49 warnings generated.

[120/164][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpkm_u52eo.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fd-hook.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[121/164][15.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxvhzj1b8.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/c-strcasecmp.c
[1mc-strcasecmp.c:33:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strcasecmp.c:41:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (c1 == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strcasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strcasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m20 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[122/164][2.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp72o8by3p.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/ptimer.c
[1mptimer.c:142:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |       if (clocks[i].sysconf_name != NO_SYSCONF_CHECK)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  143 |         if (sysconf (clocks[i].sysconf_name) < 0)[0m
  144 |           continue;             /* sysconf claims this clock is unavailable */[0m
      | [0;1;32m                                                                              
[0m[1mptimer.c:143:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |         if (sysconf (clocks[i].sysconf_name) < 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  144 |           continue;             /* sysconf claims this clock is unavailable */[0m
      | [0;1;32m                                                                              
[0m[1mptimer.c:145:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (clock_getres (clocks[i].id, &r) < 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  146 |         continue;               /* clock_getres doesn't work for this clock */[0m
      | [0;1;32m                                                                              
[0m[1mptimer.c:150:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |       if (posix_clock_resolution == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  151 |         posix_clock_resolution = 1e-3;[0m
      | [0;1;32m                                      
[0m31 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[123/164][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpg9nbsdbc.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/unictype/pr_soft_dotted.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[124/164][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp63uavh8z.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/hash-pjw.c
[1mhash-pjw.c:36:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   for (s = x; *s; s++)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   37 |     h = *s + ((h << 9) | (h >> (SIZE_BITS - 9)));[0m
      | [0;1;32m                                                 
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[125/164][46.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp2yic2ce7.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/findprog-in.c
[1mfindprog-in.c:82:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |       for (p = progname; *p != '\0'; p++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   83 |         if (ISSLASH (*p))[0m
   84 |           {[0m
   85 |             has_slash = true;[0m
   86 |             break;[0m
   87 |           }[0m
      | [0;1;32m           
[0m[1mfindprog-in.c:93:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |         if (optimize_for_exec)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   94 |           /* The execl/execv/execlp/execvp functions will try the various[0m
   95 |              suffixes anyway and fail if no executable is found.  */[0m
   96 |           return progname;[0m
   97 |         else[0m
      | [0;32m        } 
[0m[1mfindprog-in.c:141:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |                     if (progpathname == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  142 |                       return NULL; /* errno is set here */[0m
      | [0;1;32m                                                          
[0m[1mfindprog-in.c:164:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  165 |                                   return progpathname;[0m
      | [0;1;32m                                                      
[0m[1mfindprog-in.c:172:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |                     if (errno != ENOENT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  173 |                       failure_errno = errno;[0m
      | [0;1;32m                                            
[0m[1mfindprog-in.c:215:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |   if (path == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  216 |     /* If PATH is not set, the default search path is implementation dependent.[0m
  217 |        In practice, it is treated like an empty PATH.  */[0m
  218 |     path = "";[0m
      | [0;1;32m              
[0m[1mfindprog-in.c:223:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |     if (path_copy == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  224 |       return NULL; /* errno is set here */[0m
      | [0;1;32m                                          
[0m[1mfindprog-in.c:245:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |         for (cp = path_rest; *cp != '\0' && *cp != PATH_SEPARATOR; cp++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  246 |           ;[0m
      | [0;1;32m           
[0m[1mfindprog-in.c:251:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |         if (dir == cp)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  252 |           dir = ".";[0m
      | [0;1;32m                    
[0m[1mfindprog-in.c:330:33: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  330 |                                 memcpy (progpathname + 2, progname,[0m
      | [0;1;32m                                ^~~~~~
[0m[1mfindprog-in.c:330:33: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  330 |                                 memcpy (progpathname + 2, progname,[0m
      | [0;1;32m                                ^~~~~~
[0m[1mfindprog-in.c:343:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |                 if (errno != ENOENT)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  344 |                   failure_errno = errno;[0m
      | [0;1;32m                                        
[0m[1mfindprog-in.c:387:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |         if (last)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  388 |           break;[0m
      | [0;1;32m                
[0m16 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[126/164][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpdjrdv832.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/mbrtowc.c
[1mmbrtowc.c:97:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (! pwc)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   98 |     pwc = &wc;[0m
      | [0;1;32m              
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[127/164][2.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpt_3uj4ra.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/md2.c
[1mmd2.c:40:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   40 |   memset (ctx->X, 0, sizeof (ctx->X));[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:40:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   40 |   memset (ctx->X, 0, sizeof (ctx->X));[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:41:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   41 |   memset (ctx->chksum, 0, sizeof (ctx->chksum));[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:41:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   41 |   memset (ctx->chksum, 0, sizeof (ctx->chksum));[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:42:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   42 |   memset (ctx->buf, 0, sizeof (ctx->buf));[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:42:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   42 |   memset (ctx->buf, 0, sizeof (ctx->buf));[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:51:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   51 |   memcpy (resbuf, ctx->X, 16);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:51:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   51 |   memcpy (resbuf, ctx->X, 16);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:75:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   75 |   memcpy (ctx->buf, ctx->chksum, 16);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:75:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   75 |   memcpy (ctx->buf, ctx->chksum, 16);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmd2.c:109:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |       memcpy (ctx->buf + ctx->curlen, in, (size_t) n);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmd2.c:109:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  109 |       memcpy (ctx->buf + ctx->curlen, in, (size_t) n);[0m
      | [0;1;32m      ^~~~~~
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[128/164][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpgfxofzok.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/u64.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[129/164][34.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpvpmxrgb2.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/hash.c
[1mhash.c:228:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |   for (i = *prime_offset; i < countof (primes); i++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  229 |     if (primes[i] >= size)[0m
  230 |       {[0m
  231 |         /* Set the offset to the next prime.  That is safe because,[0m
  232 |            next time we are called, it will be with a larger SIZE,[0m
  233 |            which means we could never return the same prime anyway.[0m
  234 |            (If that is not the case, the caller can simply reset[0m
  235 |            *prime_offset.)  */[0m
  236 |         *prime_offset = i + 1;[0m
  237 |         return primes[i];[0m
  238 |       }[0m
      | [0;1;32m       
[0m[1mhash.c:296:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  296 |   memset (ht->cells, INVALID_PTR_CHAR, size * sizeof (struct cell));[0m
      | [0;1;32m  ^~~~~~
[0m[1mhash.c:296:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  296 |   memset (ht->cells, INVALID_PTR_CHAR, size * sizeof (struct cell));[0m
      | [0;1;32m  ^~~~~~
[0m[1mhash.c:325:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |     if (equals (key, c->key))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  326 |       break;[0m
      | [0;1;32m            
[0m[1mhash.c:341:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |   if (CELL_OCCUPIED (c))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  342 |     return c->value;[0m
  343 |   else[0m
      | [0;32m  } 
[0m[1mhash.c:343:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  344 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:357:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |       if (orig_key)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  358 |         *(void **)orig_key = c->key;[0m
      | [0;1;32m                                    
[0m[1mhash.c:359:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |       if (value)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  360 |         *(void **)value = c->value;[0m
      | [0;1;32m                                   
[0m[1mhash.c:363:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  364 |     return 0;[0m
      | [0;1;32m             
[0m[1mhash.c:400:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  400 |   memset (cells, INVALID_PTR_CHAR, newsize * sizeof (struct cell));[0m
      | [0;1;32m  ^~~~~~
[0m[1mhash.c:400:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  400 |   memset (cells, INVALID_PTR_CHAR, newsize * sizeof (struct cell));[0m
      | [0;1;32m  ^~~~~~
[0m[1mhash.c:403:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |   for (c = old_cells; c < old_end; c++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  404 |     if (CELL_OCCUPIED (c))[0m
  405 |       {[0m
  406 |         struct cell *new_c;[0m
  407 |         /* We don't need to test for uniqueness of keys because they[0m
  408 |            come from the hash table and are therefore known to be[0m
  409 |            unique.  */[0m
  410 |         new_c = cells + HASH_POSITION (c->key, hasher, newsize);[0m
  411 |         FOREACH_OCCUPIED_ADJACENT (new_c, cells, newsize)[0m
  412 |           ;[0m
  413 |         *new_c = *c;[0m
  414 |       }[0m
      | [0;1;32m       
[0m[1mhash.c:455:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |   if (!CELL_OCCUPIED (c))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  456 |     return 0;[0m
  457 |   else[0m
      | [0;32m  } 
[0m[1mhash.c:480:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |             if (key2 == c_new->key)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  481 |               /* The cell C (key2) is already where we want it (in[0m
  482 |                  C_NEW's "chain" of keys.)  */[0m
  483 |               goto next_rehash;[0m
      | [0;1;32m                               
[0m[1mhash.c:502:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  502 |   memset (ht->cells, INVALID_PTR_CHAR, ht->size * sizeof (struct cell));[0m
      | [0;1;32m  ^~~~~~
[0m[1mhash.c:502:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  502 |   memset (ht->cells, INVALID_PTR_CHAR, ht->size * sizeof (struct cell));[0m
      | [0;1;32m  ^~~~~~
[0m[1mhash.c:524:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |   for (; c < end; c++)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  525 |     if (CELL_OCCUPIED (c))[0m
  526 |       {[0m
  527 |         void *key;[0m
  528 |       repeat:[0m
  529 |         key = c->key;[0m
  530 |         if (fn (key, c->value, arg))[0m
  531 |           return;[0m
  532 |         /* hash_table_remove might have moved the adjacent cells. */[0m
  533 |         if (c->key != key && CELL_OCCUPIED (c))[0m
  534 |           goto repeat;[0m
  535 |       }[0m
      | [0;1;32m       
[0m[1mhash.c:530:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |         if (fn (key, c->value, arg))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  531 |           return;[0m
      | [0;1;32m                 
[0m[1mhash.c:533:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |         if (c->key != key && CELL_OCCUPIED (c))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  534 |           goto repeat;[0m
      | [0;1;32m                      
[0m[1mhash.c:569:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  569 |   for (; c < end; c++)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  570 |     if (CELL_OCCUPIED (c))[0m
  571 |       {[0m
  572 |         iter->key = c->key;[0m
  573 |         iter->value = c->value;[0m
  574 |         iter->pos = c + 1;[0m
  575 |         return 1;[0m
  576 |       }[0m
      | [0;1;32m       
[0m[1mhash.c:647:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |   if (h)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  648 |     for (p += 1; *p != '\0'; p++)[0m
  649 |       h = (h << 5) - h + *p;[0m
      | [0;1;32m                            
[0m[1mhash.c:648:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |     for (p += 1; *p != '\0'; p++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  649 |       h = (h << 5) - h + *p;[0m
      | [0;1;32m                            
[0m[1mhash.c:688:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |   if (h)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  689 |     for (p += 1; *p != '\0'; p++)[0m
  690 |       h = (h << 5) - h + c_tolower (*p);[0m
      | [0;1;32m                                        
[0m[1mhash.c:689:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |     for (p += 1; *p != '\0'; p++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  690 |       h = (h << 5) - h + c_tolower (*p);[0m
      | [0;1;32m                                        
[0m48 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[130/164][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp09urs6d0.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/fseek.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[131/164][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp9scqghd7.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/tempname.c
[1mtempname.c:96:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (__getrandom (r, sizeof *r, GRND_NONBLOCK) == sizeof *r)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   97 |     return true;[0m
      | [0;1;32m                
[0m[1mtempname.c:145:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |   if (__lstat64_time64 (tmpl, &st) == 0 || errno == EOVERFLOW)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  146 |     __set_errno (EEXIST);[0m
      | [0;1;32m                         
[0m[1mtempname.c:246:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |               while (random_bits (&v, v) && biased_min <= v)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  247 |                 continue;[0m
      | [0;1;32m                         
[0m[1mtempname.c:264:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |       else if (errno != EEXIST)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  265 |         return -1;[0m
      | [0;1;32m                  
[0m8 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[132/164][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpwvplr8my.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/mbiter.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[133/164][50.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp3g541wd2.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/spawn-pipe.c
[1mspawn-pipe.c:96:5: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   do[0m
      | [0;1;32m    ^
[0m      | [0;32m     {
[0m   97 |     retval = close (fd);[0m
   98 |   while (retval < 0 && errno == EINTR);[0m
      | [0;32m  } 
[0m[1mspawn-pipe.c:171:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |           if (resolved_prog == NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  172 |             goto fail_with_errno;[0m
      | [0;1;32m                                 
[0m[1mspawn-pipe.c:173:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |           if (resolved_prog != prog_path)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  174 |             prog_path_to_free = (char *) resolved_prog;[0m
      | [0;1;32m                                                       
[0m[1mspawn-pipe.c:180:56: [0m[0;1;35mwarning: [0m[1mThe value '6' provided to the cast expression is not in the valid range of values for 'canonicalize_mode_t' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
  180 |                 canonicalize_filename_mode (prog_path, CAN_MISSING | CAN_NOLINKS);[0m
      | [0;1;32m                                                       ^
[0m[1m./canonicalize.h:33:6: [0m[0;1;36mnote: [0menum declared here[0m
   33 | enum canonicalize_mode_t[0m
      | [0;1;32m~~~~~^~~~~~~~~~~~~~~~~~~
[0m   34 |   {[0m
      | [0;1;32m  ~
[0m   35 |     /* All components must exist.  */[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   36 |     CAN_EXISTING = 0,[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~
[0m   37 | [0m
   38 |     /* All components excluding last one must exist.  */[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   39 |     CAN_ALL_BUT_LAST = 1,[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~
[0m   40 | [0m
   41 |     /* No requirements on components existence.  */[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   42 |     CAN_MISSING = 2,[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~
[0m   43 | [0m
   44 |     /* Don't expand symlinks.  */[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   45 |     CAN_NOLINKS = 4[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~
[0m   46 |   };[0m
      | [0;1;32m  ~
[0m[1mspawn-pipe.c:665:18: [0m[0;1;36mnote: [0mCalling 'create_pipe'[0m
  665 |   pid_t result = create_pipe (progname, prog_path, prog_argv, directory,[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  666 |                               true, false, NULL, prog_stdout,[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  667 |                               null_stderr, slave_process, exit_on_error,[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  668 |                               iofd);[0m
      | [0;1;32m                              ~~~~~
[0m[1mspawn-pipe.c:151:7: [0m[0;1;36mnote: [0mAssuming 'directory' is not equal to NULL[0m
  151 |   if (directory != NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mspawn-pipe.c:151:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  151 |   if (directory != NULL)[0m
      | [0;1;32m  ^
[0m[1mspawn-pipe.c:167:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  167 |       if (! IS_ABSOLUTE_FILE_NAME (prog_path))[0m
      | [0;1;32m            ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mspawn-pipe.c:167:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  167 |       if (! IS_ABSOLUTE_FILE_NAME (prog_path))[0m
      | [0;1;32m      ^
[0m[1mspawn-pipe.c:171:15: [0m[0;1;36mnote: [0mAssuming 'resolved_prog' is not equal to NULL[0m
  171 |           if (resolved_prog == NULL)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mspawn-pipe.c:171:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  171 |           if (resolved_prog == NULL)[0m
      | [0;1;32m          ^
[0m[1mspawn-pipe.c:173:15: [0m[0;1;36mnote: [0mAssuming 'resolved_prog' is equal to 'prog_path'[0m
  173 |           if (resolved_prog != prog_path)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mspawn-pipe.c:173:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |           if (resolved_prog != prog_path)[0m
      | [0;1;32m          ^
[0m[1mspawn-pipe.c:177:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  177 |           if (! IS_ABSOLUTE_FILE_NAME (prog_path))[0m
      | [0;1;32m                ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mspawn-pipe.c:177:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  177 |           if (! IS_ABSOLUTE_FILE_NAME (prog_path))[0m
      | [0;1;32m          ^
[0m[1mspawn-pipe.c:180:56: [0m[0;1;36mnote: [0mThe value '6' provided to the cast expression is not in the valid range of values for 'canonicalize_mode_t'[0m
  180 |                 canonicalize_filename_mode (prog_path, CAN_MISSING | CAN_NOLINKS);[0m
      | [0;1;32m                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mspawn-pipe.c:190:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |               if (! IS_ABSOLUTE_FILE_NAME (prog_path))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  191 |                 abort ();[0m
      | [0;1;32m                         
[0m[1mspawn-pipe.c:214:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   if (pipe_stdout)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  215 |     if (pipe2_safer (ifd, O_BINARY | O_CLOEXEC) < 0)[0m
  216 |       error (EXIT_FAILURE, errno, _("cannot create pipe"));[0m
      | [0;1;32m                                                           
[0m[1mspawn-pipe.c:215:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |     if (pipe2_safer (ifd, O_BINARY | O_CLOEXEC) < 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  216 |       error (EXIT_FAILURE, errno, _("cannot create pipe"));[0m
      | [0;1;32m                                                           
[0m[1mspawn-pipe.c:217:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |   if (pipe_stdin)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  218 |     if (pipe2_safer (ofd, O_BINARY | O_CLOEXEC) < 0)[0m
  219 |       error (EXIT_FAILURE, errno, _("cannot create pipe"));[0m
      | [0;1;32m                                                           
[0m[1mspawn-pipe.c:218:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |     if (pipe2_safer (ofd, O_BINARY | O_CLOEXEC) < 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  219 |       error (EXIT_FAILURE, errno, _("cannot create pipe"));[0m
      | [0;1;32m                                                           
[0m[1mspawn-pipe.c:549:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |       if (actions_allocated)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  550 |         posix_spawn_file_actions_destroy (&actions);[0m
      | [0;1;32m                                                    
[0m[1mspawn-pipe.c:551:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |       if (attrs_allocated)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  552 |         posix_spawnattr_destroy (&attrs);[0m
      | [0;1;32m                                         
[0m[1mspawn-pipe.c:553:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  553 |       if (slave_process)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  554 |         unblock_fatal_signals ();[0m
      | [0;1;32m                                 
[0m[1mspawn-pipe.c:570:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  570 |   if (attrs_allocated)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  571 |     posix_spawnattr_destroy (&attrs);[0m
      | [0;1;32m                                     
[0m[1mspawn-pipe.c:577:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |   if (pipe_stdin)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  578 |     close (ofd[0]);[0m
      | [0;1;32m                   
[0m[1mspawn-pipe.c:579:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  579 |   if (pipe_stdout)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  580 |     close (ifd[1]);[0m
      | [0;1;32m                   
[0m[1mspawn-pipe.c:583:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |   if (pipe_stdout)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  584 |     fd[0] = ifd[0];[0m
      | [0;1;32m                   
[0m[1mspawn-pipe.c:585:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |   if (pipe_stdin)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  586 |     fd[1] = ofd[1];[0m
      | [0;1;32m                   
[0m[1mspawn-pipe.c:594:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |   if (exit_on_error || !null_stderr)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  595 |     error (exit_on_error ? EXIT_FAILURE : 0, saved_errno,[0m
  596 |            _("%s subprocess failed"), progname);[0m
      | [0;1;32m                                                
[0m[1mspawn-pipe.c:644:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |   if (result != -1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  645 |     fd[0] = iofd[0];[0m
      | [0;1;32m                    
[0m[1mspawn-pipe.c:669:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  669 |   if (result != -1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  670 |     fd[0] = iofd[1];[0m
      | [0;1;32m                    
[0m34 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[134/164][72.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpyqtqmzsw.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/strtol.c
[1mstrtol.c:264:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |   while (ISSPACE (*s))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  265 |     ++s;[0m
      | [0;1;32m        
[0m[1mstrtol.c:266:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |   if (*s == L_('\0'))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  267 |     goto noconv;[0m
      | [0;1;32m                
[0m[1mstrtol.c:280:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  281 |     negative = 0;[0m
      | [0;1;32m                 
[0m[1mstrtol.c:296:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |       else if (base == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  297 |         base = 8;[0m
      | [0;1;32m                 
[0m[1mstrtol.c:299:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |   else if (base == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  300 |     base = 10;[0m
      | [0;1;32m              
[0m[1mstrtol.c:331:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |       if (s == end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  332 |         break;[0m
      | [0;1;32m              
[0m[1mstrtol.c:333:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |       if (c >= L_('0') && c <= L_('9'))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  334 |         c -= L_('0');[0m
  335 |       else if (ISALPHA (c))[0m
      | [0;32m      } 
[0m[1mstrtol.c:335:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |       else if (ISALPHA (c))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  336 |         c = TOUPPER (c) - L_('A') + 10;[0m
  337 |       else[0m
      | [0;32m      } 
[0m[1mstrtol.c:337:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  338 |         break;[0m
      | [0;1;32m              
[0m[1mstrtol.c:339:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |       if ((int) c >= base)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  340 |         break;[0m
      | [0;1;32m              
[0m[1mstrtol.c:342:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |       if (i > cutoff || (i == cutoff && c > cutlim))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  343 |         overflow = 1;[0m
  344 |       else[0m
      | [0;32m      } 
[0m[1mstrtol.c:352:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |   if (s == save)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  353 |     goto noconv;[0m
      | [0;1;32m                
[0m[1mstrtol.c:357:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |   if (endptr != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  358 |     *endptr = (STRING_TYPE *) s;[0m
      | [0;1;32m                                
[0m[1mstrtol.c:366:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |               : (unsigned LONG int) STRTOL_LONG_MAX))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  367 |     overflow = 1;[0m
      | [0;1;32m                 
[0m[1mstrtol.c:394:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |           && save[-2] == L_('0'))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  395 |         *endptr = (STRING_TYPE *) &save[-1];[0m
  396 |       else[0m
      | [0;32m      } 
[0m[1mstrtol.c:396:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  397 |         /*  There was no number to convert.  */[0m
  398 |         *endptr = (STRING_TYPE *) nptr;[0m
      | [0;1;32m                                       
[0m20 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[135/164][80.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp2k566i1h.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/c-strcasestr.c
[1mc-strcasestr.c:52:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |   while (*haystack && *needle)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   53 |     ok &= (c_tolower ((unsigned char) *haystack++)[0m
   54 |            == c_tolower ((unsigned char) *needle++));[0m
      | [0;1;32m                                                     
[0m[1mc-strcasestr.c:55:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |   if (*needle)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   56 |     return NULL;[0m
      | [0;1;32m                
[0m[1mc-strcasestr.c:57:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |   if (ok)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   58 |     return (char *) haystack_start;[0m
      | [0;1;32m                                   
[0m[1mc-strcasestr.c:66:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (needle_len < LONG_NEEDLE_THRESHOLD)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   67 |     return two_way_short_needle ((const unsigned char *) haystack,[0m
   68 |                                  haystack_len,[0m
   69 |                                  (const unsigned char *) needle_start,[0m
   70 |                                  needle_len);[0m
      | [0;1;32m                                             
[0m39 warnings generated.
Suppressed 35 warnings (35 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[136/164][82.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmphhtzsi3i.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/quotearg.c
[1mquotearg.c:163:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  164 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:174:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  175 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:177:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |   if (!left_quote || !right_quote)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  178 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:188:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |   if (style == custom_quoting_style)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  189 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:204:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |   if (translation != msgid)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  205 |     return translation;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:226:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |   if (STRCASEEQ (locale_code, "UTF-8", 'U','T','F','-','8',0,0,0,0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  227 |     return msgid[0] == '`' ? "\xe2\x80\x98": "\xe2\x80\x99";[0m
      | [0;1;32m                                                            
[0m[1mquotearg.c:228:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |   if (STRCASEEQ (locale_code, "GB18030", 'G','B','1','8','0','3','0',0,0))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  229 |     return msgid[0] == '`' ? "\xa1\ae": "\xa1\xaf";[0m
      | [0;1;32m                                                   
[0m[1mquotearg.c:311:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  311 |       quoting_style = c_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  312 |       elide_outer_quotes = true;[0m
  313 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:315:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  315 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  316 |         STORE ('"');[0m
  317 |       backslash_escapes = true;[0m
  318 |       quote_string = "\"";[0m
  319 |       quote_string_len = 1;[0m
  320 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:315:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  316 |         STORE ('"');[0m
      | [0;1;32m                    
[0m[1mquotearg.c:323:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  323 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  324 |       elide_outer_quotes = false;[0m
  325 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:357:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |         if (!elide_outer_quotes)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  358 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
  359 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:358:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  359 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:364:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  364 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mquotearg.c:367:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  367 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  368 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:370:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  370 |       elide_outer_quotes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  371 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:373:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  373 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  374 |         backslash_escapes = true;[0m
  375 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:373:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  374 |         backslash_escapes = true;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:377:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  377 |       quoting_style = shell_always_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  378 |       if (!elide_outer_quotes)[0m
  379 |         STORE ('\'');[0m
  380 |       quote_string = "'";[0m
  381 |       quote_string_len = 1;[0m
  382 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:378:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  379 |         STORE ('\'');[0m
      | [0;1;32m                     
[0m[1mquotearg.c:385:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  385 |       elide_outer_quotes = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  386 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:389:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mquotearg.c:411:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |           if (elide_outer_quotes)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  412 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:420:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  420 |           if (backslash_escapes)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:441:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |           else if (flags & QA_ELIDE_NULL_BYTES)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  442 |             continue;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:446:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  446 |           switch (quoting_style)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:449:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  449 |               if (elide_outer_quotes)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  450 |                 goto force_outer_quoting_style;[0m
  451 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mquotearg.c:449:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  450 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:454:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  454 |               if ((flags & QA_SPLIT_TRIGRAPHS)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mquotearg.c:455:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |                   && i + 2 < argsize && arg[i + 1] == '?')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mquotearg.c:463:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                     if (elide_outer_quotes)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  464 |                       goto force_outer_quoting_style;[0m
      | [0;1;32m                                                     
[0m[1mquotearg.c:465:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  465 |                     c = arg[i + 2];[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  466 |                     i += 2;[0m
  467 |                     STORE ('?');[0m
  468 |                     STORE ('"');[0m
  469 |                     STORE ('"');[0m
  470 |                     STORE ('?');[0m
  471 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mquotearg.c:474:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  474 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mquotearg.c:479:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mquotearg.c:483:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  483 |         case '\a': esc = 'a'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:484:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  484 |         case '\b': esc = 'b'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:485:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  485 |         case '\f': esc = 'f'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:486:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |         case '\n': esc = 'n'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:487:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |         case '\r': esc = 'r'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:488:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |         case '\t': esc = 't'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:489:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  489 |         case '\v': esc = 'v'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:490:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |         case '\\': esc = c;[0m
      | [0;1;32m                   ^
[0m      | [0;32m                   {
[0m[1mquotearg.c:494:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  495 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:501:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |           if (backslash_escapes && elide_outer_quotes && quote_string_len)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  502 |             goto store_c;[0m
      | [0;1;32m                         
[0m[1mquotearg.c:506:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  507 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:518:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |           if (! (argsize == SIZE_MAX ? arg[1] == '\0' : argsize == 1))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  519 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:520:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../src/config.h:2801:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2801 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mquotearg.c:522:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |           if (i != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  523 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:524:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../src/config.h:2801:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2801 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mquotearg.c:526:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  526 |           c_and_shell_quote_compat = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  527 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mquotearg.c:541:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  542 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:543:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  543 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:546:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |           encountered_single_quote = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:550:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  551 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:592:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  592 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:614:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  614 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:614:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  614 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:618:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |                 if (argsize == SIZE_MAX)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  619 |                   argsize = strlen (arg);[0m
      | [0;1;32m                                         
[0m[1mquotearg.c:626:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |                     if (bytes == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  627 |                       break;[0m
  628 |                     else if (bytes == (size_t) -1)[0m
      | [0;32m                    } 
[0m[1mquotearg.c:636:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |                         while (i + m < argsize && arg[i + m])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  637 |                           m++;[0m
      | [0;1;32m                              
[0m[1mquotearg.c:650:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |                             for (j = 1; j < bytes; j++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  651 |                               switch (arg[i + m + j])[0m
  652 |                                 {[0m
  653 |                                 case '[': case '\\': case '^':[0m
  654 |                                 case '`': case '|':[0m
  655 |                                   goto force_outer_quoting_style;[0m
  656 | [0m
  657 |                                 default:[0m
  658 |                                   break;[0m
  659 |                                 }[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:658:35: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |                                   break;[0m
      | [0;1;32m                                  ^    
[0m      | [0;32m                                  {    ;} 
[0m[1mquotearg.c:662:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |                         if (! iswprint (w))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  663 |                           printable = false;[0m
      | [0;1;32m                                            
[0m[1mquotearg.c:692:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |                     if (ilim <= i + 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  693 |                       break;[0m
      | [0;1;32m                            
[0m[1mquotearg.c:708:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |           && !is_right_quote)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  709 |         goto store_c;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:718:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |       if (! c_and_shell_quote_compat)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  719 |         all_c_and_shell_quote_compat = false;[0m
      | [0;1;32m                                             
[0m[1mquotearg.c:723:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  723 |       && elide_outer_quotes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  724 |     goto force_outer_quoting_style;[0m
      | [0;1;32m                                   
[0m[1mquotearg.c:733:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |       if (all_c_and_shell_quote_compat)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  734 |         return quotearg_buffer_restyled (buffer, orig_buffersize, arg, argsize,[0m
  735 |                                          c_quoting_style,[0m
  736 |                                          flags, quote_these_too,[0m
  737 |                                          left_quote, right_quote);[0m
  738 |       else if (! buffersize && orig_buffersize)[0m
      | [0;32m      } 
[0m[1mquotearg.c:747:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |   if (quote_string && !elide_outer_quotes)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  748 |     for (; *quote_string; quote_string++)[0m
  749 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:748:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |     for (; *quote_string; quote_string++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  749 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:751:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |   if (len < buffersize)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  752 |     buffer[len] = '\0';[0m
      | [0;1;32m                       
[0m[1mquotearg.c:758:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |   if (quoting_style == shell_always_quoting_style && backslash_escapes)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  759 |     quoting_style = shell_escape_always_quoting_style;[0m
      | [0;1;32m                                                      
[0m[1mquotearg.c:819:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |   if (size)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  820 |     *size = bufsize - 1;[0m
      | [0;1;32m                        
[0m[1mquotearg.c:843:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  843 |   for (i = 1; i < nslots; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  844 |     free (sv[i].val);[0m
      | [0;1;32m                     
[0m[1mquotearg.c:877:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |   if (! (0 <= n && n < nslots_max))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  878 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:887:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |       if (preallocated)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  888 |         *sv = slotvec0;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:889:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  889 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:889:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  889 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:907:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  907 |         if (val != slot0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  908 |           free (val);[0m
      | [0;1;32m                     
[0m132 warnings generated.
Suppressed 55 warnings (55 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[137/164][87.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpda58xsg8.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/printf-parse.c
[1mprintf-parse.c:149:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  150 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:155:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  156 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:157:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  158 |                     /* Positional argument 0.  */[0m
  159 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:160:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  161 |                     /* n too large, would lead to out of memory later.  */[0m
  162 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:208:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  209 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:218:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  219 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:226:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  227 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:232:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  233 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:234:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  235 |                         /* Positional argument 0.  */[0m
  236 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:237:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  238 |                         /* n too large, would lead to out of memory later.  */[0m
  239 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:247:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  248 |                     /* arg_posn wrapped around.  */[0m
  249 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:251:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:251:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:258:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  259 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:262:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  263 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:275:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  276 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:283:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  284 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:289:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  290 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:291:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  292 |                             /* Positional argument 0.  */[0m
  293 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:294:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |                             /* n too large, would lead to out of memory[0m
  296 |                                later.  */[0m
  297 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:305:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  306 |                         /* arg_posn wrapped around.  */[0m
  307 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:309:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:309:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:316:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  317 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:320:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  321 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:568:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  568 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:575:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  575 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:579:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  579 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:581:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  581 |                 if (signed_type == TYPE_LONGINT[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  582 |                     /* For backward compatibility only.  */[0m
  583 |                     || signed_type == TYPE_LONGLONGINT)[0m
  584 | #if HAVE_WINT_T[0m
  585 |                   type = TYPE_WIDE_CHAR;[0m
  586 | #else[0m
  587 |                   goto error;[0m
  588 | #endif[0m
  589 |                 else[0m
  590 |                   type = TYPE_CHAR;[0m
  591 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:583:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |                     || signed_type == TYPE_LONGLONGINT)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  584 | #if HAVE_WINT_T[0m
  585 |                   type = TYPE_WIDE_CHAR;[0m
  586 | #else[0m
  587 |                   goto error;[0m
  588 | #endif[0m
  589 |                 else[0m
      | [0;32m                } 
[0m[1mprintf-parse.c:589:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  590 |                   type = TYPE_CHAR;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:594:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  594 |                 type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  595 |                 c = 'c';[0m
  596 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:599:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  599 |                 if (signed_type == TYPE_LONGINT[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  600 |                     /* For backward compatibility only.  */[0m
  601 |                     || signed_type == TYPE_LONGLONGINT)[0m
  602 | #if HAVE_WCHAR_T[0m
  603 |                   type = TYPE_WIDE_STRING;[0m
  604 | #else[0m
  605 |                   goto error;[0m
  606 | #endif[0m
  607 |                 else[0m
  608 |                   type = TYPE_STRING;[0m
  609 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:601:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |                     || signed_type == TYPE_LONGLONGINT)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  602 | #if HAVE_WCHAR_T[0m
  603 |                   type = TYPE_WIDE_STRING;[0m
  604 | #else[0m
  605 |                   goto error;[0m
  606 | #endif[0m
  607 |                 else[0m
      | [0;32m                } 
[0m[1mprintf-parse.c:607:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  608 |                   type = TYPE_STRING;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:612:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |                 type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  613 |                 c = 's';[0m
  614 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:617:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  617 |                 type = TYPE_POINTER;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  618 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:620:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  620 |                 type = pointer_type;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  621 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:634:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  634 |                 type = TYPE_NONE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  635 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:638:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  638 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mprintf-parse.c:647:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  648 |                       /* arg_posn wrapped around.  */[0m
  649 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:651:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  651 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:651:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  651 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:665:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  666 |                 /* Overflow, would lead to out of memory.  */[0m
  667 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:671:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  672 |                 /* Out of memory.  */[0m
  673 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:674:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:675:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:675:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:694:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  694 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  695 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:696:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  697 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:702:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  703 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:704:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  705 |     free (d->dir);[0m
      | [0;1;32m                  
[0m50 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[138/164][80.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpdk6lmha_.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/ftp-basic.c
[1mftp-basic.c:64:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       if (!line)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   65 |         return FTPRERR;[0m
      | [0;1;32m                       
[0m[1mftp-basic.c:69:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |       if ((p = strpbrk(line , "\r\n")))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   70 |         *p = 0;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:72:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |       if (opt.server_response)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   73 |         logprintf (LOG_NOTQUIET, "%s\n",[0m
   74 |                    quotearg_style (escape_quoting_style, line));[0m
   75 |       else[0m
      | [0;32m      } 
[0m[1mftp-basic.c:75:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   76 |         DEBUGP (("%s\n", quotearg_style (escape_quoting_style, line)));[0m
      | [0;1;32m                                                                       
[0m[1mftp-basic.c:112:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |           if (len < sizeof (buf))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  113 |             defanged = buf;[0m
  114 |           else[0m
      | [0;32m          } 
[0m[1mftp-basic.c:114:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  115 |             defanged = xmalloc (len + 1);[0m
      | [0;1;32m                                         
[0m[1mftp-basic.c:117:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  117 |           memcpy (defanged, value, len + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-basic.c:117:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  117 |           memcpy (defanged, value, len + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-basic.c:119:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |           for (p = defanged; *p; p++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  120 |             if (*p == '\r' || *p == '\n')[0m
  121 |               *p = ' ';[0m
      | [0;1;32m                       
[0m[1mftp-basic.c:120:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |             if (*p == '\r' || *p == '\n')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  121 |               *p = ' ';[0m
      | [0;1;32m                       
[0m[1mftp-basic.c:132:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  132 |       if (defanged != buf)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  133 |         xfree (defanged);[0m
      | [0;1;32m                         
[0m[1mftp-basic.c:135:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  136 |     res = concat_strings (command, "\r\n", (char *) 0);[0m
      | [0;1;32m                                                       
[0m[1mftp-basic.c:140:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  140 |       if (strncmp (res, "PASS", 4) != 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  141 |         logprintf (LOG_ALWAYS, "--> %s\n", res);[0m
  142 |       else[0m
      | [0;32m      } 
[0m[1mftp-basic.c:142:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  143 |         logputs (LOG_ALWAYS, "--> PASS Turtle Power!\n\n");[0m
      | [0;1;32m                                                           
[0m[1mftp-basic.c:145:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  146 |     DEBUGP (("\n--> %s\n", res));[0m
      | [0;1;32m                                 
[0m[1mftp-basic.c:157:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  158 |     goto bail;[0m
      | [0;1;32m              
[0m[1mftp-basic.c:159:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |   if (*response != '2')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  160 |     err = FTPSRVERR;[0m
      | [0;1;32m                    
[0m[1mftp-basic.c:163:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (response)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  164 |     xfree (response);[0m
      | [0;1;32m                     
[0m[1mftp-basic.c:187:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  188 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:224:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |         for (; c_isdigit (*seed); seed++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  225 |           skey_sequence = 10 * skey_sequence + *seed - '0';[0m
      | [0;1;32m                                                           
[0m[1mftp-basic.c:226:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |         if (*seed == ' ')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  227 |           ++seed;[0m
  228 |         else[0m
      | [0;32m        } 
[0m[1mftp-basic.c:251:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  252 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:274:3: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  274 |   snprintf (buf, buflen, "%d,%d,%d,%d,%d,%d", ptr[0], ptr[1],[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mftp-basic.c:274:3: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  274 |   snprintf (buf, buflen, "%d,%d,%d,%d,%d,%d", ptr[0], ptr[1],[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mftp-basic.c:294:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |   if (!socket_ip_address (csock, &addr, ENDPOINT_LOCAL))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  295 |     return FTPSYSERR;[0m
      | [0;1;32m                     
[0m[1mftp-basic.c:304:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |   if (*local_sock < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  305 |     return FTPSYSERR;[0m
      | [0;1;32m                     
[0m[1mftp-basic.c:352:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  352 |       snprintf (buf, buflen, "%d,%d,%d,%d,%d,%d,%d,%d,%d", 4, 4,[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mftp-basic.c:352:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  352 |       snprintf (buf, buflen, "%d,%d,%d,%d,%d,%d,%d,%d,%d", 4, 4,[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mftp-basic.c:352:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  352 |       snprintf (buf, buflen, "%d,%d,%d,%d,%d,%d,%d,%d,%d", 4, 4,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  353 |                 ptr[0], ptr[1], ptr[2], ptr[3], 2,[0m
  354 |                 (port & 0xff00) >> 8, port & 0xff);[0m
  355 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftp-basic.c:357:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  357 |       snprintf (buf, buflen,[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mftp-basic.c:357:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  357 |       snprintf (buf, buflen,[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mftp-basic.c:357:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  357 |       snprintf (buf, buflen,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  358 |                 "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",[0m
  359 |                 6, 16,[0m
  360 |                 ptr[0], ptr[1], ptr[2], ptr[3], ptr[4], ptr[5], ptr[6], ptr[7],[0m
  361 |                 ptr[8], ptr[9], ptr[10], ptr[11], ptr[12], ptr[13], ptr[14], ptr[15],[0m
  362 |                 2, (port & 0xff00) >> 8, port & 0xff);[0m
  363 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftp-basic.c:365:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  365 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mftp-basic.c:384:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |   if (!socket_ip_address (csock, &addr, ENDPOINT_LOCAL))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  385 |     return FTPSYSERR;[0m
      | [0;1;32m                     
[0m[1mftp-basic.c:394:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |   if (*local_sock < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  395 |     return FTPSYSERR;[0m
      | [0;1;32m                     
[0m[1mftp-basic.c:440:3: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  440 |   snprintf (buf, buflen, "|%d|%s|%d|", afnum, print_address (addr), port);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mftp-basic.c:440:3: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  440 |   snprintf (buf, buflen, "|%d|%s|%d|", afnum, print_address (addr), port);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mftp-basic.c:461:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  461 |   if (!socket_ip_address (csock, &addr, ENDPOINT_LOCAL))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  462 |     return FTPSYSERR;[0m
      | [0;1;32m                     
[0m[1mftp-basic.c:469:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |   if (*local_sock < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  470 |     return FTPSYSERR;[0m
      | [0;1;32m                     
[0m[1mftp-basic.c:630:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  630 |   xzero (*addr);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mftp-basic.c:630:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  630 |   xzero (*addr);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mftp-basic.c:644:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  645 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:653:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |   for (s += 4; *s && !c_isdigit (*s); s++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  654 |     ;[0m
      | [0;1;32m     
[0m[1mftp-basic.c:663:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  663 |       for (; c_isdigit (*s); s++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  664 |         tmp[i] = (*s - '0') + 10 * tmp[i];[0m
      | [0;1;32m                                          
[0m[1mftp-basic.c:665:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |       if (*s == ',')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  666 |         s++;[0m
  667 |       else if (i < 5)[0m
      | [0;32m      } 
[0m[1mftp-basic.c:677:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  677 |   memcpy (IP_INADDR_DATA (addr), tmp, 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-basic.c:677:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  677 |   memcpy (IP_INADDR_DATA (addr), tmp, 4);[0m
      | [0;1;32m  ^~~~~~
[0m[1mftp-basic.c:699:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  699 |   xzero (*addr);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mftp-basic.c:699:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  699 |   xzero (*addr);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mftp-basic.c:715:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  716 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:725:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |   for (s += 4; *s && !c_isdigit (*s); s++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  726 |     ;[0m
      | [0;1;32m     
[0m[1mftp-basic.c:735:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |   for (; c_isdigit (*s); s++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  736 |     af = (*s - '0') + 10 * af;[0m
      | [0;1;32m                              
[0m[1mftp-basic.c:752:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  752 |   for (; c_isdigit (*s); s++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  753 |     addrlen = (*s - '0') + 10 * addrlen;[0m
      | [0;1;32m                                        
[0m[1mftp-basic.c:778:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  778 |       for (; c_isdigit (*s); s++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  779 |         tmp[i] = (*s - '0') + 10 * tmp[i];[0m
      | [0;1;32m                                          
[0m[1mftp-basic.c:780:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |       if (*s == ',')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  781 |         s++;[0m
  782 |       else[0m
      | [0;32m      } 
[0m[1mftp-basic.c:791:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |   for (; c_isdigit (*s); s++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  792 |     portlen = (*s - '0') + 10 * portlen;[0m
      | [0;1;32m                                        
[0m[1mftp-basic.c:808:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |   for (; c_isdigit (*s); s++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  809 |     tmpprt[0] = (*s - '0') + 10 * tmpprt[0];[0m
      | [0;1;32m                                            
[0m[1mftp-basic.c:818:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |   for (; c_isdigit (*s); s++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  819 |     tmpprt[1] = (*s - '0') + 10 * tmpprt[1];[0m
      | [0;1;32m                                            
[0m[1mftp-basic.c:826:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  826 |       memcpy (IP_INADDR_DATA (addr), tmp, 4);[0m
      | [0;1;32m      ^~~~~~
[0m[1mftp-basic.c:826:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  826 |       memcpy (IP_INADDR_DATA (addr), tmp, 4);[0m
      | [0;1;32m      ^~~~~~
[0m[1mftp-basic.c:837:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  837 |       memcpy (IP_INADDR_DATA (addr), tmp, 16);[0m
      | [0;1;32m      ^~~~~~
[0m[1mftp-basic.c:837:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  837 |       memcpy (IP_INADDR_DATA (addr), tmp, 16);[0m
      | [0;1;32m      ^~~~~~
[0m[1mftp-basic.c:881:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  881 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  882 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:920:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  920 |   for (tport = 0, i = 0; i < 5 && c_isdigit (*s); i++, s++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  921 |       tport = (*s - '0') + 10 * tport;[0m
      | [0;1;32m                                      
[0m[1mftp-basic.c:966:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  966 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  967 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:998:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  998 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  999 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:1033:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1033 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1034 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:1064:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1064 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1065 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:1177:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1178 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:1196:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1196 |   if (request == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1197 |     *server_type = ST_OTHER;[0m
 1198 |   else if (!c_strcasecmp (request, "VMS"))[0m
      | [0;32m  } 
[0m[1mftp-basic.c:1198:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1198 |   else if (!c_strcasecmp (request, "VMS"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1199 |     *server_type = ST_VMS;[0m
 1200 |   else if (!c_strcasecmp (request, "UNIX"))[0m
      | [0;32m  } 
[0m[1mftp-basic.c:1205:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1205 |       if (!c_strncasecmp (ftp_last_respline, "215 UNIX Type: L8", 17))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1206 |         *unix_type = UST_TYPE_L8;[0m
 1207 |       else if (!c_strncasecmp (ftp_last_respline,[0m
      | [0;32m      } 
[0m[1mftp-basic.c:1208:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1208 |                              "215 UNIX MultiNet Unix Emulation V5.3(93)", 41))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1209 |         *unix_type = UST_MULTINET;[0m
      | [0;1;32m                                  
[0m[1mftp-basic.c:1212:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1212 |            || !c_strcasecmp (request, "WINDOWS2000"))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1213 |     *server_type = ST_WINNT;[0m
 1214 |   else if (!c_strcasecmp (request, "MACOS"))[0m
      | [0;32m  } 
[0m[1mftp-basic.c:1214:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1214 |   else if (!c_strcasecmp (request, "MACOS"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1215 |     *server_type = ST_MACOS;[0m
 1216 |   else if (!c_strcasecmp (request, "OS/400"))[0m
      | [0;32m  } 
[0m[1mftp-basic.c:1216:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1216 |   else if (!c_strcasecmp (request, "OS/400"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1217 |     *server_type = ST_OS400;[0m
 1218 |   else[0m
      | [0;32m  } 
[0m[1mftp-basic.c:1218:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1218 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1219 |     *server_type = ST_OTHER;[0m
      | [0;1;32m                            
[0m[1mftp-basic.c:1246:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1246 |   if (err != FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1247 |     return err;[0m
      | [0;1;32m               
[0m[1mftp-basic.c:1259:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1259 |   if (!request)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1260 |     /* Treat the malformed response as an error, which the caller has[0m
 1261 |        to handle gracefully anyway.  */[0m
 1262 |     goto err;[0m
      | [0;1;32m             
[0m[1mftp-basic.c:1338:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1338 |       && params[5] != '\0')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1339 |     return c_toupper (params[5]);[0m
 1340 |   else[0m
      | [0;32m  } 
[0m[1mftp-basic.c:1340:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1340 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1341 |     return 'I';[0m
      | [0;1;32m               
[0m100 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[139/164][89.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpabv8gu1x.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/css-url.c
[1mcss-url.c:77:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |   if (*length < 4)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   78 |     return NULL;[0m
      | [0;1;32m                
[0m[1mcss-url.c:80:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |   if (0 != strncasecmp (at + *pos, "url(", 4))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m   81 |     return NULL;[0m
      | [0;1;32m                
[0m[1mcss-url.c:90:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |       if (--(*length) == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   91 |         return NULL;[0m
      | [0;1;32m                    
[0m[1mcss-url.c:107:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |   if (*length <= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  108 |     return NULL;[0m
      | [0;1;32m                
[0m[1mcss-url.c:156:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  156 |                   memcpy (uri, yytext + 1, length);[0m
      | [0;1;32m                  ^~~~~~
[0m[1mcss-url.c:156:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  156 |                   memcpy (uri, yytext + 1, length);[0m
      | [0;1;32m                  ^~~~~~
[0m[1mcss-url.c:159:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  160 |                 uri = NULL;[0m
      | [0;1;32m                           
[0m33 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[140/164][95.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpryloinj5.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/base32.c
[1mbase32.c:76:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |       if (!--outlen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   77 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:81:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   81 |       if (!--outlen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   82 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:87:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |       if (!--outlen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   88 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:95:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |       if (!--outlen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   96 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:103:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |       if (!--outlen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  104 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:109:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |       if (!--outlen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  110 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:117:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |       if (!--outlen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  118 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:120:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |       if (!--outlen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  121 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:122:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |       if (inlen)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  123 |         inlen--;[0m
      | [0;1;32m                
[0m[1mbase32.c:124:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |       if (inlen)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  125 |         in += 5;[0m
      | [0;1;32m                
[0m[1mbase32.c:128:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |   if (outlen)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  129 |     *out = '\0';[0m
      | [0;1;32m                
[0m[1mbase32.c:156:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |   if (!*out)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  157 |     return outlen;[0m
      | [0;1;32m                  
[0m[1mbase32.c:309:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |   if (ctx->i == 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  310 |     ctx->i = 0;[0m
      | [0;1;32m               
[0m[1mbase32.c:332:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the field 'buf' [clang-analyzer-security.ArrayBound][0m
  332 |             ctx->buf[ctx->i++] = c;[0m
      | [0;1;32m            ^
[0m[1mbase32.c:572:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  572 |   if (!*out)[0m
      | [0;1;32m      ^~~~~
[0m[1mbase32.c:572:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  572 |   if (!*out)[0m
      | [0;1;32m  ^
[0m[1mbase32.c:575:8: [0m[0;1;36mnote: [0mCalling 'base32_decode_ctx'[0m
  575 |   if (!base32_decode_ctx (ctx, in, inlen, *out, &needlen))[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mbase32.c:474:26: [0m[0;1;36mnote: [0mAssuming 'ctx' is not equal to NULL[0m
  474 |   bool ignore_newlines = ctx != NULL;[0m
      | [0;1;32m                         ^~~~~~~~~~~
[0m[1mbase32.c:478:7: [0m[0;1;36mnote: [0m'ignore_newlines' is true[0m
  478 |   if (ignore_newlines)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mbase32.c:478:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  478 |   if (ignore_newlines)[0m
      | [0;1;32m  ^
[0m[1mbase32.c:481:19: [0m[0;1;36mnote: [0mAssuming 'inlen' is not equal to 0[0m
  481 |       flush_ctx = inlen == 0;[0m
      | [0;1;32m                  ^~~~~~~~~~
[0m[1mbase32.c:485:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  485 |   while (true)[0m
      | [0;1;32m  ^
[0m[1mbase32.c:488:11: [0m[0;1;36mnote: [0mAssuming 'ctx_i' is not equal to 0[0m
  488 |       if (ctx_i == 0 && !flush_ctx)[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mbase32.c:488:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  488 |       if (ctx_i == 0 && !flush_ctx)[0m
      | [0;1;32m                     ^
[0m[1mbase32.c:503:11: [0m[0;1;36mnote: [0m'inlen' is not equal to 0[0m
  503 |       if (inlen == 0 && !flush_ctx)[0m
      | [0;1;32m          ^~~~~
[0m[1mbase32.c:503:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  503 |       if (inlen == 0 && !flush_ctx)[0m
      | [0;1;32m                     ^
[0m[1mbase32.c:508:11: [0m[0;1;36mnote: [0m'inlen' is not equal to 0[0m
  508 |       if (inlen && *in == '\n' && ignore_newlines)[0m
      | [0;1;32m          ^~~~~
[0m[1mbase32.c:508:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mbase32.c:508:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  508 |       if (inlen && *in == '\n' && ignore_newlines)[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mbase32.c:508:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  508 |       if (inlen && *in == '\n' && ignore_newlines)[0m
      | [0;1;32m                               ^
[0m[1mbase32.c:523:13: [0m[0;1;36mnote: [0m'ignore_newlines' is true[0m
  523 |         if (ignore_newlines)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~
[0m[1mbase32.c:523:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  523 |         if (ignore_newlines)[0m
      | [0;1;32m        ^
[0m[1mbase32.c:531:13: [0m[0;1;36mnote: [0m'inlen' is not equal to 0[0m
  531 |         if (inlen == 0 || (inlen < 8 && !flush_ctx && ignore_newlines))[0m
      | [0;1;32m            ^~~~~
[0m[1mbase32.c:531:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mbase32.c:531:28: [0m[0;1;36mnote: [0mAssuming 'inlen' is >= 8[0m
  531 |         if (inlen == 0 || (inlen < 8 && !flush_ctx && ignore_newlines))[0m
      | [0;1;32m                           ^~~~~~~~~
[0m[1mbase32.c:531:38: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  531 |         if (inlen == 0 || (inlen < 8 && !flush_ctx && ignore_newlines))[0m
      | [0;1;32m                                     ^
[0m[1mbase32.c:536:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  536 |         if (!decode_8 (non_nl, inlen, &out, &outleft))[0m
      | [0;1;32m        ^
[0m[1mbase32.c:485:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  485 |   while (true)[0m
      | [0;1;32m  ^
[0m[1mbase32.c:488:11: [0m[0;1;36mnote: [0m'ctx_i' is not equal to 0[0m
  488 |       if (ctx_i == 0 && !flush_ctx)[0m
      | [0;1;32m          ^~~~~
[0m[1mbase32.c:488:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  488 |       if (ctx_i == 0 && !flush_ctx)[0m
      | [0;1;32m                     ^
[0m[1mbase32.c:503:11: [0m[0;1;36mnote: [0mAssuming 'inlen' is not equal to 0[0m
  503 |       if (inlen == 0 && !flush_ctx)[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mbase32.c:503:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  503 |       if (inlen == 0 && !flush_ctx)[0m
      | [0;1;32m                     ^
[0m[1mbase32.c:508:11: [0m[0;1;36mnote: [0m'inlen' is not equal to 0[0m
  508 |       if (inlen && *in == '\n' && ignore_newlines)[0m
      | [0;1;32m          ^~~~~
[0m[1mbase32.c:508:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mbase32.c:508:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  508 |       if (inlen && *in == '\n' && ignore_newlines)[0m
      | [0;1;32m                               ^
[0m[1mbase32.c:523:13: [0m[0;1;36mnote: [0m'ignore_newlines' is true[0m
  523 |         if (ignore_newlines)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~
[0m[1mbase32.c:523:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  523 |         if (ignore_newlines)[0m
      | [0;1;32m        ^
[0m[1mbase32.c:524:20: [0m[0;1;36mnote: [0mCalling 'get_8'[0m
  524 |           non_nl = get_8 (ctx, &in, in_end, &inlen);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mbase32.c:309:12: [0m[0;1;36mnote: [0mField 'i' is not equal to 8[0m
  309 |   if (ctx->i == 8)[0m
      | [0;1;32m           ^
[0m[1mbase32.c:309:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  309 |   if (ctx->i == 8)[0m
      | [0;1;32m  ^
[0m[1mbase32.c:312:12: [0m[0;1;36mnote: [0mField 'i' is not equal to 0[0m
  312 |   if (ctx->i == 0)[0m
      | [0;1;32m           ^
[0m[1mbase32.c:312:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  312 |   if (ctx->i == 0)[0m
      | [0;1;32m  ^
[0m[1mbase32.c:327:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  327 |     while (p < in_end)[0m
      | [0;1;32m    ^
[0m[1mbase32.c:330:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  330 |         if (c != '\n')[0m
      | [0;1;32m        ^
[0m[1mbase32.c:332:13: [0m[0;1;36mnote: [0mAccess of the field 'buf' at an overflowing index, while it holds only 8 'char' elements[0m
  332 |             ctx->buf[ctx->i++] = c;[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mbase32.c:333:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |             if (ctx->i == 8)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  334 |               break;[0m
      | [0;1;32m                    
[0m[1mbase32.c:363:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |   if (inlen < 8)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  364 |     return false;[0m
      | [0;1;32m                 
[0m[1mbase32.c:366:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |   if (!isbase32 (in[0]) || !isbase32 (in[1]))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  367 |     return false;[0m
      | [0;1;32m                 
[0m[1mbase32.c:379:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |           || in[6] != '=' || in[7] != '=')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  380 |         return_false;[0m
      | [0;1;32m                     
[0m[1mbase32.c:384:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |       if (!isbase32 (in[2]) || !isbase32 (in[3]))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  385 |         return_false;[0m
      | [0;1;32m                     
[0m[1mbase32.c:397:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |           if (in[5] != '=' || in[6] != '=' || in[7] != '=')[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  398 |             return_false;[0m
      | [0;1;32m                         
[0m[1mbase32.c:402:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |           if (!isbase32 (in[4]))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  403 |             return_false;[0m
      | [0;1;32m                         
[0m[1mbase32.c:414:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |               if (in[6] != '=' || in[7] != '=')[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  415 |                 return_false;[0m
      | [0;1;32m                             
[0m[1mbase32.c:419:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |               if (!isbase32 (in[5]) || !isbase32 (in[6]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  420 |                 return_false;[0m
      | [0;1;32m                             
[0m[1mbase32.c:432:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |                   if (!isbase32 (in[7]))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  433 |                     return_false;[0m
      | [0;1;32m                                 
[0m[1mbase32.c:495:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  495 |               if (!decode_8 (in, inlen, &out, &outleft))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  496 |                 break;[0m
      | [0;1;32m                      
[0m[1mbase32.c:503:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |       if (inlen == 0 && !flush_ctx)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  504 |         break;[0m
      | [0;1;32m              
[0m[1mbase32.c:523:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |         if (ignore_newlines)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  524 |           non_nl = get_8 (ctx, &in, in_end, &inlen);[0m
  525 |         else[0m
      | [0;32m        } 
[0m[1mbase32.c:525:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  525 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  526 |           non_nl = in;  /* Might have nl in this case. */[0m
      | [0;1;32m                                                         
[0m[1mbase32.c:536:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |         if (!decode_8 (non_nl, inlen, &out, &outleft))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  537 |           break;[0m
      | [0;1;32m                
[0m[1mbase32.c:572:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |   if (!*out)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  573 |     return true;[0m
      | [0;1;32m                
[0m[1mbase32.c:582:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |   if (outlen)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  583 |     *outlen = needlen;[0m
      | [0;1;32m                      
[0m38 warnings generated.
Suppressed 7 warnings (7 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[141/164][107.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpmj7se91o.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/vasnprintf.c
[1mvasnprintf.c:2194:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2195 |     /* errno is already set.  */[0m
 2196 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:2205:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2206 |     goto fail_1_with_EINVAL;[0m
      | [0;1;32m                            
[0m[1mvasnprintf.c:2234:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2234 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2235 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:2237:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2237 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2238 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:2284:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2290:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2290 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2290:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2290 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2295:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2295 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2296 |                   result[length++] = *cp++;[0m
 2297 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:2300:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2301 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:2308:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2309 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2311:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2312:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2312 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2194:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:154:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  154 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2205:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:2205:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2225:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2225:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 2243 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:2277:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2277 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2279:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2279:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2259:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2259:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2261:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2261 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2262:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2262:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2264:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2264:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2268:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2268:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2288:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2288 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2304:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2304 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2304:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2304 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2308:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2308:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2310:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 2310 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:2310:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 2310 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2312:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 2312 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2317:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2317 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2318 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2325:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2325 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2326 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2328:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2328 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2329 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2331:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2331 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2332 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2334:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2334 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2335 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2337:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2337 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2338 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2340:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2340 |                     *a.arg[dp->arg_index].a.a_count_int8_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2341 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2343:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2343 |                     *a.arg[dp->arg_index].a.a_count_int16_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2344 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2346:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2346 |                     *a.arg[dp->arg_index].a.a_count_int32_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2347 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2349:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2349 |                     *a.arg[dp->arg_index].a.a_count_int64_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2350 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2352:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2352 |                     *a.arg[dp->arg_index].a.a_count_int_fast8_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2353 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2355:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2355 |                     *a.arg[dp->arg_index].a.a_count_int_fast16_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2356 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2358:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2358 |                     *a.arg[dp->arg_index].a.a_count_int_fast32_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2359 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2361:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2361 |                     *a.arg[dp->arg_index].a.a_count_int_fast64_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2362 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2364:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2364 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:5786:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5786 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5787 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:5789:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5789 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 5790 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5791:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5791 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5792 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5793:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5793 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5794 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5795:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5795 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5796 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5798:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5798 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5799 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5803:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5803 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5804 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5812:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5812 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5812:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5812 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5818:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5818 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5819 |                               *fbp++ = *mp++;[0m
 5820 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5833:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5833 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5833:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5833 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5839:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5839 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5840 |                               *fbp++ = *mp++;[0m
 5841 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5906:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5906 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                    {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../src/config.h:2801:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2801 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mvasnprintf.c:5964:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5964 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5966:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5966 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 5967 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:5969:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5969 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:6060:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6060 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 6061 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:6066:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6066 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 6067 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:6080:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6080 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6080:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6080 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6099:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6099 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 6100 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:6147:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6147 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6148 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 6149 |                           SNPRINTF_BUF (arg);[0m
 6150 |                         }[0m
 6151 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6149:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6149 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6149:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6149 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6153:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6153 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6154 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 6155 |                           SNPRINTF_BUF (arg);[0m
 6156 |                         }[0m
 6157 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6155:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6155 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6155:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6155 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6159:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6159 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6160 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 6161 |                           SNPRINTF_BUF (arg);[0m
 6162 |                         }[0m
 6163 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6161:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6161 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6161:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6161 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6165:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6165 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6166 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 6167 |                           SNPRINTF_BUF (arg);[0m
 6168 |                         }[0m
 6169 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6167:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6167 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6167:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6167 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6171:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6171 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6172 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 6173 |                           SNPRINTF_BUF (arg);[0m
 6174 |                         }[0m
 6175 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6173:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6173 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6173:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6173 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6177:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6177 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6178 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 6179 |                           SNPRINTF_BUF (arg);[0m
 6180 |                         }[0m
 6181 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6179:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6179 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6179:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6179 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6183:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6183 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6184 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 6185 |                           SNPRINTF_BUF (arg);[0m
 6186 |                         }[0m
 6187 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6185:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6185 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6185:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6185 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6189:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6189 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6190 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 6191 |                           SNPRINTF_BUF (arg);[0m
 6192 |                         }[0m
 6193 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6191:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6191 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6191:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6191 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6195:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6195 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6196 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 6197 |                           SNPRINTF_BUF (arg);[0m
 6198 |                         }[0m
 6199 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6197:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6197 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6197:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6197 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6201:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6201 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6202 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 6203 |                           SNPRINTF_BUF (arg);[0m
 6204 |                         }[0m
 6205 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6203:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6203 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6203:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6203 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6207:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6207 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6208 |                           int8_t arg = a.arg[dp->arg_index].a.a_int8_t;[0m
 6209 |                           SNPRINTF_BUF (arg);[0m
 6210 |                         }[0m
 6211 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6209:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6209 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6209:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6209 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6213:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6213 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6214 |                           uint8_t arg = a.arg[dp->arg_index].a.a_uint8_t;[0m
 6215 |                           SNPRINTF_BUF (arg);[0m
 6216 |                         }[0m
 6217 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6215:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6215 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6215:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6215 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6219:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6219 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6220 |                           int16_t arg = a.arg[dp->arg_index].a.a_int16_t;[0m
 6221 |                           SNPRINTF_BUF (arg);[0m
 6222 |                         }[0m
 6223 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6221:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6221 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6221:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6221 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6225:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6225 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6226 |                           uint16_t arg = a.arg[dp->arg_index].a.a_uint16_t;[0m
 6227 |                           SNPRINTF_BUF (arg);[0m
 6228 |                         }[0m
 6229 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6227:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6227 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6227:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6227 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6231:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6231 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6232 |                           int32_t arg = a.arg[dp->arg_index].a.a_int32_t;[0m
 6233 |                           SNPRINTF_BUF (arg);[0m
 6234 |                         }[0m
 6235 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6233:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6233 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6233:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6233 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6237:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6237 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6238 |                           uint32_t arg = a.arg[dp->arg_index].a.a_uint32_t;[0m
 6239 |                           SNPRINTF_BUF (arg);[0m
 6240 |                         }[0m
 6241 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6239:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6239 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6239:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6239 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6243:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6243 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6244 |                           int64_t arg = a.arg[dp->arg_index].a.a_int64_t;[0m
 6245 |                           SNPRINTF_BUF (arg);[0m
 6246 |                         }[0m
 6247 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6245:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6245 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6245:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6245 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6249:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6249 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6250 |                           uint64_t arg = a.arg[dp->arg_index].a.a_uint64_t;[0m
 6251 |                           SNPRINTF_BUF (arg);[0m
 6252 |                         }[0m
 6253 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6251:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6251 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6251:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6251 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6255:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6255 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6256 |                           int_fast8_t arg = a.arg[dp->arg_index].a.a_int_fast8_t;[0m
 6257 |                           SNPRINTF_BUF (arg);[0m
 6258 |                         }[0m
 6259 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6257:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6257 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6257:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6257 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6261:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6261 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6262 |                           uint_fast8_t arg = a.arg[dp->arg_index].a.a_uint_fast8_t;[0m
 6263 |                           SNPRINTF_BUF (arg);[0m
 6264 |                         }[0m
 6265 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6263:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6263 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6263:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6263 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6267:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6267 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6268 |                           int_fast16_t arg = a.arg[dp->arg_index].a.a_int_fast16_t;[0m
 6269 |                           SNPRINTF_BUF (arg);[0m
 6270 |                         }[0m
 6271 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6269:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6269 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6269:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6269 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6273:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6273 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6274 |                           uint_fast16_t arg = a.arg[dp->arg_index].a.a_uint_fast16_t;[0m
 6275 |                           SNPRINTF_BUF (arg);[0m
 6276 |                         }[0m
 6277 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6275:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6275 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6275:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6275 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6279:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6279 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6280 |                           int_fast32_t arg = a.arg[dp->arg_index].a.a_int_fast32_t;[0m
 6281 |                           SNPRINTF_BUF (arg);[0m
 6282 |                         }[0m
 6283 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6281:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6281 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6281:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6281 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6285:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6285 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6286 |                           uint_fast32_t arg = a.arg[dp->arg_index].a.a_uint_fast32_t;[0m
 6287 |                           SNPRINTF_BUF (arg);[0m
 6288 |                         }[0m
 6289 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6287:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6287 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6287:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6287 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6291:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6291 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6292 |                           int_fast64_t arg = a.arg[dp->arg_index].a.a_int_fast64_t;[0m
 6293 |                           SNPRINTF_BUF (arg);[0m
 6294 |                         }[0m
 6295 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6293:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6293 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6293:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6293 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6297:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6297 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6298 |                           uint_fast64_t arg = a.arg[dp->arg_index].a.a_uint_fast64_t;[0m
 6299 |                           SNPRINTF_BUF (arg);[0m
 6300 |                         }[0m
 6301 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6299:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6299 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6299:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6299 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6303:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6303 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6304 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 6305 |                           SNPRINTF_BUF (arg);[0m
 6306 |                         }[0m
 6307 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6305:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6305 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6305:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6305 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6309:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6309 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6310 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 6311 |                           SNPRINTF_BUF (arg);[0m
 6312 |                         }[0m
 6313 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6311:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6311 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6311:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6311 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6315:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6315 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6316 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 6317 |                           SNPRINTF_BUF (arg);[0m
 6318 |                         }[0m
 6319 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6317:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6317 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6317:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6317 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6322:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6322 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6323 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 6324 |                           SNPRINTF_BUF (arg);[0m
 6325 |                         }[0m
 6326 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6324:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6324 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6324:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6324 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6329:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6329 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6330 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 6331 |                           SNPRINTF_BUF (arg);[0m
 6332 |                         }[0m
 6333 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6331:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6331 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6331:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6331 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6336:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6336 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6337 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 6338 |                           SNPRINTF_BUF (arg);[0m
 6339 |                         }[0m
 6340 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6338:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6338 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6338:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6338 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6343:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6343 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6344 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 6345 |                           SNPRINTF_BUF (arg);[0m
 6346 |                         }[0m
 6347 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6345:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6345 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6345:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6345 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6349:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6349 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:6362:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6362 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 6363 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:6365:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6365 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 6366 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:6449:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6449 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 6450 |                               errno = EILSEQ;[0m
 6451 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:6451:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6451 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 6452 |                               errno = EINVAL;[0m
      | [0;1;32m                                             
[0m[1mvasnprintf.c:6469:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6469 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 6470 |                           goto overflow;[0m
 6471 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:6489:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6489 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6489:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6489 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6873:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6873 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6873:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6873 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6874:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 6874 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2194:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:154:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  154 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2205:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:2205:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2225:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2225:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 2243 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:2277:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2277 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2279:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2279:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2259:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2259:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2261:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2261 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2262:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2262:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2264:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2264:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2268:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2268:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2288:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2288 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2301:11: [0m[0;1;36mnote: [0m Execution continues on line 6873[0m
 2301 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:6873:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 6873 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2275:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:2253:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:6873:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 6873 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2275:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:2253:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:6873:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 6873 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:6873:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 6873 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:6874:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 6874 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:6882:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6882 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 6883 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:6886:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6886 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6887 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:6913:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6913 |     if (result != resultbuf)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 6914 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:6915:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6915 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6916 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m192 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[142/164][75.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpw9gmq5av.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/netrc.c
[1mnetrc.c:89:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |   if (!opt.netrc)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   90 |     return;[0m
      | [0;1;32m           
[0m[1mnetrc.c:112:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |       if (fp_netrc)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  113 |         netrc_list = parse_netrc_fp (".netrc", fp_netrc);[0m
  114 |       else if (opt.homedir)[0m
      | [0;32m      } 
[0m[1mnetrc.c:118:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |           if (stat (path, &buf) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  119 |             netrc_list = parse_netrc (path);[0m
      | [0;1;32m                                            
[0m[1mnetrc.c:126:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |   if (!netrc_list)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  127 |     return;[0m
      | [0;1;32m           
[0m[1mnetrc.c:129:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |   if (*acc && *passwd)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  130 |     return;[0m
      | [0;1;32m           
[0m[1mnetrc.c:134:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |       if (!l->host)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  135 |         continue;[0m
  136 |       else if (!strcasecmp (l->host, host))[0m
      | [0;32m      } 
[0m[1mnetrc.c:136:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |       else if (!strcasecmp (l->host, host))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  137 |         break;[0m
      | [0;1;32m              
[0m[1mnetrc.c:144:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |           if (!strcmp (l->acc, *acc))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  145 |             *passwd = l->passwd; /* usernames match; password OK */[0m
  146 |           else[0m
      | [0;32m          } 
[0m[1mnetrc.c:146:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  146 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  147 |             *passwd = NULL;     /* usernames don't match */[0m
      | [0;1;32m                                                           
[0m[1mnetrc.c:153:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |           if (l->passwd)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  154 |             *passwd = l->passwd;[0m
      | [0;1;32m                                
[0m[1mnetrc.c:160:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |       if (!slack_default)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  161 |         return;[0m
      | [0;1;32m               
[0m[1mnetrc.c:162:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |       if (*acc)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  163 |         return;[0m
      | [0;1;32m               
[0m[1mnetrc.c:165:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |       for (l = netrc_list; l; l = l->next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  166 |         if (!l->host)[0m
  167 |           break;[0m
      | [0;1;32m                
[0m[1mnetrc.c:166:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |         if (!l->host)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  167 |           break;[0m
      | [0;1;32m                
[0m[1mnetrc.c:168:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |       if (!l)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  169 |         return;[0m
      | [0;1;32m               
[0m[1mnetrc.c:171:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |       if (!*passwd)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  172 |         *passwd = l->passwd;[0m
      | [0;1;32m                            
[0m[1mnetrc.c:220:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  220 |   memset (a, 0, sizeof(*a));[0m
      | [0;1;32m  ^~~~~~
[0m[1mnetrc.c:220:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  220 |   memset (a, 0, sizeof(*a));[0m
      | [0;1;32m  ^~~~~~
[0m[1mnetrc.c:236:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |   for (p=string; *p; ++p)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  237 |     *p = *(p+1);[0m
      | [0;1;32m                
[0m[1mnetrc.c:266:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |       while (*p && c_isspace (*p))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  267 |         p ++;[0m
      | [0;1;32m             
[0m[1mnetrc.c:270:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |       if (last_token == tok_macdef && !*p)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  271 |         /* End of macro if the line is empty.  */[0m
  272 |         last_token = tok_nothing;[0m
      | [0;1;32m                                 
[0m[1mnetrc.c:278:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |           while (*p && c_isspace (*p))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  279 |             p ++;[0m
      | [0;1;32m                 
[0m[1mnetrc.c:283:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |           if (*p == '#' || !*p)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  284 |             break;[0m
      | [0;1;32m                  
[0m[1mnetrc.c:297:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |             if (*p == '\\')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  298 |               shift_left (p);[0m
      | [0;1;32m                             
[0m[1mnetrc.c:311:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |           if (*p)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  312 |             *p ++ = '\0';[0m
      | [0;1;32m                         
[0m[1mnetrc.c:317:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  317 |               if (current)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  318 |                 {[0m
  319 |                   xfree (current->acc);[0m
  320 |                   current->acc = xstrdup (tok);[0m
  321 |                 }[0m
  322 |               else[0m
  323 |                 premature_token = "login";[0m
  324 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mnetrc.c:322:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  323 |                 premature_token = "login";[0m
      | [0;1;32m                                          
[0m[1mnetrc.c:328:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  328 |               maybe_add_to_list (&current, &retval);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  329 |               current->host = xstrdup (tok);[0m
  330 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mnetrc.c:333:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  333 |               if (current)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  334 |                 {[0m
  335 |                   xfree (current->passwd);[0m
  336 |                   current->passwd = xstrdup (tok);[0m
  337 |                 }[0m
  338 |               else[0m
  339 |                 premature_token = "password";[0m
  340 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mnetrc.c:338:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  339 |                 premature_token = "password";[0m
      | [0;1;32m                                             
[0m[1mnetrc.c:344:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  344 |               if (!current)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  345 |                 premature_token = "macdef";[0m
  346 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mnetrc.c:344:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |               if (!current)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  345 |                 premature_token = "macdef";[0m
      | [0;1;32m                                           
[0m[1mnetrc.c:350:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  350 |               if (!current)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  351 |                 premature_token = "account";[0m
  352 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mnetrc.c:350:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |               if (!current)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  351 |                 premature_token = "account";[0m
      | [0;1;32m                                            
[0m[1mnetrc.c:356:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  356 |               if (!current)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  357 |                 premature_token = "port";[0m
  358 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mnetrc.c:356:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |               if (!current)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  357 |                 premature_token = "port";[0m
      | [0;1;32m                                         
[0m[1mnetrc.c:362:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  362 |               if (!current)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  363 |                 premature_token = "force";[0m
  364 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mnetrc.c:362:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |               if (!current)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  363 |                 premature_token = "force";[0m
      | [0;1;32m                                          
[0m[1mnetrc.c:368:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  368 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mnetrc.c:373:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  373 |               fprintf (stderr, _("\[0m
      | [0;1;32m              ^~~~~~~
[0m[1mnetrc.c:373:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  373 |               fprintf (stderr, _("\[0m
      | [0;1;32m              ^~~~~~~
[0m[1mnetrc.c:379:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |           if (last_token != tok_nothing)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  380 |             /* We got a value, so reset the token state.  */[0m
  381 |             last_token = tok_nothing;[0m
  382 |           else[0m
      | [0;32m          } 
[0m[1mnetrc.c:385:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |               if (!strcmp (tok, "account"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  386 |                 last_token = tok_account;[0m
  387 | [0m
  388 |               else if (!strcmp (tok, "default"))[0m
      | [0;32m              } 
[0m[1mnetrc.c:388:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |               else if (!strcmp (tok, "default"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  389 |                   maybe_add_to_list (&current, &retval);[0m
  390 | [0m
  391 |               else if (!strcmp (tok, "login"))[0m
      | [0;32m              } 
[0m[1mnetrc.c:391:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |               else if (!strcmp (tok, "login"))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  392 |                 last_token = tok_login;[0m
  393 | [0m
  394 |               else if (!strcmp (tok, "macdef"))[0m
      | [0;32m              } 
[0m[1mnetrc.c:394:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |               else if (!strcmp (tok, "macdef"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  395 |                 last_token = tok_macdef;[0m
  396 | [0m
  397 |               else if (!strcmp (tok, "machine"))[0m
      | [0;32m              } 
[0m[1mnetrc.c:397:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |               else if (!strcmp (tok, "machine"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  398 |                 last_token = tok_machine;[0m
  399 | [0m
  400 |               else if (!strcmp (tok, "password"))[0m
      | [0;32m              } 
[0m[1mnetrc.c:400:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |               else if (!strcmp (tok, "password"))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  401 |                 last_token = tok_password;[0m
  402 | [0m
  403 |                                   /* GNU extensions 'port' and 'force', not operational[0m
  404 |                                         * see https://www.gnu.org/software/emacs/manual/html_node/gnus/NNTP.html#index-nntp_002dauthinfo_002dfunction-2003[0m
  405 |                                         * see https://savannah.gnu.org/bugs/index.php?52066[0m
  406 |                                         */[0m
  407 |               else if (!strcmp (tok, "port"))[0m
      | [0;32m              } 
[0m[1mnetrc.c:407:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |               else if (!strcmp (tok, "port"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  408 |                 last_token = tok_port;[0m
  409 | [0m
  410 |               else if (!strcmp (tok, "force"))[0m
      | [0;32m              } 
[0m[1mnetrc.c:410:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |               else if (!strcmp (tok, "force"))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  411 |                 last_token = tok_force;[0m
  412 | [0m
  413 |               else[0m
      | [0;32m              } 
[0m[1mnetrc.c:413:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  413 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  414 |                 fprintf (stderr, _("%s: %s:%d: unknown token \"%s\"\n"),[0m
  415 |                          exec_name, path, ln, tok);[0m
      | [0;1;32m                                                   
[0m[1mnetrc.c:414:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  414 |                 fprintf (stderr, _("%s: %s:%d: unknown token \"%s\"\n"),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnetrc.c:414:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  414 |                 fprintf (stderr, _("%s: %s:%d: unknown token \"%s\"\n"),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnetrc.c:454:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  454 |       fprintf (stderr, _("%s: Cannot read %s (%s).\n"), exec_name,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mnetrc.c:454:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  454 |       fprintf (stderr, _("%s: Cannot read %s (%s).\n"), exec_name,[0m
      | [0;1;32m      ^~~~~~~
[0m78 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[143/164][111.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpsnqq2uoc.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/connect.c
[1mconnect.c:86:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   86 |         xzero (*sin);[0m
      | [0;1;32m        ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mconnect.c:86:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   86 |         xzero (*sin);[0m
      | [0;1;32m        ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mconnect.c:96:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   96 |         xzero (*sin6);[0m
      | [0;1;32m        ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mconnect.c:96:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   96 |         xzero (*sin6);[0m
      | [0;1;32m        ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mconnect.c:107:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  107 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mconnect.c:128:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |         if (port)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  129 |           *port = ntohs (sin->sin_port);[0m
      | [0;1;32m                                        
[0m[1mconnect.c:144:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |         if (port)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  145 |           *port = ntohs (sin6->sin6_port);[0m
      | [0;1;32m                                          
[0m[1mconnect.c:150:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mconnect.c:163:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  163 |       return sizeof (struct sockaddr_in);[0m
      | [0;1;32m      ^                                 
[0m      | [0;32m      {                                 ;} 
[0m[1mconnect.c:166:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  166 |       return sizeof (struct sockaddr_in6);[0m
      | [0;1;32m      ^                                  
[0m      | [0;32m      {                                  ;} 
[0m[1mconnect.c:169:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  169 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mconnect.c:190:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |       if (should_bind)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  191 |         sockaddr_set_data (sa, &ip, 0);[0m
      | [0;1;32m                                       
[0m[1mconnect.c:250:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |   if (ctx.result == -1 && errno == EINTR)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  251 |     errno = ETIMEDOUT;[0m
      | [0;1;32m                      
[0m[1mconnect.c:289:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |            if (ip->family == AF_INET)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  290 |                logprintf (LOG_VERBOSE, _("Connecting to %s:%d... "), txt_addr, port);[0m
  291 | #ifdef ENABLE_IPV6[0m
  292 |            else if (ip->family == AF_INET6)[0m
      | [0;32m           } 
[0m[1mconnect.c:292:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |            else if (ip->family == AF_INET6)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  293 |                logprintf (LOG_VERBOSE, _("Connecting to [%s]:%d... "), txt_addr, port);[0m
      | [0;1;32m                                                                                       
[0m[1mconnect.c:303:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |   if (sock < 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  304 |     goto err;[0m
      | [0;1;32m             
[0m[1mconnect.c:312:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |       if (err < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  313 |         DEBUGP (("Failed setting IPV6_V6ONLY: %s", strerror (errno)));[0m
      | [0;1;32m                                                                      
[0m[1mconnect.c:324:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |       if (bufsize < 512)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  325 |         bufsize = 512;          /* avoid pathologically small values */[0m
      | [0;1;32m                                                                       
[0m[1mconnect.c:328:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |                   (void *) &bufsize, (socklen_t) sizeof (bufsize)))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  329 |         logprintf (LOG_NOTQUIET, _("setsockopt SO_RCVBUF failed: %s\n"),[0m
  330 |                    strerror (errno));[0m
      | [0;1;32m                                     
[0m[1mconnect.c:344:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |           if (bind (sock, bind_sa, sockaddr_size (bind_sa)) < 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  345 |             goto err;[0m
      | [0;1;32m                     
[0m[1mconnect.c:351:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |                             opt.connect_timeout) < 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  352 |     goto err;[0m
      | [0;1;32m             
[0m[1mconnect.c:356:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |   if (print)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  357 |     logprintf (LOG_VERBOSE, _("connected.\n"));[0m
      | [0;1;32m                                               
[0m[1mconnect.c:375:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |     if (print)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  376 |       logprintf (LOG_NOTQUIET, _("failed: %s.\n"), strerror (errno));[0m
      | [0;1;32m                                                                     
[0m[1mconnect.c:465:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |   if (sock < 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  466 |     return -1;[0m
      | [0;1;32m              
[0m[1mconnect.c:469:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |   if (setsockopt (sock, SOL_SOCKET, SO_REUSEADDR, setopt_ptr, setopt_size))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  470 |     logprintf (LOG_NOTQUIET, _("setsockopt SO_REUSEADDR failed: %s\n"),[0m
  471 |                strerror (errno));[0m
      | [0;1;32m                                 
[0m[1mconnect.c:474:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  474 |   xzero (ss);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mconnect.c:474:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  474 |   xzero (ss);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mconnect.c:532:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |       if (test == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  533 |         errno = ETIMEDOUT;[0m
      | [0;1;32m                          
[0m[1mconnect.c:534:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  534 |       if (test <= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  535 |         return -1;[0m
      | [0;1;32m                  
[0m[1mconnect.c:557:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  557 |   memset (sockaddr, 0, addrlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mconnect.c:557:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  557 |   memset (sockaddr, 0, addrlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mconnect.c:558:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |   if (endpoint == ENDPOINT_LOCAL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  559 |     ret = getsockname (sock, sockaddr, &addrlen);[0m
  560 |   else if (endpoint == ENDPOINT_PEER)[0m
      | [0;32m  } 
[0m[1mconnect.c:560:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |   else if (endpoint == ENDPOINT_PEER)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  561 |     ret = getpeername (sock, sockaddr, &addrlen);[0m
  562 |   else[0m
      | [0;32m  } 
[0m[1mconnect.c:562:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  562 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  563 |     abort ();[0m
      | [0;1;32m             
[0m[1mconnect.c:564:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  564 |   if (ret < 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  565 |     return false;[0m
      | [0;1;32m                 
[0m[1mconnect.c:567:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  567 |   memset(ip, 0, sizeof(ip_address));[0m
      | [0;1;32m  ^~~~~~
[0m[1mconnect.c:567:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  567 |   memset(ip, 0, sizeof(ip_address));[0m
      | [0;1;32m  ^~~~~~
[0m[1mconnect.c:591:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  591 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mconnect.c:610:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  610 |   memset (sockaddr, 0, addrlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mconnect.c:610:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  610 |   memset (sockaddr, 0, addrlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mconnect.c:612:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |   if (endpoint == ENDPOINT_LOCAL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  613 |     ret = getsockname (sock, sockaddr, &addrlen);[0m
  614 |   else if (endpoint == ENDPOINT_PEER)[0m
      | [0;32m  } 
[0m[1mconnect.c:614:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |   else if (endpoint == ENDPOINT_PEER)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  615 |     ret = getpeername (sock, sockaddr, &addrlen);[0m
  616 |   else[0m
      | [0;32m  } 
[0m[1mconnect.c:616:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  616 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  617 |     abort ();[0m
      | [0;1;32m             
[0m[1mconnect.c:619:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  619 |   if (ret < 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  620 |     return -1;[0m
      | [0;1;32m              
[0m[1mconnect.c:655:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  655 |       )[0m
      | [0;1;32m       ^
[0m      | [0;32m        {
[0m  656 |     return false;[0m
      | [0;1;32m                 
[0m[1mconnect.c:658:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  658 |   if (!opt.retry_connrefused)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  659 |     if (err == ECONNREFUSED[0m
  660 | #ifdef ENETUNREACH[0m
  661 |         || err == ENETUNREACH   /* network is unreachable */[0m
  662 | #endif[0m
  663 | #ifdef EHOSTUNREACH[0m
  664 |         || err == EHOSTUNREACH  /* host is unreachable */[0m
  665 | #endif[0m
  666 |         )[0m
  667 |       return false;[0m
      | [0;1;32m                   
[0m[1mconnect.c:689:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  690 |     return -1;[0m
      | [0;1;32m              
[0m[1mconnect.c:699:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |   if (wait_for & WAIT_FOR_READ)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  700 |     rd = &fdset;[0m
      | [0;1;32m                
[0m[1mconnect.c:701:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  701 |   if (wait_for & WAIT_FOR_WRITE)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  702 |     wr = &fdset;[0m
      | [0;1;32m                
[0m[1mconnect.c:777:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |   if ( !ret )[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  778 |     /* We got a timeout, it means we're still connected. */[0m
  779 |     return true;[0m
  780 |   else[0m
      | [0;32m  } 
[0m[1mconnect.c:780:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  781 |     /* Read now would not wait, it means we have either pending data[0m
  782 |        or EOF/error. */[0m
  783 |     return false;[0m
      | [0;1;32m                 
[0m[1mconnect.c:792:5: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  792 |   do[0m
      | [0;1;32m    ^
[0m      | [0;32m     {
[0m  793 |     res = read (fd, buf, bufsize);[0m
  794 |   while (res == -1 && errno == EINTR);[0m
      | [0;32m  } 
[0m[1mconnect.c:802:5: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  802 |   do[0m
      | [0;1;32m    ^
[0m      | [0;32m     {
[0m  803 |     res = write (fd, buf, bufsize);[0m
  804 |   while (res == -1 && errno == EINTR);[0m
      | [0;32m  } 
[0m[1mconnect.c:818:5: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |   do[0m
      | [0;1;32m    ^
[0m      | [0;32m     {
[0m  819 |     res = recv (fd, buf, bufsize, MSG_PEEK);[0m
  820 |   while (res == -1 && errno == EINTR);[0m
      | [0;32m  } 
[0m[1mconnect.c:819:11: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'recv' is -1 but should be >= 0 [clang-analyzer-unix.StdCLibraryFunctions][0m
  819 |     res = recv (fd, buf, bufsize, MSG_PEEK);[0m
      | [0;1;32m          ^
[0m[1mconnect.c:970:3: [0m[0;1;36mnote: [0mAssuming 'transport_map' is non-null[0m
  970 |   LAZY_RETRIEVE_INFO (info);[0m
      | [0;1;32m  ^
[0m[1mconnect.c:900:7: [0m[0;1;36mnote: [0mexpanded from macro 'LAZY_RETRIEVE_INFO'[0m
  900 |   if (!transport_map)                                                   \[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mconnect.c:970:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  970 |   LAZY_RETRIEVE_INFO (info);[0m
      | [0;1;32m  ^
[0m[1mconnect.c:900:3: [0m[0;1;36mnote: [0mexpanded from macro 'LAZY_RETRIEVE_INFO'[0m
  900 |   if (!transport_map)                                                   \[0m
      | [0;1;32m  ^
[0m[1mconnect.c:970:3: [0m[0;1;36mnote: [0mAssuming 'last_fd' is equal to 'fd'[0m
  970 |   LAZY_RETRIEVE_INFO (info);[0m
      | [0;1;32m  ^
[0m[1mconnect.c:902:12: [0m[0;1;36mnote: [0mexpanded from macro 'LAZY_RETRIEVE_INFO'[0m
  902 |   else if (last_fd == fd && last_tick == transport_map_modified_tick)   \[0m
      | [0;1;32m           ^~~~~~~~~~~~~
[0m[1mconnect.c:970:3: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  970 |   LAZY_RETRIEVE_INFO (info);[0m
      | [0;1;32m  ^
[0m[1mconnect.c:902:12: [0m[0;1;36mnote: [0mexpanded from macro 'LAZY_RETRIEVE_INFO'[0m
  902 |   else if (last_fd == fd && last_tick == transport_map_modified_tick)   \[0m
      | [0;1;32m           ^
[0m[1mconnect.c:970:3: [0m[0;1;36mnote: [0mAssuming 'last_tick' is equal to 'transport_map_modified_tick'[0m
  970 |   LAZY_RETRIEVE_INFO (info);[0m
      | [0;1;32m  ^
[0m[1mconnect.c:902:29: [0m[0;1;36mnote: [0mexpanded from macro 'LAZY_RETRIEVE_INFO'[0m
  902 |   else if (last_fd == fd && last_tick == transport_map_modified_tick)   \[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mconnect.c:970:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  970 |   LAZY_RETRIEVE_INFO (info);[0m
      | [0;1;32m  ^
[0m[1mconnect.c:902:8: [0m[0;1;36mnote: [0mexpanded from macro 'LAZY_RETRIEVE_INFO'[0m
  902 |   else if (last_fd == fd && last_tick == transport_map_modified_tick)   \[0m
      | [0;1;32m       ^
[0m[1mconnect.c:970:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  970 |   LAZY_RETRIEVE_INFO (info);[0m
      | [0;1;32m  ^
[0m[1mconnect.c:896:34: [0m[0;1;36mnote: [0mexpanded from macro 'LAZY_RETRIEVE_INFO'[0m
  896 | #define LAZY_RETRIEVE_INFO(info) do {                                   \[0m
      | [0;1;32m                                 ^
[0m[1mconnect.c:972:7: [0m[0;1;36mnote: [0m'info' is null[0m
  972 |   if (info && info->imp->peeker)[0m
      | [0;1;32m      ^~~~
[0m[1mconnect.c:972:12: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  972 |   if (info && info->imp->peeker)[0m
      | [0;1;32m           ^
[0m[1mconnect.c:975:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  975 |   if (!poll_internal (fd, info, WAIT_FOR_READ, timeout))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mconnect.c:975:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  975 |   if (!poll_internal (fd, info, WAIT_FOR_READ, timeout))[0m
      | [0;1;32m  ^
[0m[1mconnect.c:977:21: [0m[0;1;36mnote: [0mPassing the value -1 via 1st parameter 'fd'[0m
  977 |   return sock_peek (fd, buf, bufsize);[0m
      | [0;1;32m                    ^~
[0m[1mconnect.c:977:10: [0m[0;1;36mnote: [0mCalling 'sock_peek'[0m
  977 |   return sock_peek (fd, buf, bufsize);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mconnect.c:819:11: [0m[0;1;36mnote: [0mThe 1st argument to 'recv' is -1 but should be >= 0[0m
  819 |     res = recv (fd, buf, bufsize, MSG_PEEK);[0m
      | [0;1;32m          ^     ~~
[0m[1mconnect.c:870:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |   if (!transport_map)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  871 |     transport_map = hash_table_new (0, NULL, NULL);[0m
      | [0;1;32m                                                   
[0m[1mconnect.c:916:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  916 |   if (timeout == -1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  917 |     timeout = opt.read_timeout;[0m
      | [0;1;32m                               
[0m[1mconnect.c:921:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |       if (info && info->imp->poller)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  922 |         test = info->imp->poller (fd, timeout, wf, info->ctx);[0m
  923 |       else[0m
      | [0;32m      } 
[0m[1mconnect.c:923:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  923 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  924 |         test = sock_poll (fd, timeout, wf);[0m
      | [0;1;32m                                           
[0m[1mconnect.c:925:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  925 |       if (test == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  926 |         errno = ETIMEDOUT;[0m
      | [0;1;32m                          
[0m[1mconnect.c:927:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  927 |       if (test <= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  928 |         return false;[0m
      | [0;1;32m                     
[0m[1mconnect.c:946:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |   if (info && info->imp->reader)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  947 |     return info->imp->reader (fd, buf, bufsize, info->ctx, timeout);[0m
      | [0;1;32m                                                                    
[0m[1mconnect.c:949:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |   if (!poll_internal (fd, info, WAIT_FOR_READ, timeout))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  950 |     return -1;[0m
      | [0;1;32m              
[0m[1mconnect.c:972:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |   if (info && info->imp->peeker)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  973 |     return info->imp->peeker (fd, buf, bufsize, info->ctx, timeout);[0m
      | [0;1;32m                                                                    
[0m[1mconnect.c:975:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  975 |   if (!poll_internal (fd, info, WAIT_FOR_READ, timeout))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  976 |     return -1;[0m
      | [0;1;32m              
[0m[1mconnect.c:997:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  997 |       if (!poll_internal (fd, info, WAIT_FOR_WRITE, timeout))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  998 |         return -1;[0m
      | [0;1;32m                  
[0m[1mconnect.c:999:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  999 |       if (info && info->imp->writer)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1000 |         res = info->imp->writer (fd, buf, bufsize, info->ctx);[0m
 1001 |       else[0m
      | [0;32m      } 
[0m[1mconnect.c:1001:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1001 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1002 |         res = sock_write (fd, buf, bufsize);[0m
      | [0;1;32m                                            
[0m[1mconnect.c:1003:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1003 |       if (res <= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1004 |         break;[0m
      | [0;1;32m              
[0m[1mconnect.c:1028:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1028 |   if (transport_map)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1029 |     info = hash_table_get (transport_map, (void *)(intptr_t) fd);[0m
      | [0;1;32m                                                                 
[0m[1mconnect.c:1034:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1034 |       if (err)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1035 |         return err;[0m
      | [0;1;32m                   
[0m[1mconnect.c:1047:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1047 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1048 |     return;[0m
      | [0;1;32m           
[0m[1mconnect.c:1053:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1053 |   if (transport_map)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1054 |     info = hash_table_get (transport_map, (void *)(intptr_t) fd);[0m
      | [0;1;32m                                                                 
[0m[1mconnect.c:1056:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |   if (info && info->imp->closer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1057 |     info->imp->closer (fd, info->ctx);[0m
 1058 |   else[0m
      | [0;32m  } 
[0m[1mconnect.c:1058:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1058 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1059 |     sock_close (fd);[0m
      | [0;1;32m                    
[0m98 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[144/164][96.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxtf442kk.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/canonicalize.c
[1mcanonicalize.c:81:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   81 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m   82 |         end++;[0m
   83 |       while (ISSLASH (*end));[0m
      | [0;32m      } 
[0m[1mcanonicalize.c:87:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   87 |         default: return false;  /* An ordinary file name component is OK.  */[0m
      | [0;1;32m                 ^           
[0m      | [0;32m                 {           ;} 
[0m[1mcanonicalize.c:88:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   88 |         case '\0': return true; /* Trailing "/" is trouble.  */[0m
      | [0;1;32m                   ^          
[0m      | [0;32m                   {          ;} 
[0m[1mcanonicalize.c:89:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   89 |         case '.': break;        /* Possibly "." or "..".  */[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mcanonicalize.c:92:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |       if (!*end || (*end == '.' && (!end[1] || ISSLASH (end[1]))))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   93 |         return true;[0m
      | [0;1;32m                    
[0m[1mcanonicalize.c:117:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  117 |   strcpy (dirend, dir_suffix);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcanonicalize.c:117:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  117 |   strcpy (dirend, dir_suffix);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcanonicalize.c:154:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |       if (*ht == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  155 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mcanonicalize.c:158:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |   if (seen_file (*ht, filename, st))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  159 |     return true;[0m
      | [0;1;32m                
[0m[1mcanonicalize.c:216:19: [0m[0;1;35mwarning: [0m[1mAn undefined value may be read from 'errno' [clang-analyzer-unix.Errno][0m
  216 |           switch (errno)[0m
      | [0;1;32m                  ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:182:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  182 |   bool logical = (can_mode & CAN_NOLINKS) != 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:186:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  186 |   if (multiple_bits_set (can_exist))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:192:7: [0m[0;1;36mnote: [0mAssuming 'name' is not equal to NULL[0m
  192 |   if (name == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanonicalize.c:192:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  192 |   if (name == NULL)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:198:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  198 |   if (name[0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |   if (name[0] == '\0')[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:212:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  212 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m       ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:212:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  212 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:214:15: [0m[0;1;36mnote: [0mAssuming that 'getcwd' is successful; 'errno' becomes undefined after the call[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:216:19: [0m[0;1;36mnote: [0mAn undefined value may be read from 'errno'[0m
  216 |           switch (errno)[0m
      | [0;1;32m                  ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:219:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  219 |               if (scratch_buffer_grow (&bufs->rname))[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  220 |                 break;[0m
  221 |               FALLTHROUGH;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mcanonicalize.c:219:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |               if (scratch_buffer_grow (&bufs->rname))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  220 |                 break;[0m
      | [0;1;32m                      
[0m[1mcanonicalize.c:223:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  223 |               xalloc_die ();[0m
      | [0;1;32m              ^            
[0m      | [0;32m              {            ;} 
[0m[1mcanonicalize.c:226:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  226 |               dest = rname;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  227 |               goto error;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mcanonicalize.c:277:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |       while (ISSLASH (*start))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  278 |         ++start;[0m
      | [0;1;32m                
[0m[1mcanonicalize.c:281:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  282 |         /* Nothing.  */;[0m
      | [0;1;32m                        
[0m[1mcanonicalize.c:288:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |       if (startlen == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  289 |         break;[0m
  290 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;32m      } 
[0m[1mcanonicalize.c:290:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  291 |         /* nothing */;[0m
  292 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;32m      } 
[0m[1mcanonicalize.c:295:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |           if (dest > rname + prefix_len + 1)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  296 |             for (--dest; dest > rname && !ISSLASH (dest[-1]); --dest)[0m
  297 |               continue;[0m
      | [0;1;32m                       
[0m[1mcanonicalize.c:296:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |             for (--dest; dest > rname && !ISSLASH (dest[-1]); --dest)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  297 |               continue;[0m
      | [0;1;32m                       
[0m[1mcanonicalize.c:300:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |               && ISSLASH (*dest) && !ISSLASH (dest[1]))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  301 |             dest++;[0m
      | [0;1;32m                   
[0m[1mcanonicalize.c:305:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  306 |             *dest++ = '/';[0m
      | [0;1;32m                          
[0m[1mcanonicalize.c:312:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |               if (!scratch_buffer_grow_preserve (&bufs->rname))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  313 |                 xalloc_die ();[0m
      | [0;1;32m                              
[0m[1mcanonicalize.c:319:11: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted offset [clang-analyzer-security.ArrayBound][0m
  319 |           *dest = '\0';[0m
      | [0;1;32m          ^~~~~
[0m[1mcanonicalize.c:182:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  182 |   bool logical = (can_mode & CAN_NOLINKS) != 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:186:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  186 |   if (multiple_bits_set (can_exist))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:192:7: [0m[0;1;36mnote: [0mAssuming 'name' is not equal to NULL[0m
  192 |   if (name == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanonicalize.c:192:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  192 |   if (name == NULL)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:198:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  198 |   if (name[0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |   if (name[0] == '\0')[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:212:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  212 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m       ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:212:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  212 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:214:15: [0m[0;1;36mnote: [0mTaint originated here[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:15: [0m[0;1;36mnote: [0mAssuming that the 1st argument to 'getcwd' is not NULL[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:15: [0m[0;1;36mnote: [0mAssuming that the 1st argument to 'getcwd' is a buffer with size equal to or greater than the value of the 2nd argument[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:15: [0m[0;1;36mnote: [0mTaint propagated to the 1st argument[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 231[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:231:14: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  231 |       dest = rawmemchr (rname, '\0');[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:274:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  274 |   for ( ; *start; start = end)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:277:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 281[0m
  277 |       while (ISSLASH (*start))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:281:25: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^
[0m[1mcanonicalize.c:281:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:281:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^~~~
[0m[1mcanonicalize.c:281:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:288:11: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 0[0m
  288 |       if (startlen == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:288:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  288 |       if (startlen == 0)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:290:16: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 1[0m
  290 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:290:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  290 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:292:16: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 2[0m
  292 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:292:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  292 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:305:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  305 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m               ^
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:305:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  305 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:308:11: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  308 |           while (rname + bufs->rname.length - dest[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:312:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  312 |               if (!scratch_buffer_grow_preserve (&bufs->rname))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:312:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  312 |               if (!scratch_buffer_grow_preserve (&bufs->rname))[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:308:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  308 |           while (rname + bufs->rname.length - dest[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  309 |                  < startlen + sizeof dir_suffix)[0m
      | [0;1;32m                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:308:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 318[0m
  308 |           while (rname + bufs->rname.length - dest[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:319:11: [0m[0;1;36mnote: [0mAccess of the region with a tainted offset that may be too large[0m
  319 |           *dest = '\0';[0m
      | [0;1;32m          ^~~~~
[0m[1mcanonicalize.c:330:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  331 |                     break;[0m
      | [0;1;32m                          
[0m[1mcanonicalize.c:332:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |                   if (!scratch_buffer_grow (&bufs->link))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  333 |                     xalloc_die ();[0m
      | [0;1;32m                                  
[0m[1mcanonicalize.c:340:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |               if (num_links < 20)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  341 |                 num_links++;[0m
  342 |               else if (*start)[0m
      | [0;32m              } 
[0m[1mcanonicalize.c:351:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |                   if (stat (*rname ? rname : ".", &st) != 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  352 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mcanonicalize.c:362:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |                       if (can_exist == CAN_MISSING)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  363 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mcanonicalize.c:369:15: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  369 |               buf[n] = '\0';[0m
      | [0;1;32m              ^~~~~~
[0m[1mcanonicalize.c:182:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  182 |   bool logical = (can_mode & CAN_NOLINKS) != 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:186:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  186 |   if (multiple_bits_set (can_exist))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:192:7: [0m[0;1;36mnote: [0mAssuming 'name' is not equal to NULL[0m
  192 |   if (name == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanonicalize.c:192:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  192 |   if (name == NULL)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:198:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  198 |   if (name[0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |   if (name[0] == '\0')[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:212:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  212 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m       ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:212:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  212 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:239:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  239 |       if (DOUBLE_SLASH_IS_DISTINCT_ROOT)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:274:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  274 |   for ( ; *start; start = end)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:277:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  277 |       while (ISSLASH (*start))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:277:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  277 |       while (ISSLASH (*start))[0m
      | [0;1;32m             ^
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:277:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 281[0m
  277 |       while (ISSLASH (*start))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:281:25: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^~~~
[0m[1mcanonicalize.c:281:25: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mcanonicalize.c:281:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:281:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^~~~
[0m[1mcanonicalize.c:281:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:288:11: [0m[0;1;36mnote: [0m'startlen' is not equal to 0[0m
  288 |       if (startlen == 0)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mcanonicalize.c:288:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  288 |       if (startlen == 0)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:290:16: [0m[0;1;36mnote: [0m'startlen' is equal to 1[0m
  290 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m               ^~~~~~~~
[0m[1mcanonicalize.c:290:16: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mcanonicalize.c:290:33: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  290 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:290:12: [0m[0;1;36mnote: [0mTaking false branch[0m
  290 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m           ^
[0m[1mcanonicalize.c:292:16: [0m[0;1;36mnote: [0m'startlen' is not equal to 2[0m
  292 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m               ^~~~~~~~
[0m[1mcanonicalize.c:292:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  292 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:305:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  305 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:308:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  308 |           while (rname + bufs->rname.length - dest[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  309 |                  < startlen + sizeof dir_suffix)[0m
      | [0;1;32m                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:308:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 318[0m
  308 |           while (rname + bufs->rname.length - dest[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:323:16: [0m[0;1;36mnote: [0m'logical' is false[0m
  323 |           if (!logical)[0m
      | [0;1;32m               ^~~~~~~
[0m[1mcanonicalize.c:323:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  323 |           if (!logical)[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:325:15: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  325 |               while (true)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:329:23: [0m[0;1;36mnote: [0mTaint originated here[0m
  329 |                   n = readlink (rname, buf, bufsize - 1);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:329:23: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  329 |                   n = readlink (rname, buf, bufsize - 1);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:329:23: [0m[0;1;36mnote: [0mAssuming that 'readlink' is successful[0m
  329 |                   n = readlink (rname, buf, bufsize - 1);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:330:23: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  330 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:330:19: [0m[0;1;36mnote: [0mTaking true branch[0m
  330 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                  ^
[0m[1mcanonicalize.c:331:21: [0m[0;1;36mnote: [0m Execution continues on line 336[0m
  331 |                     break;[0m
      | [0;1;32m                    ^
[0m[1mcanonicalize.c:336:20: [0m[0;1;36mnote: [0m'n' is >= 0[0m
  336 |           if (0 <= n)[0m
      | [0;1;32m                   ^
[0m[1mcanonicalize.c:336:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  336 |           if (0 <= n)[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:340:19: [0m[0;1;36mnote: [0m'num_links' is < 20[0m
  340 |               if (num_links < 20)[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mcanonicalize.c:340:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  340 |               if (num_links < 20)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:369:15: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  369 |               buf[n] = '\0';[0m
      | [0;1;32m              ^~~~~~
[0m[1mcanonicalize.c:373:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |               if (end_in_extra_buffer)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  374 |                 end_idx = end - extra_buf;[0m
      | [0;1;32m                                          
[0m[1mcanonicalize.c:376:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  377 |                 xalloc_die ();[0m
      | [0;1;32m                              
[0m[1mcanonicalize.c:380:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |                   if (!scratch_buffer_grow_preserve (&bufs->extra))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  381 |                     xalloc_die ();[0m
      | [0;1;32m                                  
[0m[1mcanonicalize.c:384:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |               if (end_in_extra_buffer)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  385 |                 end = extra_buf + end_idx;[0m
      | [0;1;32m                                          
[0m[1mcanonicalize.c:388:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  388 |               memmove (&extra_buf[n], end, len + 1);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcanonicalize.c:388:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  388 |               memmove (&extra_buf[n], end, len + 1);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcanonicalize.c:389:15: [0m[0;1;35mwarning: [0m[1mValue stored to 'name' is never read [clang-analyzer-deadcode.DeadStores][0m
  389 |               name = end = memcpy (extra_buf, buf, n);[0m
      | [0;1;32m              ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:389:15: [0m[0;1;36mnote: [0mValue stored to 'name' is never read[0m
  389 |               name = end = memcpy (extra_buf, buf, n);[0m
      | [0;1;32m              ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:389:28: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  389 |               name = end = memcpy (extra_buf, buf, n);[0m
      | [0;1;32m                           ^~~~~~
[0m[1mcanonicalize.c:389:28: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  389 |               name = end = memcpy (extra_buf, buf, n);[0m
      | [0;1;32m                           ^~~~~~
[0m[1mcanonicalize.c:400:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |                       if (ISSLASH (buf[1]) && !ISSLASH (buf[2]) && !pfxlen)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  401 |                         *dest++ = '/';[0m
      | [0;1;32m                                      
[0m[1mcanonicalize.c:411:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |                   if (dest > rname + prefix_len + 1)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  412 |                     for (--dest; dest > rname && !ISSLASH (dest[-1]); --dest)[0m
  413 |                       continue;[0m
      | [0;1;32m                               
[0m[1mcanonicalize.c:412:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |                     for (--dest; dest > rname && !ISSLASH (dest[-1]); --dest)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  413 |                       continue;[0m
      | [0;1;32m                               
[0m[1mcanonicalize.c:415:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  415 |                       && ISSLASH (*dest) && !ISSLASH (dest[1]) && !prefix_len)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  416 |                     dest++;[0m
      | [0;1;32m                           
[0m[1mcanonicalize.c:427:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  427 |                           && !end[strspn (end, SLASHES)])))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  428 |             goto error;[0m
      | [0;1;32m                       
[0m[1mcanonicalize.c:431:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  431 |   if (dest > rname + prefix_len + 1 && ISSLASH (dest[-1]))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  432 |     --dest;[0m
      | [0;1;32m           
[0m[1mcanonicalize.c:434:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  434 |       && ISSLASH (*dest) && !ISSLASH (dest[1]))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  435 |     dest++;[0m
      | [0;1;32m           
[0m[1mcanonicalize.c:439:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  439 |   if (ht)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  440 |     hash_free (ht);[0m
      | [0;1;32m                   
[0m[1mcanonicalize.c:442:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |   if (failed)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  443 |     return NULL;[0m
      | [0;1;32m                
[0m[1mcanonicalize.c:446:18: [0m[0;1;35mwarning: [0m[1mmalloc is called with a tainted (potentially attacker controlled) value. Make sure the value is bound checked [clang-analyzer-optin.taint.TaintedAlloc][0m
  446 |   char *result = malloc (dest - rname);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:182:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  182 |   bool logical = (can_mode & CAN_NOLINKS) != 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:186:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  186 |   if (multiple_bits_set (can_exist))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:192:7: [0m[0;1;36mnote: [0mAssuming 'name' is not equal to NULL[0m
  192 |   if (name == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanonicalize.c:192:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  192 |   if (name == NULL)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:198:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  198 |   if (name[0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |   if (name[0] == '\0')[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:212:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  212 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m       ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:212:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  212 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:214:15: [0m[0;1;36mnote: [0mTaint originated here[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:15: [0m[0;1;36mnote: [0mTaint propagated to the 1st argument[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:214:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 231[0m
  214 |       while (!getcwd (bufs->rname.data, bufs->rname.length))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:231:14: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  231 |       dest = rawmemchr (rname, '\0');[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:274:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  274 |   for ( ; *start; start = end)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:277:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 281[0m
  277 |       while (ISSLASH (*start))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:281:25: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^
[0m[1mcanonicalize.c:281:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:281:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^~~~
[0m[1mcanonicalize.c:281:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  281 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:288:11: [0m[0;1;36mnote: [0mAssuming 'startlen' is equal to 0[0m
  288 |       if (startlen == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:288:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  288 |       if (startlen == 0)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:289:9: [0m[0;1;36mnote: [0m Execution continues on line 431[0m
  289 |         break;[0m
      | [0;1;32m        ^
[0m[1mcanonicalize.c:431:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  431 |   if (dest > rname + prefix_len + 1 && ISSLASH (dest[-1]))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:431:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mcanonicalize.c:431:40: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  431 |   if (dest > rname + prefix_len + 1 && ISSLASH (dest[-1]))[0m
      | [0;1;32m                                       ^
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:431:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  431 |   if (dest > rname + prefix_len + 1 && ISSLASH (dest[-1]))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:433:37: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  433 |   if (DOUBLE_SLASH_IS_DISTINCT_ROOT && dest == rname + 1 && !prefix_len[0m
      | [0;1;32m                                    ^
[0m[1mcanonicalize.c:439:7: [0m[0;1;36mnote: [0m'ht' is null[0m
  439 |   if (ht)[0m
      | [0;1;32m      ^~
[0m[1mcanonicalize.c:439:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  439 |   if (ht)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:442:7: [0m[0;1;36mnote: [0m'failed' is false[0m
  442 |   if (failed)[0m
      | [0;1;32m      ^~~~~~
[0m[1mcanonicalize.c:442:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  442 |   if (failed)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:446:18: [0m[0;1;36mnote: [0mmalloc is called with a tainted (potentially attacker controlled) value. Make sure the value is bound checked[0m
  446 |   char *result = malloc (dest - rname);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:447:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |   if (!result)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  448 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mcanonicalize.c:449:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  449 |   return memcpy (result, rname, dest - rname);[0m
      | [0;1;32m         ^~~~~~
[0m[1mcanonicalize.c:449:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  449 |   return memcpy (result, rname, dest - rname);[0m
      | [0;1;32m         ^~~~~~
[0m53 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[145/164][116.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpfbyo4hu9.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/res.c
[1mres.c:137:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |   if (path_b < path_e && *path_b == '/')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  138 |     /* Our path representation doesn't use a leading slash, so remove[0m
  139 |        one from theirs. */[0m
  140 |     ++path_b;[0m
      | [0;1;32m             
[0m[1mres.c:147:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |       if (specs->size == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  148 |         specs->size = 1;[0m
  149 |       else[0m
      | [0;32m      } 
[0m[1mres.c:149:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  150 |         specs->size <<= 1;[0m
      | [0;1;32m                          
[0m[1mres.c:166:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |   for (i = 0; i < specs->count; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  167 |     if (specs->paths[i].user_agent_exact_p)[0m
  168 |       ++cnt;[0m
      | [0;1;32m            
[0m[1mres.c:167:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  167 |     if (specs->paths[i].user_agent_exact_p)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  168 |       ++cnt;[0m
      | [0;1;32m            
[0m[1mres.c:170:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |   for (i = 0, j = 0; i < specs->count; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  171 |     if (specs->paths[i].user_agent_exact_p)[0m
  172 |       newpaths[j++] = specs->paths[i];[0m
  173 |          else[0m
  174 |                  xfree (specs->paths[i].path);[0m
      | [0;1;32m                                              
[0m[1mres.c:171:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |     if (specs->paths[i].user_agent_exact_p)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  172 |       newpaths[j++] = specs->paths[i];[0m
  173 |          else[0m
      | [0;32m         } 
[0m[1mres.c:173:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |          else[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  174 |                  xfree (specs->paths[i].path);[0m
      | [0;1;32m                                              
[0m[1mres.c:252:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |       if (p == end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  253 |         break;[0m
      | [0;1;32m              
[0m[1mres.c:255:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  255 |       if (lineend_real)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  256 |         ++lineend_real;[0m
  257 |       else[0m
      | [0;32m      } 
[0m[1mres.c:257:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  258 |         lineend_real = end;[0m
      | [0;1;32m                           
[0m[1mres.c:264:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |       if (EOL (p) || *p == '#')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  265 |         goto next;[0m
      | [0;1;32m                  
[0m[1mres.c:270:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |       for (lineend = p; lineend < lineend_real; lineend++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  271 |         if ((lineend == p || c_isspace (*(lineend - 1)))[0m
  272 |             && *lineend == '#')[0m
  273 |           break;[0m
      | [0;1;32m                
[0m[1mres.c:272:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |             && *lineend == '#')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  273 |           break;[0m
      | [0;1;32m                
[0m[1mres.c:276:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |       while (lineend > p && c_isspace (*(lineend - 1)))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  277 |         --lineend;[0m
      | [0;1;32m                  
[0m[1mres.c:282:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |       while (!EOL (p) && (c_isalnum (*p) || *p == '-'))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  283 |         ++p;[0m
      | [0;1;32m            
[0m[1mres.c:296:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |       while (!EOL (p))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  297 |         ++p;[0m
      | [0;1;32m            
[0m[1mres.c:328:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |           if (record_count != 0 || user_agent_applies == false)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  329 |             match_user_agent (value_b, value_e - value_b,[0m
  330 |                               &user_agent_applies, &user_agent_exact);[0m
      | [0;1;32m                                                                      
[0m[1mres.c:331:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |           if (user_agent_exact)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  332 |             found_exact = true;[0m
      | [0;1;32m                               
[0m[1mres.c:348:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |               if (value_b == value_e)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  349 |                 /* Empty "disallow" line means everything is *allowed*!  */[0m
  350 |                 allowed = true;[0m
      | [0;1;32m                               
[0m[1mres.c:407:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |   for (i = 0; i < specs->count; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  408 |     xfree (specs->paths[i].path);[0m
      | [0;1;32m                                 
[0m[1mres.c:445:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  445 |       if (!rc)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  446 |         return true;[0m
      | [0;1;32m                    
[0m[1mres.c:447:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |       if (!uc)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  448 |         return false;[0m
      | [0;1;32m                     
[0m[1mres.c:451:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |       if (rc != uc)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  452 |         return false;[0m
      | [0;1;32m                     
[0m[1mres.c:464:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |   if (!specs)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  465 |     return true;[0m
      | [0;1;32m                
[0m[1mres.c:466:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |   for (i = 0; i < specs->count; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  467 |     if (matches (specs->paths[i].path, path))[0m
  468 |       {[0m
  469 |         bool allowedp = specs->paths[i].allowedp;[0m
  470 |         DEBUGP (("%s path %s because of rule %s.\n",[0m
  471 |                  allowedp ? "Allowing" : "Rejecting",[0m
  472 |                  path, quote (specs->paths[i].path)));[0m
  473 |         return allowedp;[0m
  474 |       }[0m
      | [0;1;32m       
[0m[1mres.c:491:19: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  491 |   if (((unsigned) snprintf (buf, sizeof (buf), "%s:%d", host, port)) >= sizeof (buf))[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mres.c:491:19: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  491 |   if (((unsigned) snprintf (buf, sizeof (buf), "%s:%d", host, port)) >= sizeof (buf))[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mres.c:491:86: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |   if (((unsigned) snprintf (buf, sizeof (buf), "%s:%d", host, port)) >= sizeof (buf))[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m  492 |     hp = aprintf("%s:%d", host, port);[0m
  493 |   else[0m
      | [0;32m  } 
[0m[1mres.c:493:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  494 |     hp = buf;[0m
      | [0;1;32m             
[0m[1mres.c:496:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |   if (!registered_specs)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  497 |     registered_specs = make_nocase_string_hash_table (0);[0m
      | [0;1;32m                                                         
[0m[1mres.c:501:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if (hp != buf)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  502 |         xfree (hp);[0m
      | [0;1;32m                   
[0m[1mres.c:503:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |       if (old)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  504 |         free_specs (old);[0m
      | [0;1;32m                         
[0m[1mres.c:520:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (!registered_specs)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  521 |     return NULL;[0m
      | [0;1;32m                
[0m[1mres.c:523:19: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  523 |   if (((unsigned) snprintf (buf, sizeof (buf), "%s:%d", host, port)) >= sizeof (buf))[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mres.c:523:19: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  523 |   if (((unsigned) snprintf (buf, sizeof (buf), "%s:%d", host, port)) >= sizeof (buf))[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mres.c:523:86: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |   if (((unsigned) snprintf (buf, sizeof (buf), "%s:%d", host, port)) >= sizeof (buf))[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m  524 |     hp = aprintf("%s:%d", host, port);[0m
  525 |   else[0m
      | [0;32m  } 
[0m[1mres.c:525:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  525 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  526 |     hp = buf;[0m
      | [0;1;32m             
[0m63 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[146/164][123.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpak129uu8.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/recur.c
[1mrecur.c:110:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |   if (queue->count > queue->maxcount)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  111 |     queue->maxcount = queue->count;[0m
      | [0;1;32m                                   
[0m[1mrecur.c:117:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   if (i)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  118 |     DEBUGP (("[IRI Enqueuing %s with %s\n", quote_n (0, url),[0m
  119 |              i->uri_encoding ? quote_n (1, i->uri_encoding) : "None"));[0m
      | [0;1;32m                                                                       
[0m[1mrecur.c:121:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |   if (queue->tail)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  122 |     queue->tail->next = qel;[0m
      | [0;1;32m                            
[0m[1mrecur.c:125:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |   if (!queue->head)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  126 |     queue->head = queue->tail;[0m
      | [0;1;32m                              
[0m[1mrecur.c:139:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |   if (!qel)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  140 |     return false;[0m
      | [0;1;32m                 
[0m[1mrecur.c:143:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |   if (!queue->head)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  144 |     queue->tail = NULL;[0m
      | [0;1;32m                       
[0m[1mrecur.c:263:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |       if (!rejectedlog)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  264 |         logprintf (LOG_NOTQUIET, "%s: %s\n", opt.rejected_log, strerror (errno));[0m
      | [0;1;32m                                                                                 
[0m[1mrecur.c:276:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |       if (opt.quota && total_downloaded_bytes > opt.quota)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  277 |         break;[0m
      | [0;1;32m              
[0m[1mrecur.c:278:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |       if (status == FWRITEERR)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  279 |         break;[0m
      | [0;1;32m              
[0m[1mrecur.c:285:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |                         &depth, &html_allowed, &css_allowed))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  286 |         break;[0m
      | [0;1;32m              
[0m[1mrecur.c:443:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |               if (!url_parsed)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  444 |                 continue;[0m
      | [0;1;32m                         
[0m[1mrecur.c:449:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |               if (strip_auth)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  450 |                 referer_url = url_string (url_parsed, URL_AUTH_HIDE);[0m
      | [0;1;32m                                                                     
[0m[1mrecur.c:489:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  489 |               if (strip_auth)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  490 |                 xfree (referer_url);[0m
      | [0;1;32m                                    
[0m[1mrecur.c:514:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  514 |           if (unlink (file))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  515 |             logprintf (LOG_NOTQUIET, "unlink: %s\n", strerror (errno));[0m
      | [0;1;32m                                                                       
[0m[1mrecur.c:551:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |   if (opt.quota && total_downloaded_bytes > opt.quota)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  552 |     return QUOTEXC;[0m
  553 |   else if (status == FWRITEERR)[0m
      | [0;32m  } 
[0m[1mrecur.c:553:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  553 |   else if (status == FWRITEERR)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  554 |     return FWRITEERR;[0m
  555 |   else[0m
      | [0;32m  } 
[0m[1mrecur.c:555:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  556 |     return RETROK;[0m
      | [0;1;32m                  
[0m[1mrecur.c:641:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |   if (u_scheme_like_http)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  642 |     if (opt.relative_only && !upos->link_relative_p)[0m
  643 |       {[0m
  644 |         DEBUGP (("It doesn't really look like a relative link.\n"));[0m
  645 |         reason = WG_RR_ABSOLUTE;[0m
  646 |         goto out;[0m
  647 |       }[0m
      | [0;1;32m       
[0m[1mrecur.c:725:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |   if (schemes_are_similar_p (u->scheme, parent->scheme))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  726 |     if (!opt.spanhost && 0 != strcasecmp (parent->host, u->host))[0m
  727 |       {[0m
  728 |         DEBUGP (("This is not the same hostname as the parent's (%s and %s).\n",[0m
  729 |                  u->host, parent->host));[0m
  730 |         reason = WG_RR_SPANNEDHOST;[0m
  731 |         goto out;[0m
  732 |       }[0m
      | [0;1;32m       
[0m[1mrecur.c:751:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |                   if (unlink (rfile))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  752 |                       logprintf (LOG_NOTQUIET, "unlink: %s\n",[0m
  753 |                                  strerror (errno));[0m
      | [0;1;32m                                                   
[0m[1mrecur.c:781:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |   if (reason == WG_RR_SUCCESS)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  782 |     /* The URL has passed all the tests.  It can be placed in the[0m
  783 |        download queue. */[0m
  784 |     DEBUGP (("Decided to load it.\n"));[0m
  785 |   else[0m
      | [0;32m  } 
[0m[1mrecur.c:785:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  786 |     DEBUGP (("Decided NOT to load it.\n"));[0m
      | [0;1;32m                                           
[0m[1mrecur.c:816:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  816 |   if (reason == WG_RR_SUCCESS)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  817 |     blacklist_add (blacklist, upos->url->url);[0m
  818 |   else if (reason == WG_RR_LIST || reason == WG_RR_REGEX)[0m
      | [0;32m  } 
[0m[1mrecur.c:824:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  825 |     DEBUGP (("Redirection \"%s\" failed the test.\n", redirected));[0m
      | [0;1;32m                                                                   
[0m[1mrecur.c:838:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  838 |   if (!f)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  839 |     return;[0m
      | [0;1;32m           
[0m[1mrecur.c:842:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  842 |   fprintf (f, "REASON\t"[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:842:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  842 |   fprintf (f, "REASON\t"[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:854:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |   if (!fp)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  855 |     return;[0m
      | [0;1;32m           
[0m[1mrecur.c:861:26: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  861 |       case SCHEME_HTTP:  scheme_str = "SCHEME_HTTP";    break;[0m
      | [0;1;32m                         ^                                   
[0m      | [0;32m                         {                                   ;} 
[0m[1mrecur.c:866:26: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  866 |       case SCHEME_FTP:   scheme_str = "SCHEME_FTP";     break;[0m
      | [0;1;32m                         ^                                   
[0m      | [0;32m                         {                                   ;} 
[0m[1mrecur.c:867:26: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  867 |       default:           scheme_str = "SCHEME_INVALID"; break;[0m
      | [0;1;32m                         ^                                   
[0m      | [0;32m                         {                                   ;} 
[0m[1mrecur.c:870:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  870 |   fprintf (fp, "%s\t%s\t%s\t%i\t%s\t%s\t%s\t%s",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:870:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  870 |   fprintf (fp, "%s\t%s\t%s\t%i\t%s\t%s\t%s\t%s",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:892:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  892 |   if (!fp)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  893 |     return;[0m
      | [0;1;32m           
[0m[1mrecur.c:897:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  897 |       case WG_RR_SUCCESS:     reason_str = "SUCCESS";     break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:898:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  898 |       case WG_RR_BLACKLIST:   reason_str = "BLACKLIST";   break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:899:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  899 |       case WG_RR_NOTHTTPS:    reason_str = "NOTHTTPS";    break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:900:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  900 |       case WG_RR_NONHTTP:     reason_str = "NONHTTP";     break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:901:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  901 |       case WG_RR_ABSOLUTE:    reason_str = "ABSOLUTE";    break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:902:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  902 |       case WG_RR_DOMAIN:      reason_str = "DOMAIN";      break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:903:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  903 |       case WG_RR_PARENT:      reason_str = "PARENT";      break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:904:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  904 |       case WG_RR_LIST:        reason_str = "LIST";        break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:905:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  905 |       case WG_RR_REGEX:       reason_str = "REGEX";       break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:906:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  906 |       case WG_RR_RULES:       reason_str = "RULES";       break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:907:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  907 |       case WG_RR_SPANNEDHOST: reason_str = "SPANNEDHOST"; break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:908:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  908 |       case WG_RR_ROBOTS:      reason_str = "ROBOTS";      break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:909:31: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  909 |       default:                reason_str = "UNKNOWN";     break;[0m
      | [0;1;32m                              ^                                
[0m      | [0;32m                              {                                ;} 
[0m[1mrecur.c:912:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  912 |   fprintf (fp, "%s\t", reason_str);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:912:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  912 |   fprintf (fp, "%s\t", reason_str);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:914:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  914 |   fprintf (fp, "\t");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:914:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  914 |   fprintf (fp, "\t");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:916:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  916 |   fprintf (fp, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrecur.c:916:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  916 |   fprintf (fp, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m77 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[147/164][91.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp0iszdlhr.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/html-parse.c
[1mhtml-parse.c:308:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   if (*head == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  309 |     return;[0m
      | [0;1;32m           
[0m[1mhtml-parse.c:355:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |           if (0 == strncasecmp (tail->tagname_begin, tagname_begin, len))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  356 |             return tail;[0m
      | [0;1;32m                        
[0m[1mhtml-parse.c:377:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |   if (++p == end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  378 |     return -1;[0m
      | [0;1;32m              
[0m[1mhtml-parse.c:387:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |         if (*p == 'x')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  388 |           for (++p; value < 256 && p < end && c_isxdigit (*p); p++, digits++)[0m
  389 |             value = (value << 4) + _unhex (*p);[0m
  390 |         else[0m
      | [0;32m        } 
[0m[1mhtml-parse.c:388:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |           for (++p; value < 256 && p < end && c_isxdigit (*p); p++, digits++)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  389 |             value = (value << 4) + _unhex (*p);[0m
      | [0;1;32m                                               
[0m[1mhtml-parse.c:390:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  391 |           for (; value < 256 && p < end && c_isdigit (*p); p++, digits++)[0m
  392 |             value = (value * 10) + (*p - '0');[0m
      | [0;1;32m                                              
[0m[1mhtml-parse.c:391:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |           for (; value < 256 && p < end && c_isdigit (*p); p++, digits++)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  392 |             value = (value * 10) + (*p - '0');[0m
      | [0;1;32m                                              
[0m[1mhtml-parse.c:393:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |         if (!digits)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  394 |           return -1;[0m
      | [0;1;32m                    
[0m[1mhtml-parse.c:397:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |         if (!value || (value & ~0x7f))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  398 |           return -1;[0m
      | [0;1;32m                    
[0m[1mhtml-parse.c:404:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  404 |       if (ENT1 (p, 't'))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  405 |         value = '>', *ptr = SKIP_SEMI (p, 1);[0m
  406 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mhtml-parse.c:404:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  404 |       if (ENT1 (p, 't'))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  405 |         value = '>', *ptr = SKIP_SEMI (p, 1);[0m
      | [0;1;32m                                             
[0m[1mhtml-parse.c:408:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  408 |       if (ENT1 (p, 't'))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  409 |         value = '<', *ptr = SKIP_SEMI (p, 1);[0m
  410 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mhtml-parse.c:408:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |       if (ENT1 (p, 't'))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  409 |         value = '<', *ptr = SKIP_SEMI (p, 1);[0m
      | [0;1;32m                                             
[0m[1mhtml-parse.c:412:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  412 |       if (ENT2 (p, 'm', 'p'))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  413 |         value = '&', *ptr = SKIP_SEMI (p, 2);[0m
  414 |       else if (ENT3 (p, 'p', 'o', 's'))[0m
  415 |         /* handle &apos for the sake of the XML/XHTML crowd. */[0m
  416 |         value = '\'', *ptr = SKIP_SEMI (p, 3);[0m
  417 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mhtml-parse.c:412:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |       if (ENT2 (p, 'm', 'p'))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  413 |         value = '&', *ptr = SKIP_SEMI (p, 2);[0m
  414 |       else if (ENT3 (p, 'p', 'o', 's'))[0m
      | [0;32m      } 
[0m[1mhtml-parse.c:414:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |       else if (ENT3 (p, 'p', 'o', 's'))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  415 |         /* handle &apos for the sake of the XML/XHTML crowd. */[0m
  416 |         value = '\'', *ptr = SKIP_SEMI (p, 3);[0m
      | [0;1;32m                                              
[0m[1mhtml-parse.c:419:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  419 |       if (ENT3 (p, 'u', 'o', 't'))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  420 |         value = '\"', *ptr = SKIP_SEMI (p, 3);[0m
  421 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mhtml-parse.c:419:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |       if (ENT3 (p, 'u', 'o', 't'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  420 |         value = '\"', *ptr = SKIP_SEMI (p, 3);[0m
      | [0;1;32m                                              
[0m[1mhtml-parse.c:460:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |       while (beg < end && c_isspace (*beg))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  461 |         ++beg;[0m
      | [0;1;32m              
[0m[1mhtml-parse.c:462:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |       while (end > beg && c_isspace (end[-1]))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  463 |         --end;[0m
      | [0;1;32m              
[0m[1mhtml-parse.c:479:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  479 |       POOL_GROW (pool, end - beg);[0m
      | [0;1;32m      ^
[0m[1mhtml-parse.c:183:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_GROW'[0m
  183 |   GROW_ARRAY ((p)->contents, (p)->size, (p)->tail + (increase), \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  184 |               (p)->resized, char)[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:479:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  479 |       POOL_GROW (pool, end - beg);[0m
      | [0;1;32m      ^
[0m[1mhtml-parse.c:183:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_GROW'[0m
  183 |   GROW_ARRAY ((p)->contents, (p)->size, (p)->tail + (increase), \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  184 |               (p)->resized, char)[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:487:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |               if (entity != -1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  488 |                 *to++ = entity;[0m
  489 |               else[0m
      | [0;32m              } 
[0m[1mhtml-parse.c:489:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  489 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  490 |                 *to++ = *from++;[0m
      | [0;1;32m                                
[0m[1mhtml-parse.c:492:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |           else if ((*from == '\n' || *from == '\r') && squash_newlines)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  493 |             ++from;[0m
  494 |           else[0m
      | [0;32m          } 
[0m[1mhtml-parse.c:494:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  495 |             *to++ = *from++;[0m
      | [0;1;32m                            
[0m[1mhtml-parse.c:504:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  504 |       POOL_APPEND_CHR (pool, '\0');[0m
      | [0;1;32m      ^
[0m[1mhtml-parse.c:202:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_APPEND_CHR'[0m
  202 |   POOL_GROW (p, 1);                             \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:183:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_GROW'[0m
  183 |   GROW_ARRAY ((p)->contents, (p)->size, (p)->tail + (increase), \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  184 |               (p)->resized, char)[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:504:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  504 |       POOL_APPEND_CHR (pool, '\0');[0m
      | [0;1;32m      ^
[0m[1mhtml-parse.c:202:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_APPEND_CHR'[0m
  202 |   POOL_GROW (p, 1);                             \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:183:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_GROW'[0m
  183 |   GROW_ARRAY ((p)->contents, (p)->size, (p)->tail + (increase), \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  184 |               (p)->resized, char)[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:509:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  509 |       POOL_APPEND (pool, beg, end);[0m
      | [0;1;32m      ^
[0m[1mhtml-parse.c:192:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_APPEND'[0m
  192 |   POOL_GROW (p, PA_size);                               \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:183:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_GROW'[0m
  183 |   GROW_ARRAY ((p)->contents, (p)->size, (p)->tail + (increase), \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  184 |               (p)->resized, char)[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:509:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  509 |       POOL_APPEND (pool, beg, end);[0m
      | [0;1;32m      ^
[0m[1mhtml-parse.c:192:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_APPEND'[0m
  192 |   POOL_GROW (p, PA_size);                               \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:183:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_GROW'[0m
  183 |   GROW_ARRAY ((p)->contents, (p)->size, (p)->tail + (increase), \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  184 |               (p)->resized, char)[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:510:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  510 |       POOL_APPEND_CHR (pool, '\0');[0m
      | [0;1;32m      ^
[0m[1mhtml-parse.c:202:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_APPEND_CHR'[0m
  202 |   POOL_GROW (p, 1);                             \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:183:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_GROW'[0m
  183 |   GROW_ARRAY ((p)->contents, (p)->size, (p)->tail + (increase), \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  184 |               (p)->resized, char)[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:510:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  510 |       POOL_APPEND_CHR (pool, '\0');[0m
      | [0;1;32m      ^
[0m[1mhtml-parse.c:202:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_APPEND_CHR'[0m
  202 |   POOL_GROW (p, 1);                             \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:183:3: [0m[0;1;36mnote: [0mexpanded from macro 'POOL_GROW'[0m
  183 |   GROW_ARRAY ((p)->contents, (p)->size, (p)->tail + (increase), \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  184 |               (p)->resized, char)[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~~~~
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:516:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |       for (; *p; p++)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  517 |         *p = c_tolower (*p);[0m
      | [0;1;32m                            
[0m[1mhtml-parse.c:586:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  586 |   if (beg == end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  587 |     return beg;[0m
      | [0;1;32m               
[0m[1mhtml-parse.c:595:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |       if (p == end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  596 |         state = AC_S_BACKOUT;[0m
      | [0;1;32m                             
[0m[1mhtml-parse.c:603:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  603 |           if (ch == '!')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  604 |             {[0m
  605 |               ch = *p++;[0m
  606 |               state = AC_S_DEFAULT;[0m
  607 |             }[0m
  608 |           else[0m
  609 |             state = AC_S_BACKOUT;[0m
  610 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhtml-parse.c:608:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  608 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  609 |             state = AC_S_BACKOUT;[0m
      | [0;1;32m                                 
[0m[1mhtml-parse.c:612:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |           switch (ch)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mhtml-parse.c:615:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  615 |               state = AC_S_DASH1;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  616 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhtml-parse.c:622:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  622 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mhtml-parse.c:626:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  626 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mhtml-parse.c:630:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  630 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mhtml-parse.c:632:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  632 |               if (NAME_CHAR_P (ch))[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  633 |                 state = AC_S_DCLNAME;[0m
  634 |               else[0m
  635 |                 state = AC_S_BACKOUT;[0m
  636 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhtml-parse.c:632:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |               if (NAME_CHAR_P (ch))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  633 |                 state = AC_S_DCLNAME;[0m
  634 |               else[0m
      | [0;32m              } 
[0m[1mhtml-parse.c:634:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  635 |                 state = AC_S_BACKOUT;[0m
      | [0;1;32m                                     
[0m[1mhtml-parse.c:640:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  640 |           if (ch == '-')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  641 |             state = AC_S_DASH1;[0m
  642 |           else if (NAME_CHAR_P (ch))[0m
  643 |             ch = *p++;[0m
  644 |           else[0m
  645 |             state = AC_S_DEFAULT;[0m
  646 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhtml-parse.c:640:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |           if (ch == '-')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  641 |             state = AC_S_DASH1;[0m
  642 |           else if (NAME_CHAR_P (ch))[0m
      | [0;32m          } 
[0m[1mhtml-parse.c:642:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |           else if (NAME_CHAR_P (ch))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  643 |             ch = *p++;[0m
  644 |           else[0m
      | [0;32m          } 
[0m[1mhtml-parse.c:644:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  645 |             state = AC_S_DEFAULT;[0m
      | [0;1;32m                                 
[0m[1mhtml-parse.c:658:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |           if (ch == quote_char)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  659 |             state = AC_S_QUOTE2;[0m
  660 |           else[0m
  661 |             ch = *p++;[0m
  662 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhtml-parse.c:658:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  658 |           if (ch == quote_char)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  659 |             state = AC_S_QUOTE2;[0m
  660 |           else[0m
      | [0;32m          } 
[0m[1mhtml-parse.c:660:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  660 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  661 |             ch = *p++;[0m
      | [0;1;32m                      
[0m[1mhtml-parse.c:674:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  674 |           switch (ch)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  675 |             {[0m
  676 |             case '-':[0m
  677 |               ch = *p++;[0m
  678 |               state = AC_S_COMMENT;[0m
  679 |               break;[0m
  680 |             default:[0m
  681 |               state = AC_S_BACKOUT;[0m
  682 |             }[0m
  683 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhtml-parse.c:677:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  677 |               ch = *p++;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  678 |               state = AC_S_COMMENT;[0m
  679 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhtml-parse.c:681:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  681 |               state = AC_S_BACKOUT;[0m
      | [0;1;32m              ^                   
[0m      | [0;32m              {                   ;} 
[0m[1mhtml-parse.c:685:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  685 |           switch (ch)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  686 |             {[0m
  687 |             case '-':[0m
  688 |               state = AC_S_DASH3;[0m
  689 |               break;[0m
  690 |             default:[0m
  691 |               ch = *p++;[0m
  692 |               break;[0m
  693 |             }[0m
  694 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhtml-parse.c:688:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  688 |               state = AC_S_DASH3;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  689 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhtml-parse.c:691:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  691 |               ch = *p++;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  692 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhtml-parse.c:701:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  701 |           switch (ch)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  702 |             {[0m
  703 |             case '-':[0m
  704 |               ch = *p++;[0m
  705 |               state = AC_S_DEFAULT;[0m
  706 |               break;[0m
  707 |             default:[0m
  708 |               state = AC_S_COMMENT;[0m
  709 |               break;[0m
  710 |             }[0m
  711 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhtml-parse.c:704:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  704 |               ch = *p++;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  705 |               state = AC_S_DEFAULT;[0m
  706 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhtml-parse.c:708:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  708 |               state = AC_S_COMMENT;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  709 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhtml-parse.c:738:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  738 |   while ((p += 3) < end)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m[1mhtml-parse.c:742:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  742 |         if (p[-1] == '-' && p[-2] == '-')[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  743 |           return p + 1;[0m
  744 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mhtml-parse.c:742:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |         if (p[-1] == '-' && p[-2] == '-')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  743 |           return p + 1;[0m
      | [0;1;32m                       
[0m[1mhtml-parse.c:746:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  746 |       at_dash:[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mhtml-parse.c:750:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |             if (++p == end) return NULL;[0m
      | [0;1;32m                           ^            
[0m      | [0;32m                            {
[0m[1mhtml-parse.c:753:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  753 |               case '>': return p + 1;[0m
      | [0;1;32m                        ^           
[0m      | [0;32m                        {           ;} 
[0m[1mhtml-parse.c:754:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  754 |               case '-': goto at_dash_dash;[0m
      | [0;1;32m                        ^                
[0m      | [0;32m                        {                ;} 
[0m[1mhtml-parse.c:759:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |             if ((p += 2) >= end) return NULL;[0m
      | [0;1;32m                                ^            
[0m      | [0;32m                                 {
[0m[1mhtml-parse.c:763:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  763 |                 if (p[-1] == '-')[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  764 |                   return p + 1;[0m
  765 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mhtml-parse.c:763:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  763 |                 if (p[-1] == '-')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  764 |                   return p + 1;[0m
      | [0;1;32m                               
[0m[1mhtml-parse.c:767:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  767 |                 goto at_dash;[0m
      | [0;1;32m                ^           
[0m      | [0;32m                {           ;} 
[0m[1mhtml-parse.c:784:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |   if (!ht)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  785 |     return true;[0m
      | [0;1;32m                
[0m[1mhtml-parse.c:787:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  787 |   if (len < sizeof (buf))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  788 |     copy = buf;[0m
  789 |   else[0m
      | [0;32m  } 
[0m[1mhtml-parse.c:789:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  790 |     copy = xmalloc (len + 1);[0m
      | [0;1;32m                             
[0m[1mhtml-parse.c:792:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  792 |   memcpy (copy, b, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mhtml-parse.c:792:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  792 |   memcpy (copy, b, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mhtml-parse.c:797:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |   if (copy != buf)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  798 |     xfree (copy);[0m
      | [0;1;32m                 
[0m[1mhtml-parse.c:861:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |   if (!size)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  862 |     return;[0m
      | [0;1;32m           
[0m[1mhtml-parse.c:881:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  881 |     if (!p)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  882 |       goto finish;[0m
      | [0;1;32m                  
[0m[1mhtml-parse.c:900:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  900 |             if (comment_end)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  901 |               p = comment_end;[0m
      | [0;1;32m                              
[0m[1mhtml-parse.c:911:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |         if (p == end)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  912 |           goto finish;[0m
      | [0;1;32m                      
[0m[1mhtml-parse.c:921:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |     while (NAME_CHAR_P (*p))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  922 |       ADVANCE (p);[0m
      | [0;1;32m                  
[0m[1mhtml-parse.c:923:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  923 |     if (p == tag_name_begin)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  924 |       goto look_for_tag;[0m
      | [0;1;32m                        
[0m[1mhtml-parse.c:939:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |     if (end_tag && *p != '>' && *p != '<')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  940 |       goto backout_tag;[0m
      | [0;1;32m                       
[0m[1mhtml-parse.c:942:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  942 |     if (!name_allowed (allowed_tags, tag_name_begin, tag_name_end))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  943 |       /* We can't just say "goto look_for_tag" here because we need[0m
  944 |          the loop below to properly advance over the tag's attributes.  */[0m
  945 |       uninteresting_tag = true;[0m
  946 |     else[0m
      | [0;32m    } 
[0m[1mhtml-parse.c:971:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  971 |             if (*p != '<' && *p != '>')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  972 |               goto backout_tag;[0m
      | [0;1;32m                               
[0m[1mhtml-parse.c:976:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  976 |         if (*p == '<' || *p == '>')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  977 |           break;[0m
      | [0;1;32m                
[0m[1mhtml-parse.c:982:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  982 |         while (NAME_CHAR_P (*p))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  983 |           ADVANCE (p);[0m
      | [0;1;32m                      
[0m[1mhtml-parse.c:986:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  986 |         if (attr_name_begin == attr_name_end)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  987 |           goto backout_tag;[0m
      | [0;1;32m                           
[0m[1mhtml-parse.c:1029:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1029 |                     else if (newline_seen && (*p == '<' || *p == '>'))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1030 |                       break;[0m
      | [0;1;32m                            
[0m[1mhtml-parse.c:1035:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |                 if (*p == quote_char)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1036 |                   ADVANCE (p);[0m
 1037 |                 else[0m
      | [0;32m                } 
[0m[1mhtml-parse.c:1037:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1037 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1038 |                   goto look_for_tag;[0m
      | [0;1;32m                                    
[0m[1mhtml-parse.c:1042:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1042 |                 if (flags & MHT_TRIM_VALUES)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1043 |                   operation |= AP_TRIM_BLANKS;[0m
      | [0;1;32m                                              
[0m[1mhtml-parse.c:1054:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1054 |                 while (!c_isspace (*p) && *p != '<' && *p != '>')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1055 |                   ADVANCE (p);[0m
      | [0;1;32m                              
[0m[1mhtml-parse.c:1058:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1058 |                 if (attr_value_begin == attr_value_end)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1059 |                   /* <foo bar=> */[0m
 1060 |                   /*          ^ */[0m
 1061 |                   goto backout_tag;[0m
      | [0;1;32m                                   
[0m[1mhtml-parse.c:1078:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1078 |         if (uninteresting_tag)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1079 |           continue;[0m
      | [0;1;32m                   
[0m[1mhtml-parse.c:1084:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1084 |         if (!name_allowed (allowed_attributes, attr_name_begin, attr_name_end))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 1085 |           continue;[0m
      | [0;1;32m                   
[0m[1mhtml-parse.c:1087:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1087 |         GROW_ARRAY (pairs, attr_pair_size, nattrs + 1, attr_pair_resized,[0m
      | [0;1;32m        ^
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:1087:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1087 |         GROW_ARRAY (pairs, attr_pair_size, nattrs + 1, attr_pair_resized,[0m
      | [0;1;32m        ^
[0m[1mhtml-parse.c:249:11: [0m[0;1;36mnote: [0mexpanded from macro 'GROW_ARRAY'[0m
  249 |           memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \[0m
      | [0;1;32m          ^~~~~~
[0m[1mhtml-parse.c:1152:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1152 |       if (*p != '<')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1153 |         ADVANCE (p);[0m
      | [0;1;32m                    
[0m[1mhtml-parse.c:1169:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1169 |   if (attr_pair_resized)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1170 |     xfree (pairs);[0m
      | [0;1;32m                  
[0m128 warnings generated.
Suppressed 31 warnings (31 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[148/164][84.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxapi8cyu.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/main.c
[1mmain.c:133:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |   if (sig == SIGHUP)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  134 |     signal_name = "SIGHUP";[0m
      | [0;1;32m                           
[0m[1mmain.c:137:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |   if (sig == SIGUSR1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  138 |     signal_name = "SIGUSR1";[0m
      | [0;1;32m                            
[0m[1mmain.c:484:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  484 |   strcpy (cp + 3, s);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmain.c:484:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  484 |   strcpy (cp + 3, s);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmain.c:509:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |   if (initialized)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  510 |     return;[0m
      | [0;1;32m           
[0m[1mmain.c:529:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  529 |           longopt->has_arg = required_argument;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  530 |           if (cmdopt->short_name)[0m
  531 |             *p++ = ':';[0m
  532 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:530:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |           if (cmdopt->short_name)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  531 |             *p++ = ':';[0m
      | [0;1;32m                       
[0m[1mmain.c:539:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  539 |           longopt->has_arg = optional_argument;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  540 |           /* For Boolean options, add the "--no-FOO" variant, which is[0m
  541 |              identical to "--foo", except it has opposite meaning and[0m
  542 |              it doesn't allow an argument.  */[0m
  543 |           longopt = &long_options[o++];[0m
  544 |           longopt->name = no_prefix (cmdopt->long_name);[0m
  545 |           longopt->has_arg = no_argument;[0m
  546 |           /* Mask the value so we'll be able to recognize that we're[0m
  547 |              dealing with the false value.  */[0m
  548 |           longopt->val = i | BOOLEAN_NEG_MARKER;[0m
  549 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:555:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |               if (longopt->has_arg == required_argument)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  556 |                 *p++ = ':';[0m
      | [0;1;32m                           
[0m[1mmain.c:573:10: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  573 |   return fprintf (error ? stderr : stdout,[0m
      | [0;1;32m         ^~~~~~~
[0m[1mmain.c:573:10: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  573 |   return fprintf (error ? stderr : stdout,[0m
      | [0;1;32m         ^~~~~~~
[0m[1mmain.c:1040:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |               version_string) < 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1041 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1042:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1042 |   if (print_usage (0) < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1043 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1045:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1045 |   for (i = 0; i < countof (help); i++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1046 |     if (fputs (_(help[i]), stdout) < 0)[0m
 1047 |       exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                               
[0m[1mmain.c:1046:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |     if (fputs (_(help[i]), stdout) < 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1047 |       exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                               
[0m[1mmain.c:1066:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |   if (days)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1067 |     snprintf (buf, sizeof(buf), "%dd %dh %dm %ds", days, hours, mins, secs);[0m
 1068 |   else if (hours)[0m
      | [0;32m  } 
[0m[1mmain.c:1067:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1067 |     snprintf (buf, sizeof(buf), "%dd %dh %dm %ds", days, hours, mins, secs);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mmain.c:1067:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1067 |     snprintf (buf, sizeof(buf), "%dd %dh %dm %ds", days, hours, mins, secs);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mmain.c:1068:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1068 |   else if (hours)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1069 |     snprintf (buf, sizeof(buf), "%dh %dm %ds", hours, mins, secs);[0m
 1070 |   else if (mins)[0m
      | [0;32m  } 
[0m[1mmain.c:1069:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1069 |     snprintf (buf, sizeof(buf), "%dh %dm %ds", hours, mins, secs);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mmain.c:1069:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1069 |     snprintf (buf, sizeof(buf), "%dh %dm %ds", hours, mins, secs);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mmain.c:1070:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |   else if (mins)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1071 |     snprintf (buf, sizeof(buf), "%dm %ds", mins, secs);[0m
 1072 |   else[0m
      | [0;32m  } 
[0m[1mmain.c:1071:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1071 |     snprintf (buf, sizeof(buf), "%dm %ds", mins, secs);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mmain.c:1071:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1071 |     snprintf (buf, sizeof(buf), "%dm %ds", mins, secs);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mmain.c:1072:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1072 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1073 |     snprintf (buf, sizeof(buf), "%ss", print_decimal (interval));[0m
      | [0;1;32m                                                                 
[0m[1mmain.c:1073:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1073 |     snprintf (buf, sizeof(buf), "%ss", print_decimal (interval));[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mmain.c:1073:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1073 |     snprintf (buf, sizeof(buf), "%ss", print_decimal (interval));[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mmain.c:1081:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1081 |   if (opt.user)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1082 |     fprintf (stderr, _("Password for user %s: "), quote (opt.user));[0m
 1083 |   else[0m
      | [0;32m  } 
[0m[1mmain.c:1082:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1082 |     fprintf (stderr, _("Password for user %s: "), quote (opt.user));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mmain.c:1082:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1082 |     fprintf (stderr, _("Password for user %s: "), quote (opt.user));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mmain.c:1083:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1083 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1084 |     fprintf (stderr, _("Password: "));[0m
      | [0;1;32m                                      
[0m[1mmain.c:1084:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1084 |     fprintf (stderr, _("Password: "));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mmain.c:1084:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1084 |     fprintf (stderr, _("Password: "));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mmain.c:1108:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1108 |       fprintf (stderr, _("Cannot create pipe\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1108:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1108 |       fprintf (stderr, _("Cannot create pipe\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1115:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1115 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1115:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1115 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1124:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1124 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1124:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1124 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1139:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1139 |       fprintf (stderr, "Error spawning %s: %d\n", opt.use_askpass, status);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1139:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1139 |       fprintf (stderr, "Error spawning %s: %d\n", opt.use_askpass, status);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1148:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1148 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1148:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1148 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1158:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1158 |   if ((p = strpbrk (tmp, "\r\n")))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1159 |     bytes = p - tmp;[0m
      | [0;1;32m                    
[0m[1mmain.c:1172:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1172 |       snprintf (question, sizeof (question),  _("Username for '%s%s': "),[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mmain.c:1172:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1172 |       snprintf (question, sizeof (question),  _("Username for '%s%s': "),[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mmain.c:1176:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1176 |       if (opt.recursive)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1177 |         opt.user = xstrdup (u->user);[0m
      | [0;1;32m                                     
[0m[1mmain.c:1182:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1182 |       snprintf(question, sizeof (question), _("Password for '%s%s@%s': "),[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mmain.c:1182:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1182 |       snprintf(question, sizeof (question), _("Password for '%s%s@%s': "),[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mmain.c:1186:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1186 |       if (opt.recursive)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1187 |         opt.passwd = xstrdup (u->passwd);[0m
      | [0;1;32m                                         
[0m[1mmain.c:1261:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1261 |   if (printf (_("GNU Wget %s built on %s.\n\n"), version_string, OS_TYPE) < 0)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1262 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1269:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1269 |           if (printf ("%s ", compiled_features[i]) < 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1270 |             exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                                     
[0m[1mmain.c:1274:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1274 |       if (printf ("\n") < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1275 |         exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                                 
[0m[1mmain.c:1277:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1277 |   if (printf ("\n") < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1278 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1288:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1288 |   if (printf ("%s\n", wgetrc_title) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1289 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1294:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1294 |       if (printf (_("    %s (env)\n"), env_wgetrc) < 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1295 |         exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                                 
[0m[1mmain.c:1301:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1301 |       if (printf (_("    %s (user)\n"), user_wgetrc) < 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1302 |         exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                                 
[0m[1mmain.c:1306:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1306 |   if (printf (_("    %s (system)\n"), SYSTEM_WGETRC) < 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1307 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1313:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1313 |                              MAX_CHARS_PER_LINE) < 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1314 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1317:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1317 |   if (compilation_string != NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1318 |     if (format_and_print_line (compile_title,[0m
 1319 |                                compilation_string,[0m
 1320 |                                MAX_CHARS_PER_LINE) < 0)[0m
 1321 |       exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                               
[0m[1mmain.c:1320:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1320 |                                MAX_CHARS_PER_LINE) < 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1321 |       exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                               
[0m[1mmain.c:1323:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1323 |   if (link_string != NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1324 |     if (format_and_print_line (link_title,[0m
 1325 |                                link_string,[0m
 1326 |                                MAX_CHARS_PER_LINE) < 0)[0m
 1327 |       exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                               
[0m[1mmain.c:1326:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1326 |                                MAX_CHARS_PER_LINE) < 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1327 |       exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                               
[0m[1mmain.c:1329:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1329 |   if (printf ("\n") < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1330 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1335:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1335 | Copyright (C) %s Free Software Foundation, Inc.\n"), "2015") < 0)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1336 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1341:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1341 | There is NO WARRANTY, to the extent permitted by law.\n"), stdout) < 0)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1342 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1346:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1346 |              stdout) < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1347 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1349:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1349 |              stdout) < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1350 |     exit (WGET_EXIT_IO_FAIL);[0m
      | [0;1;32m                             
[0m[1mmain.c:1395:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1395 |   for (argstring_length = 1, i = 1; i < argc; i++)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1396 |     argstring_length += strlen (argv[i]) + 3 + 1;[0m
      | [0;1;32m                                                 
[0m[1mmain.c:1400:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1400 |       fprintf (stderr, _("Memory allocation problem\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1400:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1400 |       fprintf (stderr, _("Memory allocation problem\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1409:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1409 |       memcpy (p, argv[i], arglen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmain.c:1409:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1409 |       memcpy (p, argv[i], arglen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmain.c:1446:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1446 |               memset(&flstats, 0, sizeof(flstats));[0m
      | [0;1;32m              ^~~~~~
[0m[1mmain.c:1446:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1446 |               memset(&flstats, 0, sizeof(flstats));[0m
      | [0;1;32m              ^~~~~~
[0m[1mmain.c:1447:84: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1447 |               if (file_exists_p(optarg, &flstats) && run_wgetrc (optarg, &flstats))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 1448 |                 break;[0m
 1449 |               else[0m
      | [0;32m              } 
[0m[1mmain.c:1451:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1451 |                   fprintf (stderr, _("Exiting due to error in %s\n"), optarg);[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mmain.c:1451:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1451 |                   fprintf (stderr, _("Exiting due to error in %s\n"), optarg);[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mmain.c:1459:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1459 |   if (noconfig == false && use_userconfig == false)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1460 |     if ((ret = initialize ()))[0m
 1461 |       return ret;[0m
      | [0;1;32m                 
[0m[1mmain.c:1460:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1460 |     if ((ret = initialize ()))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1461 |       return ret;[0m
      | [0;1;32m                 
[0m[1mmain.c:1480:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1480 |               fprintf (stderr, "\n");[0m
      | [0;1;32m              ^~~~~~~
[0m[1mmain.c:1480:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1480 |               fprintf (stderr, "\n");[0m
      | [0;1;32m              ^~~~~~~
[0m[1mmain.c:1481:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1481 |               fprintf (stderr, _("Try `%s --help' for more options.\n"),[0m
      | [0;1;32m              ^~~~~~~
[0m[1mmain.c:1481:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1481 |               fprintf (stderr, _("Try `%s --help' for more options.\n"),[0m
      | [0;1;32m              ^~~~~~~
[0m[1mmain.c:1497:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1497 |           setoptval (cmdopt->data, optarg, cmdopt->long_name);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1498 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:1500:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1500 |           if (optarg)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1501 |             /* The user has specified a value -- use it. */[0m
 1502 |             setoptval (cmdopt->data, optarg, cmdopt->long_name);[0m
 1503 |           else[0m
 1504 |             {[0m
 1505 |               /* NEG is true for `--no-FOO' style boolean options. */[0m
 1506 |               bool neg = !!(val & BOOLEAN_NEG_MARKER);[0m
 1507 |               setoptval (cmdopt->data, neg ? "0" : "1", cmdopt->long_name);[0m
 1508 |             }[0m
 1509 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:1500:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1500 |           if (optarg)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1501 |             /* The user has specified a value -- use it. */[0m
 1502 |             setoptval (cmdopt->data, optarg, cmdopt->long_name);[0m
 1503 |           else[0m
      | [0;32m          } 
[0m[1mmain.c:1511:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1511 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1512 |             void (*func) (void) = (void (*) (void)) cmdopt->data;[0m
 1513 |             func ();[0m
 1514 |           }[0m
 1515 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:1517:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1517 |           setoptval ("logfile", optarg, cmdopt->long_name);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1518 |           append_to_log = true;[0m
 1519 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:1521:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1521 |           if (optarg) /* check silences static analyzer */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1522 |             run_command (optarg);[0m
 1523 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:1521:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1521 |           if (optarg) /* check silences static analyzer */[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1522 |             run_command (optarg);[0m
      | [0;1;32m                                 
[0m[1mmain.c:1529:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1529 |             for (p = optarg; p && *p; p++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m[1mmain.c:1533:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1533 |                   setoptval ("verbose", "0", cmdopt->long_name);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1534 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mmain.c:1536:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1536 |                   setoptval ("addhostdir", "0", cmdopt->long_name);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1537 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mmain.c:1539:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1539 |                   setoptval ("dirstruct", "0", cmdopt->long_name);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1540 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mmain.c:1542:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1542 |                   setoptval ("noclobber", "1", cmdopt->long_name);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1543 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mmain.c:1545:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1545 |                   setoptval ("noparent", "1", cmdopt->long_name);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1546 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mmain.c:1548:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1548 |                   fprintf (stderr, _("%s: illegal option -- `-n%c'\n"),[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mmain.c:1548:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1548 |                   fprintf (stderr, _("%s: illegal option -- `-n%c'\n"),[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mmain.c:1548:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1548 |                   fprintf (stderr, _("%s: illegal option -- `-n%c'\n"),[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1549 |                            exec_name, *p);[0m
 1550 |                   print_usage (1);[0m
 1551 |                   fprintf (stderr, "\n");[0m
 1552 |                   fprintf (stderr, _("Try `%s --help' for more options.\n"),[0m
 1553 |                            exec_name);[0m
 1554 |                   exit (WGET_EXIT_GENERIC_ERROR);[0m
      | [0;1;32m                                                
[0m      | [0;32m                                                ;} 
[0m[1mmain.c:1551:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1551 |                   fprintf (stderr, "\n");[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mmain.c:1551:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1551 |                   fprintf (stderr, "\n");[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mmain.c:1552:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1552 |                   fprintf (stderr, _("Try `%s --help' for more options.\n"),[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mmain.c:1552:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1552 |                   fprintf (stderr, _("Try `%s --help' for more options.\n"),[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mmain.c:1565:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1565 |             if (optarg)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1566 |               flag = (*optarg == '1' || c_tolower (*optarg) == 'y'[0m
 1567 |                       || (c_tolower (optarg[0]) == 'o'[0m
 1568 |                           && c_tolower (optarg[1]) == 'n'));[0m
      | [0;1;32m                                                            
[0m[1mmain.c:1574:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1574 |           setoptval ("removelisting", "0", cmdopt->long_name);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1575 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:1605:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1605 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1605:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1605 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1614:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1614 |   if (opt.reclevel == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1615 |       opt.reclevel = INFINITE_RECURSION; /* see recur.h for commentary */[0m
      | [0;1;32m                                                                         
[0m[1mmain.c:1617:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1617 |   if (opt.spider || opt.delete_after)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1618 |       opt.no_dirstruct = true;[0m
      | [0;1;32m                              
[0m[1mmain.c:1626:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1626 |       if (!opt.no_dirstruct)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1627 |         opt.dirstruct = 1;      /* normally handled by cmd_spec_recursive() */[0m
      | [0;1;32m                                                                              
[0m[1mmain.c:1630:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1630 |   if (opt.verbose == -1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1631 |     opt.verbose = !opt.quiet;[0m
      | [0;1;32m                             
[0m[1mmain.c:1633:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1633 |   if (!opt.verbose && opt.show_progress == -1)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1634 |     opt.show_progress = false;[0m
      | [0;1;32m                              
[0m[1mmain.c:1636:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1636 |   if (opt.quiet && opt.show_progress == -1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1637 |     opt.show_progress = false;[0m
      | [0;1;32m                              
[0m[1mmain.c:1642:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1642 |       fprintf (stderr, _("Can't be verbose and quiet at the same time.\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1642:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1642 |       fprintf (stderr, _("Can't be verbose and quiet at the same time.\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1648:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1648 |       fprintf (stderr, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1648:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1648 |       fprintf (stderr, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1656:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1656 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1656:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1656 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1701:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1701 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1701:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1701 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1708:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1708 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1708:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1708 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1715:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1715 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1715:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1715 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1721:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1721 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1721:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1721 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1729:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1729 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1729:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1729 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1761:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1761 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1761:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1761 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1769:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1769 |       fprintf(stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1769:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1769 |       fprintf(stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1775:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1775 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1775:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1775 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1789:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1789 |       fprintf (stderr, _("%s: missing URL\n"), exec_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1789:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1789 |       fprintf (stderr, _("%s: missing URL\n"), exec_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1791:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1791 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1791:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1791 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1794:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1794 |       fprintf (stderr, _("Try `%s --help' for more options.\n"), exec_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1794:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1794 |       fprintf (stderr, _("Try `%s --help' for more options.\n"), exec_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1818:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1818 |         opt.regex_match_fun = match_posix_regex;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1819 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mmain.c:1824:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1824 |       if (!opt.acceptregex)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1825 |         exit (WGET_EXIT_GENERIC_ERROR);[0m
      | [0;1;32m                                       
[0m[1mmain.c:1830:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1830 |       if (!opt.rejectregex)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1831 |         exit (WGET_EXIT_GENERIC_ERROR);[0m
      | [0;1;32m                                       
[0m[1mmain.c:1837:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1837 |           fprintf (stderr, _("You cannot specify both --post-data and --post-file.\n"));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1837:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1837 |           fprintf (stderr, _("You cannot specify both --post-data and --post-file.\n"));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1842:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1842 |           fprintf (stderr, _("You cannot use --post-data or --post-file along with --method. "[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1842:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1842 |           fprintf (stderr, _("You cannot use --post-data or --post-file along with --method. "[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1851:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1851 |           fprintf (stderr, _("You must specify a method through --method=HTTPMethod "[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1851:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1851 |           fprintf (stderr, _("You must specify a method through --method=HTTPMethod "[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1857:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1857 |           fprintf (stderr, _("You cannot specify both --body-data and --body-file.\n"));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1857:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1857 |           fprintf (stderr, _("You cannot specify both --body-data and --body-file.\n"));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:1866:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1866 |   if (opt.method && c_strcasecmp (opt.method, "HEAD") == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1867 |     setoptval ("spider", "1", "spider");[0m
      | [0;1;32m                                        
[0m[1mmain.c:1905:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1905 |   memset (&dummy_iri, 0, sizeof (dummy_iri));[0m
      | [0;1;32m  ^~~~~~
[0m[1mmain.c:1905:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1905 |   memset (&dummy_iri, 0, sizeof (dummy_iri));[0m
      | [0;1;32m  ^~~~~~
[0m[1mmain.c:1909:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1909 |       fprintf (stderr, _("This version does not have support for IRIs\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1909:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1909 |       fprintf (stderr, _("This version does not have support for IRIs\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mmain.c:1918:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1918 |       if (opt.passwd == NULL || opt.passwd[0] == '\0')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1919 |         exit (WGET_EXIT_GENERIC_ERROR);[0m
      | [0;1;32m                                       
[0m[1mmain.c:1926:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1926 |         fprintf (stderr,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mmain.c:1926:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1926 |         fprintf (stderr,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mmain.c:1941:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1941 |       if (logfile_changed)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1942 |         log_init (opt.lfilename, append_to_log);[0m
      | [0;1;32m                                                
[0m[1mmain.c:1948:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1948 |   if (opt.show_progress)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1949 |     set_progress_implementation (opt.progress_type);[0m
      | [0;1;32m                                                    
[0m[1mmain.c:1952:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1952 |   if (opt.warc_filename != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1953 |     warc_init ();[0m
      | [0;1;32m                 
[0m[1mmain.c:2004:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2004 |           if (fstat (fileno (output_stream), &st) == 0 && S_ISREG (st.st_mode))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 2005 |             output_stream_regular = true;[0m
      | [0;1;32m                                         
[0m[1mmain.c:2009:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2009 |           fprintf (stderr, _("-k or -r can be used together with -O only if \[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:2009:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 2009 |           fprintf (stderr, _("-k or -r can be used together with -O only if \[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:2015:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2015 |           fprintf (stderr, _("--convert-links or --convert-file-only can be used together \[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:2015:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 2015 |           fprintf (stderr, _("--convert-links or --convert-file-only can be used together \[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmain.c:2090:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2090 |   if (signal(SIGHUP, SIG_IGN) != SIG_IGN)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2091 |     signal(SIGHUP, redirect_output_signal);[0m
      | [0;1;32m                                           
[0m[1mmain.c:2130:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2130 |       if (!t)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2131 |         t = argv[optind];[0m
      | [0;1;32m                         
[0m[1mmain.c:2144:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2144 |           if (opt.use_askpass)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2145 |             use_askpass (url_parsed);[0m
      | [0;1;32m                                     
[0m[1mmain.c:2179:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2179 |               if (unlink (filename))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2180 |                 logprintf (LOG_NOTQUIET, "unlink: %s\n", strerror (errno));[0m
      | [0;1;32m                                                                           
[0m[1mmain.c:2189:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2189 |       if (t != argv[optind])[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2190 |         xfree (t);[0m
      | [0;1;32m                  
[0m[1mmain.c:2200:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2200 |       if (!count)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2201 |         logprintf (LOG_NOTQUIET, _("No URLs found in %s.\n"),[0m
 2202 |                    opt.input_filename);[0m
      | [0;1;32m                                       
[0m[1mmain.c:2257:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2257 |   if (opt.recursive && opt.spider)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2258 |     print_broken_links ();[0m
      | [0;1;32m                          
[0m[1mmain.c:2286:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2286 |       if (opt.quota && total_downloaded_bytes > opt.quota)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2287 |         logprintf (LOG_NOTQUIET,[0m
 2288 |                    _("Download quota of %s EXCEEDED!\n"),[0m
 2289 |                    human_readable (opt.quota, 10, 1));[0m
      | [0;1;32m                                                      
[0m[1mmain.c:2292:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2292 |   if (opt.cookies_output)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2293 |     save_cookies ();[0m
      | [0;1;32m                    
[0m[1mmain.c:2300:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2300 |   if ((opt.convert_links || opt.convert_file_only) && !opt.delete_after)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 2301 |     convert_all_links ();[0m
      | [0;1;32m                         
[0m161 warnings generated.
Suppressed 30 warnings (30 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[149/164][127.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmplzu48ws3.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/convert.c
[1mconvert.c:70:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |   if (!downloaded_set || (cnt = hash_table_count (downloaded_set)) == 0)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   71 |     return;[0m
      | [0;1;32m           
[0m[1mconvert.c:73:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |   if (cnt <= (int) countof (arr))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   74 |     file_array = arr;[0m
   75 |   else[0m
      | [0;32m  } 
[0m[1mconvert.c:75:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   76 |     file_array = xmalloc (cnt * sizeof (arr[0]));[0m
      | [0;1;32m                                                 
[0m[1mconvert.c:128:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |           if (!u)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  129 |               continue;[0m
      | [0;1;32m                       
[0m[1mconvert.c:152:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |               if (!cur_url->link_complete_p)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  153 |                 cur_url->convert = CO_CONVERT_TO_COMPLETE;[0m
      | [0;1;32m                                                          
[0m[1mconvert.c:170:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |   if (file_array != arr)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  171 |     xfree (file_array);[0m
      | [0;1;32m                       
[0m[1mconvert.c:238:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |     for (dry = links; dry; dry = dry->next)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  239 |       if (dry->convert != CO_NOCONVERT)[0m
  240 |         ++dry_count;[0m
      | [0;1;32m                    
[0m[1mconvert.c:239:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |       if (dry->convert != CO_NOCONVERT)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  240 |         ++dry_count;[0m
      | [0;1;32m                    
[0m[1mconvert.c:258:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |   if (opt.backup_converted && downloaded_file_return)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  259 |     write_backup_file (file, downloaded_file_return);[0m
      | [0;1;32m                                                     
[0m[1mconvert.c:310:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  310 |           if (link->local_name) {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mconvert.c:315:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |             if (link->link_css_p || link->link_noquote_html_p)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  316 |               p = replace_plain (p, link->size, fp, quoted_newname);[0m
  317 |             else if (!link->link_refresh_p)[0m
      | [0;32m            } 
[0m[1mconvert.c:317:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |             else if (!link->link_refresh_p)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  318 |               p = replace_attr (p, link->size, fp, quoted_newname);[0m
  319 |             else[0m
      | [0;32m            } 
[0m[1mconvert.c:319:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  320 |               p = replace_attr_refresh_hack (p, link->size, fp, quoted_newname,[0m
  321 |                                              link->refresh_timeout);[0m
      | [0;1;32m                                                                    
[0m[1mconvert.c:336:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |             if (link->link_css_p || link->link_noquote_html_p)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  337 |               p = replace_plain (p, link->size, fp, quoted_newname);[0m
  338 |             else if (!link->link_refresh_p)[0m
      | [0;32m            } 
[0m[1mconvert.c:338:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |             else if (!link->link_refresh_p)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  339 |               p = replace_attr (p, link->size, fp, quoted_newname);[0m
  340 |             else[0m
      | [0;32m            } 
[0m[1mconvert.c:340:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  341 |               p = replace_attr_refresh_hack (p, link->size, fp, quoted_newname,[0m
  342 |                                              link->refresh_timeout);[0m
      | [0;1;32m                                                                    
[0m[1mconvert.c:359:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |             if (link->link_css_p || link->link_noquote_html_p)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  360 |               p = replace_plain (p, link->size, fp, newlink);[0m
  361 |             else if (!link->link_refresh_p)[0m
      | [0;32m            } 
[0m[1mconvert.c:361:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |             else if (!link->link_refresh_p)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  362 |               p = replace_attr (p, link->size, fp, quoted_newlink);[0m
  363 |             else[0m
      | [0;32m            } 
[0m[1mconvert.c:363:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  364 |               p = replace_attr_refresh_hack (p, link->size, fp, quoted_newlink,[0m
  365 |                                              link->refresh_timeout);[0m
      | [0;1;32m                                                                    
[0m[1mconvert.c:376:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  376 |           p = replace_attr (p, link->size, fp, "");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  377 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mconvert.c:379:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  379 |           abort ();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  380 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mconvert.c:385:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |   if (p - fm->content < fm->length)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  386 |     fwrite (p, 1, fm->length - (p - fm->content), fp);[0m
      | [0;1;32m                                                      
[0m[1mconvert.c:423:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |       if (*b == '/')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  424 |         start = (b - basefile) + 1;[0m
      | [0;1;32m                                   
[0m[1mconvert.c:444:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |       if (*b == '/')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  445 |         ++basedirs;[0m
      | [0;1;32m                   
[0m[1mconvert.c:451:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  451 |       memcpy (link, "./", 2);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconvert.c:451:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  451 |       memcpy (link, "./", 2);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconvert.c:452:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  452 |       strcpy (link + 2, linkfile);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconvert.c:452:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  452 |       strcpy (link + 2, linkfile);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconvert.c:458:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |       for (i = 0; i < basedirs; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  459 |         memcpy (link + 3 * i, "../", 3);[0m
      | [0;1;32m                                        
[0m[1mconvert.c:459:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  459 |         memcpy (link + 3 * i, "../", 3);[0m
      | [0;1;32m        ^~~~~~
[0m[1mconvert.c:459:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  459 |         memcpy (link + 3 * i, "../", 3);[0m
      | [0;1;32m        ^~~~~~
[0m[1mconvert.c:460:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  460 |       strcpy (link + 3 * i, linkfile);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconvert.c:460:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  460 |       strcpy (link + 3 * i, linkfile);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconvert.c:505:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  505 |   if (org_basename)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  506 |     org_basename++;[0m
  507 |   else[0m
      | [0;32m  } 
[0m[1mconvert.c:507:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  508 |     org_basename = url;[0m
      | [0;1;32m                       
[0m[1mconvert.c:511:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |   if (local_basename)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  512 |     local_basename++;[0m
  513 |   else[0m
      | [0;32m  } 
[0m[1mconvert.c:513:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  514 |     local_basename = url;[0m
      | [0;1;32m                         
[0m[1mconvert.c:520:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (strcmp (org_basename, local_basename) == 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  521 |     result = url;[0m
  522 |   else[0m
      | [0;32m  } 
[0m[1mconvert.c:544:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  544 |   if (!converted_files)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  545 |     converted_files = make_string_hash_table (0);[0m
      | [0;1;32m                                                 
[0m[1mconvert.c:559:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |       if (filename_len < sizeof (buf) - 5)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  560 |         filename_plus_orig_suffix = buf;[0m
  561 |       else[0m
      | [0;32m      } 
[0m[1mconvert.c:561:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  562 |         filename_plus_orig_suffix = xmalloc (filename_len + 5 + 1);[0m
      | [0;1;32m                                                                   
[0m[1mconvert.c:574:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  574 |           memcpy (filename_plus_orig_suffix, file, filename_len - 4);[0m
      | [0;1;32m          ^~~~~~
[0m[1mconvert.c:574:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  574 |           memcpy (filename_plus_orig_suffix, file, filename_len - 4);[0m
      | [0;1;32m          ^~~~~~
[0m[1mconvert.c:575:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  575 |           memcpy (filename_plus_orig_suffix + filename_len - 4, "orig", 5);[0m
      | [0;1;32m          ^~~~~~
[0m[1mconvert.c:575:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  575 |           memcpy (filename_plus_orig_suffix + filename_len - 4, "orig", 5);[0m
      | [0;1;32m          ^~~~~~
[0m[1mconvert.c:580:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  580 |           memcpy (filename_plus_orig_suffix, file, filename_len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mconvert.c:580:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  580 |           memcpy (filename_plus_orig_suffix, file, filename_len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mconvert.c:581:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  581 |           strcpy (filename_plus_orig_suffix + filename_len, ORIG_SFX);[0m
      | [0;1;32m          ^~~~~~
[0m[1mconvert.c:581:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  581 |           strcpy (filename_plus_orig_suffix + filename_len, ORIG_SFX);[0m
      | [0;1;32m          ^~~~~~
[0m[1mconvert.c:585:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |       if (rename (file, filename_plus_orig_suffix) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  586 |         logprintf (LOG_NOTQUIET, _("Cannot back up %s as %s: %s\n"),[0m
  587 |                    file, filename_plus_orig_suffix, strerror (errno));[0m
      | [0;1;32m                                                                      
[0m[1mconvert.c:589:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |       if (filename_plus_orig_suffix != buf)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  590 |         xfree (filename_plus_orig_suffix);[0m
      | [0;1;32m                                          
[0m[1mconvert.c:653:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |   if (find_fragment (p, size, &frag_beg, &frag_end))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  654 |     fwrite (frag_beg, 1, frag_end - frag_beg, fp);[0m
      | [0;1;32m                                                  
[0m[1mconvert.c:656:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |   if (quote_flag)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  657 |     ++p;[0m
      | [0;1;32m        
[0m[1mconvert.c:674:19: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  674 |   if (((unsigned) snprintf ([0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mconvert.c:674:19: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  674 |   if (((unsigned) snprintf ([0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mconvert.c:705:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  705 |           saw_amp = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  706 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mconvert.c:708:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  708 |           if (!saw_amp)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  709 |             {[0m
  710 |               *bp = beg;[0m
  711 |               *ep = end;[0m
  712 |               return true;[0m
  713 |             }[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mconvert.c:716:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  716 |           saw_amp = false;[0m
      | [0;1;32m          ^              
[0m      | [0;32m          {              ;} 
[0m[1mconvert.c:745:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  745 |   if (!any)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  746 |     return no_html_quote ? strdup (file) : html_quote_string (file);[0m
      | [0;1;32m                                                                    
[0m[1mconvert.c:751:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |   if (tolen < sizeof (buf))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  752 |     to = newname = buf;[0m
  753 |   else[0m
      | [0;32m  } 
[0m[1mconvert.c:753:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  754 |     to = newname = xmalloc (tolen + 1);[0m
      | [0;1;32m                                       
[0m[1mconvert.c:756:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |   for (from = file; *from; from++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m[1mconvert.c:760:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  760 |         *to++ = '%';[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  761 |         *to++ = '2';[0m
  762 |         *to++ = '5';[0m
  763 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mconvert.c:765:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  765 |         *to++ = '%';[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  766 |         *to++ = '2';[0m
  767 |         *to++ = '3';[0m
  768 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mconvert.c:770:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  770 |         *to++ = '%';[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  771 |         *to++ = '3';[0m
  772 |         *to++ = 'B';[0m
  773 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mconvert.c:775:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  775 |         if (opt.adjust_extension)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  776 |           {[0m
  777 |             *to++ = '%';[0m
  778 |             *to++ = '3';[0m
  779 |             *to++ = 'F';[0m
  780 |             break;[0m
  781 |           }[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mconvert.c:784:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  784 |         *to++ = *from;[0m
      | [0;1;32m        ^            
[0m      | [0;32m        {            ;} 
[0m[1mconvert.c:788:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |   if (newname == buf)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  789 |     return no_html_quote ? strdup (newname) : html_quote_string (newname);[0m
      | [0;1;32m                                                                          
[0m[1mconvert.c:791:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |   if (no_html_quote)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  792 |     return newname;[0m
      | [0;1;32m                   
[0m[1mconvert.c:827:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  827 |   for (i = 0; *s1 && *s2 && *s1 == *s2; s1++, s2++, i++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  828 |     ;[0m
      | [0;1;32m     
[0m[1mconvert.c:829:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |   if (i == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  830 |     /* Strings differ at the very beginning -- bail out.  We need to[0m
  831 |        check this explicitly to avoid `lng - 1' reading outside the[0m
  832 |        array.  */[0m
  833 |     return false;[0m
      | [0;1;32m                 
[0m[1mconvert.c:835:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  835 |   if (!*s1 && !*s2)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  836 |     /* Both strings hit EOF -- strings are equal. */[0m
  837 |     return true;[0m
  838 |   else if (*s1 && *s2)[0m
      | [0;32m  } 
[0m[1mconvert.c:838:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  838 |   else if (*s1 && *s2)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  839 |     /* Strings are randomly different, e.g. "/foo/bar" and "/foo/qux". */[0m
  840 |     return false;[0m
  841 |   else if (*s1)[0m
      | [0;32m  } 
[0m[1mconvert.c:841:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  841 |   else if (*s1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  842 |     /* S1 is the longer one. */[0m
  843 |     lng = s1;[0m
  844 |   else[0m
      | [0;32m  } 
[0m[1mconvert.c:844:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  845 |     /* S2 is the longer one. */[0m
  846 |     lng = s2;[0m
      | [0;1;32m             
[0m[1mconvert.c:852:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (*lng != '/')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  853 |     /* The right-hand case. */[0m
  854 |     --lng;[0m
      | [0;1;32m          
[0m[1mconvert.c:856:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (*lng == '/' && *(lng + 1) == '\0')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  857 |     /* foo  */[0m
  858 |     /* foo/ */[0m
  859 |     return true;[0m
      | [0;1;32m                
[0m[1mconvert.c:911:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |       if (0 == strcmp (url, old_url))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  912 |         /* We have somehow managed to download the same URL twice.[0m
  913 |            Nothing to do.  */[0m
  914 |         return;[0m
      | [0;1;32m               
[0m[1mconvert.c:917:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  917 |           && !hash_table_contains (dl_url_file_map, url))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  918 |         /* The two URLs differ only in the "index.html" ending.  For[0m
  919 |            example, one is "http://www.server.com/", and the other is[0m
  920 |            "http://www.server.com/index.html".  Don't remove the old[0m
  921 |            one, just add the new one as a non-canonical entry.  */[0m
  922 |         goto url_only;[0m
      | [0;1;32m                      
[0m[1mconvert.c:986:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  986 |   if (!hash_table_contains (dl_url_file_map, from))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  987 |     hash_table_put (dl_url_file_map, xstrdup (from), xstrdup (file));[0m
      | [0;1;32m                                                                     
[0m[1mconvert.c:999:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  999 |   if (!hash_table_get_pair (dl_file_url_map, file, &old_file, &old_url))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1000 |     return;[0m
      | [0;1;32m           
[0m[1mconvert.c:1013:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1013 |   if (!downloaded_html_set)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1014 |     downloaded_html_set = make_string_hash_table (0);[0m
      | [0;1;32m                                                     
[0m[1mconvert.c:1023:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |   if (!downloaded_css_set)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1024 |     downloaded_css_set = make_string_hash_table (0);[0m
      | [0;1;32m                                                    
[0m[1mconvert.c:1085:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1085 |       return &v1;[0m
      | [0;1;32m      ^         
[0m      | [0;32m      {         ;} 
[0m[1mconvert.c:1087:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1087 |       return &v2;[0m
      | [0;1;32m      ^         
[0m      | [0;32m      {         ;} 
[0m[1mconvert.c:1089:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1089 |       return &v3;[0m
      | [0;1;32m      ^         
[0m      | [0;32m      {         ;} 
[0m[1mconvert.c:1091:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1091 |       return &v4;[0m
      | [0;1;32m      ^         
[0m      | [0;32m      {         ;} 
[0m[1mconvert.c:1118:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1118 |       if (!downloaded_files_hash)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1119 |         return FILE_NOT_ALREADY_DOWNLOADED;[0m
      | [0;1;32m                                           
[0m[1mconvert.c:1121:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |       if (!ptr)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1122 |         return FILE_NOT_ALREADY_DOWNLOADED;[0m
      | [0;1;32m                                           
[0m[1mconvert.c:1126:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1126 |   if (!downloaded_files_hash)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1127 |     downloaded_files_hash = make_string_hash_table (0);[0m
      | [0;1;32m                                                       
[0m[1mconvert.c:1130:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1130 |   if (ptr)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1131 |     return *ptr;[0m
      | [0;1;32m                
[0m[1mconvert.c:1177:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |       if (*s == '&')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1178 |         i += 4;                 /* `amp;' */[0m
 1179 |       else if (*s == '<' || *s == '>')[0m
      | [0;32m      } 
[0m[1mconvert.c:1179:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1179 |       else if (*s == '<' || *s == '>')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1180 |         i += 3;                 /* `lt;' and `gt;' */[0m
 1181 |       else if (*s == '\"')[0m
      | [0;32m      } 
[0m[1mconvert.c:1181:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1181 |       else if (*s == '\"')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1182 |         i += 5;                 /* `quot;' */[0m
 1183 |       else if (*s == ' ')[0m
      | [0;32m      } 
[0m[1mconvert.c:1183:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1183 |       else if (*s == ' ')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1184 |         i += 4;                 /* #32; */[0m
      | [0;1;32m                                          
[0m[1mconvert.c:1193:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1193 |           *p++ = '&';[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1194 |           *p++ = 'a';[0m
 1195 |           *p++ = 'm';[0m
 1196 |           *p++ = 'p';[0m
 1197 |           *p++ = ';';[0m
 1198 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mconvert.c:1201:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1201 |           *p++ = (*s == '<' ? 'l' : 'g');[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1202 |           *p++ = 't';[0m
 1203 |           *p++ = ';';[0m
 1204 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mconvert.c:1206:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1206 |           *p++ = '&';[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1207 |           *p++ = 'q';[0m
 1208 |           *p++ = 'u';[0m
 1209 |           *p++ = 'o';[0m
 1210 |           *p++ = 't';[0m
 1211 |           *p++ = ';';[0m
 1212 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mconvert.c:1214:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1214 |           *p++ = '&';[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1215 |           *p++ = '#';[0m
 1216 |           *p++ = '3';[0m
 1217 |           *p++ = '2';[0m
 1218 |           *p++ = ';';[0m
 1219 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mconvert.c:1221:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1221 |           *p++ = *s;[0m
      | [0;1;32m          ^        
[0m      | [0;32m          {        ;} 
[0m118 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[150/164][118.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp6xv_or1i.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/mktime.c
[1mmktime.c:282:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |   if (errno != EOVERFLOW)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  283 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmktime.c:295:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |       if (mid == ok || mid == bad)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  296 |         break;[0m
      | [0;1;32m              
[0m[1mmktime.c:297:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |       if (convert_time (convert, mid, tp))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  298 |         ok = mid, oktm = *tp;[0m
  299 |       else if (errno != EOVERFLOW)[0m
      | [0;32m      } 
[0m[1mmktime.c:299:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |       else if (errno != EOVERFLOW)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  300 |         return NULL;[0m
  301 |       else[0m
      | [0;32m      } 
[0m[1mmktime.c:301:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  302 |         bad = mid;[0m
      | [0;1;32m                  
[0m[1mmktime.c:305:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |   if (oktm.tm_sec < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  306 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmktime.c:374:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |       if (sec < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  375 |         sec = 0;[0m
      | [0;1;32m                
[0m[1mmktime.c:376:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |       if (59 < sec)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  377 |         sec = 59;[0m
      | [0;1;32m                 
[0m[1mmktime.c:393:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |       if (! ranged_convert (convert, &t, &tm))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  394 |         return -1;[0m
      | [0;1;32m                  
[0m[1mmktime.c:396:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |       if (dt == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  397 |         break;[0m
      | [0;1;32m              
[0m[1mmktime.c:403:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |                   : (isdst != 0) != (tm.tm_isdst != 0))))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  404 |         /* We can't possibly find a match, as we are oscillating[0m
  405 |            between two values.  The requested time probably falls[0m
  406 |            within a spring-forward gap of size DT.  Follow the common[0m
  407 |            practice in this case, which is to return a time that is DT[0m
  408 |            away from the requested time, preferring a time whose[0m
  409 |            tm_isdst differs from the requested value.  (If no tm_isdst[0m
  410 |            was requested and only one of the two values has a nonzero[0m
  411 |            tm_isdst, prefer that value.)  In practice, this is more[0m
  412 |            useful than returning -1.  */[0m
  413 |         goto offset_found;[0m
      | [0;1;32m                          
[0m[1mmktime.c:465:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |       for (delta = stride; delta < delta_bound; delta += stride)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m[1mmktime.c:472:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |                 if (! ranged_convert (convert, &ot, &otm))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  473 |                   return -1;[0m
      | [0;1;32m                            
[0m[1mmktime.c:487:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |                         if (errno != EOVERFLOW)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  488 |                           return -1;[0m
      | [0;1;32m                                    
[0m[1mmktime.c:496:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |       if (mktime_min <= t && t <= mktime_max && convert_time (convert, t, &tm))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  497 |         goto offset_found;[0m
      | [0;1;32m                          
[0m[1mmktime.c:523:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |       if (! convert_time (convert, t, &tm))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  524 |         return -1;[0m
      | [0;1;32m                  
[0m18 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[151/164][117.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp67yqu425.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/lib/hash.c
[1mhash.c:172:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  173 |             bucket_length++;[0m
      | [0;1;32m                            
[0m[1mhash.c:175:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |           if (bucket_length > max_bucket_length)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  176 |             max_bucket_length = bucket_length;[0m
      | [0;1;32m                                              
[0m[1mhash.c:201:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  202 |             n_entries++;[0m
      | [0;1;32m                        
[0m[1mhash.c:206:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |   if (n_buckets_used == table->n_buckets_used && n_entries == table->n_entries)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  207 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:220:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:220:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:235:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (! (n < table->n_buckets))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  236 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:246:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  247 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:249:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |   for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:250:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:263:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (table->n_entries == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  264 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:266:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |   for (bucket = table->bucket; ; bucket++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  267 |     if (! (bucket < table->bucket_limit))[0m
  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:267:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |     if (! (bucket < table->bucket_limit))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
      | [0;32m    } 
[0m[1mhash.c:269:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |     else if (bucket->data)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:283:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |       if (cursor->data == entry && cursor->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  284 |         return cursor->next->data;[0m
      | [0;1;32m                                  
[0m[1mhash.c:290:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |   while (++bucket < table->bucket_limit)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  291 |     if (bucket->data)[0m
  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:291:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |     if (bucket->data)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:312:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |               if (counter >= buffer_size)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  313 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:336:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |               if (! processor (cursor->data, processor_data))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  337 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:385:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |   for (; (ch = *string); string++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  386 |     value = (value * 31 + ch) % n_buckets;[0m
      | [0;1;32m                                          
[0m[1mhash.c:418:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   if (candidate < 10)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  419 |     candidate = 10;[0m
      | [0;1;32m                   
[0m[1mhash.c:424:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |   while (SIZE_MAX != candidate && !is_prime (candidate))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  425 |     candidate += 2;[0m
      | [0;1;32m                   
[0m[1mhash.c:468:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if (tuning == &default_tuning)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  469 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:484:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |       && tuning->shrink_threshold + epsilon < tuning->growth_threshold)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  485 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:501:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if ((float) SIZE_MAX <= new_candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  502 |         return 0;[0m
      | [0;1;32m                 
[0m[1mhash.c:506:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (xalloc_oversized (candidate, sizeof (struct hash_entry *)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  507 |     return 0;[0m
      | [0;1;32m             
[0m[1mhash.c:518:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |   if (hasher == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  519 |     hasher = raw_hasher;[0m
      | [0;1;32m                        
[0m[1mhash.c:520:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (comparator == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  521 |     comparator = raw_comparator;[0m
      | [0;1;32m                                
[0m[1mhash.c:524:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |   if (table == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  525 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:527:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |   if (!tuning)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  528 |     tuning = &default_tuning;[0m
      | [0;1;32m                             
[0m[1mhash.c:541:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |   if (!table->n_buckets)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  542 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:545:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (table->bucket == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  546 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:581:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |               if (table->data_freer)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  582 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:593:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |           if (table->data_freer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  594 |             table->data_freer (bucket->data);[0m
      | [0;1;32m                                             
[0m[1mhash.c:618:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |               for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  619 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:708:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  709 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:774:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   for (bucket = src->bucket; bucket < src->bucket_limit; bucket++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m[1mhash.c:814:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |         if (safe)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  815 |           continue;[0m
      | [0;1;32m                   
[0m[1mhash.c:824:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |             if (new_entry == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  825 |               return false;[0m
      | [0;1;32m                           
[0m[1mhash.c:850:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |   if (!new_size)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  851 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:852:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (new_size == table->n_buckets)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  853 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:856:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (new_table->bucket == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  857 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:915:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  915 |          && transfer_entries (table, new_table, false)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  916 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:932:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  932 |   if (! entry)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  933 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:938:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  938 |       if (matched_ent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  939 |         *matched_ent = data;[0m
      | [0;1;32m                            
[0m[1mhash.c:964:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |           if ((float) SIZE_MAX <= candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  965 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:968:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |           if (!hash_rehash (table, candidate))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  969 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:972:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |           if (hash_find_entry (table, entry, &bucket, false) != NULL)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  973 |             abort ();[0m
      | [0;1;32m                     
[0m[1mhash.c:983:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |       if (new_entry == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  984 |         return -1;[0m
      | [0;1;32m                  
[0m[1mhash.c:1021:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |   if (!data)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1022 |     return NULL;[0m
      | [0;1;32m                
[0m56 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[152/164][113.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpqf34oomd.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/host.c
[1mhost.c:117:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  117 |       for (i = 0; i < al->count; i++)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  118 |         {[0m
  119 |           ip_address *cur = al->addresses + i;[0m
  120 |           if (cur->family == AF_INET[0m
  121 |               && (cur->data.d4.s_addr == ip->data.d4.s_addr))[0m
  122 |             return true;[0m
  123 |         }[0m
  124 |       return false;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mhost.c:121:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |               && (cur->data.d4.s_addr == ip->data.d4.s_addr))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  122 |             return true;[0m
      | [0;1;32m                        
[0m[1mhost.c:127:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |       for (i = 0; i < al->count; i++)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  128 |         {[0m
  129 |           ip_address *cur = al->addresses + i;[0m
  130 |           if (cur->family == AF_INET6[0m
  131 | #ifdef HAVE_SOCKADDR_IN6_SCOPE_ID[0m
  132 |               && cur->ipv6_scope == ip->ipv6_scope[0m
  133 | #endif[0m
  134 |               && IN6_ARE_ADDR_EQUAL (&cur->data.d6, &ip->data.d6))[0m
  135 |             return true;[0m
  136 |         }[0m
  137 |       return false;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mhost.c:134:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |               && IN6_ARE_ADDR_EQUAL (&cur->data.d6, &ip->data.d6))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  135 |             return true;[0m
      | [0;1;32m                        
[0m[1mhost.c:140:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  140 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mhost.c:163:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (al->faulty >= al->count)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  164 |     /* All addresses have been proven faulty.  Since there's not much[0m
  165 |        sense in returning the user an empty address list the next[0m
  166 |        time, we'll rather make them all clean, so that they can be[0m
  167 |        retried anew.  */[0m
  168 |     al->faulty = 0;[0m
      | [0;1;32m                   
[0m[1mhost.c:202:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |   for (ptr = ai; ptr != NULL ; ptr = ptr->ai_next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  203 |     if (ptr->ai_family == AF_INET || ptr->ai_family == AF_INET6)[0m
  204 |       ++cnt;[0m
      | [0;1;32m            
[0m[1mhost.c:203:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |     if (ptr->ai_family == AF_INET || ptr->ai_family == AF_INET6)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  204 |       ++cnt;[0m
      | [0;1;32m            
[0m[1mhost.c:205:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |   if (cnt == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  206 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhost.c:214:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   for (ptr = ai; ptr != NULL; ptr = ptr->ai_next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m[1mhost.c:428:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |   if (!inet_ntop (addr->family, IP_INADDR_DATA (addr), buf, sizeof buf))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  429 |     snprintf (buf, sizeof buf, "<error: %s>", strerror (errno));[0m
      | [0;1;32m                                                                
[0m[1mhost.c:429:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  429 |     snprintf (buf, sizeof buf, "<error: %s>", strerror (errno));[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mhost.c:429:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  429 |     snprintf (buf, sizeof buf, "<error: %s>", strerror (errno));[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mhost.c:452:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |           if (val > 255)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  453 |             return false;[0m
      | [0;1;32m                         
[0m[1mhost.c:456:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |               if (++octets > 4)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  457 |                 return false;[0m
      | [0;1;32m                             
[0m[1mhost.c:463:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |           if (octets == 4)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  464 |             return false;[0m
      | [0;1;32m                         
[0m[1mhost.c:468:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  469 |         return false;[0m
      | [0;1;32m                     
[0m[1mhost.c:471:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |   if (octets < 4)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  472 |     return false;[0m
      | [0;1;32m                 
[0m[1mhost.c:496:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |   if (str == end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  497 |     return false;[0m
      | [0;1;32m                 
[0m[1mhost.c:503:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |       if (str == end || *str != ':')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  504 |         return false;[0m
      | [0;1;32m                     
[0m[1mhost.c:520:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |           if (val > 0xffff)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  521 |             return false;[0m
      | [0;1;32m                         
[0m[1mhost.c:532:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |               if (colonp != NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  533 |                 return false;[0m
      | [0;1;32m                             
[0m[1mhost.c:537:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |           else if (str == end)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  538 |             return false;[0m
      | [0;1;32m                         
[0m[1mhost.c:539:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |           if (tp > ns_in6addrsz - ns_int16sz)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  540 |             return false;[0m
      | [0;1;32m                         
[0m[1mhost.c:561:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |       if (tp > ns_in6addrsz - ns_int16sz)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  562 |         return false;[0m
      | [0;1;32m                     
[0m[1mhost.c:568:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  568 |       if (tp == ns_in6addrsz)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  569 |         return false;[0m
      | [0;1;32m                     
[0m[1mhost.c:573:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  573 |   if (tp != ns_in6addrsz)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  574 |     return false;[0m
      | [0;1;32m                 
[0m[1mhost.c:595:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |   if (!host_name_addresses_map)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  596 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhost.c:613:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |   if (!host_name_addresses_map)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  614 |     host_name_addresses_map = make_nocase_string_hash_table (0);[0m
      | [0;1;32m                                                                
[0m[1mhost.c:623:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |       for (i = 0; i < al->count; i++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  624 |         debug_logprintf (" %s", print_address (al->addresses + i));[0m
      | [0;1;32m                                                                   
[0m[1mhost.c:636:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |   if (!host_name_addresses_map)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  637 |     return;[0m
      | [0;1;32m           
[0m[1mhost.c:810:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |     if (is_valid_ipv4_address (host, end) || is_valid_ipv6_address (host, end))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  811 |       numeric_address = true;[0m
      | [0;1;32m                             
[0m[1mhost.c:819:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |   if ((flags & LH_BIND) || numeric_address)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  820 |     use_cache = false;[0m
      | [0;1;32m                      
[0m[1mhost.c:831:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |           if (al)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  832 |             return al;[0m
      | [0;1;32m                      
[0m[1mhost.c:834:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  834 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  835 |         cache_remove (host);[0m
      | [0;1;32m                            
[0m[1mhost.c:883:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  883 |       xzero (hints);[0m
      | [0;1;32m      ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhost.c:883:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  883 |       xzero (hints);[0m
      | [0;1;32m      ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhost.c:885:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  885 |       if (opt.ipv4_only)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  886 |         hints.ai_family = AF_INET;[0m
  887 |       else if (opt.ipv6_only)[0m
      | [0;32m      } 
[0m[1mhost.c:887:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |       else if (opt.ipv6_only)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  888 |         hints.ai_family = AF_INET6;[0m
  889 |       else[0m
      | [0;32m      } 
[0m[1mhost.c:889:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  889 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  890 |         /* We tried using AI_ADDRCONFIG, but removed it because: it[0m
  891 |            misinterprets IPv6 loopbacks, it is broken on AIX 5.1, and[0m
  892 |            it's unneeded since we sort the addresses anyway.  */[0m
  893 |         hints.ai_family = AF_UNSPEC;[0m
      | [0;1;32m                                    
[0m[1mhost.c:895:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  895 |       if (flags & LH_BIND)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  896 |         hints.ai_flags |= AI_PASSIVE;[0m
      | [0;1;32m                                     
[0m[1mhost.c:914:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  914 |           if (!silent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  915 |             logprintf (LOG_VERBOSE, _ ("failed: %s.\n"),[0m
  916 |                        err != EAI_SYSTEM ? gai_strerror (err) : strerror (errno));[0m
      | [0;1;32m                                                                                  
[0m[1mhost.c:933:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  933 |   if (al->count > 1 && opt.prefer_family != prefer_none)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  934 |     stable_sort (al->addresses, al->count, sizeof (ip_address),[0m
  935 |                  opt.prefer_family == prefer_ipv4[0m
  936 |                  ? cmp_prefer_ipv4 : cmp_prefer_ipv6);[0m
      | [0;1;32m                                                      
[0m[1mhost.c:972:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |       if (!opt.show_all_dns_entries && printmax > 3)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  973 |           printmax = 3;[0m
      | [0;1;32m                       
[0m[1mhost.c:978:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  978 |           if (i < printmax - 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  979 |             logputs (LOG_VERBOSE, ", ");[0m
      | [0;1;32m                                        
[0m[1mhost.c:981:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  981 |       if (printmax != al->count)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  982 |         logputs (LOG_VERBOSE, ", ...");[0m
      | [0;1;32m                                       
[0m[1mhost.c:987:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  987 |   if (use_cache)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  988 |     cache_store (host, al);[0m
      | [0;1;32m                           
[0m[1mhost.c:1001:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1001 |       if (!sufmatch ((const char **)opt.domains, u->host))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1002 |         return false;[0m
      | [0;1;32m                     
[0m[1mhost.c:1006:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1006 |       if (sufmatch ((const char **)opt.exclude_domains, u->host))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1007 |         return false;[0m
      | [0;1;32m                     
[0m[1mhost.c:1027:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |       if (lw < j)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1028 |         continue; /* what is no (sub)domain of list[i] */[0m
      | [0;1;32m                                                         
[0m[1mhost.c:1030:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1030 |       for (k = lw; j >= 0 && k >= 0; j--, k--)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1031 |         if (c_tolower (list[i][j]) != c_tolower (what[k]))[0m
 1032 |           break;[0m
      | [0;1;32m                
[0m[1mhost.c:1031:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1031 |         if (c_tolower (list[i][j]) != c_tolower (what[k]))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1032 |           break;[0m
      | [0;1;32m                
[0m[1mhost.c:1039:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1039 |       if (j == -1 && (k == -1 || what[k] == '.' || list[i][0] == '.'))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1040 |         return true;[0m
      | [0;1;32m                    
[0m[1mhost.c:1075:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1075 |   if (is_valid_ipv4_address (name, endp))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1076 |     return true;[0m
      | [0;1;32m                
[0m[1mhost.c:1078:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1078 |   if (is_valid_ipv6_address (name, endp))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1079 |     return true;[0m
      | [0;1;32m                
[0m82 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[153/164][157.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp6nm2_6kg.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/log.c
[1mlog.c:183:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  183 |   if (!len)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  184 |     return;[0m
      | [0;1;32m           
[0m[1mlog.c:193:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |       if (log_line_current == -1)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  194 |         log_line_current = 0;[0m
  195 |       else[0m
      | [0;32m      } 
[0m[1mlog.c:195:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  196 |         free_log_line (log_line_current);[0m
      | [0;1;32m                                         
[0m[1mlog.c:205:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  205 |           memcpy (ln->static_line, start, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mlog.c:205:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  205 |           memcpy (ln->static_line, start, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mlog.c:223:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  223 |           memcpy (ln->malloced_line + old_len, start, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mlog.c:223:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  223 |           memcpy (ln->malloced_line + old_len, start, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mlog.c:236:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  236 |               memcpy (ln->malloced_line, ln->static_line,[0m
      | [0;1;32m              ^~~~~~
[0m[1mlog.c:236:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  236 |               memcpy (ln->malloced_line, ln->static_line,[0m
      | [0;1;32m              ^~~~~~
[0m[1mlog.c:238:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  238 |               memcpy (ln->malloced_line + old_len, start, len);[0m
      | [0;1;32m              ^~~~~~
[0m[1mlog.c:238:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  238 |               memcpy (ln->malloced_line + old_len, start, len);[0m
      | [0;1;32m              ^~~~~~
[0m[1mlog.c:246:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  246 |               memcpy (ln->static_line + old_len, start, len);[0m
      | [0;1;32m              ^~~~~~
[0m[1mlog.c:246:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  246 |               memcpy (ln->static_line + old_len, start, len);[0m
      | [0;1;32m              ^~~~~~
[0m[1mlog.c:253:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |   if (!trailing_line)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  254 |     ROT_ADVANCE (log_line_current);[0m
      | [0;1;32m                                   
[0m[1mlog.c:265:10: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of 'smallmsg' [clang-analyzer-security.ArrayBound][0m
  265 |   while (*s)[0m
      | [0;1;32m         ^
[0m[1mlog.c:601:7: [0m[0;1;36mnote: [0mAssuming field 'debug' is true[0m
  601 |   if (opt.debug)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mlog.c:601:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  601 |   if (opt.debug)[0m
      | [0;1;32m  ^
[0m[1mlog.c:610:11: [0m[0;1;36mnote: [0mAssuming 'inhibit_logging' is false[0m
  610 |       if (inhibit_logging)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mlog.c:610:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  610 |       if (inhibit_logging)[0m
      | [0;1;32m      ^
[0m[1mlog.c:617:18: [0m[0;1;36mnote: [0mCalling 'log_vprintf_internal'[0m
  617 |           done = log_vprintf_internal (&lpstate, fmt, args);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlog.c:430:7: [0m[0;1;36mnote: [0mAssuming 'fp' is not equal to NULL[0m
  430 |   if (fp == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mlog.c:430:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  430 |   if (fp == NULL)[0m
      | [0;1;32m  ^
[0m[1mlog.c:433:7: [0m[0;1;36mnote: [0mAssuming 'save_context_p' is true[0m
  433 |   if (!save_context_p && warcfp == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mlog.c:433:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  433 |   if (!save_context_p && warcfp == NULL)[0m
      | [0;1;32m                      ^
[0m[1mlog.c:441:14: [0m[0;1;36mnote: [0mField 'allocated' is equal to 0[0m
  441 |   if (state->allocated != 0)[0m
      | [0;1;32m             ^
[0m[1mlog.c:441:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  441 |   if (state->allocated != 0)[0m
      | [0;1;32m  ^
[0m[1mlog.c:463:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  463 |   if (numwritten == -1)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mlog.c:463:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  463 |   if (numwritten == -1)[0m
      | [0;1;32m  ^
[0m[1mlog.c:472:12: [0m[0;1;36mnote: [0mAssuming 'numwritten' is < 'available_size'[0m
  472 |   else if (numwritten >= available_size)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlog.c:472:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  472 |   else if (numwritten >= available_size)[0m
      | [0;1;32m       ^
[0m[1mlog.c:483:7: [0m[0;1;36mnote: [0m'save_context_p' is true[0m
  483 |   if (save_context_p)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mlog.c:483:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  483 |   if (save_context_p)[0m
      | [0;1;32m  ^
[0m[1mlog.c:484:5: [0m[0;1;36mnote: [0mCalling 'saved_append'[0m
  484 |     saved_append (write_ptr);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlog.c:265:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  265 |   while (*s)[0m
      | [0;1;32m  ^
[0m[1mlog.c:268:11: [0m[0;1;36mnote: [0mAssuming 'end' is null[0m
  268 |       if (!end)[0m
      | [0;1;32m          ^~~~
[0m[1mlog.c:268:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  268 |       if (!end)[0m
      | [0;1;32m      ^
[0m[1mlog.c:272:7: [0m[0;1;36mnote: [0mCalling 'saved_append_1'[0m
  272 |       saved_append_1 (s, end);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlog.c:183:7: [0m[0;1;36mnote: [0mAssuming 'len' is not equal to 0[0m
  183 |   if (!len)[0m
      | [0;1;32m      ^~~~
[0m[1mlog.c:183:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  183 |   if (!len)[0m
      | [0;1;32m  ^
[0m[1mlog.c:188:7: [0m[0;1;36mnote: [0mAssuming 'trailing_line' is false[0m
  188 |   if (!trailing_line)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mlog.c:188:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  188 |   if (!trailing_line)[0m
      | [0;1;32m  ^
[0m[1mlog.c:193:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  193 |       if (log_line_current == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mlog.c:193:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  193 |       if (log_line_current == -1)[0m
      | [0;1;32m      ^
[0m[1mlog.c:198:11: [0m[0;1;36mnote: [0mAssuming 'len' is > STATIC_LENGTH[0m
  198 |       if (len > STATIC_LENGTH)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1mlog.c:198:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  198 |       if (len > STATIC_LENGTH)[0m
      | [0;1;32m      ^
[0m[1mlog.c:253:7: [0m[0;1;36mnote: [0mAssuming 'trailing_line' is true[0m
  253 |   if (!trailing_line)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mlog.c:253:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  253 |   if (!trailing_line)[0m
      | [0;1;32m  ^
[0m[1mlog.c:272:7: [0m[0;1;36mnote: [0mReturning from 'saved_append_1'[0m
  272 |       saved_append_1 (s, end);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlog.c:265:10: [0m[0;1;36mnote: [0mAccess of 'smallmsg' at an overflowing index, while it holds only 128 'char' elements[0m
  265 |   while (*s)[0m
      | [0;1;32m         ^~
[0m[1mlog.c:268:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |       if (!end)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  269 |         end = s + strlen (s);[0m
  270 |       else[0m
      | [0;32m      } 
[0m[1mlog.c:270:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  271 |         ++end;[0m
      | [0;1;32m              
[0m[1mlog.c:318:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |   if (inhibit_logging)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  319 |     return NULL;[0m
      | [0;1;32m                
[0m[1mlog.c:320:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |   if (logfp)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  321 |     return logfp;[0m
      | [0;1;32m                 
[0m[1mlog.c:328:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |   if (opt.show_progress == true)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  329 |       return stderr;[0m
      | [0;1;32m                    
[0m[1mlog.c:343:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |   if (inhibit_logging)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  344 |     return NULL;[0m
      | [0;1;32m                
[0m[1mlog.c:345:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |   if (warclogfp)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  346 |     return warclogfp;[0m
      | [0;1;32m                     
[0m[1mlog.c:347:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |   if (logfp)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  348 |     return NULL;[0m
      | [0;1;32m                
[0m[1mlog.c:371:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |   if (o == LOG_PROGRESS)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  372 |     fp = get_progress_fp ();[0m
  373 |   else[0m
      | [0;32m  } 
[0m[1mlog.c:373:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  374 |     fp = get_log_fp ();[0m
      | [0;1;32m                       
[0m[1mlog.c:378:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |   if (fp == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  379 |     return;[0m
      | [0;1;32m           
[0m[1mlog.c:387:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |   if (warcfp != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  388 |     FPUTS (s, warcfp);[0m
      | [0;1;32m                      
[0m[1mlog.c:389:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |   if (save_context_p)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  390 |     saved_append (s);[0m
      | [0;1;32m                     
[0m[1mlog.c:391:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |   if (flush_log_p)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  392 |     logflush ();[0m
  393 |   else[0m
      | [0;32m  } 
[0m[1mlog.c:393:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  394 |     needs_flushing = true;[0m
      | [0;1;32m                          
[0m[1mlog.c:430:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |   if (fp == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  431 |       return false;[0m
      | [0;1;32m                   
[0m[1mlog.c:453:16: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  453 |   numwritten = vsnprintf (write_ptr, available_size, fmt, args);[0m
      | [0;1;32m               ^~~~~~~~~
[0m[1mlog.c:453:16: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
  453 |   numwritten = vsnprintf (write_ptr, available_size, fmt, args);[0m
      | [0;1;32m               ^~~~~~~~~
[0m[1mlog.c:483:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  483 |   if (save_context_p)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  484 |     saved_append (write_ptr);[0m
      | [0;1;32m                             
[0m[1mlog.c:486:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |   if (warcfp != NULL && warcfp != fp)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  487 |     FPUTS (write_ptr, warcfp);[0m
      | [0;1;32m                              
[0m[1mlog.c:491:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |   if (flush_log_p)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  492 |     logflush ();[0m
  493 |   else[0m
      | [0;32m  } 
[0m[1mlog.c:493:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  494 |     needs_flushing = true;[0m
      | [0;1;32m                          
[0m[1mlog.c:520:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (warcfp != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  521 |     fflush (warcfp);[0m
      | [0;1;32m                    
[0m[1mlog.c:530:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |   if (flush == flush_log_p)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  531 |     return;[0m
      | [0;1;32m           
[0m[1mlog.c:542:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |       if (needs_flushing)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  543 |         logflush ();[0m
      | [0;1;32m                    
[0m[1mlog.c:576:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  576 |   if (inhibit_logging)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  577 |     return;[0m
      | [0;1;32m           
[0m[1mlog.c:579:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  579 |   xzero (lpstate);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mlog.c:579:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  579 |   xzero (lpstate);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mlog.c:587:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  587 |       if (done && errno == EPIPE)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  588 |         exit (WGET_EXIT_GENERIC_ERROR);[0m
      | [0;1;32m                                       
[0m[1mlog.c:610:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  610 |       if (inhibit_logging)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  611 |         return;[0m
      | [0;1;32m               
[0m[1mlog.c:613:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  613 |       xzero (lpstate);[0m
      | [0;1;32m      ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mlog.c:613:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  613 |       xzero (lpstate);[0m
      | [0;1;32m      ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mlog.c:642:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  642 |               fprintf (stderr, "%s: %s: %s\n", exec_name, file, strerror (errno));[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlog.c:642:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  642 |               fprintf (stderr, "%s: %s: %s\n", exec_name, file, strerror (errno));[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlog.c:688:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |       if (logfp == stdlogfp)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  689 |         stdlogfp = NULL;[0m
      | [0;1;32m                        
[0m[1mlog.c:690:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  690 |       if (logfp == filelogfp)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  691 |         filelogfp = NULL;[0m
      | [0;1;32m                         
[0m[1mlog.c:699:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |   for (i = 0; i < SAVED_LOG_LINES; i++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  700 |     free_log_line (i);[0m
      | [0;1;32m                      
[0m[1mlog.c:712:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  712 |   if (!fp)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  713 |     return;[0m
      | [0;1;32m           
[0m[1mlog.c:715:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |   if (num == -1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  716 |     return;[0m
      | [0;1;32m           
[0m[1mlog.c:717:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   if (trailing_line)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  718 |     ROT_ADVANCE (num);[0m
      | [0;1;32m                      
[0m[1mlog.c:725:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |           if (warcfp != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  726 |             FPUTS (ln->content, warcfp);[0m
      | [0;1;32m                                        
[0m[1mlog.c:731:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |   if (trailing_line)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  732 |     if (log_lines[log_line_current].content)[0m
  733 |       {[0m
  734 |         FPUTS (log_lines[log_line_current].content, fp);[0m
  735 |         if (warcfp != NULL)[0m
  736 |           FPUTS (log_lines[log_line_current].content, warcfp);[0m
  737 |       }[0m
      | [0;1;32m       
[0m[1mlog.c:735:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |         if (warcfp != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  736 |           FPUTS (log_lines[log_line_current].content, warcfp);[0m
      | [0;1;32m                                                              
[0m[1mlog.c:752:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  752 |   for (p = source, cnt = 0; *p; p++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  753 |     if (!c_isprint (*p))[0m
  754 |       ++cnt;[0m
      | [0;1;32m            
[0m[1mlog.c:753:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |     if (!c_isprint (*p))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  754 |       ++cnt;[0m
      | [0;1;32m            
[0m[1mlog.c:792:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  792 |       while ((c = *from++) != '\0')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  793 |         if (c_isprint (c))[0m
  794 |           *to++ = c;[0m
  795 |         else[0m
  796 |           {[0m
  797 |             *to++ = escape;[0m
  798 |             *to++ = '0' + (c >> 6);[0m
  799 |             *to++ = '0' + ((c >> 3) & 7);[0m
  800 |             *to++ = '0' + (c & 7);[0m
  801 |           }[0m
  802 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlog.c:792:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  792 |       while ((c = *from++) != '\0')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  793 |         if (c_isprint (c))[0m
  794 |           *to++ = c;[0m
  795 |         else[0m
  796 |           {[0m
  797 |             *to++ = escape;[0m
  798 |             *to++ = '0' + (c >> 6);[0m
  799 |             *to++ = '0' + ((c >> 3) & 7);[0m
  800 |             *to++ = '0' + (c & 7);[0m
  801 |           }[0m
      | [0;1;32m           
[0m[1mlog.c:793:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |         if (c_isprint (c))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  794 |           *to++ = c;[0m
  795 |         else[0m
      | [0;32m        } 
[0m[1mlog.c:804:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  804 |       while ((c = *from++) != '\0')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  805 |         if (c_isprint (c))[0m
  806 |           *to++ = c;[0m
  807 |         else[0m
  808 |           {[0m
  809 |             *to++ = escape;[0m
  810 |             *to++ = XNUM_TO_DIGIT (c >> 4);[0m
  811 |             *to++ = XNUM_TO_DIGIT (c & 0xf);[0m
  812 |           }[0m
  813 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlog.c:804:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  804 |       while ((c = *from++) != '\0')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  805 |         if (c_isprint (c))[0m
  806 |           *to++ = c;[0m
  807 |         else[0m
  808 |           {[0m
  809 |             *to++ = escape;[0m
  810 |             *to++ = XNUM_TO_DIGIT (c >> 4);[0m
  811 |             *to++ = XNUM_TO_DIGIT (c & 0xf);[0m
  812 |           }[0m
      | [0;1;32m           
[0m[1mlog.c:805:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |         if (c_isprint (c))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  806 |           *to++ = c;[0m
  807 |         else[0m
      | [0;32m        } 
[0m[1mlog.c:815:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  815 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mlog.c:836:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  836 |   if (nprcnt == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  837 |     /* If there are no non-printable chars in STR, don't bother[0m
  838 |        copying anything, just return STR.  */[0m
  839 |     return str;[0m
      | [0;1;32m               
[0m[1mlog.c:931:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  931 |           fprintf (stderr, "\n%s received.", signal_name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mlog.c:931:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  931 |           fprintf (stderr, "\n%s received.", signal_name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mlog.c:938:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  938 |               fprintf (stderr, _("\nRedirecting output to %s.\n"),[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlog.c:938:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  938 |               fprintf (stderr, _("\nRedirecting output to %s.\n"),[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlog.c:950:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  950 |               fprintf (stderr, _("%s: %s; disabling logging.\n"),[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlog.c:950:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  950 |               fprintf (stderr, _("%s: %s; disabling logging.\n"),[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlog.c:957:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  957 |           fprintf (stderr, _("\nRedirecting output to %s.\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1mlog.c:957:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  957 |           fprintf (stderr, _("\nRedirecting output to %s.\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m90 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[154/164][160.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpxy57bocq.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/progress.c
[1mprogress.c:102:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   for (i = 0; i < countof (implementations); i++, pi++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  103 |     if (!strncmp (pi->name, name, namelen))[0m
  104 |       return true;[0m
      | [0;1;32m                  
[0m[1mprogress.c:103:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |     if (!strncmp (pi->name, name, namelen))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  104 |       return true;[0m
      | [0;1;32m                  
[0m[1mprogress.c:117:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   if (!name)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  118 |     name = DEFAULT_PROGRESS_IMPLEMENTATION;[0m
      | [0;1;32m                                           
[0m[1mprogress.c:123:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |   for (i = 0; i < countof (implementations); i++, pi++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  124 |     if (!strncmp (pi->name, name, namelen))[0m
  125 |       {[0m
  126 |         current_impl = pi;[0m
  127 |         current_impl_locked = 0;[0m
  128 | [0m
  129 |         if (colon)[0m
  130 |           /* We call pi->set_params even if colon is NULL because we[0m
  131 |              want to give the implementation a chance to set up some[0m
  132 |              things it needs to run.  */[0m
  133 |           ++colon;[0m
  134 | [0m
  135 |         if (pi->set_params)[0m
  136 |           pi->set_params (colon);[0m
  137 |         return;[0m
  138 |       }[0m
      | [0;1;32m       
[0m[1mprogress.c:129:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |         if (colon)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  130 |           /* We call pi->set_params even if colon is NULL because we[0m
  131 |              want to give the implementation a chance to set up some[0m
  132 |              things it needs to run.  */[0m
  133 |           ++colon;[0m
      | [0;1;32m                  
[0m[1mprogress.c:135:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |         if (pi->set_params)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  136 |           pi->set_params (colon);[0m
      | [0;1;32m                                 
[0m[1mprogress.c:162:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |       if (!current_impl_locked)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  163 |         set_progress_implementation (FALLBACK_PROGRESS_IMPLEMENTATION);[0m
      | [0;1;32m                                                                       
[0m[1mprogress.c:188:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |   if (dltime >= INT_MAX)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  189 |     dltime = INT_MAX - 1;[0m
  190 |   else if (dltime < 0)[0m
      | [0;32m  } 
[0m[1mprogress.c:190:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |   else if (dltime < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  191 |     dltime = 0;[0m
      | [0;1;32m               
[0m[1mprogress.c:193:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |   if (howmuch < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  194 |           howmuch = 0;[0m
      | [0;1;32m                      
[0m[1mprogress.c:207:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |   if (dltime >= INT_MAX)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  208 |     dltime = INT_MAX - 1;[0m
  209 |   else if (dltime < 0)[0m
      | [0;32m  } 
[0m[1mprogress.c:209:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |   else if (dltime < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  210 |     dltime = 0;[0m
      | [0;1;32m               
[0m[1mprogress.c:254:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  254 |           if (skipped_k_len < 6)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  255 |             skipped_k_len = 6;[0m
      | [0;1;32m                              
[0m[1mprogress.c:269:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |           if (dp->dots % opt.dot_spacing == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  270 |             logputs (LOG_PROGRESS, " ");[0m
      | [0;1;32m                                        
[0m[1mprogress.c:321:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |   if (last)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  322 |     /* For last row also count bytes accumulated after last dot */[0m
  323 |     bytes_displayed += dp->accumulated;[0m
      | [0;1;32m                                       
[0m[1mprogress.c:325:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |   if (bytes_displayed < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  326 |     bytes_displayed = 0;[0m
      | [0;1;32m                        
[0m[1mprogress.c:342:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |     if (!last)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  343 | #if ADD_DOT_ROWS_THRS[0m
  344 |       bytes_this_row = ROW_BYTES * added_rows;[0m
  345 | #else[0m
  346 |       bytes_this_row = ROW_BYTES;[0m
  347 | #endif[0m
  348 |     else[0m
      | [0;32m    } 
[0m[1mprogress.c:348:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  349 |       /* For last row also include bytes accumulated after last dot.  */[0m
  350 |       bytes_this_row = dp->dots * opt.dot_bytes + dp->accumulated;[0m
      | [0;1;32m                                                                  
[0m[1mprogress.c:352:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |     if (dp->rows == dp->initial_length / ROW_BYTES)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  353 |       bytes_this_row -= dp->initial_length % ROW_BYTES;[0m
      | [0;1;32m                                                       
[0m[1mprogress.c:371:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |           if (eta < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  372 |             eta = 0;[0m
      | [0;1;32m                    
[0m[1mprogress.c:373:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |           if (eta < INT_MAX - 1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  374 |             logprintf (LOG_PROGRESS, " %s",[0m
  375 |                        eta_to_human_short ((int) (eta + 0.5), true));[0m
      | [0;1;32m                                                                     
[0m[1mprogress.c:381:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |       if (dltime >= 10)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  382 |         logprintf (LOG_PROGRESS, "=%s",[0m
  383 |                    eta_to_human_short ((int) (dltime + 0.5), true));[0m
  384 |       else[0m
      | [0;32m      } 
[0m[1mprogress.c:384:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  385 |         logprintf (LOG_PROGRESS, "=%ss", print_decimal (dltime));[0m
      | [0;1;32m                                                                 
[0m[1mprogress.c:395:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |   if (dltime >= INT_MAX)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  396 |     dltime = INT_MAX - 1;[0m
  397 |   else if (dltime < 0)[0m
      | [0;32m  } 
[0m[1mprogress.c:397:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |   else if (dltime < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  398 |     dltime = 0;[0m
      | [0;1;32m               
[0m[1mprogress.c:400:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |   if (howmuch < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  401 |           howmuch = 0;[0m
      | [0;1;32m                      
[0m[1mprogress.c:420:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |       if (dp->dots == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  421 |         logprintf (LOG_PROGRESS, "\n%6sK",[0m
  422 |                    number_to_static_string (dp->rows * ROW_BYTES / 1024));[0m
      | [0;1;32m                                                                          
[0m[1mprogress.c:424:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |       if (dp->dots % opt.dot_spacing == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  425 |         logputs (LOG_PROGRESS, " ");[0m
      | [0;1;32m                                    
[0m[1mprogress.c:440:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |             if (WGINT_MAX - dp->rows >= added_rows)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  441 |               dp->rows += added_rows;[0m
  442 |             else[0m
      | [0;32m            } 
[0m[1mprogress.c:442:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  443 |               dp->rows = WGINT_MAX;[0m
      | [0;1;32m                                   
[0m[1mprogress.c:468:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if (dp->dots == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  469 |     logprintf (LOG_PROGRESS, "\n%6sK",[0m
  470 |                number_to_static_string (dp->rows * ROW_BYTES / 1024));[0m
      | [0;1;32m                                                                      
[0m[1mprogress.c:473:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |       if (i % opt.dot_spacing == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  474 |         logputs (LOG_PROGRESS, " ");[0m
      | [0;1;32m                                    
[0m[1mprogress.c:479:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |   if (dltime >= INT_MAX)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  480 |     dltime = INT_MAX - 1;[0m
  481 |   else if (dltime < 0)[0m
      | [0;32m  } 
[0m[1mprogress.c:481:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |   else if (dltime < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  482 |     dltime = 0;[0m
      | [0;1;32m               
[0m[1mprogress.c:503:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |   if (!params || !*params)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  504 |     params = opt.dot_style;[0m
      | [0;1;32m                           
[0m[1mprogress.c:506:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (!params)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  507 |     return;[0m
      | [0;1;32m           
[0m[1mprogress.c:543:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  544 |     fprintf (stderr,[0m
  545 |              _("Invalid dot style specification %s; leaving unchanged.\n"),[0m
  546 |              quote (params));[0m
      | [0;1;32m                             
[0m[1mprogress.c:544:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  544 |     fprintf (stderr,[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:544:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  544 |     fprintf (stderr,[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:657:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  657 |       mbi_init (iter, src, strlen (src));[0m
      | [0;1;32m      ^
[0m[1m../lib/mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mprogress.c:657:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  657 |       mbi_init (iter, src, strlen (src));[0m
      | [0;1;32m      ^
[0m[1m../lib/mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mprogress.c:663:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  663 |           if (!mb_isprint (mbc) || !mb_width (mbc))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  664 |             for (i=0; i < mb_len (mbc); i++)[0m
  665 |               {[0m
  666 |                 if (dest)[0m
  667 |                   dest += sprintf (dest, "%%%02x", (unsigned char) *(mb_ptr(mbc) + i));[0m
  668 |                 ret  += 3;[0m
  669 |               }[0m
  670 |           else[0m
      | [0;32m          } 
[0m[1mprogress.c:666:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  666 |                 if (dest)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  667 |                   dest += sprintf (dest, "%%%02x", (unsigned char) *(mb_ptr(mbc) + i));[0m
      | [0;1;32m                                                                                       
[0m[1mprogress.c:667:27: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  667 |                   dest += sprintf (dest, "%%%02x", (unsigned char) *(mb_ptr(mbc) + i));[0m
      | [0;1;32m                          ^~~~~~~
[0m[1mprogress.c:667:27: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  667 |                   dest += sprintf (dest, "%%%02x", (unsigned char) *(mb_ptr(mbc) + i));[0m
      | [0;1;32m                          ^~~~~~~
[0m[1mprogress.c:672:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  672 |               if (dest)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  673 |                 for (i=0; i < mb_len (mbc); i++)[0m
  674 |                   *dest++ = *(mb_ptr (mbc) + i);[0m
      | [0;1;32m                                                
[0m[1mprogress.c:673:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |                 for (i=0; i < mb_len (mbc); i++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  674 |                   *dest++ = *(mb_ptr (mbc) + i);[0m
      | [0;1;32m                                                
[0m[1mprogress.c:680:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  680 |   if (dest)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  681 |     *dest = 0;[0m
      | [0;1;32m              
[0m[1mprogress.c:721:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  721 |   if (initial > total)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  722 |     total = initial;[0m
      | [0;1;32m                    
[0m[1mprogress.c:737:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  737 |       if (!screen_width)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  738 |         screen_width = DEFAULT_SCREEN_WIDTH;[0m
  739 |       else if (screen_width < MINIMUM_SCREEN_WIDTH)[0m
      | [0;32m      } 
[0m[1mprogress.c:739:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |       else if (screen_width < MINIMUM_SCREEN_WIDTH)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  740 |         screen_width = MINIMUM_SCREEN_WIDTH;[0m
      | [0;1;32m                                            
[0m[1mprogress.c:767:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  767 |   if (WGINT_MAX - (bp->count + bp->initial_length) >= howmuch)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  768 |     bp->count += howmuch;[0m
  769 |   else[0m
      | [0;32m  } 
[0m[1mprogress.c:769:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  769 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  770 |     bp->count = WGINT_MAX - bp->initial_length;[0m
      | [0;1;32m                                               
[0m[1mprogress.c:772:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  772 |       && bp->count + bp->initial_length > bp->total_length)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  773 |     /* We could be downloading more than total_length, e.g. when the[0m
  774 |        server sends an incorrect Content-Length header.  In that case,[0m
  775 |        adjust bp->total_length to the new reality, so that the code in[0m
  776 |        create_image() that depends on total size being smaller or[0m
  777 |        equal to the expected size doesn't abort.  */[0m
  778 |     bp->total_length = bp->initial_length + bp->count;[0m
      | [0;1;32m                                                      
[0m[1mprogress.c:795:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  795 |       if (!screen_width)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  796 |         screen_width = DEFAULT_SCREEN_WIDTH;[0m
  797 |       else if (screen_width < MINIMUM_SCREEN_WIDTH)[0m
      | [0;32m      } 
[0m[1mprogress.c:797:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |       else if (screen_width < MINIMUM_SCREEN_WIDTH)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  798 |         screen_width = MINIMUM_SCREEN_WIDTH;[0m
      | [0;1;32m                                            
[0m[1mprogress.c:808:86: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |   if (bp->dltime - bp->last_screen_update < REFRESH_INTERVAL && !force_screen_update)[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m  809 |     /* Don't update more often than five times per second. */[0m
  810 |     return;[0m
      | [0;1;32m           
[0m[1mprogress.c:823:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  823 |       && bp->count + bp->initial_length > bp->total_length)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  824 |     /* See bar_update() for explanation. */[0m
  825 |     bp->total_length = bp->initial_length + bp->count;[0m
      | [0;1;32m                                                      
[0m[1mprogress.c:868:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  868 |   if (recent_age < DLSPEED_SAMPLE_MIN)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  869 |     return;[0m
      | [0;1;32m           
[0m[1mprogress.c:883:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  883 |           xzero (*hist);[0m
      | [0;1;32m          ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mprogress.c:883:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  883 |           xzero (*hist);[0m
      | [0;1;32m          ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mprogress.c:922:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  922 |   if (++hist->pos == DLSPEED_HISTORY_SIZE)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  923 |     hist->pos = 0;[0m
      | [0;1;32m                  
[0m[1mprogress.c:954:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  954 |   mbi_init (iter, mbs, strlen(mbs));[0m
      | [0;1;32m  ^
[0m[1m../lib/mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mprogress.c:954:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  954 |   mbi_init (iter, mbs, strlen(mbs));[0m
      | [0;1;32m  ^
[0m[1m../lib/mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mprogress.c:970:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  970 |   mbi_init (iter, mbs, strlen(mbs));[0m
      | [0;1;32m  ^
[0m[1m../lib/mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mprogress.c:970:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  970 |   mbi_init (iter, mbs, strlen(mbs));[0m
      | [0;1;32m  ^
[0m[1m../lib/mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mprogress.c:1032:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1032 |   if (bcd != NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1033 |     *bcd = bytes_cols_diff;[0m
      | [0;1;32m                           
[0m[1mprogress.c:1096:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |   if (progress_size < 5)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1097 |     progress_size = 0;[0m
      | [0;1;32m                      
[0m[1mprogress.c:1100:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1100 |   if (dl_total_time >= INT_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1101 |     dl_total_time = INT_MAX - 1;[0m
 1102 |   else if (dl_total_time < 0)[0m
      | [0;32m  } 
[0m[1mprogress.c:1102:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |   else if (dl_total_time < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1103 |     dl_total_time = 0;[0m
      | [0;1;32m                      
[0m[1mprogress.c:1107:12: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1107 |       p += sprintf (p, "%s", bp->f_download);[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprogress.c:1107:12: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1107 |       p += sprintf (p, "%s", bp->f_download);[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprogress.c:1109:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1109 |       memset (p, ' ', padding);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1109:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1109 |       memset (p, ' ', padding);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1134:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1134 |               memset(p, ' ', padding);[0m
      | [0;1;32m              ^~~~~~
[0m[1mprogress.c:1134:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1134 |               memset(p, ' ', padding);[0m
      | [0;1;32m              ^~~~~~
[0m[1mprogress.c:1138:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1139 |             padding = 0;[0m
      | [0;1;32m                        
[0m[1mprogress.c:1150:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1150 |       memcpy (p, bp->f_download + offset_bytes, bytes_in_filename);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1150:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1150 |       memcpy (p, bp->f_download + offset_bytes, bytes_in_filename);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1153:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1153 |       memset (p, ' ', padding + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1153:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1153 |       memset (p, ' ', padding + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1163:12: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1163 |       p += sprintf (p, "%3d%%", percentage);[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprogress.c:1163:12: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1163 |       p += sprintf (p, "%3d%%", percentage);[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprogress.c:1167:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1167 |       memset (p, ' ', PROGRESS_PERCENT_LEN);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1167:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1167 |       memset (p, ' ', PROGRESS_PERCENT_LEN);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1190:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1190 |       memset (p, '+', insz);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1190:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1190 |       memset (p, '+', insz);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1196:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1196 |           memset (p, '=', dlsz-1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprogress.c:1196:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1196 |           memset (p, '=', dlsz-1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprogress.c:1201:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1201 |       memset (p, ' ', (progress_size - (p - begin)));[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1201:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1201 |       memset (p, ' ', (progress_size - (p - begin)));[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1213:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1213 |       if (ind < progress_size - 2)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1214 |         pos = ind + 1;[0m
 1215 |       else[0m
      | [0;32m      } 
[0m[1mprogress.c:1215:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1215 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1216 |         pos = progress_size - (ind - progress_size + 5);[0m
      | [0;1;32m                                                        
[0m[1mprogress.c:1221:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1221 |           if      (i == pos - 1) *p++ = '<';[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1222 |           else if (i == pos    ) *p++ = '=';[0m
      | [0;32m          } 
[0m[1mprogress.c:1222:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1222 |           else if (i == pos    ) *p++ = '=';[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1223 |           else if (i == pos + 1) *p++ = '>';[0m
      | [0;32m          } 
[0m[1mprogress.c:1223:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1223 |           else if (i == pos + 1) *p++ = '>';[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1224 |           else[0m
      | [0;32m          } 
[0m[1mprogress.c:1224:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1224 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1225 |             *p++ = ' ';[0m
      | [0;1;32m                       
[0m[1mprogress.c:1237:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1237 |       memset (p, ' ', cols_diff);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1237:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1237 |       memset (p, ' ', cols_diff);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1240:8: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1240 |   p += sprintf (p, "%s", down_size);[0m
      | [0;1;32m       ^~~~~~~
[0m[1mprogress.c:1240:8: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1240 |   p += sprintf (p, "%s", down_size);[0m
      | [0;1;32m       ^~~~~~~
[0m[1mprogress.c:1253:12: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1253 |       p += sprintf (p, "  %4.*f%s", dlspeed >= 99.95 ? 0 : dlspeed >= 9.995 ? 1 : 2,[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprogress.c:1253:12: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1253 |       p += sprintf (p, "  %4.*f%s", dlspeed >= 99.95 ? 0 : dlspeed >= 9.995 ? 1 : 2,[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprogress.c:1256:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1256 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1257 |     APPEND_LITERAL ("  --.-KB/s");[0m
      | [0;1;32m                                  
[0m[1mprogress.c:1257:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1257 |     APPEND_LITERAL ("  --.-KB/s");[0m
      | [0;1;32m    ^
[0m[1mprogress.c:1039:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND_LITERAL'[0m
 1039 |   memcpy (p, s, sizeof (s) - 1);                \[0m
      | [0;1;32m  ^~~~~~
[0m[1mprogress.c:1257:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1257 |     APPEND_LITERAL ("  --.-KB/s");[0m
      | [0;1;32m    ^
[0m[1mprogress.c:1039:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND_LITERAL'[0m
 1039 |   memcpy (p, s, sizeof (s) - 1);                \[0m
      | [0;1;32m  ^~~~~~
[0m[1mprogress.c:1273:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1273 |               && dl_total_time - bp->last_eta_time < ETA_REFRESH_INTERVAL)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1274 |             eta = bp->last_eta_value;[0m
 1275 |           else[0m
      | [0;32m          } 
[0m[1mprogress.c:1285:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1285 |               if (eta_ >= INT_MAX - 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1286 |                 goto skip_eta;[0m
      | [0;1;32m                              
[0m[1mprogress.c:1292:16: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1292 |           p += sprintf (p, get_eta(&bytes_cols_diff),[0m
      | [0;1;32m               ^~~~~~~
[0m[1mprogress.c:1292:16: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1292 |           p += sprintf (p, get_eta(&bytes_cols_diff),[0m
      | [0;1;32m               ^~~~~~~
[0m[1mprogress.c:1298:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1298 |           memset (p, ' ', PROGRESS_ETA_LEN);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprogress.c:1298:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1298 |           memset (p, ' ', PROGRESS_ETA_LEN);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprogress.c:1312:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1312 |       strcpy (p, _("    in "));[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1312:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1312 |       strcpy (p, _("    in "));[0m
      | [0;1;32m      ^~~~~~
[0m[1mprogress.c:1316:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1316 |       if (dl_total_time >= 10)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1317 |         ncols += sprintf (p + nbytes, "%s",  eta_to_human_short ((int) (dl_total_time + 0.5), false));[0m
 1318 |       else[0m
      | [0;32m      } 
[0m[1mprogress.c:1317:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1317 |         ncols += sprintf (p + nbytes, "%s",  eta_to_human_short ((int) (dl_total_time + 0.5), false));[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mprogress.c:1317:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1317 |         ncols += sprintf (p + nbytes, "%s",  eta_to_human_short ((int) (dl_total_time + 0.5), false));[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mprogress.c:1318:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1318 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1319 |         ncols += sprintf (p + nbytes, "%ss", print_decimal (dl_total_time));[0m
      | [0;1;32m                                                                            
[0m[1mprogress.c:1319:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1319 |         ncols += sprintf (p + nbytes, "%ss", print_decimal (dl_total_time));[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mprogress.c:1319:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1319 |         ncols += sprintf (p + nbytes, "%ss", print_decimal (dl_total_time));[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mprogress.c:1323:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1323 |           memset (p, ' ', PROGRESS_ETA_LEN - ncols);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprogress.c:1323:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1323 |           memset (p, ' ', PROGRESS_ETA_LEN - ncols);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprogress.c:1336:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1336 |     memset (p, ' ', padding);[0m
      | [0;1;32m    ^~~~~~
[0m[1mprogress.c:1336:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1336 |     memset (p, ' ', padding);[0m
      | [0;1;32m    ^~~~~~
[0m[1mprogress.c:1380:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1380 |           if (!strncmp (param, "force", 5))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1381 |             current_impl_locked = 1;[0m
 1382 |           else if (!strncmp (param, "noscroll", 8))[0m
      | [0;32m          } 
[0m[1mprogress.c:1382:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1382 |           else if (!strncmp (param, "noscroll", 8))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1383 |             opt.noscroll = true;[0m
      | [0;1;32m                                
[0m[1mprogress.c:1385:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1385 |           if (*(param = strchrnul(param, ':')))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1386 |             param++;[0m
      | [0;1;32m                    
[0m[1mprogress.c:1445:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1445 |   if (secs == last)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1446 |     return buf;[0m
      | [0;1;32m               
[0m[1mprogress.c:1449:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1449 |   if (secs < 100)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1450 |     sprintf (buf, "%ds", secs);[0m
 1451 |   else if (secs < 100 * 60)[0m
      | [0;32m  } 
[0m[1mprogress.c:1450:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1450 |     sprintf (buf, "%ds", secs);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1450:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1450 |     sprintf (buf, "%ds", secs);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1451:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1451 |   else if (secs < 100 * 60)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1452 |     sprintf (buf, "%dm%s%ds", secs / 60, space, secs % 60);[0m
 1453 |   else if (secs < 48 * 3600)[0m
      | [0;32m  } 
[0m[1mprogress.c:1452:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1452 |     sprintf (buf, "%dm%s%ds", secs / 60, space, secs % 60);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1452:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1452 |     sprintf (buf, "%dm%s%ds", secs / 60, space, secs % 60);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1453:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1453 |   else if (secs < 48 * 3600)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1454 |     sprintf (buf, "%dh%s%dm", secs / 3600, space, (secs / 60) % 60);[0m
 1455 |   else if (secs < 100 * 86400)[0m
      | [0;32m  } 
[0m[1mprogress.c:1454:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1454 |     sprintf (buf, "%dh%s%dm", secs / 3600, space, (secs / 60) % 60);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1454:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1454 |     sprintf (buf, "%dh%s%dm", secs / 3600, space, (secs / 60) % 60);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1455:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1455 |   else if (secs < 100 * 86400)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1456 |     sprintf (buf, "%dd%s%dh", secs / 86400, space, (secs / 3600) % 24);[0m
 1457 |   else[0m
      | [0;32m  } 
[0m[1mprogress.c:1456:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1456 |     sprintf (buf, "%dd%s%dh", secs / 86400, space, (secs / 3600) % 24);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1456:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1456 |     sprintf (buf, "%dd%s%dh", secs / 86400, space, (secs / 3600) % 24);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1457:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1457 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1458 |     /* even (2^31-1)/86400 doesn't overflow BUF. */[0m
 1459 |     sprintf (buf, "%dd", secs / 86400);[0m
      | [0;1;32m                                       
[0m[1mprogress.c:1459:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1459 |     sprintf (buf, "%dd", secs / 86400);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprogress.c:1459:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1459 |     sprintf (buf, "%dd", secs / 86400);[0m
      | [0;1;32m    ^~~~~~~
[0m148 warnings generated.
Suppressed 37 warnings (37 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[155/164][172.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpu8iflxua.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/html-url.c
[1mhtml-url.c:143:8: [0m[0;1;35mwarning: [0m[1mExcessive padding in 'struct (unnamed at html-url.c:143:8)' (8 padding bytes, where 0 is optimal). Optimal fields order: attr_name, tagid, flags, consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding][0m
  143 | static struct {[0m
      | [0;1;32m       ^~~~~~~~
[0m  144 |   int tagid;[0m
      | [0;1;32m  ~~~~~~~~~~
[0m  145 |   const char *attr_name;[0m
      | [0;1;32m  ~~~~~~~~~~~~~~~~~~~~~~
[0m  146 |   int flags;[0m
      | [0;1;32m  ~~~~~~~~~~
[0m  147 | } tag_url_attributes[] = {[0m
      | [0;1;32m~
[0m[1mhtml-url.c:143:8: [0m[0;1;36mnote: [0mExcessive padding in 'struct (unnamed at html-url.c:143:8)' (8 padding bytes, where 0 is optimal). Optimal fields order: attr_name, tagid, flags, consider reordering the fields or adding explicit padding members[0m
  143 | static struct {[0m
      | [0;1;32m       ^~~~~~~~
[0m  144 |   int tagid;[0m
      | [0;1;32m  ~~~~~~~~~~
[0m  145 |   const char *attr_name;[0m
      | [0;1;32m  ~~~~~~~~~~~~~~~~~~~~~~
[0m  146 |   int flags;[0m
      | [0;1;32m  ~~~~~~~~~~
[0m  147 | } tag_url_attributes[] = {[0m
      | [0;1;32m~
[0m[1mhtml-url.c:214:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   for (i = 0; i < countof (known_tags); i++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  215 |     hash_table_put (interesting_tags, known_tags[i].name, known_tags + i);[0m
      | [0;1;32m                                                                          
[0m[1mhtml-url.c:221:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |       for (ignored = opt.ignore_tags; *ignored; ignored++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  222 |         hash_table_remove (interesting_tags, *ignored);[0m
      | [0;1;32m                                                       
[0m[1mhtml-url.c:235:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |           if (!t)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  236 |             continue;           /* ignore unknown --follow-tags entries. */[0m
      | [0;1;32m                                                                           
[0m[1mhtml-url.c:245:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |   for (i = 0; i < countof (additional_attributes); i++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  246 |     hash_table_put (interesting_attributes, additional_attributes[i], "1");[0m
      | [0;1;32m                                                                           
[0m[1mhtml-url.c:247:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |   for (i = 0; i < countof (tag_url_attributes); i++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  248 |     hash_table_put (interesting_attributes,[0m
  249 |                     tag_url_attributes[i].attr_name, "1");[0m
      | [0;1;32m                                                          
[0m[1mhtml-url.c:260:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |   for (i = 0; i < tag->nattrs; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  261 |     if (!c_strcasecmp (tag->attrs[i].name, name))[0m
  262 |       {[0m
  263 |         if (attrind)[0m
  264 |           *attrind = i;[0m
  265 |         return tag->attrs[i].value;[0m
  266 |       }[0m
      | [0;1;32m       
[0m[1mhtml-url.c:263:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |         if (attrind)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  264 |           *attrind = i;[0m
      | [0;1;32m                       
[0m[1mhtml-url.c:358:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |   if (!link_has_scheme && *link_uri != '/')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  359 |     newel->link_relative_p = 1;[0m
  360 |   else if (link_has_scheme)[0m
      | [0;32m  } 
[0m[1mhtml-url.c:360:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |   else if (link_has_scheme)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  361 |     newel->link_complete_p = 1;[0m
      | [0;1;32m                               
[0m[1mhtml-url.c:364:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |   if (ctx->head == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  365 |     ctx->head = newel;[0m
  366 |   else[0m
      | [0;32m  } 
[0m[1mhtml-url.c:379:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |       if (prev)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  380 |         prev->next = newel;[0m
  381 |       else[0m
      | [0;32m      } 
[0m[1mhtml-url.c:381:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  382 |         ctx->head = newel;[0m
      | [0;1;32m                          
[0m[1mhtml-url.c:395:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |   if (!style)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  396 |     return;[0m
      | [0;1;32m           
[0m[1mhtml-url.c:409:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |   if(raw_len <= 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  410 |        return;[0m
      | [0;1;32m              
[0m[1mhtml-url.c:428:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |   for (i = 0; i < countof (tag_url_attributes); i++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  429 |     if (tag_url_attributes[i].tagid == tagid)[0m
  430 |       {[0m
  431 |         /* We've found the index of tag_url_attributes where the[0m
  432 |            attributes of our tag begin.  */[0m
  433 |         first = i;[0m
  434 |         break;[0m
  435 |       }[0m
      | [0;1;32m       
[0m[1mhtml-url.c:468:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |                   if (flags & ATTR_INLINE)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  469 |                     up->link_inline_p = 1;[0m
      | [0;1;32m                                          
[0m[1mhtml-url.c:470:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |                   if (flags & ATTR_HTML)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  471 |                     up->link_expect_html = 1;[0m
      | [0;1;32m                                             
[0m[1mhtml-url.c:486:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |   if (!newbase)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  487 |     return;[0m
      | [0;1;32m           
[0m[1mhtml-url.c:491:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |   if (!base_urlpos)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  492 |     return;[0m
      | [0;1;32m           
[0m[1mhtml-url.c:497:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  497 |   if (ctx->parent_base)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  498 |     ctx->base = uri_merge (ctx->parent_base, newbase);[0m
  499 |   else[0m
      | [0;32m  } 
[0m[1mhtml-url.c:499:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  500 |     ctx->base = xstrdup (newbase);[0m
      | [0;1;32m                                  
[0m[1mhtml-url.c:515:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |       if (up)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  516 |         up->ignore_when_downloading = 1;[0m
      | [0;1;32m                                        
[0m[1mhtml-url.c:565:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  565 |                   if (!type || c_strcasecmp (type, "text/html") == 0)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  566 |                     up->link_expect_html = 1;[0m
      | [0;1;32m                                             
[0m[1mhtml-url.c:599:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  599 |       if (!refresh)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  600 |         return;[0m
      | [0;1;32m               
[0m[1mhtml-url.c:604:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  604 |       if (timeout < 0 || *p++ != ';')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  605 |         return;[0m
      | [0;1;32m               
[0m[1mhtml-url.c:607:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |       while (c_isspace (*p))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  608 |         ++p;[0m
      | [0;1;32m            
[0m[1mhtml-url.c:612:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |             &&          *(p + 3)  == '='))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  613 |         return;[0m
      | [0;1;32m               
[0m[1mhtml-url.c:615:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  615 |       while (c_isspace (*p))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  616 |         ++p;[0m
      | [0;1;32m            
[0m[1mhtml-url.c:634:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |       if (!content)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  635 |         return;[0m
      | [0;1;32m               
[0m[1mhtml-url.c:638:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  638 |       if (!mcharset)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  639 |         return;[0m
      | [0;1;32m               
[0m[1mhtml-url.c:649:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  649 |       if (!content)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  650 |         return;[0m
      | [0;1;32m               
[0m[1mhtml-url.c:651:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |       if (!c_strcasecmp (content, "none"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  652 |         ctx->nofollow = true;[0m
  653 |       else[0m
      | [0;32m      } 
[0m[1mhtml-url.c:663:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  663 |               if (!c_strncasecmp (content, "nofollow", end - content))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  664 |                 ctx->nofollow = true;[0m
      | [0;1;32m                                     
[0m[1mhtml-url.c:666:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  666 |               if (*end == ',')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  667 |                 ++end;[0m
  668 |               else[0m
      | [0;32m              } 
[0m[1mhtml-url.c:671:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |                   if (end)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  672 |                     ++end;[0m
  673 |                   else[0m
      | [0;32m                  } 
[0m[1mhtml-url.c:673:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  674 |                     end = content + strlen (content);[0m
      | [0;1;32m                                                     
[0m[1mhtml-url.c:705:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  705 |       if (ctx->text[base_ind] == '"' || ctx->text[base_ind] == '\'')[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  706 |         ++base_ind;[0m
      | [0;1;32m                   
[0m[1mhtml-url.c:717:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |           if (url_start == size)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  718 |             return;[0m
      | [0;1;32m                   
[0m[1mhtml-url.c:753:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |                   if (c == '(')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  754 |                     in_paren = true;[0m
  755 |                   else if (c == ')' && in_paren)[0m
      | [0;32m                  } 
[0m[1mhtml-url.c:755:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |                   else if (c == ')' && in_paren)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  756 |                     in_paren = false;[0m
  757 |                   else if (c == ',' && !in_paren)[0m
      | [0;32m                  } 
[0m[1mhtml-url.c:757:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  757 |                   else if (c == ',' && !in_paren)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  758 |                     break;[0m
      | [0;1;32m                          
[0m[1mhtml-url.c:761:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  761 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  762 |             offset = url_end;[0m
      | [0;1;32m                             
[0m[1mhtml-url.c:784:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |   if (t != NULL)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  785 |     t->handler (t->tagid, tag, ctx);[0m
      | [0;1;32m                                    
[0m[1mhtml-url.c:818:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |   if (!interesting_tags)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  819 |     init_interesting ();[0m
      | [0;1;32m                        
[0m[1mhtml-url.c:829:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |   if (opt.strict_comments)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  830 |     flags |= MHT_STRICT_COMMENTS;[0m
      | [0;1;32m                                 
[0m[1mhtml-url.c:846:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |   if (meta_disallow_follow)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  847 |     *meta_disallow_follow = ctx.nofollow;[0m
      | [0;1;32m                                         
[0m[1mhtml-url.c:905:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  905 |       if (!line_end)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  906 |         line_end = text_end;[0m
  907 |       else[0m
      | [0;32m      } 
[0m[1mhtml-url.c:907:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  907 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  908 |         ++line_end;[0m
      | [0;1;32m                   
[0m[1mhtml-url.c:912:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  912 |       while (line_beg < line_end && c_isspace (*line_beg))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  913 |         ++line_beg;[0m
      | [0;1;32m                   
[0m[1mhtml-url.c:914:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  914 |       while (line_end > line_beg && c_isspace (*(line_end - 1)))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  915 |         --line_end;[0m
      | [0;1;32m                   
[0m[1mhtml-url.c:917:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  917 |       if (line_beg == line_end)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  918 |         continue;[0m
      | [0;1;32m                 
[0m[1mhtml-url.c:955:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  955 |       if (!head)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  956 |         head = entry;[0m
  957 |       else[0m
      | [0;32m      } 
[0m[1mhtml-url.c:957:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  957 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  958 |         tail->next = entry;[0m
      | [0;1;32m                           
[0m81 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[156/164][177.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp1jv7kjnl.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/warc.c
[1mwarc.c:131:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  131 |   memcpy (&v, key, sizeof (unsigned long));[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:131:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  131 |   memcpy (&v, key, sizeof (unsigned long));[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:168:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |   if (!warc_write_ok)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  169 |     return false;[0m
      | [0;1;32m                 
[0m[1mwarc.c:172:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |   if (n != warc_write_buffer (str, n))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  173 |     warc_write_ok = false;[0m
      | [0;1;32m                          
[0m[1mwarc.c:196:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |   if (!warc_write_ok)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  197 |     return false;[0m
      | [0;1;32m                 
[0m[1mwarc.c:200:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |   if (opt.warc_maxsize > 0 && ftello (warc_current_file) >= opt.warc_maxsize)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  201 |     warc_start_new_file (false);[0m
      | [0;1;32m                                
[0m[1mwarc.c:308:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   if (fseeko (data_in, 0L, SEEK_SET) != 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  309 |     warc_write_ok = false;[0m
      | [0;1;32m                          
[0m[1mwarc.c:312:32: [0m[0;1;35mwarning: [0m[1mFile position of the stream might be 'indeterminate' after a failed operation. Can cause undefined behavior [clang-analyzer-unix.Stream][0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m                               ^
[0m[1mwarc.c:1498:7: [0m[0;1;36mnote: [0mAssuming field 'warc_digests_enabled' is false[0m
 1498 |   if (opt.warc_digests_enabled)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:1498:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1498 |   if (opt.warc_digests_enabled)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:1545:3: [0m[0;1;36mnote: [0mCalling 'warc_write_start_record'[0m
 1545 |   warc_write_start_record ();[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:196:7: [0m[0;1;36mnote: [0mAssuming 'warc_write_ok' is true[0m
  196 |   if (!warc_write_ok)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mwarc.c:196:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  196 |   if (!warc_write_ok)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:200:7: [0m[0;1;36mnote: [0mAssuming field 'warc_maxsize' is > 0[0m
  200 |   if (opt.warc_maxsize > 0 && ftello (warc_current_file) >= opt.warc_maxsize)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:200:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwarc.c:200:31: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  200 |   if (opt.warc_maxsize > 0 && ftello (warc_current_file) >= opt.warc_maxsize)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:200:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  200 |   if (opt.warc_maxsize > 0 && ftello (warc_current_file) >= opt.warc_maxsize)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:201:5: [0m[0;1;36mnote: [0mCalling 'warc_start_new_file'[0m
  201 |     warc_start_new_file (false);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:865:7: [0m[0;1;36mnote: [0mAssuming field 'warc_filename' is not equal to NULL[0m
  865 |   if (opt.warc_filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:865:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  865 |   if (opt.warc_filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:868:7: [0m[0;1;36mnote: [0m'warc_current_file' is not equal to NULL[0m
  868 |   if (warc_current_file != NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mwarc.c:868:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  868 |   if (warc_current_file != NULL)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:872:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  872 |   xfree (warc_current_filename);[0m
      | [0;1;32m  ^
[0m[1m./utils.h:54:18: [0m[0;1;36mnote: [0mexpanded from macro 'xfree'[0m
   54 | #define xfree(p) do { free ((void *) (p)); p = NULL; } while (0)[0m
      | [0;1;32m                 ^
[0m[1mwarc.c:883:7: [0m[0;1;36mnote: [0m'meta' is false[0m
  883 |   if (meta)[0m
      | [0;1;32m      ^~~~
[0m[1mwarc.c:883:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  883 |   if (meta)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:885:12: [0m[0;1;36mnote: [0mAssuming field 'warc_maxsize' is <= 0[0m
  885 |   else if (opt.warc_maxsize > 0)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:885:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  885 |   else if (opt.warc_maxsize > 0)[0m
      | [0;1;32m       ^
[0m[1mwarc.c:897:7: [0m[0;1;36mnote: [0mAssuming 'warc_current_file' is not equal to NULL[0m
  897 |   if (warc_current_file == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:897:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  897 |   if (warc_current_file == NULL)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:904:9: [0m[0;1;36mnote: [0mCalling 'warc_write_warcinfo_record'[0m
  904 |   if (! warc_write_warcinfo_record (new_filename))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:801:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  801 |   xfree (filename_basename);[0m
      | [0;1;32m  ^
[0m[1m./utils.h:54:18: [0m[0;1;36mnote: [0mexpanded from macro 'xfree'[0m
   54 | #define xfree(p) do { free ((void *) (p)); p = NULL; } while (0)[0m
      | [0;1;32m                 ^
[0m[1mwarc.c:805:7: [0m[0;1;36mnote: [0m'warc_tmp' is not equal to NULL[0m
  805 |   if (warc_tmp == NULL)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwarc.c:805:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  805 |   if (warc_tmp == NULL)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:814:41: [0m[0;1;36mnote: [0mAssuming field 'use_robots' is false[0m
  814 |   fprintf (warc_tmp, "robots: %s\r\n", (opt.use_robots ? "classic" : "off"));[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~
[0m[1mwarc.c:814:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwarc.c:817:7: [0m[0;1;36mnote: [0mAssuming field 'warc_user_headers' is null[0m
  817 |   if (opt.warc_user_headers)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:817:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  817 |   if (opt.warc_user_headers)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:826:3: [0m[0;1;36mnote: [0mCalling 'warc_write_block_from_file'[0m
  826 |   warc_write_block_from_file (warc_tmp);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:308:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  308 |   if (fseeko (data_in, 0L, SEEK_SET) != 0)[0m
      | [0;1;32m      ^
[0m[1m../lib/stdio.h:1241:19: [0m[0;1;36mnote: [0mexpanded from macro 'fseeko'[0m
 1241 | #   define fseeko rpl_fseeko[0m
      | [0;1;32m                  ^
[0m[1mwarc.c:308:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  308 |   if (fseeko (data_in, 0L, SEEK_SET) != 0)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:312:10: [0m[0;1;36mnote: [0mAssuming 'warc_write_ok' is true[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m         ^~~~~~~~~~~~~
[0m[1mwarc.c:312:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwarc.c:312:32: [0m[0;1;36mnote: [0mAssuming this stream operation fails[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:312:27: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:312:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:314:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  314 |       if (warc_write_buffer (buffer, s) < s)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:314:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  314 |       if (warc_write_buffer (buffer, s) < s)[0m
      | [0;1;32m      ^
[0m[1mwarc.c:312:10: [0m[0;1;36mnote: [0m'warc_write_ok' is true[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m         ^~~~~~~~~~~~~
[0m[1mwarc.c:312:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwarc.c:312:32: [0m[0;1;36mnote: [0mFile position of the stream might be 'indeterminate' after a failed operation. Can cause undefined behavior[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:312:32: [0m[0;1;35mwarning: [0m[1mRead function called when stream is in EOF state. Function has no effect [clang-analyzer-unix.Stream][0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m                               ^
[0m[1mwarc.c:1498:7: [0m[0;1;36mnote: [0mAssuming field 'warc_digests_enabled' is false[0m
 1498 |   if (opt.warc_digests_enabled)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:1498:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1498 |   if (opt.warc_digests_enabled)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:1545:3: [0m[0;1;36mnote: [0mCalling 'warc_write_start_record'[0m
 1545 |   warc_write_start_record ();[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:196:7: [0m[0;1;36mnote: [0mAssuming 'warc_write_ok' is true[0m
  196 |   if (!warc_write_ok)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mwarc.c:196:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  196 |   if (!warc_write_ok)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:200:7: [0m[0;1;36mnote: [0mAssuming field 'warc_maxsize' is > 0[0m
  200 |   if (opt.warc_maxsize > 0 && ftello (warc_current_file) >= opt.warc_maxsize)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:200:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwarc.c:200:31: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  200 |   if (opt.warc_maxsize > 0 && ftello (warc_current_file) >= opt.warc_maxsize)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:200:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  200 |   if (opt.warc_maxsize > 0 && ftello (warc_current_file) >= opt.warc_maxsize)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:201:5: [0m[0;1;36mnote: [0mCalling 'warc_start_new_file'[0m
  201 |     warc_start_new_file (false);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:865:7: [0m[0;1;36mnote: [0mAssuming field 'warc_filename' is not equal to NULL[0m
  865 |   if (opt.warc_filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:865:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  865 |   if (opt.warc_filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:868:7: [0m[0;1;36mnote: [0m'warc_current_file' is not equal to NULL[0m
  868 |   if (warc_current_file != NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mwarc.c:868:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  868 |   if (warc_current_file != NULL)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:872:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  872 |   xfree (warc_current_filename);[0m
      | [0;1;32m  ^
[0m[1m./utils.h:54:18: [0m[0;1;36mnote: [0mexpanded from macro 'xfree'[0m
   54 | #define xfree(p) do { free ((void *) (p)); p = NULL; } while (0)[0m
      | [0;1;32m                 ^
[0m[1mwarc.c:883:7: [0m[0;1;36mnote: [0m'meta' is false[0m
  883 |   if (meta)[0m
      | [0;1;32m      ^~~~
[0m[1mwarc.c:883:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  883 |   if (meta)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:885:12: [0m[0;1;36mnote: [0mAssuming field 'warc_maxsize' is <= 0[0m
  885 |   else if (opt.warc_maxsize > 0)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:885:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  885 |   else if (opt.warc_maxsize > 0)[0m
      | [0;1;32m       ^
[0m[1mwarc.c:897:7: [0m[0;1;36mnote: [0mAssuming 'warc_current_file' is not equal to NULL[0m
  897 |   if (warc_current_file == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:897:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  897 |   if (warc_current_file == NULL)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:904:9: [0m[0;1;36mnote: [0mCalling 'warc_write_warcinfo_record'[0m
  904 |   if (! warc_write_warcinfo_record (new_filename))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:801:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  801 |   xfree (filename_basename);[0m
      | [0;1;32m  ^
[0m[1m./utils.h:54:18: [0m[0;1;36mnote: [0mexpanded from macro 'xfree'[0m
   54 | #define xfree(p) do { free ((void *) (p)); p = NULL; } while (0)[0m
      | [0;1;32m                 ^
[0m[1mwarc.c:805:7: [0m[0;1;36mnote: [0m'warc_tmp' is not equal to NULL[0m
  805 |   if (warc_tmp == NULL)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwarc.c:805:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  805 |   if (warc_tmp == NULL)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:814:41: [0m[0;1;36mnote: [0mAssuming field 'use_robots' is false[0m
  814 |   fprintf (warc_tmp, "robots: %s\r\n", (opt.use_robots ? "classic" : "off"));[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~
[0m[1mwarc.c:814:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwarc.c:817:7: [0m[0;1;36mnote: [0mAssuming field 'warc_user_headers' is null[0m
  817 |   if (opt.warc_user_headers)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:817:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  817 |   if (opt.warc_user_headers)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:826:3: [0m[0;1;36mnote: [0mCalling 'warc_write_block_from_file'[0m
  826 |   warc_write_block_from_file (warc_tmp);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:308:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  308 |   if (fseeko (data_in, 0L, SEEK_SET) != 0)[0m
      | [0;1;32m      ^
[0m[1m../lib/stdio.h:1241:19: [0m[0;1;36mnote: [0mexpanded from macro 'fseeko'[0m
 1241 | #   define fseeko rpl_fseeko[0m
      | [0;1;32m                  ^
[0m[1mwarc.c:308:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  308 |   if (fseeko (data_in, 0L, SEEK_SET) != 0)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:312:10: [0m[0;1;36mnote: [0mAssuming 'warc_write_ok' is true[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m         ^~~~~~~~~~~~~
[0m[1mwarc.c:312:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwarc.c:312:32: [0m[0;1;36mnote: [0mAssuming stream reaches end-of-file here[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:312:27: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:312:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m  ^
[0m[1mwarc.c:314:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  314 |       if (warc_write_buffer (buffer, s) < s)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:314:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  314 |       if (warc_write_buffer (buffer, s) < s)[0m
      | [0;1;32m      ^
[0m[1mwarc.c:312:10: [0m[0;1;36mnote: [0m'warc_write_ok' is true[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m         ^~~~~~~~~~~~~
[0m[1mwarc.c:312:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwarc.c:312:32: [0m[0;1;36mnote: [0mRead function called when stream is in EOF state. Function has no effect[0m
  312 |   while (warc_write_ok && (s = fread (buffer, 1, BUFSIZ, data_in)) > 0)[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwarc.c:314:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |       if (warc_write_buffer (buffer, s) < s)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  315 |         warc_write_ok = false;[0m
      | [0;1;32m                              
[0m[1mwarc.c:454:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |   if (ip != NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  455 |     return warc_write_header ("WARC-IP-Address", print_address (ip));[0m
  456 |   else[0m
      | [0;32m  } 
[0m[1mwarc.c:456:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  457 |     return warc_write_ok;[0m
      | [0;1;32m                         
[0m[1mwarc.c:487:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |   if (payload_offset >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  488 |     sha1_init_ctx (&ctx_payload);[0m
      | [0;1;32m                                 
[0m[1mwarc.c:509:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |           if (sum == BLOCKSIZE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  510 |             break;[0m
      | [0;1;32m                  
[0m[1mwarc.c:528:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |           if (feof (stream))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  529 |             goto process_partial_block;[0m
      | [0;1;32m                                       
[0m[1mwarc.c:540:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |           if (start_of_payload <= 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  541 |             /* All bytes in the buffer belong to the payload. */[0m
  542 |             start_of_payload = 0;[0m
      | [0;1;32m                                 
[0m[1mwarc.c:565:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  565 |           if (start_of_payload <= 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  566 |             /* All bytes in the buffer belong to the payload. */[0m
  567 |             start_of_payload = 0;[0m
      | [0;1;32m                                 
[0m[1mwarc.c:577:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |   if (payload_offset >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  578 |     sha1_finish_ctx (&ctx_payload, res_payload);[0m
      | [0;1;32m                                                
[0m[1mwarc.c:592:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  592 |       memcpy (sha1_base32, "sha1:", 5);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwarc.c:592:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  592 |       memcpy (sha1_base32, "sha1:", 5);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwarc.c:596:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  597 |     *sha1_base32 = 0;[0m
      | [0;1;32m                     
[0m[1mwarc.c:625:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  625 |           if (payload_offset >= 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  626 |               warc_write_header ("WARC-Payload-Digest",[0m
  627 |                   warc_base32_sha1_digest (sha1_res_payload, digest, sizeof(digest)));[0m
      | [0;1;32m                                                                                      
[0m[1mwarc.c:643:103: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  643 |   if (strftime (timestamp, timestamp_size, "%Y-%m-%dT%H:%M:%SZ", timeinfo) == 0 && timestamp_size > 0)[0m
      | [0;1;32m                                                                                                      ^
[0m      | [0;32m                                                                                                       {
[0m  644 |     *timestamp = 0;[0m
      | [0;1;32m                   
[0m[1mwarc.c:662:3: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  662 |   snprintf (urn_str, urn_size, "<urn:uuid:%s>", uuid_str);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwarc.c:662:3: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  662 |   snprintf (urn_str, urn_size, "<urn:uuid:%s>", uuid_str);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwarc.c:810:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  810 |   fprintf (warc_tmp, "software: Wget/%s (%s)\r\n", version_string, OS_TYPE);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:810:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  810 |   fprintf (warc_tmp, "software: Wget/%s (%s)\r\n", version_string, OS_TYPE);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:811:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  811 |   fprintf (warc_tmp, "format: WARC File Format 1.0\r\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:811:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  811 |   fprintf (warc_tmp, "format: WARC File Format 1.0\r\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:812:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  812 |   fprintf (warc_tmp,[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:812:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  812 |   fprintf (warc_tmp,[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:814:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  814 |   fprintf (warc_tmp, "robots: %s\r\n", (opt.use_robots ? "classic" : "off"));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:814:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  814 |   fprintf (warc_tmp, "robots: %s\r\n", (opt.use_robots ? "classic" : "off"));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:815:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  815 |   fprintf (warc_tmp, "wget-arguments: %s\r\n", program_argstring);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:815:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  815 |   fprintf (warc_tmp, "wget-arguments: %s\r\n", program_argstring);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:820:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |       for (i = 0; opt.warc_user_headers[i]; i++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  821 |         fprintf (warc_tmp, "%s\r\n", opt.warc_user_headers[i]);[0m
      | [0;1;32m                                                               
[0m[1mwarc.c:821:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  821 |         fprintf (warc_tmp, "%s\r\n", opt.warc_user_headers[i]);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mwarc.c:821:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  821 |         fprintf (warc_tmp, "%s\r\n", opt.warc_user_headers[i]);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mwarc.c:823:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  823 |   fprintf(warc_tmp, "\r\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:823:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  823 |   fprintf(warc_tmp, "\r\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:829:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |   if (! warc_write_ok)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  830 |     logprintf (LOG_NOTQUIET, _("Error writing warcinfo record to WARC file.\n"));[0m
      | [0;1;32m                                                                                 
[0m[1mwarc.c:865:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  865 |   if (opt.warc_filename == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  866 |     return false;[0m
      | [0;1;32m                 
[0m[1mwarc.c:868:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  868 |   if (warc_current_file != NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  869 |     fclose (warc_current_file);[0m
      | [0;1;32m                               
[0m[1mwarc.c:883:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  883 |   if (meta)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  884 |     sprintf (new_filename, "%s-meta.%s", opt.warc_filename, extension);[0m
  885 |   else if (opt.warc_maxsize > 0)[0m
      | [0;32m  } 
[0m[1mwarc.c:884:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  884 |     sprintf (new_filename, "%s-meta.%s", opt.warc_filename, extension);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mwarc.c:884:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  884 |     sprintf (new_filename, "%s-meta.%s", opt.warc_filename, extension);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mwarc.c:887:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  887 |       sprintf (new_filename, "%s-%05d.%s", opt.warc_filename,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mwarc.c:887:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  887 |       sprintf (new_filename, "%s-%05d.%s", opt.warc_filename,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mwarc.c:890:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  891 |     sprintf (new_filename, "%s.%s", opt.warc_filename, extension);[0m
      | [0;1;32m                                                                  
[0m[1mwarc.c:891:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  891 |     sprintf (new_filename, "%s.%s", opt.warc_filename, extension);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mwarc.c:891:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  891 |     sprintf (new_filename, "%s.%s", opt.warc_filename, extension);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mwarc.c:904:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  904 |   if (! warc_write_warcinfo_record (new_filename))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  905 |     return false;[0m
      | [0;1;32m                 
[0m[1mwarc.c:908:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  908 |   if (warc_manifest_fp)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  909 |     fprintf (warc_manifest_fp, "%s\n", warc_current_warcinfo_uuid_str);[0m
      | [0;1;32m                                                                       
[0m[1mwarc.c:909:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  909 |     fprintf (warc_manifest_fp, "%s\n", warc_current_warcinfo_uuid_str);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mwarc.c:909:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  909 |     fprintf (warc_manifest_fp, "%s\n", warc_current_warcinfo_uuid_str);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mwarc.c:922:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  922 |   if (warc_current_cdx_file == NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  923 |     return false;[0m
      | [0;1;32m                 
[0m[1mwarc.c:938:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  938 |   fprintf (warc_current_cdx_file, " CDX a b a m s k r M V g u\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:938:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  938 |   fprintf (warc_current_cdx_file, " CDX a b a m s k r M V g u\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:972:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  972 |                   *field_num_original_url = field_num;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  973 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mwarc.c:975:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  975 |                   *field_num_checksum = field_num;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  976 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mwarc.c:978:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  978 |                   *field_num_record_id = field_num;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  979 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mwarc.c:1008:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1008 |       if (field_num == field_num_original_url)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1009 |         val = &original_url;[0m
 1010 |       else if (field_num == field_num_checksum)[0m
      | [0;32m      } 
[0m[1mwarc.c:1010:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1010 |       else if (field_num == field_num_checksum)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1011 |         val = &checksum;[0m
 1012 |       else if (field_num == field_num_record_id)[0m
      | [0;32m      } 
[0m[1mwarc.c:1012:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1012 |       else if (field_num == field_num_record_id)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1013 |         val = &record_id;[0m
 1014 |       else[0m
      | [0;32m      } 
[0m[1mwarc.c:1014:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1014 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1015 |         val = NULL;[0m
      | [0;1;32m                   
[0m[1mwarc.c:1017:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1017 |       if (val != NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1018 |         *val = strdup (token);[0m
      | [0;1;32m                              
[0m[1mwarc.c:1042:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1042 |           memcpy (rec->digest, checksum_v, SHA1_DIGEST_SIZE);[0m
      | [0;1;32m          ^~~~~~
[0m[1mwarc.c:1042:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1042 |           memcpy (rec->digest, checksum_v, SHA1_DIGEST_SIZE);[0m
      | [0;1;32m          ^~~~~~
[0m[1mwarc.c:1075:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1075 |   if (f == NULL)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1076 |     return false;[0m
      | [0;1;32m                 
[0m[1mwarc.c:1084:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1084 |   if (line_length != -1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1085 |     warc_parse_cdx_header (lineptr, &field_num_original_url,[0m
 1086 |                            &field_num_checksum, &field_num_record_id);[0m
      | [0;1;32m                                                                      
[0m[1mwarc.c:1093:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1093 |       if (field_num_original_url == -1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1094 |         logprintf (LOG_NOTQUIET,[0m
 1095 | _("CDX file does not list original urls. (Missing column 'a'.)\n"));[0m
      | [0;1;32m                                                                    
[0m[1mwarc.c:1096:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |       if (field_num_checksum == -1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1097 |         logprintf (LOG_NOTQUIET,[0m
 1098 | _("CDX file does not list checksums. (Missing column 'k'.)\n"));[0m
      | [0;1;32m                                                                
[0m[1mwarc.c:1099:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1099 |       if (field_num_record_id == -1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1100 |         logprintf (LOG_NOTQUIET,[0m
 1101 | _("CDX file does not list record ids. (Missing column 'u'.)\n"));[0m
      | [0;1;32m                                                                 
[0m[1mwarc.c:1146:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1146 |   if (warc_cdx_dedup_table == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1147 |     return NULL;[0m
      | [0;1;32m                
[0m[1mwarc.c:1151:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |   if (rec_existing && strcmp (rec_existing->url, url) == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1152 |     return rec_existing;[0m
 1153 |   else[0m
      | [0;32m  } 
[0m[1mwarc.c:1153:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1153 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1154 |     return NULL;[0m
      | [0;1;32m                
[0m[1mwarc.c:1224:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1224 |   if (opt.warc_maxsize > 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1225 |     warc_start_new_file (true);[0m
      | [0;1;32m                               
[0m[1mwarc.c:1243:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1243 |   fprintf (warc_tmp_fp, "%s\n", program_argstring);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:1243:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1243 |   fprintf (warc_tmp_fp, "%s\n", program_argstring);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:1299:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1299 |   if (path_search (filename, 100, opt.warc_tempdir, "wget", true) == -1)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1300 |     return NULL;[0m
      | [0;1;32m                
[0m[1mwarc.c:1318:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1318 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1319 |     return NULL;[0m
      | [0;1;32m                
[0m[1mwarc.c:1389:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1389 |   memcpy (timestamp_str_cdx     , timestamp_str     , 4); /* "YYYY" "-" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1389:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1389 |   memcpy (timestamp_str_cdx     , timestamp_str     , 4); /* "YYYY" "-" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1390:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1390 |   memcpy (timestamp_str_cdx +  4, timestamp_str +  5, 2); /* "mm"   "-" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1390:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1390 |   memcpy (timestamp_str_cdx +  4, timestamp_str +  5, 2); /* "mm"   "-" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1391:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1391 |   memcpy (timestamp_str_cdx +  6, timestamp_str +  8, 2); /* "dd"   "T" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1391:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1391 |   memcpy (timestamp_str_cdx +  6, timestamp_str +  8, 2); /* "dd"   "T" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1392:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1392 |   memcpy (timestamp_str_cdx +  8, timestamp_str + 11, 2); /* "HH"   ":" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1392:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1392 |   memcpy (timestamp_str_cdx +  8, timestamp_str + 11, 2); /* "HH"   ":" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1393:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1393 |   memcpy (timestamp_str_cdx + 10, timestamp_str + 14, 2); /* "MM"   ":" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1393:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1393 |   memcpy (timestamp_str_cdx + 10, timestamp_str + 14, 2); /* "MM"   ":" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1394:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1394 |   memcpy (timestamp_str_cdx + 12, timestamp_str + 17, 2); /* "SS"   "Z" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1394:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1394 |   memcpy (timestamp_str_cdx + 12, timestamp_str + 17, 2); /* "SS"   "Z" */[0m
      | [0;1;32m  ^~~~~~
[0m[1mwarc.c:1398:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1398 |   if (payload_digest != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1399 |     checksum = payload_digest + 5; /* Skip the "sha1:" */[0m
 1400 |   else[0m
      | [0;32m  } 
[0m[1mwarc.c:1400:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1400 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1401 |     checksum = "-";[0m
      | [0;1;32m                   
[0m[1mwarc.c:1403:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1403 |   if (mime_type == NULL || strlen(mime_type) == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1404 |     mime_type = "-";[0m
      | [0;1;32m                    
[0m[1mwarc.c:1405:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1405 |   if (redirect_location == NULL || strlen(redirect_location) == 0)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1406 |     tmp_location = strdup ("-");[0m
 1407 |   else[0m
      | [0;32m  } 
[0m[1mwarc.c:1407:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1407 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1408 |     tmp_location = url_escape(redirect_location);[0m
      | [0;1;32m                                                 
[0m[1mwarc.c:1413:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1413 |   fprintf (warc_current_cdx_file, "%s %s %s %s %d %s %s - %s %s %s\n", url,[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:1413:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1413 |   fprintf (warc_current_cdx_file, "%s %s %s %s %d %s %s - %s %s %s\n", url,[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwarc.c:1520:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1520 |                   if (ftruncate (fileno (body), payload_offset) == -1)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1521 |                     return false;[0m
      | [0;1;32m                                 
[0m[1mwarc.c:1599:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1599 |   if (content_type == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1600 |     content_type = "application/octet-stream";[0m
      | [0;1;32m                                              
[0m107 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[157/164][141.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpposp77vz.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/retr.c
[1mretr.c:86:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   86 |   xzero (limit_data);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mretr.c:86:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   86 |   xzero (limit_data);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mretr.c:148:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |       if (limit_data.sleep_adjust > 0.5)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  149 |         limit_data.sleep_adjust = 0.5;[0m
  150 |       else if (limit_data.sleep_adjust < -0.5)[0m
      | [0;32m      } 
[0m[1mretr.c:150:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |       else if (limit_data.sleep_adjust < -0.5)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  151 |         limit_data.sleep_adjust = -0.5;[0m
      | [0;1;32m                                       
[0m[1mretr.c:169:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |   if (out == NULL && out2 == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  170 |     return 1;[0m
      | [0;1;32m             
[0m[1mretr.c:184:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |           if (bufsize == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  185 |             return 1;[0m
      | [0;1;32m                     
[0m[1mretr.c:189:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   if (out)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  190 |     fwrite (buf, 1, bufsize, out);[0m
      | [0;1;32m                                  
[0m[1mretr.c:191:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |   if (out2)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  192 |     fwrite (buf, 1, bufsize, out2);[0m
      | [0;1;32m                                   
[0m[1mretr.c:194:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |   if (written)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  195 |     *written += bufsize;[0m
      | [0;1;32m                        
[0m[1mretr.c:211:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |   if (out)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  212 |     fflush (out);[0m
      | [0;1;32m                 
[0m[1mretr.c:213:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |   if (out2)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  214 |     fflush (out2);[0m
      | [0;1;32m                  
[0m[1mretr.c:217:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |   if (out && ferror (out))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  218 |     return -2;[0m
  219 |   else if (out2 && ferror (out2))[0m
      | [0;32m  } 
[0m[1mretr.c:219:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |   else if (out2 && ferror (out2))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  220 |     return -3;[0m
      | [0;1;32m              
[0m[1mretr.c:312:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |   if (flags & rb_skip_startpos)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  313 |     skip = startpos;[0m
      | [0;1;32m                    
[0m[1mretr.c:322:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |       if (opt.dir_prefix)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  323 |         filename_progress = downloaded_filename + strlen (opt.dir_prefix) + 1;[0m
  324 |       else[0m
      | [0;32m      } 
[0m[1mretr.c:324:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  325 |         filename_progress = downloaded_filename;[0m
      | [0;1;32m                                                
[0m[1mretr.c:330:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |   if (opt.limit_rate)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  331 |     limit_bandwidth_reset ();[0m
      | [0;1;32m                             
[0m[1mretr.c:346:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |   if (opt.limit_rate && opt.limit_rate < dlbufsize)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  347 |     dlbufsize = opt.limit_rate;[0m
      | [0;1;32m                               
[0m[1mretr.c:369:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |               else if (out2 != NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  370 |                 fwrite (line, 1, strlen (line), out2);[0m
      | [0;1;32m                                                      
[0m[1mretr.c:385:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |                   if (line == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  386 |                     ret = -1;[0m
  387 |                   else[0m
      | [0;32m                  } 
[0m[1mretr.c:389:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |                       if (out2 != NULL)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  390 |                         fwrite (line, 1, strlen (line), out2);[0m
      | [0;1;32m                                                              
[0m[1mretr.c:399:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  400 |         rdsize = exact ? MIN (toread - sum_read, dlbufsize) : dlbufsize;[0m
      | [0;1;32m                                                                        
[0m[1mretr.c:430:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |       if (progress_interactive && ret < 0 && errno == ETIMEDOUT)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  431 |         ret = 0;                /* interactive timeout, handled above */[0m
  432 |       else if (ret <= 0)[0m
      | [0;32m      } 
[0m[1mretr.c:432:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |       else if (ret <= 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  433 |         break;                  /* EOF or read error */[0m
      | [0;1;32m                                                       
[0m[1mretr.c:438:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |           if (ret > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  439 |             last_successful_read_tm = ptimer_read (timer);[0m
      | [0;1;32m                                                          
[0m[1mretr.c:527:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |                       if (out2 != NULL)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  528 |                         fwrite (line, 1, strlen (line), out2);[0m
      | [0;1;32m                                                              
[0m[1mretr.c:535:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |       if (opt.limit_rate)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  536 |         limit_bandwidth (ret, timer);[0m
      | [0;1;32m                                     
[0m[1mretr.c:538:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |       if (progress)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  539 |         progress_update (progress, ret, ptimer_read (timer));[0m
      | [0;1;32m                                                             
[0m[1mretr.c:546:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |   if (ret < -1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  547 |     ret = -1;[0m
      | [0;1;32m             
[0m[1mretr.c:550:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |   if (progress)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  551 |     progress_finish (progress, ptimer_read (timer));[0m
      | [0;1;32m                                                    
[0m[1mretr.c:555:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |       if (elapsed)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  556 |         *elapsed = ptimer_read (timer);[0m
      | [0;1;32m                                       
[0m[1mretr.c:585:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |   if (qtyread)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  586 |     *qtyread += sum_read;[0m
      | [0;1;32m                         
[0m[1mretr.c:587:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  587 |   if (qtywritten)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  588 |     *qtywritten += sum_written;[0m
      | [0;1;32m                               
[0m[1mretr.c:687:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  687 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  688 |         /* No terminator: simply read the data we know is (or should[0m
  689 |            be) available.  */[0m
  690 |         remain = pklen;[0m
      | [0;1;32m                       
[0m[1mretr.c:714:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  715 |             /* EOF seen: return the data we've read. */[0m
  716 |             return hunk;[0m
      | [0;1;32m                        
[0m[1mretr.c:718:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |       if (end && rdlen == remain)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  719 |         /* The terminator was seen and the remaining data drained --[0m
  720 |            we got what we came for.  */[0m
  721 |         return hunk;[0m
      | [0;1;32m                    
[0m[1mretr.c:736:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  736 |           if (maxsize && bufsize > maxsize)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  737 |             bufsize = maxsize;[0m
      | [0;1;32m                              
[0m[1mretr.c:747:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  748 |     /* p+1 because the line must include '\n' */[0m
  749 |     return p + 1;[0m
      | [0;1;32m                 
[0m[1mretr.c:786:3: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  786 |   snprintf (res, sizeof(res), "%.*f %s",[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mretr.c:786:3: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  786 |   snprintf (res, sizeof(res), "%.*f %s",[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mretr.c:788:38: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of 'rate_names' [clang-analyzer-security.ArrayBound][0m
  788 |            dlrate, !opt.report_bps ? rate_names[units]: rate_names_bits[units]);[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~~~~~
[0m[1mretr.c:787:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  787 |            dlrate >= 99.95 ? 0 : dlrate >= 9.995 ? 1 : 2,[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mretr.c:787:12: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mretr.c:788:25: [0m[0;1;36mnote: [0mField 'report_bps' is false[0m
  788 |            dlrate, !opt.report_bps ? rate_names[units]: rate_names_bits[units]);[0m
      | [0;1;32m                        ^
[0m[1mretr.c:788:20: [0m[0;1;36mnote: [0m'?' condition is true[0m
  788 |            dlrate, !opt.report_bps ? rate_names[units]: rate_names_bits[units]);[0m
      | [0;1;32m                   ^
[0m[1mretr.c:788:38: [0m[0;1;36mnote: [0mAccess of 'rate_names' at index 4, while it holds only 4 'const char *' elements[0m
  788 |            dlrate, !opt.report_bps ? rate_names[units]: rate_names_bits[units]);[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~~~~~
[0m[1mretr.c:788:57: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of 'rate_names_bits' [clang-analyzer-security.ArrayBound][0m
  788 |            dlrate, !opt.report_bps ? rate_names[units]: rate_names_bits[units]);[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mretr.c:787:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  787 |            dlrate >= 99.95 ? 0 : dlrate >= 9.995 ? 1 : 2,[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mretr.c:787:12: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mretr.c:788:25: [0m[0;1;36mnote: [0mField 'report_bps' is true[0m
  788 |            dlrate, !opt.report_bps ? rate_names[units]: rate_names_bits[units]);[0m
      | [0;1;32m                        ^
[0m[1mretr.c:788:20: [0m[0;1;36mnote: [0m'?' condition is false[0m
  788 |            dlrate, !opt.report_bps ? rate_names[units]: rate_names_bits[units]);[0m
      | [0;1;32m                   ^
[0m[1mretr.c:788:57: [0m[0;1;36mnote: [0mAccess of 'rate_names_bits' at index 4, while it holds only 4 'const char *' elements[0m
  788 |            dlrate, !opt.report_bps ? rate_names[units]: rate_names_bits[units]);[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mretr.c:807:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |   if (!opt.report_bps)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  808 |     bibyte = 1024.0;[0m
  809 |   else[0m
      | [0;32m  } 
[0m[1mretr.c:809:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  810 |     bibyte = 1000.0;[0m
      | [0;1;32m                    
[0m[1mretr.c:812:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |   if (secs == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  813 |     /* If elapsed time is exactly zero, it means we're under the[0m
  814 |        resolution of the timer.  This can easily happen on systems[0m
  815 |        that use time() for the timer.  Since the interval lies between[0m
  816 |        0 and the timer's resolution, assume half the resolution.  */[0m
  817 |     secs = ptimer_resolution () / 2.0;[0m
      | [0;1;32m                                      
[0m[1mretr.c:820:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |   if (dlrate < bibyte)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  821 |     *units = 0;[0m
  822 |   else if (dlrate < (bibyte * bibyte))[0m
      | [0;32m  } 
[0m[1mretr.c:822:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  822 |   else if (dlrate < (bibyte * bibyte))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  823 |     *units = 1, dlrate /= bibyte;[0m
  824 |   else if (dlrate < (bibyte * bibyte * bibyte))[0m
      | [0;32m  } 
[0m[1mretr.c:824:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |   else if (dlrate < (bibyte * bibyte * bibyte))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  825 |     *units = 2, dlrate /= (bibyte * bibyte);[0m
  826 |   else if (dlrate < (bibyte * bibyte * bibyte * bibyte))[0m
      | [0;32m  } 
[0m[1mretr.c:826:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |   else if (dlrate < (bibyte * bibyte * bibyte * bibyte))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  827 |     *units = 3, dlrate /= (bibyte * bibyte * bibyte);[0m
  828 |   else {[0m
      | [0;32m  } 
[0m[1mretr.c:830:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  830 |     if (dlrate > 99.99)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  831 |                  dlrate = 99.99; // upper limit 99.99TB/s[0m
      | [0;1;32m                                                         
[0m[1mretr.c:894:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |   if (newloc)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  895 |     *newloc = NULL;[0m
      | [0;1;32m                   
[0m[1mretr.c:896:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |   if (file)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  897 |     *file = NULL;[0m
      | [0;1;32m                 
[0m[1mretr.c:899:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  899 |   if (!refurl)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  900 |     refurl = opt.referer;[0m
      | [0;1;32m                         
[0m[1mretr.c:928:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  928 |           if (orig_parsed != u)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  929 |             url_free (u);[0m
      | [0;1;32m                         
[0m[1mretr.c:941:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  941 |           if (orig_parsed != u)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  942 |             url_free (u);[0m
      | [0;1;32m                         
[0m[1mretr.c:982:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  982 |       if (redirection_count)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  983 |         oldrec = glob = false;[0m
      | [0;1;32m                              
[0m[1mretr.c:999:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  999 |           if (has_html_suffix_p (local_file))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1000 |             *dt |= TEXTHTML;[0m
      | [0;1;32m                            
[0m[1mretr.c:1095:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1095 |       if (result != NEWLOCATION_KEEP_POST && !method_suspended)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1096 |         SUSPEND_METHOD;[0m
      | [0;1;32m                       
[0m[1mretr.c:1124:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1124 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1125 |               DEBUGP (("[Needn't fallback to non-utf8 for %s\n", quote (url)));[0m
      | [0;1;32m                                                                               
[0m[1mretr.c:1127:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1127 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1128 |           DEBUGP (("[Couldn't fallback to non-utf8 for %s\n", quote (url)));[0m
      | [0;1;32m                                                                            
[0m[1mretr.c:1135:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1135 |       if (!opt.spider && redirection_count && 0 != strcmp (origurl, u->url))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1136 |         register_redirection (origurl, u->url);[0m
      | [0;1;32m                                               
[0m[1mretr.c:1138:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |       if (*dt & TEXTHTML)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1139 |         register_html (local_file);[0m
      | [0;1;32m                                   
[0m[1mretr.c:1141:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1141 |       if (*dt & TEXTCSS)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1142 |         register_css (local_file);[0m
      | [0;1;32m                                  
[0m[1mretr.c:1145:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1145 |   if (file)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1146 |     *file = local_file ? local_file : NULL;[0m
 1147 |   else[0m
      | [0;32m  } 
[0m[1mretr.c:1147:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1147 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1148 |     xfree (local_file);[0m
      | [0;1;32m                       
[0m[1mretr.c:1150:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1150 |   if (orig_parsed != u)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1151 |     url_free (u);[0m
      | [0;1;32m                 
[0m[1mretr.c:1155:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1155 |       if (newloc)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1156 |         *newloc = url;[0m
 1157 |       else[0m
      | [0;32m      } 
[0m[1mretr.c:1157:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1157 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1158 |         xfree (url);[0m
      | [0;1;32m                    
[0m[1mretr.c:1162:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1162 |       if (newloc)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1163 |         *newloc = NULL;[0m
      | [0;1;32m                       
[0m[1mretr.c:1170:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1170 |   if (register_status)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1171 |     inform_exit_status (result);[0m
      | [0;1;32m                                
[0m[1mretr.c:1210:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1210 |       if (!opt.base_href)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1211 |         opt.base_href = xstrdup (url);[0m
      | [0;1;32m                                      
[0m[1mretr.c:1217:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1217 |       if (!url_file || (status != RETROK))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1218 |         return status;[0m
      | [0;1;32m                      
[0m[1mretr.c:1220:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1220 |       if (dt & TEXTHTML)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1221 |         html = true;[0m
      | [0;1;32m                    
[0m[1mretr.c:1236:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1236 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1237 |     input_file = (char *) file;[0m
      | [0;1;32m                               
[0m[1mretr.c:1251:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1251 |       if (cur_url->ignore_when_downloading)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1252 |         continue;[0m
      | [0;1;32m                 
[0m[1mretr.c:1285:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1285 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1286 |         status = retrieve_url (parsed_url ? parsed_url : cur_url->url,[0m
 1287 |                                cur_url->url->url, &filename,[0m
 1288 |                                &new_file, NULL, &dt, opt.recursive, tmpiri,[0m
 1289 |                                true);[0m
      | [0;1;32m                                     
[0m[1mretr.c:1292:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1292 |       if (parsed_url)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1293 |           url_free (parsed_url);[0m
      | [0;1;32m                                
[0m[1mretr.c:1300:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1300 |           if (unlink (filename))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1301 |             logprintf (LOG_NOTQUIET, "Failed to unlink %s: (%d) %s\n", filename, errno, strerror (errno));[0m
      | [0;1;32m                                                                                                          
[0m[1mretr.c:1348:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1348 |       if (count <= opt.waitretry)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1349 |         xsleep (count - 1);[0m
 1350 |       else[0m
      | [0;32m      } 
[0m[1mretr.c:1350:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1350 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1351 |         xsleep (opt.waitretry);[0m
      | [0;1;32m                               
[0m[1mretr.c:1355:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1355 |       if (!opt.random_wait || count > 1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1356 |         /* If random-wait is not specified, or if we are sleeping[0m
 1357 |            between retries of the same download, sleep the fixed[0m
 1358 |            interval.  */[0m
 1359 |         xsleep (opt.wait);[0m
 1360 |       else[0m
      | [0;32m      } 
[0m[1mretr.c:1380:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1380 |       if (l->url)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1381 |         url_free (l->url);[0m
      | [0;1;32m                          
[0m[1mretr.c:1408:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1408 |   if (stat (fname, &sb) == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1409 |     if (S_ISREG (sb.st_mode) == 0)[0m
 1410 |       return;[0m
      | [0;1;32m             
[0m[1mretr.c:1409:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1409 |     if (S_ISREG (sb.st_mode) == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1410 |       return;[0m
      | [0;1;32m             
[0m[1mretr.c:1428:29: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1428 |       overflow = (unsigned) snprintf (to, FILE_BUF_SIZE, "%s%s%d", fname, SEP, i) >= FILE_BUF_SIZE;[0m
      | [0;1;32m                            ^~~~~~~~
[0m[1mretr.c:1428:29: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1428 |       overflow = (unsigned) snprintf (to, FILE_BUF_SIZE, "%s%s%d", fname, SEP, i) >= FILE_BUF_SIZE;[0m
      | [0;1;32m                            ^~~~~~~~
[0m[1mretr.c:1429:30: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1429 |       overflow |= (unsigned) snprintf (from, FILE_BUF_SIZE, "%s%s%d", fname, SEP, i - 1) >= FILE_BUF_SIZE;[0m
      | [0;1;32m                             ^~~~~~~~
[0m[1mretr.c:1429:30: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1429 |       overflow |= (unsigned) snprintf (from, FILE_BUF_SIZE, "%s%s%d", fname, SEP, i - 1) >= FILE_BUF_SIZE;[0m
      | [0;1;32m                             ^~~~~~~~
[0m[1mretr.c:1431:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1431 |       if (overflow)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1432 |           errno = ENAMETOOLONG;[0m
      | [0;1;32m                               
[0m[1mretr.c:1438:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1438 |           if (errno != ENOENT)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1439 |               logprintf (LOG_NOTQUIET, "Failed to rename %s to %s: (%d) %s\n",[0m
 1440 |                       from, to, errno, strerror (errno));[0m
      | [0;1;32m                                                         
[0m[1mretr.c:1444:25: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1444 |   overflow = (unsigned) snprintf (to, FILE_BUF_SIZE, "%s%s%d", fname, SEP, 1) >= FILE_BUF_SIZE;[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mretr.c:1444:25: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1444 |   overflow = (unsigned) snprintf (to, FILE_BUF_SIZE, "%s%s%d", fname, SEP, 1) >= FILE_BUF_SIZE;[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mretr.c:1445:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1445 |   if (overflow)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1446 |     errno = ENAMETOOLONG;[0m
      | [0;1;32m                         
[0m[1mretr.c:1449:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1449 |       if (errno != ENOENT)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1450 |           logprintf (LOG_NOTQUIET, "Failed to rename %s to %s: (%d) %s\n",[0m
 1451 |                   from, to, errno, strerror (errno));[0m
      | [0;1;32m                                                     
[0m[1mretr.c:1467:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1467 |   if (!opt.use_proxy)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1468 |     return NULL;[0m
      | [0;1;32m                
[0m[1mretr.c:1469:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1469 |   if (no_proxy_match (u->host, (const char **)opt.no_proxy))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1470 |     return NULL;[0m
      | [0;1;32m                
[0m[1mretr.c:1475:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1475 |       proxy = opt.http_proxy ? opt.http_proxy : getenv ("http_proxy");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1476 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mretr.c:1486:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1486 |       proxy = opt.ftp_proxy ? opt.ftp_proxy : getenv ("ftp_proxy");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1487 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mretr.c:1489:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1489 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mretr.c:1491:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1491 |   if (!proxy || !*proxy)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1492 |     return NULL;[0m
      | [0;1;32m                
[0m[1mretr.c:1497:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1497 |   if (rewritten_url)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1498 |     return rewritten_url;[0m
      | [0;1;32m                         
[0m[1mretr.c:1511:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1511 |   if (!u)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 1512 |     return false;[0m
      | [0;1;32m                 
[0m[1mretr.c:1523:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1523 |   if (!no_proxy)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1524 |     return false;[0m
 1525 |   else[0m
      | [0;32m  } 
[0m[1mretr.c:1525:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1525 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1526 |     return sufmatch (no_proxy, host);[0m
      | [0;1;32m                                     
[0m[1mretr.c:1535:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1535 |       if (output_stream_regular)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1536 |         *file = opt.output_document;[0m
      | [0;1;32m                                    
[0m[1mretr.c:1538:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1538 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1539 |     *file = default_file;[0m
      | [0;1;32m                         
[0m[1mretr.c:1555:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1555 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1556 |     return false;[0m
      | [0;1;32m                 
[0m131 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[158/164][204.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp6_b8q_0u.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/cookies.c
[1mcookies.c:185:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |   if (!chain)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  186 |     goto nomatch;[0m
      | [0;1;32m                 
[0m[1mcookies.c:189:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   for (; chain; prev = chain, chain = chain->next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  190 |     if (0 == strcmp (cookie->path, chain->path)[0m
  191 |         && 0 == strcmp (cookie->attr, chain->attr)[0m
  192 |         && cookie->port == chain->port)[0m
  193 |       {[0m
  194 |         *prevptr = prev;[0m
  195 |         return chain;[0m
  196 |       }[0m
      | [0;1;32m       
[0m[1mcookies.c:247:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  248 |         cookie->next = chain_head;[0m
      | [0;1;32m                                  
[0m[1mcookies.c:289:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |   if (!hash_table_count (jar->chains))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  290 |     /* No elements == nothing to discard. */[0m
  291 |     return;[0m
      | [0;1;32m           
[0m[1mcookies.c:296:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |       if (prev)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  297 |         /* Simply unchain the victim. */[0m
  298 |         prev->next = victim->next;[0m
  299 |       else[0m
      | [0;32m      } 
[0m[1mcookies.c:321:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  322 |             hash_table_put (jar->chains, chain_key, victim->next);[0m
      | [0;1;32m                                                                  
[0m[1mcookies.c:360:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |   if (!extract_param (&ptr, &name, &value, ';', NULL))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  361 |     goto error;[0m
      | [0;1;32m               
[0m[1mcookies.c:362:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |   if (!value.b)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  363 |     goto error;[0m
      | [0;1;32m               
[0m[1mcookies.c:366:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |   if (*(value.b - 1) == '"')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  367 |     value.b--;[0m
      | [0;1;32m              
[0m[1mcookies.c:368:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |   if (*value.e == '"')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  369 |     value.e++;[0m
      | [0;1;32m              
[0m[1mcookies.c:378:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |           if (!TOKEN_NON_EMPTY (value))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  379 |             goto error;[0m
      | [0;1;32m                       
[0m[1mcookies.c:385:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |           if (*value.b == '.')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  386 |             ++value.b;[0m
      | [0;1;32m                      
[0m[1mcookies.c:391:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |           if (!TOKEN_NON_EMPTY (value))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  392 |             goto error;[0m
      | [0;1;32m                       
[0m[1mcookies.c:402:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |           if (!TOKEN_NON_EMPTY (value) || value_len >= sizeof (value_copy))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  403 |             goto error;[0m
      | [0;1;32m                       
[0m[1mcookies.c:405:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  405 |           memcpy (value_copy, value.b, value_len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mcookies.c:405:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  405 |           memcpy (value_copy, value.b, value_len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mcookies.c:419:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |               if (cookie->expiry_time < cookies_now)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  420 |                 cookie->discard_requested = 1;[0m
      | [0;1;32m                                              
[0m[1mcookies.c:429:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |           if (!TOKEN_NON_EMPTY (value) || value_len >= sizeof (value_copy))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  430 |             goto error;[0m
      | [0;1;32m                       
[0m[1mcookies.c:432:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  432 |           memcpy (value_copy, value.b, value_len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mcookies.c:432:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  432 |           memcpy (value_copy, value.b, value_len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mcookies.c:435:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  435 |           sscanf (value_copy, "%lf", &maxage);[0m
      | [0;1;32m          ^~~~~~
[0m[1mcookies.c:435:11: [0m[0;1;36mnote: [0mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11[0m
  435 |           sscanf (value_copy, "%lf", &maxage);[0m
      | [0;1;32m          ^~~~~~
[0m[1mcookies.c:436:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |           if (maxage == -1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  437 |             /* something went wrong. */[0m
  438 |             goto error;[0m
      | [0;1;32m                       
[0m[1mcookies.c:444:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |           if (maxage == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  445 |             cookie->discard_requested = 1;[0m
      | [0;1;32m                                          
[0m[1mcookies.c:454:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |   if (*ptr)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  455 |     /* extract_param has encountered a syntax error */[0m
  456 |     goto error;[0m
      | [0;1;32m               
[0m[1mcookies.c:462:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |   if (!silent)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  463 |     logprintf (LOG_NOTQUIET,[0m
  464 |                _("Syntax error in Set-Cookie: %s at position %d.\n"),[0m
  465 |                quotearg_style (escape_quoting_style, set_cookie),[0m
  466 |                (int) (ptr - set_cookie));[0m
      | [0;1;32m                                         
[0m[1mcookies.c:510:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  510 |   if (*p != '\0')[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  511 |     return false;[0m
      | [0;1;32m                 
[0m[1mcookies.c:608:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  608 |   if (0 == strcasecmp (cookie_domain, host))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  609 |     return true;[0m
      | [0;1;32m                
[0m[1mcookies.c:614:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |   if (!match_tail (host, cookie_domain, true))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  615 |     return false;[0m
      | [0;1;32m                 
[0m[1mcookies.c:648:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |     if (*p == '.')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  649 |       /* Ignore leading period in this calculation. */[0m
  650 |       ++p;[0m
      | [0;1;32m          
[0m[1mcookies.c:652:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |     for (out = 0; !out; p++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m[1mcookies.c:656:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  656 |           out = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  657 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mcookies.c:659:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  659 |           if (ldcl == 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  660 |             /* Empty domain component found -- the domain is invalid. */[0m
  661 |             return false;[0m
  662 |           if (*(p + 1) == '\0')[0m
  663 |             {[0m
  664 |               /* Tolerate trailing '.' by not treating the domain as[0m
  665 |                  one ending with an empty domain component.  */[0m
  666 |               out = 1;[0m
  667 |               break;[0m
  668 |             }[0m
  669 |           nldcl = ldcl;[0m
  670 |           ldcl  = 0;[0m
  671 |           ++dccount;[0m
  672 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mcookies.c:659:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  659 |           if (ldcl == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  660 |             /* Empty domain component found -- the domain is invalid. */[0m
  661 |             return false;[0m
      | [0;1;32m                         
[0m[1mcookies.c:674:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  674 |           ++ldcl;[0m
      | [0;1;32m          ^     
[0m      | [0;32m          {     ;} 
[0m[1mcookies.c:679:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |     if (dccount < 2)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  680 |       return false;[0m
      | [0;1;32m                   
[0m[1mcookies.c:691:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  691 |         for (i = 0; i < countof (known_toplevel_domains); i++)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  692 |           if (match_tail (cookie_domain, known_toplevel_domains[i], true))[0m
  693 |             {[0m
  694 |               known_toplevel = true;[0m
  695 |               break;[0m
  696 |             }[0m
      | [0;1;32m             
[0m[1mcookies.c:697:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  697 |         if (!known_toplevel && nldcl <= 3)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  698 |           return false;[0m
      | [0;1;32m                       
[0m[1mcookies.c:713:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |       if (hlen > dlen && host[hlen - dlen - 1] != '.')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  714 |         return false;[0m
      | [0;1;32m                     
[0m[1mcookies.c:749:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |   if (pathlen < sizeof (buf) - 1)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  750 |     tmp = buf;[0m
  751 |   else[0m
      | [0;32m  } 
[0m[1mcookies.c:751:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  752 |     tmp = xmalloc (pathlen + 2);[0m
      | [0;1;32m                                
[0m[1mcookies.c:755:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  755 |   memcpy (tmp + 1, path, pathlen + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcookies.c:755:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  755 |   memcpy (tmp + 1, path, pathlen + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcookies.c:759:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |   if (!cookie)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  760 |     goto out;[0m
      | [0;1;32m             
[0m[1mcookies.c:769:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  769 |       if (port != 80 && port != 443)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  770 |         cookie->port = port;[0m
      | [0;1;32m                            
[0m[1mcookies.c:791:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |       if (trailing_slash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  792 |         cookie->path = strdupdelim (path, trailing_slash + 1);[0m
  793 |       else[0m
      | [0;32m      } 
[0m[1mcookies.c:793:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  794 |         /* no slash in the string -- can this even happen? */[0m
  795 |         cookie->path = xstrdup (path);[0m
      | [0;1;32m                                      
[0m[1mcookies.c:818:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |   if (tmp != buf)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  819 |     xfree (tmp);[0m
      | [0;1;32m                
[0m[1mcookies.c:823:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  823 |   if (cookie)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  824 |     delete_cookie (cookie);[0m
      | [0;1;32m                           
[0m[1mcookies.c:825:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  825 |   if (tmp != buf)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  826 |     xfree (tmp);[0m
      | [0;1;32m                
[0m[1mcookies.c:840:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  840 |   for (p = string; *p; p++)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  841 |     if (*p == chr)[0m
  842 |       ++count;[0m
      | [0;1;32m              
[0m[1mcookies.c:841:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  841 |     if (*p == chr)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  842 |       ++count;[0m
      | [0;1;32m              
[0m[1mcookies.c:866:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  866 |   if (!hash_table_count (jar->chains))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  867 |     return 0;[0m
      | [0;1;32m             
[0m[1mcookies.c:869:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  869 |   if (numeric_address_p (host))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  870 |     /* If host is an IP address, only check for the exact match. */[0m
  871 |     passes = 1;[0m
  872 |   else[0m
      | [0;32m  } 
[0m[1mcookies.c:872:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  872 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  873 |     /* Otherwise, check all the subdomains except the top-level (last)[0m
  874 |        one.  As a domain with N components has N-1 dots, the number of[0m
  875 |        passes equals the number of dots.  */[0m
  876 |     passes = count_char (host, '.');[0m
      | [0;1;32m                                    
[0m[1mcookies.c:887:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |       if (chain)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  888 |         dest[dest_count++] = chain;[0m
      | [0;1;32m                                   
[0m[1mcookies.c:889:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  889 |       if (++passcnt >= passes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  890 |         break;[0m
      | [0;1;32m              
[0m[1mcookies.c:905:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  905 |   if (0 != strncmp (full_path, prefix, len))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  906 |     /* FULL_PATH doesn't begin with PREFIX. */[0m
  907 |     return 0;[0m
      | [0;1;32m             
[0m[1mcookies.c:927:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  927 |   if (cookie_expired_p (cookie))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  928 |     /* Ignore stale cookies.  Don't bother unchaining the cookie at[0m
  929 |        this point -- Wget is a relatively short-lived application, and[0m
  930 |        stale cookies will not be saved by `save_cookies'.  On the[0m
  931 |        other hand, this function should be as efficient as[0m
  932 |        possible.  */[0m
  933 |     return false;[0m
      | [0;1;32m                 
[0m[1mcookies.c:935:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  935 |   if (cookie->secure && !secflag)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  936 |     /* Don't transmit secure cookies over insecure connections.  */[0m
  937 |     return false;[0m
      | [0;1;32m                 
[0m[1mcookies.c:938:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  938 |   if (cookie->port != PORT_ANY && cookie->port != port)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  939 |     return false;[0m
      | [0;1;32m                 
[0m[1mcookies.c:945:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |       && 0 != strcasecmp (host, cookie->domain))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  946 |     return false;[0m
      | [0;1;32m                 
[0m[1mcookies.c:949:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |   if (pg == 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  950 |     return false;[0m
      | [0;1;32m                 
[0m[1mcookies.c:952:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  952 |   if (path_goodness)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  953 |     /* If the caller requested path_goodness, we return it.  This is[0m
  954 |        an optimization, so that the caller doesn't need to call[0m
  955 |        path_matches() again.  */[0m
  956 |     *path_goodness = pg;[0m
      | [0;1;32m                        
[0m[1mcookies.c:1014:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1014 |           if (!strcmp (c0->attr, c1->attr) && !strcmp (c0->value, c1->value))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1015 |             continue;           /* ignore the duplicate */[0m
      | [0;1;32m                                                          
[0m[1mcookies.c:1021:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |       if (h != t)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1022 |         *t++ = *h;[0m
 1023 |       else[0m
      | [0;32m      } 
[0m[1mcookies.c:1023:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1024 |         t++;[0m
      | [0;1;32m            
[0m[1mcookies.c:1074:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1074 |   if (chain_count > (int) countof (chains))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1075 |     return NULL;[0m
      | [0;1;32m                
[0m[1mcookies.c:1079:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |   if (chain_count <= 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1080 |     return NULL;[0m
      | [0;1;32m                
[0m[1mcookies.c:1089:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1089 |     if (pathlen < sizeof (pathbuf) - 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1090 |       tmp = pathbuf;[0m
 1091 |     else[0m
      | [0;32m    } 
[0m[1mcookies.c:1091:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1091 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1092 |       tmp = xmalloc (pathlen + 2);[0m
      | [0;1;32m                                  
[0m[1mcookies.c:1095:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1095 |     memcpy (tmp + 1, path, pathlen + 1);[0m
      | [0;1;32m    ^~~~~~
[0m[1mcookies.c:1095:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1095 |     memcpy (tmp + 1, path, pathlen + 1);[0m
      | [0;1;32m    ^~~~~~
[0m[1mcookies.c:1107:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1107 |   for (i = 0; i < (unsigned) chain_count; i++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1108 |     for (cookie = chains[i]; cookie; cookie = cookie->next)[0m
 1109 |       if (cookie_matches_url (cookie, host, port, path, secflag, NULL))[0m
 1110 |         ++count;[0m
      | [0;1;32m                
[0m[1mcookies.c:1108:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1108 |     for (cookie = chains[i]; cookie; cookie = cookie->next)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1109 |       if (cookie_matches_url (cookie, host, port, path, secflag, NULL))[0m
 1110 |         ++count;[0m
      | [0;1;32m                
[0m[1mcookies.c:1109:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1109 |       if (cookie_matches_url (cookie, host, port, path, secflag, NULL))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1110 |         ++count;[0m
      | [0;1;32m                
[0m[1mcookies.c:1111:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1111 |   if (!count)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1112 |     goto out;                /* no cookies matched */[0m
      | [0;1;32m                                                     
[0m[1mcookies.c:1115:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1115 |   if (count > SIZE_MAX / sizeof (struct weighed_cookie))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1116 |     goto out;                /* unable to process so many cookies */[0m
      | [0;1;32m                                                                    
[0m[1mcookies.c:1122:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1122 |   for (i = 0; i < (unsigned) chain_count; i++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1123 |     for (cookie = chains[i]; cookie; cookie = cookie->next)[0m
 1124 |       {[0m
 1125 |         int pg;[0m
 1126 |         if (!cookie_matches_url (cookie, host, port, path, secflag, &pg))[0m
 1127 |           continue;[0m
 1128 |         outgoing[ocnt].cookie = cookie;[0m
 1129 |         outgoing[ocnt].domain_goodness = strlen (cookie->domain);[0m
 1130 |         outgoing[ocnt].path_goodness   = pg;[0m
 1131 |         ++ocnt;[0m
 1132 |       }[0m
      | [0;1;32m       
[0m[1mcookies.c:1126:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1126 |         if (!cookie_matches_url (cookie, host, port, path, secflag, &pg))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 1127 |           continue;[0m
      | [0;1;32m                   
[0m[1mcookies.c:1165:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1165 |       memcpy (result + pos, c->attr, namlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mcookies.c:1165:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1165 |       memcpy (result + pos, c->attr, namlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mcookies.c:1168:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1168 |       memcpy (result + pos, c->value, vallen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mcookies.c:1168:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1168 |       memcpy (result + pos, c->value, vallen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mcookies.c:1181:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1181 |   if (path != pathbuf)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1182 |     xfree (path);[0m
      | [0;1;32m                 
[0m[1mcookies.c:1227:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1227 |   if (!colon)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1228 |     return 0;[0m
      | [0;1;32m             
[0m[1mcookies.c:1229:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1229 |   for (p = colon + 1; p < domain_e && c_isdigit (*p); p++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1230 |     port = 10 * port + (*p - '0');[0m
      | [0;1;32m                                  
[0m[1mcookies.c:1231:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1231 |   if (p < domain_e)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1232 |     /* Garbage following port number. */[0m
 1233 |     return 0;[0m
      | [0;1;32m             
[0m[1mcookies.c:1283:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1283 |       while (*p && c_isspace (*p))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1284 |         ++p;[0m
      | [0;1;32m            
[0m[1mcookies.c:1286:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1286 |       if (!*p || *p == '#')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1287 |         continue;[0m
      | [0;1;32m                 
[0m[1mcookies.c:1300:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1300 |       if (value_e > value_b && value_e[-1] == '\n')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1301 |         --value_e;[0m
      | [0;1;32m                  
[0m[1mcookies.c:1302:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1302 |       if (value_e > value_b && value_e[-1] == '\r')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1303 |         --value_e;[0m
      | [0;1;32m                  
[0m[1mcookies.c:1322:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1322 |       if (port)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1323 |         cookie->port = port;[0m
      | [0;1;32m                            
[0m[1mcookies.c:1325:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1325 |       if (*domain_b == '.')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1326 |         ++domain_b;             /* remove leading dot internally */[0m
      | [0;1;32m                                                                   
[0m[1mcookies.c:1335:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1335 |       sscanf (expires_b, "%lf", &expiry);[0m
      | [0;1;32m      ^~~~~~
[0m[1mcookies.c:1335:7: [0m[0;1;36mnote: [0mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11[0m
 1335 |       sscanf (expires_b, "%lf", &expiry);[0m
      | [0;1;32m      ^~~~~~
[0m[1mcookies.c:1346:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1346 |           if (expiry < cookies_now)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1347 |             goto abort_cookie;  /* ignore stale cookie. */[0m
      | [0;1;32m                                                          
[0m[1mcookies.c:1386:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1386 |   fprintf (fp, "# Generated by Wget on %s.\n", datetime_str (cookies_now));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mcookies.c:1386:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1386 |   fprintf (fp, "# Generated by Wget on %s.\n", datetime_str (cookies_now));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mcookies.c:1397:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1397 |           if (!cookie->permanent && !opt.keep_session_cookies)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1398 |             continue;[0m
      | [0;1;32m                     
[0m[1mcookies.c:1399:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1399 |           if (cookie_expired_p (cookie))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1400 |             continue;[0m
      | [0;1;32m                     
[0m[1mcookies.c:1401:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1401 |           if (!cookie->domain_exact)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1402 |             fputc ('.', fp);[0m
      | [0;1;32m                            
[0m[1mcookies.c:1404:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1404 |           if (cookie->port != PORT_ANY)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1405 |             fprintf (fp, ":%d", cookie->port);[0m
      | [0;1;32m                                              
[0m[1mcookies.c:1405:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1405 |             fprintf (fp, ":%d", cookie->port);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mcookies.c:1405:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1405 |             fprintf (fp, ":%d", cookie->port);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mcookies.c:1406:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1406 |           fprintf (fp, "\t%s\t%s\t%s\t%.0f\t%s\t%s\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mcookies.c:1406:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1406 |           fprintf (fp, "\t%s\t%s\t%s\t%.0f\t%s\t%s\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mcookies.c:1411:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1411 |           if (ferror (fp))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1412 |             goto out;[0m
      | [0;1;32m                     
[0m[1mcookies.c:1416:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1416 |   if (ferror (fp))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1417 |     logprintf (LOG_NOTQUIET, _("Error writing to %s: %s\n"),[0m
 1418 |                quote (file), strerror (errno));[0m
      | [0;1;32m                                               
[0m[1mcookies.c:1419:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1419 |   if (fclose (fp) < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1420 |     logprintf (LOG_NOTQUIET, _("Error closing %s: %s\n"),[0m
 1421 |                quote (file), strerror (errno));[0m
      | [0;1;32m                                               
[0m126 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[159/164][209.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmp_8mhcymi.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/http.c
[1mhttp.c:190:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  190 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mhttp.c:192:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  192 |       xfree (hdr->name);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  193 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./utils.h:54:18: [0m[0;1;36mnote: [0mexpanded from macro 'xfree'[0m
   54 | #define xfree(p) do { free ((void *) (p)); p = NULL; } while (0)[0m
      | [0;1;32m                 ^
[0m[1mhttp.c:195:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  195 |       xfree (hdr->value);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  196 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./utils.h:54:18: [0m[0;1;36mnote: [0mexpanded from macro 'xfree'[0m
   54 | #define xfree(p) do { free ((void *) (p)); p = NULL; } while (0)[0m
      | [0;1;32m                 ^
[0m[1mhttp.c:198:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  198 |       xfree (hdr->name);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  199 |       xfree (hdr->value);[0m
  200 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./utils.h:54:18: [0m[0;1;36mnote: [0mexpanded from macro 'xfree'[0m
   54 | #define xfree(p) do { free ((void *) (p)); p = NULL; } while (0)[0m
      | [0;1;32m                 ^
[0m[1mhttp.c:243:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |       if (release_policy == rel_name || release_policy == rel_both)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  244 |         xfree (name);[0m
      | [0;1;32m                     
[0m[1mhttp.c:285:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |   if (!(p = strchr (header, ':')))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  286 |     return;[0m
      | [0;1;32m           
[0m[1mhttp.c:291:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |   while (c_isspace (*p))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  292 |     ++p;[0m
      | [0;1;32m        
[0m[1mhttp.c:311:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |           if (i < req->hcount - 1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  312 |             memmove (hdr, hdr + 1, (req->hcount - i - 1) * sizeof (*hdr));[0m
      | [0;1;32m                                                                          
[0m[1mhttp.c:312:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  312 |             memmove (hdr, hdr + 1, (req->hcount - i - 1) * sizeof (*hdr));[0m
      | [0;1;32m            ^~~~~~~
[0m[1mhttp.c:312:13: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  312 |             memmove (hdr, hdr + 1, (req->hcount - i - 1) * sizeof (*hdr));[0m
      | [0;1;32m            ^~~~~~~
[0m[1mhttp.c:356:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  356 |   APPEND (p, req->method); *p++ = ' ';[0m
      | [0;1;32m  ^
[0m[1mhttp.c:322:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
  322 |   memcpy (p, str, A_len);                       \[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:356:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  356 |   APPEND (p, req->method); *p++ = ' ';[0m
      | [0;1;32m  ^
[0m[1mhttp.c:322:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
  322 |   memcpy (p, str, A_len);                       \[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:357:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  357 |   APPEND (p, req->arg);    *p++ = ' ';[0m
      | [0;1;32m  ^
[0m[1mhttp.c:322:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
  322 |   memcpy (p, str, A_len);                       \[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:357:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  357 |   APPEND (p, req->arg);    *p++ = ' ';[0m
      | [0;1;32m  ^
[0m[1mhttp.c:322:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
  322 |   memcpy (p, str, A_len);                       \[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:358:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  358 |   memcpy (p, "HTTP/1.1\r\n", 10); p += 10;[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:358:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  358 |   memcpy (p, "HTTP/1.1\r\n", 10); p += 10;[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:363:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  363 |       APPEND (p, hdr->name);[0m
      | [0;1;32m      ^
[0m[1mhttp.c:322:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
  322 |   memcpy (p, str, A_len);                       \[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:363:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  363 |       APPEND (p, hdr->name);[0m
      | [0;1;32m      ^
[0m[1mhttp.c:322:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
  322 |   memcpy (p, str, A_len);                       \[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:365:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  365 |       APPEND (p, hdr->value);[0m
      | [0;1;32m      ^
[0m[1mhttp.c:322:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
  322 |   memcpy (p, str, A_len);                       \[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:365:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  365 |       APPEND (p, hdr->value);[0m
      | [0;1;32m      ^
[0m[1mhttp.c:322:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
  322 |   memcpy (p, str, A_len);                       \[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:379:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |   if (write_error < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  380 |     logprintf (LOG_VERBOSE, _("Failed writing HTTP request: %s.\n"),[0m
  381 |                fd_errstr (fd));[0m
  382 |   else if (warc_tmp != NULL)[0m
      | [0;32m  } 
[0m[1mhttp.c:386:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |       if (warc_tmp_written != size - 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  387 |         write_error = -2;[0m
      | [0;1;32m                         
[0m[1mhttp.c:403:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |   if (!req)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  404 |     return;[0m
      | [0;1;32m           
[0m[1mhttp.c:407:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |   for (i = 0; i < req->hcount; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  408 |     release_header (&req->headers[i]);[0m
      | [0;1;32m                                      
[0m[1mhttp.c:482:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  482 |   if (!fp)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  483 |     return -1;[0m
      | [0;1;32m              
[0m[1mhttp.c:488:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |       if (length == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  489 |         break;[0m
      | [0;1;32m              
[0m[1mhttp.c:538:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |   if (start == peeked && 0 != memcmp (start, "HTTP", MIN (peeklen, 4)))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  539 |     return start;[0m
      | [0;1;32m                 
[0m[1mhttp.c:549:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |   for (; p < end - 2; p++)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  550 |     if (*p == '\n')[0m
  551 |       {[0m
  552 |         if (p[1] == '\r' && p[2] == '\n')[0m
  553 |           return p + 3;[0m
  554 |         else if (p[1] == '\n')[0m
  555 |           return p + 2;[0m
  556 |       }[0m
      | [0;1;32m       
[0m[1mhttp.c:552:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |         if (p[1] == '\r' && p[2] == '\n')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  553 |           return p + 3;[0m
  554 |         else if (p[1] == '\n')[0m
      | [0;32m        } 
[0m[1mhttp.c:554:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |         else if (p[1] == '\n')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  555 |           return p + 2;[0m
      | [0;1;32m                       
[0m[1mhttp.c:558:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |   if (peeklen >= 2 && p[0] == '\n' && p[1] == '\n')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  559 |     return p + 2;[0m
      | [0;1;32m                 
[0m[1mhttp.c:645:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |       if (!hdr[0] || (hdr[0] == '\r' && hdr[1] == '\n') || hdr[0] == '\n')[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  646 |         break;[0m
      | [0;1;32m              
[0m[1mhttp.c:661:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  661 |           if (*hdr != ' ' && *hdr != '\t')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  662 |             break;[0m
      | [0;1;32m                  
[0m[1mhttp.c:666:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  666 |           if (end > head && end[-1] == '\r')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  667 |             end[-1] = ' ';[0m
      | [0;1;32m                          
[0m[1mhttp.c:696:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |   if (!headers || !headers[1])[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  697 |     return -1;[0m
      | [0;1;32m              
[0m[1mhttp.c:700:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  700 |   if (start > 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  701 |     i = start;[0m
  702 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:702:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  703 |     i = 1;[0m
      | [0;1;32m          
[0m[1mhttp.c:714:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |           while (b < e && c_isspace (*b))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  715 |             ++b;[0m
      | [0;1;32m                
[0m[1mhttp.c:716:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  716 |           while (b < e && c_isspace (e[-1]))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  717 |             --e;[0m
      | [0;1;32m                
[0m[1mhttp.c:754:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  754 |   if (!resp_header_get (resp, name, &b, &e))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  755 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:759:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  759 |       memcpy (buf, b, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:759:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  759 |       memcpy (buf, b, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:772:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  772 |   if (!resp_header_get (resp, name, &b, &e))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  773 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhttp.c:794:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |       if (message)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  795 |         *message = xstrdup (_("No headers, assuming HTTP/0.9"));[0m
      | [0;1;32m                                                                
[0m[1mhttp.c:802:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  802 |   if (!end)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  803 |     return -1;[0m
      | [0;1;32m              
[0m[1mhttp.c:806:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  806 |   if (end - p < 4 || 0 != strncmp (p, "HTTP", 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  807 |     return -1;[0m
      | [0;1;32m              
[0m[1mhttp.c:815:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  815 |       while (p < end && c_isdigit (*p))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  816 |         ++p;[0m
      | [0;1;32m            
[0m[1mhttp.c:817:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  817 |       if (p < end && *p == '.')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  818 |         ++p;[0m
      | [0;1;32m            
[0m[1mhttp.c:819:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |       while (p < end && c_isdigit (*p))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  820 |         ++p;[0m
      | [0;1;32m            
[0m[1mhttp.c:823:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  823 |   while (p < end && c_isspace (*p))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  824 |     ++p;[0m
      | [0;1;32m        
[0m[1mhttp.c:825:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  825 |   if (end - p < 3 || !c_isdigit (p[0]) || !c_isdigit (p[1]) || !c_isdigit (p[2]))[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  826 |     return -1;[0m
      | [0;1;32m              
[0m[1mhttp.c:833:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |       while (p < end && c_isspace (*p))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  834 |         ++p;[0m
      | [0;1;32m            
[0m[1mhttp.c:835:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  835 |       while (p < end && c_isspace (end[-1]))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  836 |         --end;[0m
      | [0;1;32m              
[0m[1mhttp.c:852:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (!resp)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  853 |     return;[0m
      | [0;1;32m           
[0m[1mhttp.c:873:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  873 |   if (len < sizeof (buf))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  874 |     copy = buf;[0m
  875 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:875:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  875 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  876 |     copy = xmalloc(len + 1);[0m
      | [0;1;32m                            
[0m[1mhttp.c:878:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  878 |   memcpy(copy, b, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:878:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  878 |   memcpy(copy, b, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:884:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  884 |   if (copy != buf)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  885 |     xfree (copy);[0m
      | [0;1;32m                 
[0m[1mhttp.c:895:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  895 |   if (!resp->headers)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  896 |     return;[0m
      | [0;1;32m           
[0m[1mhttp.c:902:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  902 |       if (b < e && e[-1] == '\n')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  903 |         --e;[0m
      | [0;1;32m            
[0m[1mhttp.c:904:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  904 |       if (b < e && e[-1] == '\r')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  905 |         --e;[0m
      | [0;1;32m            
[0m[1mhttp.c:926:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  926 |       if (*hdr == ':')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  927 |         ++hdr;[0m
      | [0;1;32m              
[0m[1mhttp.c:928:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  928 |       while (c_isspace (*hdr))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  929 |         ++hdr;[0m
      | [0;1;32m              
[0m[1mhttp.c:930:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  930 |       if (!*hdr)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  931 |         return false;[0m
      | [0;1;32m                     
[0m[1mhttp.c:933:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  933 |   if (!c_isdigit (*hdr))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  934 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:935:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  935 |   for (num = 0; c_isdigit (*hdr); hdr++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  936 |     num = 10 * num + (*hdr - '0');[0m
      | [0;1;32m                                  
[0m[1mhttp.c:937:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  937 |   if (*hdr != '-' || !c_isdigit (*(hdr + 1)))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  938 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:941:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  941 |   for (num = 0; c_isdigit (*hdr); hdr++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  942 |     num = 10 * num + (*hdr - '0');[0m
      | [0;1;32m                                  
[0m[1mhttp.c:943:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  943 |   if (*hdr != '/')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  944 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:946:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |   if (!(c_isdigit (*(hdr + 1)) || *(hdr + 1) == '*'))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  947 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:948:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  948 |   if (*last_byte_ptr < *first_byte_ptr)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  949 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:951:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  951 |   if (*hdr == '*')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  952 |     num = -1;[0m
  953 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:953:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  953 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  954 |     for (num = 0; c_isdigit (*hdr); hdr++)[0m
  955 |       num = 10 * num + (*hdr - '0');[0m
      | [0;1;32m                                    
[0m[1mhttp.c:954:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  954 |     for (num = 0; c_isdigit (*hdr); hdr++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  955 |       num = 10 * num + (*hdr - '0');[0m
      | [0;1;32m                                    
[0m[1mhttp.c:957:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  957 |   if ((*entity_length_ptr <= *last_byte_ptr) && *entity_length_ptr != -1)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  958 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:984:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  984 |   if (contlen > SKIP_THRESHOLD)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  985 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:996:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  996 |               if (line == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  997 |                 break;[0m
      | [0;1;32m                      
[0m[1mhttp.c:1002:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1002 |               if (remaining_chunk_size < 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1003 |                 return false;[0m
      | [0;1;32m                             
[0m[1mhttp.c:1035:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |               if (line == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1036 |                 return false;[0m
 1037 |               else[0m
      | [0;32m              } 
[0m[1mhttp.c:1037:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1037 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1038 |                 xfree (line);[0m
      | [0;1;32m                             
[0m[1mhttp.c:1135:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1135 |   if (is_url_encoded)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1136 |     *is_url_encoded = false;   /* initializing the out parameter */[0m
      | [0;1;32m                                                                   
[0m[1mhttp.c:1138:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |   while (c_isspace (*p)) ++p;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                         {
[0m[1mhttp.c:1147:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1147 |   while (*p && !c_isspace (*p) && *p != '=' && *p != separator) ++p;[0m
      | [0;1;32m                                                               ^    
[0m      | [0;32m                                                                {
[0m[1mhttp.c:1149:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1149 |   if (name->b == name->e)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1150 |     return false;               /* empty name: error */[0m
      | [0;1;32m                                                       
[0m[1mhttp.c:1151:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |   while (c_isspace (*p)) ++p;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                         {
[0m[1mhttp.c:1154:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1154 |       xzero (*value);[0m
      | [0;1;32m      ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhttp.c:1154:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1154 |       xzero (*value);[0m
      | [0;1;32m      ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhttp.c:1155:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1155 |       if (*p == separator) ++p;[0m
      | [0;1;32m                          ^    
[0m      | [0;32m                           {
[0m[1mhttp.c:1159:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1159 |   if (*p != '=')[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1160 |     return false;               /* error */[0m
      | [0;1;32m                                           
[0m[1mhttp.c:1164:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1164 |   while (c_isspace (*p)) ++p;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                         {
[0m[1mhttp.c:1168:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1168 |       while (*p && *p != '"') ++p;[0m
      | [0;1;32m                             ^    
[0m      | [0;32m                              {
[0m[1mhttp.c:1169:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1169 |       if (!*p)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1170 |         return false;[0m
      | [0;1;32m                     
[0m[1mhttp.c:1173:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1173 |       while (c_isspace (*p)) ++p;[0m
      | [0;1;32m                            ^    
[0m      | [0;32m                             {
[0m[1mhttp.c:1174:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1174 |       while (*p && *p != separator) ++p;[0m
      | [0;1;32m                                   ^    
[0m      | [0;32m                                    {
[0m[1mhttp.c:1175:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1175 |       if (*p == separator)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1176 |         ++p;[0m
 1177 |       else if (*p)[0m
      | [0;32m      } 
[0m[1mhttp.c:1177:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |       else if (*p)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1178 |         /* garbage after closed quote, e.g. foo="bar"baz */[0m
 1179 |         return false;[0m
      | [0;1;32m                     
[0m[1mhttp.c:1184:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1184 |       while (*p && *p != separator) ++p;[0m
      | [0;1;32m                                   ^    
[0m      | [0;32m                                    {
[0m[1mhttp.c:1186:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1186 |       while (value->e != value->b && c_isspace (value->e[-1]))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1187 |         --value->e;[0m
      | [0;1;32m                   
[0m[1mhttp.c:1188:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1188 |       if (*p == separator) ++p;[0m
      | [0;1;32m                          ^    
[0m      | [0;32m                           {
[0m[1mhttp.c:1195:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1195 |       if (param_type == RFC2231_ENCODING && is_url_encoded)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1196 |         *is_url_encoded = true;[0m
      | [0;1;32m                               
[0m[1mhttp.c:1215:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1215 |   memcpy (*filename + original_length, value->b, (value->e - value->b));[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:1215:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1215 |   memcpy (*filename + original_length, value->b, (value->e - value->b));[0m
      | [0;1;32m  ^~~~~~
[0m[1mhttp.c:1217:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1217 |   if (is_url_encoded)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1218 |     url_unescape (*filename + original_length);[0m
      | [0;1;32m                                               
[0m[1mhttp.c:1262:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1262 |           if (last_slash && last_bs)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1263 |             value.b = 1 + MAX (last_slash, last_bs);[0m
 1264 |           else if (last_slash || last_bs)[0m
      | [0;32m          } 
[0m[1mhttp.c:1264:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1264 |           else if (last_slash || last_bs)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1265 |             value.b = 1 + (last_slash ? last_slash : last_bs);[0m
      | [0;1;32m                                                              
[0m[1mhttp.c:1266:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1266 |           if (value.b == value.e)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1267 |             continue;[0m
      | [0;1;32m                     
[0m[1mhttp.c:1275:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1275 |           if (*outFilename)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1276 |             append_value_to_filename (outFilename, &value, is_url_encoded);[0m
 1277 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:1280:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1280 |               if (is_url_encoded)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1281 |                 url_unescape (*outFilename);[0m
      | [0;1;32m                                            
[0m[1mhttp.c:1295:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1295 |   if (*filename)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1296 |     return true;[0m
 1297 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:1297:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1297 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1298 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:1398:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1398 |   xzero (pconn);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhttp.c:1398:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1398 |   xzero (pconn);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhttp.c:1448:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1448 |   if (!pconn_active)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1449 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:1454:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1454 |   if (ssl != pconn.ssl)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1455 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:1458:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1458 |   if (port != pconn.port)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1459 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:1477:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1477 |       if (ssl)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1478 |         /* Don't try to talk to two different SSL sites over the same[0m
 1479 |            secure connection!  (Besides, it's not clear that[0m
 1480 |            name-based virtual hosting is even possible with SSL.)  */[0m
 1481 |         return false;[0m
      | [0;1;32m                     
[0m[1mhttp.c:1504:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1504 |       if (!found)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1505 |         return false;[0m
      | [0;1;32m                     
[0m[1mhttp.c:1644:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1644 |   if (has_html_suffix_p (filename))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1645 |     *dt |= TEXTHTML;[0m
      | [0;1;32m                    
[0m[1mhttp.c:1684:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1684 |       if (warc_tmp == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1685 |         warcerr = WARC_TMP_FOPENERR;[0m
      | [0;1;32m                                    
[0m[1mhttp.c:1692:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1692 |           if (warc_tmp_written != head_len)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1693 |             warcerr = WARC_TMP_FWRITEERR;[0m
      | [0;1;32m                                         
[0m[1mhttp.c:1699:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1699 |           if (warc_tmp != NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1700 |             fclose (warc_tmp);[0m
      | [0;1;32m                              
[0m[1mhttp.c:1709:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1709 |       if (opt.save_headers && hs->restval == 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1710 |         fwrite (head, 1, strlen (head), fp);[0m
      | [0;1;32m                                            
[0m[1mhttp.c:1714:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1714 |   if (contlen != -1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1715 |     /* If content-length is present, read that much; otherwise, read[0m
 1716 |        until EOF.  The HTTP spec doesn't require the server to[0m
 1717 |        actually close the connection when it's done sending data. */[0m
 1718 |     flags |= rb_read_exactly;[0m
      | [0;1;32m                             
[0m[1mhttp.c:1719:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1719 |   if (fp != NULL && hs->restval > 0 && contrange == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1720 |     /* If the server ignored our range request, instruct fd_read_body[0m
 1721 |        to skip the first RESTVAL bytes of body.  */[0m
 1722 |     flags |= rb_skip_startpos;[0m
      | [0;1;32m                              
[0m[1mhttp.c:1723:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1723 |   if (chunked_transfer_encoding)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1724 |     flags |= rb_chunked_transfer_encoding;[0m
      | [0;1;32m                                          
[0m[1mhttp.c:1726:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1726 |   if (hs->remote_encoding == ENC_GZIP)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1727 |     flags |= rb_compressed_gzip;[0m
      | [0;1;32m                                
[0m[1mhttp.c:1752:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1752 |           if (! r)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1753 |             return WARC_ERR;[0m
      | [0;1;32m                            
[0m[1mhttp.c:1759:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1759 |   if (warc_tmp != NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1760 |     fclose (warc_tmp);[0m
      | [0;1;32m                      
[0m[1mhttp.c:1839:3: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1839 |   snprintf (buf, bufsize, "%s, %02d %s %04d %02d:%02d:%02d GMT",[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mhttp.c:1839:3: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1839 |   snprintf (buf, bufsize, "%s, %02d %s %04d %02d:%02d:%02d GMT",[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mhttp.c:1860:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1860 |     if (head_only)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1861 |       meth = "HEAD";[0m
 1862 |     else if (opt.method)[0m
      | [0;32m    } 
[0m[1mhttp.c:1862:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1862 |     else if (opt.method)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1863 |       meth = opt.method;[0m
      | [0;1;32m                        
[0m[1mhttp.c:1925:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1925 |   if (hs->restval)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1926 |     request_set_header (req, "Range",[0m
 1927 |                         aprintf ("bytes=%s-",[0m
 1928 |                                  number_to_static_string (hs->restval)),[0m
 1929 |                         rel_value);[0m
      | [0;1;32m                                   
[0m[1mhttp.c:1940:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1940 |   if (u->user)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1941 |     *user = u->user;[0m
 1942 |   else if (opt.user && (opt.use_askpass || opt.ask_passwd))[0m
      | [0;32m  } 
[0m[1mhttp.c:1942:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1942 |   else if (opt.user && (opt.use_askpass || opt.ask_passwd))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1943 |     *user = opt.user;[0m
 1944 |   else if (opt.http_user)[0m
      | [0;32m  } 
[0m[1mhttp.c:1944:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1944 |   else if (opt.http_user)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1945 |     *user = opt.http_user;[0m
 1946 |   else if (opt.user)[0m
      | [0;32m  } 
[0m[1mhttp.c:1946:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1946 |   else if (opt.user)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1947 |     *user = opt.user;[0m
 1948 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:1948:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1948 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1949 |     *user = NULL;[0m
      | [0;1;32m                 
[0m[1mhttp.c:1952:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1952 |   if (u->passwd)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1953 |     *passwd = u->passwd;[0m
 1954 |   else if (opt.passwd && (opt.use_askpass || opt.ask_passwd))[0m
      | [0;32m  } 
[0m[1mhttp.c:1954:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1954 |   else if (opt.passwd && (opt.use_askpass || opt.ask_passwd))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1955 |     *passwd = opt.passwd;[0m
 1956 |   else if (opt.http_passwd)[0m
      | [0;32m  } 
[0m[1mhttp.c:1956:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1956 |   else if (opt.http_passwd)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1957 |     *passwd = opt.http_passwd;[0m
 1958 |   else if (opt.passwd)[0m
      | [0;32m  } 
[0m[1mhttp.c:1958:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1958 |   else if (opt.passwd)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1959 |     *passwd = opt.passwd;[0m
 1960 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:1960:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1960 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1961 |     *passwd = NULL;[0m
      | [0;1;32m                   
[0m[1mhttp.c:1964:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1964 |   if (opt.netrc && (!*user || !*passwd))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1965 |     search_netrc (u->host, (const char **) user, (const char **) passwd, 0, NULL);[0m
      | [0;1;32m                                                                                  
[0m[1mhttp.c:1977:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1977 |   if (inhibit_keep_alive)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1978 |     request_set_header (req, "Connection", "Close", rel_none);[0m
 1979 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:1982:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1982 |       if (proxy)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1983 |         request_set_header (req, "Proxy-Connection", "Keep-Alive", rel_none);[0m
      | [0;1;32m                                                                             
[0m[1mhttp.c:1994:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1994 |           if (opt.body_data)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1995 |             *body_data_size = strlen (opt.body_data);[0m
 1996 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:2014:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2014 |                || c_strcasecmp (opt.method, "patch") == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2015 |         request_set_header (req, "Content-Length", "0", rel_none);[0m
      | [0;1;32m                                                                  
[0m[1mhttp.c:2042:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2042 |   if (proxy_user && proxy_passwd)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2043 |     *proxyauth = basic_authentication_encode (proxy_user, proxy_passwd);[0m
      | [0;1;32m                                                                        
[0m[1mhttp.c:2092:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2092 |           if (family == AF_INET6)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2093 |              logprintf (LOG_VERBOSE, _("Reusing existing connection to [%s]:%d.\n"),[0m
 2094 |                         quotearg_style (escape_quoting_style, pconn.host),[0m
 2095 |                          pconn.port);[0m
 2096 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:2096:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2096 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2097 | #endif[0m
 2098 |              logprintf (LOG_VERBOSE, _("Reusing existing connection to %s:%d.\n"),[0m
 2099 |                         quotearg_style (escape_quoting_style, pconn.host),[0m
 2100 |                         pconn.port);[0m
      | [0;1;32m                                    
[0m[1mhttp.c:2102:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2102 |           if (pconn.authorized)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2103 |             /* If the connection is already authorized, the "Basic"[0m
 2104 |                authorization added by code above is unnecessary and[0m
 2105 |                only hurts us.  */[0m
 2106 |             request_remove_header (req, "Authorization");[0m
      | [0;1;32m                                                         
[0m[1mhttp.c:2124:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2124 |       if (sock == E_HOST)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2125 |         return HOSTERR;[0m
 2126 |       else if (sock < 0)[0m
      | [0;32m      } 
[0m[1mhttp.c:2126:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2126 |       else if (sock < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2127 |         return (retryable_socket_connect_error (errno)[0m
 2128 |                 ? CONERROR : CONIMPOSSIBLE);[0m
      | [0;1;32m                                            
[0m[1mhttp.c:2250:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2250 |       if (filename_len + sizeof (ORIG_SFX) > sizeof (buf))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2251 |         filename_plus_orig_suffix = xmalloc (filename_len + sizeof (ORIG_SFX));[0m
 2252 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:2252:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2252 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2253 |         filename_plus_orig_suffix = buf;[0m
      | [0;1;32m                                        
[0m[1mhttp.c:2265:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2265 |       memcpy (filename_plus_orig_suffix, hs->local_file, filename_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:2265:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2265 |       memcpy (filename_plus_orig_suffix, hs->local_file, filename_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:2266:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2266 |       memcpy (filename_plus_orig_suffix + filename_len,[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:2266:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2266 |       memcpy (filename_plus_orig_suffix + filename_len,[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:2277:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2277 |   if (!local_dot_orig_file_exists)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2278 |     /* Couldn't stat() <file>.orig, so try to stat() <file>. */[0m
 2279 |     if (stat (hs->local_file, &st) == 0)[0m
 2280 |       {[0m
 2281 |         if (local_filename != buf)[0m
 2282 |           xfree (local_filename);[0m
 2283 |         local_filename = hs->local_file;[0m
 2284 |       }[0m
      | [0;1;32m       
[0m[1mhttp.c:2281:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2281 |         if (local_filename != buf)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2282 |           xfree (local_filename);[0m
      | [0;1;32m                                 
[0m[1mhttp.c:2291:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2291 |       if (local_filename == buf || local_filename == hs->local_file)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2292 |         hs->orig_file_name = xstrdup (local_filename); // on stack or a copy, make a heap copy[0m
 2293 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:2293:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2293 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2294 |         hs->orig_file_name = local_filename; // was previously malloc'ed[0m
      | [0;1;32m                                                                        
[0m[1mhttp.c:2359:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2359 |           if (unique != hs->local_file)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2360 |             xfree (hs->local_file);[0m
      | [0;1;32m                                   
[0m[1mhttp.c:2370:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2370 |       if (timestamp_err != RETROK)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2371 |         return timestamp_err;[0m
      | [0;1;32m                             
[0m[1mhttp.c:2407:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2407 |           if (tmp != buf)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2408 |             xfree (tmp);[0m
      | [0;1;32m                        
[0m[1mhttp.c:2410:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2410 |           if (len < sizeof (buf))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2411 |             tmp = buf;[0m
 2412 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:2412:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2412 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2413 |             tmp = xmalloc (len + 1);[0m
      | [0;1;32m                                    
[0m[1mhttp.c:2415:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2415 |           memcpy (tmp, wabeg, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mhttp.c:2415:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2415 |           memcpy (tmp, wabeg, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mhttp.c:2423:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2423 |               while (c_isspace (*www_authenticate)) www_authenticate++;[0m
      | [0;1;32m                                                   ^                   
[0m      | [0;32m                                                    {
[0m[1mhttp.c:2425:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2425 |               while (*name.e && !c_isspace (*name.e)) name.e++;[0m
      | [0;1;32m                                                     ^         
[0m      | [0;32m                                                      {
[0m[1mhttp.c:2427:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2427 |               if (name.b == name.e)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2428 |                 break;[0m
      | [0;1;32m                      
[0m[1mhttp.c:2439:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2439 |                   else if (!digest && BEGINS_WITH (name.b, "Digest"))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 2440 |                     digest = name.b;[0m
 2441 |                   else if (!basic && BEGINS_WITH (name.b, "Basic"))[0m
      | [0;32m                  } 
[0m[1mhttp.c:2441:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2441 |                   else if (!basic && BEGINS_WITH (name.b, "Basic"))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 2442 |                     basic = name.b;[0m
      | [0;1;32m                                   
[0m[1mhttp.c:2471:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2471 |           if (ntlm)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2472 |             www_authenticate = ntlm;[0m
 2473 |           else if (digest)[0m
      | [0;32m          } 
[0m[1mhttp.c:2473:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2473 |           else if (digest)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2474 |             www_authenticate = digest;[0m
 2475 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:2475:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2475 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2476 |             www_authenticate = basic;[0m
      | [0;1;32m                                     
[0m[1mhttp.c:2494:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2494 |               if (BEGINS_WITH (www_authenticate, "NTLM"))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2495 |                 ntlm_seen = true;[0m
 2496 |               else if (!u->user && BEGINS_WITH (www_authenticate, "Basic"))[0m
      | [0;32m              } 
[0m[1mhttp.c:2520:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2520 |    if (tmp != buf)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2521 |      xfree (tmp);[0m
      | [0;1;32m                 
[0m[1mhttp.c:2545:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2545 |       if (opt.backups)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2546 |         rotate_backups (hs->local_file);[0m
      | [0;1;32m                                        
[0m[1mhttp.c:2578:21: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'fdopen' is < 0 but should be >= 0 [clang-analyzer-unix.StdCLibraryFunctions][0m
 2578 |               *fp = fdopen (open (hs->local_file, O_BINARY | O_CREAT | O_TRUNC | O_WRONLY, S_IRUSR | S_IWUSR), "wb");[0m
      | [0;1;32m                    ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhttp.c:2542:7: [0m[0;1;36mnote: [0mAssuming 'output_stream' is null[0m
 2542 |   if (!output_stream)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mhttp.c:2542:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2542 |   if (!output_stream)[0m
      | [0;1;32m  ^
[0m[1mhttp.c:2545:11: [0m[0;1;36mnote: [0mAssuming field 'backups' is 0[0m
 2545 |       if (opt.backups)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mhttp.c:2545:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2545 |       if (opt.backups)[0m
      | [0;1;32m      ^
[0m[1mhttp.c:2547:11: [0m[0;1;36mnote: [0mAssuming field 'restval' is 0[0m
 2547 |       if (hs->restval)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mhttp.c:2547:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2547 |       if (hs->restval)[0m
      | [0;1;32m      ^
[0m[1mhttp.c:2558:16: [0m[0;1;36mnote: [0mAssuming field 'noclobber' is true[0m
 2558 |       else if (ALLOW_CLOBBER || count > 0)[0m
      | [0;1;32m               ^
[0m[1m./url.h:53:24: [0m[0;1;36mnote: [0mexpanded from macro 'ALLOW_CLOBBER'[0m
   53 | #define ALLOW_CLOBBER (opt.noclobber || opt.always_rest || opt.timestamping \[0m
      | [0;1;32m                       ^~~~~~~~~~~~~
[0m[1mhttp.c:2558:16: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2558 |       else if (ALLOW_CLOBBER || count > 0)[0m
      | [0;1;32m               ^
[0m[1m./url.h:53:38: [0m[0;1;36mnote: [0mexpanded from macro 'ALLOW_CLOBBER'[0m
   53 | #define ALLOW_CLOBBER (opt.noclobber || opt.always_rest || opt.timestamping \[0m
      | [0;1;32m                                     ^
[0m[1mhttp.c:2560:15: [0m[0;1;36mnote: [0mAssuming field 'unlink_requested' is false[0m
 2560 |           if (opt.unlink_requested && file_exists_p (hs->local_file, NULL))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~
[0m[1mhttp.c:2560:36: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2560 |           if (opt.unlink_requested && file_exists_p (hs->local_file, NULL))[0m
      | [0;1;32m                                   ^
[0m[1mhttp.c:2576:15: [0m[0;1;36mnote: [0mAssuming field 'temporary' is true[0m
 2576 |           if (hs->temporary)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1mhttp.c:2576:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 2576 |           if (hs->temporary)[0m
      | [0;1;32m          ^
[0m[1mhttp.c:2578:29: [0m[0;1;36mnote: [0mAssuming that 'open' fails[0m
 2578 |               *fp = fdopen (open (hs->local_file, O_BINARY | O_CREAT | O_TRUNC | O_WRONLY, S_IRUSR | S_IWUSR), "wb");[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhttp.c:2578:21: [0m[0;1;36mnote: [0mThe 1st argument to 'fdopen' is < 0 but should be >= 0[0m
 2578 |               *fp = fdopen (open (hs->local_file, O_BINARY | O_CREAT | O_TRUNC | O_WRONLY, S_IRUSR | S_IWUSR), "wb");[0m
      | [0;1;32m                    ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhttp.c:2608:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2608 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2609 |     *fp = output_stream;[0m
      | [0;1;32m                        
[0m[1mhttp.c:2627:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2627 |       0 == c_strcasecmp (type, TEXTXHTML_S))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2628 |     *dt |= TEXTHTML;[0m
 2629 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:2629:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2629 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2630 |     *dt &= ~TEXTHTML;[0m
      | [0;1;32m                     
[0m[1mhttp.c:2633:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2633 |       0 == c_strcasecmp (type, TEXTCSS_S))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2634 |     *dt |= TEXTCSS;[0m
 2635 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:2635:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2635 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2636 |     *dt &= ~TEXTCSS;[0m
      | [0;1;32m                    
[0m[1mhttp.c:3291:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3291 |   if (opt.cookies)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3292 |     request_set_header (req, "Cookie",[0m
 3293 |                         cookie_header (wget_cookie_jar,[0m
 3294 |                                        u->host, u->port, u->path,[0m
 3295 | #ifdef HAVE_SSL[0m
 3296 |                                        u->scheme == SCHEME_HTTPS[0m
 3297 | #else[0m
 3298 |                                        0[0m
 3299 | #endif[0m
 3300 |                                        ),[0m
 3301 |                         rel_value);[0m
      | [0;1;32m                                   
[0m[1mhttp.c:3307:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3307 |       for (i = 0; opt.user_headers[i]; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3308 |         request_set_user_header (req, opt.user_headers[i]);[0m
      | [0;1;32m                                                           
[0m[1mhttp.c:3320:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3320 |   if (inhibit_keep_alive)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3321 |     keep_alive = false;[0m
      | [0;1;32m                       
[0m[1mhttp.c:3369:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3369 |               if (warc_tmp_written != body_data_size)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3370 |                 write_error = -2;[0m
      | [0;1;32m                                 
[0m[1mhttp.c:3375:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3375 |           if (warc_tmp != NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3376 |             /* Remember end of headers / start of payload */[0m
 3377 |             warc_payload_offset = ftello (warc_tmp);[0m
      | [0;1;32m                                                    
[0m[1mhttp.c:3387:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3387 |       if (warc_tmp != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3388 |         fclose (warc_tmp);[0m
      | [0;1;32m                          
[0m[1mhttp.c:3390:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3390 |       if (write_error == -2)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3391 |         retval = WARC_TMP_FWRITEERR;[0m
 3392 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:3392:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3392 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3393 |         retval = WRITEFAILED;[0m
      | [0;1;32m                             
[0m[1mhttp.c:3485:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3485 |   if (!opt.server_response)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3486 |     logprintf (LOG_VERBOSE, "%2d %s\n", statcode,[0m
 3487 |                message ? quotearg_style (escape_quoting_style, message) : "");[0m
 3488 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:3515:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3515 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3516 |         contlen = parsed;[0m
      | [0;1;32m                         
[0m[1mhttp.c:3524:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3524 |           if (0 == c_strcasecmp (hdrval, "Close"))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 3525 |             keep_alive = false;[0m
      | [0;1;32m                               
[0m[1mhttp.c:3531:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3531 |       && 0 == c_strcasecmp (hdrval, "chunked"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3532 |     chunked_transfer_encoding = true;[0m
      | [0;1;32m                                     
[0m[1mhttp.c:3549:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3549 |           if (len < sizeof (buf))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3550 |             set_cookie = buf;[0m
 3551 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:3551:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3551 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3552 |             set_cookie = xmalloc (len + 1);[0m
      | [0;1;32m                                           
[0m[1mhttp.c:3554:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3554 |           memcpy (set_cookie, scbeg, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mhttp.c:3554:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3554 |           memcpy (set_cookie, scbeg, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mhttp.c:3560:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3560 |           if (set_cookie != buf)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3561 |             xfree (set_cookie);[0m
      | [0;1;32m                               
[0m[1mhttp.c:3565:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3565 |   if (keep_alive)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3566 |     /* The server has promised that it will not close the connection[0m
 3567 |        when we're done.  This means that we can register it.  */[0m
 3568 |     register_persistent (conn->host, conn->port, sock, using_ssl);[0m
      | [0;1;32m                                                                  
[0m[1mhttp.c:3610:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3610 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3611 |             CLOSE_FINISH (sock);[0m
      | [0;1;32m                                
[0m[1mhttp.c:3617:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3617 |               && skip_short_body (sock, contlen, chunked_transfer_encoding))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 3618 |             CLOSE_FINISH (sock);[0m
 3619 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:3619:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3619 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3620 |             CLOSE_INVALIDATE (sock);[0m
      | [0;1;32m                                    
[0m[1mhttp.c:3638:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3638 |       if (auth_err == RETROK)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3639 |         retval = AUTHFAILED;[0m
 3640 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:3640:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3640 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3641 |         retval = auth_err;[0m
      | [0;1;32m                          
[0m[1mhttp.c:3647:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3647 |       if (ntlm_seen)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3648 |         pconn.authorized = true;[0m
      | [0;1;32m                                
[0m[1mhttp.c:3662:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3662 |   if (statcode == -1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3663 |     hs->error = xstrdup (_("Malformed status line"));[0m
 3664 |   else if (!message || !*message)[0m
      | [0;32m  } 
[0m[1mhttp.c:3664:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3664 |   else if (!message || !*message)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3665 |     hs->error = xstrdup (_("(no description)"));[0m
 3666 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:3666:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3666 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3667 |     hs->error = xstrdup (message);[0m
      | [0;1;32m                                  
[0m[1mhttp.c:3707:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3707 |           while (tmp > type && c_isspace (tmp[-1]))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3708 |             --tmp;[0m
      | [0;1;32m                  
[0m[1mhttp.c:3727:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3727 |   if (!hs->remote_time) // now look for the Wayback Machine's timestamp[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3728 |     hs->remote_time = resp_header_strdup (resp, "X-Archive-Orig-last-modified");[0m
      | [0;1;32m                                                                                
[0m[1mhttp.c:3748:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3748 |           if (0 == c_strcasecmp(hdrval, "br"))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3749 |             hs->local_encoding = ENC_BROTLI;[0m
      | [0;1;32m                                            
[0m[1mhttp.c:3750:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3750 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mhttp.c:3752:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3752 |           if (0 == c_strcasecmp(hdrval, "compress"))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3753 |             hs->local_encoding = ENC_COMPRESS;[0m
      | [0;1;32m                                              
[0m[1mhttp.c:3754:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3754 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mhttp.c:3756:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3756 |           if (0 == c_strcasecmp(hdrval, "deflate"))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3757 |             hs->local_encoding = ENC_DEFLATE;[0m
      | [0;1;32m                                             
[0m[1mhttp.c:3758:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3758 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mhttp.c:3760:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3760 |           if (0 == c_strcasecmp(hdrval, "gzip"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3761 |             hs->local_encoding = ENC_GZIP;[0m
      | [0;1;32m                                          
[0m[1mhttp.c:3762:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3762 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mhttp.c:3764:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3764 |           if (0 == c_strcasecmp(hdrval, "identity"))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3765 |             hs->local_encoding = ENC_NONE;[0m
      | [0;1;32m                                          
[0m[1mhttp.c:3766:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3766 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mhttp.c:3768:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3768 |           if (0 == c_strcasecmp(hdrval, "x-compress"))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3769 |             hs->local_encoding = ENC_COMPRESS;[0m
 3770 |           else if (0 == c_strcasecmp(hdrval, "x-gzip"))[0m
      | [0;32m          } 
[0m[1mhttp.c:3770:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3770 |           else if (0 == c_strcasecmp(hdrval, "x-gzip"))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3771 |             hs->local_encoding = ENC_GZIP;[0m
      | [0;1;32m                                          
[0m[1mhttp.c:3772:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3772 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mhttp.c:3774:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3774 |           hs->local_encoding = ENC_NONE;[0m
      | [0;1;32m          ^                            
[0m      | [0;32m          {                            ;} 
[0m[1mhttp.c:3828:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3828 |   if (H_20X (statcode))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3829 |     *dt |= RETROKF;[0m
      | [0;1;32m                   
[0m[1mhttp.c:3854:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3854 |       if (statcode == HTTP_STATUS_MULTIPLE_CHOICES && !hs->newloc)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 3855 |         *dt |= RETROKF;[0m
 3856 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:3884:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3884 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3885 |                 CLOSE_FINISH (sock);[0m
      | [0;1;32m                                    
[0m[1mhttp.c:3891:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3891 |                   && skip_short_body (sock, contlen, chunked_transfer_encoding))[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 3892 |                 CLOSE_FINISH (sock);[0m
 3893 |               else[0m
      | [0;32m              } 
[0m[1mhttp.c:3893:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3893 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3894 |                 CLOSE_INVALIDATE (sock);[0m
      | [0;1;32m                                        
[0m[1mhttp.c:3917:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3917 |               goto cleanup;[0m
      | [0;1;32m              ^           
[0m      | [0;32m              {           ;} 
[0m[1mhttp.c:3919:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3919 |               if (opt.method && c_strcasecmp (opt.method, "post") != 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 3920 |                 {[0m
 3921 |                   retval = NEWLOCATION_KEEP_POST;[0m
 3922 |                   goto cleanup;[0m
 3923 |                 }[0m
 3924 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:3926:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3926 |               if (opt.method && c_strcasecmp (opt.method, "post") != 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 3927 |                 {[0m
 3928 |                   retval = NEWLOCATION_KEEP_POST;[0m
 3929 |                   goto cleanup;[0m
 3930 |                 }[0m
 3931 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:3963:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3963 |           encoding_ext = ".br";[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3964 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhttp.c:3966:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3966 |           encoding_ext = ".Z";[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3967 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhttp.c:3969:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3969 |           encoding_ext = ".zlib";[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3970 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhttp.c:3972:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3972 |           encoding_ext = ".gz";[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3973 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhttp.c:3975:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3975 |           DEBUGP (("No extension found for encoding %d\n",[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3976 |                    hs->local_encoding));[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1m./wget.h:129:22: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUGP'[0m
  129 | #define DEBUGP(args) do { IF_DEBUG { debug_logprintf args; } } while (0)[0m
      | [0;1;32m                     ^
[0m[1mhttp.c:3982:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3982 |           if (file_ext != NULL && 0 == strcasecmp (file_ext, encoding_ext))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 3983 |             *file_ext = '\0';[0m
      | [0;1;32m                             
[0m[1mhttp.c:4049:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4049 |           skip_short_body (sock, contlen, chunked_transfer_encoding))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 4050 |         CLOSE_FINISH (sock);[0m
 4051 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:4051:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4051 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4052 |         CLOSE_INVALIDATE (sock);[0m
      | [0;1;32m                                
[0m[1mhttp.c:4065:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4065 |   if (contlen == -1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 4066 |     hs->contlen = -1;[0m
 4067 |   /* If the response is gzipped, the uncompressed size is unknown. */[0m
 4068 |   else if (hs->remote_encoding == ENC_GZIP)[0m
      | [0;32m  } 
[0m[1mhttp.c:4068:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4068 |   else if (hs->remote_encoding == ENC_GZIP)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 4069 |     hs->contlen = -1;[0m
 4070 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:4070:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4070 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 4071 |     hs->contlen = contlen + contrange;[0m
      | [0;1;32m                                      
[0m[1mhttp.c:4084:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4084 |               if (contlen + contrange >= 1024)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 4085 |                 logprintf (LOG_VERBOSE, " (%s)",[0m
 4086 |                            human_readable (contlen + contrange, 10, 1));[0m
      | [0;1;32m                                                                        
[0m[1mhttp.c:4089:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4089 |                   if (contlen >= 1024)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 4090 |                     logprintf (LOG_VERBOSE, _(", %s (%s) remaining"),[0m
 4091 |                                number_to_static_string (contlen),[0m
 4092 |                                human_readable (contlen, 10, 1));[0m
 4093 |                   else[0m
      | [0;32m                  } 
[0m[1mhttp.c:4093:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4093 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4094 |                     logprintf (LOG_VERBOSE, _(", %s remaining"),[0m
 4095 |                                number_to_static_string (contlen));[0m
      | [0;1;32m                                                                  
[0m[1mhttp.c:4098:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4098 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4099 |             logputs (LOG_VERBOSE,[0m
 4100 |                      opt.ignore_length ? _("ignored") : _("unspecified"));[0m
      | [0;1;32m                                                                          
[0m[1mhttp.c:4101:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4101 |           if (type)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 4102 |             logprintf (LOG_VERBOSE, " [%s]\n", quotearg_style (escape_quoting_style, type));[0m
 4103 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:4103:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4103 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4104 |             logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m                                        
[0m[1mhttp.c:4138:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4138 |           if (head_only)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 4139 |             /* Pre-1.10 Wget used CLOSE_INVALIDATE here.  Now we trust the[0m
 4140 |                servers not to send body in response to a HEAD request, and[0m
 4141 |                those that do will likely be caught by test_socket_open.[0m
 4142 |                If not, they can be worked around using[0m
 4143 |                `--no-http-keep-alive'.  */[0m
 4144 |             CLOSE_FINISH (sock);[0m
 4145 |           else if (opt.spider && !opt.recursive)[0m
      | [0;32m          } 
[0m[1mhttp.c:4145:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4145 |           else if (opt.spider && !opt.recursive)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 4146 |             /* we just want to see if the page exists - no downloading required */[0m
 4147 |             CLOSE_INVALIDATE (sock);[0m
 4148 |           else if (keep_alive[0m
      | [0;32m          } 
[0m[1mhttp.c:4149:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4149 |                    && skip_short_body (sock, contlen, chunked_transfer_encoding))[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m 4150 |             /* Successfully skipped the body; also keep using the socket. */[0m
 4151 |             CLOSE_FINISH (sock);[0m
 4152 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:4152:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4152 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4153 |             CLOSE_INVALIDATE (sock);[0m
      | [0;1;32m                                    
[0m[1mhttp.c:4156:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4156 |       if (statcode == HTTP_STATUS_GATEWAY_TIMEOUT)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 4157 |         retval = GATEWAYTIMEOUT;[0m
 4158 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:4158:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4158 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4159 |         retval = RETRFINISHED;[0m
      | [0;1;32m                              
[0m[1mhttp.c:4175:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4175 |       if (original_url != u)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 4176 |         set_file_metadata (u, original_url, fp);[0m
 4177 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:4177:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4177 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4178 |         set_file_metadata (u, NULL, fp);[0m
      | [0;1;32m                                        
[0m[1mhttp.c:4188:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4188 |   if (hs->res >= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 4189 |     CLOSE_FINISH (sock);[0m
 4190 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:4190:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4190 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 4191 |     CLOSE_INVALIDATE (sock);[0m
      | [0;1;32m                            
[0m[1mhttp.c:4193:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4193 |   if (!output_stream)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 4194 |     fclose (fp);[0m
      | [0;1;32m                
[0m[1mhttp.c:4216:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4216 |       if (atoi (tok) == statcode)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 4217 |         return true;[0m
      | [0;1;32m                    
[0m[1mhttp.c:4218:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4218 |       if ((tok = strchr (tok, ',')))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 4219 |         ++tok;[0m
      | [0;1;32m              
[0m[1mhttp.c:4246:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4246 |   if (opt.warc_filename != NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 4247 |     force_full_retrieve = true;[0m
      | [0;1;32m                               
[0m[1mhttp.c:4254:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4254 |   if (local_file && opt.output_document)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4255 |     *local_file = HYPHENP (opt.output_document) ? NULL : xstrdup (opt.output_document);[0m
      | [0;1;32m                                                                                       
[0m[1mhttp.c:4263:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4263 |   if (opt.cookies)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4264 |     load_cookies ();[0m
      | [0;1;32m                    
[0m[1mhttp.c:4267:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4267 |   if (opt.ftp_glob && has_wildcards_p (u->path))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 4268 |     logputs (LOG_VERBOSE, _("Warning: wildcards not supported in HTTP.\n"));[0m
      | [0;1;32m                                                                            
[0m[1mhttp.c:4271:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4271 |   xzero (hstat);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhttp.c:4271:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 4271 |   xzero (hstat);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhttp.c:4303:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4303 |   if (!opt.spider)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4304 |     send_head_first = false;[0m
      | [0;1;32m                            
[0m[1mhttp.c:4308:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4308 |   if (opt.content_disposition && opt.always_rest)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 4309 |     send_head_first = true;[0m
      | [0;1;32m                           
[0m[1mhttp.c:4328:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4328 |             if (timestamp_err != RETROK)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4329 |               return timestamp_err;[0m
      | [0;1;32m                                   
[0m[1mhttp.c:4334:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4334 |       else if (opt.content_disposition || file_exists_p (hstat.local_file, NULL))[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m 4335 |         send_head_first = true;[0m
      | [0;1;32m                               
[0m[1mhttp.c:4348:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4348 |       if (opt.spider && !got_head)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 4349 |         logprintf (LOG_VERBOSE,[0m
 4350 |                           _("Spider mode enabled. Check if remote file exists.\n"));[0m
      | [0;1;32m                                                                                    
[0m[1mhttp.c:4360:15: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4360 |               sprintf (tmp, _("(try:%2d)"), count);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mhttp.c:4360:15: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 4360 |               sprintf (tmp, _("(try:%2d)"), count);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mhttp.c:4379:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4379 |       if (send_head_first && !got_head)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 4380 |         *dt |= HEAD_ONLY;[0m
 4381 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:4381:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4381 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4382 |         *dt &= ~HEAD_ONLY;[0m
      | [0;1;32m                          
[0m[1mhttp.c:4385:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4385 |       if (force_full_retrieve)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4386 |         hstat.restval = hstat.len;[0m
 4387 |       else if (opt.start_pos >= 0)[0m
      | [0;32m      } 
[0m[1mhttp.c:4387:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4387 |       else if (opt.start_pos >= 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 4388 |         hstat.restval = opt.start_pos;[0m
 4389 |       else if (opt.always_rest[0m
      | [0;32m      } 
[0m[1mhttp.c:4392:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4392 |           && S_ISREG (st.st_mode))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 4393 |         /* When -c is used, continue from on-disk size.  (Can't use[0m
 4394 |            hstat.len even if count>1 because we don't want a failed[0m
 4395 |            first attempt to clobber existing data.)  */[0m
 4396 |         hstat.restval = st.st_size;[0m
 4397 |       else if (count > 1)[0m
      | [0;32m      } 
[0m[1mhttp.c:4400:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4400 |           if (hstat.len < hstat.restval)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4401 |             hstat.restval -= hstat.len;[0m
 4402 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:4402:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4402 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4403 |             hstat.restval = hstat.len;[0m
      | [0;1;32m                                      
[0m[1mhttp.c:4405:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4405 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4406 |         hstat.restval = 0;[0m
      | [0;1;32m                          
[0m[1mhttp.c:4415:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4415 |           || !opt.allow_cache)        /* b */[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4416 |         *dt |= SEND_NOCACHE;[0m
 4417 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:4417:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4417 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4418 |         *dt &= ~SEND_NOCACHE;[0m
      | [0;1;32m                             
[0m[1mhttp.c:4427:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4427 |       if (hstat.newloc)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 4428 |         *newloc = xstrdup (hstat.newloc);[0m
      | [0;1;32m                                         
[0m[1mhttp.c:4439:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4439 |           continue;[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mhttp.c:4443:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4443 |           logprintf (LOG_NOTQUIET, _("Cannot write to %s (%s).\n"),[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4444 |                      quote (hstat.local_file), strerror (errno));[0m
 4445 |           ret = err;[0m
 4446 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4449:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4449 |           if ( opt.retry_on_host_error )[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4450 |             {[0m
 4451 |               printwhat (count, opt.ntry);[0m
 4452 |               continue;[0m
 4453 |             }[0m
 4454 |           ret = err;[0m
 4455 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4461:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4461 |           goto exit;[0m
      | [0;1;32m          ^        
[0m      | [0;32m          {        ;} 
[0m[1mhttp.c:4464:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4464 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4465 |           logprintf (LOG_NOTQUIET, _("Required attribute missing from Header received.\n"));[0m
 4466 |           ret = err;[0m
 4467 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4469:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4469 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4470 |           logprintf (LOG_NOTQUIET, _("Username/Password Authentication Failed.\n"));[0m
 4471 |           ret = err;[0m
 4472 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4475:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4475 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4476 |           logprintf (LOG_NOTQUIET, _("Cannot write to WARC file.\n"));[0m
 4477 |           ret = err;[0m
 4478 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4482:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4482 |           logprintf (LOG_NOTQUIET, _("Cannot write to temporary WARC file.\n"));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4483 |           ret = err;[0m
 4484 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4487:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4487 |           logprintf (LOG_NOTQUIET, _("Unable to establish SSL connection.\n"));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4488 |           ret = err;[0m
 4489 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4492:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4492 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4493 |           logprintf (LOG_NOTQUIET, _("Cannot unlink %s (%s).\n"),[0m
 4494 |                      quote (hstat.local_file), strerror (errno));[0m
 4495 |           ret = err;[0m
 4496 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4511:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4511 |           goto exit;[0m
      | [0;1;32m          ^        
[0m      | [0;32m          {        ;} 
[0m[1mhttp.c:4514:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4514 |           ret = RETROK;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4515 |           goto exit;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mhttp.c:4518:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4518 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mhttp.c:4544:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4544 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mhttp.c:4572:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4572 |               if (!hurl)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 4573 |                 hurl = url_string (u, URL_AUTH_HIDE_PASSWD);[0m
      | [0;1;32m                                                            
[0m[1mhttp.c:4610:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4610 |               if (tmr == (time_t) (-1))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 4611 |                 logputs (LOG_VERBOSE, _("\[0m
 4612 | Last-modified header invalid -- time-stamp ignored.\n"));[0m
      | [0;1;32m                                                         
[0m[1mhttp.c:4613:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4613 |               if (*dt & HEAD_ONLY)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 4614 |                 time_came_from_head = true;[0m
      | [0;1;32m                                           
[0m[1mhttp.c:4735:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4735 |                   if (newtmr != (time_t)-1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 4736 |                     tmr = newtmr;[0m
      | [0;1;32m                                 
[0m[1mhttp.c:4771:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4771 |           if (*dt & ADDED_HTML_EXTENSION)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 4772 |             downloaded_file (FILE_DOWNLOADED_AND_HTML_EXTENSION_ADDED, hstat.local_file);[0m
 4773 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:4773:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4773 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4774 |             downloaded_file (FILE_DOWNLOADED_NORMALLY, hstat.local_file);[0m
      | [0;1;32m                                                                         
[0m[1mhttp.c:4809:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4809 |               if (*dt & ADDED_HTML_EXTENSION)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 4810 |                 downloaded_file (FILE_DOWNLOADED_AND_HTML_EXTENSION_ADDED, hstat.local_file);[0m
 4811 |               else[0m
      | [0;32m              } 
[0m[1mhttp.c:4811:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4811 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4812 |                 downloaded_file (FILE_DOWNLOADED_NORMALLY, hstat.local_file);[0m
      | [0;1;32m                                                                             
[0m[1mhttp.c:4826:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4826 |           else if (hstat.len != hstat.restval)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 4827 |             /* Getting here would mean reading more data than[0m
 4828 |                requested with content-length, which we never do.  */[0m
 4829 |             abort ();[0m
 4830 |           else[0m
      | [0;32m          } 
[0m[1mhttp.c:4894:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4894 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 4895 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:4896:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4896 |   while (c_isspace (*p))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 4897 |     ++p;[0m
      | [0;1;32m        
[0m[1mhttp.c:4900:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4900 |       || ((p[0] == '+' || p[0] == '-') && c_isdigit (p[1])))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 4901 |     return true;[0m
 4902 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:4902:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4902 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 4903 |     return false;[0m
      | [0;1;32m                 
[0m[1mhttp.c:4962:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4962 |       if (l >= sizeof savedlocale)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 4963 |         savedlocale[0] = '\0';[0m
 4964 |       else[0m
      | [0;32m      } 
[0m[1mhttp.c:4964:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4964 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4965 |         memcpy (savedlocale, oldlocale, l);[0m
      | [0;1;32m                                           
[0m[1mhttp.c:4965:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4965 |         memcpy (savedlocale, oldlocale, l);[0m
      | [0;1;32m        ^~~~~~
[0m[1mhttp.c:4965:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 4965 |         memcpy (savedlocale, oldlocale, l);[0m
      | [0;1;32m        ^~~~~~
[0m[1mhttp.c:4967:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4967 |   else savedlocale[0] = '\0';[0m
      | [0;1;32m      ^                      
[0m      | [0;32m       {
[0m[1mhttp.c:4978:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4978 |       xzero (t);[0m
      | [0;1;32m      ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhttp.c:4978:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 4978 |       xzero (t);[0m
      | [0;1;32m      ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mhttp.c:4988:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4988 |   if (savedlocale[0])[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 4989 |     setlocale (LC_TIME, savedlocale);[0m
      | [0;1;32m                                     
[0m[1mhttp.c:5019:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5019 |   if (len1 < sizeof (buf_t1))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5020 |     t1 = buf_t1;[0m
 5021 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:5021:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5021 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 5022 |     t1 = xmalloc(len1 + 1);[0m
      | [0;1;32m                           
[0m[1mhttp.c:5024:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5024 |   if (BASE64_LENGTH (len1) < sizeof (buf_t2))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 5025 |     t2 = buf_t2;[0m
 5026 |   else[0m
      | [0;32m  } 
[0m[1mhttp.c:5026:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5026 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 5027 |     t2 = xmalloc (BASE64_LENGTH (len1) + 1);[0m
      | [0;1;32m                                            
[0m[1mhttp.c:5029:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5029 |   sprintf (t1, "%s:%s", user, passwd);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhttp.c:5029:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5029 |   sprintf (t1, "%s:%s", user, passwd);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhttp.c:5034:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5034 |   if (t2 != buf_t2)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 5035 |     xfree (t2);[0m
      | [0;1;32m               
[0m[1mhttp.c:5037:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5037 |   if (t1 != buf_t1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 5038 |     xfree (t1);[0m
      | [0;1;32m               
[0m[1mhttp.c:5098:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5098 |       for (i = 0; i < countof (options); i++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 5099 |         if (namelen == strlen (options[i].name)[0m
 5100 |             && 0 == strncmp (name.b, options[i].name,[0m
 5101 |                              namelen))[0m
 5102 |           {[0m
 5103 |             *options[i].variable = strdupdelim (value.b, value.e);[0m
 5104 |             break;[0m
 5105 |           }[0m
      | [0;1;32m           
[0m[1mhttp.c:5146:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5146 |         snprintf (cnonce, sizeof (cnonce), "%08x",[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mhttp.c:5146:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5146 |         snprintf (cnonce, sizeof (cnonce), "%08x",[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mhttp.c:5173:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5173 |         if (!*cnonce)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 5174 |           snprintf (cnonce, sizeof (cnonce), "%08x",[0m
 5175 |             (unsigned) random_number (INT_MAX));[0m
      | [0;1;32m                                                
[0m[1mhttp.c:5174:11: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5174 |           snprintf (cnonce, sizeof (cnonce), "%08x",[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mhttp.c:5174:11: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5174 |           snprintf (cnonce, sizeof (cnonce), "%08x",[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mhttp.c:5222:19: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5222 |         res_len = snprintf (res, res_size, "Digest "\[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mhttp.c:5222:19: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5222 |         res_len = snprintf (res, res_size, "Digest "\[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mhttp.c:5230:19: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5230 |         res_len = snprintf (res, res_size, "Digest "\[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mhttp.c:5230:19: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5230 |         res_len = snprintf (res, res_size, "Digest "\[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mhttp.c:5237:20: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5237 |         res_len += snprintf (res + res_len, res_size - res_len, ", opaque=\"%s\"", opaque);[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mhttp.c:5237:20: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5237 |         res_len += snprintf (res + res_len, res_size - res_len, ", opaque=\"%s\"", opaque);[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mhttp.c:5242:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5242 |         snprintf (res + res_len, res_size - res_len, ", algorithm=\"%s\"", algorithm);[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mhttp.c:5242:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5242 |         snprintf (res + res_len, res_size - res_len, ", algorithm=\"%s\"", algorithm);[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mhttp.c:5301:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5301 |       *finished = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 5302 |       return basic_authentication_encode (user, passwd);[0m
      | [0;1;32m                                                       
[0m      | [0;32m                                                       ;} 
[0m[1mhttp.c:5305:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5305 |       *finished = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 5306 |       return digest_authentication_encode (au, user, passwd, method, path, auth_err);[0m
      | [0;1;32m                                                                                    
[0m      | [0;32m                                                                                    ;} 
[0m[1mhttp.c:5320:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5320 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mhttp.c:5327:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5327 |   if (!wget_cookie_jar)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 5328 |     wget_cookie_jar = cookie_jar_new ();[0m
      | [0;1;32m                                        
[0m[1mhttp.c:5339:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5339 |   if (wget_cookie_jar)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 5340 |     cookie_jar_save (wget_cookie_jar, opt.cookies_output);[0m
      | [0;1;32m                                                          
[0m[1mhttp.c:5379:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5379 |       memcpy (shortext, ext, len - 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:5379:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5379 |       memcpy (shortext, ext, len - 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:5392:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5392 |       strcpy (hs->local_file + local_filename_len, ext);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:5392:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5392 |       strcpy (hs->local_file + local_filename_len, ext);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhttp.c:5398:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5398 |           do[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 5399 |             sprintf (hs->local_file + local_filename_len,[0m
 5400 |                      ".%d%s", ext_num++, ext);[0m
 5401 |           while (file_exists_p (hs->local_file, NULL));[0m
      | [0;32m          } 
[0m[1mhttp.c:5399:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5399 |             sprintf (hs->local_file + local_filename_len,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mhttp.c:5399:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5399 |             sprintf (hs->local_file + local_filename_len,[0m
      | [0;1;32m            ^~~~~~~
[0m362 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[160/164][214.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpa5t4jxg5.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/init.c
[1minit.c:378:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |       if (cmp < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  379 |         hi = mid - 1;[0m
  380 |       else if (cmp > 0)[0m
      | [0;32m      } 
[0m[1minit.c:380:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |       else if (cmp > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  381 |         lo = mid + 1;[0m
  382 |       else[0m
      | [0;32m      } 
[0m[1minit.c:382:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  383 |         return mid;[0m
      | [0;1;32m                   
[0m[1minit.c:399:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  399 |   xzero (opt);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1minit.c:399:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  399 |   xzero (opt);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1minit.c:417:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  417 |   if (tmp)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  418 |     opt.no_proxy = sepstring (tmp);[0m
      | [0;1;32m                                   
[0m[1minit.c:553:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  553 |           if (!pwd || !pwd->pw_dir)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  554 |             return NULL;[0m
      | [0;1;32m                        
[0m[1minit.c:583:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  583 |           fprintf (stderr, _("%s: WGETRC points to %s, which couldn't be accessed because of error: %s.\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:583:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  583 |           fprintf (stderr, _("%s: WGETRC points to %s, which couldn't be accessed because of error: %s.\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:620:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  620 |   if (!file)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  621 |     return NULL;[0m
      | [0;1;32m                
[0m[1minit.c:641:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |   if (file && *file)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  642 |     return file;[0m
      | [0;1;32m                
[0m[1minit.c:695:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  695 |       fprintf (stderr, _("%s: Cannot read %s (%s).\n"), exec_name,[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:695:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  695 |       fprintf (stderr, _("%s: Cannot read %s (%s).\n"), exec_name,[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:710:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  710 |           if (!setval_internal_tilde (comind, com, val))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  711 |             {[0m
  712 |               fprintf (stderr, _("%s: Error in %s at line %d.\n"),[0m
  713 |                        exec_name, file, ln);[0m
  714 |               ++errcnt;[0m
  715 |             }[0m
  716 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1minit.c:712:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  712 |               fprintf (stderr, _("%s: Error in %s at line %d.\n"),[0m
      | [0;1;32m              ^~~~~~~
[0m[1minit.c:712:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  712 |               fprintf (stderr, _("%s: Error in %s at line %d.\n"),[0m
      | [0;1;32m              ^~~~~~~
[0m[1minit.c:718:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  718 |           fprintf (stderr, _("%s: Syntax error in %s at line %d.\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:718:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  718 |           fprintf (stderr, _("%s: Syntax error in %s at line %d.\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:718:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  718 |           fprintf (stderr, _("%s: Syntax error in %s at line %d.\n"),[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  719 |                    exec_name, file, ln);[0m
  720 |           ++errcnt;[0m
  721 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1minit.c:723:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  723 |           fprintf (stderr, _("%s: Unknown command %s in %s at line %d.\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:723:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  723 |           fprintf (stderr, _("%s: Unknown command %s in %s at line %d.\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:723:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  723 |           fprintf (stderr, _("%s: Unknown command %s in %s at line %d.\n"),[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  724 |                    exec_name, quote (com), file, ln);[0m
  725 |           ++errcnt;[0m
  726 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1minit.c:728:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  728 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1minit.c:730:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  730 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1minit.c:751:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  751 |   memset(&flstats, 0, sizeof(flstats));[0m
      | [0;1;32m  ^~~~~~
[0m[1minit.c:751:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  751 |   memset(&flstats, 0, sizeof(flstats));[0m
      | [0;1;32m  ^~~~~~
[0m[1minit.c:762:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  762 |           fprintf (stderr, _("\[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:762:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  762 |           fprintf (stderr, _("\[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:771:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  771 |   else if (file_exists_p (SYSTEM_WGETRC, &flstats))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  772 |     ok &= run_wgetrc (SYSTEM_WGETRC, &flstats);[0m
      | [0;1;32m                                               
[0m[1minit.c:777:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  777 |       fprintf (stderr, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:777:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  777 |       fprintf (stderr, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:786:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  786 |   if (!opt.wgetrcfile)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  787 |     return 0;[0m
      | [0;1;32m             
[0m[1minit.c:793:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  793 |       fprintf (stderr, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:793:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  793 |       fprintf (stderr, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:800:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |     if (file_exists_p (opt.wgetrcfile, &flstats))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  801 | #endif[0m
  802 |       ok &= run_wgetrc (opt.wgetrcfile, &flstats);[0m
      | [0;1;32m                                                  
[0m[1minit.c:807:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |   if (!ok)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  808 |     return WGET_EXIT_PARSE_ERROR;[0m
      | [0;1;32m                                 
[0m[1minit.c:821:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  821 |   while (*h)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  822 |     if (*h == '_' || *h == '-')[0m
  823 |       ++h;[0m
  824 |     else[0m
  825 |       *t++ = *h++;[0m
      | [0;1;32m                  
[0m[1minit.c:822:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  822 |     if (*h == '_' || *h == '-')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  823 |       ++h;[0m
  824 |     else[0m
      | [0;32m    } 
[0m[1minit.c:824:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  825 |       *t++ = *h++;[0m
      | [0;1;32m                  
[0m[1minit.c:854:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |   while (*line && c_isspace (*line))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  855 |     ++line;[0m
      | [0;1;32m           
[0m[1minit.c:856:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   while (end > line && c_isspace (end[-1]))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  857 |     --end;[0m
      | [0;1;32m          
[0m[1minit.c:860:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  860 |   if (!*line || *line == '#')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  861 |     return line_empty;[0m
      | [0;1;32m                      
[0m[1minit.c:866:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  866 |   while (p < end && (c_isalnum (*p) || *p == '_' || *p == '-'))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  867 |     ++p;[0m
      | [0;1;32m        
[0m[1minit.c:871:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  871 |   while (p < end && c_isspace (*p))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  872 |     ++p;[0m
      | [0;1;32m        
[0m[1minit.c:873:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  873 |   if (p == end || *p != '=')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  874 |     return line_syntax_error;[0m
      | [0;1;32m                             
[0m[1minit.c:876:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  876 |   while (p < end && c_isspace (*p))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  877 |     ++p;[0m
      | [0;1;32m        
[0m[1minit.c:890:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |   if (len < sizeof (buf))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  891 |     cmdcopy = buf;[0m
  892 |   else[0m
      | [0;32m  } 
[0m[1minit.c:892:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  892 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  893 |     cmdcopy = xmalloc (len + 1);[0m
      | [0;1;32m                                
[0m[1minit.c:894:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  894 |   memcpy (cmdcopy, cmdstart, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1minit.c:894:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  894 |   memcpy (cmdcopy, cmdstart, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1minit.c:899:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  899 |   if (cmdcopy != buf)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  900 |     xfree (cmdcopy);[0m
      | [0;1;32m                    
[0m[1minit.c:901:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  901 |   if (ind == -1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  902 |     return line_unknown_command;[0m
      | [0;1;32m                                
[0m[1minit.c:924:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  924 |   if ((unsigned) comind >= countof (commands))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  925 |     return NULL;[0m
      | [0;1;32m                
[0m[1minit.c:940:9: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of 'commands' [clang-analyzer-security.ArrayBound][0m
  940 |   if (((commands[comind].action == cmd_file) ||[0m
      | [0;1;32m        ^
[0m[1minit.c:755:7: [0m[0;1;36mnote: [0m'env_sysrc' is null[0m
  755 |   if (env_sysrc && file_exists_p (env_sysrc, &flstats))[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1minit.c:755:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  755 |   if (env_sysrc && file_exists_p (env_sysrc, &flstats))[0m
      | [0;1;32m                ^
[0m[1minit.c:771:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  771 |   else if (file_exists_p (SYSTEM_WGETRC, &flstats))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minit.c:771:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  771 |   else if (file_exists_p (SYSTEM_WGETRC, &flstats))[0m
      | [0;1;32m       ^
[0m[1minit.c:772:11: [0m[0;1;36mnote: [0mCalling 'run_wgetrc'[0m
  772 |     ok &= run_wgetrc (SYSTEM_WGETRC, &flstats);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minit.c:693:7: [0m[0;1;36mnote: [0mAssuming 'fp' is non-null[0m
  693 |   if (!fp)[0m
      | [0;1;32m      ^~~
[0m[1minit.c:693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  693 |   if (!fp)[0m
      | [0;1;32m  ^
[0m[1minit.c:700:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  700 |   while (getline (&line, &bufsize, fp) > 0)[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minit.c:700:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  700 |   while (getline (&line, &bufsize, fp) > 0)[0m
      | [0;1;32m  ^
[0m[1minit.c:706:7: [0m[0;1;36mnote: [0mControl jumps to 'case line_ok:'  at line 708[0m
  706 |       switch (parse_line (line, &com, &val, &comind))[0m
      | [0;1;32m      ^
[0m[1minit.c:710:16: [0m[0;1;36mnote: [0mCalling 'setval_internal_tilde'[0m
  710 |           if (!setval_internal_tilde (comind, com, val))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minit.c:940:9: [0m[0;1;36mnote: [0mAccess of 'commands' at an overflowing index, while it holds only 146 'struct (unnamed at init.c:131:14)' elements[0m
  940 |   if (((commands[comind].action == cmd_file) ||[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~
[0m[1minit.c:949:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |           while (homelen && ISSEP (home[homelen - 1]))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  950 |                  home[--homelen] = '\0';[0m
      | [0;1;32m                                        
[0m[1minit.c:979:18: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  979 |   if ((unsigned) snprintf(dd_optname, sizeof (dd_optname), "--%s", optname) > sizeof (dd_optname))[0m
      | [0;1;32m                 ^~~~~~~~
[0m[1minit.c:979:18: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  979 |   if ((unsigned) snprintf(dd_optname, sizeof (dd_optname), "--%s", optname) > sizeof (dd_optname))[0m
      | [0;1;32m                 ^~~~~~~~
[0m[1minit.c:979:99: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  979 |   if ((unsigned) snprintf(dd_optname, sizeof (dd_optname), "--%s", optname) > sizeof (dd_optname))[0m
      | [0;1;32m                                                                                                  ^
[0m      | [0;32m                                                                                                   {
[0m  980 |     exit (WGET_EXIT_PARSE_ERROR);[0m
      | [0;1;32m                                 
[0m[1minit.c:984:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  984 |   if (!setval_internal (command_by_name (com), dd_optname, val))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  985 |     exit (WGET_EXIT_PARSE_ERROR);[0m
      | [0;1;32m                                 
[0m[1minit.c:1000:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1000 |       if (!setval_internal (comind, com, val))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1001 |         exit (WGET_EXIT_PARSE_ERROR);[0m
 1002 |       xfree (com);[0m
 1003 |       xfree (val);[0m
 1004 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1000:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1000 |       if (!setval_internal (comind, com, val))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1001 |         exit (WGET_EXIT_PARSE_ERROR);[0m
      | [0;1;32m                                     
[0m[1minit.c:1006:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1006 |       fprintf (stderr, _("%s: Invalid --execute command %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1006:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1006 |       fprintf (stderr, _("%s: Invalid --execute command %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1006:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1006 |       fprintf (stderr, _("%s: Invalid --execute command %s\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1007 |                exec_name, quote (cmdopt));[0m
 1008 |       exit (WGET_EXIT_PARSE_ERROR);[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1minit.c:1037:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1037 |   if (CMP2 (val, 'o', 'n') || CMP3 (val, 'y', 'e', 's') || CMP1 (val, '1'))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 1038 |     /* "on", "yes" and "1" mean true. */[0m
 1039 |     return 1;[0m
 1040 |   else if (CMP3 (val, 'o', 'f', 'f') || CMP2 (val, 'n', 'o') || CMP1 (val, '0'))[0m
      | [0;32m  } 
[0m[1minit.c:1040:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |   else if (CMP3 (val, 'o', 'f', 'f') || CMP2 (val, 'n', 'o') || CMP1 (val, '0'))[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 1041 |     /* "off", "no" and "0" mean false. */[0m
 1042 |     return 0;[0m
      | [0;1;32m             
[0m[1minit.c:1056:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1056 |       value = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1057 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1060:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1060 |       value = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1061 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1065:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1065 |         fprintf (stderr,[0m
      | [0;1;32m        ^~~~~~~
[0m[1minit.c:1065:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1065 |         fprintf (stderr,[0m
      | [0;1;32m        ^~~~~~~
[0m[1minit.c:1085:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1085 |       value = CHECK_CERT_OFF;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1086 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1089:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1089 |       value = CHECK_CERT_ON;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1090 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1094:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1094 |         if (!c_strcasecmp (val, "quiet"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1095 |           value = CHECK_CERT_QUIET;[0m
 1096 |         else[0m
      | [0;32m        } 
[0m[1minit.c:1098:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1098 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1minit.c:1098:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1098 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1minit.c:1119:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1119 |       fprintf (stderr, _("%s: %s: Invalid number %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1119:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1119 |       fprintf (stderr, _("%s: %s: Invalid number %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1161:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1161 |   for (q = *pstring; *val; val++, q++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1162 |     *q = c_toupper (*val);[0m
      | [0;1;32m                          
[0m[1minit.c:1201:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1201 |       fprintf (stderr, _("%s: %s must only be used once\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1201:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1201 |       fprintf (stderr, _("%s: %s must only be used once\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1218:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1218 |   if (!cmd_file (com, val, place))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1219 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1223:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1223 |   while (t > s && *--t == '/')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1224 |     *t = '\0';[0m
      | [0;1;32m              
[0m[1minit.c:1238:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1238 |   if (*val)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1239 |     *pvec = merge_vecs (*pvec, sepstring (val));[0m
 1240 |   else[0m
      | [0;32m  } 
[0m[1minit.c:1265:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1265 |               if ((*t)[len - 1] == '/')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1266 |                 (*t)[len - 1] = '\0';[0m
      | [0;1;32m                                     
[0m[1minit.c:1296:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1296 |   while (val < end && c_isspace (end[-1]))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1297 |     --end;[0m
      | [0;1;32m          
[0m[1minit.c:1298:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1298 |   if (val == end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1299 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1304:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1304 |       --end, mult = 1024.0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1305 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1307:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1307 |       --end, mult = 1048576.0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1308 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1310:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1310 |       --end, mult = 1073741824.0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1311 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1313:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1313 |       --end, mult = 1099511627776.0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1314 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1318:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1318 |       mult = 1;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1minit.c:1322:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1322 |   while (val < end && c_isspace (*val))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1323 |     ++val;[0m
      | [0;1;32m          
[0m[1minit.c:1324:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |   while (val < end && c_isspace (end[-1]))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1325 |     --end;[0m
      | [0;1;32m          
[0m[1minit.c:1326:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1326 |   if (val == end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1327 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1329:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1329 |   if (!simple_atof (val, end, &number) || number < 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1330 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1356:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1356 |       fprintf (stderr, _("%s: %s: Invalid byte value %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1356:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1356 |       fprintf (stderr, _("%s: %s: Invalid byte value %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1377:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1377 |       fprintf (stderr, _("%s: %s: Invalid byte value %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1377:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1377 |       fprintf (stderr, _("%s: %s: Invalid byte value %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1396:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1396 |   while (val < end && c_isspace (end[-1]))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1397 |     --end;[0m
      | [0;1;32m          
[0m[1minit.c:1402:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1402 |       fprintf (stderr, _("%s: %s: Invalid time period %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1402:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1402 |       fprintf (stderr, _("%s: %s: Invalid time period %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1410:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1410 |       --end, mult = 1;          /* seconds */[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1411 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1413:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1413 |       --end, mult = 60;         /* minutes */[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1414 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1416:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1416 |       --end, mult = 3600;       /* hours */[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1417 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1419:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1419 |       --end, mult = 86400.0;    /* days */[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1420 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1422:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1422 |       --end, mult = 604800.0;   /* weeks */[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1423 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1minit.c:1427:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1427 |       mult = 1;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1minit.c:1431:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1431 |   while (val < end && c_isspace (*val))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1432 |     ++val;[0m
      | [0;1;32m          
[0m[1minit.c:1433:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1433 |   while (val < end && c_isspace (end[-1]))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1434 |     --end;[0m
      | [0;1;32m          
[0m[1minit.c:1435:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1435 |   if (val == end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1436 |     goto err;[0m
      | [0;1;32m             
[0m[1minit.c:1438:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1438 |   if (!simple_atof (val, end, &number))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1439 |     goto err;[0m
      | [0;1;32m             
[0m[1minit.c:1443:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1443 |       fprintf (stderr, _("%s: %s: Negative time period %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1443:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1443 |       fprintf (stderr, _("%s: %s: Negative time period %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1459:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1459 |   if (val && *val)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1460 |     return cmd_string (com, val, place);[0m
      | [0;1;32m                                        
[0m[1minit.c:1471:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1471 |       fprintf (stderr, _("use-askpass requires a string or either environment variable WGET_ASKPASS or SSH_ASKPASS to be set.\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1471:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1471 |       fprintf (stderr, _("use-askpass requires a string or either environment variable WGET_ASKPASS or SSH_ASKPASS to be set.\n"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1521:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1521 |   if (!cmd_boolean (com, val, &opt.dirstruct))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1522 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1525:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1525 |   if (opt.dirstruct)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1526 |     opt.no_dirstruct = false;[0m
 1527 |   else[0m
      | [0;32m  } 
[0m[1minit.c:1527:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1527 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1528 |     opt.no_dirstruct = true;[0m
      | [0;1;32m                            
[0m[1minit.c:1545:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1545 |       fprintf (stderr, _("%s: %s: Invalid header %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1545:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1545 |       fprintf (stderr, _("%s: %s: Invalid header %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1566:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1566 |       fprintf (stderr, _("%s: %s: Invalid WARC header %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1566:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1566 |       fprintf (stderr, _("%s: %s: Invalid WARC header %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1578:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1578 |   if (flag && !opt.htmlify)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1579 |     opt.remove_listing = false;[0m
      | [0;1;32m                               
[0m[1minit.c:1591:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1591 |   if (!cmd_boolean (com, val, &mirror))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1592 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1596:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1596 |       if (!opt.no_dirstruct)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1597 |         opt.dirstruct = true;[0m
      | [0;1;32m                             
[0m[1minit.c:1618:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1618 |   if (!ok)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1619 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m                                                                                    
[0m[1minit.c:1619:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1619 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m    ^~~~~~~
[0m[1minit.c:1619:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1619 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m    ^~~~~~~
[0m[1minit.c:1632:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1632 |       fprintf (stderr, _("%s: %s: Invalid progress type %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1632:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1632 |       fprintf (stderr, _("%s: %s: Invalid progress type %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1651:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1651 |   if (!cmd_boolean (com, val, &opt.recursive))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1652 |     return false;[0m
 1653 |   else[0m
      | [0;32m  } 
[0m[1minit.c:1655:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1655 |       if (opt.recursive && !opt.no_dirstruct)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1656 |         opt.dirstruct = true;[0m
      | [0;1;32m                             
[0m[1minit.c:1674:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1674 |   if (!ok)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1675 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m                                                                                    
[0m[1minit.c:1675:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1675 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m    ^~~~~~~
[0m[1minit.c:1675:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1675 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m    ^~~~~~~
[0m[1minit.c:1695:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1695 |       if (!end)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1696 |         end = val + strlen (val);[0m
      | [0;1;32m                                 
[0m[1minit.c:1698:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1698 |       if (VAL_IS ("unix"))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1699 |         restrict_os = restrict_unix;[0m
 1700 |       else if (VAL_IS ("vms"))[0m
      | [0;32m      } 
[0m[1minit.c:1700:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1700 |       else if (VAL_IS ("vms"))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1701 |         restrict_os = restrict_vms;[0m
 1702 |       else if (VAL_IS ("windows"))[0m
      | [0;32m      } 
[0m[1minit.c:1702:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1702 |       else if (VAL_IS ("windows"))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1703 |         restrict_os = restrict_windows;[0m
 1704 |       else if (VAL_IS ("lowercase"))[0m
      | [0;32m      } 
[0m[1minit.c:1704:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1704 |       else if (VAL_IS ("lowercase"))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1705 |         restrict_case = restrict_lowercase;[0m
 1706 |       else if (VAL_IS ("uppercase"))[0m
      | [0;32m      } 
[0m[1minit.c:1706:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1706 |       else if (VAL_IS ("uppercase"))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1707 |         restrict_case = restrict_uppercase;[0m
 1708 |       else if (VAL_IS ("nocontrol"))[0m
      | [0;32m      } 
[0m[1minit.c:1708:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1708 |       else if (VAL_IS ("nocontrol"))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1709 |         restrict_ctrl = false;[0m
 1710 |       else if (VAL_IS ("ascii"))[0m
      | [0;32m      } 
[0m[1minit.c:1710:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1710 |       else if (VAL_IS ("ascii"))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1711 |         restrict_nonascii = true;[0m
 1712 |       else[0m
      | [0;32m      } 
[0m[1minit.c:1714:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1714 |           fprintf (stderr, _("\[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:1714:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1714 |           fprintf (stderr, _("\[0m
      | [0;1;32m          ^~~~~~~
[0m[1minit.c:1721:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1721 |       if (*end)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1722 |         val = end + 1;[0m
      | [0;1;32m                      
[0m[1minit.c:1740:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1740 |   if (!opt.report_bps)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1741 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m                                                                                    
[0m[1minit.c:1741:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1741 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m    ^~~~~~~
[0m[1minit.c:1741:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1741 |     fprintf (stderr, _("%s: %s: Invalid value %s.\n"), exec_name, com, quote (val));[0m
      | [0;1;32m    ^~~~~~~
[0m[1minit.c:1773:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1773 |   if (!cmd_time (com, val, &value))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1774 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1787:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1787 |       fprintf (stderr, _("%s: %s: Invalid value %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1787:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1787 |       fprintf (stderr, _("%s: %s: Invalid value %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1minit.c:1848:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1848 |   while (p < end && c_isspace (*p))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1849 |     ++p;[0m
      | [0;1;32m        
[0m[1minit.c:1861:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1861 |           if (!seen_dot)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1862 |             result = (10 * result) + (ch - '0');[0m
 1863 |           else[0m
      | [0;32m          } 
[0m[1minit.c:1863:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1863 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1864 |             result += (ch - '0') / (divider *= 10);[0m
      | [0;1;32m                                                   
[0m[1minit.c:1869:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1869 |           if (!seen_dot)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1870 |             seen_dot = true;[0m
 1871 |           else[0m
      | [0;32m          } 
[0m[1minit.c:1871:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1871 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1872 |             return false;[0m
      | [0;1;32m                         
[0m[1minit.c:1874:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1874 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1875 |         return false;[0m
      | [0;1;32m                     
[0m[1minit.c:1877:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1877 |   if (!seen_digit)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1878 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1879:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1879 |   if (negative)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1880 |     result = -result;[0m
      | [0;1;32m                     
[0m[1minit.c:1895:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1895 |   for (p = s; *p && *p != ':' && !c_isspace (*p); p++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1896 |     ;[0m
      | [0;1;32m     
[0m[1minit.c:1899:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1899 |   if (*p != ':' || p == s)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1900 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1902:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1902 |   if (strchr (s, '\n'))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1903 |     return false;[0m
      | [0;1;32m                 
[0m[1minit.c:1914:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1914 |   for (i = 0; i < itemcount; i++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1915 |     if (0 == c_strcasecmp (val, items[i].name))[0m
 1916 |       {[0m
 1917 |         *place = items[i].code;[0m
 1918 |         return true;[0m
 1919 |       }[0m
      | [0;1;32m       
[0m[1minit.c:1932:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1932 |   if (cleaned_up++)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1933 |     return; /* cleanup() must not be called twice */[0m
      | [0;1;32m                                                    
[0m[1minit.c:1936:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1936 |   if (opt.warc_filename != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1937 |     warc_close ();[0m
      | [0;1;32m                  
[0m[1minit.c:1945:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1945 |       if (fclose (fp) == EOF)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1946 |         inform_exit_status (CLOSEFAILED);[0m
      | [0;1;32m                                         
[0m169 warnings generated.
Suppressed 30 warnings (30 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[161/164][191.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpcm8k5a2o.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/ftp-ls.c
[1mftp-ls.c:54:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |   if (strlen (s) < 9)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   55 |     return 0;[0m
      | [0;1;32m             
[0m[1mftp-ls.c:73:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |   if (len <= 0) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mftp-ls.c:75:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |   while (len > 0 && (line[len - 1] == '\n' || line[len - 1] == '\r'))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m   76 |     line[--len] = '\0';[0m
      | [0;1;32m                       
[0m[1mftp-ls.c:78:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |   if (!len) return 0;[0m
      | [0;1;32m           ^         
[0m      | [0;32m            {
[0m[1mftp-ls.c:80:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |   for ( ; *line ; line++ ) if (*line == '\t') *line = ' ';[0m
      | [0;1;32m                          ^                               
[0m      | [0;32m                           {
[0m[1mftp-ls.c:80:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |   for ( ; *line ; line++ ) if (*line == '\t') *line = ' ';[0m
      | [0;1;32m                                             ^            
[0m      | [0;32m                                              {
[0m[1mftp-ls.c:117:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |       if (!c_strncasecmp (line, "total", 5))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  118 |         continue;[0m
      | [0;1;32m                 
[0m[1mftp-ls.c:121:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |       if (!tok)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  122 |         continue;[0m
      | [0;1;32m                 
[0m[1mftp-ls.c:131:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  131 |           cur.type = FT_PLAINFILE;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  132 |           DEBUGP (("PLAINFILE; "));[0m
  133 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp-ls.c:135:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  135 |           cur.type = FT_DIRECTORY;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  136 |           DEBUGP (("DIRECTORY; "));[0m
  137 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp-ls.c:139:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  139 |           cur.type = FT_SYMLINK;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  140 |           DEBUGP (("SYMLINK; "));[0m
  141 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp-ls.c:143:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |           cur.type = FT_UNKNOWN;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  144 |           DEBUGP (("UNKNOWN; "));[0m
  145 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp-ls.c:153:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  153 |               cur.perms = 0644;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  154 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mftp-ls.c:156:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |               cur.perms = 0755;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  157 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mftp-ls.c:160:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  160 |               cur.perms = 0644;[0m
      | [0;1;32m              ^               
[0m      | [0;32m              {               ;} 
[0m[1mftp-ls.c:194:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |               for (i = 0; i < 12; i++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  195 |                 if (!c_strcasecmp (tok, months[i]))[0m
  196 |                   break;[0m
      | [0;1;32m                        
[0m[1mftp-ls.c:195:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |                 if (!c_strcasecmp (tok, months[i]))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  196 |                   break;[0m
      | [0;1;32m                        
[0m[1mftp-ls.c:212:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |                   if (size == WGINT_MAX && errno == ERANGE)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  213 |                     /* Out of range -- ignore the size.  #### Should[0m
  214 |                        we refuse to start the download.  */[0m
  215 |                     cur.size = 0;[0m
  216 |                   else[0m
      | [0;32m                  } 
[0m[1mftp-ls.c:216:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  217 |                     cur.size = size;[0m
      | [0;1;32m                                    
[0m[1mftp-ls.c:227:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |               if (tok[1])       /* two-digit... */[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  228 |                 day = 10 * (*tok - '0') + tok[1] - '0';[0m
  229 |               else              /* ...or one-digit */[0m
      | [0;32m              } 
[0m[1mftp-ls.c:229:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |               else              /* ...or one-digit */[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  230 |                 day = *tok - '0';[0m
      | [0;1;32m                                 
[0m[1mftp-ls.c:247:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   for (; c_isdigit (*tok) && year <= 99999; tok++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  248 |                     year = (*tok - '0') + 10 * year;[0m
      | [0;1;32m                                                    
[0m[1mftp-ls.c:258:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |                       for (n = 0; c_isdigit (*tok) && n < 2; tok++, n++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  259 |                         min = (*tok - '0') + 10 * min;[0m
      | [0;1;32m                                                      
[0m[1mftp-ls.c:264:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |                           for (n = 0; c_isdigit (*tok) && n < 2; tok++, n++)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  265 |                             sec = (*tok - '0') + 10 * sec;[0m
      | [0;1;32m                                                          
[0m[1mftp-ls.c:269:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |               if (year)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  270 |                 DEBUGP (("year: %d (no tm); ", year));[0m
  271 |               else[0m
      | [0;32m              } 
[0m[1mftp-ls.c:271:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  272 |                 DEBUGP (("time: %02d:%02d:%02d (no yr); ", hour, min, sec));[0m
      | [0;1;32m                                                                            
[0m[1mftp-ls.c:322:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  322 |               memcpy (cur.name, tok, fnlen + 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1mftp-ls.c:322:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  322 |               memcpy (cur.name, tok, fnlen + 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1mftp-ls.c:343:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  344 |                 error = 1;[0m
      | [0;1;32m                          
[0m[1mftp-ls.c:347:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  348 |             abort ();[0m
      | [0;1;32m                     
[0m[1mftp-ls.c:351:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |       if (!cur.name || (cur.type == FT_SYMLINK && !cur.linkto))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  352 |         error = 1;[0m
      | [0;1;32m                  
[0m[1mftp-ls.c:367:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  367 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:367:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  367 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:375:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  375 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:375:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  375 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:394:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |           if (month > tnow->tm_mon)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  395 |             timestruct.tm_year = tnow->tm_year - 1;[0m
  396 |           else[0m
      | [0;32m          } 
[0m[1mftp-ls.c:396:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  397 |             timestruct.tm_year = tnow->tm_year;[0m
      | [0;1;32m                                               
[0m[1mftp-ls.c:399:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  400 |         timestruct.tm_year = year;[0m
      | [0;1;32m                                  
[0m[1mftp-ls.c:401:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |       if (timestruct.tm_year >= 1900)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  402 |         timestruct.tm_year -= 1900;[0m
      | [0;1;32m                                   
[0m[1mftp-ls.c:431:17: [0m[0;1;35mwarning: [0m[1mValue of 'errno' was not checked and may be overwritten by function 'getline' [clang-analyzer-unix.Errno][0m
  431 |   while ((len = getline (&line, &bufsize, fp)) > 0)[0m
      | [0;1;32m                ^
[0m[1mftp-ls.c:1008:7: [0m[0;1;36mnote: [0mAssuming 'fp' is non-null[0m
 1008 |   if (!fp)[0m
      | [0;1;32m      ^~~
[0m[1mftp-ls.c:1008:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1008 |   if (!fp)[0m
      | [0;1;32m  ^
[0m[1mftp-ls.c:1014:8: [0m[0;1;36mnote: [0mCalling 'ftp_parse_ls_fp'[0m
 1014 |   fi = ftp_parse_ls_fp (fp, system_type);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mftp-ls.c:1023:3: [0m[0;1;36mnote: [0mControl jumps to 'case ST_WINNT:'  at line 1027[0m
 1023 |   switch (system_type)[0m
      | [0;1;32m  ^
[0m[1mftp-ls.c:1031:9: [0m[0;1;36mnote: [0mAfter calling 'rewind' reading 'errno' is required to find out if the call has failed[0m
 1031 |         rewind(fp);[0m
      | [0;1;32m        ^~~~~~~~~~
[0m[1mftp-ls.c:1035:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1035 |         if (c >= '0' && c <='9')[0m
      | [0;1;32m            ^~~~~~~~
[0m[1mftp-ls.c:1035:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mftp-ls.c:1035:25: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1035 |         if (c >= '0' && c <='9')[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mftp-ls.c:1035:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1035 |         if (c >= '0' && c <='9')[0m
      | [0;1;32m        ^
[0m[1mftp-ls.c:1036:18: [0m[0;1;36mnote: [0mCalling 'ftp_parse_winnt_ls'[0m
 1036 |           return ftp_parse_winnt_ls (fp);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mftp-ls.c:431:17: [0m[0;1;36mnote: [0mValue of 'errno' was not checked and may be overwritten by function 'getline'[0m
  431 |   while ((len = getline (&line, &bufsize, fp)) > 0)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mftp-ls.c:440:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |       if (len < 40) continue;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mftp-ls.c:446:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  446 |       if (tok == NULL) continue;[0m
      | [0;1;32m                      ^         
[0m      | [0;32m                       {
[0m[1mftp-ls.c:448:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |       if (month < 0) month = 0; else month--;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {          } 
[0m[1mftp-ls.c:448:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |       if (month < 0) month = 0; else month--;[0m
      | [0;1;32m                                    ^        
[0m      | [0;32m                                     {
[0m[1mftp-ls.c:450:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |       if (tok == NULL) continue;[0m
      | [0;1;32m                      ^         
[0m      | [0;32m                       {
[0m[1mftp-ls.c:453:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |       if (tok == NULL) continue;[0m
      | [0;1;32m                      ^         
[0m      | [0;32m                       {
[0m[1mftp-ls.c:463:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |           if (len < 42) continue;[0m
      | [0;1;32m                       ^         
[0m      | [0;32m                        {
[0m[1mftp-ls.c:469:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  469 |       memset(&cur, 0, sizeof (cur));[0m
      | [0;1;32m      ^~~~~~
[0m[1mftp-ls.c:469:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  469 |       memset(&cur, 0, sizeof (cur));[0m
      | [0;1;32m      ^~~~~~
[0m[1mftp-ls.c:477:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |       if (tok == NULL) continue;[0m
      | [0;1;32m                      ^         
[0m      | [0;32m                       {
[0m[1mftp-ls.c:480:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |       if (tok == NULL) continue;[0m
      | [0;1;32m                      ^         
[0m      | [0;32m                       {
[0m[1mftp-ls.c:484:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |       if (tok[0] && tok[1]) tok+=2;[0m
      | [0;1;32m                           ^       
[0m      | [0;32m                            {
[0m[1mftp-ls.c:485:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  485 |       if (hour >= 12 || hour < 0)  hour  = 0;[0m
      | [0;1;32m                                 ^           
[0m      | [0;32m                                  {
[0m[1mftp-ls.c:486:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |       if (*tok == 'P') hour += 12;[0m
      | [0;1;32m                      ^           
[0m      | [0;32m                       {
[0m[1mftp-ls.c:511:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |       if (tok == NULL) continue;[0m
      | [0;1;32m                      ^         
[0m      | [0;32m                       {
[0m[1mftp-ls.c:512:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |       while ((tok != NULL) && (*tok == '\0'))  tok = strtok(NULL, " ");[0m
      | [0;1;32m                                             ^                         
[0m      | [0;32m                                              {
[0m[1mftp-ls.c:513:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |       if (tok == NULL) continue;[0m
      | [0;1;32m                      ^         
[0m      | [0;32m                       {
[0m[1mftp-ls.c:527:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |           if (size == WGINT_MAX && errno == ERANGE)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  528 |             cur.size = 0;       /* overflow */[0m
  529 |           else[0m
      | [0;32m          } 
[0m[1mftp-ls.c:529:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  530 |             cur.size = size;[0m
      | [0;1;32m                            
[0m[1mftp-ls.c:541:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  541 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:541:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  541 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:549:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  549 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:549:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  549 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:600:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |   while ((*str != '\0') && (*str != '^'))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  601 |      str++;[0m
      | [0;1;32m           
[0m[1mftp-ls.c:688:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |       if (i <= 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  689 |         continue; /* Ignore blank line. */[0m
      | [0;1;32m                                          
[0m[1mftp-ls.c:724:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  724 |       if (tok == NULL) tok = line;[0m
      | [0;1;32m                      ^           
[0m      | [0;32m                       {
[0m[1mftp-ls.c:739:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |       for (p = tok + strlen (tok); (--p > tok) && c_isdigit(*p); );[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m[1mftp-ls.c:860:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  860 |                                   snprintf(date_str, sizeof(date_str), "%s ", tok);[0m
      | [0;1;32m                                  ^~~~~~~~
[0m[1mftp-ls.c:860:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  860 |                                   snprintf(date_str, sizeof(date_str), "%s ", tok);[0m
      | [0;1;32m                                  ^~~~~~~~
[0m[1mftp-ls.c:866:15: [0m[0;1;35mwarning: [0m[1mCall to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  866 |               strncat( date_str,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mftp-ls.c:866:15: [0m[0;1;36mnote: [0mCall to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11[0m
  866 |               strncat( date_str,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mftp-ls.c:887:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  887 |                       break;[0m
      | [0;1;32m                      ^    
[0m      | [0;32m                      {    ;} 
[0m[1mftp-ls.c:889:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  889 |                       break;[0m
      | [0;1;32m                      ^    
[0m      | [0;32m                      {    ;} 
[0m[1mftp-ls.c:891:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  891 |                       if (j == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  892 |                         {[0m
  893 |                           perms = 0;[0m
  894 |                         }[0m
  895 |                       else if (j < 4)[0m
  896 |                         {[0m
  897 |                           perms <<= 3;[0m
  898 |                         }[0m
  899 |                       j++;[0m
  900 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mftp-ls.c:902:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  902 |                       perms |= 4;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  903 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mftp-ls.c:905:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  905 |                       perms |= 2;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  906 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mftp-ls.c:908:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  908 |                       perms |= 1;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  909 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mftp-ls.c:911:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  911 |                       perms |= 2;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  912 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mftp-ls.c:948:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  948 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  949 |         dt = 0;[0m
      | [0;1;32m               
[0m[1mftp-ls.c:951:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  951 |       if (dt >= 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  952 |         timenow += dt;[0m
  953 |       else[0m
      | [0;32m      } 
[0m[1mftp-ls.c:953:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  953 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  954 |         timenow -= (-dt);[0m
      | [0;1;32m                         
[0m[1mftp-ls.c:965:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  965 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:965:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  965 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:973:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  973 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:973:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  973 |           memcpy (l, &cur, sizeof (cur));[0m
      | [0;1;32m          ^~~~~~
[0m[1mftp-ls.c:1026:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1026 |       return ftp_parse_unix_ls (fp, 0);[0m
      | [0;1;32m      ^                               
[0m      | [0;32m      {                               ;} 
[0m[1mftp-ls.c:1035:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |         if (c >= '0' && c <='9')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1036 |           return ftp_parse_winnt_ls (fp);[0m
 1037 |         else[0m
      | [0;32m        } 
[0m[1mftp-ls.c:1037:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1037 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1038 |           return ftp_parse_unix_ls (fp, 1);[0m
      | [0;1;32m                                           
[0m[1mftp-ls.c:1041:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1041 |       return ftp_parse_vms_ls (fp);[0m
      | [0;1;32m      ^                           
[0m      | [0;32m      {                           ;} 
[0m[1mftp-ls.c:1043:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1043 |       return ftp_parse_unix_ls (fp, 1);[0m
      | [0;1;32m      ^                               
[0m      | [0;32m      {                               ;} 
[0m[1mftp-ls.c:1045:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1045 |       logprintf (LOG_NOTQUIET, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1046 | Unsupported listing type, trying Unix listing parser.\n"));[0m
 1047 |       return ftp_parse_unix_ls (fp, 0);[0m
      | [0;1;32m                                      
[0m      | [0;32m                                      ;} 
[0m[1mftp-ls.c:1074:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1074 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1075 |     fp = output_stream;[0m
      | [0;1;32m                       
[0m[1mftp-ls.c:1082:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |       if (tmpp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1083 |         upwd = concat_strings (tmpu, ":", tmpp, "@", (char *) 0);[0m
 1084 |       else[0m
      | [0;32m      } 
[0m[1mftp-ls.c:1084:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1084 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1085 |         upwd = concat_strings (tmpu, "@", (char *) 0);[0m
      | [0;1;32m                                                      
[0m[1mftp-ls.c:1089:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1089 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1090 |     upwd = xstrdup ("");[0m
      | [0;1;32m                        
[0m[1mftp-ls.c:1094:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1094 |   fprintf (fp, "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1094:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1094 |   fprintf (fp, "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1095:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1095 |   fprintf (fp, "<html>\n<head>\n<title>");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1095:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1095 |   fprintf (fp, "<html>\n<head>\n<title>");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1096:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1096 |   fprintf (fp, _("Index of /%s on %s:%d"), htcldir, u->host, u->port);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1096:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1096 |   fprintf (fp, _("Index of /%s on %s:%d"), htcldir, u->host, u->port);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1097:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1097 |   fprintf (fp, "</title>\n</head>\n<body>\n<h1>");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1097:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1097 |   fprintf (fp, "</title>\n</head>\n<body>\n<h1>");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1098:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1098 |   fprintf (fp, _("Index of /%s on %s:%d"), htcldir, u->host, u->port);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1098:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1098 |   fprintf (fp, _("Index of /%s on %s:%d"), htcldir, u->host, u->port);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1099:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1099 |   fprintf (fp, "</h1>\n<hr>\n<pre>\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1099:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1099 |   fprintf (fp, "</h1>\n<hr>\n<pre>\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1103:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1103 |       fprintf (fp, "  ");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1103:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1103 |       fprintf (fp, "  ");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1115:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1115 |           fprintf (fp, "%d %s %02d ", ptm->tm_year + 1900, months[ptm->tm_mon],[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1115:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1115 |           fprintf (fp, "%d %s %02d ", ptm->tm_year + 1900, months[ptm->tm_mon],[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1117:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |           if (f->ptype == TT_HOUR_MIN)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1118 |             fprintf (fp, "%02d:%02d  ", ptm->tm_hour, ptm->tm_min);[0m
 1119 |           else[0m
      | [0;32m          } 
[0m[1mftp-ls.c:1118:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1118 |             fprintf (fp, "%02d:%02d  ", ptm->tm_hour, ptm->tm_min);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mftp-ls.c:1118:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1118 |             fprintf (fp, "%02d:%02d  ", ptm->tm_hour, ptm->tm_min);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mftp-ls.c:1119:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1119 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1120 |             fprintf (fp, "       ");[0m
      | [0;1;32m                                    
[0m[1mftp-ls.c:1120:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1120 |             fprintf (fp, "       ");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mftp-ls.c:1120:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1120 |             fprintf (fp, "       ");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mftp-ls.c:1122:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1122 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1123 |         fprintf (fp, _("time unknown       "));[0m
      | [0;1;32m                                               
[0m[1mftp-ls.c:1123:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1123 |         fprintf (fp, _("time unknown       "));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp-ls.c:1123:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1123 |         fprintf (fp, _("time unknown       "));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp-ls.c:1127:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1127 |           fprintf (fp, _("File        "));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1127:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1127 |           fprintf (fp, _("File        "));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1127:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1127 |           fprintf (fp, _("File        "));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1128 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp-ls.c:1130:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1130 |           fprintf (fp, _("Directory   "));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1130:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1130 |           fprintf (fp, _("Directory   "));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1130:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1130 |           fprintf (fp, _("Directory   "));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1131 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp-ls.c:1133:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1133 |           fprintf (fp, _("Link        "));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1133:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1133 |           fprintf (fp, _("Link        "));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1133:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1133 |           fprintf (fp, _("Link        "));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1134 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp-ls.c:1136:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1136 |           fprintf (fp, _("Not sure    "));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1136:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1136 |           fprintf (fp, _("Not sure    "));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mftp-ls.c:1136:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1136 |           fprintf (fp, _("Not sure    "));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1137 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp-ls.c:1141:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1141 |       fprintf (fp, "<a href=\"ftp://%s%s:%d", upwd, u->host, u->port);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1141:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1141 |       fprintf (fp, "<a href=\"ftp://%s%s:%d", upwd, u->host, u->port);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1142:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1142 |       if (*u->dir != '/')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1143 |         putc ('/', fp);[0m
      | [0;1;32m                       
[0m[1mftp-ls.c:1148:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1148 |       fprintf (fp, "%s", htcldir);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1148:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1148 |       fprintf (fp, "%s", htcldir);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1149:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1149 |       if (*u->dir)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1150 |         putc ('/', fp);[0m
      | [0;1;32m                       
[0m[1mftp-ls.c:1151:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1151 |       fprintf (fp, "%s", urlclfile);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1151:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1151 |       fprintf (fp, "%s", urlclfile);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1152:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1152 |       if (f->type == FT_DIRECTORY)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1153 |         putc ('/', fp);[0m
      | [0;1;32m                       
[0m[1mftp-ls.c:1154:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1154 |       fprintf (fp, "\">%s", htclfile);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1154:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1154 |       fprintf (fp, "\">%s", htclfile);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1155:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1155 |       if (f->type == FT_DIRECTORY)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1156 |         putc ('/', fp);[0m
      | [0;1;32m                       
[0m[1mftp-ls.c:1157:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1157 |       fprintf (fp, "</a> ");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1157:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1157 |       fprintf (fp, "</a> ");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftp-ls.c:1158:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1158 |       if (f->type == FT_PLAINFILE)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1159 |         fprintf (fp, _(" (%s bytes)"), number_to_static_string (f->size));[0m
 1160 |       else if (f->type == FT_SYMLINK)[0m
      | [0;32m      } 
[0m[1mftp-ls.c:1159:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1159 |         fprintf (fp, _(" (%s bytes)"), number_to_static_string (f->size));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp-ls.c:1159:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1159 |         fprintf (fp, _(" (%s bytes)"), number_to_static_string (f->size));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp-ls.c:1160:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1160 |       else if (f->type == FT_SYMLINK)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1161 |         fprintf (fp, "-> %s", f->linkto ? f->linkto : "(nil)");[0m
      | [0;1;32m                                                               
[0m[1mftp-ls.c:1161:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1161 |         fprintf (fp, "-> %s", f->linkto ? f->linkto : "(nil)");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp-ls.c:1161:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1161 |         fprintf (fp, "-> %s", f->linkto ? f->linkto : "(nil)");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp-ls.c:1167:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1167 |   fprintf (fp, "</pre>\n</body>\n</html>\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1167:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1167 |   fprintf (fp, "</pre>\n</body>\n</html>\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mftp-ls.c:1170:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1170 |   if (!output_stream)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1171 |     fclose (fp);[0m
 1172 |   else[0m
      | [0;32m  } 
[0m[1mftp-ls.c:1172:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1172 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1173 |     fflush (fp);[0m
      | [0;1;32m                
[0m152 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[162/164][205.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpqwmmntuq.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/ftp.c
[1mftp.c:94:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |       while (*s && *s != '(')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   95 |         ++s;[0m
      | [0;1;32m            
[0m[1mftp.c:96:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |       if (!*s)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   97 |         return 0;[0m
      | [0;1;32m                 
[0m[1mftp.c:100:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |       if (!*s)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  101 |         return 0;[0m
      | [0;1;32m                 
[0m[1mftp.c:102:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |       while (*s && c_isspace (*s))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  103 |         ++s;[0m
      | [0;1;32m            
[0m[1mftp.c:104:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |       if (!*s)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  105 |         return 0;[0m
      | [0;1;32m                 
[0m[1mftp.c:106:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |       if (c_tolower (*s) != 'b')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  107 |         continue;[0m
      | [0;1;32m                 
[0m[1mftp.c:108:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |       if (c_strncasecmp (s, "byte", 4))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  109 |         continue;[0m
  110 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:110:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  111 |         break;[0m
      | [0;1;32m              
[0m[1mftp.c:129:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |   if (!socket_ip_address (csock, addr, ENDPOINT_PEER))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  130 |     abort ();[0m
      | [0;1;32m             
[0m[1mftp.c:138:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  138 |       if (!opt.server_response)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  139 |         logputs (LOG_VERBOSE, "==> PASV ... ");[0m
  140 |       err = ftp_pasv (csock, addr, port);[0m
  141 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftp.c:138:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  139 |         logputs (LOG_VERBOSE, "==> PASV ... ");[0m
      | [0;1;32m                                               
[0m[1mftp.c:143:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |       if (!opt.server_response)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  144 |         logputs (LOG_VERBOSE, "==> EPSV ... ");[0m
  145 |       err = ftp_epsv (csock, addr, port);[0m
  146 | [0m
  147 |       /* If EPSV is not supported try LPSV */[0m
  148 |       if (err == FTPNOPASV)[0m
  149 |         {[0m
  150 |           if (!opt.server_response)[0m
  151 |             logputs (LOG_VERBOSE, "==> LPSV ... ");[0m
  152 |           err = ftp_lpsv (csock, addr, port);[0m
  153 |         }[0m
  154 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftp.c:143:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  144 |         logputs (LOG_VERBOSE, "==> EPSV ... ");[0m
      | [0;1;32m                                               
[0m[1mftp.c:150:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |           if (!opt.server_response)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  151 |             logputs (LOG_VERBOSE, "==> LPSV ... ");[0m
      | [0;1;32m                                                   
[0m[1mftp.c:156:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mftp.c:172:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |   if (!socket_ip_address (csock, &cip, ENDPOINT_PEER))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  173 |     abort ();[0m
      | [0;1;32m             
[0m[1mftp.c:181:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  181 |       if (!opt.server_response)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  182 |         logputs (LOG_VERBOSE, "==> PORT ... ");[0m
  183 |       err = ftp_port (csock, local_sock);[0m
  184 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftp.c:181:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  182 |         logputs (LOG_VERBOSE, "==> PORT ... ");[0m
      | [0;1;32m                                               
[0m[1mftp.c:186:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  186 |       if (!opt.server_response)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  187 |         logputs (LOG_VERBOSE, "==> EPRT ... ");[0m
  188 |       err = ftp_eprt (csock, local_sock);[0m
  189 | [0m
  190 |       /* If EPRT is not supported try LPRT */[0m
  191 |       if (err == FTPPORTERR)[0m
  192 |         {[0m
  193 |           if (!opt.server_response)[0m
  194 |             logputs (LOG_VERBOSE, "==> LPRT ... ");[0m
  195 |           err = ftp_lprt (csock, local_sock);[0m
  196 |         }[0m
  197 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftp.c:186:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  187 |         logputs (LOG_VERBOSE, "==> EPRT ... ");[0m
      | [0;1;32m                                               
[0m[1mftp.c:193:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |           if (!opt.server_response)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  194 |             logputs (LOG_VERBOSE, "==> LPRT ... ");[0m
      | [0;1;32m                                                   
[0m[1mftp.c:199:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  199 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mftp.c:226:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |   if (size >= 1024)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  227 |     logprintf (LOG_VERBOSE, " (%s)", human_readable (size, 10, 1));[0m
      | [0;1;32m                                                                   
[0m[1mftp.c:230:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |       if (size - start >= 1024)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  231 |         logprintf (LOG_VERBOSE, _(", %s (%s) remaining"),[0m
  232 |                    number_to_static_string (size - start),[0m
  233 |                    human_readable (size - start, 10, 1));[0m
  234 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:234:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  235 |         logprintf (LOG_VERBOSE, _(", %s remaining"),[0m
  236 |                    number_to_static_string (size - start));[0m
      | [0;1;32m                                                           
[0m[1mftp.c:362:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |   if (u->user)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  363 |     user = u->user;[0m
  364 |   else if (opt.user && (opt.use_askpass || opt.ask_passwd))[0m
      | [0;32m  } 
[0m[1mftp.c:364:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |   else if (opt.user && (opt.use_askpass || opt.ask_passwd))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  365 |     user = opt.user;[0m
  366 |   else if (opt.ftp_user)[0m
      | [0;32m  } 
[0m[1mftp.c:366:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |   else if (opt.ftp_user)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  367 |     user = opt.ftp_user;[0m
  368 |   else if (opt.user)[0m
      | [0;32m  } 
[0m[1mftp.c:368:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |   else if (opt.user)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  369 |     user = opt.user;[0m
  370 |   else[0m
      | [0;32m  } 
[0m[1mftp.c:370:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  371 |     user = NULL;[0m
      | [0;1;32m                
[0m[1mftp.c:374:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |   if (u->passwd)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  375 |     passwd = u->passwd;[0m
  376 |   else if (opt.passwd && (opt.use_askpass || opt.ask_passwd))[0m
      | [0;32m  } 
[0m[1mftp.c:376:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |   else if (opt.passwd && (opt.use_askpass || opt.ask_passwd))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  377 |     passwd = opt.passwd;[0m
  378 |   else if (opt.ftp_passwd)[0m
      | [0;32m  } 
[0m[1mftp.c:378:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |   else if (opt.ftp_passwd)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  379 |     passwd = opt.ftp_passwd;[0m
  380 |   else if (opt.passwd)[0m
      | [0;32m  } 
[0m[1mftp.c:380:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |   else if (opt.passwd)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  381 |     passwd = opt.passwd;[0m
  382 |   else[0m
      | [0;32m  } 
[0m[1mftp.c:382:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  383 |     passwd = NULL;[0m
      | [0;1;32m                  
[0m[1mftp.c:386:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |   if (opt.netrc && (!user || !passwd))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  387 |     search_netrc (u->host, (const char **) &user, (const char **) &passwd, 1, NULL);[0m
      | [0;1;32m                                                                                    
[0m[1mftp.c:389:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |   if (!user) user = "anonymous";[0m
      | [0;1;32m            ^                   
[0m      | [0;32m             {
[0m[1mftp.c:390:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |   if (!passwd) passwd = "-wget@";[0m
      | [0;1;32m              ^                  
[0m      | [0;32m               {
[0m[1mftp.c:436:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |       if (csock == E_HOST)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  437 |           return HOSTERR;[0m
  438 |       else if (csock < 0)[0m
      | [0;32m      } 
[0m[1mftp.c:438:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |       else if (csock < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  439 |           return (retryable_socket_connect_error (errno)[0m
  440 |                   ? CONERROR : CONIMPOSSIBLE);[0m
      | [0;1;32m                                              
[0m[1mftp.c:442:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |       if (cmd & LEAVE_PENDING)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  443 |         con->csock = csock;[0m
  444 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:444:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  445 |         con->csock = -1;[0m
      | [0;1;32m                        
[0m[1mftp.c:480:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |       if (err != FTPOK)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  481 |         return err;[0m
      | [0;1;32m                   
[0m[1mftp.c:487:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |       if (opt.server_response)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  488 |         logputs (LOG_ALWAYS, "\n");[0m
      | [0;1;32m                                   
[0m[1mftp.c:496:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  497 |         err = ftp_login (csock, user, passwd);[0m
      | [0;1;32m                                              
[0m[1mftp.c:503:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  503 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  504 |           logputs (LOG_NOTQUIET, _("\[0m
  505 | Error in server response, closing control connection.\n"));[0m
  506 |           fd_close (csock);[0m
  507 |           con->csock = -1;[0m
  508 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:510:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  510 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  511 |           logputs (LOG_NOTQUIET, _("Error in server greeting.\n"));[0m
  512 |           fd_close (csock);[0m
  513 |           con->csock = -1;[0m
  514 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:516:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  516 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  517 |           logputs (LOG_NOTQUIET,[0m
  518 |                    _("Write failed, closing control connection.\n"));[0m
  519 |           fd_close (csock);[0m
  520 |           con->csock = -1;[0m
  521 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:523:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  523 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  524 |           logputs (LOG_NOTQUIET, _("The server refuses login.\n"));[0m
  525 |           fd_close (csock);[0m
  526 |           con->csock = -1;[0m
  527 |           return FTPLOGREFUSED;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mftp.c:529:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  529 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  530 |           logputs (LOG_NOTQUIET, _("Login incorrect.\n"));[0m
  531 |           fd_close (csock);[0m
  532 |           con->csock = -1;[0m
  533 |           return FTPLOGINC;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mftp.c:535:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  535 |           if (!opt.server_response)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  536 |             logputs (LOG_VERBOSE, _("Logged in!\n"));[0m
  537 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp.c:535:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |           if (!opt.server_response)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  536 |             logputs (LOG_VERBOSE, _("Logged in!\n"));[0m
      | [0;1;32m                                                     
[0m[1mftp.c:539:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  539 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:582:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  583 |         logprintf (LOG_VERBOSE, "==> SYST ... ");[0m
      | [0;1;32m                                                 
[0m[1mftp.c:589:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  589 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  590 |           logputs (LOG_NOTQUIET, _("\[0m
  591 | Error in server response, closing control connection.\n"));[0m
  592 |           fd_close (csock);[0m
  593 |           con->csock = -1;[0m
  594 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:596:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  596 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  597 |           logputs (LOG_NOTQUIET,[0m
  598 |                    _("Server error, can't determine system type.\n"));[0m
  599 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp.c:602:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  602 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:604:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  604 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:606:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |       if (!opt.server_response && err != FTPSRVERR)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  607 |         logputs (LOG_VERBOSE, _("done.    "));[0m
      | [0;1;32m                                              
[0m[1mftp.c:623:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  623 |           DEBUGP (("\nVMS: I know it and I will use \"LIST\" as standard list command\n"));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  624 |           con->st |= LIST_AFTER_LIST_A_CHECK_DONE;[0m
  625 |           con->st |= AVOID_LIST_A;[0m
  626 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m./wget.h:129:22: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUGP'[0m
  129 | #define DEBUGP(args) do { IF_DEBUG { debug_logprintf args; } } while (0)[0m
      | [0;1;32m                     ^
[0m[1mftp.c:628:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  628 |           if (con->rsu == UST_MULTINET)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  629 |             {[0m
  630 |               DEBUGP (("\nUNIX MultiNet: I know it and I will use \"LIST\" "[0m
  631 |                        "as standard list command\n"));[0m
  632 |               con->st |= LIST_AFTER_LIST_A_CHECK_DONE;[0m
  633 |               con->st |= AVOID_LIST_A;[0m
  634 |             }[0m
  635 |           else if (con->rsu == UST_TYPE_L8)[0m
  636 |             {[0m
  637 |               DEBUGP (("\nUNIX TYPE L8: I know it and I will use \"LIST -a\" "[0m
  638 |                        "as standard list command\n"));[0m
  639 |               con->st |= LIST_AFTER_LIST_A_CHECK_DONE;[0m
  640 |               con->st |= AVOID_LIST;[0m
  641 |             }[0m
  642 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp.c:644:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  644 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:649:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  649 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  650 |         logprintf (LOG_VERBOSE, "==> PWD ... ");[0m
      | [0;1;32m                                                
[0m[1mftp.c:656:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  656 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  657 |           logputs (LOG_NOTQUIET, _("\[0m
  658 | Error in server response, closing control connection.\n"));[0m
  659 |           fd_close (csock);[0m
  660 |           con->csock = -1;[0m
  661 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:664:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  664 |           xfree (con->id);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  665 |           con->id = xstrdup ("/");[0m
  666 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m./utils.h:54:18: [0m[0;1;36mnote: [0mexpanded from macro 'xfree'[0m
   54 | #define xfree(p) do { free ((void *) (p)); p = NULL; } while (0)[0m
      | [0;1;32m                 ^
[0m[1mftp.c:669:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  669 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:671:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  671 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:709:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  709 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  710 |         logputs (LOG_VERBOSE, _("done.\n"));[0m
      | [0;1;32m                                            
[0m[1mftp.c:714:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  715 |         logprintf (LOG_VERBOSE, "==> TYPE %c ... ", type_char);[0m
      | [0;1;32m                                                               
[0m[1mftp.c:721:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  721 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  722 |           logputs (LOG_NOTQUIET, _("\[0m
  723 | Error in server response, closing control connection.\n"));[0m
  724 |           fd_close (csock);[0m
  725 |           con->csock = -1;[0m
  726 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:728:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  728 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  729 |           logputs (LOG_NOTQUIET,[0m
  730 |                    _("Write failed, closing control connection.\n"));[0m
  731 |           fd_close (csock);[0m
  732 |           con->csock = -1;[0m
  733 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:735:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  735 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  736 |           logprintf (LOG_NOTQUIET,[0m
  737 |                      _("Unknown type `%c', closing control connection.\n"),[0m
  738 |                      type_char);[0m
  739 |           fd_close (csock);[0m
  740 |           con->csock = -1;[0m
  741 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:744:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  744 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:746:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  746 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:748:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  749 |         logputs (LOG_VERBOSE, _("done.  "));[0m
      | [0;1;32m                                            
[0m[1mftp.c:754:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  754 |       if (!*u->dir)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  755 |         logputs (LOG_VERBOSE, _("==> CWD not needed.\n"));[0m
  756 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:807:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |               while (idlen > 0 && con->id[idlen - 1] == '/')[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  808 |                 --idlen;[0m
      | [0;1;32m                        
[0m[1mftp.c:811:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  811 |               if (len < sizeof (targetbuf))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  812 |                 p = ntarget = targetbuf;[0m
  813 |               else[0m
      | [0;32m              } 
[0m[1mftp.c:813:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  813 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  814 |                 p = ntarget = xmalloc (len + 1);[0m
      | [0;1;32m                                                
[0m[1mftp.c:816:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  816 |               memcpy (p, con->id, idlen);[0m
      | [0;1;32m              ^~~~~~
[0m[1mftp.c:816:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  816 |               memcpy (p, con->id, idlen);[0m
      | [0;1;32m              ^~~~~~
[0m[1mftp.c:819:15: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  819 |               strcpy (p, target);[0m
      | [0;1;32m              ^~~~~~
[0m[1mftp.c:819:15: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  819 |               strcpy (p, target);[0m
      | [0;1;32m              ^~~~~~
[0m[1mftp.c:928:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  928 |                     targ = con->id;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  929 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mftp.c:935:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  935 |                     targ = target;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  936 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mftp.c:942:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  942 |                     targ = "[]";[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  943 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mftp.c:946:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  946 |                     logprintf (LOG_ALWAYS, _("Logically impossible section reached in getftp()"));[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  947 |                     logprintf (LOG_ALWAYS, _("cwd_count: %d\ncwd_start: %d\ncwd_end: %d\n"),[0m
  948 |                                              cwd_count, cwd_start, cwd_end);[0m
  949 |                     abort ();[0m
      | [0;1;32m                            
[0m      | [0;32m                            ;} 
[0m[1mftp.c:952:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  952 |               if (!opt.server_response)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  953 |                 logprintf (LOG_VERBOSE, "==> CWD (%d) %s ... ", cwd_count,[0m
  954 |                            quotearg_style (escape_quoting_style, target));[0m
      | [0;1;32m                                                                          
[0m[1mftp.c:962:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  962 |                     logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  963 |                     logputs (LOG_NOTQUIET, _("\[0m
  964 | Error in server response, closing control connection.\n"));[0m
  965 |                     fd_close (csock);[0m
  966 |                     con->csock = -1;[0m
  967 |                     return err;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mftp.c:969:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  969 |                     logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  970 |                     logputs (LOG_NOTQUIET,[0m
  971 |                              _("Write failed, closing control connection.\n"));[0m
  972 |                     fd_close (csock);[0m
  973 |                     con->csock = -1;[0m
  974 |                     return err;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mftp.c:976:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  976 |                     logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  977 |                     logprintf (LOG_NOTQUIET, _("No such directory %s.\n\n"),[0m
  978 |                                quote (u->dir));[0m
  979 |                     fd_close (csock);[0m
  980 |                     con->csock = -1;[0m
  981 |                     return err;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mftp.c:983:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  983 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mftp.c:985:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  985 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mftp.c:988:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  988 |               if (!opt.server_response)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  989 |                 logputs (LOG_VERBOSE, _("done.\n"));[0m
      | [0;1;32m                                                    
[0m[1mftp.c:997:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  997 |   else /* do not CWD */[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  998 |     logputs (LOG_VERBOSE, _("==> CWD not required.\n"));[0m
      | [0;1;32m                                                        
[0m[1mftp.c:1004:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1004 |           if (!opt.server_response)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1005 |             logprintf (LOG_VERBOSE, "==> SIZE %s ... ",[0m
 1006 |                        quotearg_style (escape_quoting_style, u->file));[0m
      | [0;1;32m                                                                       
[0m[1mftp.c:1016:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1016 |           logputs (LOG_NOTQUIET, _("\[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1017 | Error in server response, closing control connection.\n"));[0m
 1018 |           fd_close (csock);[0m
 1019 |           con->csock = -1;[0m
 1020 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1022:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1022 |           got_expected_bytes = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1023 |           /* Everything is OK.  */[0m
 1024 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp.c:1026:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1026 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:1062:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1062 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1063 |               logputs (LOG_NOTQUIET, _("\[0m
 1064 | Error in server response, closing control connection.\n"));[0m
 1065 |               fd_close (csock);[0m
 1066 |               con->csock = -1;[0m
 1067 |               return err;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mftp.c:1069:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1069 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1070 |               logputs (LOG_NOTQUIET,[0m
 1071 |                        _("Write failed, closing control connection.\n"));[0m
 1072 |               fd_close (csock);[0m
 1073 |               con->csock = -1;[0m
 1074 |               return err;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mftp.c:1076:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1076 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1077 |               logputs (LOG_NOTQUIET, _("Cannot initiate PASV transfer.\n"));[0m
 1078 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mftp.c:1080:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1080 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1081 |               logputs (LOG_NOTQUIET, _("Cannot parse PASV response.\n"));[0m
 1082 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mftp.c:1084:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1084 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mftp.c:1086:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1086 |               abort ();[0m
      | [0;1;32m              ^       
[0m      | [0;32m              {       ;} 
[0m[1mftp.c:1105:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1105 |               if (!opt.server_response)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1106 |                 logputs (LOG_VERBOSE, _("done.    "));[0m
      | [0;1;32m                                                      
[0m[1mftp.c:1108:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1108 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1109 |             return err;[0m
      | [0;1;32m                       
[0m[1mftp.c:1125:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1125 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1126 |               logputs (LOG_NOTQUIET, _("\[0m
 1127 | Error in server response, closing control connection.\n"));[0m
 1128 |               fd_close (csock);[0m
 1129 |               con->csock = -1;[0m
 1130 |               fd_close (dtsock);[0m
 1131 |               fd_close (local_sock);[0m
 1132 |               return err;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mftp.c:1134:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1134 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1135 |               logputs (LOG_NOTQUIET,[0m
 1136 |                        _("Write failed, closing control connection.\n"));[0m
 1137 |               fd_close (csock);[0m
 1138 |               con->csock = -1;[0m
 1139 |               fd_close (dtsock);[0m
 1140 |               fd_close (local_sock);[0m
 1141 |               return err;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mftp.c:1143:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1143 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1144 |               logprintf (LOG_NOTQUIET, "socket: %s\n", strerror (errno));[0m
 1145 |               fd_close (csock);[0m
 1146 |               con->csock = -1;[0m
 1147 |               fd_close (dtsock);[0m
 1148 |               fd_close (local_sock);[0m
 1149 |               return err;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mftp.c:1151:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1151 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1152 |               logprintf (LOG_NOTQUIET, _("Bind error (%s).\n"),[0m
 1153 |                          strerror (errno));[0m
 1154 |               fd_close (dtsock);[0m
 1155 |               return err;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mftp.c:1157:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1157 |               logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1158 |               logputs (LOG_NOTQUIET, _("Invalid PORT.\n"));[0m
 1159 |               fd_close (csock);[0m
 1160 |               con->csock = -1;[0m
 1161 |               fd_close (dtsock);[0m
 1162 |               fd_close (local_sock);[0m
 1163 |               return err;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mftp.c:1165:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1165 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mftp.c:1167:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1167 |               abort ();[0m
      | [0;1;32m              ^       
[0m      | [0;32m              {       ;} 
[0m[1mftp.c:1169:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1169 |           if (!opt.server_response)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1170 |             logputs (LOG_VERBOSE, _("done.    "));[0m
      | [0;1;32m                                                  
[0m[1mftp.c:1177:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1178 |         logprintf (LOG_VERBOSE, "==> REST %s ... ",[0m
 1179 |                    number_to_static_string (restval));[0m
      | [0;1;32m                                                      
[0m[1mftp.c:1186:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1186 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1187 |           logputs (LOG_NOTQUIET, _("\[0m
 1188 | Error in server response, closing control connection.\n"));[0m
 1189 |           fd_close (csock);[0m
 1190 |           con->csock = -1;[0m
 1191 |           fd_close (dtsock);[0m
 1192 |           fd_close (local_sock);[0m
 1193 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1195:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1195 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1196 |           logputs (LOG_NOTQUIET,[0m
 1197 |                    _("Write failed, closing control connection.\n"));[0m
 1198 |           fd_close (csock);[0m
 1199 |           con->csock = -1;[0m
 1200 |           fd_close (dtsock);[0m
 1201 |           fd_close (local_sock);[0m
 1202 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1204:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1204 |           logputs (LOG_VERBOSE, _("\nREST failed, starting from scratch.\n"));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1205 |           rest_failed = true;[0m
 1206 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp.c:1208:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1208 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:1210:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1210 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:1212:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1212 |       if (err != FTPRESTFAIL && !opt.server_response)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1213 |         logputs (LOG_VERBOSE, _("done.    "));[0m
      | [0;1;32m                                              
[0m[1mftp.c:1272:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1272 |               if (restval)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1273 |                 logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m                                            
[0m[1mftp.c:1284:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1284 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1285 |           logputs (LOG_NOTQUIET, _("\[0m
 1286 | Error in server response, closing control connection.\n"));[0m
 1287 |           fd_close (csock);[0m
 1288 |           con->csock = -1;[0m
 1289 |           fd_close (dtsock);[0m
 1290 |           fd_close (local_sock);[0m
 1291 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1293:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1293 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1294 |           logputs (LOG_NOTQUIET,[0m
 1295 |                    _("Write failed, closing control connection.\n"));[0m
 1296 |           fd_close (csock);[0m
 1297 |           con->csock = -1;[0m
 1298 |           fd_close (dtsock);[0m
 1299 |           fd_close (local_sock);[0m
 1300 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1302:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1302 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1303 |           logprintf (LOG_NOTQUIET, _("No such file %s.\n\n"),[0m
 1304 |                      quote (u->file));[0m
 1305 |           fd_close (dtsock);[0m
 1306 |           fd_close (local_sock);[0m
 1307 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1309:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1309 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:1311:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1311 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:1314:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1314 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1315 |         logputs (LOG_VERBOSE, _("done.\n"));[0m
      | [0;1;32m                                            
[0m[1mftp.c:1317:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1317 |       if (! got_expected_bytes)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1318 |         expected_bytes = *last_expected_bytes;[0m
      | [0;1;32m                                              
[0m[1mftp.c:1323:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1323 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1324 |         logputs (LOG_VERBOSE, "==> LIST ... ");[0m
      | [0;1;32m                                               
[0m[1mftp.c:1334:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1334 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1335 |           logputs (LOG_NOTQUIET, _("\[0m
 1336 | Error in server response, closing control connection.\n"));[0m
 1337 |           fd_close (csock);[0m
 1338 |           con->csock = -1;[0m
 1339 |           fd_close (dtsock);[0m
 1340 |           fd_close (local_sock);[0m
 1341 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1343:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1343 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1344 |           logputs (LOG_NOTQUIET,[0m
 1345 |                    _("Write failed, closing control connection.\n"));[0m
 1346 |           fd_close (csock);[0m
 1347 |           con->csock = -1;[0m
 1348 |           fd_close (dtsock);[0m
 1349 |           fd_close (local_sock);[0m
 1350 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1352:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1352 |           logputs (LOG_VERBOSE, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1353 |           logprintf (LOG_NOTQUIET, _("No such file or directory %s.\n\n"),[0m
 1354 |                      quote ("."));[0m
 1355 |           fd_close (dtsock);[0m
 1356 |           fd_close (local_sock);[0m
 1357 |           return err;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mftp.c:1359:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1359 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:1361:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1361 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:1363:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1363 |       if (!opt.server_response)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1364 |         logputs (LOG_VERBOSE, _("done.\n"));[0m
      | [0;1;32m                                            
[0m[1mftp.c:1366:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1366 |       if (! got_expected_bytes)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1367 |         expected_bytes = *last_expected_bytes;[0m
      | [0;1;32m                                              
[0m[1mftp.c:1370:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1370 |   if (!(cmd & (DO_LIST | DO_RETR)) || (opt.spider && !(cmd & DO_LIST)))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1371 |     return RETRFINISHED;[0m
      | [0;1;32m                        
[0m[1mftp.c:1420:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1420 |       if (opt.backups)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1421 |         rotate_backups (con->target);[0m
      | [0;1;32m                                     
[0m[1mftp.c:1531:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1531 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1532 |     fp = output_stream;[0m
      | [0;1;32m                       
[0m[1mftp.c:1540:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1540 |   else if (expected_bytes)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1541 |     print_length (expected_bytes, restval, false);[0m
      | [0;1;32m                                                  
[0m[1mftp.c:1577:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1577 |   if (restval && rest_failed)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1578 |     flags |= rb_skip_startpos;[0m
      | [0;1;32m                              
[0m[1mftp.c:1589:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1589 |   if (opt.enable_xattr)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1590 |     set_file_metadata (u, NULL, fp);[0m
      | [0;1;32m                                    
[0m[1mftp.c:1595:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1595 |   if (!output_stream || con->cmd & DO_LIST)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1596 |     fclose (fp);[0m
      | [0;1;32m                
[0m[1mftp.c:1606:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1606 |       if (res == -2)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1607 |         return FWRITEERR;[0m
 1608 |       else if (res == -3)[0m
      | [0;32m      } 
[0m[1mftp.c:1608:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1608 |       else if (res == -3)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1609 |         return WARC_TMP_FWRITEERR;[0m
      | [0;1;32m                                  
[0m[1mftp.c:1615:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1615 |       if (opt.server_response)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1616 |         logputs (LOG_ALWAYS, "\n");[0m
      | [0;1;32m                                   
[0m[1mftp.c:1626:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1626 |       if (res != -1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1627 |         logprintf (LOG_NOTQUIET, "%s (%s) - ", tms, tmrate);[0m
      | [0;1;32m                                                            
[0m[1mftp.c:1644:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1644 |       if (res != -1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1645 |         logprintf (LOG_NOTQUIET, "%s (%s) - ", tms, tmrate);[0m
      | [0;1;32m                                                            
[0m[1mftp.c:1698:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1698 |       if (!fp)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1699 |         logprintf (LOG_ALWAYS, "%s: %s\n", con->target, strerror (errno));[0m
 1700 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:1710:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1710 |               while (len > 0 && (line[len - 1] == '\n' || line[len - 1] == '\r'))[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m 1711 |                 line[--len] = '\0';[0m
      | [0;1;32m                                   
[0m[1mftp.c:1816:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1816 |   if (fp && (!output_stream || con->cmd & DO_LIST))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1817 |     fclose (fp);[0m
      | [0;1;32m                
[0m[1mftp.c:1854:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1854 |       if (!opt.output_document)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1855 |         locf = con->target;[0m
 1856 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:1856:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1856 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1857 |         locf = opt.output_document;[0m
      | [0;1;32m                                   
[0m[1mftp.c:1880:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1880 |   if (con->st & ON_YOUR_OWN)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1881 |     con->st = ON_YOUR_OWN;[0m
      | [0;1;32m                          
[0m[1mftp.c:1895:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1895 |           if (con->csock != -1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1896 |             con->cmd &= ~ (DO_LOGIN | DO_CWD);[0m
 1897 |           else[0m
      | [0;32m          } 
[0m[1mftp.c:1897:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1897 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1898 |             con->cmd |= (DO_LOGIN | DO_CWD);[0m
      | [0;1;32m                                            
[0m[1mftp.c:1902:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1902 |           if (con->csock != -1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1903 |             con->cmd &= ~DO_LOGIN;[0m
 1904 |           else[0m
      | [0;32m          } 
[0m[1mftp.c:1904:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1904 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1905 |             con->cmd |= DO_LOGIN;[0m
      | [0;1;32m                                 
[0m[1mftp.c:1906:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1906 |           if (con->st & DONE_CWD)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1907 |             con->cmd &= ~DO_CWD;[0m
 1908 |           else[0m
      | [0;32m          } 
[0m[1mftp.c:1908:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1908 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1909 |             con->cmd |= DO_CWD;[0m
      | [0;1;32m                               
[0m[1mftp.c:1917:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1917 |           if (warc_tmp == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1918 |             return WARC_TMP_FOPENERR;[0m
      | [0;1;32m                                     
[0m[1mftp.c:1928:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1928 |       if (con->cmd & DO_LIST)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1929 |         restval = 0;[0m
 1930 |       else if (force_full_retrieve)[0m
      | [0;32m      } 
[0m[1mftp.c:1930:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1930 |       else if (force_full_retrieve)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1931 |         restval = 0;[0m
 1932 |       else if (opt.start_pos >= 0)[0m
      | [0;32m      } 
[0m[1mftp.c:1932:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1932 |       else if (opt.start_pos >= 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1933 |         restval = opt.start_pos;[0m
 1934 |       else if (opt.always_rest[0m
      | [0;32m      } 
[0m[1mftp.c:1936:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1936 |           && S_ISREG (st.st_mode))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1937 |         /* When -c is used, continue from on-disk size.  (Can't use[0m
 1938 |            hstat.len even if count>1 because we don't want a failed[0m
 1939 |            first attempt to clobber existing data.)  */[0m
 1940 |         restval = st.st_size;[0m
 1941 |       else if (count > 1)[0m
      | [0;32m      } 
[0m[1mftp.c:1941:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1941 |       else if (count > 1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1942 |         restval = qtyread;          /* start where the previous run left off */[0m
 1943 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:1943:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1943 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1944 |         restval = 0;[0m
      | [0;1;32m                    
[0m[1mftp.c:1954:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1954 |           if (count > 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1955 |             sprintf (tmp, _("(try:%2d)"), count);[0m
      | [0;1;32m                                                 
[0m[1mftp.c:1955:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1955 |             sprintf (tmp, _("(try:%2d)"), count);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mftp.c:1955:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1955 |             sprintf (tmp, _("(try:%2d)"), count);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mftp.c:1964:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1964 |       if (f && f->type != FT_SYMLINK)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1965 |         len = f->size;[0m
 1966 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:1966:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1966 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1967 |         len = 0;[0m
      | [0;1;32m                
[0m[1mftp.c:1974:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1974 |       if (con->csock == -1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1975 |         con->st &= ~DONE_CWD;[0m
 1976 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:1976:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1976 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1977 |         con->st |= DONE_CWD;[0m
      | [0;1;32m                            
[0m[1mftp.c:1997:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1997 |           return err;[0m
      | [0;1;32m          ^         
[0m      | [0;32m          {         ;} 
[0m[1mftp.c:2004:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2004 |           if (err == FOPEN_EXCL_ERR)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2005 |             {[0m
 2006 |               /* Re-determine the file name. */[0m
 2007 |               xfree (con->target);[0m
 2008 |               con->target = url_file_name (u, NULL);[0m
 2009 |               locf = con->target;[0m
 2010 |             }[0m
 2011 |           continue;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mftp.c:2015:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2015 |           if (!f || qtyread != f->size)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2016 |             {[0m
 2017 |               printwhat (count, opt.ntry);[0m
 2018 |               continue;[0m
 2019 |             }[0m
 2020 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp.c:2023:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2023 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:2026:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2026 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mftp.c:2029:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2029 |       if (!opt.spider)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2030 |         tmrate = retr_rate (qtyread - restval, con->dltime);[0m
      | [0;1;32m                                                            
[0m[1mftp.c:2072:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2072 |           if (! warc_res)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2073 |             return WARC_ERR;[0m
      | [0;1;32m                            
[0m[1mftp.c:2109:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2109 |               if (unlink (locf))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2110 |                 logprintf (LOG_NOTQUIET, "unlink: %s\n", strerror (errno));[0m
      | [0;1;32m                                                                           
[0m[1mftp.c:2115:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2115 |       if (orig_lp)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2116 |         con->cmd |= LEAVE_PENDING;[0m
 2117 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:2117:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2117 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2118 |         con->cmd &= ~LEAVE_PENDING;[0m
      | [0;1;32m                                   
[0m[1mftp.c:2120:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2120 |       if (local_file)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2121 |         *local_file = xstrdup (locf);[0m
      | [0;1;32m                                     
[0m[1mftp.c:2138:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2138 |   if (warc_tmp != NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2139 |     fclose (warc_tmp);[0m
      | [0;1;32m                      
[0m[1mftp.c:2179:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2179 |           if (unlink (lf))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2180 |             logprintf (LOG_NOTQUIET, "unlink: %s\n", strerror (errno));[0m
 2181 |           else[0m
      | [0;32m          } 
[0m[1mftp.c:2181:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2181 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2182 |             logprintf (LOG_VERBOSE, _("Removed %s.\n"), quote (lf));[0m
      | [0;1;32m                                                                    
[0m[1mftp.c:2185:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2185 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2186 |     *f = NULL;[0m
      | [0;1;32m              
[0m[1mftp.c:2231:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2231 |   if (!(con->st & DONE_CWD))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2232 |     con->cmd |= DO_CWD;[0m
 2233 |   else[0m
      | [0;32m  } 
[0m[1mftp.c:2233:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2233 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2234 |     con->cmd &= ~DO_CWD;[0m
      | [0;1;32m                        
[0m[1mftp.c:2237:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2237 |   if (con->csock < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2238 |     con->cmd |= DO_LOGIN;[0m
 2239 |   else[0m
      | [0;32m  } 
[0m[1mftp.c:2239:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2239 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2240 |     con->cmd &= ~DO_LOGIN;[0m
      | [0;1;32m                          
[0m[1mftp.c:2319:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2319 |           if (!opt.retr_symlinks)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mftp.c:2322:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2322 |               if (!f->linkto)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2323 |                 logputs (LOG_NOTQUIET,[0m
 2324 |                          _("Invalid name of the symlink, skipping.\n"));[0m
 2325 |               else[0m
      | [0;32m              } 
[0m[1mftp.c:2340:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2340 |                           if (len < sizeof (buf))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2341 |                             link_target = buf;[0m
 2342 |                           else[0m
      | [0;32m                          } 
[0m[1mftp.c:2342:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2342 |                           else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2343 |                             link_target = xmalloc (len);[0m
      | [0;1;32m                                                        
[0m[1mftp.c:2348:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2348 |                           if (link_target != buf)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2349 |                             xfree (link_target);[0m
      | [0;1;32m                                                
[0m[1mftp.c:2366:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2366 |                   if (symlink (f->linkto, con->target) == -1)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2367 |                     logprintf (LOG_NOTQUIET, "symlink: %s\n", strerror (errno));[0m
      | [0;1;32m                                                                                
[0m[1mftp.c:2386:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2386 |           if (!opt.recursive)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2387 |             logprintf (LOG_NOTQUIET, _("Skipping directory %s.\n"),[0m
 2388 |                        quote (f->name));[0m
 2389 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp.c:2386:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2386 |           if (!opt.recursive)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2387 |             logprintf (LOG_NOTQUIET, _("Skipping directory %s.\n"),[0m
 2388 |                        quote (f->name));[0m
      | [0;1;32m                                        
[0m[1mftp.c:2392:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2392 |           if (dlthis)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2393 |             {[0m
 2394 |               err = ftp_loop_internal (u, original_url, f, con, NULL,[0m
 2395 |                                        force_full_retrieve);[0m
 2396 |             }[0m
 2397 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mftp.c:2402:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2402 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mftp.c:2422:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2422 |               if (chmod (actual_target, f->perms))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2423 |                 logprintf (LOG_NOTQUIET,[0m
 2424 |                            _("Failed to set permissions for %s.\n"),[0m
 2425 |                            actual_target);[0m
      | [0;1;32m                                          
[0m[1mftp.c:2427:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2427 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2428 |             DEBUGP (("Unrecognized permissions for %s.\n", actual_target));[0m
      | [0;1;32m                                                                           
[0m[1mftp.c:2444:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2444 |           else if (f->tstamp == -1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2445 |             logprintf (LOG_NOTQUIET, _("%s: corrupt time-stamp.\n"),[0m
 2446 |                        actual_target);[0m
      | [0;1;32m                                      
[0m[1mftp.c:2458:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2458 |           || err == WARC_TMP_FWRITEERR)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2459 |         break;[0m
      | [0;1;32m              
[0m[1mftp.c:2466:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2466 |       !(opt.reclevel != INFINITE_RECURSION && depth >= opt.reclevel))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 2467 |     err = ftp_retrieve_dirs (u, original_url, orig, con);[0m
 2468 |   else if (opt.recursive)[0m
      | [0;32m  } 
[0m[1mftp.c:2468:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2468 |   else if (opt.recursive)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2469 |     DEBUGP ((_("Will not retrieve dirs since depth is %d (max %d).\n"),[0m
 2470 |              depth, opt.reclevel));[0m
      | [0;1;32m                                   
[0m[1mftp.c:2492:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2492 |       if (opt.quota && total_downloaded_bytes > opt.quota)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2493 |         break;[0m
      | [0;1;32m              
[0m[1mftp.c:2494:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2494 |       if (f->type != FT_DIRECTORY)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2495 |         continue;[0m
      | [0;1;32m                 
[0m[1mftp.c:2503:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2503 |           if (container == buf)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2504 |             container = xmalloc (size);[0m
 2505 |           else[0m
      | [0;32m          } 
[0m[1mftp.c:2505:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2505 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2506 |             container = xrealloc (container, size);[0m
      | [0;1;32m                                                   
[0m[1mftp.c:2514:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2514 |           || (*odir == '/' && *(odir + 1) == '\0'))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2515 |         /* If ODIR is empty or just "/", simply append f->name to[0m
 2516 |            ODIR.  (In the former case, to preserve u->dir being[0m
 2517 |            relative; in the latter case, to avoid double slash.)  */[0m
 2518 |         sprintf (newdir, "%s%s", odir, f->name);[0m
 2519 |       else[0m
      | [0;32m      } 
[0m[1mftp.c:2518:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2518 |         sprintf (newdir, "%s%s", odir, f->name);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp.c:2518:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2518 |         sprintf (newdir, "%s%s", odir, f->name);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp.c:2519:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2519 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2520 |         /* Else, use a separator. */[0m
 2521 |         sprintf (newdir, "%s/%s", odir, f->name);[0m
      | [0;1;32m                                                 
[0m[1mftp.c:2521:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2521 |         sprintf (newdir, "%s/%s", odir, f->name);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp.c:2521:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2521 |         sprintf (newdir, "%s/%s", odir, f->name);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mftp.c:2546:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2546 |   if (container != buf)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2547 |     xfree (container);[0m
      | [0;1;32m                      
[0m[1mftp.c:2549:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2549 |   if (opt.quota && total_downloaded_bytes > opt.quota)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2550 |     return QUOTEXC;[0m
 2551 |   else[0m
      | [0;32m  } 
[0m[1mftp.c:2551:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2551 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2552 |     return RETROK;[0m
      | [0;1;32m                  
[0m[1mftp.c:2559:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2559 |   if (*s == '/')[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2560 |     return true;[0m
      | [0;1;32m                
[0m[1mftp.c:2562:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2562 |   if (strstr (s, "../") != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2563 |     return true;[0m
      | [0;1;32m                
[0m[1mftp.c:2585:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2585 |       if (strcmp (f_name, cur->name) == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2586 |           return true;[0m
      | [0;1;32m                      
[0m[1mftp.c:2610:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2610 |   if (res != RETROK)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2611 |     return res;[0m
      | [0;1;32m               
[0m[1mftp.c:2666:26: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2666 |           if ((unsigned) snprintf(buf, sizeof(buf), "%s%s%s",[0m
      | [0;1;32m                         ^~~~~~~~
[0m[1mftp.c:2666:26: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2666 |           if ((unsigned) snprintf(buf, sizeof(buf), "%s%s%s",[0m
      | [0;1;32m                         ^~~~~~~~
[0m[1mftp.c:2677:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2677 |               if (url != buf)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2678 |                 xfree(url);[0m
      | [0;1;32m                           
[0m[1mftp.c:2682:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2682 |             if (url != buf)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2683 |               xfree(url);[0m
      | [0;1;32m                         
[0m[1mftp.c:2752:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2752 |   if (opt.quota && total_downloaded_bytes > opt.quota)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2753 |     return QUOTEXC;[0m
 2754 |   else[0m
      | [0;32m  } 
[0m[1mftp.c:2754:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2754 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2755 |     return res;[0m
      | [0;1;32m               
[0m[1mftp.c:2770:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2770 |   xzero (con);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mftp.c:2770:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2770 |   xzero (con);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mftp.c:2802:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2802 |                       if (stat (filename, &st) == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2803 |                         sz = st.st_size;[0m
 2804 |                       else[0m
      | [0;32m                      } 
[0m[1mftp.c:2804:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2804 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2805 |                         sz = -1;[0m
      | [0;1;32m                                
[0m[1mftp.c:2810:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2810 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2811 |                     logprintf (LOG_NOTQUIET,[0m
 2812 |                                _("Wrote HTML-ized index to %s.\n"),[0m
 2813 |                                quote (filename));[0m
      | [0;1;32m                                                 
[0m[1mftp.c:2830:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2830 |           if (!file_part)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2831 |             file_part = u->path;[0m
      | [0;1;32m                                
[0m[1mftp.c:2847:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2847 |   if (res == FTPOK)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2848 |     res = RETROK;[0m
      | [0;1;32m                 
[0m[1mftp.c:2849:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2849 |   if (res == RETROK)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2850 |     *dt |= RETROKF;[0m
      | [0;1;32m                   
[0m[1mftp.c:2852:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2852 |   if (con.csock != -1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2853 |     fd_close (con.csock);[0m
      | [0;1;32m                         
[0m[1mftp.c:2872:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2872 |   if (next)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 2873 |     next->prev = prev;[0m
      | [0;1;32m                      
[0m[1mftp.c:2874:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2874 |   if (prev)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 2875 |     prev->next = next;[0m
 2876 |   else[0m
      | [0;32m  } 
[0m[1mftp.c:2876:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2876 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2877 |     *start = next;[0m
      | [0;1;32m                  
[0m268 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[163/164][190.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpbe48avd6.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/url.c
[1murl.c:192:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |           if (!h[1] || !h[2] || !(c_isxdigit (h[1]) && c_isxdigit (h[2])))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  193 |             goto copychar;[0m
      | [0;1;32m                          
[0m[1murl.c:195:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |           if (urlchr_test(c, mask))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  196 |             goto copychar;[0m
      | [0;1;32m                          
[0m[1murl.c:199:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |           if (c == '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  200 |             goto copychar;[0m
      | [0;1;32m                          
[0m[1murl.c:248:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |   for (p1 = s; *p1; p1++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  249 |     if (urlchr_test (*p1, mask))[0m
  250 |       addition += 2;            /* Two more characters (hex digits) */[0m
      | [0;1;32m                                                                      
[0m[1murl.c:249:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |     if (urlchr_test (*p1, mask))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  250 |       addition += 2;            /* Two more characters (hex digits) */[0m
      | [0;1;32m                                                                      
[0m[1murl.c:252:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |   if (!addition)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  253 |     return allow_passthrough ? (char *)s : xstrdup (s);[0m
      | [0;1;32m                                                       
[0m[1murl.c:270:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  271 |         *p2++ = *p1++;[0m
      | [0;1;32m                      
[0m[1murl.c:317:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |       if (c_isxdigit (*(p + 1)) && c_isxdigit (*(p + 2)))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  318 |         return false;[0m
  319 |       else[0m
      | [0;32m      } 
[0m[1murl.c:319:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  320 |         /* Garbled %.. sequence: encode `%'. */[0m
  321 |         return true;[0m
      | [0;1;32m                    
[0m[1murl.c:323:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |   else if (URL_UNSAFE_CHAR (*p) && !URL_RESERVED_CHAR (*p))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  324 |     return true;[0m
  325 |   else[0m
      | [0;32m  } 
[0m[1murl.c:325:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  326 |     return false;[0m
      | [0;1;32m                 
[0m[1murl.c:418:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   for (p1 = s; *p1; p1++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  419 |     if (char_needs_escaping (p1))[0m
  420 |       ++encode_count;[0m
      | [0;1;32m                     
[0m[1murl.c:419:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |     if (char_needs_escaping (p1))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  420 |       ++encode_count;[0m
      | [0;1;32m                     
[0m[1murl.c:422:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |   if (!encode_count)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  423 |     /* The string is good as it is. */[0m
  424 |     return (char *) s;          /* C const model sucks. */[0m
      | [0;1;32m                                                          
[0m[1murl.c:436:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |   while (*p1)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  437 |     if (char_needs_escaping (p1))[0m
  438 |       {[0m
  439 |         unsigned char c = *p1++;[0m
  440 |         *p2++ = '%';[0m
  441 |         *p2++ = XNUM_TO_DIGIT (c >> 4);[0m
  442 |         *p2++ = XNUM_TO_DIGIT (c & 0xf);[0m
  443 |       }[0m
  444 |     else[0m
  445 |       *p2++ = *p1++;[0m
      | [0;1;32m                    
[0m[1murl.c:444:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  445 |       *p2++ = *p1++;[0m
      | [0;1;32m                    
[0m[1murl.c:460:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |   for (i = 0; supported_schemes[i].leading_string; i++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  461 |     if (0 == c_strncasecmp (url, supported_schemes[i].leading_string,[0m
  462 |                           strlen (supported_schemes[i].leading_string)))[0m
  463 |       {[0m
  464 |         if (!(supported_schemes[i].flags & scm_disabled))[0m
  465 |           return (enum url_scheme) i;[0m
  466 |         else[0m
  467 |           return SCHEME_INVALID;[0m
  468 |       }[0m
      | [0;1;32m       
[0m[1murl.c:464:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |         if (!(supported_schemes[i].flags & scm_disabled))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  465 |           return (enum url_scheme) i;[0m
  466 |         else[0m
      | [0;32m        } 
[0m[1murl.c:466:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  467 |           return SCHEME_INVALID;[0m
      | [0;1;32m                                
[0m[1murl.c:485:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  485 |   if (!*p || !SCHEME_CHAR (*p))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  486 |     return false;[0m
      | [0;1;32m                 
[0m[1murl.c:489:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  489 |   while (*p && SCHEME_CHAR (*p))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  490 |     ++p;[0m
      | [0;1;32m        
[0m[1murl.c:532:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |   if (!p || *p != '@')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  533 |     return url;[0m
      | [0;1;32m               
[0m[1murl.c:546:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |   if (beg == end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  547 |     return false;               /* empty user name */[0m
      | [0;1;32m                                                     
[0m[1murl.c:550:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |   if (colon == beg)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  551 |     return false;               /* again empty user name */[0m
      | [0;1;32m                                                           
[0m[1murl.c:589:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |   if (url_scheme (url) != SCHEME_INVALID)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  590 |     return NULL;[0m
      | [0;1;32m                
[0m[1murl.c:595:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |   if (p == url)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  596 |     return NULL;[0m
      | [0;1;32m                
[0m[1murl.c:601:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |   if (p && p[0] == ':' && p[1] == '/' && p[2] == '/')[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  602 |     return NULL;[0m
      | [0;1;32m                
[0m[1murl.c:609:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |       if (digits && (p[1 + digits] == '/' || p[1 + digits] == '\0'))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  610 |         goto http;[0m
      | [0;1;32m                  
[0m[1murl.c:613:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |       if ((ret = aprintf ("ftp://%s", url)) != NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  614 |         ret[6 + (p - url)] = '/';[0m
      | [0;1;32m                                 
[0m[1murl.c:635:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  635 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  636 |     p = strchr (s, '\0');[0m
      | [0;1;32m                         
[0m[1murl.c:647:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |   for (; *str; str++)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  648 |     if (c_isupper (*str))[0m
  649 |       {[0m
  650 |         changed = true;[0m
  651 |         *str = c_tolower (*str);[0m
  652 |       }[0m
      | [0;1;32m       
[0m[1murl.c:663:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  663 |   if (flags & scm_has_params)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  664 |     *p++ = ';';[0m
      | [0;1;32m               
[0m[1murl.c:665:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |   if (flags & scm_has_query)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  666 |     *p++ = '?';[0m
      | [0;1;32m               
[0m[1murl.c:667:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  667 |   if (flags & scm_has_fragment)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  668 |     *p++ = '#';[0m
      | [0;1;32m               
[0m[1murl.c:733:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |       if (!url_has_scheme (url))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  734 |         error_code = PE_MISSING_SCHEME;[0m
  735 |       else if (!c_strncasecmp (url, "https:", 6))[0m
      | [0;32m      } 
[0m[1murl.c:735:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |       else if (!c_strncasecmp (url, "https:", 6))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  736 |         error_code = PE_UNSUPPORTED_SCHEME_HTTPS;[0m
  737 |       else if (!c_strncasecmp (url, "ftps:", 5))[0m
      | [0;32m      } 
[0m[1murl.c:737:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  737 |       else if (!c_strncasecmp (url, "ftps:", 5))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  738 |         error_code = PE_UNSUPPORTED_SCHEME_FTPS;[0m
  739 |       else[0m
      | [0;32m      } 
[0m[1murl.c:739:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  740 |         error_code = PE_UNSUPPORTED_SCHEME;[0m
      | [0;1;32m                                           
[0m[1murl.c:751:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |       if (!iri->utf8_encode)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  752 |         new_url = NULL;[0m
  753 |       else[0m
      | [0;32m      } 
[0m[1murl.c:758:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |           if (url_encoded != new_url)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  759 |             xfree (new_url);[0m
      | [0;1;32m                            
[0m[1murl.c:764:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  764 |   if (percent_encode)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  765 |     url_encoded = reencode_escapes (url);[0m
      | [0;1;32m                                         
[0m[1murl.c:861:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |       if (port_b != port_e)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m[1murl.c:894:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |   if (supported_schemes[scheme].flags & scm_has_params)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  895 |     GET_URL_PART (';', params);[0m
      | [0;1;32m                               
[0m[1murl.c:896:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |   if (supported_schemes[scheme].flags & scm_has_query)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  897 |     GET_URL_PART ('?', query);[0m
      | [0;1;32m                              
[0m[1murl.c:898:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  898 |   if (supported_schemes[scheme].flags & scm_has_fragment)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  899 |     GET_URL_PART ('#', fragment);[0m
      | [0;1;32m                                 
[0m[1murl.c:962:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  962 |   if (params_b)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  963 |     u->params = strdupdelim (params_b, params_e);[0m
      | [0;1;32m                                                 
[0m[1murl.c:964:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |   if (query_b)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  965 |     u->query = strdupdelim (query_b, query_e);[0m
      | [0;1;32m                                              
[0m[1murl.c:966:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  966 |   if (fragment_b)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  967 |     u->fragment = strdupdelim (fragment_b, fragment_e);[0m
      | [0;1;32m                                                       
[0m[1murl.c:976:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  976 |       if (url_encoded != url)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  977 |         xfree (url_encoded);[0m
      | [0;1;32m                            
[0m[1murl.c:981:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  981 |       if (url_encoded == url)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  982 |         u->url = xstrdup (url);[0m
  983 |       else[0m
      | [0;32m      } 
[0m[1murl.c:983:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  984 |         u->url = (char *) url_encoded;[0m
      | [0;1;32m                                      
[0m[1murl.c:991:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  991 |   if (url_encoded && url_encoded != url)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  992 |     xfree (url_encoded);[0m
      | [0;1;32m                        
[0m[1murl.c:996:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  996 |   if (error)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  997 |     *error = error_code;[0m
      | [0;1;32m                        
[0m[1murl.c:1009:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1009 |   if (error_code >= 0 && error_code < (int) countof (parse_errors))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1010 |     return _(parse_errors[error_code]);[0m
      | [0;1;32m                                       
[0m[1murl.c:1088:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1088 |   FROB (path, '/');[0m
      | [0;1;32m  ^
[0m[1murl.c:1083:5: [0m[0;1;36mnote: [0mexpanded from macro 'FROB'[0m
 1083 |     memcpy (where, f_el, l);                    \[0m
      | [0;1;32m    ^~~~~~
[0m[1murl.c:1088:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1088 |   FROB (path, '/');[0m
      | [0;1;32m  ^
[0m[1murl.c:1083:5: [0m[0;1;36mnote: [0mexpanded from macro 'FROB'[0m
 1083 |     memcpy (where, f_el, l);                    \[0m
      | [0;1;32m    ^~~~~~
[0m[1murl.c:1089:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1089 |   FROB (params, ';');[0m
      | [0;1;32m  ^
[0m[1murl.c:1083:5: [0m[0;1;36mnote: [0mexpanded from macro 'FROB'[0m
 1083 |     memcpy (where, f_el, l);                    \[0m
      | [0;1;32m    ^~~~~~
[0m[1murl.c:1089:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1089 |   FROB (params, ';');[0m
      | [0;1;32m  ^
[0m[1murl.c:1083:5: [0m[0;1;36mnote: [0mexpanded from macro 'FROB'[0m
 1083 |     memcpy (where, f_el, l);                    \[0m
      | [0;1;32m    ^~~~~~
[0m[1murl.c:1090:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1090 |   FROB (query, '?');[0m
      | [0;1;32m  ^
[0m[1murl.c:1083:5: [0m[0;1;36mnote: [0mexpanded from macro 'FROB'[0m
 1083 |     memcpy (where, f_el, l);                    \[0m
      | [0;1;32m    ^~~~~~
[0m[1murl.c:1090:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1090 |   FROB (query, '?');[0m
      | [0;1;32m  ^
[0m[1murl.c:1083:5: [0m[0;1;36mnote: [0mexpanded from macro 'FROB'[0m
 1083 |     memcpy (where, f_el, l);                    \[0m
      | [0;1;32m    ^~~~~~
[0m[1murl.c:1129:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1129 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1130 |         *t = *h;[0m
      | [0;1;32m                
[0m[1murl.c:1142:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1142 |   if (newdir == dir)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1143 |     return (char *)dir;[0m
      | [0;1;32m                       
[0m[1murl.c:1168:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1168 |   if (!*edir)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1169 |     newpath = xstrdup (efile);[0m
 1170 |   else[0m
      | [0;32m  } 
[0m[1murl.c:1177:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1177 |       memcpy (p, edir, dirlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:1177:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1177 |       memcpy (p, edir, dirlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:1180:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1180 |       memcpy (p, efile, filelen);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:1180:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1180 |       memcpy (p, efile, filelen);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:1187:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1187 |   if (edir != u->dir)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1188 |     xfree (edir);[0m
      | [0;1;32m                 
[0m[1murl.c:1189:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1189 |   if (efile != u->file)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1190 |     xfree (efile);[0m
      | [0;1;32m                  
[0m[1murl.c:1253:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1253 |   if ((p == path) && (*p != '/'))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1254 |     return 0;[0m
      | [0;1;32m             
[0m[1murl.c:1280:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1280 |           if (unlink (t))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1281 |             logprintf (LOG_NOTQUIET, "Failed to unlink %s (%d): %s\n",[0m
 1282 |                        t, errno, strerror(errno));[0m
      | [0;1;32m                                                  
[0m[1murl.c:1286:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1286 |   if (res != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1287 |     logprintf (LOG_NOTQUIET, "%s: %s\n", t, strerror (errno));[0m
      | [0;1;32m                                                              
[0m[1murl.c:1359:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1359 |       memcpy (TAIL (dest), str, l);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:1359:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1359 |       memcpy (TAIL (dest), str, l);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:1468:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1468 |   if (!dest)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1469 |     return;[0m
      | [0;1;32m           
[0m[1murl.c:1471:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1471 |   if (opt.restrict_files_os == restrict_unix)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1472 |     mask = filechr_not_unix;[0m
 1473 |   else if (opt.restrict_files_os == restrict_vms)[0m
      | [0;32m  } 
[0m[1murl.c:1473:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1473 |   else if (opt.restrict_files_os == restrict_vms)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1474 |     mask = filechr_not_vms;[0m
 1475 |   else[0m
      | [0;32m  } 
[0m[1murl.c:1475:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1475 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1476 |     mask = filechr_not_windows;[0m
      | [0;1;32m                               
[0m[1murl.c:1478:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1478 |   if (opt.restrict_files_ctrl)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1479 |     mask |= filechr_control;[0m
      | [0;1;32m                            
[0m[1murl.c:1485:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1485 |                 if (len < sizeof (buf))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1486 |         unescaped = buf;[0m
 1487 |       else[0m
      | [0;32m      } 
[0m[1murl.c:1487:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1487 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1488 |         unescaped = xmalloc(len + 1);[0m
      | [0;1;32m                                     
[0m[1murl.c:1490:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1490 |                 memcpy(unescaped, b, len);[0m
      | [0;1;32m                ^~~~~~
[0m[1murl.c:1490:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1490 |                 memcpy(unescaped, b, len);[0m
      | [0;1;32m                ^~~~~~
[0m[1murl.c:1509:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1509 |   for (p = b; p < e; p++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1510 |     if (FILE_CHAR_TEST (*p, mask))[0m
 1511 |       ++quoted;[0m
      | [0;1;32m               
[0m[1murl.c:1510:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1510 |     if (FILE_CHAR_TEST (*p, mask))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1511 |       ++quoted;[0m
      | [0;1;32m               
[0m[1murl.c:1533:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1533 |   if (!dest->base)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1534 |     return;[0m
      | [0;1;32m           
[0m[1murl.c:1540:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1540 |       memcpy (TAIL (dest), b, outlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:1540:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1540 |       memcpy (TAIL (dest), b, outlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:1551:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1551 |               if (i == outlen)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1552 |                 break;[0m
      | [0;1;32m                      
[0m[1murl.c:1556:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1556 |           else if (i + 3 > outlen)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1557 |             break;[0m
 1558 |           else[0m
      | [0;32m          } 
[0m[1murl.c:1577:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1577 |           if (opt.restrict_files_case == restrict_lowercase)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1578 |             *q = c_tolower (*q);[0m
 1579 |           else[0m
      | [0;32m          } 
[0m[1murl.c:1579:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1579 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1580 |             *q = c_toupper (*q);[0m
      | [0;1;32m                                
[0m[1murl.c:1587:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1587 |   if (unescaped && unescaped != buf)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1588 |           free (unescaped);[0m
      | [0;1;32m                           
[0m[1murl.c:1604:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1604 |   if (!from_encoding)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1605 |     from_encoding = "UTF-8";[0m
      | [0;1;32m                            
[0m[1murl.c:1606:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1606 |   if (!to_encoding)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1607 |     to_encoding = nl_langinfo (CODESET);[0m
      | [0;1;32m                                        
[0m[1murl.c:1640:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1640 |           if (errno)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1641 |             logprintf (LOG_VERBOSE,[0m
 1642 |                        _ ("Incomplete or invalid multibyte sequence encountered\n"));[0m
 1643 |           else[0m
      | [0;32m          } 
[0m[1murl.c:1643:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1643 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1644 |             logprintf (LOG_VERBOSE,[0m
 1645 |                        _ ("Unconvertable multibyte sequence encountered\n"));[0m
      | [0;1;32m                                                                             
[0m[1murl.c:1706:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1706 |       if (cut-- > 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1707 |         continue;[0m
      | [0;1;32m                 
[0m[1murl.c:1708:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1708 |       if (pathel == next)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1709 |         /* Ignore empty pathels.  */[0m
 1710 |         continue;[0m
      | [0;1;32m                 
[0m[1murl.c:1712:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1712 |       if (dest->tail)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1713 |         append_char ('/', dest);[0m
      | [0;1;32m                                
[0m[1murl.c:1741:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1741 |   if (opt.default_page)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1742 |     index_filename = opt.default_page;[0m
      | [0;1;32m                                      
[0m[1murl.c:1746:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1746 |   if (opt.dir_prefix)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1747 |     append_string (opt.dir_prefix, &fnres);[0m
      | [0;1;32m                                           
[0m[1murl.c:1764:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1764 |           if (temp_fnres.tail)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1765 |             append_char ('/', &temp_fnres);[0m
      | [0;1;32m                                           
[0m[1murl.c:1770:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1770 |           if (temp_fnres.tail)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1771 |             append_char ('/', &temp_fnres);[0m
      | [0;1;32m                                           
[0m[1murl.c:1772:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1772 |           if (0 != strcmp (u->host, ".."))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1773 |             append_string (u->host, &temp_fnres);[0m
 1774 |           else[0m
      | [0;32m          } 
[0m[1murl.c:1774:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1774 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1775 |             /* Host name can come from the network; malicious DNS may[0m
 1776 |                allow ".." to be resolved, causing us to write to[0m
 1777 |                "../<file>".  Defang such host names.  */[0m
 1778 |             append_string ("%2E%2E", &temp_fnres);[0m
      | [0;1;32m                                                  
[0m[1murl.c:1798:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1798 |       if (u->query)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1799 |         fname_len_check = concat_strings (u_file, FN_QUERY_SEP_STR, u->query, NULL);[0m
 1800 |       else[0m
      | [0;32m      } 
[0m[1murl.c:1800:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1800 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1801 |         fname_len_check = strdupdelim (u_file, u_file + strlen (u_file));[0m
      | [0;1;32m                                                                         
[0m[1murl.c:1809:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1809 |   if (temp_fnres.tail)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1810 |     append_char ('/', &temp_fnres);[0m
      | [0;1;32m                                   
[0m[1murl.c:1830:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1830 |   if (fnres.tail)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1831 |     append_char ('/', &fnres);[0m
      | [0;1;32m                              
[0m[1murl.c:1859:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1859 |       if (unique != fname)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1860 |         xfree (fname);[0m
      | [0;1;32m                      
[0m[1murl.c:1919:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1919 |               for (--t; t > beg && t[-1] != '/'; t--)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1920 |                 ;[0m
      | [0;1;32m                 
[0m[1murl.c:1948:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1948 |               while (h < end && *h != '/')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1949 |                 t++, h++;[0m
      | [0;1;32m                         
[0m[1murl.c:1950:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1950 |               if (h < end)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1951 |                 t++, h++;[0m
      | [0;1;32m                         
[0m[1murl.c:1956:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1956 |               while (h < end && *h != '/')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1957 |                 *t++ = *h++;[0m
      | [0;1;32m                            
[0m[1murl.c:1958:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1958 |               if (h < end)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1959 |                 *t++ = *h++;[0m
      | [0;1;32m                            
[0m[1murl.c:1964:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1964 |   if (t != h)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1965 |     *t = '\0';[0m
      | [0;1;32m              
[0m[1murl.c:1979:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1979 |   if (scheme == SCHEME_INVALID)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1980 |     scheme = SCHEME_HTTP;       /* use http semantics for rel links */[0m
      | [0;1;32m                                                                      
[0m[1murl.c:2009:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2009 |   if (url_has_scheme (link))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2010 |     return xstrdup (link);[0m
      | [0;1;32m                          
[0m[1murl.c:2031:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2031 |       memcpy (merge, base, baselength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2031:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2031 |       memcpy (merge, base, baselength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2032:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2032 |       memcpy (merge + baselength, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2032:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2032 |       memcpy (merge + baselength, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2043:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2043 |       if (!end1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2044 |         end1 = base + strlen (base);[0m
      | [0;1;32m                                    
[0m[1murl.c:2047:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2047 |       memcpy (merge, base, baselength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2047:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2047 |       memcpy (merge, base, baselength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2048:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2048 |       memcpy (merge + baselength, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2048:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2048 |       memcpy (merge + baselength, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2070:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2070 |       if (slash && *(slash + 1) == '/')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2071 |         start_insert = slash;[0m
 2072 |       else[0m
      | [0;32m      } 
[0m[1murl.c:2072:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2072 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2073 |         start_insert = base;[0m
      | [0;1;32m                            
[0m[1murl.c:2077:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2077 |       if (span)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2078 |         memcpy (merge, base, span);[0m
      | [0;1;32m                                   
[0m[1murl.c:2078:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2078 |         memcpy (merge, base, span);[0m
      | [0;1;32m        ^~~~~~
[0m[1murl.c:2078:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2078 |         memcpy (merge, base, span);[0m
      | [0;1;32m        ^~~~~~
[0m[1murl.c:2079:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2079 |       memcpy (merge + span, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2079:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2079 |       memcpy (merge + span, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2099:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2099 |       if (slash && !seen_slash_slash)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2100 |         if (*(slash + 1) == '/')[0m
 2101 |           {[0m
 2102 |             pos = slash + 2;[0m
 2103 |             seen_slash_slash = true;[0m
 2104 |             goto again;[0m
 2105 |           }[0m
      | [0;1;32m           
[0m[1murl.c:2113:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2113 |       if (!slash && !seen_slash_slash)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2114 |         /* example: "foo" */[0m
 2115 |         /*           ^    */[0m
 2116 |         start_insert = base;[0m
 2117 |       else if (!slash && seen_slash_slash)[0m
      | [0;32m      } 
[0m[1murl.c:2117:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2117 |       else if (!slash && seen_slash_slash)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2118 |         /* example: "http://foo" */[0m
 2119 |         /*                     ^ */[0m
 2120 |         start_insert = end;[0m
 2121 |       else if (slash && !seen_slash_slash)[0m
      | [0;32m      } 
[0m[1murl.c:2121:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2121 |       else if (slash && !seen_slash_slash)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2122 |         /* example: "foo/bar" */[0m
 2123 |         /*           ^        */[0m
 2124 |         start_insert = base;[0m
 2125 |       else if (slash && seen_slash_slash)[0m
      | [0;32m      } 
[0m[1murl.c:2125:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2125 |       else if (slash && seen_slash_slash)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2126 |         /* example: "http://something/" */[0m
 2127 |         /*                           ^  */[0m
 2128 |         start_insert = slash;[0m
      | [0;1;32m                             
[0m[1murl.c:2132:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2132 |       if (span)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2133 |         memcpy (merge, base, span);[0m
      | [0;1;32m                                   
[0m[1murl.c:2133:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2133 |         memcpy (merge, base, span);[0m
      | [0;1;32m        ^~~~~~
[0m[1murl.c:2133:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2133 |         memcpy (merge, base, span);[0m
      | [0;1;32m        ^~~~~~
[0m[1murl.c:2134:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2134 |       memcpy (merge + span, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2134:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2134 |       memcpy (merge + span, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2170:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2170 |       if (span)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2171 |         memcpy (merge, base, span);[0m
      | [0;1;32m                                   
[0m[1murl.c:2171:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2171 |         memcpy (merge, base, span);[0m
      | [0;1;32m        ^~~~~~
[0m[1murl.c:2171:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2171 |         memcpy (merge, base, span);[0m
      | [0;1;32m        ^~~~~~
[0m[1murl.c:2172:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2172 |       if (need_explicit_slash)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2173 |         merge[span - 1] = '/';[0m
      | [0;1;32m                              
[0m[1murl.c:2174:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2174 |       memcpy (merge + span, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2174:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2174 |       memcpy (merge + span, link, linklength);[0m
      | [0;1;32m      ^~~~~~
[0m[1murl.c:2223:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2223 |               if (auth_mode == URL_AUTH_HIDE_PASSWD)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2224 |                 quoted_passwd = (char *) HIDDEN_PASSWORD;[0m
 2225 |               else[0m
      | [0;32m              } 
[0m[1murl.c:2225:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2225 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2226 |                 quoted_passwd = url_escape_allow_passthrough (url->passwd);[0m
      | [0;1;32m                                                                           
[0m[1murl.c:2238:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2238 |   if (quoted_host != url->host)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2239 |     unescape_single_char (quoted_host, ':');[0m
      | [0;1;32m                                            
[0m[1murl.c:2247:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2247 |   if (url->port != scheme_port)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2248 |     size += 1 + numdigit (url->port);[0m
      | [0;1;32m                                     
[0m[1murl.c:2252:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2252 |       if (quoted_passwd)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2253 |         size += 1 + strlen (quoted_passwd);[0m
      | [0;1;32m                                           
[0m[1murl.c:2258:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2258 |   APPEND (p, scheme_str);[0m
      | [0;1;32m  ^
[0m[1murl.c:2183:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
 2183 |   memcpy (p, s, len);                           \[0m
      | [0;1;32m  ^~~~~~
[0m[1murl.c:2258:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2258 |   APPEND (p, scheme_str);[0m
      | [0;1;32m  ^
[0m[1murl.c:2183:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
 2183 |   memcpy (p, s, len);                           \[0m
      | [0;1;32m  ^~~~~~
[0m[1murl.c:2261:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2261 |       APPEND (p, quoted_user);[0m
      | [0;1;32m      ^
[0m[1murl.c:2183:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
 2183 |   memcpy (p, s, len);                           \[0m
      | [0;1;32m  ^~~~~~
[0m[1murl.c:2261:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2261 |       APPEND (p, quoted_user);[0m
      | [0;1;32m      ^
[0m[1murl.c:2183:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
 2183 |   memcpy (p, s, len);                           \[0m
      | [0;1;32m  ^~~~~~
[0m[1murl.c:2265:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2265 |           APPEND (p, quoted_passwd);[0m
      | [0;1;32m          ^
[0m[1murl.c:2183:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
 2183 |   memcpy (p, s, len);                           \[0m
      | [0;1;32m  ^~~~~~
[0m[1murl.c:2265:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2265 |           APPEND (p, quoted_passwd);[0m
      | [0;1;32m          ^
[0m[1murl.c:2183:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
 2183 |   memcpy (p, s, len);                           \[0m
      | [0;1;32m  ^~~~~~
[0m[1murl.c:2270:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2270 |   if (brackets_around_host)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2271 |     *p++ = '[';[0m
      | [0;1;32m               
[0m[1murl.c:2272:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2272 |   APPEND (p, quoted_host);[0m
      | [0;1;32m  ^
[0m[1murl.c:2183:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
 2183 |   memcpy (p, s, len);                           \[0m
      | [0;1;32m  ^~~~~~
[0m[1murl.c:2272:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2272 |   APPEND (p, quoted_host);[0m
      | [0;1;32m  ^
[0m[1murl.c:2183:3: [0m[0;1;36mnote: [0mexpanded from macro 'APPEND'[0m
 2183 |   memcpy (p, s, len);                           \[0m
      | [0;1;32m  ^~~~~~
[0m[1murl.c:2273:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2273 |   if (brackets_around_host)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2274 |     *p++ = ']';[0m
      | [0;1;32m               
[0m[1murl.c:2287:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2287 |   if (quoted_user && quoted_user != url->user)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2288 |     xfree (quoted_user);[0m
      | [0;1;32m                        
[0m[1murl.c:2290:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2290 |       && quoted_passwd != url->passwd)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2291 |     xfree (quoted_passwd);[0m
      | [0;1;32m                          
[0m[1murl.c:2292:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2292 |   if (quoted_host != url->host)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2293 |     xfree (quoted_host);[0m
      | [0;1;32m                        
[0m[1murl.c:2306:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2306 |   if (a == b)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2307 |     return true;[0m
      | [0;1;32m                
[0m[1murl.c:2333:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2333 |           if (p[2] == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2334 |             return 0; /* error: invalid string */[0m
      | [0;1;32m                                                 
[0m[1murl.c:2342:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2342 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2343 |             return 3;[0m
      | [0;1;32m                     
[0m179 warnings generated.
Suppressed 29 warnings (29 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[164/164][170.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/tidy-fixes/tmpa2z4_cs3.yaml -p=/itch/common/crepos/cu-to-rtu/c/wget-1.21.4 /itch/common/crepos/cu-to-rtu/c/wget-1.21.4/src/utils.c
[1mutils.c:224:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |   for (; *p; p++)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  225 |     *p = c_tolower (*p);[0m
      | [0;1;32m                        
[0m[1mutils.c:239:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  239 |       memcpy (res, beg, end - beg);[0m
      | [0;1;32m      ^~~~~~
[0m[1mutils.c:239:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  239 |       memcpy (res, beg, end - beg);[0m
      | [0;1;32m      ^~~~~~
[0m[1mutils.c:257:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |   if (!s || !*s)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  258 |     return NULL;[0m
      | [0;1;32m                
[0m[1mutils.c:270:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |           while (c_isspace (*s))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  271 |             ++s;[0m
      | [0;1;32m                
[0m[1mutils.c:274:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  275 |         ++s;[0m
      | [0;1;32m            
[0m[1mutils.c:305:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |   if (ret < 0 && errno == ENOMEM)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  306 |     memfatal ("aprintf", UNKNOWN_ATTEMPTED_SIZE);  /* for consistency[0m
  307 |                                                       with xmalloc/xrealloc */[0m
  308 |   else if (ret < 0)[0m
      | [0;32m  } 
[0m[1mutils.c:308:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   else if (ret < 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  309 |     return NULL;[0m
      | [0;1;32m                
[0m[1mutils.c:378:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |           if (!(*dst++ = *src++))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  379 |             return src - old - 1;[0m
      | [0;1;32m                                 
[0m[1mutils.c:385:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |   while (*src++);[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m[1mutils.c:401:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |   if (!str0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  402 |     return NULL;[0m
      | [0;1;32m                
[0m[1mutils.c:406:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |   for (arg = str0; arg; arg = va_arg (args, const char *))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  407 |     length += strlen(arg);[0m
      | [0;1;32m                          
[0m[1mutils.c:414:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |   for (arg = str0; arg; arg = va_arg (args, const char *))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  415 |     pos += strlcpy(s + pos, arg, length - pos + 1);[0m
      | [0;1;32m                                                   
[0m[1mutils.c:429:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |   if (!tm)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  430 |     abort ();[0m
      | [0;1;32m             
[0m[1mutils.c:431:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  431 |   if (!strftime(output, sizeof(output), fmt, tm))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  432 |     abort ();[0m
      | [0;1;32m             
[0m[1mutils.c:501:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if (logfile_changed)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  502 |         printf (_("Output will be written to %s.\n"), quote (opt.lfilename));[0m
      | [0;1;32m                                                                             
[0m[1mutils.c:508:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |   if (freopen ("/dev/null", "r", stdin) == NULL)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  509 |     DEBUGP (("Failed to redirect stdin to /dev/null.\n"));[0m
      | [0;1;32m                                                          
[0m[1mutils.c:510:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  510 |   if (freopen ("/dev/null", "w", stdout) == NULL)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  511 |     DEBUGP (("Failed to redirect stdout to /dev/null.\n"));[0m
      | [0;1;32m                                                           
[0m[1mutils.c:512:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |   if (freopen ("/dev/null", "w", stderr) == NULL)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  513 |     DEBUGP (("Failed to redirect stderr to /dev/null.\n"));[0m
      | [0;1;32m                                                           
[0m[1mutils.c:534:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  534 |   if (utime (file, &times) == -1)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  535 |     logprintf (LOG_NOTQUIET, "utime(%s): %s\n", file, strerror (errno));[0m
      | [0;1;32m                                                                        
[0m[1mutils.c:550:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |       if (err != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  551 |         logprintf (LOG_VERBOSE, _("Failed to unlink symlink %s: %s\n"),[0m
  552 |                    quote (file), strerror (errno));[0m
      | [0;1;32m                                                   
[0m[1mutils.c:563:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |   if (!filename)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  564 |           return false;[0m
      | [0;1;32m                       
[0m[1mutils.c:590:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |     if (fstats != NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  591 |       fstats->access_err = (errno == 0 ? EACCES : errno);[0m
      | [0;1;32m                                                         
[0m[1mutils.c:607:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |   if (lstat (path, &buf) != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  608 |     return false;[0m
      | [0;1;32m                 
[0m[1mutils.c:624:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  624 |   if (!fp)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  625 |     return -1;[0m
      | [0;1;32m              
[0m[1mutils.c:658:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  658 |   memcpy (template, prefix, plen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:658:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  658 |   memcpy (template, prefix, plen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:661:5: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  661 |   do[0m
      | [0;1;32m    ^
[0m      | [0;32m     {
[0m  662 |     number_to_string (template_tail, count++);[0m
  663 |   while (file_exists_p (template, NULL) && count < 999999);[0m
      | [0;32m  } 
[0m[1mutils.c:744:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |       if (fp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  745 |         *opened_name = uname;[0m
  746 |       else[0m
      | [0;32m      } 
[0m[1mutils.c:752:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  752 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  753 |     xfree (uname);[0m
      | [0;1;32m                  
[0m[1mutils.c:820:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |   if (binary)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  821 |     flags |= O_BINARY;[0m
      | [0;1;32m                      
[0m[1mutils.c:826:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  827 |     return NULL;[0m
      | [0;1;32m                
[0m[1mutils.c:882:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  882 |   memset(&fdstats, 0, sizeof(fdstats));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:882:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  882 |   memset(&fdstats, 0, sizeof(fdstats));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:933:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  933 |   memset(&fdstats, 0, sizeof(fdstats));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:933:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  933 |   memset(&fdstats, 0, sizeof(fdstats));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:973:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  973 |       memcpy(buf, directory, len + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mutils.c:973:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  973 |       memcpy(buf, directory, len + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mutils.c:976:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  976 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  977 |     dir = xstrdup(directory);[0m
      | [0;1;32m                             
[0m[1mutils.c:983:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |       for (; dir[i] && dir[i] != '/'; i++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  984 |         ;[0m
      | [0;1;32m         
[0m[1mutils.c:985:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  985 |       if (!dir[i])[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  986 |         quit = 1;[0m
      | [0;1;32m                 
[0m[1mutils.c:991:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  991 |       if (!file_exists_p (dir, NULL))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  992 |         ret = mkdir (dir, 0777);[0m
  993 |       else[0m
      | [0;32m      } 
[0m[1mutils.c:993:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  993 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  994 |         ret = 0;[0m
      | [0;1;32m                
[0m[1mutils.c:995:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  995 |       if (quit)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  996 |         break;[0m
  997 |       else[0m
      | [0;32m      } 
[0m[1mutils.c:997:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  997 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  998 |         dir[i] = '/';[0m
      | [0;1;32m                     
[0m[1mutils.c:1001:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1001 |   if (dir != buf)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1002 |           xfree (dir);[0m
      | [0;1;32m                      
[0m[1mutils.c:1022:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1022 |   if (!cut)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1023 |     return xstrdup (file);[0m
      | [0;1;32m                          
[0m[1mutils.c:1026:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1026 |   memcpy (result, base, cut - base);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:1026:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1026 |   memcpy (result, base, cut - base);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:1028:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1028 |   strcpy (result + (cut - base) + 1, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:1028:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1028 |   strcpy (result + (cut - base) + 1, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:1053:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1053 |   if (opt.output_document && strcmp (s, opt.output_document) == 0)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1054 |     return true;[0m
      | [0;1;32m                
[0m[1mutils.c:1056:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |   if ((p = strrchr (s, '/')))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1057 |     s = p + 1;[0m
      | [0;1;32m              
[0m[1mutils.c:1061:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1061 |       if (opt.rejects)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1062 |         return (in_acclist ((const char *const *)opt.accepts, s, true)[0m
 1063 |                 && !in_acclist ((const char *const *)opt.rejects, s, true));[0m
 1064 |       else[0m
      | [0;32m      } 
[0m[1mutils.c:1064:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1064 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1065 |         return in_acclist ((const char *const *)opt.accepts, s, true);[0m
      | [0;1;32m                                                                      
[0m[1mutils.c:1067:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1067 |   else if (opt.rejects)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1068 |     return !in_acclist ((const char *const *)opt.rejects, s, true);[0m
      | [0;1;32m                                                                   
[0m[1mutils.c:1078:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1078 |   if (opt.acceptregex && !opt.regex_match_fun (opt.acceptregex, s))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1079 |     return false;[0m
      | [0;1;32m                 
[0m[1mutils.c:1080:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1080 |   if (opt.rejectregex && opt.regex_match_fun (opt.rejectregex, s))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1081 |     return false;[0m
      | [0;1;32m                 
[0m[1mutils.c:1092:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1092 |   if (*d1 == '\0')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1093 |     return true;[0m
      | [0;1;32m                
[0m[1mutils.c:1094:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1094 |   if (!opt.ignore_case)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1095 |     for (; *d1 && *d2 && (*d1 == *d2); ++d1, ++d2)[0m
 1096 |       ;[0m
 1097 |   else[0m
      | [0;32m  } 
[0m[1mutils.c:1095:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1095 |     for (; *d1 && *d2 && (*d1 == *d2); ++d1, ++d2)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1096 |       ;[0m
      | [0;1;32m       
[0m[1mutils.c:1097:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1097 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1098 |     for (; *d1 && *d2 && (c_tolower (*d1) == c_tolower (*d2)); ++d1, ++d2)[0m
 1099 |       ;[0m
      | [0;1;32m       
[0m[1mutils.c:1098:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1098 |     for (; *d1 && *d2 && (c_tolower (*d1) == c_tolower (*d2)); ++d1, ++d2)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1099 |       ;[0m
      | [0;1;32m       
[0m[1mutils.c:1120:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1120 |           if (matcher (p, dir, FNM_PATHNAME) == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1121 |             break;[0m
      | [0;1;32m                  
[0m[1mutils.c:1125:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |           if (subdir_p (p, dir))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1126 |             break;[0m
      | [0;1;32m                  
[0m[1mutils.c:1143:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1143 |   if (*directory == '/')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1144 |     ++directory;[0m
      | [0;1;32m                
[0m[1mutils.c:1147:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1147 |       if (!dir_matches_p (opt.includes, directory))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1148 |         return false;[0m
      | [0;1;32m                     
[0m[1mutils.c:1152:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1152 |       if (dir_matches_p (opt.excludes, directory))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1153 |         return false;[0m
      | [0;1;32m                     
[0m[1mutils.c:1171:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1171 |   if (pos < 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1172 |     return false;  /* tail is longer than string.  */[0m
      | [0;1;32m                                                     
[0m[1mutils.c:1174:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1174 |   if (!fold_case)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1175 |     return !strcmp (string + pos, tail);[0m
 1176 |   else[0m
      | [0;32m  } 
[0m[1mutils.c:1176:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1176 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1177 |     return !strcasecmp (string + pos, tail);[0m
      | [0;1;32m                                            
[0m[1mutils.c:1196:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1196 |           if (res == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1197 |             return true;[0m
      | [0;1;32m                        
[0m[1mutils.c:1203:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1203 |               if (match_tail (s, *accepts, opt.ignore_case))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1204 |                 return true;[0m
      | [0;1;32m                            
[0m[1mutils.c:1210:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1210 |               if (cmp == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1211 |                 return true;[0m
      | [0;1;32m                            
[0m[1mutils.c:1228:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1228 |   if ((p = strrchr (str, '.')) && !strchr (p + 1, '/'))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1229 |     return p + 1;[0m
      | [0;1;32m                 
[0m[1mutils.c:1258:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1258 |   if ((suf = suffix (fname)) == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1259 |     return false;[0m
      | [0;1;32m                 
[0m[1mutils.c:1260:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1260 |   if (!c_strcasecmp (suf, "html"))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1261 |     return true;[0m
      | [0;1;32m                
[0m[1mutils.c:1262:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1262 |   if (!c_strcasecmp (suf, "htm"))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1263 |     return true;[0m
      | [0;1;32m                
[0m[1mutils.c:1264:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1264 |   if (suf[0] && !c_strcasecmp (suf + 1, "html"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1265 |     return true;[0m
      | [0;1;32m                
[0m[1mutils.c:1303:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1303 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1304 | #endif[0m
 1305 |     fd = open (file, O_RDONLY);[0m
      | [0;1;32m                               
[0m[1mutils.c:1306:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1306 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1307 |     return NULL;[0m
      | [0;1;32m                
[0m[1mutils.c:1313:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1313 |     if (fstat (fd, &buf) < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1314 |       goto mmap_lose;[0m
      | [0;1;32m                     
[0m[1mutils.c:1322:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1322 |     if (fm->content == (char *)MAP_FAILED)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1323 |       goto mmap_lose;[0m
      | [0;1;32m                     
[0m[1mutils.c:1324:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |     if (!inhibit_close)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1325 |       close (fd);[0m
      | [0;1;32m                 
[0m[1mutils.c:1365:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1365 |       if (nread > 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1366 |         /* Successful read. */[0m
 1367 |         fm->length += nread;[0m
 1368 |       else if (nread < 0)[0m
      | [0;32m      } 
[0m[1mutils.c:1368:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1368 |       else if (nread < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1369 |         /* Error. */[0m
 1370 |         goto lose;[0m
 1371 |       else[0m
      | [0;32m      } 
[0m[1mutils.c:1371:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1371 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1372 |         /* EOF */[0m
 1373 |         break;[0m
      | [0;1;32m              
[0m[1mutils.c:1375:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1375 |   if (!inhibit_close)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1376 |     close (fd);[0m
      | [0;1;32m               
[0m[1mutils.c:1377:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1377 |   if (size > fm->length && fm->length != 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1378 |     /* Due to exponential growth of fm->content, the allocated region[0m
 1379 |        might be much larger than what is actually needed.  */[0m
 1380 |     fm->content = xrealloc (fm->content, fm->length);[0m
      | [0;1;32m                                                     
[0m[1mutils.c:1385:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1385 |   if (!inhibit_close)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1386 |     close (fd);[0m
      | [0;1;32m               
[0m[1mutils.c:1438:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1438 |   if (!v1)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1439 |     return v2;[0m
      | [0;1;32m              
[0m[1mutils.c:1440:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1440 |   if (!v2)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1441 |     return v1;[0m
      | [0;1;32m              
[0m[1mutils.c:1449:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1449 |   for (i = 0; v1[i]; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1450 |     ;[0m
      | [0;1;32m     
[0m[1mutils.c:1452:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1452 |   for (j = 0; v2[j]; j++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1453 |     ;[0m
      | [0;1;32m     
[0m[1mutils.c:1456:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1456 |   memcpy (v1 + i, v2, (j + 1) * sizeof (char *));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:1456:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1456 |   memcpy (v1 + i, v2, (j + 1) * sizeof (char *));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutils.c:1471:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1471 |       for (cnt = 0; vec[cnt]; cnt++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1472 |         ;[0m
      | [0;1;32m         
[0m[1mutils.c:1475:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1475 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1476 |     cnt = 1;[0m
      | [0;1;32m            
[0m[1mutils.c:1496:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1496 |   if (hash_table_contains (ht, s))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1497 |     return;[0m
      | [0;1;32m           
[0m[1mutils.c:1520:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1520 |   for (hash_table_iterate (ht, &iter); hash_table_iter_next (&iter); )[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1521 |     *array++ = iter.key;[0m
      | [0;1;32m                        
[0m[1mutils.c:1532:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1532 |   for (hash_table_iterate (ht, &iter); hash_table_iter_next (&iter); )[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1533 |     xfree (iter.key);[0m
      | [0;1;32m                     
[0m[1mutils.c:1584:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1584 |           if (*lconv->decimal_point != ',')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1585 |             cached_sep = ",";[0m
 1586 |           else[0m
      | [0;32m          } 
[0m[1mutils.c:1586:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1586 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1587 |             cached_sep = ".";[0m
      | [0;1;32m                             
[0m[1mutils.c:1629:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1629 |   if (negative)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1630 |     n = -n;[0m
      | [0;1;32m           
[0m[1mutils.c:1639:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1639 |       if (n == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1640 |         break;[0m
      | [0;1;32m              
[0m[1mutils.c:1644:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1644 |           if (seplen == 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1645 |             *--p = *sep;[0m
 1646 |           else[0m
      | [0;32m          } 
[0m[1mutils.c:1646:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1646 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1647 |             memcpy (p -= seplen, sep, seplen);[0m
      | [0;1;32m                                              
[0m[1mutils.c:1647:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1647 |             memcpy (p -= seplen, sep, seplen);[0m
      | [0;1;32m            ^~~~~~
[0m[1mutils.c:1647:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1647 |             memcpy (p -= seplen, sep, seplen);[0m
      | [0;1;32m            ^~~~~~
[0m[1mutils.c:1649:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1649 |           if (*atgroup)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1650 |             groupsize = *atgroup++;[0m
      | [0;1;32m                                   
[0m[1mutils.c:1653:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1653 |   if (negative)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1654 |     *--p = '-';[0m
      | [0;1;32m               
[0m[1mutils.c:1694:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1694 |       snprintf (buf, sizeof (buf), "%d", (int) n);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutils.c:1694:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1694 |       snprintf (buf, sizeof (buf), "%d", (int) n);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mutils.c:1711:11: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1711 |           snprintf (buf, sizeof (buf), "%.*f%c",[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mutils.c:1711:11: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1711 |           snprintf (buf, sizeof (buf), "%.*f%c",[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mutils.c:1727:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1727 |   if (number < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1728 |     ++cnt;                      /* accommodate '-' */[0m
      | [0;1;32m                                                     
[0m[1mutils.c:1729:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1729 |   while ((number /= 10) != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1730 |     ++cnt;[0m
      | [0;1;32m          
[0m[1mutils.c:1803:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1803 |           if (last_digit < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1804 |             last_digit_char = '0' - last_digit;[0m
 1805 |           else[0m
      | [0;32m          } 
[0m[1mutils.c:1805:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1805 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1806 |             last_digit_char = '0' + last_digit;[0m
      | [0;1;32m                                               
[0m[1mutils.c:1819:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1819 |   if      (n < 10)                       DIGITS_1 (1);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1820 |   else if (n < 100)                      DIGITS_2 (10);[0m
      | [0;32m  } 
[0m[1mutils.c:1820:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1820 |   else if (n < 100)                      DIGITS_2 (10);[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1821 |   else if (n < 1000)                     DIGITS_3 (100);[0m
      | [0;32m  } 
[0m[1mutils.c:1821:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1821 |   else if (n < 1000)                     DIGITS_3 (100);[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1822 |   else if (n < 10000)                    DIGITS_4 (1000);[0m
      | [0;32m  } 
[0m[1mutils.c:1822:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1822 |   else if (n < 10000)                    DIGITS_4 (1000);[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1823 |   else if (n < 100000)                   DIGITS_5 (10000);[0m
      | [0;32m  } 
[0m[1mutils.c:1823:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1823 |   else if (n < 100000)                   DIGITS_5 (10000);[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1824 |   else if (n < 1000000)                  DIGITS_6 (100000);[0m
      | [0;32m  } 
[0m[1mutils.c:1824:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1824 |   else if (n < 1000000)                  DIGITS_6 (100000);[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1825 |   else if (n < 10000000)                 DIGITS_7 (1000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1825:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1825 |   else if (n < 10000000)                 DIGITS_7 (1000000);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1826 |   else if (n < 100000000)                DIGITS_8 (10000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1826:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1826 |   else if (n < 100000000)                DIGITS_8 (10000000);[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1827 |   else if (n < 1000000000)               DIGITS_9 (100000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1827:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1827 |   else if (n < 1000000000)               DIGITS_9 (100000000);[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1828 |   else if (n < 10*(W)1000000000)         DIGITS_10 (1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1828:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1828 |   else if (n < 10*(W)1000000000)         DIGITS_10 (1000000000);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1829 |   else if (n < 100*(W)1000000000)        DIGITS_11 (10*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1829:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1829 |   else if (n < 100*(W)1000000000)        DIGITS_11 (10*(W)1000000000);[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1830 |   else if (n < 1000*(W)1000000000)       DIGITS_12 (100*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1830:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1830 |   else if (n < 1000*(W)1000000000)       DIGITS_12 (100*(W)1000000000);[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1831 |   else if (n < 10000*(W)1000000000)      DIGITS_13 (1000*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1831:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1831 |   else if (n < 10000*(W)1000000000)      DIGITS_13 (1000*(W)1000000000);[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1832 |   else if (n < 100000*(W)1000000000)     DIGITS_14 (10000*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1832:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1832 |   else if (n < 100000*(W)1000000000)     DIGITS_14 (10000*(W)1000000000);[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1833 |   else if (n < 1000000*(W)1000000000)    DIGITS_15 (100000*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1833:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1833 |   else if (n < 1000000*(W)1000000000)    DIGITS_15 (100000*(W)1000000000);[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1834 |   else if (n < 10000000*(W)1000000000)   DIGITS_16 (1000000*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1834:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1834 |   else if (n < 10000000*(W)1000000000)   DIGITS_16 (1000000*(W)1000000000);[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1835 |   else if (n < 100000000*(W)1000000000)  DIGITS_17 (10000000*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1835:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1835 |   else if (n < 100000000*(W)1000000000)  DIGITS_17 (10000000*(W)1000000000);[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1836 |   else if (n < 1000000000*(W)1000000000) DIGITS_18 (100000000*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1836:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1836 |   else if (n < 1000000000*(W)1000000000) DIGITS_18 (100000000*(W)1000000000);[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1837 |   else                                   DIGITS_19 (1000000000*(W)1000000000);[0m
      | [0;32m  } 
[0m[1mutils.c:1837:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1837 |   else                                   DIGITS_19 (1000000000*(W)1000000000);[0m
      | [0;1;32m      ^                                                                       
[0m      | [0;32m       {
[0m[1mutils.c:1839:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1839 |   if (last_digit_char)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1840 |     *p++ = last_digit_char;[0m
      | [0;1;32m                           
[0m[1mutils.c:1919:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1919 |   if (opt.report_bps)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1920 |     return num * 8;[0m
      | [0;1;32m                   
[0m[1mutils.c:1937:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1937 |   if (opt.lfilename != NULL && opt.show_progress != 1)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1938 |     return 0;[0m
      | [0;1;32m             
[0m[1mutils.c:1941:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1941 |   if (ioctl (fd, TIOCGWINSZ, &wsz) < 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1942 |     return 0;                   /* most likely ENOTTY */[0m
      | [0;1;32m                                                        
[0m[1mutils.c:2084:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2084 |   xzero (itv);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mutils.c:2084:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2084 |   xzero (itv);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mutils.c:2087:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2087 |   if (itv.it_value.tv_sec == 0 && itv.it_value.tv_usec == 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2088 |     /* Ensure that we wait for at least the minimum interval.[0m
 2089 |        Specifying zero would mean "wait forever".  */[0m
 2090 |     itv.it_value.tv_usec = 1;[0m
      | [0;1;32m                             
[0m[1mutils.c:2112:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2112 |   xzero (disable);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mutils.c:2112:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2112 |   xzero (disable);[0m
      | [0;1;32m  ^
[0m[1m./wget.h:178:18: [0m[0;1;36mnote: [0mexpanded from macro 'xzero'[0m
  178 | #define xzero(x) memset (&(x), '\0', sizeof (x))[0m
      | [0;1;32m                 ^~~~~~
[0m[1mutils.c:2292:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2292 |       *p++ = tbl[s[0] >> 2];[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2293 |       *p++ = tbl[(s[0] & 3) << 4];[0m
 2294 |       *p++ = '=';[0m
 2295 |       *p++ = '=';[0m
 2296 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mutils.c:2298:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2298 |       *p++ = tbl[s[0] >> 2];[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2299 |       *p++ = tbl[((s[0] & 3) << 4) + (s[1] >> 4)];[0m
 2300 |       *p++ = tbl[((s[1] & 0xf) << 2)];[0m
 2301 |       *p++ = '=';[0m
 2302 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mutils.c:2365:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2365 |       if (!c)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2366 |         break;[0m
      | [0;1;32m              
[0m[1mutils.c:2367:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2367 |       if (c == '=' || !IS_BASE64 (c))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2368 |         return -1;              /* illegal char while decoding base64 */[0m
      | [0;1;32m                                                                        
[0m[1mutils.c:2373:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2373 |       if (!c)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2374 |         return -1;              /* premature EOF while decoding base64 */[0m
      | [0;1;32m                                                                         
[0m[1mutils.c:2375:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2375 |       if (c == '=' || !IS_BASE64 (c))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2376 |         return -1;              /* illegal char while decoding base64 */[0m
      | [0;1;32m                                                                        
[0m[1mutils.c:2387:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2387 |       if (!c)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2388 |         return -1;              /* premature EOF while decoding base64 */[0m
      | [0;1;32m                                                                         
[0m[1mutils.c:2389:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2389 |       if (!IS_BASE64 (c))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2390 |         return -1;              /* illegal char while decoding base64 */[0m
      | [0;1;32m                                                                        
[0m[1mutils.c:2395:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2395 |           if (!c)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2396 |             return -1;          /* premature EOF while decoding base64 */[0m
      | [0;1;32m                                                                         
[0m[1mutils.c:2397:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2397 |           if (c != '=')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2398 |             return -1;          /* padding `=' expected but not found */[0m
      | [0;1;32m                                                                        
[0m[1mutils.c:2412:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2412 |       if (!c)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2413 |         return -1;              /* premature EOF while decoding base64 */[0m
      | [0;1;32m                                                                         
[0m[1mutils.c:2414:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2414 |       if (c == '=')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2415 |         continue;[0m
      | [0;1;32m                 
[0m[1mutils.c:2416:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2416 |       if (!IS_BASE64 (c))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2417 |         return -1;              /* illegal char while decoding base64 */[0m
      | [0;1;32m                                                                        
[0m[1mutils.c:2483:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2483 |       fprintf (stderr, _("Invalid regular expression %s, %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutils.c:2483:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 2483 |       fprintf (stderr, _("Invalid regular expression %s, %s\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutils.c:2550:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2550 |   if (rc == REG_NOMATCH)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2551 |     return false;[0m
 2552 |   else if (rc == 0)[0m
      | [0;32m  } 
[0m[1mutils.c:2552:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2552 |   else if (rc == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2553 |     return true;[0m
 2554 |   else[0m
      | [0;32m  } 
[0m[1mutils.c:2585:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2585 |       for (k = from; (i <= mid) && (j <= to); k++)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2586 |         if (cmpfun (ELT (base, i), ELT (base, j)) <= 0)[0m
 2587 |           memcpy (ELT (temp, k), ELT (base, i++), size);[0m
 2588 |         else[0m
 2589 |           memcpy (ELT (temp, k), ELT (base, j++), size);[0m
      | [0;1;32m                                                        
[0m[1mutils.c:2586:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2586 |         if (cmpfun (ELT (base, i), ELT (base, j)) <= 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2587 |           memcpy (ELT (temp, k), ELT (base, i++), size);[0m
 2588 |         else[0m
      | [0;32m        } 
[0m[1mutils.c:2587:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2587 |           memcpy (ELT (temp, k), ELT (base, i++), size);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutils.c:2587:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2587 |           memcpy (ELT (temp, k), ELT (base, i++), size);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutils.c:2588:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2588 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2589 |           memcpy (ELT (temp, k), ELT (base, j++), size);[0m
      | [0;1;32m                                                        
[0m[1mutils.c:2589:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2589 |           memcpy (ELT (temp, k), ELT (base, j++), size);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutils.c:2589:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2589 |           memcpy (ELT (temp, k), ELT (base, j++), size);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutils.c:2590:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2590 |       while (i <= mid)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2591 |         memcpy (ELT (temp, k++), ELT (base, i++), size);[0m
      | [0;1;32m                                                        
[0m[1mutils.c:2591:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2591 |         memcpy (ELT (temp, k++), ELT (base, i++), size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:2591:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2591 |         memcpy (ELT (temp, k++), ELT (base, i++), size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:2592:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2592 |       while (j <= to)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2593 |         memcpy (ELT (temp, k++), ELT (base, j++), size);[0m
      | [0;1;32m                                                        
[0m[1mutils.c:2593:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2593 |         memcpy (ELT (temp, k++), ELT (base, j++), size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:2593:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2593 |         memcpy (ELT (temp, k++), ELT (base, j++), size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:2594:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2594 |       for (k = from; k <= to; k++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2595 |         memcpy (ELT (base, k), ELT (temp, k), size);[0m
      | [0;1;32m                                                    
[0m[1mutils.c:2595:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2595 |         memcpy (ELT (base, k), ELT (temp, k), size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:2595:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2595 |         memcpy (ELT (base, k), ELT (temp, k), size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:2632:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2632 |   if (n >= 9.95)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2633 |     /* Cut off at 9.95 because the below %.1f would round 9.96 to[0m
 2634 |        "10.0" instead of "10".  OTOH 9.94 will print as "9.9".  */[0m
 2635 |     snprintf (buf, sizeof buf, "%.0f", number);[0m
 2636 |   else if (n >= 0.95)[0m
      | [0;32m  } 
[0m[1mutils.c:2635:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2635 |     snprintf (buf, sizeof buf, "%.0f", number);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mutils.c:2635:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2635 |     snprintf (buf, sizeof buf, "%.0f", number);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mutils.c:2636:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2636 |   else if (n >= 0.95)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2637 |     snprintf (buf, sizeof buf, "%.1f", number);[0m
 2638 |   else if (n >= 0.001)[0m
      | [0;32m  } 
[0m[1mutils.c:2637:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2637 |     snprintf (buf, sizeof buf, "%.1f", number);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mutils.c:2637:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2637 |     snprintf (buf, sizeof buf, "%.1f", number);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mutils.c:2638:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2638 |   else if (n >= 0.001)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2639 |     snprintf (buf, sizeof buf, "%.1g", number);[0m
 2640 |   else if (n >= 0.0005)[0m
      | [0;32m  } 
[0m[1mutils.c:2639:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2639 |     snprintf (buf, sizeof buf, "%.1g", number);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mutils.c:2639:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2639 |     snprintf (buf, sizeof buf, "%.1g", number);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mutils.c:2640:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2640 |   else if (n >= 0.0005)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2641 |     /* round [0.0005, 0.001) to 0.001 */[0m
 2642 |     snprintf (buf, sizeof buf, "%.3f", number);[0m
 2643 |   else[0m
      | [0;32m  } 
[0m[1mutils.c:2642:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2642 |     snprintf (buf, sizeof buf, "%.3f", number);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mutils.c:2642:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2642 |     snprintf (buf, sizeof buf, "%.3f", number);[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mutils.c:2643:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2643 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2644 |     /* print numbers close to 0 as 0, not 0.000 */[0m
 2645 |     strcpy (buf, "0");[0m
      | [0;1;32m                      
[0m[1mutils.c:2667:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2667 |       if (!(ret < 0 && errno == ENOENT))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2668 |         break;[0m
      | [0;1;32m              
[0m[1mutils.c:2675:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2675 |       if (!*p || strcmp (p, "/") == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2676 |         break;[0m
      | [0;1;32m              
[0m[1mutils.c:2680:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2680 |       if (d == p)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2681 |         p[1] = '\0';  /* check root directory */[0m
 2682 |       else if (d)[0m
      | [0;32m      } 
[0m[1mutils.c:2682:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2682 |       else if (d)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2683 |         *d = '\0';  /* remove last directory part */[0m
 2684 |       else[0m
      | [0;32m      } 
[0m[1mutils.c:2684:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2684 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2685 |         *p = '\0';  /* check current directory */[0m
      | [0;1;32m                                                 
[0m[1mutils.c:2693:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2693 |       if (errno != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2694 |           perror ("pathconf");[0m
      | [0;1;32m                              
[0m[1mutils.c:2712:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2712 |       sprintf (str_buffer + 2 * i, "%02x", (unsigned) (hex_buffer[i] & 0xFF));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutils.c:2712:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2712 |       sprintf (str_buffer + 2 * i, "%02x", (unsigned) (hex_buffer[i] & 0xFF));[0m
      | [0;1;32m      ^~~~~~~
[0m204 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
