Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/screen-4.9.0
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 38 files out of 38 in compilation database ...
[ 1/38][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpzzktaxun.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/kmapdef.c
[ 2/38][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmptg2kfg6s.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/term.c
[ 3/38][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpcup4nybi.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/nethack.c
[1mnethack.c:124:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  124 | DoNLS(from)[0m
      | [0;1;32m^
[0m[1mnethack.c:132:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  132 |       for (t = nethacktrans; t->from; t++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  133 |         if (strcmp(from, t->from) == 0)[0m
  134 |           return t->to;[0m
      | [0;1;32m                       
[0m[1mnethack.c:133:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |         if (strcmp(from, t->from) == 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  134 |           return t->to;[0m
      | [0;1;32m                       
[0m7 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 4/38][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpyvf9_djk.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/putenv.c
[ 5/38][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpoy5341jb.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/braille_tsi.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 6/38][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpe6am3hbc.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/teln.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 7/38][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpjjaalrcs.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/pty.c
[1mpty.c:122:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  122 | initmaster(f)[0m
      | [0;1;32m^
[0m[1mpty.c:138:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  138 | InitPTY(f)[0m
      | [0;1;32m^
[0m[1mpty.c:141:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |   if (f < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  142 |     return;[0m
      | [0;1;32m           
[0m[1mpty.c:255:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  255 | OpenPTY(ttyn)[0m
      | [0;1;32m^
[0m[1mpty.c:259:13: [0m[0;1;35mwarning: [0m[1ma function declaration without a prototype is deprecated in all versions of C and is treated as a zero-parameter prototype in C23, conflicting with a previous declaration [clang-diagnostic-deprecated-non-prototype][0m
  259 |   char *m, *ptsname();[0m
      | [0;1;32m            ^
[0m[1m/usr/include/stdlib.h:995:14: [0m[0;1;36mnote: [0mconflicting prototype is here[0m
  995 | extern char *ptsname (int __fd) __THROW __wur;[0m
      | [0;1;32m             ^
[0m[1mpty.c:268:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |   if ((f = getpt()) == -1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  269 | #else[0m
  270 |   if ((f = open(PtyName, O_RDWR | O_NOCTTY)) == -1)[0m
  271 | #endif[0m
  272 |     return -1;[0m
      | [0;1;32m              
[0m[1mpty.c:286:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |   if (strlen(m) < sizeof(TtyName))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  287 |     strcpy(TtyName, m);[0m
  288 |   else[0m
      | [0;32m  } 
[0m[1mpty.c:287:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  287 |     strcpy(TtyName, m);[0m
      | [0;1;32m    ^~~~~~
[0m[1mpty.c:287:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  287 |     strcpy(TtyName, m);[0m
      | [0;1;32m    ^~~~~~
[0m[1mpty.c:414:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  414 |                 ret = snprintf(tty_symlink, MAX_PTS_SYMLINK, "/proc/self/fd/%d", fd);[0m
      | [0;1;32m                      ^~~~~~~~
[0m[1mpty.c:414:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  414 |                 ret = snprintf(tty_symlink, MAX_PTS_SYMLINK, "/proc/self/fd/%d", fd);[0m
      | [0;1;32m                      ^~~~~~~~
[0m[1mpty.c:415:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  415 |                 if (ret < 0 || ret >= MAX_PTS_SYMLINK)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  416 |                         return NULL;[0m
      | [0;1;32m                                    
[0m14 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 8/38][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpytt3n6u4.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/braille.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 9/38][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmp4i_6ba49.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/viewport.c
[1mviewport.c:45:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
   45 |       bzero((char *)vp, sizeof(*vp));[0m
      | [0;1;32m      ^~~~~
[0m[1mviewport.c:45:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
   45 |       bzero((char *)vp, sizeof(*vp));[0m
      | [0;1;32m      ^~~~~
[0m[1mviewport.c:54:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |     if ((vp = (struct viewport *)malloc(sizeof *vp)) == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m   55 |       return -1;[0m
      | [0;1;32m                
[0m[1mviewport.c:114:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |     if (cv->c_xs < display->d_vpxmin || display->d_vpxmin == -1)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  115 |       display->d_vpxmin = cv->c_xs;[0m
      | [0;1;32m                                   
[0m[1mviewport.c:116:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |     if (cv->c_xe > display->d_vpxmax || display->d_vpxmax == -1)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  117 |       display->d_vpxmax = cv->c_xe;[0m
      | [0;1;32m                                   
[0m8 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[10/38][2.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmp9rsk5ubi.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/misc.c
[1mmisc.c:55:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   55 | SaveStr(str)[0m
      | [0;1;32m^
[0m[1mmisc.c:60:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   60 |   if ((cp = malloc(strlen(str) + 1)) == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   61 |     Panic(0, "%s", strnomem);[0m
   62 |   else[0m
      | [0;32m  } 
[0m[1mmisc.c:62:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   63 |     strcpy(cp, str);[0m
      | [0;1;32m                    
[0m[1mmisc.c:63:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   63 |     strcpy(cp, str);[0m
      | [0;1;32m    ^~~~~~
[0m[1mmisc.c:63:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   63 |     strcpy(cp, str);[0m
      | [0;1;32m    ^~~~~~
[0m[1mmisc.c:68:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   68 | SaveStrn(str, n)[0m
      | [0;1;32m^
[0m[1mmisc.c:74:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |   if ((cp = malloc(n + 1)) == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   75 |     Panic(0, "%s", strnomem);[0m
   76 |   else[0m
      | [0;32m  } 
[0m[1mmisc.c:78:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
   78 |       bcopy((char *)str, cp, n);[0m
      | [0;1;32m      ^~~~~
[0m[1mmisc.c:78:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
   78 |       bcopy((char *)str, cp, n);[0m
      | [0;1;32m      ^~~~~
[0m[1mmisc.c:86:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   86 | InStr(str, pat)[0m
      | [0;1;32m^
[0m[1mmisc.c:91:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |   for (;*str; str++)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   92 |     if (!strncmp(str, pat, npat))[0m
   93 |       return str;[0m
      | [0;1;32m                 
[0m[1mmisc.c:92:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |     if (!strncmp(str, pat, npat))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   93 |       return str;[0m
      | [0;1;32m                 
[0m[1mmisc.c:114:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  114 | centerline(str, y)[0m
      | [0;1;32m^
[0m[1mmisc.c:122:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |   if (n > flayer->l_width - 1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  123 |     n = flayer->l_width - 1;[0m
      | [0;1;32m                            
[0m[1mmisc.c:129:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  129 | leftline(str, y, rend)[0m
      | [0;1;32m^
[0m[1mmisc.c:142:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |   if (n > flayer->l_width - 1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  143 |     n = flayer->l_width - 1;[0m
      | [0;1;32m                            
[0m[1mmisc.c:145:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |   if (n != l)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  146 |     LPutChar(flayer, &mchar_dol, n, y);[0m
      | [0;1;32m                                       
[0m[1mmisc.c:151:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  151 | Filename(s)[0m
      | [0;1;32m^
[0m[1mmisc.c:156:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  157 |     while (*p)[0m
  158 |       if (*p++ == '/')[0m
  159 |         s = p;[0m
      | [0;1;32m              
[0m[1mmisc.c:157:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |     while (*p)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  158 |       if (*p++ == '/')[0m
  159 |         s = p;[0m
      | [0;1;32m              
[0m[1mmisc.c:158:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |       if (*p++ == '/')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  159 |         s = p;[0m
      | [0;1;32m              
[0m[1mmisc.c:164:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  164 | stripdev(nam)[0m
      | [0;1;32m^
[0m[1mmisc.c:184:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |   if (nam == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  185 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmisc.c:186:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |   if (strncmp(nam, "/dev/", 5) == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  187 |     return nam + 5;[0m
      | [0;1;32m                   
[0m[1mmisc.c:198:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  198 | sigret_t (*xsignal(sig, func))[0m
      | [0;1;32m           ^
[0m[1mmisc.c:215:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |   if (sigaction(sig, &sa, &osa))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  216 |     return (sigret_t (*)__P(SIGPROTOARG))-1;[0m
      | [0;1;32m                                            
[0m[1mmisc.c:272:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  272 | xseteuid(euid)[0m
      | [0;1;32m^
[0m[1mmisc.c:278:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |   if (oeuid == euid)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  279 |     return;[0m
      | [0;1;32m           
[0m[1mmisc.c:280:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |   if ((int)getuid() != euid)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  281 |     oeuid = getuid();[0m
      | [0;1;32m                     
[0m[1mmisc.c:282:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |   if (setreuid(oeuid, euid))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  283 |     Panic(errno, "setreuid");[0m
      | [0;1;32m                             
[0m[1mmisc.c:287:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  287 | xsetegid(egid)[0m
      | [0;1;32m^
[0m[1mmisc.c:293:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |   if (oegid == egid)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  294 |     return;[0m
      | [0;1;32m           
[0m[1mmisc.c:295:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |   if ((int)getgid() != egid)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  296 |     oegid = getgid();[0m
      | [0;1;32m                     
[0m[1mmisc.c:297:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |   if (setregid(oegid, egid))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  298 |     Panic(errno, "setregid");[0m
      | [0;1;32m                             
[0m[1mmisc.c:326:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  326 | bclear(p, n)[0m
      | [0;1;32m^
[0m[1mmisc.c:330:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  330 |   bcopy((char *)blank, p, n);[0m
      | [0;1;32m  ^~~~~
[0m[1mmisc.c:330:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  330 |   bcopy((char *)blank, p, n);[0m
      | [0;1;32m  ^~~~~
[0m[1mmisc.c:335:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  335 | Kill(pid, sig)[0m
      | [0;1;32m^
[0m[1mmisc.c:338:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |   if (pid < 2)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  339 |     return;[0m
      | [0;1;32m           
[0m[1mmisc.c:370:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  370 | closeallfiles(except)[0m
      | [0;1;32m^
[0m[1mmisc.c:396:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  396 |         memset(pfd, 0, sizeof(pfd));[0m
      | [0;1;32m        ^~~~~~
[0m[1mmisc.c:396:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  396 |         memset(pfd, 0, sizeof(pfd));[0m
      | [0;1;32m        ^~~~~~
[0m[1mmisc.c:399:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |         for (f = i; f < maxfd && f < i + 1024; f++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  400 |           pfd[z++].fd = f;[0m
      | [0;1;32m                          
[0m[1mmisc.c:403:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |         if (ret < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  404 |           Panic(errno, "poll");[0m
      | [0;1;32m                               
[0m[1mmisc.c:407:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |         for (f = i; f < maxfd && f < i + 1024; f++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  408 |           if (!(pfd[z++].revents & POLLNVAL) && f != except)[0m
  409 |             close(f);[0m
      | [0;1;32m                     
[0m[1mmisc.c:408:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |           if (!(pfd[z++].revents & POLLNVAL) && f != except)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  409 |             close(f);[0m
      | [0;1;32m                     
[0m[1mmisc.c:466:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  466 | UserReturn(val)[0m
      | [0;1;32m^
[0m[1mmisc.c:522:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  522 | AddXChar(buf, ch)[0m
      | [0;1;32m^
[0m[1mmisc.c:540:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  541 |     *p++ = ch;[0m
      | [0;1;32m              
[0m[1mmisc.c:546:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  546 | AddXChars(buf, len, str)[0m
      | [0;1;32m^
[0m[1mmisc.c:560:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |       if (*str == ' ')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  561 |         *p++ = *str;[0m
  562 |       else[0m
      | [0;32m      } 
[0m[1mmisc.c:562:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  562 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  563 |         p += AddXChar(p, *str);[0m
      | [0;1;32m                               
[0m[1mmisc.c:598:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  598 | sleep1000(msec)[0m
      | [0;1;32m^
[0m[1mmisc.c:615:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  615 | xsetenv(var, value)[0m
      | [0;1;32m^
[0m[1mmisc.c:663:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  663 | _delay(delay, outc)[0m
      | [0;1;32m^
[0m[1mmisc.c:673:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |   if (ospeed <= 0 || ospeed >= (int)(sizeof(osp2pad)/sizeof(*osp2pad)))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  674 |     return 0;[0m
      | [0;1;32m             
[0m[1mmisc.c:677:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  677 |   while (delay-- > 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  678 |     (*outc)(0);[0m
      | [0;1;32m               
[0m57 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[11/38][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpsrnh20dw.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/comm.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[12/38][4.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmp7xwdvlu5.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/sched.c
[1msched.c:54:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |         if (ev->queued)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   55 |                 return;[0m
      | [0;1;32m                       
[0m[1msched.c:61:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |         for (; (evp = *evpp); evpp = &evp->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   62 |                 if (ev->pri > evp->pri)[0m
   63 |                         break;[0m
      | [0;1;32m                              
[0m[1msched.c:62:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |                 if (ev->pri > evp->pri)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   63 |                         break;[0m
      | [0;1;32m                              
[0m[1msched.c:74:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |         if (!ev->queued)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   75 |                 return;[0m
      | [0;1;32m                       
[0m[1msched.c:81:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   81 |         for (; (evp = *evpp); evpp = &evp->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   82 |                 if (evp == ev)[0m
   83 |                         break;[0m
      | [0;1;32m                              
[0m[1msched.c:82:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |                 if (evp == ev)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   83 |                         break;[0m
      | [0;1;32m                              
[0m[1msched.c:87:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |         if (ev == nextev)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   88 |                 nextev = nextev->next;[0m
      | [0;1;32m                                      
[0m[1msched.c:97:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |         if ((min = tevs) == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   98 |                 return 0;[0m
      | [0;1;32m                         
[0m[1msched.c:102:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |                 if (mins < ev->timeout.tv_sec)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  103 |                         continue;[0m
      | [0;1;32m                                 
[0m[1msched.c:122:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |                 if (calctimeout)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  123 |                         timeoutev = calctimo();[0m
      | [0;1;32m                                               
[0m[1msched.c:160:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                         if (ev->type == EV_READ)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  161 |                                 FD_SET(ev->fd, &r);[0m
  162 |                         else if (ev->type == EV_WRITE)[0m
      | [0;32m                        } 
[0m[1msched.c:162:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |                         else if (ev->type == EV_WRITE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  163 |                                 FD_SET(ev->fd, &w);[0m
      | [0;1;32m                                                   
[0m[1msched.c:214:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |                                 if (nsel == 0 || !FD_ISSET(ev->fd, set))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  215 |                                         continue;[0m
      | [0;1;32m                                                 
[0m[1msched.c:219:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |                             *ev->condpos <= (ev->condneg ? *ev->condneg : 0))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  220 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1msched.c:240:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |         if (ev->queued)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  241 |                 calctimeout = 1;[0m
      | [0;1;32m                                
[0m19 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[13/38][6.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmprgwwjnj4.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/list_display.c
[1mlist_display.c:94:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   94 |   sprintf(tbuf, " %-10.10s%4dx%-4d%10.10s@%-16.16s%s",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mlist_display.c:94:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   94 |   sprintf(tbuf, " %-10.10s%4dx%-4d%10.10s@%-16.16s%s",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mlist_display.c:102:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |       if (l < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  103 |         l = 0;[0m
      | [0;1;32m              
[0m[1mlist_display.c:104:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  104 |       sprintf(tbuf + strlen(tbuf), "%3d(%.10s)%*s%c%c%c%c",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlist_display.c:104:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  104 |       sprintf(tbuf + strlen(tbuf), "%3d(%.10s)%*s%c%c%c%c",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlist_display.c:141:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |       if (d == display)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  142 |         ldata->selected = row;[0m
      | [0;1;32m                              
[0m[1mlist_display.c:154:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |   if (!ldata->selected)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  155 |     return 0;[0m
      | [0;1;32m             
[0m[1mlist_display.c:164:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |       glist_remove_rows(ldata);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  165 |       gl_Display_rebuild(ldata);[0m
  166 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_display.c:171:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |       *len = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  172 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_display.c:178:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  178 |       if (display == cd)        /* We do not allow detaching the current display */[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  179 |         break;[0m
  180 |       Detach([0m
  181 | #ifdef POW_DETACH[0m
  182 |           ch == 'D' ? D_REMOTE_POWER : D_REMOTE[0m
  183 | #else[0m
  184 |           D_REMOTE[0m
  185 | #endif[0m
  186 |           );[0m
  187 |       display = cd;[0m
  188 |       glist_remove_rows(ldata);[0m
  189 |       gl_Display_rebuild(ldata);[0m
  190 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_display.c:178:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  178 |       if (display == cd)        /* We do not allow detaching the current display */[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  179 |         break;[0m
      | [0;1;32m              
[0m[1mlist_display.c:195:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  195 |       --*inp;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  196 |       ++*len;[0m
  197 |       return 0;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mlist_display.c:238:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |   if (!ldata)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  239 |     return;[0m
      | [0;1;32m           
[0m15 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[14/38][7.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpr6d7cdj4.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/utmp.c
[1mutmp.c:114:21: [0m[0;1;35mwarning: [0m[1ma function declaration without a prototype is deprecated in all versions of C and is treated as a zero-parameter prototype in C23, conflicting with a previous declaration [clang-diagnostic-deprecated-non-prototype][0m
  114 | extern struct utmp *getutline(), *pututline();[0m
      | [0;1;32m                    ^
[0m[1m/usr/include/utmp.h:76:21: [0m[0;1;36mnote: [0mconflicting prototype is here[0m
   76 | extern struct utmp *getutline (const struct utmp *__line) __THROW;[0m
      | [0;1;32m                    ^
[0m[1mutmp.c:114:35: [0m[0;1;35mwarning: [0m[1ma function declaration without a prototype is deprecated in all versions of C and is treated as a zero-parameter prototype in C23, conflicting with a previous declaration [clang-diagnostic-deprecated-non-prototype][0m
  114 | extern struct utmp *getutline(), *pututline();[0m
      | [0;1;32m                                  ^
[0m[1mutmp.c:99:20: [0m[0;1;36mnote: [0mexpanded from macro 'pututline'[0m
   99 | # define pututline xpututline[0m
      | [0;1;32m                   ^
[0m[1mutmp.c:98:21: [0m[0;1;36mnote: [0mconflicting prototype is here[0m
   98 | static struct utmp *xpututline __P((struct utmp *utmp));[0m
      | [0;1;32m                    ^
[0m[1mutmp.c:114:35: [0m[0;1;35mwarning: [0m[1ma function declaration without a prototype is deprecated in all versions of C and is treated as a zero-parameter prototype in C23, conflicting with a subsequent definition [clang-diagnostic-deprecated-non-prototype][0m
  114 | extern struct utmp *getutline(), *pututline();[0m
      | [0;1;32m                                  ^
[0m[1mutmp.c:99:20: [0m[0;1;36mnote: [0mexpanded from macro 'pututline'[0m
   99 | # define pututline xpututline[0m
      | [0;1;32m                   ^
[0m[1mutmp.c:177:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  177 | SlotToggle(how)[0m
      | [0;1;32m^
[0m[1mutmp.c:198:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |           if (SetUtmp(fore) == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  199 |             Msg(0, "This window is now logged in.");[0m
  200 |           else[0m
      | [0;32m          } 
[0m[1mutmp.c:200:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  201 |             Msg(0, "This window should now be logged in.");[0m
      | [0;1;32m                                                           
[0m[1mutmp.c:204:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  205 |         Msg(0, "This window is already logged in.");[0m
      | [0;1;32m                                                    
[0m[1mutmp.c:210:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |       if (fore->w_slot == (slot_t) -1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  211 |         Msg(0, "This window is already logged out\n");[0m
  212 |       else if (fore->w_slot == (slot_t) 0)[0m
      | [0;32m      } 
[0m[1mutmp.c:221:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |           if (fore->w_slot != (slot_t) -1)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  222 |             Msg(0, "What? Cannot remove Utmp slot?");[0m
  223 |           else[0m
      | [0;32m          } 
[0m[1mutmp.c:223:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  224 |             Msg(0, "This window is no longer logged in.");[0m
      | [0;1;32m                                                          
[0m[1mutmp.c:270:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |       if (errno != EACCES)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  271 |         Msg(errno, "%s", UtmpName);[0m
      | [0;1;32m                                   
[0m[1mutmp.c:319:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |   if (D_loginslot == (slot_t)0 || D_loginslot == (slot_t)-1)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  320 |     return;[0m
      | [0;1;32m           
[0m[1mutmp.c:351:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |           if (pututslot(D_loginslot, &u, (char *)0, (struct win *)0) == 0)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  352 |             D_loginslot = 0;[0m
      | [0;1;32m                            
[0m[1mutmp.c:385:87: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |       if (pututslot(D_loginslot, &D_utmp_logintty, D_loginhost, (struct win *)0) == 0)[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m  386 |         Msg(errno,"Could not write %s", UtmpName);[0m
      | [0;1;32m                                                  
[0m[1mutmp.c:390:85: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |   if (D_loginttymode && (tty = GetPtsPathOrSymlink(D_userfd)) && !CheckTtyname(tty))[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m  391 |     chmod(tty, D_loginttymode);[0m
      | [0;1;32m                               
[0m[1mutmp.c:406:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  406 | SetUtmp(wi)[0m
      | [0;1;32m^
[0m[1mutmp.c:420:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |   if (!utmpok || wi->w_type != W_TYPE_PTY)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  421 |     return -1;[0m
      | [0;1;32m              
[0m[1mutmp.c:429:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  429 |   bzero((char *)&u, sizeof(u));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:429:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  429 |   bzero((char *)&u, sizeof(u));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:430:19: [0m[0;1;35mwarning: [0m[1mThe bcmp() function is obsoleted by memcmp() [clang-analyzer-security.insecureAPI.bcmp][0m
  430 |   if ((saved_ut = bcmp((char *) &wi->w_savut, (char *)&u, sizeof(u))))[0m
      | [0;1;32m                  ^~~~
[0m[1mutmp.c:430:19: [0m[0;1;36mnote: [0mThe bcmp() function is obsoleted by memcmp()[0m
  430 |   if ((saved_ut = bcmp((char *) &wi->w_savut, (char *)&u, sizeof(u))))[0m
      | [0;1;32m                  ^~~~
[0m[1mutmp.c:430:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |   if ((saved_ut = bcmp((char *) &wi->w_savut, (char *)&u, sizeof(u))))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  431 |     /* restore original, of which we will adopt all fields but ut_host */[0m
  432 |     bcopy((char *)&wi->w_savut, (char *) &u, sizeof(u));[0m
      | [0;1;32m                                                        
[0m[1mutmp.c:432:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  432 |     bcopy((char *)&wi->w_savut, (char *) &u, sizeof(u));[0m
      | [0;1;32m    ^~~~~
[0m[1mutmp.c:432:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  432 |     bcopy((char *)&wi->w_savut, (char *) &u, sizeof(u));[0m
      | [0;1;32m    ^~~~~
[0m[1mutmp.c:434:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  434 |   if (!saved_ut)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  435 |     makeuser(&u, stripdev(wi->w_tty), LoginName, wi->w_pid);[0m
      | [0;1;32m                                                            
[0m[1mutmp.c:441:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  441 |       strncpy(host, D_loginhost, sizeof(host) - 15);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutmp.c:441:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  441 |       strncpy(host, D_loginhost, sizeof(host) - 15);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutmp.c:452:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |           for (p = host; *p; p++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  453 |             if ((*p < '0' || *p > '9') && (*p != '.'))[0m
  454 |               break;[0m
      | [0;1;32m                    
[0m[1mutmp.c:453:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |             if ((*p < '0' || *p > '9') && (*p != '.'))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  454 |               break;[0m
      | [0;1;32m                    
[0m[1mutmp.c:457:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |               for (p = host; *p; p++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  458 |                 if (*p == '.' || (*p == ':' && p != host))[0m
  459 |                   {[0m
  460 |                     *p = '\0';[0m
  461 |                     break;[0m
  462 |                   }[0m
      | [0;1;32m                   
[0m[1mutmp.c:467:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  467 |           strncpy(host + 1, stripdev(D_usertty), sizeof(host) - 15 - 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutmp.c:467:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  467 |           strncpy(host + 1, stripdev(D_usertty), sizeof(host) - 15 - 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutmp.c:471:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  472 |     strncpy(host, "local", sizeof(host) - 15);[0m
      | [0;1;32m                                              
[0m[1mutmp.c:472:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  472 |     strncpy(host, "local", sizeof(host) - 15);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutmp.c:472:5: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  472 |     strncpy(host, "local", sizeof(host) - 15);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutmp.c:474:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  474 |   sprintf(host + strlen(host), ":S.%d", wi->w_number);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:474:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  474 |   sprintf(host + strlen(host), ":S.%d", wi->w_number);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:478:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  478 |   strncpy(u.ut_host, host, sizeof(u.ut_host));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:478:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  478 |   strncpy(u.ut_host, host, sizeof(u.ut_host));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:490:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  490 |   bcopy((char *)&u, (char *)&wi->w_savut, sizeof(u));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:490:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  490 |   bcopy((char *)&u, (char *)&wi->w_savut, sizeof(u));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:501:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  501 | RemoveUtmp(wi)[0m
      | [0;1;32m^
[0m[1mutmp.c:509:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |   if (!utmpok)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  510 |     return -1;[0m
      | [0;1;32m              
[0m[1mutmp.c:516:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  516 |   bzero((char *) &u, sizeof(u));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:516:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  516 |   bzero((char *) &u, sizeof(u));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:526:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  526 |   bcopy((char *)uu, (char *)&wi->w_savut, sizeof(wi->w_savut));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:526:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  526 |   bcopy((char *)uu, (char *)&wi->w_savut, sizeof(wi->w_savut));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:554:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  554 | getutslot(slot)[0m
      | [0;1;32m^
[0m[1mutmp.c:558:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  558 |   bzero((char *)&u, sizeof(u));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:558:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  558 |   bzero((char *)&u, sizeof(u));[0m
      | [0;1;32m  ^~~~~
[0m[1mutmp.c:559:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  559 |   strncpy(u.ut_line, slot, sizeof(u.ut_line));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:559:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  559 |   strncpy(u.ut_line, slot, sizeof(u.ut_line));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:565:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  565 | pututslot(slot, u, host, wi)[0m
      | [0;1;32m^
[0m[1mutmp.c:597:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  597 | makedead(u)[0m
      | [0;1;32m^
[0m[1mutmp.c:611:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  611 | makeuser(u, line, user, pid)[0m
      | [0;1;32m^
[0m[1mutmp.c:618:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  618 |   strncpy(u->ut_user, user, sizeof(u->ut_user));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:618:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  618 |   strncpy(u->ut_user, user, sizeof(u->ut_user));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:621:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  621 |   strncpy(u->ut_id, line + 3, sizeof(u->ut_id));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:621:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  621 |   strncpy(u->ut_id, line + 3, sizeof(u->ut_id));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:629:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  629 |   strncpy(u->ut_line, line, sizeof(u->ut_line));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:629:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  629 |   strncpy(u->ut_line, line, sizeof(u->ut_line));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutmp.c:638:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  638 | TtyNameSlot(nam)[0m
      | [0;1;32m^
[0m[1mutmp.c:881:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  881 | xpututline(u)[0m
      | [0;1;32m^
[0m[1mutmp.c:888:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  888 |   if (u2 == 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  889 |     return u->ut_type == DEAD_PROCESS ? u : 0;[0m
      | [0;1;32m                                              
[0m52 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[15/38][9.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpf4wmyr20.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/loadav.c
[1mloadav.c:86:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |   if ((fp = secfopen("/proc/loadavg", "r")) == NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   87 |     return 0;[0m
      | [0;1;32m             
[0m[1mloadav.c:98:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |       while(*s == ' ')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   99 |         s++;[0m
      | [0;1;32m            
[0m[1mloadav.c:100:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |       if (*s == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  101 |         break;[0m
      | [0;1;32m              
[0m[1mloadav.c:104:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |           if (*s == '.') [0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  105 |             e = 1;[0m
  106 |           else if (*s >= '0' && *s <= '9') [0m
      | [0;32m          } 
[0m[1mloadav.c:109:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |               if (e)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  110 |                 e *= 10;[0m
      | [0;1;32m                        
[0m[1mloadav.c:112:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |           else    [0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  113 |             break;[0m
      | [0;1;32m                  
[0m[1mloadav.c:382:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  382 | AddLoadav(p)[0m
      | [0;1;32m^
[0m[1mloadav.c:386:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |   if (loadok == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  387 |     return;[0m
      | [0;1;32m           
[0m[1mloadav.c:391:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  391 |       sprintf(p, " %2.2f" + !i, FIX_TO_DBL(loadav[i]));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mloadav.c:391:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  391 |       sprintf(p, " %2.2f" + !i, FIX_TO_DBL(loadav[i]));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mloadav.c:391:27: [0m[0;1;35mwarning: [0m[1madding 'int' to a string does not append to the string [clang-diagnostic-string-plus-int][0m
  391 |       sprintf(p, " %2.2f" + !i, FIX_TO_DBL(loadav[i]));[0m
      | [0;1;32m                 ~~~~~~~~~^~~~
[0m[1mloadav.c:391:27: [0m[0;1;36mnote: [0muse array indexing to silence this warning[0m
  391 |       sprintf(p, " %2.2f" + !i, FIX_TO_DBL(loadav[i]));[0m
      | [0;1;32m                          ^   
[0m      | [0;32m                 &        [   ]
[0m14 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[16/38][105.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmp1boce_5b.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tty.c
[1mtty.c:108:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  108 | SigAlrmDummy SIGDEFARG[0m
      | [0;1;32m^
[0m[1mtty.c:130:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |     if (errno == EINTR)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  131 |       Msg(0, "Cannot open line '%s' for R/W: open() blocked, aborted.", line);[0m
  132 |     else[0m
      | [0;32m    } 
[0m[1mtty.c:132:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  132 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  133 |       Msg(errno, "Cannot open line '%s' for R/W", line);[0m
      | [0;1;32m                                                        
[0m[1mtty.c:160:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |  if (ioctl(f, TIOCEXCL, (char *) 0) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  161 |    Msg(errno, "%s: ioctl TIOCEXCL failed", line);[0m
      | [0;1;32m                                                 
[0m[1mtty.c:206:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  206 |   bzero((char *)m, sizeof(*m));[0m
      | [0;1;32m  ^~~~~
[0m[1mtty.c:206:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  206 |   bzero((char *)m, sizeof(*m));[0m
      | [0;1;32m  ^~~~~
[0m[1mtty.c:613:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |   if (errno)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  614 |     Msg(errno, "SetTTY (fd %d): ioctl failed", fd);[0m
      | [0;1;32m                                                   
[0m[1mtty.c:652:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |   if (errno)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  653 |     Msg(errno, "GetTTY (fd %d): ioctl failed", fd);[0m
      | [0;1;32m                                                   
[0m[1mtty.c:697:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  697 |   if (interrupt)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  698 |     np->tio.c_lflag |= ISIG;[0m
  699 |   else[0m
      | [0;32m  } 
[0m[1mtty.c:699:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  700 |     np->tio.c_lflag &= ~ISIG;[0m
      | [0;1;32m                             
[0m[1mtty.c:711:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |   if (!interrupt || !flow)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  712 |     np->tio.c_cc[VINTR] = VDISABLE;[0m
      | [0;1;32m                                   
[0m[1mtty.c:810:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |   if (D_flow == on)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  811 |     return;[0m
      | [0;1;32m           
[0m[1mtty.c:845:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  845 |   if (!on)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  846 |     tcflow(D_userfd, TCOON);[0m
      | [0;1;32m                            
[0m[1mtty.c:848:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  848 |   if (tcsetattr(D_userfd, TCSANOW, &D_NewMode.tio))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  849 | # else[0m
  850 |   if (ioctl(D_userfd, TCSETAW, (char *)&D_NewMode.tio) != 0)[0m
  851 | # endif[0m
  852 |     debug1("SetFlow: ioctl errno %d\n", errno);[0m
      | [0;1;32m                                               
[0m[1mtty.c:876:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  876 |   if (!opt)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  877 |     return 0;[0m
      | [0;1;32m             
[0m[1mtty.c:880:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  880 |     while (index(sep, *opt)) opt++;[0m
      | [0;1;32m                            ^      
[0m      | [0;32m                             {
[0m[1mtty.c:882:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  882 |         if (SetBaud(m, atoi(opt), atoi(opt)))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  883 |               return -1;[0m
      | [0;1;32m                        
[0m[1mtty.c:964:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  965 |         return -1;[0m
      | [0;1;32m                  
[0m[1mtty.c:967:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  967 |       while (*opt && !index(sep, *opt)) opt++;[0m
      | [0;1;32m                                       ^      
[0m      | [0;32m                                        {
[0m[1mtty.c:983:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |   if (separate_sids)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  984 |     setsid();           /* will break terminal affiliation */[0m
      | [0;1;32m                                                             
[0m[1mtty.c:1022:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1022 |   if (separate_sids)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1023 |     if (tcsetpgrp(fd, mypid)) {[0m
 1024 |       debug1("fgtty: tcsetpgrp: %d\n", errno);[0m
 1025 |       return -1;[0m
 1026 |     }[0m
      | [0;1;32m     
[0m[1mtty.c:1093:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1093 |       debug2("%d * tcsendbreak(fd=%d, 0)\n", n, fd);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mtty.c:1097:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1097 |             if (!n)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1098 |               n++;[0m
      | [0;1;32m                  
[0m[1mtty.c:1099:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1099 |             for (i = 0; i < n; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1100 |               if (tcsendbreak(fd, 0) < 0) {[0m
 1101 |                     Msg(errno, "cannot send BREAK (tcsendbreak SVR4)");[0m
 1102 |                     return;[0m
 1103 |               }[0m
      | [0;1;32m               
[0m[1mtty.c:1113:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1113 |       if (!n)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mtty.c:1113:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1113 |       if (!n)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1114 |         n++;[0m
      | [0;1;32m            
[0m[1mtty.c:1123:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1123 |             for (i = 0; i < n; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1124 |               if (ioctl(fd, TCSBRK, (char *)0) < 0) {[0m
 1125 |                     Msg(errno, "Cannot send BREAK (TCSBRK)");[0m
 1126 |                     return;[0m
 1127 |               }[0m
      | [0;1;32m               
[0m[1mtty.c:1140:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1140 |       debug("TIOCSBRK TIOCCBRK\n");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1141 |       if (ioctl(fd, TIOCSBRK, (char *)0) < 0) {[0m
 1142 |             Msg(errno, "Can't send BREAK (TIOCSBRK)");[0m
 1143 |             return;[0m
 1144 |           }[0m
 1145 |       sleep1000(n ? n * 250 : 250);[0m
 1146 |       if (ioctl(fd, TIOCCBRK, (char *)0) < 0) {[0m
 1147 |             Msg(errno, "BREAK stuck!!! -- HELP! (TIOCCBRK)");[0m
 1148 |             return;[0m
 1149 |           }[0m
 1150 | #else /* TIOCSBRK && TIOCCBRK */[0m
 1151 |       Msg(0, "TIOCSBRK/CBRK not available, change breaktype");[0m
 1152 | #endif /* TIOCSBRK && TIOCCBRK */[0m
 1153 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mtty.c:1156:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1156 |       Msg(0, "Internal SendBreak error: method %d unknown", type);[0m
      | [0;1;32m      ^                                                          
[0m      | [0;32m      {                                                          ;} 
[0m[1mtty.c:1175:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1175 |   if (wp->w_type != W_TYPE_PLAIN)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1176 |     return;[0m
      | [0;1;32m           
[0m[1mtty.c:1231:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1231 |   for (p = n = buf; l > 0; n++, l--)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1232 |     if (*n == '\n') {[0m
 1233 |       if (n > p)[0m
 1234 |         WriteString(console_window, p, n - p);[0m
 1235 |       WriteString(console_window, "\r\n", 2);[0m
 1236 |       p = n + 1;[0m
 1237 |     }[0m
      | [0;1;32m     
[0m[1mtty.c:1233:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1233 |       if (n > p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1234 |         WriteString(console_window, p, n - p);[0m
      | [0;1;32m                                              
[0m[1mtty.c:1239:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1239 |   if (n > p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1240 |     WriteString(console_window, p, n - p);[0m
      | [0;1;32m                                          
[0m[1mtty.c:1313:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1313 |     for (d = displays; d; d = d->d_next)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1314 |           if (strcmp(d->d_usertty, "/dev/console") == 0)[0m
 1315 |             break;[0m
      | [0;1;32m                  
[0m[1mtty.c:1314:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1314 |           if (strcmp(d->d_usertty, "/dev/console") == 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1315 |             break;[0m
      | [0;1;32m                  
[0m[1mtty.c:1329:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1329 |   if (on <= 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1330 |     return 0;[0m
      | [0;1;32m             
[0m[1mtty.c:1370:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1370 |   if (UserContext() == 1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1371 |     UserReturn(ioctl(consredirfd[1], TIOCCONS, (char *)&on));[0m
      | [0;1;32m                                                             
[0m[1mtty.c:1455:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1455 |   if (!(mtio.tio.c_cflag & CRTSCTS))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1456 |     rtscts = 0;[0m
 1457 |   else[0m
      | [0;32m  } 
[0m[1mtty.c:1457:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1457 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1458 | # endif /* CRTSCTS */[0m
 1459 |     rtscts = 1;[0m
      | [0;1;32m               
[0m[1mtty.c:1463:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1463 |   if (ioctl(fd, TIOCGSOFTCAR, (char *)&softcar) < 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1464 |     softcar = 0;[0m
      | [0;1;32m                
[0m[1mtty.c:1479:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1479 |       sprintf(p, "NO-TTY? %s", softcar ? "(CD)" : "CD");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtty.c:1479:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1479 |       sprintf(p, "NO-TTY? %s", softcar ? "(CD)" : "CD");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtty.c:1497:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1497 |       if (mflags & TIOCM_RTS)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1498 |         s++;[0m
      | [0;1;32m            
[0m[1mtty.c:1499:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1499 |       while (*s) *p++ = *s++;[0m
      | [0;1;32m                ^            
[0m      | [0;32m                 {
[0m[1mtty.c:1508:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1508 |       if (mflags & TIOCM_CTS)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1509 |         s++;[0m
      | [0;1;32m            
[0m[1mtty.c:1510:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1510 |       while (*s) *p++ = *s++;[0m
      | [0;1;32m                ^            
[0m      | [0;32m                 {
[0m[1mtty.c:1515:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1515 |       if (mflags & TIOCM_DTR)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1516 |         s++;[0m
      | [0;1;32m            
[0m[1mtty.c:1517:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1517 |       while (*s) *p++ = *s++;[0m
      | [0;1;32m                ^            
[0m      | [0;32m                 {
[0m[1mtty.c:1522:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1522 |       if (mflags & TIOCM_DSR)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1523 |         s++;[0m
      | [0;1;32m            
[0m[1mtty.c:1524:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1524 |       while (*s) *p++ = *s++;[0m
      | [0;1;32m                ^            
[0m      | [0;32m                 {
[0m[1mtty.c:1537:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1537 |       if (mflags & TIOCM_CD)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1538 |         s++;[0m
      | [0;1;32m            
[0m[1mtty.c:1543:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1543 |       while (*s) *p++ = *s++;[0m
      | [0;1;32m                ^            
[0m      | [0;32m                 {
[0m[1mtty.c:1549:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1549 |       if (mflags & TIOCM_RI)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1550 | #  else[0m
 1551 |       if (mflags & TIOCM_RNG)[0m
 1552 | #  endif[0m
 1553 |         for (s = "RI "; *s; *p++ = *s++);[0m
      | [0;1;32m                                         
[0m[1mtty.c:1553:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1553 |         for (s = "RI "; *s; *p++ = *s++);[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m[1mtty.c:1573:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1573 |       if (p > buf && p[-1] == ' ')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1574 |         p--;[0m
      | [0;1;32m            
[0m[1mtty.c:1583:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1583 |   if (clocal)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1584 |     *p++ = '}';[0m
      | [0;1;32m               
[0m[1mtty.c:1776:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1776 |   for (p = btable; p->idx >= 0; p++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1777 |     if (baud == p->bps || baud == p->sym)[0m
 1778 |       return p;[0m
      | [0;1;32m               
[0m[1mtty.c:1777:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1777 |     if (baud == p->bps || baud == p->sym)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1778 |       return p;[0m
      | [0;1;32m               
[0m[1mtty.c:1792:98: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1792 |   if ((!(ip = lookup_baud(ibaud)) && ibaud != -1) || (!(op = lookup_baud(obaud)) && obaud != -1))[0m
      | [0;1;32m                                                                                                 ^
[0m      | [0;32m                                                                                                  {
[0m 1793 |     return -1;[0m
      | [0;1;32m              
[0m[1mtty.c:1796:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1796 |   if (ip)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 1797 |     cfsetispeed(&m->tio, ip->sym);[0m
      | [0;1;32m                                  
[0m[1mtty.c:1798:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1798 |   if (op)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 1799 |     cfsetospeed(&m->tio, op->sym);[0m
      | [0;1;32m                                  
[0m[1mtty.c:1836:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1836 |   if (!real)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1837 |     return -1;[0m
      | [0;1;32m              
[0m[1mtty.c:1840:97: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1840 |   if (lstat(real, &st) || !S_ISCHR(st.st_mode) || (st.st_nlink > 1 && strncmp(real, "/dev", 4)))[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m 1841 |     rc = -1;[0m
 1842 |   else[0m
      | [0;32m  } 
[0m[1mtty.c:1842:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1842 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1843 |     rc = 0;[0m
      | [0;1;32m           
[0m66 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[17/38][105.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpod_sgjmy.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/input.c
[1minput.c:89:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   89 | inp_setprompt(p, s)[0m
      | [0;1;32m^
[0m[1minput.c:102:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |       if (s != inpdata->inp.buf)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  103 |         strncpy(inpdata->inp.buf, s, sizeof(inpdata->inp.buf) - 1);[0m
      | [0;1;32m                                                                   
[0m[1minput.c:103:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  103 |         strncpy(inpdata->inp.buf, s, sizeof(inpdata->inp.buf) - 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1minput.c:103:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  103 |         strncpy(inpdata->inp.buf, s, sizeof(inpdata->inp.buf) - 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1minput.c:123:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  123 | Input(istr, len, mode, finfunc, priv, data)[0m
      | [0;1;32m^
[0m[1minput.c:134:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |   if (!flayer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  135 |     return;[0m
      | [0;1;32m           
[0m[1minput.c:137:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |   if (len > MAXSTR)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  138 |     len = MAXSTR;[0m
      | [0;1;32m                 
[0m[1minput.c:142:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |       if (len > maxlen)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  143 |         len = maxlen;[0m
      | [0;1;32m                     
[0m[1minput.c:150:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |   if (InitOverlayPage(sizeof(*inpdata), &InpLf, 1))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  151 |     return;[0m
      | [0;1;32m           
[0m[1minput.c:160:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |   if (!priv)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  161 |     priv = (char*)&inpdata->privdata;[0m
      | [0;1;32m                                     
[0m[1minput.c:166:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |   if (istr)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  167 |     inp_setprompt(istr, (char *)NULL);[0m
      | [0;1;32m                                      
[0m[1minput.c:171:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  171 | erase_chars(inpdata, from, to, x, mv)[0m
      | [0;1;32m^
[0m[1minput.c:180:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |   if (inpdata->inp.len > to - inpdata->inp.buf)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  181 |     bcopy(to, from, inpdata->inp.len - (to - inpdata->inp.buf));[0m
      | [0;1;32m                                                                
[0m[1minput.c:181:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  181 |     bcopy(to, from, inpdata->inp.len - (to - inpdata->inp.buf));[0m
      | [0;1;32m    ^~~~~
[0m[1minput.c:181:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  181 |     bcopy(to, from, inpdata->inp.len - (to - inpdata->inp.buf));[0m
      | [0;1;32m    ^~~~~
[0m[1minput.c:196:15: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the field 'buf' [clang-analyzer-security.ArrayBound][0m
  196 |           mc.image = *s++;[0m
      | [0;1;32m                     ^
[0m[1minput.c:223:45: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  223 |   LGotoPos(flayer, inpdata->inpstringlen + (inpdata->inpmode & INP_NOECHO ? 0 : inpdata->inp.pos), INPUTLINE);[0m
      | [0;1;32m                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:223:45: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1minput.c:224:7: [0m[0;1;36mnote: [0mAssuming 'ppbuf' is not equal to null[0m
  224 |   if (ppbuf == 0)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1minput.c:224:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  224 |   if (ppbuf == 0)[0m
      | [0;1;32m  ^
[0m[1minput.c:232:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  232 |   while (len)[0m
      | [0;1;32m  ^
[0m[1minput.c:238:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  238 |       if (inpdata->inpmode & INP_EVERY)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:238:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  238 |       if (inpdata->inpmode & INP_EVERY)[0m
      | [0;1;32m      ^
[0m[1minput.c:241:8: [0m[0;1;36mnote: [0mAssuming 'ch' is not equal to 0[0m
  241 |           if (ch)[0m
      | [0;1;32m              ^~
[0m[1minput.c:241:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  241 |           if (ch)[0m
      | [0;1;32m          ^
[0m[1minput.c:255:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  255 |       if (((unsigned char)ch & 0177) >= ' ' && ch != 0177 && inpdata->inp.len < inpdata->inpmaxlen)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:255:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  255 |       if (((unsigned char)ch & 0177) >= ' ' && ch != 0177 && inpdata->inp.len < inpdata->inpmaxlen)[0m
      | [0;1;32m                                            ^
[0m[1minput.c:282:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  282 |       else if ((ch == '\b' || ch == 0177) && inpdata->inp.pos > 0)[0m
      | [0;1;32m                ^~~~~~~~~~
[0m[1minput.c:282:17: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1minput.c:282:31: [0m[0;1;36mnote: [0mAssuming 'ch' is not equal to 127[0m
  282 |       else if ((ch == '\b' || ch == 0177) && inpdata->inp.pos > 0)[0m
      | [0;1;32m                              ^~~~~~~~~~
[0m[1minput.c:282:43: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  282 |       else if ((ch == '\b' || ch == 0177) && inpdata->inp.pos > 0)[0m
      | [0;1;32m                                          ^
[0m[1minput.c:287:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  287 |       else if (ch == '\025')                    /* CTRL-U */[0m
      | [0;1;32m               ^~~~~~~~~~~~
[0m[1minput.c:287:12: [0m[0;1;36mnote: [0mTaking false branch[0m
  287 |       else if (ch == '\025')                    /* CTRL-U */[0m
      | [0;1;32m           ^
[0m[1minput.c:297:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  297 |       else if (ch == '\013')                    /* CTRL-K */[0m
      | [0;1;32m               ^~~~~~~~~~~~
[0m[1minput.c:297:12: [0m[0;1;36mnote: [0mTaking false branch[0m
  297 |       else if (ch == '\013')                    /* CTRL-K */[0m
      | [0;1;32m           ^
[0m[1minput.c:307:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  307 |       else if (ch == '\027' && inpdata->inp.pos > 0)            /* CTRL-W */[0m
      | [0;1;32m               ^~~~~~~~~~~~
[0m[1minput.c:307:16: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minput.c:307:32: [0m[0;1;36mnote: [0mAssuming field 'pos' is > 0[0m
  307 |       else if (ch == '\027' && inpdata->inp.pos > 0)            /* CTRL-W */[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:307:12: [0m[0;1;36mnote: [0mTaking true branch[0m
  307 |       else if (ch == '\027' && inpdata->inp.pos > 0)            /* CTRL-W */[0m
      | [0;1;32m           ^
[0m[1minput.c:310:11: [0m[0;1;36mnote: [0mAssuming 'p' is <= field 'buf'[0m
  310 |           while (p > inpdata->inp.buf && *p == ' ')[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:310:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  310 |           while (p > inpdata->inp.buf && *p == ' ')[0m
      | [0;1;32m                                      ^
[0m[1minput.c:312:11: [0m[0;1;36mnote: [0m'p' is <= field 'buf'[0m
  312 |           while (p > inpdata->inp.buf && *(p - 1) != ' ')[0m
      | [0;1;32m                 ^
[0m[1minput.c:312:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  312 |           while (p > inpdata->inp.buf && *(p - 1) != ' ')[0m
      | [0;1;32m                                      ^
[0m[1minput.c:314:4: [0m[0;1;36mnote: [0mCalling 'erase_chars'[0m
  314 |           erase_chars(inpdata, p, oldp, x, 1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:179:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  179 |   ASSERT(from < to);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1minput.c:180:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  180 |   if (inpdata->inp.len > to - inpdata->inp.buf)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:180:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  180 |   if (inpdata->inp.len > to - inpdata->inp.buf)[0m
      | [0;1;32m  ^
[0m[1minput.c:183:7: [0m[0;1;36mnote: [0m'mv' is 1[0m
  183 |   if (mv)[0m
      | [0;1;32m      ^~
[0m[1minput.c:183:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  183 |   if (mv)[0m
      | [0;1;32m  ^
[0m[1minput.c:189:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  189 |   if (!(inpdata->inpmode & INP_NOECHO))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:189:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  189 |   if (!(inpdata->inpmode & INP_NOECHO))[0m
      | [0;1;32m  ^
[0m[1minput.c:192:17: [0m[0;1;36mnote: [0mAssuming 'from' is < 'to'[0m
  192 |       char *s = from < to ? from : to;[0m
      | [0;1;32m                ^~~~~~~~~
[0m[1minput.c:192:17: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1minput.c:194:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  194 |       while (s < inpdata->inp.buf+inpdata->inp.len)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minput.c:194:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  194 |       while (s < inpdata->inp.buf+inpdata->inp.len)[0m
      | [0;1;32m      ^
[0m[1minput.c:196:15: [0m[0;1;36mnote: [0mAccess of the field 'buf' at negative byte offset[0m
  196 |           mc.image = *s++;[0m
      | [0;1;32m                     ^~~~
[0m[1minput.c:199:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |       while (chng--)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  200 |         LPutChar(flayer, &mchar_blank, x++, INPUTLINE);[0m
      | [0;1;32m                                                       
[0m[1minput.c:207:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  207 | InpProcess(ppbuf, plen)[0m
      | [0;1;32m^
[0m[1minput.c:252:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |           if (ch)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  253 |             continue;[0m
      | [0;1;32m                     
[0m[1minput.c:257:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |           if (inpdata->inp.len > inpdata->inp.pos)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  258 |             bcopy(p, p+1, inpdata->inp.len - inpdata->inp.pos);[0m
      | [0;1;32m                                                               
[0m[1minput.c:258:6: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  258 |             bcopy(p, p+1, inpdata->inp.len - inpdata->inp.pos);[0m
      | [0;1;32m            ^~~~~
[0m[1minput.c:258:6: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  258 |             bcopy(p, p+1, inpdata->inp.len - inpdata->inp.pos);[0m
      | [0;1;32m            ^~~~~
[0m[1minput.c:310:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  310 |           while (p > inpdata->inp.buf && *p == ' ')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  311 |             p--;[0m
      | [0;1;32m                
[0m[1minput.c:312:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |           while (p > inpdata->inp.buf && *(p - 1) != ' ')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  313 |             p--;[0m
      | [0;1;32m                
[0m[1minput.c:354:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |           if (prev)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  355 |             sel = inpdata->inp.prev;[0m
  356 |           else if (next)[0m
      | [0;32m          } 
[0m[1minput.c:356:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |           else if (next)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  357 |             sel = inpdata->inp.next;[0m
  358 |           else[0m
      | [0;32m          } 
[0m[1minput.c:362:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |               if (!inpdata->search)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  363 |                 inpdata->search = SaveStr(inpdata->inp.buf);[0m
      | [0;1;32m                                                            
[0m[1minput.c:373:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |               if (!sel)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  374 |                 continue;       /* Did not find a match. Process the next input. */[0m
      | [0;1;32m                                                                                   
[0m[1minput.c:377:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |           if (inpdata->inp.len && !(inpdata->inpmode & INP_NOECHO))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  378 |             LClearArea(flayer, inpdata->inpstringlen, INPUTLINE, inpdata->inpstringlen + inpdata->inp.len - 1, INPUTLINE, 0, 0);[0m
      | [0;1;32m                                                                                                                                
[0m[1minput.c:380:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |           if ((prev || search) && !inpdata->inp.next)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  381 |             inphist = inpdata->inp;[0m
      | [0;1;32m                                   
[0m[1minput.c:382:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  382 |           memcpy(&inpdata->inp, sel, sizeof(struct inpline));[0m
      | [0;1;32m          ^~~~~~
[0m[1minput.c:382:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  382 |           memcpy(&inpdata->inp, sel, sizeof(struct inpline));[0m
      | [0;1;32m          ^~~~~~
[0m[1minput.c:383:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |           if (pos != -1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  384 |             inpdata->inp.pos = pos;[0m
      | [0;1;32m                                   
[0m[1minput.c:385:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |           if (inpdata->inp.len > inpdata->inpmaxlen)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  386 |             inpdata->inp.len = inpdata->inpmaxlen;[0m
      | [0;1;32m                                                  
[0m[1minput.c:387:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |           if (inpdata->inp.pos > inpdata->inp.len)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  388 |             inpdata->inp.pos = inpdata->inp.len;[0m
      | [0;1;32m                                                
[0m[1minput.c:408:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |           if (ch != '\n' && ch != '\r')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  409 |             inpdata->inp.len = 0;[0m
      | [0;1;32m                                 
[0m[1minput.c:421:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |                       if (store->next)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  422 |                         store->next->prev = store->prev;[0m
      | [0;1;32m                                                        
[0m[1minput.c:423:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |                       if (store->prev)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  424 |                         store->prev->next = store->next;[0m
      | [0;1;32m                                                        
[0m[1minput.c:433:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  433 |                   memcpy(store, &inpdata->inp, sizeof(struct inpline));[0m
      | [0;1;32m                  ^~~~~~
[0m[1minput.c:433:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  433 |                   memcpy(store, &inpdata->inp, sizeof(struct inpline));[0m
      | [0;1;32m                  ^~~~~~
[0m[1minput.c:437:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |               if (inphist.prev)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  438 |                 inphist.prev->next = store;[0m
      | [0;1;32m                                           
[0m[1minput.c:447:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |           if ((inpdata->inpmode & INP_RAW) == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  448 |             (*inpdata->inpfinfunc)(inpdata->inp.buf, inpdata->inp.len, inpdata->priv);[0m
  449 |           else[0m
      | [0;32m          } 
[0m[1minput.c:449:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  450 |             (*inpdata->inpfinfunc)(pbuf - 1, 0, inpdata->priv);[0m
      | [0;1;32m                                                               
[0m[1minput.c:451:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |           if (inpdata->search)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  452 |             free(inpdata->search);[0m
      | [0;1;32m                                  
[0m[1minput.c:480:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  480 | InpRedisplayLine(y, xs, xe, isblank)[0m
      | [0;1;32m^
[0m[1minput.c:500:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |       if (l > r - q)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  501 |         l = r - q;[0m
      | [0;1;32m                  
[0m[1minput.c:511:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |       if (l > r - q)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  512 |         l = r - q;[0m
      | [0;1;32m                  
[0m[1minput.c:517:3: [0m[0;1;35mwarning: [0m[1mValue stored to 's' is never read [clang-analyzer-deadcode.DeadStores][0m
  517 |   s = r;[0m
      | [0;1;32m  ^   ~
[0m[1minput.c:517:3: [0m[0;1;36mnote: [0mValue stored to 's' is never read[0m
  517 |   s = r;[0m
      | [0;1;32m  ^   ~
[0m[1minput.c:522:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |       if (l > r - q)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  523 |         l = r - q;[0m
      | [0;1;32m                  
[0m[1minput.c:525:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'q' is never read [clang-analyzer-deadcode.DeadStores][0m
  525 |       q += l;[0m
      | [0;1;32m      ^    ~
[0m[1minput.c:525:7: [0m[0;1;36mnote: [0mValue stored to 'q' is never read[0m
  525 |       q += l;[0m
      | [0;1;32m      ^    ~
[0m49 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[18/38][108.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpz2s58tkz.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/list_generic.c
[1mlist_generic.c:60:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   60 |   if (InitOverlayPage(sizeof(struct ListData), &ListLf, 0))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   61 |     return NULL;[0m
      | [0;1;32m                
[0m[1mlist_generic.c:79:45: [0m[0;1;35mwarning: [0m[1mAccess to field 'prev' results in a dereference of a null pointer (loaded from variable 'top') [clang-analyzer-core.NullDereference][0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m                                            ^
[0m[1mlist_generic.c:147:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  147 |   while (*plen > 0)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mlist_generic.c:147:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  147 |   while (*plen > 0)[0m
      | [0;1;32m  ^
[0m[1mlist_generic.c:152:11: [0m[0;1;36mnote: [0mAssuming field 'start' is 0[0m
  152 |       if (!flayer->l_mouseevent.start && ldata->list_fn->gl_pinput &&[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:152:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mlist_generic.c:152:42: [0m[0;1;36mnote: [0mAssuming field 'gl_pinput' is null[0m
  152 |       if (!flayer->l_mouseevent.start && ldata->list_fn->gl_pinput &&[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:152:68: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  152 |       if (!flayer->l_mouseevent.start && ldata->list_fn->gl_pinput &&[0m
      | [0;1;32m                                                                   ^
[0m[1mlist_generic.c:160:32: [0m[0;1;36mnote: [0mField 'start' is 0[0m
  160 |       if (flayer->l_mouseevent.start)[0m
      | [0;1;32m                               ^
[0m[1mlist_generic.c:160:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  160 |       if (flayer->l_mouseevent.start)[0m
      | [0;1;32m      ^
[0m[1mlist_generic.c:177:11: [0m[0;1;36mnote: [0mAssuming field 'selected' is non-null[0m
  177 |       if (!ldata->selected)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:177:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  177 |       if (!ldata->selected)[0m
      | [0;1;32m      ^
[0m[1mlist_generic.c:186:7: [0m[0;1;36mnote: [0mControl jumps to 'case 2:'  at line 242[0m
  186 |       switch (ch)[0m
      | [0;1;32m      ^
[0m[1mlist_generic.c:244:11: [0m[0;1;36mnote: [0mAssuming field 'prev' is non-null[0m
  244 |           for (; ldata->selected->prev && --count;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:244:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mlist_generic.c:244:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  244 |           for (; ldata->selected->prev && --count;[0m
      | [0;1;32m          ^
[0m[1mlist_generic.c:244:11: [0m[0;1;36mnote: [0mAssuming field 'prev' is null[0m
  244 |           for (; ldata->selected->prev && --count;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:244:33: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  244 |           for (; ldata->selected->prev && --count;[0m
      | [0;1;32m                                       ^
[0m[1mlist_generic.c:247:4: [0m[0;1;36mnote: [0m Execution continues on line 308[0m
  247 |           break;[0m
      | [0;1;32m          ^
[0m[1mlist_generic.c:308:11: [0m[0;1;36mnote: [0mAssuming 'old' is not equal to field 'selected'[0m
  308 |       if (old == ldata->selected)       /* The selection didn't change */[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:308:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  308 |       if (old == ldata->selected)       /* The selection didn't change */[0m
      | [0;1;32m      ^
[0m[1mlist_generic.c:311:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  311 |       if (ldata->selected->y == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:311:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  311 |       if (ldata->selected->y == -1)[0m
      | [0;1;32m      ^
[0m[1mlist_generic.c:315:4: [0m[0;1;36mnote: [0mCalling 'glist_decide_top'[0m
  315 |           glist_decide_top(ldata);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:79:10: [0m[0;1;36mnote: [0m'count' is not equal to 0[0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m         ^~~~~
[0m[1mlist_generic.c:79:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mlist_generic.c:79:19: [0m[0;1;36mnote: [0mAssuming 'top' is not equal to field 'root'[0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:79:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m  ^
[0m[1mlist_generic.c:79:39: [0m[0;1;36mnote: [0mNull pointer value stored to 'top'[0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m                                      ^~~~~~~~~~~~~~~
[0m[1mlist_generic.c:79:10: [0m[0;1;36mnote: [0mAssuming 'count' is not equal to 0[0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m         ^~~~~
[0m[1mlist_generic.c:79:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mlist_generic.c:79:19: [0m[0;1;36mnote: [0mAssuming 'top' is not equal to field 'root'[0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~
[0m[1mlist_generic.c:79:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m  ^
[0m[1mlist_generic.c:79:45: [0m[0;1;36mnote: [0mAccess to field 'prev' results in a dereference of a null pointer (loaded from variable 'top')[0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m                                            ^~~
[0m[1mlist_generic.c:79:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   for (; count && top != ldata->root; top = top->prev, count--)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m   80 |     ;[0m
      | [0;1;32m     
[0m[1mlist_generic.c:88:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |   for (; row; row = (dir == 1) ? row->next : row->prev)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m   89 |     if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
   90 |       return row;[0m
      | [0;1;32m                 
[0m[1mlist_generic.c:89:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |     if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m   90 |       return row;[0m
      | [0;1;32m                 
[0m[1mlist_generic.c:92:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |   if (dir == 1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   93 |     row = ldata->root;[0m
   94 |   else[0m
      | [0;32m  } 
[0m[1mlist_generic.c:97:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |       if (!start->next)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   98 |         row = start;[0m
   99 |       else[0m
      | [0;32m      } 
[0m[1mlist_generic.c:99:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  100 |         for (row = start->next; row->next; row = row->next)[0m
  101 |           ;[0m
      | [0;1;32m           
[0m[1mlist_generic.c:100:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |         for (row = start->next; row->next; row = row->next)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  101 |           ;[0m
      | [0;1;32m           
[0m[1mlist_generic.c:104:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |   for (; row != start; row = (dir == 1) ? row->next : row->prev)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  105 |     if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
  106 |       break;[0m
      | [0;1;32m            
[0m[1mlist_generic.c:105:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |     if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  106 |       break;[0m
      | [0;1;32m            
[0m[1mlist_generic.c:119:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |   if (len > 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  120 |     ldata->search = SaveStr(buf);[0m
  121 |   else[0m
      | [0;32m  } 
[0m[1mlist_generic.c:121:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  122 |     return;[0m
      | [0;1;32m           
[0m[1mlist_generic.c:124:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |   for (row = ldata->selected; row; row = row->next)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  125 |     if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
  126 |       break;[0m
      | [0;1;32m            
[0m[1mlist_generic.c:125:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |     if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  126 |       break;[0m
      | [0;1;32m            
[0m[1mlist_generic.c:128:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |   if (!row)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  129 |     for (row = ldata->root; row != ldata->selected; row = row->next)[0m
  130 |       if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
  131 |         break;[0m
      | [0;1;32m              
[0m[1mlist_generic.c:129:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |     for (row = ldata->root; row != ldata->selected; row = row->next)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  130 |       if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
  131 |         break;[0m
      | [0;1;32m              
[0m[1mlist_generic.c:130:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |       if (ldata->list_fn->gl_matchrow(ldata, row, ldata->search))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  131 |         break;[0m
      | [0;1;32m              
[0m[1mlist_generic.c:133:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |   if (row == ldata->selected)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  134 |     return;[0m
      | [0;1;32m           
[0m[1mlist_generic.c:137:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |   if (ldata->selected->y == -1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  138 |     glist_decide_top(ldata);[0m
      | [0;1;32m                            
[0m[1mlist_generic.c:153:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |           ldata->list_fn->gl_pinput(ldata, ppbuf, plen))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  154 |         continue;[0m
      | [0;1;32m                 
[0m[1mlist_generic.c:170:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |               if (r)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  171 |                 ch = 0222;[0m
  172 |               else[0m
      | [0;32m              } 
[0m[1mlist_generic.c:172:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  173 |                 continue;[0m
      | [0;1;32m                         
[0m[1mlist_generic.c:189:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  189 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mlist_generic.c:198:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |           if (!ldata->selected->prev)   /* There's no where to go */[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  199 |             break;[0m
      | [0;1;32m                  
[0m[1mlist_generic.c:200:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  200 |           ldata->selected = old->prev;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  201 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlist_generic.c:206:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |           if (!ldata->selected->next)   /* Nothing to do */[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  207 |             break;[0m
      | [0;1;32m                  
[0m[1mlist_generic.c:208:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  208 |           ldata->selected = old->next;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  209 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlist_generic.c:214:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  214 |           *plen = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  215 |           return;[0m
      | [0;1;32m                
[0m      | [0;32m                ;} 
[0m[1mlist_generic.c:220:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  220 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mlist_generic.c:224:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |           while (ldata->selected->next)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  225 |             ldata->selected = ldata->selected->next;[0m
      | [0;1;32m                                                    
[0m[1mlist_generic.c:226:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  226 |           if (ldata->selected->y != -1)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  227 |             {[0m
  228 |               /* Both old and current selections are on the screen. So we can just[0m
  229 |                * redraw these two affected rows. */[0m
  230 |             }[0m
  231 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlist_generic.c:236:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  236 |           for (; ldata->selected->next && --count;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  237 |               ldata->selected = ldata->selected->next)[0m
  238 |             ;[0m
  239 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlist_generic.c:237:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |               ldata->selected = ldata->selected->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  238 |             ;[0m
      | [0;1;32m             
[0m[1mlist_generic.c:244:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  244 |           for (; ldata->selected->prev && --count;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  245 |               ldata->selected = ldata->selected->prev)[0m
  246 |             ;[0m
  247 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlist_generic.c:245:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |               ldata->selected = ldata->selected->prev)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  246 |             ;[0m
      | [0;1;32m             
[0m[1mlist_generic.c:250:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  250 |           if (ldata->list_fn->gl_matchrow)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  251 |             {[0m
  252 |               char *s;[0m
  253 |               Input("Search: ", 80, INP_COOKED, glist_search, (char *)ldata, 0);[0m
  254 |               if ((s = ldata->search))[0m
  255 |                 {[0m
  256 |                   for (; *s; s++)[0m
  257 |                     {[0m
  258 |                       char *ss = s;[0m
  259 |                       int n = 1;[0m
  260 |                       LayProcess(&ss, &n);[0m
  261 |                     }[0m
  262 |                 }[0m
  263 |             }[0m
  264 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlist_generic.c:269:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  269 |           if (ldata->list_fn->gl_matchrow && ldata->search)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  270 |             ldata->selected = glist_search_dir(ldata, ldata->selected, 1);[0m
  271 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlist_generic.c:269:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |           if (ldata->list_fn->gl_matchrow && ldata->search)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  270 |             ldata->selected = glist_search_dir(ldata, ldata->selected, 1);[0m
      | [0;1;32m                                                                          
[0m[1mlist_generic.c:274:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  274 |           if (ldata->list_fn->gl_matchrow && ldata->search)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  275 |             ldata->selected = glist_search_dir(ldata, ldata->selected, -1);[0m
  276 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlist_generic.c:274:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |           if (ldata->list_fn->gl_matchrow && ldata->search)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  275 |             ldata->selected = glist_search_dir(ldata, ldata->selected, -1);[0m
      | [0;1;32m                                                                           
[0m[1mlist_generic.c:280:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  280 |           if (flayer->l_mouseevent.start)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mlist_generic.c:283:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |               if (button == 'a') /* Scroll down */[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  284 |                 ch = 'j';[0m
  285 |               else if (button == '`') /* Scroll up */[0m
      | [0;32m              } 
[0m[1mlist_generic.c:285:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |               else if (button == '`') /* Scroll up */[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  286 |                 ch = 'k';[0m
  287 |               else if (button == ' ') /* Left click */[0m
      | [0;32m              } 
[0m[1mlist_generic.c:290:21: [0m[0;1;35mwarning: [0m[1mValue stored to 'r' during its initialization is never read [clang-analyzer-deadcode.DeadStores][0m
  290 |                   struct ListRow *r = ldata->top;[0m
      | [0;1;32m                                  ^   ~~~~~~~~~~
[0m[1mlist_generic.c:290:21: [0m[0;1;36mnote: [0mValue stored to 'r' during its initialization is never read[0m
  290 |                   struct ListRow *r = ldata->top;[0m
      | [0;1;32m                                  ^   ~~~~~~~~~~
[0m[1mlist_generic.c:291:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                   for (r = ldata->top; r && r->y != -1 && r->y != y; r = r->next)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  292 |                     ;[0m
      | [0;1;32m                     
[0m[1mlist_generic.c:293:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |                   if (r && r->y == y)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  294 |                     ldata->selected = r;[0m
      | [0;1;32m                                        
[0m[1mlist_generic.c:297:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  298 |                 ch = 0;[0m
      | [0;1;32m                       
[0m[1mlist_generic.c:300:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |               if (ch)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  301 |                 goto processchar;[0m
      | [0;1;32m                                 
[0m[1mlist_generic.c:303:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  304 |             LayProcessMouseSwitch(flayer, 1);[0m
      | [0;1;32m                                             
[0m[1mlist_generic.c:308:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |       if (old == ldata->selected)       /* The selection didn't change */[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  309 |         continue;[0m
      | [0;1;32m                 
[0m[1mlist_generic.c:339:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |   if (ldata->list_fn->gl_free)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  340 |     ldata->list_fn->gl_free(ldata);[0m
      | [0;1;32m                                   
[0m[1mlist_generic.c:357:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |   if (!isblank)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  358 |     LClearArea(flayer, xs, y, xe, y, 0, 0);[0m
      | [0;1;32m                                           
[0m[1mlist_generic.c:360:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |   if (ldata->top && y < ldata->top->y)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  361 |     ldata->list_fn->gl_printheader(ldata);[0m
  362 |   else if (y + 1 == flayer->l_height)[0m
      | [0;32m  } 
[0m[1mlist_generic.c:362:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |   else if (y + 1 == flayer->l_height)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  363 |     ldata->list_fn->gl_printfooter(ldata);[0m
  364 |   else[0m
      | [0;32m  } 
[0m[1mlist_generic.c:367:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |       for (row = ldata->top; row && row->y != -1; row = row->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  368 |         if (row->y == y)[0m
  369 |           {[0m
  370 |             ldata->list_fn->gl_printrow(ldata, row);[0m
  371 |             break;[0m
  372 |           }[0m
      | [0;1;32m           
[0m[1mlist_generic.c:388:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |   if (wi < 10 || he < 5)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  389 |     return -1;[0m
      | [0;1;32m              
[0m[1mlist_generic.c:414:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |       if (r->next)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  415 |         r->next->prev = r;[0m
      | [0;1;32m                          
[0m[1mlist_generic.c:420:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |       if (ldata->root)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  421 |         ldata->root->prev = r;[0m
      | [0;1;32m                              
[0m[1mlist_generic.c:452:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |   if (!list->top)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  453 |     list->top = list->root;[0m
      | [0;1;32m                           
[0m[1mlist_generic.c:454:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |   if (!list->selected)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  455 |     list->selected = list->root;[0m
      | [0;1;32m                                
[0m[1mlist_generic.c:457:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |   for (row = list->root; row != list->top; row = row->next)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  458 |     row->y = -1;[0m
      | [0;1;32m                
[0m[1mlist_generic.c:468:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |       if (y + 1 == flayer->l_height)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  469 |         break;[0m
      | [0;1;32m              
[0m[1mlist_generic.c:471:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |   for (; row; row = row->next)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  472 |     row->y = -1;[0m
      | [0;1;32m                
[0m[1mlist_generic.c:475:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  475 |   if (list->selected && list->selected->y != -1)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  476 |     flayer->l_y = list->selected->y;[0m
  477 |   else[0m
      | [0;32m  } 
[0m[1mlist_generic.c:477:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  478 |     flayer->l_y = flayer->l_height - 1;[0m
      | [0;1;32m                                       
[0m70 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[19/38][113.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpo6gorpm1.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/attacher.c
[1mattacher.c:86:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   86 | AttachSigCont SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:96:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   96 | QueryResultSuccess SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:103:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  103 | QueryResultFail SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:120:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  120 | WriteMessage(s, m)[0m
      | [0;1;32m^
[0m[1mattacher.c:128:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |   if (is_socket && m->type == MSG_ATTACH)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  129 |     return SendAttachMsg(s, m, attach_fd);[0m
      | [0;1;32m                                          
[0m[1mattacher.c:134:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |       if (r == -1 && errno == EINTR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  135 |         continue;[0m
      | [0;1;32m                 
[0m[1mattacher.c:136:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |       if (r == -1 || r == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  137 |         return -1;[0m
      | [0;1;32m                  
[0m[1mattacher.c:145:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  145 | Attach(how)[0m
      | [0;1;32m^
[0m[1mattacher.c:221:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |       if (setresuid(multi_uid, own_uid, multi_uid))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  222 |         Panic(errno, "setresuid");[0m
      | [0;1;32m                                  
[0m[1mattacher.c:227:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |       if (chmod(attach_tty, 0666))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  228 |         Panic(errno, "chmod %s", attach_tty);[0m
      | [0;1;32m                                             
[0m[1mattacher.c:234:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  234 |   bzero((char *) &m, sizeof(m));[0m
      | [0;1;32m  ^~~~~
[0m[1mattacher.c:234:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  234 |   bzero((char *) &m, sizeof(m));[0m
      | [0;1;32m  ^~~~~
[0m[1mattacher.c:237:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  237 |   strncpy(m.m_tty, attach_tty_is_in_new_ns ? attach_tty_name_in_ns : attach_tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:237:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  237 |   strncpy(m.m_tty, attach_tty_is_in_new_ns ? attach_tty_name_in_ns : attach_tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:265:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  265 |           if (rflag && (rflag & 1) == 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  266 |             return 0;[0m
  267 |           if (quietflag)[0m
  268 |             eexit(10);[0m
  269 |           if (SockMatch && *SockMatch) {[0m
  270 |             Panic(0, "There is no screen to be %sed matching %s.",[0m
  271 |                 xflag ? "attach" :[0m
  272 |                 dflag ? "detach" :[0m
  273 |                         "resum", SockMatch);[0m
  274 |           } else {[0m
  275 |             Panic(0, "There is no screen to be %sed.",[0m
  276 |                 xflag ? "attach" :[0m
  277 |                 dflag ? "detach" :[0m
  278 |                         "resum");[0m
  279 |           }[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mattacher.c:265:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |           if (rflag && (rflag & 1) == 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  266 |             return 0;[0m
      | [0;1;32m                     
[0m[1mattacher.c:267:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |           if (quietflag)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  268 |             eexit(10);[0m
      | [0;1;32m                      
[0m[1mattacher.c:282:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  282 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mattacher.c:284:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  284 |           if (rflag < 3)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  285 |             {[0m
  286 |               if (quietflag)[0m
  287 |                 eexit(10 + n);[0m
  288 |               Panic(0, "Type \"screen [-d] -r [pid.]tty.host\" to resume one of them.");[0m
  289 |             }[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mattacher.c:286:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |               if (quietflag)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  287 |                 eexit(10 + n);[0m
      | [0;1;32m                              
[0m[1mattacher.c:302:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |       if (setuid(real_uid))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  303 |         Panic(errno, "setuid");[0m
      | [0;1;32m                               
[0m[1mattacher.c:313:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |   if (setgid(real_gid))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  314 |     Panic(errno, "setgid");[0m
      | [0;1;32m                           
[0m[1mattacher.c:321:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |       if (*s > '9' || *s < '0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  322 |         break;[0m
      | [0;1;32m              
[0m[1mattacher.c:327:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |   if (stat(SockPath, &st) == -1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  328 |     Panic(errno, "stat %s", SockPath);[0m
      | [0;1;32m                                      
[0m[1mattacher.c:329:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |   if ((st.st_mode & 0600) != 0600)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  330 |     Panic(0, "Socket is in wrong mode (%03o)", (int)st.st_mode);[0m
      | [0;1;32m                                                                
[0m[1mattacher.c:335:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |   if ((xflag || rflag) && dflag && (st.st_mode & 0700) == 0600)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  336 |     dflag = 0;[0m
      | [0;1;32m              
[0m[1mattacher.c:342:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |   if ((dflag || !xflag) && (st.st_mode & 0700) != (dflag ? 0700 : 0600))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  343 |     Panic(0, "That screen is %sdetached.", dflag ? "already " : "not ");[0m
      | [0;1;32m                                                                        
[0m[1mattacher.c:349:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  349 |       strncpy(m.m.detach.duser, LoginName, sizeof(m.m.detach.duser) - 1); [0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:349:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  349 |       strncpy(m.m.detach.duser, LoginName, sizeof(m.m.detach.duser) - 1); [0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:352:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |       if (dflag == 2)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  353 |         m.type = MSG_POW_DETACH;[0m
  354 |       else[0m
      | [0;32m      } 
[0m[1mattacher.c:354:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  355 | # endif[0m
  356 |         m.type = MSG_DETACH;[0m
      | [0;1;32m                            
[0m[1mattacher.c:360:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |       if (WriteMessage(lasts, &m))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  361 |         Panic(errno, "WriteMessage");[0m
      | [0;1;32m                                     
[0m[1mattacher.c:363:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |       while (!ContinuePlease)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  364 |         pause();        /* wait for SIGCONT */[0m
      | [0;1;32m                                              
[0m[1mattacher.c:367:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |       if (how != MSG_ATTACH)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  368 |         return 0;       /* we detached it. jw. */[0m
      | [0;1;32m                                                 
[0m[1mattacher.c:370:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |       if ((lasts = MakeClientSocket(0, is_socket)) == -1)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  371 |         Panic(0, "Cannot contact screen again. Sigh.");[0m
      | [0;1;32m                                                       
[0m[1mattacher.c:376:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  376 |   strncpy(m.m.attach.envterm, attach_term, MAXTERMLEN);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:376:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  376 |   strncpy(m.m.attach.envterm, attach_term, MAXTERMLEN);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:380:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  380 |   strncpy(m.m.attach.auser, LoginName, sizeof(m.m.attach.auser) - 1); [0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:380:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  380 |   strncpy(m.m.attach.auser, LoginName, sizeof(m.m.attach.auser) - 1); [0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:384:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  384 |   strncpy(m.m.attach.preselect, preselect ? preselect : "", sizeof(m.m.attach.preselect) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:384:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  384 |   strncpy(m.m.attach.preselect, preselect ? preselect : "", sizeof(m.m.attach.preselect) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:389:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |   if ((s = getenv("LINES")))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  390 |     m.m.attach.lines = atoi(s);[0m
      | [0;1;32m                               
[0m[1mattacher.c:391:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |   if ((s = getenv("COLUMNS")))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  392 |     m.m.attach.columns = atoi(s);[0m
      | [0;1;32m                                 
[0m[1mattacher.c:397:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |   if (dflag == 2)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  398 |     m.m.attach.detachfirst = MSG_POW_DETACH;[0m
  399 |   else[0m
      | [0;32m  } 
[0m[1mattacher.c:401:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |   if (dflag)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  402 |     m.m.attach.detachfirst = MSG_DETACH;[0m
  403 |   else[0m
      | [0;32m  } 
[0m[1mattacher.c:403:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  404 | #endif[0m
  405 |     m.m.attach.detachfirst = MSG_ATTACH;[0m
      | [0;1;32m                                        
[0m[1mattacher.c:409:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |   if (multi && (how == MSG_ATTACH || how == MSG_CONT))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  410 |     signal(SIGCONT, AttachSigCont);[0m
      | [0;1;32m                                   
[0m[1mattacher.c:413:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  413 |   if (WriteMessage(lasts, &m))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  414 |     Panic(errno, "WriteMessage");[0m
      | [0;1;32m                                 
[0m[1mattacher.c:420:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |       while (!ContinuePlease)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  421 |         pause();        /* wait for SIGCONT */[0m
      | [0;1;32m                                              
[0m[1mattacher.c:428:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |       if (tty_oldmode >= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  429 |         if (chmod(attach_tty, tty_oldmode))[0m
  430 |           Panic(errno, "chmod %s", attach_tty);[0m
      | [0;1;32m                                               
[0m[1mattacher.c:429:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |         if (chmod(attach_tty, tty_oldmode))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  430 |           Panic(errno, "chmod %s", attach_tty);[0m
      | [0;1;32m                                               
[0m[1mattacher.c:453:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  453 | AttacherSigAlarm SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:468:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  468 | AttacherSigInt SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:481:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  481 | AttacherFinit SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:494:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  494 |       bzero((char *) &m, sizeof(m));[0m
      | [0;1;32m      ^~~~~
[0m[1mattacher.c:494:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  494 |       bzero((char *) &m, sizeof(m));[0m
      | [0;1;32m      ^~~~~
[0m[1mattacher.c:495:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  495 |       strncpy(m.m_tty, attach_tty_is_in_new_ns ? attach_tty_name_in_ns : attach_tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:495:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  495 |       strncpy(m.m_tty, attach_tty_is_in_new_ns ? attach_tty_name_in_ns : attach_tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:511:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |       if (setuid(own_uid))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  512 |         Panic(errno, "setuid");[0m
      | [0;1;32m                               
[0m[1mattacher.c:522:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  522 | AttacherFinitBye SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:530:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |   if (setgid(real_gid))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  531 |     Panic(errno, "setgid");[0m
      | [0;1;32m                           
[0m[1mattacher.c:533:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |   if (setuid(own_uid))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  534 |     Panic(errno, "setuid");[0m
      | [0;1;32m                           
[0m[1mattacher.c:540:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |   if ((ppid = getppid()) > 1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  541 |     Kill(ppid, SIGHUP);         /* carefully say good bye. jw. */[0m
      | [0;1;32m                                                                 
[0m[1mattacher.c:567:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  567 | SigStop SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:578:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  578 | DoLock SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:593:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  593 | AttacherWinch SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:705:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  705 | LockHup SIGDEFARG[0m
      | [0;1;32m^
[0m[1mattacher.c:708:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (setgid(real_gid))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  709 |     Panic(errno, "setgid");[0m
      | [0;1;32m                           
[0m[1mattacher.c:711:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |   if (setuid(own_uid))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  712 |     Panic(errno, "setuid");[0m
      | [0;1;32m                           
[0m[1mattacher.c:717:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   if (ppid > 1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  718 |     Kill(ppid, SIGHUP);[0m
      | [0;1;32m                       
[0m[1mattacher.c:729:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  729 |   for (sig = 1; sig < NSIG; sig++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  730 |     sigs[sig] = signal(sig, sig == SIGCHLD ? SIG_DFL : SIG_IGN);[0m
      | [0;1;32m                                                                
[0m[1mattacher.c:744:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |           if (setgid(real_gid))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  745 |             Panic(errno, "setgid");[0m
      | [0;1;32m                                   
[0m[1mattacher.c:747:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |           if (setuid(own_uid))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  748 |             Panic(errno, "setuid");[0m
      | [0;1;32m                                   
[0m[1mattacher.c:757:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  757 |       if (pid == -1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  758 |         Msg(errno, "Cannot lock terminal - fork failed");[0m
  759 |       else[0m
      | [0;32m      } 
[0m[1mattacher.c:774:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |                  )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  775 |             errno = 0;[0m
      | [0;1;32m                      
[0m[1mattacher.c:784:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  784 |               fprintf(stderr, "Lock: %s: Killed by signal: %d%s\n", prg,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mattacher.c:784:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  784 |               fprintf(stderr, "Lock: %s: Killed by signal: %d%s\n", prg,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mattacher.c:792:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  792 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  793 |             printf("%s", LockEnd);[0m
      | [0;1;32m                                  
[0m[1mattacher.c:811:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  811 |       if (sigs[sig] != (sigret_t(*)__P(SIGPROTOARG)) -1)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  812 |         signal(sig, sigs[sig]);[0m
      | [0;1;32m                               
[0m[1mattacher.c:899:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  899 |           strncpy(mypass, pass, sizeof(mypass) - 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mattacher.c:899:11: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  899 |           strncpy(mypass, pass, sizeof(mypass) - 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mattacher.c:901:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  901 |           if (*mypass == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  902 |             return;[0m
      | [0;1;32m                   
[0m[1mattacher.c:907:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  907 |                   fprintf(stderr, "Passwords don't match.\007\n");[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mattacher.c:907:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  907 |                   fprintf(stderr, "Passwords don't match.\007\n");[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mattacher.c:915:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  915 |           fprintf(stderr, "Getpass error.\007\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mattacher.c:915:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  915 |           fprintf(stderr, "Getpass error.\007\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mattacher.c:926:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  926 |           fprintf(stderr, "crypt() error.\007\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mattacher.c:926:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  926 |           fprintf(stderr, "crypt() error.\007\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mattacher.c:937:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  937 |   strncpy(fullname, ppp->pw_gecos, sizeof(fullname) - 9);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:937:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  937 |   strncpy(fullname, ppp->pw_gecos, sizeof(fullname) - 9);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:940:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |   if ((cp1 = index(fullname, ',')) != NULL)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  941 |     *cp1 = '\0';[0m
      | [0;1;32m                
[0m[1mattacher.c:944:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  944 |       strncpy(cp1, ppp->pw_name, 8);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:944:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  944 |       strncpy(cp1, ppp->pw_name, 8);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:946:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |       if (*cp1 >= 'a' && *cp1 <= 'z')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  947 |         *cp1 -= 'a' - 'A';[0m
      | [0;1;32m                          
[0m[1mattacher.c:950:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  950 |   sprintf(message, "Screen used by %s%s<%s> on %s.\nPassword:\007",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:950:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  950 |   sprintf(message, "Screen used by %s%s<%s> on %s.\nPassword:\007",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:988:23: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  988 |           char *buf = crypt(cp1, pass);[0m
      | [0;1;32m                      ^     ~~~
[0m[1mattacher.c:895:7: [0m[0;1;36mnote: [0mAssuming 'pass' is equal to null[0m
  895 |   if (pass == 0 || *pass == 0)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mattacher.c:895:17: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  895 |   if (pass == 0 || *pass == 0)[0m
      | [0;1;32m                ^
[0m[1mattacher.c:897:12: [0m[0;1;36mnote: [0mAssuming 'pass' is non-null[0m
  897 |       if ((pass = getpass("Key:   ")))[0m
      | [0;1;32m           ^~~~
[0m[1mattacher.c:897:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  897 |       if ((pass = getpass("Key:   ")))[0m
      | [0;1;32m      ^
[0m[1mattacher.c:901:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  901 |           if (*mypass == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mattacher.c:901:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  901 |           if (*mypass == 0)[0m
      | [0;1;32m          ^
[0m[1mattacher.c:903:16: [0m[0;1;36mnote: [0mAssuming 'pass' is non-null[0m
  903 |           if ((pass = getpass("Again: ")))[0m
      | [0;1;32m               ^~~~
[0m[1mattacher.c:903:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  903 |           if ((pass = getpass("Again: ")))[0m
      | [0;1;32m          ^
[0m[1mattacher.c:905:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  905 |               if (strcmp(mypass, pass))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~
[0m[1mattacher.c:905:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  905 |               if (strcmp(mypass, pass))[0m
      | [0;1;32m              ^
[0m[1mattacher.c:913:11: [0m[0;1;36mnote: [0m'pass' is not equal to null[0m
  913 |       if (pass == 0)[0m
      | [0;1;32m          ^~~~
[0m[1mattacher.c:913:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  913 |       if (pass == 0)[0m
      | [0;1;32m      ^
[0m[1mattacher.c:924:11: [0m[0;1;36mnote: [0mAssuming 'pass' is non-null[0m
  924 |       if (!pass)[0m
      | [0;1;32m          ^~~~~
[0m[1mattacher.c:924:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  924 |       if (!pass)[0m
      | [0;1;32m      ^
[0m[1mattacher.c:936:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  936 |   debug("screen_builtin_lck looking in gcos field\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mattacher.c:940:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  940 |   if ((cp1 = index(fullname, ',')) != NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mattacher.c:940:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  940 |   if ((cp1 = index(fullname, ',')) != NULL)[0m
      | [0;1;32m  ^
[0m[1mattacher.c:942:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  942 |   if ((cp1 = index(fullname, '&')) != NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mattacher.c:942:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  942 |   if ((cp1 = index(fullname, '&')) != NULL)[0m
      | [0;1;32m  ^
[0m[1mattacher.c:946:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  946 |       if (*cp1 >= 'a' && *cp1 <= 'z')[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mattacher.c:946:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  946 |       if (*cp1 >= 'a' && *cp1 <= 'z')[0m
      | [0;1;32m                      ^
[0m[1mattacher.c:951:21: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  951 |           fullname, fullname[0] ? " " : "", ppp->pw_name, HostName);[0m
      | [0;1;32m                    ^~~~~~~~~~~
[0m[1mattacher.c:951:21: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mattacher.c:954:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  954 |   for (;;)[0m
      | [0;1;32m  ^
[0m[1mattacher.c:956:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  956 |       debug("screen_builtin_lck awaiting password\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mattacher.c:958:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  958 |       if ((cp1 = getpass(message)) == NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mattacher.c:958:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  958 |       if ((cp1 = getpass(message)) == NULL)[0m
      | [0;1;32m      ^
[0m[1mattacher.c:963:11: [0m[0;1;36mnote: [0m'using_pam' is 0[0m
  963 |       if (using_pam)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mattacher.c:963:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  963 |       if (using_pam)[0m
      | [0;1;32m      ^
[0m[1mattacher.c:989:15: [0m[0;1;36mnote: [0mAssuming 'buf' is null[0m
  989 |           if (buf && !strncmp(buf, pass, strlen(pass)))[0m
      | [0;1;32m              ^~~
[0m[1mattacher.c:989:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  989 |           if (buf && !strncmp(buf, pass, strlen(pass)))[0m
      | [0;1;32m                  ^
[0m[1mattacher.c:992:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  992 |       debug("screen_builtin_lck: NO!!!!!\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mattacher.c:954:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  954 |   for (;;)[0m
      | [0;1;32m  ^
[0m[1mattacher.c:956:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  956 |       debug("screen_builtin_lck awaiting password\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mattacher.c:958:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  958 |       if ((cp1 = getpass(message)) == NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mattacher.c:958:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  958 |       if ((cp1 = getpass(message)) == NULL)[0m
      | [0;1;32m      ^
[0m[1mattacher.c:963:11: [0m[0;1;36mnote: [0m'using_pam' is 0[0m
  963 |       if (using_pam)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mattacher.c:963:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  963 |       if (using_pam)[0m
      | [0;1;32m      ^
[0m[1mattacher.c:989:15: [0m[0;1;36mnote: [0mAssuming 'buf' is null[0m
  989 |           if (buf && !strncmp(buf, pass, strlen(pass)))[0m
      | [0;1;32m              ^~~
[0m[1mattacher.c:989:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  989 |           if (buf && !strncmp(buf, pass, strlen(pass)))[0m
      | [0;1;32m                  ^
[0m[1mattacher.c:992:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  992 |       debug("screen_builtin_lck: NO!!!!!\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mattacher.c:954:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  954 |   for (;;)[0m
      | [0;1;32m  ^
[0m[1mattacher.c:956:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  956 |       debug("screen_builtin_lck awaiting password\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mattacher.c:958:12: [0m[0;1;36mnote: [0mValue assigned to 'cp1'[0m
  958 |       if ((cp1 = getpass(message)) == NULL)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mattacher.c:958:11: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  958 |       if ((cp1 = getpass(message)) == NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mattacher.c:958:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  958 |       if ((cp1 = getpass(message)) == NULL)[0m
      | [0;1;32m      ^
[0m[1mattacher.c:963:11: [0m[0;1;36mnote: [0m'using_pam' is 0[0m
  963 |       if (using_pam)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mattacher.c:963:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  963 |       if (using_pam)[0m
      | [0;1;32m      ^
[0m[1mattacher.c:988:23: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
  988 |           char *buf = crypt(cp1, pass);[0m
      | [0;1;32m                      ^     ~~~
[0m[1mattacher.c:989:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  989 |           if (buf && !strncmp(buf, pass, strlen(pass)))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  990 |             break;[0m
      | [0;1;32m                  
[0m[1mattacher.c:993:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  993 |       bzero(cp1, strlen(cp1));[0m
      | [0;1;32m      ^~~~~
[0m[1mattacher.c:993:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  993 |       bzero(cp1, strlen(cp1));[0m
      | [0;1;32m      ^~~~~
[0m[1mattacher.c:995:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  995 |   bzero(cp1, strlen(cp1));[0m
      | [0;1;32m  ^~~~~
[0m[1mattacher.c:995:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  995 |   bzero(cp1, strlen(cp1));[0m
      | [0;1;32m  ^~~~~
[0m[1mattacher.c:1003:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1003 | SendCmdMessage(sty, match, av, query)[0m
      | [0;1;32m^
[0m[1mattacher.c:1018:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1018 |       if (i == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1019 |         Panic(0, "No screen session found.");[0m
      | [0;1;32m                                             
[0m[1mattacher.c:1020:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1020 |       if (i != 1)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1021 |         Panic(0, "Use -S to specify a session.");[0m
      | [0;1;32m                                                 
[0m[1mattacher.c:1026:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1026 |       if (strlen(sty) > NAME_MAX)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1027 |         sty[NAME_MAX] = 0;[0m
      | [0;1;32m                          
[0m[1mattacher.c:1029:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1029 |       if (strlen(sty) > 2 * MAXSTR - 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1030 |         sty[2 * MAXSTR - 1] = 0;[0m
      | [0;1;32m                                
[0m[1mattacher.c:1031:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1031 |       sprintf(SockPath + strlen(SockPath), "/%s", sty);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:1031:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1031 |       sprintf(SockPath + strlen(SockPath), "/%s", sty);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:1033:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1033 |       if ((s = MakeClientSocket(1, is_socket)) == -1)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1034 |         exit(1);[0m
      | [0;1;32m                
[0m[1mattacher.c:1036:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 1036 |   bzero((char *)&m, sizeof(m));[0m
      | [0;1;32m  ^~~~~
[0m[1mattacher.c:1036:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 1036 |   bzero((char *)&m, sizeof(m));[0m
      | [0;1;32m  ^~~~~
[0m[1mattacher.c:1040:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1040 |       strncpy(m.m_tty, attach_tty_is_in_new_ns ? attach_tty_name_in_ns : attach_tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:1040:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1040 |       strncpy(m.m_tty, attach_tty_is_in_new_ns ? attach_tty_name_in_ns : attach_tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:1048:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1048 |       if (p + len >= m.m.command.cmd + sizeof(m.m.command.cmd) - 1)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1049 |         break;[0m
      | [0;1;32m              
[0m[1mattacher.c:1050:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1050 |       strcpy(p, *av);[0m
      | [0;1;32m      ^~~~~~
[0m[1mattacher.c:1050:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1050 |       strcpy(p, *av);[0m
      | [0;1;32m      ^~~~~~
[0m[1mattacher.c:1055:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1055 |   strncpy(m.m.attach.auser, LoginName, sizeof(m.m.attach.auser) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:1055:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1055 |   strncpy(m.m.attach.auser, LoginName, sizeof(m.m.attach.auser) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:1058:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1058 |   strncpy(m.m.command.preselect, preselect ? preselect : "", sizeof(m.m.command.preselect) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:1058:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1058 |   strncpy(m.m.command.preselect, preselect ? preselect : "", sizeof(m.m.command.preselect) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mattacher.c:1072:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1072 |           strcpy(sp, query);    /* XXX: strncpy? */[0m
      | [0;1;32m          ^~~~~~
[0m[1mattacher.c:1072:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1072 |           strcpy(sp, query);    /* XXX: strncpy? */[0m
      | [0;1;32m          ^~~~~~
[0m[1mattacher.c:1073:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1073 |           if ((r = MakeServerSocket(is_socket)) >= 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1074 |             break;[0m
      | [0;1;32m                  
[0m[1mattacher.c:1081:8: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1081 |               strcpy(sp, query);[0m
      | [0;1;32m              ^~~~~~
[0m[1mattacher.c:1081:8: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1081 |               strcpy(sp, query);[0m
      | [0;1;32m              ^~~~~~
[0m[1mattacher.c:1082:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |               if ((r = MakeServerSocket(is_socket)) >= 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1083 |                 break;[0m
      | [0;1;32m                      
[0m[1mattacher.c:1087:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1087 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1088 |         Panic(0, "Could not create a listening socket to read the results.");[0m
      | [0;1;32m                                                                             
[0m[1mattacher.c:1090:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1090 |       strncpy(m.m.command.writeback, SockPath, sizeof(m.m.command.writeback) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:1090:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1090 |       strncpy(m.m.command.writeback, SockPath, sizeof(m.m.command.writeback) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mattacher.c:1096:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |       if (WriteMessage(s, &m))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1097 |         Msg(errno, "write");[0m
      | [0;1;32m                            
[0m[1mattacher.c:1099:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1099 |       while (!QueryResult)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1100 |         pause();[0m
      | [0;1;32m                
[0m[1mattacher.c:1107:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1107 |       if (QueryResult == 2)     /* An error happened */[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1108 |         exit(1);[0m
      | [0;1;32m                
[0m[1mattacher.c:1112:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1112 |       if (WriteMessage(s, &m))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1113 |         Msg(errno, "write");[0m
      | [0;1;32m                            
[0m111 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[20/38][123.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpqznnnxhx.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/logfile.c
[1mlogfile.c:47:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   if (fstat(fileno(l->fp), &o) < 0)  /* get trouble later */[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   48 |     return;[0m
      | [0;1;32m           
[0m[1mlogfile.c:49:17: [0m[0;1;35mwarning: [0m[1mThe right operand of '>' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
   49 |   if (o.st_size > s->st_size) {      /* aha, appended text */[0m
      | [0;1;32m                ^
[0m[1mlogfile.c:156:7: [0m[0;1;36mnote: [0mAssuming 'fp' is non-null[0m
  156 |   if (!fp) {[0m
      | [0;1;32m      ^~~
[0m[1mlogfile.c:156:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  156 |   if (!fp) {[0m
      | [0;1;32m  ^
[0m[1mlogfile.c:163:9: [0m[0;1;36mnote: [0mAssuming 'l' is non-null[0m
  163 |   if (!(l = (struct logfile *)malloc(sizeof(struct logfile))))[0m
      | [0;1;32m        ^
[0m[1mlogfile.c:163:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  163 |   if (!(l = (struct logfile *)malloc(sizeof(struct logfile))))[0m
      | [0;1;32m  ^
[0m[1mlogfile.c:165:32: [0m[0;1;36mnote: [0mUninitialized value stored to field 'st_size'[0m
  165 |   if (!(l->st = (struct stat *)malloc(sizeof(struct stat)))) {[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlogfile.c:165:9: [0m[0;1;36mnote: [0mAssuming field 'st' is non-null[0m
  165 |   if (!(l->st = (struct stat *)malloc(sizeof(struct stat)))) {[0m
      | [0;1;32m        ^~~~~
[0m[1mlogfile.c:165:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  165 |   if (!(l->st = (struct stat *)malloc(sizeof(struct stat)))) {[0m
      | [0;1;32m  ^
[0m[1mlogfile.c:170:9: [0m[0;1;36mnote: [0mAssuming field 'name' is non-null[0m
  170 |   if (!(l->name = SaveStr(name))) {[0m
      | [0;1;32m        ^~~~~~~
[0m[1mlogfile.c:170:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  170 |   if (!(l->name = SaveStr(name))) {[0m
      | [0;1;32m  ^
[0m[1mlogfile.c:179:3: [0m[0;1;36mnote: [0mCalling 'changed_logfile'[0m
  179 |   changed_logfile(l);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1mlogfile.c:47:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   47 |   if (fstat(fileno(l->fp), &o) < 0)  /* get trouble later */[0m
      | [0;1;32m  ^
[0m[1mlogfile.c:49:17: [0m[0;1;36mnote: [0mThe right operand of '>' is a garbage value[0m
   49 |   if (o.st_size > s->st_size) {      /* aha, appended text */[0m
      | [0;1;32m                ^ ~~~~~~~~~~
[0m[1mlogfile.c:66:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (fd == need_fd)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   67 |     return fd;[0m
      | [0;1;32m              
[0m[1mlogfile.c:68:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   if (fd >=0 && fd < need_fd)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   69 |     r = lf_move_fd(dup(fd), need_fd);[0m
      | [0;1;32m                                     
[0m[1mlogfile.c:102:6: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  102 | void logreopen_register(fn)[0m
      | [0;1;32m     ^
[0m[1mlogfile.c:118:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |   if (fstat(fileno(l->fp), s) < 0)              /* remember that stat failed */[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  119 |     s->st_ino = s->st_dev = 0;[0m
      | [0;1;32m                              
[0m[1mlogfile.c:122:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |   if (!o.st_dev && !o.st_ino)                   /* nothing to compare with */[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  123 |     return 0;[0m
      | [0;1;32m             
[0m[1mlogfile.c:147:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |   for (l = logroot; l; l = l->next)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  148 |     if (!strcmp(name, l->name))[0m
  149 |       return l;[0m
      | [0;1;32m               
[0m[1mlogfile.c:148:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |     if (!strcmp(name, l->name))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  149 |       return l;[0m
      | [0;1;32m               
[0m[1mlogfile.c:157:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |     if (!(l = lookup_logfile(name)))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  158 |       return NULL;[0m
      | [0;1;32m                  
[0m[1mlogfile.c:163:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (!(l = (struct logfile *)malloc(sizeof(struct logfile))))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  164 |     return NULL;[0m
      | [0;1;32m                
[0m[1mlogfile.c:187:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |   if (!name)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  188 |     return logroot ? 1 : 0;[0m
      | [0;1;32m                           
[0m[1mlogfile.c:195:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   for (lp = &logroot; *lp; lp = &(*lp)->next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  196 |     if (*lp == l)[0m
  197 |       break;[0m
      | [0;1;32m            
[0m[1mlogfile.c:196:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |     if (*lp == l)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  197 |       break;[0m
      | [0;1;32m            
[0m[1mlogfile.c:199:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |   if (!*lp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  200 |     return -1;[0m
      | [0;1;32m              
[0m[1mlogfile.c:202:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |   if ((--l->opencount) > 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  203 |     return 0;[0m
      | [0;1;32m             
[0m[1mlogfile.c:204:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |   if (l->opencount < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  205 |     abort();[0m
      | [0;1;32m            
[0m[1mlogfile.c:222:40: [0m[0;1;35mwarning: [0m[1mpassing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  222 |   if (stolen_logfile(l) && lf_reopen_fn(l->name, fileno(l->fp), l))[0m
      | [0;1;32m                                       ^
[0m[1mlogfile.c:222:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |   if (stolen_logfile(l) && lf_reopen_fn(l->name, fileno(l->fp), l))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  223 |     return -1;[0m
      | [0;1;32m              
[0m[1mlogfile.c:234:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |   if (!l)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  235 |     for (l = logroot; l; l = l->next) {[0m
  236 |       if (stolen_logfile(l) && lf_reopen_fn(l->name, fileno(l->fp), l))[0m
  237 |         return -1;[0m
  238 |       r |= fflush(l->fp);[0m
  239 |       l->flushcount++;[0m
  240 |       changed_logfile(l); [0m
  241 |     }[0m
  242 |   else {[0m
      | [0;32m  } 
[0m[1mlogfile.c:236:44: [0m[0;1;35mwarning: [0m[1mpassing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  236 |       if (stolen_logfile(l) && lf_reopen_fn(l->name, fileno(l->fp), l))[0m
      | [0;1;32m                                           ^
[0m[1mlogfile.c:236:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |       if (stolen_logfile(l) && lf_reopen_fn(l->name, fileno(l->fp), l))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  237 |         return -1;[0m
      | [0;1;32m                  
[0m[1mlogfile.c:243:42: [0m[0;1;35mwarning: [0m[1mpassing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  243 |     if (stolen_logfile(l) && lf_reopen_fn(l->name, fileno(l->fp), l))[0m
      | [0;1;32m                                         ^
[0m[1mlogfile.c:243:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |     if (stolen_logfile(l) && lf_reopen_fn(l->name, fileno(l->fp), l))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  244 |       return -1;[0m
      | [0;1;32m                
[0m28 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[21/38][149.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpa4cd5u6h.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/search.c
[1msearch.c:59:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |                 if (markdata->isdir > 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   60 |                         searchend(0, 0, NULL);[0m
   61 |                 else if (markdata->isdir < 0)[0m
      | [0;32m                } 
[0m[1msearch.c:61:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |                 else if (markdata->isdir < 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   62 |                         backsearchend(0, 0, NULL);[0m
   63 |                 else[0m
      | [0;32m                } 
[0m[1msearch.c:63:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   64 |                         LMsg(0, "No previous pattern");[0m
      | [0;1;32m                                                       
[0m[1msearch.c:65:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   66 |                 Input((dir > 0 ? "/" : "?"), sizeof(markdata->isstr) - 1,[0m
   67 |                     INP_COOKED, (dir > 0 ? searchend : backsearchend), NULL, 0);[0m
      | [0;1;32m                                                                                
[0m[1msearch.c:80:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |         if (len)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   81 |                 strcpy(markdata->isstr, buf);[0m
      | [0;1;32m                                             
[0m[1msearch.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   81 |                 strcpy(markdata->isstr, buf);[0m
      | [0;1;32m                ^~~~~~
[0m[1msearch.c:81:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   81 |                 strcpy(markdata->isstr, buf);[0m
      | [0;1;32m                ^~~~~~
[0m[1msearch.c:86:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |                 if ((x = matchword(markdata->isstr, y, sx, ex)) >= 0)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m   87 |                         break;[0m
      | [0;1;32m                              
[0m[1msearch.c:92:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   93 |                 revto(x, y);[0m
      | [0;1;32m                            
[0m[1msearch.c:105:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |         if (len)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  106 |                 strcpy(markdata->isstr, buf);[0m
      | [0;1;32m                                             
[0m[1msearch.c:106:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  106 |                 strcpy(markdata->isstr, buf);[0m
      | [0;1;32m                ^~~~~~
[0m[1msearch.c:106:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  106 |                 strcpy(markdata->isstr, buf);[0m
      | [0;1;32m                ^~~~~~
[0m[1msearch.c:111:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |                 while ((sx = matchword(markdata->isstr, y, sx, ex)) >= 0)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  112 |                         x = sx++;[0m
      | [0;1;32m                                 
[0m[1msearch.c:113:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |                 if (x >= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  114 |                         break;[0m
      | [0;1;32m                              
[0m[1msearch.c:120:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  121 |                 revto(x, y);[0m
      | [0;1;32m                            
[0m[1msearch.c:145:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |                         if (*cp != *pp)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  146 |                                 if (!search_ic || ((*cp ^ *pp) & 0xdf) ||[0m
  147 |                                     (*cp | 0x20) < 'a' || (*cp | 0x20) > 'z')[0m
  148 |                                         break;[0m
      | [0;1;32m                                              
[0m[1msearch.c:147:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |                                     (*cp | 0x20) < 'a' || (*cp | 0x20) > 'z')[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  148 |                                         break;[0m
      | [0;1;32m                                              
[0m[1msearch.c:151:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |                         if (*pp == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  152 |                                 return sx;[0m
      | [0;1;32m                                          
[0m[1msearch.c:161:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |                                     fore->w_histheight + flayer->l_height - 1)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  162 |                                         break;[0m
      | [0;1;32m                                              
[0m[1msearch.c:203:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |         if (p < 0 || p + l > end)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  204 |                 return -1;[0m
      | [0;1;32m                          
[0m[1msearch.c:205:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |         if (l == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  206 |                 return p;[0m
      | [0;1;32m                         
[0m[1msearch.c:207:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |         if (dir < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  208 |                 str += l - 1;[0m
      | [0;1;32m                             
[0m[1msearch.c:209:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |         for (i = 0; i < 256; i++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  210 |                 tab[i] = l * dir;[0m
      | [0;1;32m                                 
[0m[1msearch.c:215:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |                 if (search_ic && (q | 0x20) >= 'a' && ((q | 0x20) <= 'z'))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  216 |                         tab[q ^ 0x20] = (l - 1 - i) * dir;[0m
      | [0;1;32m                                                          
[0m[1msearch.c:219:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |         if (dir > 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  220 |                 p += l - 1;[0m
      | [0;1;32m                           
[0m[1msearch.c:229:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |                         if (i == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  230 |                                 p += tab[(int)(unsigned char)c];[0m
      | [0;1;32m                                                                
[0m[1msearch.c:231:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |                         if (c != *s)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  232 |                                 if (!search_ic || ((c ^ *s) & 0xdf) ||[0m
  233 |                                     (c | 0x20) < 'a' || (c | 0x20) > 'z')[0m
  234 |                                         break;[0m
      | [0;1;32m                                              
[0m[1msearch.c:233:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |                                     (c | 0x20) < 'a' || (c | 0x20) > 'z')[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  234 |                                         break;[0m
      | [0;1;32m                                              
[0m[1msearch.c:237:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                         if (++i == l)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  238 |                                 return q + (dir > 0 ? 1 : -l);[0m
      | [0;1;32m                                                              
[0m[1msearch.c:251:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |         if (n == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  252 |                 return;[0m
      | [0;1;32m                       
[0m[1msearch.c:261:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  261 |                 pos = markdata->isstartpos;[0m
      | [0;1;32m                ^                         
[0m      | [0;32m                {                         ;} 
[0m[1msearch.c:264:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  264 |                 *p = 0;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  265 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msearch.c:272:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |                 if (markdata->isistrl == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  273 |                         return;[0m
      | [0;1;32m                               
[0m[1msearch.c:274:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  274 |                 markdata->isistrl--;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  275 |                 pos = is_redo(markdata);[0m
  276 |                 *p = '\b';[0m
  277 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msearch.c:280:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |                 if (markdata->isistrl >= (int)sizeof(markdata->isistr))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  281 |                         return;[0m
      | [0;1;32m                               
[0m[1msearch.c:282:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  282 |                 dir = (*p == '\023') ? 1 : -1;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  283 |                 pos += dir;[0m
  284 |                 if (markdata->isdir == dir && markdata->isistrl == 0) {[0m
  285 |                         strcpy(markdata->isistr, markdata->isstr);[0m
  286 |                         markdata->isistrl = markdata->isstrl = strlen(markdata->isstr);[0m
  287 |                         break;[0m
  288 |                 }[0m
  289 |                 markdata->isdir = dir;[0m
  290 |                 markdata->isistr[markdata->isistrl++] = *p;[0m
  291 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msearch.c:285:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  285 |                         strcpy(markdata->isistr, markdata->isstr);[0m
      | [0;1;32m                        ^~~~~~
[0m[1msearch.c:285:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  285 |                         strcpy(markdata->isistr, markdata->isstr);[0m
      | [0;1;32m                        ^~~~~~
[0m[1msearch.c:293:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  293 |                 if (*p < ' ' ||[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  294 |                     markdata->isistrl >=[0m
  295 |                     (int)sizeof(markdata->isistr) ||[0m
  296 |                     markdata->isstrl >= (int)sizeof(markdata->isstr) - 1)[0m
  297 |                         return;[0m
  298 |                 markdata->isstr[markdata->isstrl++] = *p;[0m
  299 |                 markdata->isistr[markdata->isistrl++] = *p;[0m
  300 |                 markdata->isstr[markdata->isstrl] = 0;[0m
  301 |                 debug2("New char: %c - left %d\n", *p,[0m
  302 |                     (int)sizeof(markdata->isistr) - markdata->isistrl);[0m
      | [0;1;32m                                                                      
[0m      | [0;32m                                                                      ;} 
[0m[1msearch.c:296:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |                     markdata->isstrl >= (int)sizeof(markdata->isstr) - 1)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  297 |                         return;[0m
      | [0;1;32m                               
[0m[1msearch.c:304:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |         if (*p && *p != '\b')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  305 |                 pos = is_bm(markdata->isstr, markdata->isstrl, pos,[0m
  306 |                     flayer->l_width *[0m
  307 |                     (markdata->md_window->w_histheight + flayer->l_height),[0m
  308 |                     markdata->isdir);[0m
      | [0;1;32m                                     
[0m[1msearch.c:316:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |         if (*p)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  317 |                 inp_setprompt(isprompts[markdata->isdir + (pos < 0) + 1],[0m
  318 |                     markdata->isstrl ? markdata->isstr : "");[0m
      | [0;1;32m                                                             
[0m[1msearch.c:341:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |                 if (c == '\022')                /* ^R */[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  342 |                         pos += (dir = -1);[0m
  343 |                 else if (c == '\023')   /* ^S */[0m
      | [0;32m                } 
[0m[1msearch.c:343:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |                 else if (c == '\023')   /* ^S */[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  344 |                         pos += (dir = 1);[0m
  345 |                 else[0m
      | [0;32m                } 
[0m[1msearch.c:345:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  346 |                         markdata->isstr[markdata->isstrl++] = c;[0m
      | [0;1;32m                                                                
[0m[1msearch.c:352:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |                         if (npos >= 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  353 |                                 pos = npos;[0m
      | [0;1;32m                                           
[0m[1msearch.c:371:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |         if (W2D(markdata->cy) == INPUTLINE)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  372 |                 revto_line(markdata->cx, markdata->cy,[0m
  373 |                     INPUTLINE > 0 ? INPUTLINE - 1 : 1);[0m
      | [0;1;32m                                                       
[0m48 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[22/38][153.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmplrnfiddx.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/list_window.c
[1mlist_window.c:91:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |   if (!a)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   92 |     return 1;   /* Every window is a descendant of the 'null' group */[0m
      | [0;1;32m                                                                      
[0m[1mlist_window.c:93:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   for (; d; d = d->w_group)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   94 |     if (d->w_group == a)[0m
   95 |       return 1;[0m
      | [0;1;32m               
[0m[1mlist_window.c:94:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |     if (d->w_group == a)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   95 |       return 1;[0m
      | [0;1;32m               
[0m[1mlist_window.c:107:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  107 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mlist_window.c:107:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  107 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mlist_window.c:112:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   for (; w; w = w->w_next)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  113 |     if (w == (struct win *)data)[0m
  114 |       break;[0m
      | [0;1;32m            
[0m[1mlist_window.c:113:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |     if (w == (struct win *)data)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  114 |       break;[0m
      | [0;1;32m            
[0m[1mlist_window.c:116:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |   if (!w)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  117 |     return;[0m
      | [0;1;32m           
[0m[1mlist_window.c:178:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  178 |       if (row->data == p)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  179 |         break;[0m
      | [0;1;32m              
[0m[1mlist_window.c:188:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |   if (!row)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  189 |     return 0;[0m
      | [0;1;32m             
[0m[1mlist_window.c:192:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |   if (row->next)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  193 |     row->next->prev = row->prev;[0m
      | [0;1;32m                                
[0m[1mlist_window.c:194:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |   if (row->prev)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  195 |     row->prev->next = row->next;[0m
      | [0;1;32m                                
[0m[1mlist_window.c:197:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   if (ldata->selected == row)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  198 |     ldata->selected = row->prev ? row->prev : row->next;[0m
      | [0;1;32m                                                        
[0m[1mlist_window.c:199:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |   if (ldata->top == row)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  200 |     ldata->top = row->prev ? row->prev : row->next;[0m
      | [0;1;32m                                                   
[0m[1mlist_window.c:201:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |   if (ldata->root == row)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  202 |     ldata->root = row->next;[0m
      | [0;1;32m                            
[0m[1mlist_window.c:252:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |   for (xoff = 0, g = w->w_group; g != wdata->group; g = g->w_group)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  253 |     xoff += 2;[0m
      | [0;1;32m              
[0m[1mlist_window.c:255:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  255 |   if (ldata->selected == lrow)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  256 |     mchar = &mchar_so;[0m
  257 |   else if (w->w_monitor == MON_DONE && renditions[REND_MONITOR] != -1)[0m
      | [0;32m  } 
[0m[1mlist_window.c:272:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  273 |     mchar = &mchar_blank;[0m
      | [0;1;32m                         
[0m[1mlist_window.c:276:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |   if (xoff)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  277 |     LPutWinMsg(flayer, "", xoff, mchar, 0, lrow->y);[0m
      | [0;1;32m                                                    
[0m[1mlist_window.c:290:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |   if (!ldata->selected)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  291 |     return 0;[0m
      | [0;1;32m             
[0m[1mlist_window.c:303:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |       if (!win)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  304 |         break;[0m
      | [0;1;32m              
[0m[1mlist_window.c:306:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  306 |       if (display && AclCheckPermWin(D_user, ACL_READ, win))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  307 |         return 0;               /* Not allowed to switch to this window. */[0m
  308 | #endif[0m
  309 |       if (WLIST_FOR_GROUP(wdata))[0m
  310 |         SwitchWindow(win->w_number);[0m
  311 |       else[0m
  312 |         {[0m
  313 |           /* Abort list only when not in a group window. */[0m
  314 |           glist_abort();[0m
  315 |           display = cd;[0m
  316 |           if (D_fore != win)[0m
  317 |             SwitchWindow(win->w_number);[0m
  318 |         }[0m
  319 |       *len = 0;[0m
  320 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_window.c:306:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |       if (display && AclCheckPermWin(D_user, ACL_READ, win))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  307 |         return 0;               /* Not allowed to switch to this window. */[0m
      | [0;1;32m                                                                           
[0m[1mlist_window.c:309:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |       if (WLIST_FOR_GROUP(wdata))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  310 |         SwitchWindow(win->w_number);[0m
  311 |       else[0m
      | [0;32m      } 
[0m[1mlist_window.c:316:8: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_fore' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
  316 |           if (D_fore != win)[0m
      | [0;1;32m              ^
[0m[1m./display.h:209:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_fore'[0m
  209 | #define D_fore          DISPLAY(d_fore)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mlist_window.c:287:3: [0m[0;1;36mnote: [0m'cd' initialized here[0m
  287 |   struct display *cd = display;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:290:7: [0m[0;1;36mnote: [0mAssuming field 'selected' is non-null[0m
  290 |   if (!ldata->selected)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mlist_window.c:290:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  290 |   if (!ldata->selected)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:298:3: [0m[0;1;36mnote: [0mControl jumps to 'case 13:'  at line 302[0m
  298 |   switch (ch)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:303:11: [0m[0;1;36mnote: [0mAssuming 'win' is non-null[0m
  303 |       if (!win)[0m
      | [0;1;32m          ^~~~
[0m[1mlist_window.c:303:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  303 |       if (!win)[0m
      | [0;1;32m      ^
[0m[1mlist_window.c:306:11: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
  306 |       if (display && AclCheckPermWin(D_user, ACL_READ, win))[0m
      | [0;1;32m          ^~~~~~~
[0m[1mlist_window.c:306:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  306 |       if (display && AclCheckPermWin(D_user, ACL_READ, win))[0m
      | [0;1;32m                  ^
[0m[1mlist_window.c:309:11: [0m[0;1;36mnote: [0mAssuming field 'group' is null[0m
  309 |       if (WLIST_FOR_GROUP(wdata))[0m
      | [0;1;32m          ^
[0m[1mlist_window.c:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'WLIST_FOR_GROUP'[0m
   62 | #define WLIST_FOR_GROUP(wdate)  ((wdata)->group && !(wdata)->onblank && Layer2Window(flayer) && Layer2Window(flayer)->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~
[0m[1mlist_window.c:309:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  309 |       if (WLIST_FOR_GROUP(wdata))[0m
      | [0;1;32m          ^
[0m[1mlist_window.c:62:48: [0m[0;1;36mnote: [0mexpanded from macro 'WLIST_FOR_GROUP'[0m
   62 | #define WLIST_FOR_GROUP(wdate)  ((wdata)->group && !(wdata)->onblank && Layer2Window(flayer) && Layer2Window(flayer)->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m                                                ^
[0m[1mlist_window.c:315:4: [0m[0;1;36mnote: [0mNull pointer value stored to 'display'[0m
  315 |           display = cd;[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mlist_window.c:316:8: [0m[0;1;36mnote: [0mAccess to field 'd_fore' results in a dereference of a null pointer (loaded from variable 'display')[0m
  316 |           if (D_fore != win)[0m
      | [0;1;32m              ^
[0m[1m./display.h:209:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_fore'[0m
  209 | #define D_fore          DISPLAY(d_fore)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mlist_window.c:316:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |           if (D_fore != win)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  317 |             SwitchWindow(win->w_number);[0m
      | [0;1;32m                                        
[0m[1mlist_window.c:324:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  324 |       wdata->order = wdata->order == WLIST_MRU ? WLIST_NUM : WLIST_MRU;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  325 |       glist_remove_rows(ldata);[0m
  326 |       gl_Window_rebuild(ldata);[0m
  327 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_window.c:331:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  331 |       wdata->nested = !wdata->nested;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  332 |       glist_remove_rows(ldata);[0m
  333 |       gl_Window_rebuild(ldata);[0m
  334 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_window.c:338:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  338 |       if (wdata->group)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  339 |         {[0m
  340 |           int order = wdata->order | (wdata->nested ? WLIST_NESTED : 0);[0m
  341 |           glist_abort();[0m
  342 |           display = cd;[0m
  343 |           display_windows(1, order, NULL);[0m
  344 |           *len = 0;[0m
  345 |         }[0m
  346 |       else if (!wdata->nested)[0m
  347 |         {[0m
  348 |           wdata->nested = 1;[0m
  349 |           glist_remove_rows(ldata);[0m
  350 |           gl_Window_rebuild(ldata);[0m
  351 |         }[0m
  352 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_window.c:356:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |       if (!wdata->group)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  357 |         break;[0m
      | [0;1;32m              
[0m[1mlist_window.c:358:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  358 |       if (wdata->group->w_group)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mlist_window.c:380:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  380 |       if (wdata->order == WLIST_NUM && ldata->selected->prev)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  381 |         {[0m
  382 |           struct win *pw = ldata->selected->prev->data;[0m
  383 |           if (win->w_group != pw->w_group)[0m
  384 |             break;      /* Do not allow switching with the parent group */[0m
  385 | [0m
  386 |           /* When a windows's number is successfully changed, it triggers a WListUpdatecv[0m
  387 |            * with NULL window. So that causes a redraw of the entire list. So reset the[0m
  388 |            * 'selected' after that. */[0m
  389 |           wdata->fore = win;[0m
  390 |           WindowChangeNumber(win->w_number, pw->w_number);[0m
  391 |         }[0m
  392 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_window.c:383:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |           if (win->w_group != pw->w_group)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  384 |             break;      /* Do not allow switching with the parent group */[0m
      | [0;1;32m                                                                          
[0m[1mlist_window.c:395:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  395 |       if (wdata->order == WLIST_NUM && ldata->selected->next)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  396 |         {[0m
  397 |           struct win *nw = ldata->selected->next->data;[0m
  398 |           if (win->w_group != nw->w_group)[0m
  399 |             break;      /* Do not allow switching with the parent group */[0m
  400 | [0m
  401 |           wdata->fore = win;[0m
  402 |           WindowChangeNumber(win->w_number, nw->w_number);[0m
  403 |         }[0m
  404 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_window.c:398:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |           if (win->w_group != nw->w_group)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  399 |             break;      /* Do not allow switching with the parent group */[0m
      | [0;1;32m                                                                          
[0m[1mlist_window.c:407:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  407 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  408 |         char str[MAXSTR];[0m
  409 |         snprintf(str, sizeof(str) - 1, "Really kill window %d (%s) [y/n]",[0m
  410 |             win->w_number, win->w_title);[0m
  411 |         Input(str, 1, INP_RAW, window_kill_confirm, (char *)win, 0);[0m
  412 |       }[0m
  413 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mlist_window.c:409:2: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  409 |         snprintf(str, sizeof(str) - 1, "Really kill window %d (%s) [y/n]",[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mlist_window.c:409:2: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  409 |         snprintf(str, sizeof(str) - 1, "Really kill window %d (%s) [y/n]",[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mlist_window.c:422:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |           if (fnumber >= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  423 |             SwitchWindow(fnumber);[0m
      | [0;1;32m                                  
[0m[1mlist_window.c:426:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mlist_window.c:428:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  428 |       if (ch >= '0' && ch <= '9')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mlist_window.c:437:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |                   if (old == row)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  438 |                     break;[0m
      | [0;1;32m                          
[0m[1mlist_window.c:484:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |   if (InStr(w->w_title, needle))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  485 |     return 1;[0m
      | [0;1;32m             
[0m[1mlist_window.c:513:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |   if (group)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  514 |     onblank = 0;        /* When drawing a group window, ignore 'onblank' */[0m
      | [0;1;32m                                                                           
[0m[1mlist_window.c:541:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  542 |     p = Layer2Window(flayer);[0m
      | [0;1;32m                             
[0m[1mlist_window.c:543:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |   if (!group && p)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  544 |     group = p->w_group;[0m
      | [0;1;32m                       
[0m[1mlist_window.c:566:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  566 |   while (wdata->fore && wdata->fore->w_group != group)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  567 |     wdata->fore = wdata->fore->w_next;[0m
      | [0;1;32m                                      
[0m[1mlist_window.c:584:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  584 |       if (ldata->selected)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  585 |         wdata->fore = ldata->selected->data;    /* Try to retain the current selection */[0m
      | [0;1;32m                                                                                         
[0m[1mlist_window.c:597:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  597 |           if (!wdata->nested)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  598 |             d = 0;[0m
  599 |           else[0m
      | [0;32m          } 
[0m[1mlist_window.c:599:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  599 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  600 |             d = window_ancestor(wdata->group, p);[0m
      | [0;1;32m                                                 
[0m[1mlist_window.c:606:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |       if (gl_Window_remove(ldata, p))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  607 |         glist_display_all(ldata);[0m
      | [0;1;32m                                 
[0m[1mlist_window.c:618:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |       if (windows != p)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  619 |         for (before = windows; before; before = before->w_next)[0m
  620 |           if (before->w_next == p)[0m
  621 |             break;[0m
      | [0;1;32m                  
[0m[1mlist_window.c:619:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  619 |         for (before = windows; before; before = before->w_next)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  620 |           if (before->w_next == p)[0m
  621 |             break;[0m
      | [0;1;32m                  
[0m[1mlist_window.c:620:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  620 |           if (before->w_next == p)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  621 |             break;[0m
      | [0;1;32m                  
[0m[1mlist_window.c:640:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |   if (before)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  641 |     rbefore = gl_Window_findrow(ldata, before);[0m
  642 |   else if (wdata->nested && p->w_group) /* There's no 'before'. So find the group window */[0m
      | [0;32m  } 
[0m[1mlist_window.c:642:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |   else if (wdata->nested && p->w_group) /* There's no 'before'. So find the group window */[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  643 |     rbefore = gl_Window_findrow(ldata, p->w_group);[0m
  644 |   else[0m
      | [0;32m  } 
[0m[1mlist_window.c:644:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  645 |     rbefore = NULL;[0m
      | [0;1;32m                   
[0m[1mlist_window.c:656:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  657 |         p = NULL;               /* the window is in the correct place */[0m
      | [0;1;32m                                                                        
[0m[1mlist_window.c:661:13: [0m[0;1;35mwarning: [0m[1mUse of memory after it is freed [clang-analyzer-unix.Malloc][0m
  661 |       row = glist_add_row(ldata, p, rbefore);[0m
      | [0;1;32m            ^
[0m[1mlist_window.c:676:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  676 |   if (cv->c_layer->l_layfn != &ListLf)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:676:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  676 |   if (cv->c_layer->l_layfn != &ListLf)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:679:7: [0m[0;1;36mnote: [0mAssuming 'ListID' is equal to field 'name'[0m
  679 |   if (ldata->name != ListID)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:679:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  679 |   if (ldata->name != ListID)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:682:15: [0m[0;1;36mnote: [0mCalling 'WListUpdate'[0m
  682 |   CV_CALL(cv, WListUpdate(p, ldata));[0m
      | [0;1;32m              ^
[0m[1m./canvas.h:93:3: [0m[0;1;36mnote: [0mexpanded from macro 'CV_CALL'[0m
   93 |   cmd;                                          \[0m
      | [0;1;32m  ^~~
[0m[1mlist_window.c:582:7: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
  582 |   if (!p)[0m
      | [0;1;32m      ^~
[0m[1mlist_window.c:582:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  582 |   if (!p)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:593:7: [0m[0;1;36mnote: [0mAssuming field 'order' is not equal to WLIST_NUM[0m
  593 |   if (wdata->order == WLIST_NUM || wdata->order == WLIST_MRU)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:593:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mlist_window.c:593:36: [0m[0;1;36mnote: [0mAssuming field 'order' is not equal to WLIST_MRU[0m
  593 |   if (wdata->order == WLIST_NUM || wdata->order == WLIST_MRU)[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:593:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  593 |   if (wdata->order == WLIST_NUM || wdata->order == WLIST_MRU)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:604:8: [0m[0;1;36mnote: [0m'd' is 1[0m
  604 |   if (!d)[0m
      | [0;1;32m       ^
[0m[1mlist_window.c:604:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  604 |   if (!d)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:616:14: [0m[0;1;36mnote: [0mField 'order' is not equal to WLIST_MRU[0m
  616 |   if (wdata->order == WLIST_MRU)[0m
      | [0;1;32m             ^
[0m[1mlist_window.c:616:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  616 |   if (wdata->order == WLIST_MRU)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:623:19: [0m[0;1;36mnote: [0mField 'order' is not equal to WLIST_NUM[0m
  623 |   else if (wdata->order == WLIST_NUM)[0m
      | [0;1;32m                  ^
[0m[1mlist_window.c:623:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  623 |   else if (wdata->order == WLIST_NUM)[0m
      | [0;1;32m       ^
[0m[1mlist_window.c:640:7: [0m[0;1;36mnote: [0m'before' is null[0m
  640 |   if (before)[0m
      | [0;1;32m      ^~~~~~
[0m[1mlist_window.c:640:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  640 |   if (before)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:642:12: [0m[0;1;36mnote: [0mAssuming field 'nested' is not equal to 0[0m
  642 |   else if (wdata->nested && p->w_group) /* There's no 'before'. So find the group window */[0m
      | [0;1;32m           ^~~~~~~~~~~~~
[0m[1mlist_window.c:642:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mlist_window.c:642:29: [0m[0;1;36mnote: [0mAssuming field 'w_group' is non-null[0m
  642 |   else if (wdata->nested && p->w_group) /* There's no 'before'. So find the group window */[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mlist_window.c:642:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  642 |   else if (wdata->nested && p->w_group) /* There's no 'before'. So find the group window */[0m
      | [0;1;32m       ^
[0m[1mlist_window.c:649:7: [0m[0;1;36mnote: [0m'row' is non-null[0m
  649 |   if (row)[0m
      | [0;1;32m      ^~~
[0m[1mlist_window.c:649:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  649 |   if (row)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:651:11: [0m[0;1;36mnote: [0mAssuming 'rbefore' is not equal to field 'prev'[0m
  651 |       if (row->prev != rbefore)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:651:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  651 |       if (row->prev != rbefore)[0m
      | [0;1;32m      ^
[0m[1mlist_window.c:653:10: [0m[0;1;36mnote: [0mAssuming 'p' is not equal to field 'data'[0m
  653 |           sel = ldata->selected->data == p;[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:654:4: [0m[0;1;36mnote: [0mCalling 'gl_Window_remove'[0m
  654 |           gl_Window_remove(ldata, p);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:188:8: [0m[0;1;36mnote: [0m'row' is non-null[0m
  188 |   if (!row)[0m
      | [0;1;32m       ^~~
[0m[1mlist_window.c:188:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  188 |   if (!row)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:192:7: [0m[0;1;36mnote: [0mAssuming field 'next' is null[0m
  192 |   if (row->next)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mlist_window.c:192:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  192 |   if (row->next)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:194:7: [0m[0;1;36mnote: [0mAssuming field 'prev' is null[0m
  194 |   if (row->prev)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mlist_window.c:194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  194 |   if (row->prev)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:197:7: [0m[0;1;36mnote: [0mAssuming 'row' is not equal to field 'selected'[0m
  197 |   if (ldata->selected == row)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:197:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  197 |   if (ldata->selected == row)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:199:7: [0m[0;1;36mnote: [0mAssuming 'row' is not equal to field 'top'[0m
  199 |   if (ldata->top == row)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:199:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  199 |   if (ldata->top == row)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:201:22: [0m[0;1;36mnote: [0m'row' is equal to field 'root'[0m
  201 |   if (ldata->root == row)[0m
      | [0;1;32m                     ^~~
[0m[1mlist_window.c:201:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  201 |   if (ldata->root == row)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:205:3: [0m[0;1;36mnote: [0mMemory is released[0m
  205 |   free(row);[0m
      | [0;1;32m  ^~~~~~~~~
[0m[1mlist_window.c:654:4: [0m[0;1;36mnote: [0mReturning; memory was released[0m
  654 |           gl_Window_remove(ldata, p);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlist_window.c:659:7: [0m[0;1;36mnote: [0m'p' is non-null[0m
  659 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mlist_window.c:659:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  659 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mlist_window.c:661:13: [0m[0;1;36mnote: [0mUse of memory after it is freed[0m
  661 |       row = glist_add_row(ldata, p, rbefore);[0m
      | [0;1;32m            ^                       ~~~~~~~
[0m[1mlist_window.c:662:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |       if (sel)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  663 |         ldata->selected = row;[0m
      | [0;1;32m                              
[0m[1mlist_window.c:669:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  669 | WListUpdatecv(cv, p)[0m
      | [0;1;32m^
[0m[1mlist_window.c:676:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  676 |   if (cv->c_layer->l_layfn != &ListLf)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  677 |     return;[0m
      | [0;1;32m           
[0m[1mlist_window.c:679:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |   if (ldata->name != ListID)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  680 |     return;[0m
      | [0;1;32m           
[0m[1mlist_window.c:681:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'wdata' is never read [clang-analyzer-deadcode.DeadStores][0m
  681 |   wdata = ldata->data;[0m
      | [0;1;32m  ^       ~~~~~~~~~~~
[0m[1mlist_window.c:681:3: [0m[0;1;36mnote: [0mValue stored to 'wdata' is never read[0m
  681 |   wdata = ldata->data;[0m
      | [0;1;32m  ^       ~~~~~~~~~~~
[0m[1mlist_window.c:693:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |   for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  694 |     for (cv = D_cvlist; cv; cv = cv->c_next)[0m
  695 |       {[0m
  696 |         if (!cv->c_layer || cv->c_layer->l_layfn != &ListLf)[0m
  697 |           continue;[0m
  698 |         ldata = cv->c_layer->l_data;[0m
  699 |         if (ldata->name != ListID)[0m
  700 |           continue;[0m
  701 |         wdata = ldata->data;[0m
  702 |         if (!(wdata->order & WLIST_MRU))[0m
  703 |           continue;[0m
  704 |         CV_CALL(cv, WListUpdate(0, ldata));[0m
  705 |       }[0m
      | [0;1;32m       
[0m[1mlist_window.c:696:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |         if (!cv->c_layer || cv->c_layer->l_layfn != &ListLf)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  697 |           continue;[0m
      | [0;1;32m                   
[0m[1mlist_window.c:699:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |         if (ldata->name != ListID)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  700 |           continue;[0m
      | [0;1;32m                   
[0m[1mlist_window.c:702:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |         if (!(wdata->order & WLIST_MRU))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  703 |           continue;[0m
      | [0;1;32m                   
[0m70 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[23/38][162.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpr_vclxz2.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/ansi.c
[1mansi.c:180:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  180 | ResetAnsiState(p)[0m
      | [0;1;32m^
[0m[1mansi.c:188:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  188 | ResetWindow(p)[0m
      | [0;1;32m^
[0m[1mansi.c:209:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  209 |   bzero(p->w_tabs, p->w_width);[0m
      | [0;1;32m  ^~~~~
[0m[1mansi.c:209:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  209 |   bzero(p->w_tabs, p->w_width);[0m
      | [0;1;32m  ^~~~~
[0m[1mansi.c:210:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |   for (i = 8; i < p->w_width; i += 8)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  211 |     p->w_tabs[i] = 1;[0m
      | [0;1;32m                     
[0m[1mansi.c:223:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  223 | GetAnsiStatus(w, buf)[0m
      | [0;1;32m^
[0m[1mansi.c:229:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |   if (w->w_state == LIT)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  230 |     return 0;[0m
      | [0;1;32m             
[0m[1mansi.c:232:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  232 |   strcpy(p, state_t_string[w->w_state]);[0m
      | [0;1;32m  ^~~~~~
[0m[1mansi.c:232:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  232 |   strcpy(p, state_t_string[w->w_state]);[0m
      | [0;1;32m  ^~~~~~
[0m[1mansi.c:237:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |       if (w->w_intermediate > 0xff)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  238 |         p += AddXChar(p, w->w_intermediate >> 8);[0m
      | [0;1;32m                                                 
[0m[1mansi.c:242:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |   if (w->w_state == ASTR || w->w_state == STRESC)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  243 |     sprintf(p, "-%s", string_t_string[w->w_StringType]);[0m
      | [0;1;32m                                                        
[0m[1mansi.c:243:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  243 |     sprintf(p, "-%s", string_t_string[w->w_StringType]);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mansi.c:243:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  243 |     sprintf(p, "-%s", string_t_string[w->w_StringType]);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mansi.c:252:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  252 | ResetCharsets(p)[0m
      | [0;1;32m^
[0m[1mansi.c:258:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |   if (nwin_default.charset)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  259 |     SetCharsets(p, nwin_default.charset);[0m
      | [0;1;32m                                         
[0m[1mansi.c:266:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  266 | SetCharsets(p, s)[0m
      | [0;1;32m^
[0m[1mansi.c:272:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |   for (i = 0; i < 4 && *s; i++, s++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  273 |     if (*s != '.')[0m
  274 |       p->w_charsets[i] = ((*s == 'B') ? ASCII : *s);[0m
      | [0;1;32m                                                    
[0m[1mansi.c:273:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |     if (*s != '.')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  274 |       p->w_charsets[i] = ((*s == 'B') ? ASCII : *s);[0m
      | [0;1;32m                                                    
[0m[1mansi.c:275:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |   if (*s && *s++ != '.')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  276 |     p->w_Charset = s[-1] - '0';[0m
      | [0;1;32m                               
[0m[1mansi.c:277:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |   if (*s && *s != '.')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  278 |     p->w_CharsetR = *s - '0';[0m
      | [0;1;32m                             
[0m[1mansi.c:297:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  297 | WriteString(wp, buf, len)[0m
      | [0;1;32m^
[0m[1mansi.c:308:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   if (!len)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  309 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:310:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  310 |   if (wp->w_log)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  311 |     WLogString(wp, buf, len);[0m
      | [0;1;32m                             
[0m[1mansi.c:318:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |   if (curr->w_silence)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  319 |     SetTimeout(&curr->w_silenceev, curr->w_silencewait * 1000);[0m
      | [0;1;32m                                                               
[0m[1mansi.c:334:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |           if (!curr->w_mbcs)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  335 | # endif[0m
  336 |             curr->w_rend.font = curr->w_FontL;  /* Default: GL */[0m
      | [0;1;32m                                                                 
[0m[1mansi.c:363:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |                   if (--len == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  364 |                     break;[0m
      | [0;1;32m                          
[0m[1mansi.c:366:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |                   if (c < ' ' || c == 0x7f || ((c & 0x80) && ((c < 0xa0 && curr->w_c1) || curr->w_gr)))[0m
      | [0;1;32m                                                                                                       ^
[0m      | [0;32m                                                                                                        {
[0m  367 |                     break;[0m
      | [0;1;32m                          
[0m[1mansi.c:376:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |               if (len == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  377 |                 break;[0m
      | [0;1;32m                      
[0m[1mansi.c:385:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |               if (c == -1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  386 |                 continue;[0m
      | [0;1;32m                         
[0m[1mansi.c:394:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |               if (c > 0xff)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  395 |                 debug1("read UNICODE %04x\n", c);[0m
      | [0;1;32m                                                 
[0m[1mansi.c:403:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  403 |               switch (c)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  404 |                 {[0m
  405 |                 case '\033':[0m
  406 |                   curr->w_state = PRINESC;[0m
  407 |                   break;[0m
  408 |                 default:[0m
  409 |                   PrintChar(c);[0m
  410 |                 }[0m
  411 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:406:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  406 |                   curr->w_state = PRINESC;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  407 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:409:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  409 |                   PrintChar(c);[0m
      | [0;1;32m                  ^           
[0m      | [0;32m                  {           ;} 
[0m[1mansi.c:413:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  413 |               switch (c)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  414 |                 {[0m
  415 |                 case '[':[0m
  416 |                   curr->w_state = PRINCSI;[0m
  417 |                   break;[0m
  418 |                 default:[0m
  419 |                   PrintChar('\033');[0m
  420 |                   PrintChar(c);[0m
  421 |                   curr->w_state = PRIN;[0m
  422 |                 }[0m
  423 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:416:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  416 |                   curr->w_state = PRINCSI;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  417 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:419:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  419 |                   PrintChar('\033');[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  420 |                   PrintChar(c);[0m
  421 |                   curr->w_state = PRIN;[0m
      | [0;1;32m                                      
[0m      | [0;32m                                      ;} 
[0m[1mansi.c:425:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  425 |               switch (c)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  426 |                 {[0m
  427 |                 case '4':[0m
  428 |                   curr->w_state = PRIN4;[0m
  429 |                   break;[0m
  430 |                 default:[0m
  431 |                   PrintChar('\033');[0m
  432 |                   PrintChar('[');[0m
  433 |                   PrintChar(c);[0m
  434 |                   curr->w_state = PRIN;[0m
  435 |                 }[0m
  436 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:428:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  428 |                   curr->w_state = PRIN4;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  429 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:431:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  431 |                   PrintChar('\033');[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  432 |                   PrintChar('[');[0m
  433 |                   PrintChar(c);[0m
  434 |                   curr->w_state = PRIN;[0m
      | [0;1;32m                                      
[0m      | [0;32m                                      ;} 
[0m[1mansi.c:438:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  438 |               switch (c)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mansi.c:441:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  441 |                   curr->w_state = LIT;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  442 |                   PrintFlush();[0m
  443 |                   if (curr->w_pdisplay && curr->w_pdisplay->d_printfd >= 0)[0m
  444 |                     {[0m
  445 |                       close(curr->w_pdisplay->d_printfd);[0m
  446 |                       curr->w_pdisplay->d_printfd = -1;[0m
  447 |                     }[0m
  448 |                   curr->w_pdisplay = 0;[0m
  449 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:451:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  451 |                   PrintChar('\033');[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  452 |                   PrintChar('[');[0m
  453 |                   PrintChar('4');[0m
  454 |                   PrintChar(c);[0m
  455 |                   curr->w_state = PRIN;[0m
      | [0;1;32m                                      
[0m      | [0;32m                                      ;} 
[0m[1mansi.c:459:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  459 |               if (c == 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  460 |                 break;[0m
  461 |               if (c == '\033')[0m
  462 |                 {[0m
  463 |                   curr->w_state = STRESC;[0m
  464 |                   break;[0m
  465 |                 }[0m
  466 |               /* special xterm hack: accept SetStatus sequence. Yucc! */[0m
  467 |               /* allow ^E for title escapes */[0m
  468 |               if (!(curr->w_StringType == OSC && c < ' ' && c != '\005'))[0m
  469 |                 if (!curr->w_c1 || c != ('\\' ^ 0xc0))[0m
  470 |                   {[0m
  471 |                     StringChar(c);[0m
  472 |                     break;[0m
  473 |                   }[0m
  474 |               c = '\\';[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mansi.c:459:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |               if (c == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  460 |                 break;[0m
      | [0;1;32m                      
[0m[1mansi.c:468:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |               if (!(curr->w_StringType == OSC && c < ' ' && c != '\005'))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  469 |                 if (!curr->w_c1 || c != ('\\' ^ 0xc0))[0m
  470 |                   {[0m
  471 |                     StringChar(c);[0m
  472 |                     break;[0m
  473 |                   }[0m
      | [0;1;32m                   
[0m[1mansi.c:477:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  477 |               switch (c)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mansi.c:480:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  480 |                   if (StringEnd() == 0 || len <= 1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m[1mansi.c:480:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |                   if (StringEnd() == 0 || len <= 1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  481 |                     break;[0m
      | [0;1;32m                          
[0m[1mansi.c:486:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                       if (D_status == STATUS_ON_WIN)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  487 |                         break;[0m
      | [0;1;32m                              
[0m[1mansi.c:491:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |                       if (len > IOSIZE + 1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  492 |                         len = IOSIZE + 1;[0m
      | [0;1;32m                                         
[0m[1mansi.c:494:9: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  494 |                       bcopy(buf, curr->w_outbuf, len - 1);[0m
      | [0;1;32m                      ^~~~~
[0m[1mansi.c:494:9: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  494 |                       bcopy(buf, curr->w_outbuf, len - 1);[0m
      | [0;1;32m                      ^~~~~
[0m[1mansi.c:499:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  499 |                   StringChar('\033');[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  500 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:502:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  502 |                   curr->w_state = ASTR;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  503 |                   StringChar('\033');[0m
  504 |                   StringChar(c);[0m
  505 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:509:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  509 |               switch (c)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mansi.c:512:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |                   curr->w_NumArgs = 0;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  513 |                   curr->w_intermediate = 0;[0m
  514 |                   bzero((char *) curr->w_args, MAXARGS * sizeof(int));[0m
  515 |                   curr->w_state = CSI;[0m
  516 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:514:5: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  514 |                   bzero((char *) curr->w_args, MAXARGS * sizeof(int));[0m
      | [0;1;32m                  ^~~~~
[0m[1mansi.c:514:5: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  514 |                   bzero((char *) curr->w_args, MAXARGS * sizeof(int));[0m
      | [0;1;32m                  ^~~~~
[0m[1mansi.c:518:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  518 |                   StringStart(OSC);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  519 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:521:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  521 |                   StringStart(APC);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  522 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:524:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |                   StringStart(DCS);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  525 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:527:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  527 |                   StringStart(PM);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  528 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:530:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  530 |                   StringStart(GM);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  531 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mansi.c:535:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  535 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mansi.c:537:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  537 |                   if (Special(c))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m[1mansi.c:548:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |                           if (curr->w_intermediate == '$')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  549 |                             c |= '$' << 8;[0m
  550 |                           else[0m
      | [0;32m                          } 
[0m[1mansi.c:550:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |                           else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  551 | #endif[0m
  552 |                           c = -1;[0m
      | [0;1;32m                                 
[0m[1mansi.c:569:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  569 |               switch (c)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mansi.c:575:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |                       if (curr->w_args[curr->w_NumArgs] < 100000000)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  576 |                         curr->w_args[curr->w_NumArgs] =[0m
  577 |                           10 * curr->w_args[curr->w_NumArgs] + (c - '0');[0m
      | [0;1;32m                                                                         
[0m[1mansi.c:579:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  579 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mansi.c:582:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |                   if (curr->w_NumArgs < MAXARGS)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  583 |                     curr->w_NumArgs++;[0m
      | [0;1;32m                                      
[0m[1mansi.c:584:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  584 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mansi.c:586:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  586 |                   if (Special(c))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m[1mansi.c:586:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  586 |                   if (Special(c))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  587 |                     break;[0m
      | [0;1;32m                          
[0m[1mansi.c:590:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |                       if (curr->w_NumArgs < MAXARGS)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  591 |                         curr->w_NumArgs++;[0m
      | [0;1;32m                                          
[0m[1mansi.c:593:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |                       if (curr->w_state != PRIN)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  594 |                         curr->w_state = LIT;[0m
      | [0;1;32m                                            
[0m[1mansi.c:596:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |                   else if ((c >= ' ' && c <= '/') || (c >= '<' && c <= '?'))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  597 |                     curr->w_intermediate = curr->w_intermediate ? -1 : c;[0m
  598 |                   else[0m
      | [0;32m                  } 
[0m[1mansi.c:608:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  608 |               if (curr->w_mbcs)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  609 |                 if (c <= ' ' || c == 0x7f || (c >= 0x80 && c < 0xa0 && curr->w_c1))[0m
  610 |                   curr->w_mbcs = 0;[0m
      | [0;1;32m                                   
[0m[1mansi.c:609:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |                 if (c <= ' ' || c == 0x7f || (c >= 0x80 && c < 0xa0 && curr->w_c1))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m  610 |                   curr->w_mbcs = 0;[0m
      | [0;1;32m                                   
[0m[1mansi.c:612:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |               if (c < ' ')[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mansi.c:618:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |                       if (curr->w_autoaka < 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  619 |                         curr->w_autoaka = 0;[0m
      | [0;1;32m                                            
[0m[1mansi.c:621:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  622 |                     Special(c);[0m
      | [0;1;32m                               
[0m[1mansi.c:625:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  625 |               if (c >= 0x80 && c < 0xa0 && curr->w_c1)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m[1mansi.c:643:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  643 |                       break;[0m
      | [0;1;32m                      ^    
[0m      | [0;32m                      {    ;} 
[0m[1mansi.c:645:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  645 |                       if (curr->w_autoaka < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  646 |                         curr->w_autoaka = 0;[0m
  647 |                       curr->w_NumArgs = 0;[0m
  648 |                       curr->w_intermediate = 0;[0m
  649 |                       bzero((char *) curr->w_args, MAXARGS * sizeof(int));[0m
  650 |                       curr->w_state = CSI;[0m
  651 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mansi.c:645:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |                       if (curr->w_autoaka < 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  646 |                         curr->w_autoaka = 0;[0m
      | [0;1;32m                                            
[0m[1mansi.c:649:9: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  649 |                       bzero((char *) curr->w_args, MAXARGS * sizeof(int));[0m
      | [0;1;32m                      ^~~~~
[0m[1mansi.c:649:9: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  649 |                       bzero((char *) curr->w_args, MAXARGS * sizeof(int));[0m
      | [0;1;32m                      ^~~~~
[0m[1mansi.c:653:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  653 |                       StringStart(DCS);[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  654 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mansi.c:656:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  656 |                       break;[0m
      | [0;1;32m                      ^    
[0m      | [0;32m                      {    ;} 
[0m[1mansi.c:666:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  666 |                   if (c < 0x80 || curr->w_gr == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  667 |                     curr->w_rend.font = curr->w_FontL;[0m
  668 | # ifdef ENCODINGS[0m
  669 |                   else if (curr->w_gr == 2 && !curr->w_ss)[0m
      | [0;32m                  } 
[0m[1mansi.c:669:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  669 |                   else if (curr->w_gr == 2 && !curr->w_ss)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  670 |                     curr->w_rend.font = curr->w_FontE;[0m
  671 | # endif[0m
  672 |                   else[0m
      | [0;32m                  } 
[0m[1mansi.c:672:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  672 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  673 |                     curr->w_rend.font = curr->w_FontR;[0m
      | [0;1;32m                                                      
[0m[1mansi.c:707:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |                   if (oy < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  708 |                     oy = 0;[0m
      | [0;1;32m                           
[0m[1mansi.c:730:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  730 |                 if (curr->w_encoding == UTF8 && utf8_isdouble(c))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  731 |                   curr->w_mbcs = 0xff;[0m
      | [0;1;32m                                      
[0m[1mansi.c:749:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |               if (font == 031 && c == 0x80 && !curr->w_mbcs)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  750 |                 font = curr->w_rend.font = 0;[0m
      | [0;1;32m                                             
[0m[1mansi.c:751:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |               if (is_dw_font(font) && c == ' ')[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  752 |                 font = curr->w_rend.font = 0;[0m
      | [0;1;32m                                             
[0m[1mansi.c:787:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  787 |                               if (c <= 0x9f) c = (c - 0x81) * 2 + 0x21;[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  788 |                               else c = (c - 0xc1) * 2 + 0x21;[0m
      | [0;32m                              } 
[0m[1mansi.c:788:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |                               else c = (c - 0xc1) * 2 + 0x21;[0m
      | [0;1;32m                                  ^                          
[0m      | [0;32m                                   {
[0m[1mansi.c:789:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |                               if (t <= 0x7e) t -= 0x1f;[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  790 |                               else if (t <= 0x9e) t -= 0x20;[0m
      | [0;32m                              } 
[0m[1mansi.c:790:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |                               else if (t <= 0x9e) t -= 0x20;[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  791 |                               else t -= 0x7e, c++;[0m
      | [0;32m                              } 
[0m[1mansi.c:791:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |                               else t -= 0x7e, c++;[0m
      | [0;1;32m                                  ^               
[0m      | [0;32m                                   {
[0m[1mansi.c:806:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  806 |                           if (t < ' ')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  807 |                             goto tryagain;[0m
      | [0;1;32m                                          
[0m[1mansi.c:809:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |                       if (t == '\177')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  810 |                         break;[0m
      | [0;1;32m                              
[0m[1mansi.c:817:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'font' is never read [clang-analyzer-deadcode.DeadStores][0m
  817 |                   font = curr->w_rend.font = 0;[0m
      | [0;1;32m                  ^      ~~~~~~~~~~~~~~~~~~~~~
[0m[1mansi.c:817:5: [0m[0;1;36mnote: [0mValue stored to 'font' is never read[0m
  817 |                   font = curr->w_rend.font = 0;[0m
      | [0;1;32m                  ^      ~~~~~~~~~~~~~~~~~~~~~
[0m[1mansi.c:827:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  827 |                   if (c == 0x80 && font == 0 && curr->w_encoding == GBK)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  828 |                     c = 0xa4;[0m
  829 |                   else[0m
      | [0;32m                  } 
[0m[1mansi.c:829:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  830 |                     c &= 0x7f;[0m
      | [0;1;32m                              
[0m[1mansi.c:831:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |                   if (c < ' ' && font != 031)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  832 |                     goto tryagain;[0m
      | [0;1;32m                                  
[0m[1mansi.c:840:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  840 |               if (c == '\177')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  841 |                 break;[0m
      | [0;1;32m                      
[0m[1mansi.c:857:9: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  857 |                       save_mline(&curr->w_mlines[curr->w_y], cols);[0m
      | [0;1;32m                      ^
[0m[1m./image.h:82:3: [0m[0;1;36mnote: [0mexpanded from macro 'save_mline'[0m
   82 |          bcopy((char *)(ml)->image, (char *)mline_old.image, (n));      \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:857:9: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  857 |                       save_mline(&curr->w_mlines[curr->w_y], cols);[0m
      | [0;1;32m                      ^
[0m[1m./image.h:82:3: [0m[0;1;36mnote: [0mexpanded from macro 'save_mline'[0m
   82 |          bcopy((char *)(ml)->image, (char *)mline_old.image, (n));      \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:873:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  873 |                   if (curr->w_wrap)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  874 |                     curr->w_x++;[0m
      | [0;1;32m                                
[0m[1mansi.c:880:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  880 |                   if (curr->w_y != curr->w_bot && curr->w_y != curr->w_height - 1)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  881 |                     curr->w_y++;[0m
      | [0;1;32m                                
[0m[1mansi.c:906:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  906 |   if (!printcmd && curr->w_state == PRIN)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  907 |     PrintFlush();[0m
      | [0;1;32m                 
[0m[1mansi.c:911:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  911 | WLogString(p, buf, len)[0m
      | [0;1;32m^
[0m[1mansi.c:916:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  916 |   if (!p->w_log)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  917 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:930:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  930 |   if (!log_flush)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  931 |     logfflush(p->w_log);[0m
      | [0;1;32m                        
[0m[1mansi.c:935:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  935 | Special(c)[0m
      | [0;1;32m^
[0m[1mansi.c:941:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  941 |       BackSpace();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  942 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mansi.c:944:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  944 |       Return();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  945 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mansi.c:947:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  947 |       if (curr->w_autoaka)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  948 |         FindAKA();[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mansi.c:947:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  947 |       if (curr->w_autoaka)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  948 |         FindAKA();[0m
      | [0;1;32m                  
[0m[1mansi.c:950:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  950 |       LineFeed(0);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  951 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mansi.c:953:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  953 |       WBell(curr, visual_bell);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  954 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mansi.c:956:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  956 |       ForwardTab();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  957 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mansi.c:960:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  960 |       MapCharset(G0);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  961 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mansi.c:963:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  963 |       MapCharset(G1);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  964 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mansi.c:971:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  971 | DoESC(c, intermediate)[0m
      | [0;1;32m^
[0m[1mansi.c:978:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  978 |       switch (c)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mansi.c:981:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  981 |           LineFeed(1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  982 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:984:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  984 |           LineFeed(0);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  985 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:987:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  987 |           ReverseLineFeed();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  988 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:990:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  990 |           curr->w_tabs[curr->w_x] = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  991 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:993:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  993 |           Report("\033[?%d;%dc", 1, 2);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  994 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:996:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  996 |           SaveCursor(&curr->w_saved);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  997 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:999:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  999 |           RestoreCursor(&curr->w_saved);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1000 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1002:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1002 |           ClearScreen();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1003 |           ResetWindow(curr);[0m
 1004 |           LKeypadMode(&curr->w_layer, 0);[0m
 1005 |           LCursorkeysMode(&curr->w_layer, 0);[0m
 1006 | #ifndef TIOCPKT[0m
 1007 |           WNewAutoFlow(curr, 1);[0m
 1008 | #endif[0m
 1009 |           /* XXX[0m
 1010 |           SetRendition(&mchar_null);[0m
 1011 |           InsertMode(0);[0m
 1012 |           ChangeScrollRegion(0, rows - 1);[0m
 1013 |           */[0m
 1014 |           LGotoPos(&curr->w_layer, curr->w_x, curr->w_y);[0m
 1015 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1017:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1017 |           LKeypadMode(&curr->w_layer, curr->w_keypad = 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1018 | #ifndef TIOCPKT[0m
 1019 |           WNewAutoFlow(curr, 0);[0m
 1020 | #endif /* !TIOCPKT */[0m
 1021 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1023:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1023 |           LKeypadMode(&curr->w_layer, curr->w_keypad = 0);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1024 | #ifndef TIOCPKT[0m
 1025 |           WNewAutoFlow(curr, 1);[0m
 1026 | #endif /* !TIOCPKT */[0m
 1027 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1030:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1030 |           MapCharset(G2);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1031 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1033:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1033 |           MapCharset(G3);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1034 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1036:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1036 |           MapCharsetR(G1);      /* LS1R */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1037 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1040:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1040 |           MapCharsetR(G2);      /* LS2R */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1041 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1043:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1043 |           MapCharsetR(G3);      /* LS3R */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1044 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1046:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1046 |           if (curr->w_charsets[curr->w_Charset] != curr->w_charsets[G2][0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1047 |               || curr->w_charsets[curr->w_CharsetR] != curr->w_charsets[G2])[0m
 1048 |             curr->w_FontR = curr->w_FontL = curr->w_charsets[curr->w_ss = G2];[0m
 1049 |           else[0m
 1050 |             curr->w_ss = 0;[0m
 1051 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1047:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1047 |               || curr->w_charsets[curr->w_CharsetR] != curr->w_charsets[G2])[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1048 |             curr->w_FontR = curr->w_FontL = curr->w_charsets[curr->w_ss = G2];[0m
 1049 |           else[0m
      | [0;32m          } 
[0m[1mansi.c:1049:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1049 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1050 |             curr->w_ss = 0;[0m
      | [0;1;32m                           
[0m[1mansi.c:1053:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1053 |           if (curr->w_charsets[curr->w_Charset] != curr->w_charsets[G3][0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1054 |               || curr->w_charsets[curr->w_CharsetR] != curr->w_charsets[G3])[0m
 1055 |             curr->w_FontR = curr->w_FontL = curr->w_charsets[curr->w_ss = G3];[0m
 1056 |           else[0m
 1057 |             curr->w_ss = 0;[0m
 1058 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1054:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1054 |               || curr->w_charsets[curr->w_CharsetR] != curr->w_charsets[G3])[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1055 |             curr->w_FontR = curr->w_FontL = curr->w_charsets[curr->w_ss = G3];[0m
 1056 |           else[0m
      | [0;32m          } 
[0m[1mansi.c:1056:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1057 |             curr->w_ss = 0;[0m
      | [0;1;32m                           
[0m[1mansi.c:1061:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1061 |           WBell(curr, 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1062 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1066:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1066 |       switch (c)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1067 |         {[0m
 1068 |         case '8':[0m
 1069 |           FillWithEs();[0m
 1070 |           break;[0m
 1071 |         }[0m
 1072 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1069:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1069 |           FillWithEs();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1070 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1075:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1075 |       DesignateCharset(c, G0);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1076 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1078:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1078 |       DesignateCharset(c, G1);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1079 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1081:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1081 |       DesignateCharset(c, G2);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1082 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1084:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1084 |       DesignateCharset(c, G3);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1085 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1097:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1097 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mansi.c:1099:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1099 |       DesignateCharset(c & 037, G1);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1100 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1102:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1102 |       DesignateCharset(c & 037, G2);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1103 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1105:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1105 |       DesignateCharset(c & 037, G3);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1106 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1113:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1113 | DoCSI(c, intermediate)[0m
      | [0;1;32m^
[0m[1mansi.c:1118:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1118 |   if (curr->w_NumArgs > MAXARGS)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1119 |     curr->w_NumArgs = MAXARGS;[0m
      | [0;1;32m                              
[0m[1mansi.c:1123:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1123 |       switch (c)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mansi.c:1127:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1127 |           if (a1 < 1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1128 |             a1 = 1;[0m
      | [0;1;32m                   
[0m[1mansi.c:1129:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1129 |           if (curr->w_origin)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1130 |             a1 += curr->w_top;[0m
 1131 |           if (a1 > rows)[0m
 1132 |             a1 = rows;[0m
 1133 |           if (a2 < 1)[0m
 1134 |             a2 = 1;[0m
 1135 |           if (a2 > cols)[0m
 1136 |             a2 = cols;[0m
 1137 |           LGotoPos(&curr->w_layer, --a2, --a1);[0m
 1138 |           curr->w_x = a2;[0m
 1139 |           curr->w_y = a1;[0m
 1140 |           if (curr->w_autoaka)[0m
 1141 |             curr->w_autoaka = a1 + 1;[0m
 1142 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1129:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1129 |           if (curr->w_origin)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1130 |             a1 += curr->w_top;[0m
      | [0;1;32m                              
[0m[1mansi.c:1131:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1131 |           if (a1 > rows)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1132 |             a1 = rows;[0m
      | [0;1;32m                      
[0m[1mansi.c:1133:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1133 |           if (a2 < 1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1134 |             a2 = 1;[0m
      | [0;1;32m                   
[0m[1mansi.c:1135:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1135 |           if (a2 > cols)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1136 |             a2 = cols;[0m
      | [0;1;32m                      
[0m[1mansi.c:1140:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1140 |           if (curr->w_autoaka)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1141 |             curr->w_autoaka = a1 + 1;[0m
      | [0;1;32m                                     
[0m[1mansi.c:1144:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1144 |           if (a1 < 0 || a1 > 2)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1145 |             a1 = 0;[0m
 1146 |           switch (a1)[0m
 1147 |             {[0m
 1148 |             case 0:[0m
 1149 |               ClearToEOS();[0m
 1150 |               break;[0m
 1151 |             case 1:[0m
 1152 |               ClearFromBOS();[0m
 1153 |               break;[0m
 1154 |             case 2:[0m
 1155 |               ClearScreen();[0m
 1156 |               LGotoPos(&curr->w_layer, curr->w_x, curr->w_y);[0m
 1157 |               break;[0m
 1158 |             }[0m
 1159 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1144:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1144 |           if (a1 < 0 || a1 > 2)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1145 |             a1 = 0;[0m
      | [0;1;32m                   
[0m[1mansi.c:1149:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1149 |               ClearToEOS();[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1150 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1152:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1152 |               ClearFromBOS();[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1153 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1155:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1155 |               ClearScreen();[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1156 |               LGotoPos(&curr->w_layer, curr->w_x, curr->w_y);[0m
 1157 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1161:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1161 |           if (a1 < 0 || a1 > 2)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1162 |             a1 %= 3;[0m
 1163 |           switch (a1)[0m
 1164 |             {[0m
 1165 |             case 0:[0m
 1166 |               ClearLineRegion(curr->w_x, cols - 1);[0m
 1167 |               break;[0m
 1168 |             case 1:[0m
 1169 |               ClearLineRegion(0, curr->w_x);[0m
 1170 |               break;[0m
 1171 |             case 2:[0m
 1172 |               ClearLineRegion(0, cols - 1);[0m
 1173 |               break;[0m
 1174 |             }[0m
 1175 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1161:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1161 |           if (a1 < 0 || a1 > 2)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1162 |             a1 %= 3;[0m
      | [0;1;32m                    
[0m[1mansi.c:1166:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1166 |               ClearLineRegion(curr->w_x, cols - 1);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1167 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1169:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1169 |               ClearLineRegion(0, curr->w_x);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1170 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1172:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1172 |               ClearLineRegion(0, cols - 1);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1173 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1177:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1177 |           a1 = curr->w_x + (a1 ? a1 - 1 : 0);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1178 |           ClearLineRegion(curr->w_x, a1 < cols ? a1 : cols - 1);[0m
 1179 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1181:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1181 |           CursorUp(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1182 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1184:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1184 |           CursorDown(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1185 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1187:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1187 |           CursorRight(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1188 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1190:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1190 |           CursorLeft(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1191 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1193:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1193 |           curr->w_x = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1194 |           CursorDown(a1 ? a1 : 1);      /* positions cursor */[0m
 1195 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1197:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1197 |           curr->w_x = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1198 |           CursorUp(a1 ? a1 : 1);        /* positions cursor */[0m
 1199 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1203:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1203 |           if (curr->w_x >= cols)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1204 |             curr->w_x = cols - 1;[0m
 1205 |           LGotoPos(&curr->w_layer, curr->w_x, curr->w_y);[0m
 1206 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1203:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1203 |           if (curr->w_x >= cols)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1204 |             curr->w_x = cols - 1;[0m
      | [0;1;32m                                 
[0m[1mansi.c:1208:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1208 |           curr->w_y = a1 ? a1 - 1 : 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1209 |           if (curr->w_y >= rows)[0m
 1210 |             curr->w_y = rows - 1;[0m
 1211 |           LGotoPos(&curr->w_layer, curr->w_x, curr->w_y);[0m
 1212 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1209:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1209 |           if (curr->w_y >= rows)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1210 |             curr->w_y = rows - 1;[0m
      | [0;1;32m                                 
[0m[1mansi.c:1214:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1214 |           SelectRendition();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1215 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1217:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1217 |           if (a1 == 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1218 |             curr->w_tabs[curr->w_x] = 0;[0m
 1219 |           else if (a1 == 3)[0m
 1220 |             bzero(curr->w_tabs, cols);[0m
 1221 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1217:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1217 |           if (a1 == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1218 |             curr->w_tabs[curr->w_x] = 0;[0m
 1219 |           else if (a1 == 3)[0m
      | [0;32m          } 
[0m[1mansi.c:1219:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1219 |           else if (a1 == 3)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1220 |             bzero(curr->w_tabs, cols);[0m
      | [0;1;32m                                      
[0m[1mansi.c:1220:6: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 1220 |             bzero(curr->w_tabs, cols);[0m
      | [0;1;32m            ^~~~~
[0m[1mansi.c:1220:6: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 1220 |             bzero(curr->w_tabs, cols);[0m
      | [0;1;32m            ^~~~~
[0m[1mansi.c:1223:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1223 |           if (!a1)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mansi.c:1223:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1223 |           if (!a1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1224 |             a1 = 1;[0m
      | [0;1;32m                   
[0m[1mansi.c:1225:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1225 |           if (!a2)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1226 |             a2 = rows;[0m
      | [0;1;32m                      
[0m[1mansi.c:1227:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1227 |           if (a1 < 1 || a2 > rows || a1 >= a2)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1228 |             break;[0m
      | [0;1;32m                  
[0m[1mansi.c:1237:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1237 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1238 |             curr->w_y = curr->w_x = 0;[0m
      | [0;1;32m                                      
[0m[1mansi.c:1242:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1242 |           SaveCursor(&curr->w_saved);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1243 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1245:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1245 |           switch(a1)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mansi.c:1248:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1248 |               if (curr->w_layer.l_cvlist)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1249 |                 Report("\033[1t", 0, 0);[0m
 1250 |               else[0m
 1251 |                 Report("\033[2t", 0, 0);[0m
 1252 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1248:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1248 |               if (curr->w_layer.l_cvlist)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1249 |                 Report("\033[1t", 0, 0);[0m
 1250 |               else[0m
      | [0;32m              } 
[0m[1mansi.c:1250:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1250 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1251 |                 Report("\033[2t", 0, 0);[0m
      | [0;1;32m                                        
[0m[1mansi.c:1254:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1254 |               LRefreshAll(&curr->w_layer, 0);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1255 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1257:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1257 |               a1 = strlen(curr->w_title);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1258 |               if ((unsigned)(curr->w_inlen + 5 + a1) <= sizeof(curr->w_inbuf))[0m
 1259 |                 {[0m
 1260 |                   bcopy("\033]l", curr->w_inbuf + curr->w_inlen, 3);[0m
 1261 |                   bcopy(curr->w_title, curr->w_inbuf + curr->w_inlen + 3, a1);[0m
 1262 |                   bcopy("\033\\", curr->w_inbuf + curr->w_inlen + 3 + a1, 2);[0m
 1263 |                   curr->w_inlen += 5 + a1;[0m
 1264 |                 }[0m
 1265 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1260:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1260 |                   bcopy("\033]l", curr->w_inbuf + curr->w_inlen, 3);[0m
      | [0;1;32m                  ^~~~~
[0m[1mansi.c:1260:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1260 |                   bcopy("\033]l", curr->w_inbuf + curr->w_inlen, 3);[0m
      | [0;1;32m                  ^~~~~
[0m[1mansi.c:1261:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1261 |                   bcopy(curr->w_title, curr->w_inbuf + curr->w_inlen + 3, a1);[0m
      | [0;1;32m                  ^~~~~
[0m[1mansi.c:1261:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1261 |                   bcopy(curr->w_title, curr->w_inbuf + curr->w_inlen + 3, a1);[0m
      | [0;1;32m                  ^~~~~
[0m[1mansi.c:1262:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1262 |                   bcopy("\033\\", curr->w_inbuf + curr->w_inlen + 3 + a1, 2);[0m
      | [0;1;32m                  ^~~~~
[0m[1mansi.c:1262:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1262 |                   bcopy("\033\\", curr->w_inbuf + curr->w_inlen + 3 + a1, 2);[0m
      | [0;1;32m                  ^~~~~
[0m[1mansi.c:1267:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1267 |               a1 = curr->w_args[2];[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1268 |               if (a1 < 1)[0m
 1269 |                 a1 = curr->w_width;[0m
 1270 |               if (a2 < 1)[0m
 1271 |                 a2 = curr->w_height;[0m
 1272 |               if (a1 > 10000 || a2 > 10000)[0m
 1273 |                 break;[0m
 1274 |               WChangeSize(curr, a1, a2);[0m
 1275 |               cols = curr->w_width;[0m
 1276 |               rows = curr->w_height;[0m
 1277 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1268:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1268 |               if (a1 < 1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1269 |                 a1 = curr->w_width;[0m
      | [0;1;32m                                   
[0m[1mansi.c:1270:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1270 |               if (a2 < 1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1271 |                 a2 = curr->w_height;[0m
      | [0;1;32m                                    
[0m[1mansi.c:1272:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1272 |               if (a1 > 10000 || a2 > 10000)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1273 |                 break;[0m
      | [0;1;32m                      
[0m[1mansi.c:1279:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1279 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mansi.c:1283:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1283 |           RestoreCursor(&curr->w_saved);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1284 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1286:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1286 |           if (!a1)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1287 |             a1 = 1;[0m
 1288 |           while (a1--)[0m
 1289 |             ForwardTab();[0m
 1290 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1286:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1286 |           if (!a1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1287 |             a1 = 1;[0m
      | [0;1;32m                   
[0m[1mansi.c:1288:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1288 |           while (a1--)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1289 |             ForwardTab();[0m
      | [0;1;32m                         
[0m[1mansi.c:1292:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1292 |           if (!a1)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1293 |             a1 = 1;[0m
 1294 |           while (a1--)[0m
 1295 |             BackwardTab();[0m
 1296 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1292:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1292 |           if (!a1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1293 |             a1 = 1;[0m
      | [0;1;32m                   
[0m[1mansi.c:1294:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1294 |           while (a1--)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1295 |             BackwardTab();[0m
      | [0;1;32m                          
[0m[1mansi.c:1298:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1298 |           InsertLine(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1299 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1301:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1301 |           DeleteLine(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1302 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1304:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1304 |           DeleteChar(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1305 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1307:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1307 |           InsertChar(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1308 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1310:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1310 |           ASetMode(1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1311 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1313:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1313 |           ASetMode(0);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1314 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1316:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1316 |           if (a1 == 5)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1317 |             PrintStart();[0m
 1318 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1316:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1316 |           if (a1 == 5)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1317 |             PrintStart();[0m
      | [0;1;32m                         
[0m[1mansi.c:1320:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1320 |           if (a1 == 5)          /* Report terminal status */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1321 |             Report("\033[0n", 0, 0);[0m
 1322 |           else if (a1 == 6)             /* Report cursor position */[0m
 1323 |             Report("\033[%d;%dR", curr->w_y + 1, curr->w_x + 1);[0m
 1324 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1320:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1320 |           if (a1 == 5)          /* Report terminal status */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1321 |             Report("\033[0n", 0, 0);[0m
 1322 |           else if (a1 == 6)             /* Report cursor position */[0m
      | [0;32m          } 
[0m[1mansi.c:1322:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1322 |           else if (a1 == 6)             /* Report cursor position */[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1323 |             Report("\033[%d;%dR", curr->w_y + 1, curr->w_x + 1);[0m
      | [0;1;32m                                                                
[0m[1mansi.c:1326:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1326 |           if (a1 == 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1327 |             Report("\033[?%d;%dc", 1, 2);[0m
 1328 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1326:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1326 |           if (a1 == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1327 |             Report("\033[?%d;%dc", 1, 2);[0m
      | [0;1;32m                                         
[0m[1mansi.c:1330:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1330 |           if (a1 == 0 || a1 == 1)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1331 |             Report("\033[%d;1;1;112;112;1;0x", a1 + 2, 0);[0m
 1332 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1330:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1330 |           if (a1 == 0 || a1 == 1)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1331 |             Report("\033[%d;1;1;112;112;1;0x", a1 + 2, 0);[0m
      | [0;1;32m                                                          
[0m[1mansi.c:1334:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1334 |           if (a1 == 6 || a1 == 7)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1335 |             {[0m
 1336 |               curr->w_curinv = 7 - a1;[0m
 1337 |               LCursorVisibility(&curr->w_layer, curr->w_curinv ? -1 : curr->w_curvvis);[0m
 1338 |             }[0m
 1339 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1341:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1341 |           ScrollRegion(a1 ? a1 : 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1342 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1346:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1346 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mansi.c:1350:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1350 |       for (a2 = 0; a2 < curr->w_NumArgs; a2++)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mansi.c:1354:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1354 |           if (c != 'h' && c != 'l')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1355 |             break;[0m
      | [0;1;32m                  
[0m[1mansi.c:1360:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1360 |               LCursorkeysMode(&curr->w_layer, curr->w_cursorkeys = i);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1361 | #ifndef TIOCPKT[0m
 1362 |               WNewAutoFlow(curr, !i);[0m
 1363 | #endif /* !TIOCPKT */[0m
 1364 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1366:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1366 |               if (i)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1367 |                 {[0m
 1368 | #ifdef FONT[0m
 1369 | # ifdef ENCODINGS[0m
 1370 |                   if (curr->w_encoding)[0m
 1371 |                     break;[0m
 1372 | # endif[0m
 1373 |                   curr->w_charsets[0] = curr->w_charsets[1] =[0m
 1374 |                     curr->w_charsets[2] = curr->w_charsets[3] =[0m
 1375 |                     curr->w_FontL = curr->w_FontR = ASCII;[0m
 1376 |                   curr->w_Charset = 0;[0m
 1377 |                   curr->w_CharsetR = 2;[0m
 1378 |                   curr->w_ss = 0;[0m
 1379 | #endif[0m
 1380 |                 }[0m
 1381 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1370:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1370 |                   if (curr->w_encoding)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1371 |                     break;[0m
      | [0;1;32m                          
[0m[1mansi.c:1383:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1383 |               i = (i ? Z0width : Z1width);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1384 |               ClearScreen();[0m
 1385 |               curr->w_x = 0;[0m
 1386 |               curr->w_y = 0;[0m
 1387 |               WChangeSize(curr, i, curr->w_height);[0m
 1388 |               cols = curr->w_width;[0m
 1389 |               rows = curr->w_height;[0m
 1390 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1393:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1393 |               if (i != curr->w_revvid)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1394 |                 WReverseVideo(curr, i);[0m
 1395 |               curr->w_revvid = i;[0m
 1396 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1393:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1393 |               if (i != curr->w_revvid)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1394 |                 WReverseVideo(curr, i);[0m
      | [0;1;32m                                       
[0m[1mansi.c:1398:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1398 |               if ((curr->w_origin = i) != 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1399 |                 {[0m
 1400 |                   curr->w_y = curr->w_top;[0m
 1401 |                   curr->w_x = 0;[0m
 1402 |                 }[0m
 1403 |               else[0m
 1404 |                 curr->w_y = curr->w_x = 0;[0m
 1405 |               LGotoPos(&curr->w_layer, curr->w_x, curr->w_y);[0m
 1406 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1403:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1403 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1404 |                 curr->w_y = curr->w_x = 0;[0m
      | [0;1;32m                                          
[0m[1mansi.c:1408:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1408 |               curr->w_wrap = i;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1409 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1413:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1413 |               curr->w_mouse = i ? 9 : 0;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1414 |               LMouseMode(&curr->w_layer, curr->w_mouse);[0m
 1415 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1424:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1424 |               curr->w_curinv = !i;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1425 |               LCursorVisibility(&curr->w_layer, curr->w_curinv ? -1 : curr->w_curvvis);[0m
 1426 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1453:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1453 |                   if (a1 == 47 && !i)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1454 |                     curr->w_saved.on = 0;[0m
      | [0;1;32m                                         
[0m[1mansi.c:1458:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1458 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mansi.c:1460:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1460 |               if (i)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1461 |                 SaveCursor(&curr->w_saved);[0m
 1462 |               else[0m
 1463 |                 RestoreCursor(&curr->w_saved);[0m
 1464 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1460:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1460 |               if (i)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1461 |                 SaveCursor(&curr->w_saved);[0m
 1462 |               else[0m
      | [0;32m              } 
[0m[1mansi.c:1462:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1462 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1463 |                 RestoreCursor(&curr->w_saved);[0m
      | [0;1;32m                                              
[0m[1mansi.c:1472:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1472 |               LMouseMode(&curr->w_layer, curr->w_mouse);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1473 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mansi.c:1476:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1476 |                 curr->w_extmouse = i ? a1 : 0;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1477 |                 LExtMouseMode(&curr->w_layer, curr->w_extmouse);[0m
 1478 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mansi.c:1484:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1484 |       switch (c)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1485 |         {[0m
 1486 |         case 'c':       /* secondary DA */[0m
 1487 |           if (a1 == 0)[0m
 1488 |             Report("\033[>%d;%d;0c", 83, nversion);     /* 83 == 'S' */[0m
 1489 |           break;[0m
 1490 |         }[0m
 1491 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1487:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1487 |           if (a1 == 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1488 |             Report("\033[>%d;%d;0c", 83, nversion);     /* 83 == 'S' */[0m
 1489 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:1487:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1487 |           if (a1 == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1488 |             Report("\033[>%d;%d;0c", 83, nversion);     /* 83 == 'S' */[0m
      | [0;1;32m                                                                       
[0m[1mansi.c:1497:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1497 | StringStart(type)[0m
      | [0;1;32m^
[0m[1mansi.c:1506:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1506 | StringChar(c)[0m
      | [0;1;32m^
[0m[1mansi.c:1509:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1509 |   if (curr->w_stringp >= curr->w_string + MAXSTR - 1)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1510 |     curr->w_state = LIT;[0m
 1511 |   else[0m
      | [0;32m  } 
[0m[1mansi.c:1511:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1511 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1512 |     *(curr->w_stringp)++ = c;[0m
      | [0;1;32m                             
[0m[1mansi.c:1529:3: [0m[0;1;35mwarning: [0m[1mValue stored to 't' is never read [clang-analyzer-deadcode.DeadStores][0m
 1529 |   t = curr->w_state == STRESC ? "\033\\" : "\a";[0m
      | [0;1;32m  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mansi.c:1529:3: [0m[0;1;36mnote: [0mValue stored to 't' is never read[0m
 1529 |   t = curr->w_state == STRESC ? "\033\\" : "\a";[0m
      | [0;1;32m  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mansi.c:1536:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1536 |       if (curr->w_string[0] == ';' || (p = index(curr->w_string, ';')) == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mansi.c:1536:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1536 |       if (curr->w_string[0] == ';' || (p = index(curr->w_string, ';')) == 0)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1537 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:1551:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1551 |               for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1552 |                 if (D_forecv->c_layer->l_bottom == &curr->w_layer)[0m
 1553 |                   break;        /* found it */[0m
      | [0;1;32m                                              
[0m[1mansi.c:1552:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1552 |                 if (D_forecv->c_layer->l_bottom == &curr->w_layer)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1553 |                   break;        /* found it */[0m
      | [0;1;32m                                              
[0m[1mansi.c:1554:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1554 |               if (display == 0 && curr->w_layer.l_cvlist)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1555 |                 display = curr->w_layer.l_cvlist->c_display;[0m
      | [0;1;32m                                                            
[0m[1mansi.c:1556:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1556 |               if (display == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1557 |                 display = displays;[0m
      | [0;1;32m                                   
[0m[1mansi.c:1598:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1598 |       if (typ < 0 || typ > 2)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1599 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:1603:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1603 |       if (curr->w_stringp > curr->w_string)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1604 |         bcopy(p, curr->w_string, curr->w_stringp - curr->w_string);[0m
      | [0;1;32m                                                                   
[0m[1mansi.c:1604:2: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1604 |         bcopy(p, curr->w_string, curr->w_stringp - curr->w_string);[0m
      | [0;1;32m        ^~~~~
[0m[1mansi.c:1604:2: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1604 |         bcopy(p, curr->w_string, curr->w_stringp - curr->w_string);[0m
      | [0;1;32m        ^~~~~
[0m[1mansi.c:1608:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1608 |       if (curr->w_hstatus)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1609 |         {[0m
 1610 |           if (strcmp(curr->w_hstatus, curr->w_string) == 0)[0m
 1611 |             break;      /* not changed */[0m
 1612 |           free(curr->w_hstatus);[0m
 1613 |           curr->w_hstatus = 0;[0m
 1614 |         }[0m
 1615 |       if (curr->w_string != curr->w_stringp)[0m
 1616 |         curr->w_hstatus = SaveStr(curr->w_string);[0m
 1617 |       WindowChanged(curr, 'h');[0m
 1618 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1610:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1610 |           if (strcmp(curr->w_hstatus, curr->w_string) == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1611 |             break;      /* not changed */[0m
      | [0;1;32m                                         
[0m[1mansi.c:1615:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1615 |       if (curr->w_string != curr->w_stringp)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1616 |         curr->w_hstatus = SaveStr(curr->w_string);[0m
      | [0;1;32m                                                  
[0m[1mansi.c:1623:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1623 |           for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1624 |             if (cv->c_layer->l_bottom == &curr->w_layer)[0m
 1625 |               break;[0m
      | [0;1;32m                    
[0m[1mansi.c:1624:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1624 |             if (cv->c_layer->l_bottom == &curr->w_layer)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1625 |               break;[0m
      | [0;1;32m                    
[0m[1mansi.c:1626:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1626 |           if (cv || curr->w_StringType == GM)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1627 |             MakeStatus(curr->w_string);[0m
      | [0;1;32m                                       
[0m[1mansi.c:1629:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1629 |       return -1;[0m
      | [0;1;32m      ^        
[0m      | [0;32m      {        ;} 
[0m[1mansi.c:1631:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1631 |       LAY_DISPLAYS(&curr->w_layer, AddStr(curr->w_string));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1632 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./layer.h:120:29: [0m[0;1;36mnote: [0mexpanded from macro 'LAY_DISPLAYS'[0m
  120 | #define LAY_DISPLAYS(l, fn) do                          \[0m
      | [0;1;32m                            ^
[0m[1mansi.c:1634:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1634 |       if (curr->w_title == curr->w_akabuf && !*curr->w_string)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1635 |         break;[0m
 1636 |       if (curr->w_dynamicaka)[0m
 1637 |         ChangeAKA(curr, curr->w_string, strlen(curr->w_string));[0m
 1638 |       if (!*curr->w_string)[0m
 1639 |         curr->w_autoaka = curr->w_y + 1;[0m
 1640 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mansi.c:1634:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1634 |       if (curr->w_title == curr->w_akabuf && !*curr->w_string)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1635 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:1636:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1636 |       if (curr->w_dynamicaka)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1637 |         ChangeAKA(curr, curr->w_string, strlen(curr->w_string));[0m
      | [0;1;32m                                                                
[0m[1mansi.c:1638:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1638 |       if (!*curr->w_string)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1639 |         curr->w_autoaka = curr->w_y + 1;[0m
      | [0;1;32m                                        
[0m[1mansi.c:1642:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1642 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mansi.c:1654:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1654 |   if (!(display && curr == D_fore && (printcmd || D_PO)))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1655 |     for (display = displays; display; display = display->d_next)[0m
 1656 |       if (curr == D_fore && (printcmd || D_PO))[0m
 1657 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:1655:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1655 |     for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1656 |       if (curr == D_fore && (printcmd || D_PO))[0m
 1657 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:1656:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1656 |       if (curr == D_fore && (printcmd || D_PO))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1657 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:1664:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1664 |           if (printcmd || D_PO)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1665 |             break;[0m
      | [0;1;32m                  
[0m[1mansi.c:1670:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1670 |           if (!display || display->d_next || !(printcmd || D_PO))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1671 |             return;[0m
      | [0;1;32m                   
[0m[1mansi.c:1677:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1677 |   if (printcmd && curr->w_pdisplay->d_printfd < 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1678 |     curr->w_pdisplay->d_printfd = printpipe(curr, printcmd);[0m
      | [0;1;32m                                                            
[0m[1mansi.c:1682:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1682 | PrintChar(c)[0m
      | [0;1;32m^
[0m[1mansi.c:1685:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1685 |   if (curr->w_stringp >= curr->w_string + MAXSTR - 1)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1686 |     PrintFlush();[0m
      | [0;1;32m                 
[0m[1mansi.c:1725:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1725 | WNewAutoFlow(win, on)[0m
      | [0;1;32m^
[0m[1mansi.c:1730:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1730 |   if (win->w_flow & FLOW_AUTOFLAG)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1731 |     win->w_flow = FLOW_AUTOFLAG | (FLOW_AUTO|FLOW_NOW) * on;[0m
 1732 |   else[0m
      | [0;32m  } 
[0m[1mansi.c:1732:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1732 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1733 |     win->w_flow = (win->w_flow & ~FLOW_AUTO) | FLOW_AUTO * on;[0m
      | [0;1;32m                                                              
[0m[1mansi.c:1741:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1741 | DesignateCharset(c, n)[0m
      | [0;1;32m^
[0m[1mansi.c:1746:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1746 |   if (c == ('@' & 037))         /* map JIS 6226 to 0208 */[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1747 |     c = KANJI;[0m
      | [0;1;32m              
[0m[1mansi.c:1749:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1749 |   if (c == 'B')[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1750 |     c = ASCII;[0m
      | [0;1;32m              
[0m[1mansi.c:1760:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1760 |       if (curr->w_CharsetR == n)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1761 |         curr->w_FontR = c;[0m
      | [0;1;32m                          
[0m[1mansi.c:1766:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1766 | MapCharset(n)[0m
      | [0;1;32m^
[0m[1mansi.c:1780:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1780 | MapCharsetR(n)[0m
      | [0;1;32m^
[0m[1mansi.c:1795:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1795 | SaveCursor(cursor)[0m
      | [0;1;32m^
[0m[1mansi.c:1805:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1805 |   bcopy((char *) curr->w_charsets, (char *) cursor->Charsets,[0m
      | [0;1;32m  ^~~~~
[0m[1mansi.c:1805:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1805 |   bcopy((char *) curr->w_charsets, (char *) cursor->Charsets,[0m
      | [0;1;32m  ^~~~~
[0m[1mansi.c:1811:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1811 | RestoreCursor(cursor)[0m
      | [0;1;32m^
[0m[1mansi.c:1814:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1814 |   if (!cursor->on)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1815 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:1821:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1821 |   bcopy((char *) cursor->Charsets, (char *) curr->w_charsets,[0m
      | [0;1;32m  ^~~~~
[0m[1mansi.c:1821:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1821 |   bcopy((char *) cursor->Charsets, (char *) curr->w_charsets,[0m
      | [0;1;32m  ^~~~~
[0m[1mansi.c:1850:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1850 |   if (curr->w_x == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1851 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:1857:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1857 | LineFeed(out_mode)[0m
      | [0;1;32m^
[0m[1mansi.c:1861:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1861 |   if (out_mode)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1862 |     curr->w_x = 0;[0m
      | [0;1;32m                  
[0m[1mansi.c:1865:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1865 |       if (curr->w_y < rows-1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1866 |         curr->w_y++;[0m
      | [0;1;32m                    
[0m[1mansi.c:1870:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1870 |   if (curr->w_autoaka > 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1871 |     curr->w_autoaka--;[0m
      | [0;1;32m                      
[0m[1mansi.c:1886:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1886 |   else if (curr->w_y > 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1887 |     CursorUp(1);[0m
      | [0;1;32m                
[0m[1mansi.c:1891:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1891 | InsertChar(n)[0m
      | [0;1;32m^
[0m[1mansi.c:1896:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1896 |   if (n <= 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1897 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:1898:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1898 |   if (x == cols)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1899 |     x--;[0m
      | [0;1;32m        
[0m[1mansi.c:1900:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1900 |   save_mline(&curr->w_mlines[y], cols);[0m
      | [0;1;32m  ^
[0m[1m./image.h:82:3: [0m[0;1;36mnote: [0mexpanded from macro 'save_mline'[0m
   82 |          bcopy((char *)(ml)->image, (char *)mline_old.image, (n));      \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:1900:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1900 |   save_mline(&curr->w_mlines[y], cols);[0m
      | [0;1;32m  ^
[0m[1m./image.h:82:3: [0m[0;1;36mnote: [0mexpanded from macro 'save_mline'[0m
   82 |          bcopy((char *)(ml)->image, (char *)mline_old.image, (n));      \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:1907:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1907 | DeleteChar(n)[0m
      | [0;1;32m^
[0m[1mansi.c:1912:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1912 |   if (x == cols)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1913 |     x--;[0m
      | [0;1;32m        
[0m[1mansi.c:1914:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1914 |   save_mline(&curr->w_mlines[y], cols);[0m
      | [0;1;32m  ^
[0m[1m./image.h:82:3: [0m[0;1;36mnote: [0mexpanded from macro 'save_mline'[0m
   82 |          bcopy((char *)(ml)->image, (char *)mline_old.image, (n));      \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:1914:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1914 |   save_mline(&curr->w_mlines[y], cols);[0m
      | [0;1;32m  ^
[0m[1m./image.h:82:3: [0m[0;1;36mnote: [0mexpanded from macro 'save_mline'[0m
   82 |          bcopy((char *)(ml)->image, (char *)mline_old.image, (n));      \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:1921:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1921 | DeleteLine(n)[0m
      | [0;1;32m^
[0m[1mansi.c:1924:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1924 |   if (curr->w_y < curr->w_top || curr->w_y > curr->w_bot)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1925 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:1926:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1926 |   if (n > curr->w_bot - curr->w_y + 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1927 |     n = curr->w_bot - curr->w_y + 1;[0m
      | [0;1;32m                                    
[0m[1mansi.c:1934:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1934 | InsertLine(n)[0m
      | [0;1;32m^
[0m[1mansi.c:1937:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1937 |   if (curr->w_y < curr->w_top || curr->w_y > curr->w_bot)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1938 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:1939:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1939 |   if (n > curr->w_bot - curr->w_y + 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1940 |     n = curr->w_bot - curr->w_y + 1;[0m
      | [0;1;32m                                    
[0m[1mansi.c:1947:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1947 | ScrollRegion(n)[0m
      | [0;1;32m^
[0m[1mansi.c:1966:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1966 |   if (curr->w_tabs[x] && x < cols - 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1967 |     x++;[0m
      | [0;1;32m        
[0m[1mansi.c:1968:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1968 |   while (x < cols - 1 && !curr->w_tabs[x])[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1969 |     x++;[0m
      | [0;1;32m        
[0m[1mansi.c:1979:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1979 |   if (curr->w_tabs[x] && x > 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1980 |     x--;[0m
      | [0;1;32m        
[0m[1mansi.c:1981:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1981 |   while (x > 0 && !curr->w_tabs[x])[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1982 |     x--;[0m
      | [0;1;32m        
[0m[1mansi.c:2025:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2025 | ClearLineRegion(from, to)[0m
      | [0;1;32m^
[0m[1mansi.c:2035:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2035 | CursorRight(n)[0m
      | [0;1;32m^
[0m[1mansi.c:2043:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'x' is never read [clang-analyzer-deadcode.DeadStores][0m
 2043 |       x = 0;[0m
      | [0;1;32m      ^   ~
[0m[1mansi.c:2043:7: [0m[0;1;36mnote: [0mValue stored to 'x' is never read[0m
 2043 |       x = 0;[0m
      | [0;1;32m      ^   ~
[0m[1mansi.c:2045:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2045 |   if ((curr->w_x += n) >= cols)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2046 |     curr->w_x = cols - 1;[0m
      | [0;1;32m                         
[0m[1mansi.c:2051:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2051 | CursorUp(n)[0m
      | [0;1;32m^
[0m[1mansi.c:2056:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2056 |       if ((curr->w_y -= n) < 0)         /* ignore its limits      */[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2057 |          curr->w_y = 0;[0m
      | [0;1;32m                       
[0m[1mansi.c:2060:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2060 |     if ((curr->w_y -= n) < curr->w_top)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2061 |       curr->w_y = curr->w_top;[0m
      | [0;1;32m                              
[0m[1mansi.c:2066:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2066 | CursorDown(n)[0m
      | [0;1;32m^
[0m[1mansi.c:2071:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2071 |       if ((curr->w_y += n) > rows - 1)  /* ignore its limits      */[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2072 |         curr->w_y = rows - 1;[0m
      | [0;1;32m                             
[0m[1mansi.c:2075:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2075 |     if ((curr->w_y += n) > curr->w_bot)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2076 |       curr->w_y = curr->w_bot;[0m
      | [0;1;32m                              
[0m[1mansi.c:2081:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2081 | CursorLeft(n)[0m
      | [0;1;32m^
[0m[1mansi.c:2084:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2084 |   if ((curr->w_x -= n) < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2085 |     curr->w_x = 0;[0m
      | [0;1;32m                  
[0m[1mansi.c:2090:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2090 | ASetMode(on)[0m
      | [0;1;32m^
[0m[1mansi.c:2101:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2101 |           curr->w_insert = on;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2102 |           LAY_DISPLAYS(&curr->w_layer, InsertMode(on));[0m
 2103 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:2106:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2106 |           curr->w_autolf = on;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2107 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:2109:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2109 |           curr->w_curvvis = !on;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2110 |           LCursorVisibility(&curr->w_layer, curr->w_curinv ? -1 : curr->w_curvvis);[0m
 2111 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mansi.c:2113:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2113 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mansi.c:2147:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2147 |           if (jj < 0 || jj > 255)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2148 |             continue;[0m
      | [0;1;32m                     
[0m[1mansi.c:2174:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2174 |           if (jj >= 38)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2175 |             jj += 60 - 8;[0m
      | [0;1;32m                         
[0m[1mansi.c:2180:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2180 |       if (j == 0 || (j >= 30 && j <= 39 && j != 38))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2181 |         a &= 0xbf;[0m
      | [0;1;32m                  
[0m[1mansi.c:2182:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2182 |       if (j == 0 || (j >= 40 && j <= 49 && j != 48))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2183 |         a &= 0x7f;[0m
      | [0;1;32m                  
[0m[1mansi.c:2184:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2184 |       if (j >= 90 && j <= 97)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2185 |         a |= 0x40;[0m
      | [0;1;32m                  
[0m[1mansi.c:2186:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2186 |       if (j >= 100 && j <= 107)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2187 |         a |= 0x80;[0m
      | [0;1;32m                  
[0m[1mansi.c:2189:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2189 |       if (j >= 90 && j <= 97)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2190 |         j -= 60;[0m
      | [0;1;32m                
[0m[1mansi.c:2191:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2191 |       if (j >= 100 && j <= 107)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2192 |         j -= 60;[0m
      | [0;1;32m                
[0m[1mansi.c:2193:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2193 |       if (j >= 30 && j <= 39 && j != 38)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2194 |         c = (c & 0xf0) | ((j - 30) ^ 9);[0m
 2195 |       else if (j >= 40 && j <= 49 && j != 48)[0m
      | [0;32m      } 
[0m[1mansi.c:2195:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2195 |       else if (j >= 40 && j <= 49 && j != 48)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2196 |         c = (c & 0x0f) | (((j - 40) ^ 9) << 4);[0m
      | [0;1;32m                                               
[0m[1mansi.c:2197:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2197 |       if (j == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2198 |         c = 0;[0m
      | [0;1;32m              
[0m[1mansi.c:2206:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2206 |       if (j < 0 || j >= (int)(sizeof(rendlist)/sizeof(*rendlist)))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 2207 |         continue;[0m
      | [0;1;32m                 
[0m[1mansi.c:2209:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2209 |       if (j & (1 << NATTR))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2210 |         a &= j;[0m
 2211 |       else[0m
      | [0;32m      } 
[0m[1mansi.c:2211:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2211 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2212 |         a |= j;[0m
      | [0;1;32m               
[0m[1mansi.c:2235:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 2235 |       clear_mline(&curr->w_mlines[i], 0, cols + 1);[0m
      | [0;1;32m      ^
[0m[1m./image.h:101:27: [0m[0;1;36mnote: [0mexpanded from macro 'clear_mline'[0m
  101 |          if ((ml)->attr != null) bzero((char *)(ml)->attr  + (x), (n));        \[0m
      | [0;1;32m                                 ^~~~~
[0m[1mansi.c:2235:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 2235 |       clear_mline(&curr->w_mlines[i], 0, cols + 1);[0m
      | [0;1;32m      ^
[0m[1m./image.h:101:27: [0m[0;1;36mnote: [0mexpanded from macro 'clear_mline'[0m
  101 |          if ((ml)->attr != null) bzero((char *)(ml)->attr  + (x), (n));        \[0m
      | [0;1;32m                                 ^~~~~
[0m[1mansi.c:2238:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2238 |       while (p < ep)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2239 |         *p++ = 'E';[0m
      | [0;1;32m                   
[0m[1mansi.c:2252:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2252 | ChangeAKA(p, s, l)[0m
      | [0;1;32m^
[0m[1mansi.c:2261:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2261 |       if (p->w_akachange + i == p->w_akabuf + sizeof(p->w_akabuf) - 1)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2262 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:2264:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2264 |       if (c == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2265 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:2266:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2266 |       if (c < 32 || c == 127 || (c >= 128 && c < 160 && p->w_c1))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2267 |         continue;[0m
      | [0;1;32m                 
[0m[1mansi.c:2272:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2272 |   if (p->w_akachange != p->w_akabuf)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2273 |     if (p->w_akachange[0] == 0 || p->w_akachange[-1] == ':')[0m
 2274 |       p->w_title = p->w_akabuf + strlen(p->w_akabuf) + 1;[0m
      | [0;1;32m                                                         
[0m[1mansi.c:2273:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2273 |     if (p->w_akachange[0] == 0 || p->w_akachange[-1] == ':')[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2274 |       p->w_title = p->w_akabuf + strlen(p->w_akabuf) + 1;[0m
      | [0;1;32m                                                         
[0m[1mansi.c:2298:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2298 |               if (++y == wp->w_autoaka && y < rows)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2299 |                 goto try_line;[0m
      | [0;1;32m                              
[0m[1mansi.c:2302:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2302 |           if (strncmp((char *)cp, wp->w_akabuf, len) == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2303 |             break;[0m
      | [0;1;32m                  
[0m[1mansi.c:2308:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2308 |   for (len = cols - (cp - line); len && *cp == ' '; len--, cp++)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2309 |     ;[0m
      | [0;1;32m     
[0m[1mansi.c:2312:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2312 |       if (wp->w_autoaka > 0 && (*cp == '!' || *cp == '%' || *cp == '^'))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 2313 |         wp->w_autoaka = -1;[0m
 2314 |       else[0m
      | [0;32m      } 
[0m[1mansi.c:2314:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2314 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2315 |         wp->w_autoaka = 0;[0m
      | [0;1;32m                          
[0m[1mansi.c:2319:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2319 |           if (*cp++ == '/')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2320 |             line = cp;[0m
      | [0;1;32m                      
[0m[1mansi.c:2325:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2325 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2326 |     wp->w_autoaka = 0;[0m
      | [0;1;32m                      
[0m[1mansi.c:2338:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2338 | Report(fmt, n1, n2)[0m
      | [0;1;32m^
[0m[1mansi.c:2345:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2345 |   sprintf(rbuf, fmt, n1, n2);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mansi.c:2345:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2345 |   sprintf(rbuf, fmt, n1, n2);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mansi.c:2353:4: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2353 |           bcopy(rbuf, curr->w_pwin->p_inbuf + curr->w_pwin->p_inlen, len);[0m
      | [0;1;32m          ^~~~~
[0m[1mansi.c:2353:4: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2353 |           bcopy(rbuf, curr->w_pwin->p_inbuf + curr->w_pwin->p_inlen, len);[0m
      | [0;1;32m          ^~~~~
[0m[1mansi.c:2362:4: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2362 |           bcopy(rbuf, curr->w_inbuf + curr->w_inlen, len);[0m
      | [0;1;32m          ^~~~~
[0m[1mansi.c:2362:4: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2362 |           bcopy(rbuf, curr->w_inbuf + curr->w_inlen, len);[0m
      | [0;1;32m          ^~~~~
[0m[1mansi.c:2382:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2382 | MFixLine(p, y, mc)[0m
      | [0;1;32m^
[0m[1mansi.c:2465:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2465 | MScrollH(p, n, y, xs, xe, bce)[0m
      | [0;1;32m^
[0m[1mansi.c:2471:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2471 |   if (n == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2472 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:2481:4: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2481 |           bcopy_mline(ml, xs + n, xs, xe + 1 - xs - n);[0m
      | [0;1;32m          ^
[0m[1m./image.h:91:3: [0m[0;1;36mnote: [0mexpanded from macro 'bcopy_mline'[0m
   91 |          bcopy((char *)(ml)->image + (xf), (char *)(ml)->image + (xt), (n));   \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:2481:4: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2481 |           bcopy_mline(ml, xs + n, xs, xe + 1 - xs - n);[0m
      | [0;1;32m          ^
[0m[1m./image.h:91:3: [0m[0;1;36mnote: [0mexpanded from macro 'bcopy_mline'[0m
   91 |          bcopy((char *)(ml)->image + (xf), (char *)(ml)->image + (xt), (n));   \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:2483:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2483 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2484 |         n = xe - xs + 1;[0m
      | [0;1;32m                        
[0m[1mansi.c:2485:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 2485 |       clear_mline(ml, xe + 1 - n, n);[0m
      | [0;1;32m      ^
[0m[1m./image.h:101:27: [0m[0;1;36mnote: [0mexpanded from macro 'clear_mline'[0m
  101 |          if ((ml)->attr != null) bzero((char *)(ml)->attr  + (x), (n));        \[0m
      | [0;1;32m                                 ^~~~~
[0m[1mansi.c:2485:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 2485 |       clear_mline(ml, xe + 1 - n, n);[0m
      | [0;1;32m      ^
[0m[1m./image.h:101:27: [0m[0;1;36mnote: [0mexpanded from macro 'clear_mline'[0m
  101 |          if ((ml)->attr != null) bzero((char *)(ml)->attr  + (x), (n));        \[0m
      | [0;1;32m                                 ^~~~~
[0m[1mansi.c:2487:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2487 |       if (bce)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2488 |         MBceLine(p, y, xe + 1 - n, n, bce);[0m
      | [0;1;32m                                           
[0m[1mansi.c:2497:4: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2497 |           bcopy_mline(ml, xs, xs + n, xe + 1 - xs - n);[0m
      | [0;1;32m          ^
[0m[1m./image.h:91:3: [0m[0;1;36mnote: [0mexpanded from macro 'bcopy_mline'[0m
   91 |          bcopy((char *)(ml)->image + (xf), (char *)(ml)->image + (xt), (n));   \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:2497:4: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2497 |           bcopy_mline(ml, xs, xs + n, xe + 1 - xs - n);[0m
      | [0;1;32m          ^
[0m[1m./image.h:91:3: [0m[0;1;36mnote: [0mexpanded from macro 'bcopy_mline'[0m
   91 |          bcopy((char *)(ml)->image + (xf), (char *)(ml)->image + (xt), (n));   \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:2499:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2499 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2500 |         n = xe - xs + 1;[0m
      | [0;1;32m                        
[0m[1mansi.c:2501:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 2501 |       clear_mline(ml, xs, n);[0m
      | [0;1;32m      ^
[0m[1m./image.h:101:27: [0m[0;1;36mnote: [0mexpanded from macro 'clear_mline'[0m
  101 |          if ((ml)->attr != null) bzero((char *)(ml)->attr  + (x), (n));        \[0m
      | [0;1;32m                                 ^~~~~
[0m[1mansi.c:2501:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 2501 |       clear_mline(ml, xs, n);[0m
      | [0;1;32m      ^
[0m[1m./image.h:101:27: [0m[0;1;36mnote: [0mexpanded from macro 'clear_mline'[0m
  101 |          if ((ml)->attr != null) bzero((char *)(ml)->attr  + (x), (n));        \[0m
      | [0;1;32m                                 ^~~~~
[0m[1mansi.c:2503:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2503 |       if (bce)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2504 |         MBceLine(p, y, xs, n, bce);[0m
      | [0;1;32m                                   
[0m[1mansi.c:2510:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2510 | MScrollV(p, n, ys, ye, bce)[0m
      | [0;1;32m^
[0m[1mansi.c:2518:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2518 |   if (n == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2519 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:2522:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2522 |       if (ye - ys + 1 < n)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2523 |         n = ye - ys + 1;[0m
      | [0;1;32m                        
[0m[1mansi.c:2533:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2533 |           if (ye - ys + 1 < n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2534 |             n = ye - ys + 1;[0m
      | [0;1;32m                            
[0m[1mansi.c:2535:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2535 |           if (n <= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2536 |             return;[0m
      | [0;1;32m                   
[0m[1mansi.c:2544:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2544 |           if (ys == p->w_top)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2545 |             WAddLineToHist(p, ml);[0m
      | [0;1;32m                                  
[0m[1mansi.c:2547:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2547 |           if (ml->attr != null)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2548 |             free(ml->attr);[0m
      | [0;1;32m                           
[0m[1mansi.c:2551:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2551 |           if (ml->font != null)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2552 |             free(ml->font);[0m
      | [0;1;32m                           
[0m[1mansi.c:2554:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2554 |           if (ml->fontx != null)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2555 |             free(ml->fontx);[0m
      | [0;1;32m                            
[0m[1mansi.c:2559:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2559 |           if (ml->color != null)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2560 |             free(ml->color);[0m
      | [0;1;32m                            
[0m[1mansi.c:2570:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2570 |           if (bce)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2571 |             MBceLine(p, i, 0, p->w_width, bce);[0m
      | [0;1;32m                                               
[0m[1mansi.c:2577:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2577 |       if (cnt1 && cnt2)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2578 |         Scroll((char *)(p->w_mlines + ys), cnt1, cnt2, (char *)tmp);[0m
      | [0;1;32m                                                                    
[0m[1mansi.c:2583:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2583 |       if (ye - ys + 1 < n)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2584 |         n = ye - ys + 1;[0m
      | [0;1;32m                        
[0m[1mansi.c:2595:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2595 |           if (ml->attr != null)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2596 |             free(ml->attr);[0m
      | [0;1;32m                           
[0m[1mansi.c:2599:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2599 |           if (ml->font != null)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2600 |             free(ml->font);[0m
      | [0;1;32m                           
[0m[1mansi.c:2602:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2602 |           if (ml->fontx != null)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2603 |             free(ml->fontx);[0m
      | [0;1;32m                            
[0m[1mansi.c:2607:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2607 |           if (ml->color != null)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2608 |             free(ml->color);[0m
      | [0;1;32m                            
[0m[1mansi.c:2618:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2618 |           if (bce)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2619 |             MBceLine(p, i, 0, p->w_width, bce);[0m
      | [0;1;32m                                               
[0m[1mansi.c:2624:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2624 |       if (cnt1 && cnt2)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2625 |         Scroll((char *)(p->w_mlines + ys), cnt2, cnt1, (char *)tmp);[0m
      | [0;1;32m                                                                    
[0m[1mansi.c:2630:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2630 | Scroll(cp, cnt1, cnt2, tmp)[0m
      | [0;1;32m^
[0m[1mansi.c:2634:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2634 |   if (!cnt1 || !cnt2)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2635 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:2638:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2638 |       bcopy(cp, tmp, cnt1);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2638:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2638 |       bcopy(cp, tmp, cnt1);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2639:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2639 |       bcopy(cp + cnt1, cp, cnt2);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2639:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2639 |       bcopy(cp + cnt1, cp, cnt2);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2640:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2640 |       bcopy(tmp, cp + cnt2, cnt1);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2640:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2640 |       bcopy(tmp, cp + cnt2, cnt1);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2644:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2644 |       bcopy(cp + cnt1, tmp, cnt2);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2644:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2644 |       bcopy(cp + cnt1, tmp, cnt2);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2645:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2645 |       bcopy(cp, cp + cnt2, cnt1);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2645:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2645 |       bcopy(cp, cp + cnt2, cnt1);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2646:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2646 |       bcopy(tmp, cp, cnt2);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2646:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2646 |       bcopy(tmp, cp, cnt2);[0m
      | [0;1;32m      ^~~~~
[0m[1mansi.c:2651:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2651 | MClearArea(p, xs, ys, xe, ye, bce)[0m
      | [0;1;32m^
[0m[1mansi.c:2660:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2660 |   if (ys < 0 || ye < ys)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2661 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:2664:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2664 |   if (xs >= p->w_width)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2665 |     xs = p->w_width - 1;[0m
      | [0;1;32m                        
[0m[1mansi.c:2666:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2666 |   if (xe >= p->w_width)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2667 |     xe = p->w_width - 1;[0m
      | [0;1;32m                        
[0m[1mansi.c:2677:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2677 |       if (n > 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2678 |         clear_mline(ml, xs, n);[0m
      | [0;1;32m                               
[0m[1mansi.c:2678:2: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 2678 |         clear_mline(ml, xs, n);[0m
      | [0;1;32m        ^
[0m[1m./image.h:101:27: [0m[0;1;36mnote: [0mexpanded from macro 'clear_mline'[0m
  101 |          if ((ml)->attr != null) bzero((char *)(ml)->attr  + (x), (n));        \[0m
      | [0;1;32m                                 ^~~~~
[0m[1mansi.c:2678:2: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 2678 |         clear_mline(ml, xs, n);[0m
      | [0;1;32m        ^
[0m[1m./image.h:101:27: [0m[0;1;36mnote: [0mexpanded from macro 'clear_mline'[0m
  101 |          if ((ml)->attr != null) bzero((char *)(ml)->attr  + (x), (n));        \[0m
      | [0;1;32m                                 ^~~~~
[0m[1mansi.c:2680:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2680 |       if (n > 0 && bce)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2681 |         MBceLine(p, y, xs, xs + n - 1, bce);[0m
      | [0;1;32m                                            
[0m[1mansi.c:2688:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2688 | MInsChar(p, c, x, y)[0m
      | [0;1;32m^
[0m[1mansi.c:2704:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2704 |       bcopy_mline(ml, x, x + 1, n);[0m
      | [0;1;32m      ^
[0m[1m./image.h:91:3: [0m[0;1;36mnote: [0mexpanded from macro 'bcopy_mline'[0m
   91 |          bcopy((char *)(ml)->image + (xf), (char *)(ml)->image + (xt), (n));   \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:2704:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2704 |       bcopy_mline(ml, x, x + 1, n);[0m
      | [0;1;32m      ^
[0m[1m./image.h:91:3: [0m[0;1;36mnote: [0mexpanded from macro 'bcopy_mline'[0m
   91 |          bcopy((char *)(ml)->image + (xf), (char *)(ml)->image + (xt), (n));   \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:2713:4: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2713 |           bcopy_mline(ml, x + 1, x + 2, n);[0m
      | [0;1;32m          ^
[0m[1m./image.h:91:3: [0m[0;1;36mnote: [0mexpanded from macro 'bcopy_mline'[0m
   91 |          bcopy((char *)(ml)->image + (xf), (char *)(ml)->image + (xt), (n));   \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:2713:4: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2713 |           bcopy_mline(ml, x + 1, x + 2, n);[0m
      | [0;1;32m          ^
[0m[1m./image.h:91:3: [0m[0;1;36mnote: [0mexpanded from macro 'bcopy_mline'[0m
   91 |          bcopy((char *)(ml)->image + (xf), (char *)(ml)->image + (xt), (n));   \[0m
      | [0;1;32m         ^~~~~
[0m[1mansi.c:2718:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2718 |       if (p->w_encoding != UTF8)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2719 |         ml->font[x + 1] |= 0x80;[0m
 2720 |       else if (p->w_encoding == UTF8 && c->mbcs)[0m
      | [0;32m      } 
[0m[1mansi.c:2733:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2733 | MPutChar(p, c, x, y)[0m
      | [0;1;32m^
[0m[1mansi.c:2752:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2752 |       if (p->w_encoding != UTF8)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2753 |         ml->font[x + 1] |= 0x80;[0m
 2754 |       else if (p->w_encoding == UTF8 && c->mbcs)[0m
      | [0;32m      } 
[0m[1mansi.c:2768:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2768 | MWrapChar(p, c, y, top, bot, ins)[0m
      | [0;1;32m^
[0m[1mansi.c:2785:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2785 |   if (y == bot)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2786 |     MScrollV(p, 1, top, bot, bce);[0m
 2787 |   else if (y < p->w_height - 1)[0m
      | [0;32m  } 
[0m[1mansi.c:2787:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2787 |   else if (y < p->w_height - 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2788 |     y++;[0m
      | [0;1;32m        
[0m[1mansi.c:2789:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2789 |   if (ins)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2790 |     MInsChar(p, c, 0, y);[0m
 2791 |   else[0m
      | [0;32m  } 
[0m[1mansi.c:2791:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2791 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2792 |     MPutChar(p, c, 0, y);[0m
      | [0;1;32m                         
[0m[1mansi.c:2796:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2796 | MPutStr(p, s, n, r, x, y)[0m
      | [0;1;32m^
[0m[1mansi.c:2807:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2807 |   if (n <= 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2808 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:2813:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2813 |   bcopy(s, (char *)ml->image + x, n);[0m
      | [0;1;32m  ^~~~~
[0m[1mansi.c:2813:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2813 |   bcopy(s, (char *)ml->image + x, n);[0m
      | [0;1;32m  ^~~~~
[0m[1mansi.c:2817:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2817 |       for (i = n; i-- > 0;)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2818 |         *b++ = r->attr;[0m
      | [0;1;32m                       
[0m[1mansi.c:2824:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2824 |       for (i = n; i-- > 0;)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2825 |         *b++ = r->font;[0m
      | [0;1;32m                       
[0m[1mansi.c:2830:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2830 |       for (i = n; i-- > 0;)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2831 |         *b++ = r->fontx;[0m
      | [0;1;32m                        
[0m[1mansi.c:2838:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2838 |       for (i = n; i-- > 0;)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2839 |         *b++ = r->color;[0m
      | [0;1;32m                        
[0m[1mansi.c:2854:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2854 | MBceLine(p, y, xs, xe, bce)[0m
      | [0;1;32m^
[0m[1mansi.c:2867:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2867 |   if (mc.attr)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2868 |     for (x = xs; x <= xe; x++)[0m
 2869 |       ml->attr[x] = mc.attr;[0m
      | [0;1;32m                            
[0m[1mansi.c:2868:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2868 |     for (x = xs; x <= xe; x++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2869 |       ml->attr[x] = mc.attr;[0m
      | [0;1;32m                            
[0m[1mansi.c:2871:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2871 |   if (mc.color)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2872 |     for (x = xs; x <= xe; x++)[0m
 2873 |       ml->color[x] = mc.color;[0m
      | [0;1;32m                              
[0m[1mansi.c:2872:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2872 |     for (x = xs; x <= xe; x++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2873 |       ml->color[x] = mc.color;[0m
      | [0;1;32m                              
[0m[1mansi.c:2885:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2885 | WAddLineToHist(wp, ml)[0m
      | [0;1;32m^
[0m[1mansi.c:2892:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2892 |   if (wp->w_histheight == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2893 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:2898:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2898 |   if (o != null)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2899 |     free(o);[0m
      | [0;1;32m            
[0m[1mansi.c:2903:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2903 |   if (o != null)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2904 |     free(o);[0m
      | [0;1;32m            
[0m[1mansi.c:2906:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2906 |   if (o != null)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2907 |     free(o);[0m
      | [0;1;32m            
[0m[1mansi.c:2912:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2912 |   if (o != null)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2913 |     free(o);[0m
      | [0;1;32m            
[0m[1mansi.c:2921:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2921 |   if (++wp->w_histidx >= wp->w_histheight)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2922 |     wp->w_histidx = 0;[0m
      | [0;1;32m                      
[0m[1mansi.c:2923:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2923 |   if (wp->w_scrollback_height < wp->w_histheight)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2924 |     ++wp->w_scrollback_height;[0m
      | [0;1;32m                              
[0m[1mansi.c:2929:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2929 | MFindUsedLine(p, ye, ys)[0m
      | [0;1;32m^
[0m[1mansi.c:2939:11: [0m[0;1;35mwarning: [0m[1mThe bcmp() function is obsoleted by memcmp() [clang-analyzer-security.insecureAPI.bcmp][0m
 2939 |       if (bcmp((char*)ml->image, blank, p->w_width))[0m
      | [0;1;32m          ^~~~
[0m[1mansi.c:2939:11: [0m[0;1;36mnote: [0mThe bcmp() function is obsoleted by memcmp()[0m
 2939 |       if (bcmp((char*)ml->image, blank, p->w_width))[0m
      | [0;1;32m          ^~~~
[0m[1mansi.c:2939:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2939 |       if (bcmp((char*)ml->image, blank, p->w_width))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2940 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:2941:31: [0m[0;1;35mwarning: [0m[1mThe bcmp() function is obsoleted by memcmp() [clang-analyzer-security.insecureAPI.bcmp][0m
 2941 |       if (ml->attr != null && bcmp((char*)ml->attr, null, p->w_width))[0m
      | [0;1;32m                              ^~~~
[0m[1mansi.c:2941:31: [0m[0;1;36mnote: [0mThe bcmp() function is obsoleted by memcmp()[0m
 2941 |       if (ml->attr != null && bcmp((char*)ml->attr, null, p->w_width))[0m
      | [0;1;32m                              ^~~~
[0m[1mansi.c:2941:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2941 |       if (ml->attr != null && bcmp((char*)ml->attr, null, p->w_width))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2942 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:2944:32: [0m[0;1;35mwarning: [0m[1mThe bcmp() function is obsoleted by memcmp() [clang-analyzer-security.insecureAPI.bcmp][0m
 2944 |       if (ml->color != null && bcmp((char*)ml->color, null, p->w_width))[0m
      | [0;1;32m                               ^~~~
[0m[1mansi.c:2944:32: [0m[0;1;36mnote: [0mThe bcmp() function is obsoleted by memcmp()[0m
 2944 |       if (ml->color != null && bcmp((char*)ml->color, null, p->w_width))[0m
      | [0;1;32m                               ^~~~
[0m[1mansi.c:2944:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2944 |       if (ml->color != null && bcmp((char*)ml->color, null, p->w_width))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 2945 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:2954:28: [0m[0;1;35mwarning: [0m[1mThe bcmp() function is obsoleted by memcmp() [clang-analyzer-security.insecureAPI.bcmp][0m
 2954 |           if (ml->font != null && bcmp((char*)ml->font, null, p->w_width))[0m
      | [0;1;32m                                  ^~~~
[0m[1mansi.c:2954:28: [0m[0;1;36mnote: [0mThe bcmp() function is obsoleted by memcmp()[0m
 2954 |           if (ml->font != null && bcmp((char*)ml->font, null, p->w_width))[0m
      | [0;1;32m                                  ^~~~
[0m[1mansi.c:2954:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2954 |           if (ml->font != null && bcmp((char*)ml->font, null, p->w_width))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 2955 |             break;[0m
      | [0;1;32m                  
[0m[1mansi.c:2956:29: [0m[0;1;35mwarning: [0m[1mThe bcmp() function is obsoleted by memcmp() [clang-analyzer-security.insecureAPI.bcmp][0m
 2956 |           if (ml->fontx != null && bcmp((char*)ml->fontx, null, p->w_width))[0m
      | [0;1;32m                                   ^~~~
[0m[1mansi.c:2956:29: [0m[0;1;36mnote: [0mThe bcmp() function is obsoleted by memcmp()[0m
 2956 |           if (ml->fontx != null && bcmp((char*)ml->fontx, null, p->w_width))[0m
      | [0;1;32m                                   ^~~~
[0m[1mansi.c:2956:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2956 |           if (ml->fontx != null && bcmp((char*)ml->fontx, null, p->w_width))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2957 |             break;[0m
      | [0;1;32m                  
[0m[1mansi.c:2976:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2976 | WBell(p, visual)[0m
      | [0;1;32m^
[0m[1mansi.c:2981:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2981 |   if (displays == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2982 |     p->w_bell = BELL_DONE;[0m
      | [0;1;32m                          
[0m[1mansi.c:2985:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2985 |       for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2986 |         if (cv->c_layer->l_bottom == &p->w_layer)[0m
 2987 |           break;[0m
      | [0;1;32m                
[0m[1mansi.c:2986:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2986 |         if (cv->c_layer->l_bottom == &p->w_layer)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2987 |           break;[0m
      | [0;1;32m                
[0m[1mansi.c:2988:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2988 |       if (cv && !visual)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2989 |         AddCStr(D_BL);[0m
 2990 |       else if (cv && D_VB)[0m
      | [0;32m      } 
[0m[1mansi.c:2990:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2990 |       else if (cv && D_VB)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2991 |         AddCStr(D_VB);[0m
 2992 |       else[0m
      | [0;32m      } 
[0m[1mansi.c:2992:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2992 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2993 |         p->w_bell = visual ? BELL_VISUAL : BELL_FOUND;[0m
      | [0;1;32m                                                      
[0m[1mansi.c:3005:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3005 | WReverseVideo(p, on)[0m
      | [0;1;32m^
[0m[1mansi.c:3013:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3013 |       if (cv != D_forecv)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3014 |         continue;[0m
      | [0;1;32m                 
[0m[1mansi.c:3018:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3018 |           if (D_VB)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3019 |             AddCStr(D_VB);[0m
 3020 |           else[0m
      | [0;32m          } 
[0m[1mansi.c:3020:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3020 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3021 |             p->w_bell = BELL_VISUAL;[0m
      | [0;1;32m                                    
[0m[1mansi.c:3027:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3027 | WMsg(p, err, str)[0m
      | [0;1;32m^
[0m[1mansi.c:3040:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3040 | WChangeSize(p, w, h)[0m
      | [0;1;32m^
[0m[1mansi.c:3056:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3056 |       if (p != D_fore)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3057 |         continue;               /* change only fore */[0m
      | [0;1;32m                                                      
[0m[1mansi.c:3058:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3058 |       if (D_CWS)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3059 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:3060:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3060 |       if (D_CZ0 && (w == Z0width || w == Z1width))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 3061 |         wok = 1;[0m
      | [0;1;32m                
[0m[1mansi.c:3063:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3063 |   if (cv == 0 && wok == 0)      /* can't change any display */[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3064 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:3065:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3065 |   if (!D_CWS)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3066 |     h = p->w_height;[0m
      | [0;1;32m                    
[0m[1mansi.c:3072:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3072 |           if (D_cvlist && D_cvlist->c_next == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3073 |             ResizeDisplay(w, h);[0m
 3074 |           else[0m
      | [0;32m          } 
[0m[1mansi.c:3074:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3074 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3075 |             ResizeDisplay(w, D_height);[0m
      | [0;1;32m                                       
[0m[1mansi.c:3079:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3079 |       for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3080 |         if (cv->c_layer->l_bottom == &p->w_layer)[0m
 3081 |           break;[0m
      | [0;1;32m                
[0m[1mansi.c:3080:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3080 |         if (cv->c_layer->l_bottom == &p->w_layer)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 3081 |           break;[0m
      | [0;1;32m                
[0m[1mansi.c:3082:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3082 |       if (cv)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3083 |         Redisplay(0);[0m
      | [0;1;32m                     
[0m[1mansi.c:3088:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3088 | WindowChangedCheck(s, what, hp)[0m
      | [0;1;32m^
[0m[1mansi.c:3097:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3097 |       if (*s++ != (hp ? '%' : '\005'))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3098 |         continue;[0m
      | [0;1;32m                 
[0m[1mansi.c:3102:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3102 |       while (*s >= '0' && *s <= '9')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3103 |         s++;[0m
      | [0;1;32m            
[0m[1mansi.c:3109:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3109 |       if (*s == 'h')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3110 |         h = 1;[0m
      | [0;1;32m              
[0m[1mansi.c:3111:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3111 |       if (*s == what || ((*s | l) == what) || what == 'd')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 3112 |         break;[0m
      | [0;1;32m              
[0m[1mansi.c:3113:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3113 |       if (*s)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3114 |         s++;[0m
      | [0;1;32m            
[0m[1mansi.c:3116:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3116 |   if (hp)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 3117 |     *hp = h;[0m
      | [0;1;32m            
[0m[1mansi.c:3122:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3122 | WindowChanged(p, what)[0m
      | [0;1;32m^
[0m[1mansi.c:3132:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'inwstr' is never read [clang-analyzer-deadcode.DeadStores][0m
 3132 |   inwstr = inhstr = 0;[0m
      | [0;1;32m  ^        ~~~~~~~~~~
[0m[1mansi.c:3132:3: [0m[0;1;36mnote: [0mValue stored to 'inwstr' is never read[0m
 3132 |   inwstr = inhstr = 0;[0m
      | [0;1;32m  ^        ~~~~~~~~~~
[0m[1mansi.c:3132:12: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'inhstr' is used in the enclosing expression, the value is never actually read from 'inhstr' [clang-analyzer-deadcode.DeadStores][0m
 3132 |   inwstr = inhstr = 0;[0m
      | [0;1;32m           ^        ~
[0m[1mansi.c:3132:12: [0m[0;1;36mnote: [0mAlthough the value stored to 'inhstr' is used in the enclosing expression, the value is never actually read from 'inhstr'[0m
 3132 |   inwstr = inhstr = 0;[0m
      | [0;1;32m           ^        ~
[0m[1mansi.c:3160:122: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3160 |               if (inlstr || (inlstrh && p && p->w_hstatus && *p->w_hstatus && WindowChangedCheck(p->w_hstatus, what, (int *)0)))[0m
      | [0;1;32m                                                                                                                                ^
[0m      | [0;32m                                                                                                                                 {
[0m 3161 |                 WListUpdatecv(cv, (struct win *)0);[0m
      | [0;1;32m                                                   
[0m[1mansi.c:3163:122: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3163 |               if (inwstr || (inwstrh && p && p->w_hstatus && *p->w_hstatus && WindowChangedCheck(p->w_hstatus, what, (int *)0)))[0m
      | [0;1;32m                                                                                                                                ^
[0m      | [0;32m                                                                                                                                 {
[0m 3164 |                 if (cv->c_ye + 1 < D_height)[0m
 3165 |                   RefreshLine(cv->c_ye + 1, 0, D_width - 1, 0);[0m
      | [0;1;32m                                                               
[0m[1mansi.c:3164:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3164 |                 if (cv->c_ye + 1 < D_height)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3165 |                   RefreshLine(cv->c_ye + 1, 0, D_width - 1, 0);[0m
      | [0;1;32m                                                               
[0m[1mansi.c:3168:118: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3168 |           if (inhstr || (inhstrh && p && p->w_hstatus && *p->w_hstatus && WindowChangedCheck(p->w_hstatus, what, (int *)0)))[0m
      | [0;1;32m                                                                                                                            ^
[0m      | [0;32m                                                                                                                             {
[0m 3169 |             RefreshHStatus();[0m
      | [0;1;32m                             
[0m[1mansi.c:3170:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3170 |           if (ox != -1 && oy != -1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3171 |             GotoPos(ox, oy);[0m
      | [0;1;32m                            
[0m[1mansi.c:3183:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3183 |   if (!inwstr && !inhstr && !inlstr)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3184 |     return;[0m
      | [0;1;32m           
[0m[1mansi.c:3192:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3192 |           if (inlstr)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3193 |             WListUpdatecv(cv, p);[0m
      | [0;1;32m                                 
[0m[1mansi.c:3194:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3194 |           if (Layer2Window(cv->c_layer) != p)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3195 |             continue;[0m
      | [0;1;32m                     
[0m[1mansi.c:3197:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3197 |           if (inwstr && cv->c_ye + 1 < D_height)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3198 |             RefreshLine(cv->c_ye + 1, 0, D_width - 1, 0);[0m
      | [0;1;32m                                                         
[0m[1mansi.c:3200:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3200 |       if (got && inhstr && p == D_fore)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3201 |         RefreshHStatus();[0m
      | [0;1;32m                         
[0m[1mansi.c:3202:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3202 |       if (ox != -1 && oy != -1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3203 |         GotoPos(ox, oy);[0m
      | [0;1;32m                        
[0m556 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[24/38][174.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpps24drzn.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/fileio.c
[1mfileio.c:70:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |         if (len1 == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   71 |                 return str2;[0m
      | [0;1;32m                            
[0m[1mfileio.c:75:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |                 if ((cp = realloc(str2, (unsigned)len1 + len2 + add_colon + 1)) == NULL)[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m   76 |                         Panic(0, "%s", strnomem);[0m
      | [0;1;32m                                                 
[0m[1mfileio.c:77:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
   77 |                 bcopy(cp, cp + len1 + add_colon, len2 + 1);[0m
      | [0;1;32m                ^~~~~
[0m[1mfileio.c:77:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
   77 |                 bcopy(cp, cp + len1 + add_colon, len2 + 1);[0m
      | [0;1;32m                ^~~~~
[0m[1mfileio.c:79:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |                 if ((cp = malloc((unsigned)len1 + add_colon + 1)) == NULL)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m   80 |                         Panic(0, "%s", strnomem);[0m
      | [0;1;32m                                                 
[0m[1mfileio.c:83:2: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
   83 |         bcopy(str1, cp, len1);[0m
      | [0;1;32m        ^~~~~
[0m[1mfileio.c:83:2: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
   83 |         bcopy(str1, cp, len1);[0m
      | [0;1;32m        ^~~~~
[0m[1mfileio.c:84:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |         if (add_colon)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   85 |                 cp[len1] = ':';[0m
      | [0;1;32m                               
[0m[1mfileio.c:107:4: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  107 |                         snprintf(rcfilename_tilde_exp, MAXPATHLEN, "%s/%s", home, rcfile + 2);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mfileio.c:107:4: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  107 |                         snprintf(rcfilename_tilde_exp, MAXPATHLEN, "%s/%s", home, rcfile + 2);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mfileio.c:116:4: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  116 |                         snprintf(rcfilename_tilde_exp, MAXPATHLEN, "%s/%s", p->pw_dir, slash_position + 1);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mfileio.c:116:4: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  116 |                         snprintf(rcfilename_tilde_exp, MAXPATHLEN, "%s/%s", p->pw_dir, slash_position + 1);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mfileio.c:127:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  127 |                         strncpy(buf, rc_name, rcend - rc_name + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfileio.c:127:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  127 |                         strncpy(buf, rc_name, rcend - rc_name + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfileio.c:128:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  128 |                         strcpy(buf + (rcend - rc_name) + 1, rcfile);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mfileio.c:128:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  128 |                         strcpy(buf + (rcend - rc_name) + 1, rcfile);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mfileio.c:129:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |                         if (access(buf, R_OK) == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  130 |                                 return SaveStr(buf);[0m
      | [0;1;32m                                                    
[0m[1mfileio.c:142:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |                 if (strlen(home) > sizeof(buf) - 12)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  143 |                         Panic(0, "Rc: home too large");[0m
      | [0;1;32m                                                       
[0m[1mfileio.c:144:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  144 |                 sprintf(buf, "%s/.screenrc", home);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfileio.c:144:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  144 |                 sprintf(buf, "%s/.screenrc", home);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfileio.c:169:85: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |         if (display && (!strncmp(D_termname, "vt", 2) || !strncmp(D_termname, "xterm", 5)))[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m  170 |                 extra_incap = CatExtra("xn:f0=\033Op:f1=\033Oq:f2=\033Or:f3=\033Os:f4=\033Ot:f5=\033Ou:f6=\033Ov:f7=\033Ow:f8=\033Ox:f9=\033Oy:f.=\033On:f,=\033Ol:fe=\033OM:f+=\033Ok:f-=\033Om:f*=\033Oj:f/=\033Oo:fq=\033OX", extra_incap);[0m
      | [0;1;32m                                                                                                                                                                                                                                              
[0m[1mfileio.c:182:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |                         if (!nopanic)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  183 |                                 Panic(0, "Unable to open \"%s\".", rc_nonnull);[0m
      | [0;1;32m                                                                               
[0m[1mfileio.c:194:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |                 if ((p = rindex(buf, '\n')) != NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  195 |                         *p = '\0';[0m
      | [0;1;32m                                  
[0m[1mfileio.c:197:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |                 if ((argc = Parse(buf, sizeof buf, args, argl)) == 0)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  198 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mfileio.c:201:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |                         if (!display)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  202 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfileio.c:213:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |                         if (!display)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  214 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfileio.c:227:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |                         if (!display)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  228 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfileio.c:235:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |                                 if ((cp = index(p, '|')) != 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  236 |                                         *cp++ = '\0';[0m
      | [0;1;32m                                                     
[0m[1mfileio.c:239:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |                                         if (!(len - 1) || !strncmp(p, D_termname, len - 1))[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m  240 |                                                 break;[0m
      | [0;1;32m                                                      
[0m[1mfileio.c:241:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |                                 } else if (!strcmp(p, D_termname))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  242 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mfileio.c:244:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |                         if (!(p && *p))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  245 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfileio.c:247:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                         if (argc == 4)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  248 |                                 extra_outcap = CatExtra(args[3], extra_outcap);[0m
      | [0;1;32m                                                                               
[0m[1mfileio.c:274:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |                 if (rc_recursion)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  275 |                         Msg(errno, "%s: source %s", oldrc_name, rc_nonnull);[0m
  276 |                 else if (RcFileName && !strcmp(RcFileName, rc_nonnull)) {[0m
      | [0;32m                } 
[0m[1mfileio.c:294:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |         while (fgets(buf, sizeof buf, fp) != NULL)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |                 RcLine(buf, sizeof buf);[0m
      | [0;1;32m                                        
[0m[1mfileio.c:331:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  332 |                 flayer = fore ? fore->w_savelayer : 0;[0m
      | [0;1;32m                                                      
[0m[1mfileio.c:333:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |         if (Parse(ubuf, ubufl, args, argl) <= 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  334 |                 return;[0m
      | [0;1;32m                       
[0m[1mfileio.c:378:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  378 |                 if (fn == 0) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  379 |                         i = SockName - SockPath;[0m
  380 |                         if (i > (int)sizeof(fnbuf) - 9)[0m
  381 |                                 i = 0;[0m
  382 |                         strncpy(fnbuf, SockPath, i);[0m
  383 |                         strcpy(fnbuf + i, ".termcap");[0m
  384 |                         fn = fnbuf;[0m
  385 |                 }[0m
  386 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mfileio.c:380:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |                         if (i > (int)sizeof(fnbuf) - 9)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  381 |                                 i = 0;[0m
      | [0;1;32m                                      
[0m[1mfileio.c:382:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  382 |                         strncpy(fnbuf, SockPath, i);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfileio.c:382:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  382 |                         strncpy(fnbuf, SockPath, i);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfileio.c:383:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  383 |                         strcpy(fnbuf + i, ".termcap");[0m
      | [0;1;32m                        ^~~~~~
[0m[1mfileio.c:383:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  383 |                         strcpy(fnbuf + i, ".termcap");[0m
      | [0;1;32m                        ^~~~~~
[0m[1mfileio.c:391:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |                         if (fore == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  392 |                                 return;[0m
      | [0;1;32m                                       
[0m[1mfileio.c:393:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |                         if (hardcopydir && *hardcopydir && strlen(hardcopydir) < sizeof(fnbuf) - 21)[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m  394 |                                 sprintf(fnbuf, "%s/hardcopy.%d", hardcopydir, fore->w_number);[0m
  395 |                         else[0m
      | [0;32m                        } 
[0m[1mfileio.c:394:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  394 |                                 sprintf(fnbuf, "%s/hardcopy.%d", hardcopydir, fore->w_number);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mfileio.c:394:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  394 |                                 sprintf(fnbuf, "%s/hardcopy.%d", hardcopydir, fore->w_number);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mfileio.c:395:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  396 |                                 sprintf(fnbuf, "hardcopy.%d", fore->w_number);[0m
      | [0;1;32m                                                                              
[0m[1mfileio.c:396:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  396 |                                 sprintf(fnbuf, "hardcopy.%d", fore->w_number);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mfileio.c:396:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  396 |                                 sprintf(fnbuf, "hardcopy.%d", fore->w_number);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mfileio.c:399:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  399 |                 if (hardcopy_append && !access(fn, W_OK))[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  400 |                         mode = "a";[0m
  401 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mfileio.c:399:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |                 if (hardcopy_append && !access(fn, W_OK))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  400 |                         mode = "a";[0m
      | [0;1;32m                                   
[0m[1mfileio.c:405:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  405 |                 if (fn == 0) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  406 |                         strncpy(fnbuf, BufferFile, sizeof(fnbuf) - 1);[0m
  407 |                         fnbuf[sizeof(fnbuf) - 1] = 0;[0m
  408 |                         fn = fnbuf;[0m
  409 |                 }[0m
  410 |                 public = !strcmp(fn, DEFAULT_BUFFERFILE);[0m
  411 | # ifdef HAVE_LSTAT[0m
  412 |                 exists = !lstat(fn, &stb);[0m
  413 |                 if (public && exists && (S_ISLNK(stb.st_mode) || stb.st_nlink > 1)) {[0m
  414 |                         Msg(0, "No write to links, please.");[0m
  415 |                         return;[0m
  416 |                 }[0m
  417 | # endif[0m
  418 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mfileio.c:406:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  406 |                         strncpy(fnbuf, BufferFile, sizeof(fnbuf) - 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfileio.c:406:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  406 |                         strncpy(fnbuf, BufferFile, sizeof(fnbuf) - 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfileio.c:430:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |                                         if (fstat(fd, &stb2) == 0 && stb.st_dev == stb2.st_dev && stb.st_ino == stb2.st_ino)[0m
      | [0;1;32m                                                                                                                            ^
[0m      | [0;32m                                                                                                                             {
[0m  431 |                                                 ftruncate(fd, 0);[0m
  432 |                                         else {[0m
      | [0;32m                                        } 
[0m[1mfileio.c:437:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  438 |                                 fd = open(fn, O_WRONLY|O_CREAT|O_EXCL, 0666);[0m
      | [0;1;32m                                                                             
[0m[1mfileio.c:443:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  444 | #endif /* COPY_PASTE */[0m
  445 |                         f = fopen(fn, mode);[0m
      | [0;1;32m                                            
[0m[1mfileio.c:453:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |                                 if (!fore)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  454 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mfileio.c:455:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  455 |                                 if (*mode == 'a') {[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m[1mfileio.c:457:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |                                         for (j = fore->w_width - 2; j > 0; j--)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  458 |                                                 putc('=', f);[0m
      | [0;1;32m                                                             
[0m[1mfileio.c:466:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |                                                     k >= 0 && p[k] == ' '; k--)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  467 |                                                         ;[0m
      | [0;1;32m                                                         
[0m[1mfileio.c:468:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |                                                 for (j = 0; j <= k; j++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  469 |                                                         putc(p[j], f);[0m
      | [0;1;32m                                                                      
[0m[1mfileio.c:477:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |                                             k >= 0 && p[k] == ' '; k--)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  478 |                                                 ;[0m
      | [0;1;32m                                                 
[0m[1mfileio.c:479:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |                                         for (j = 0; j <= k; j++)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  480 |                                                 putc(p[j], f);[0m
      | [0;1;32m                                                              
[0m[1mfileio.c:486:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |                                 DumpTermcap(fore->w_aflag, f);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  487 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mfileio.c:491:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |                                 p = user->u_plop.buf;[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  492 |                                 for (i = user->u_plop.len; i-- > 0; p++)[0m
  493 |                                         if (*p == '\r' && (i == 0 || p[1] != '\n'))[0m
  494 |                                                 putc('\n', f);[0m
  495 |                                         else[0m
  496 |                                                 putc(*p, f);[0m
  497 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mfileio.c:492:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |                                 for (i = user->u_plop.len; i-- > 0; p++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  493 |                                         if (*p == '\r' && (i == 0 || p[1] != '\n'))[0m
  494 |                                                 putc('\n', f);[0m
  495 |                                         else[0m
  496 |                                                 putc(*p, f);[0m
      | [0;1;32m                                                            
[0m[1mfileio.c:493:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |                                         if (*p == '\r' && (i == 0 || p[1] != '\n'))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m  494 |                                                 putc('\n', f);[0m
  495 |                                         else[0m
      | [0;32m                                        } 
[0m[1mfileio.c:495:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  495 |                                         else[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  496 |                                                 putc(*p, f);[0m
      | [0;1;32m                                                            
[0m[1mfileio.c:504:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |         if (UserStatus() <= 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  505 |                 Msg(0, "Cannot open \"%s\"", fn);[0m
  506 |         else if (display && !*rc_name) {[0m
      | [0;32m        } 
[0m[1mfileio.c:509:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  509 |                         Msg(0, "Termcap entry written to \"%s\".", fn);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  510 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mfileio.c:514:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  514 |                         break;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                        {    ;} 
[0m[1mfileio.c:517:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  517 |                         Msg(0, "Copybuffer written to \"%s\".", fn);[0m
      | [0;1;32m                        ^                                          
[0m      | [0;32m                        {                                          ;} 
[0m[1mfileio.c:560:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |                 if (l < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  561 |                         l = 0;[0m
      | [0;1;32m                              
[0m[1mfileio.c:564:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  564 |                 if (read(i, &c, 1) > 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  565 |                         Msg(0, "Slurped only %d characters (of %d) into buffer - try again", l, size);[0m
  566 |                 else[0m
      | [0;32m                } 
[0m[1mfileio.c:566:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  566 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  567 |                         Msg(0, "Slurped %d characters into buffer", l);[0m
      | [0;1;32m                                                                       
[0m[1mfileio.c:571:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |         for (bp = buf; l-- > 0; bp++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  572 |                 if (*bp == '\n' && (bp == buf || bp[-1] != '\r'))[0m
  573 |                         *bp = '\r';[0m
      | [0;1;32m                                   
[0m[1mfileio.c:572:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |                 if (*bp == '\n' && (bp == buf || bp[-1] != '\r'))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  573 |                         *bp = '\r';[0m
      | [0;1;32m                                   
[0m[1mfileio.c:580:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  580 |         if (UserContext() > 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  581 |                 UserReturn(unlink(BufferFile) ? errno : 0);[0m
      | [0;1;32m                                                           
[0m[1mfileio.c:713:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  713 |                 WMsg(p, errno, "printing fork");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  714 |                 return -1;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mfileio.c:716:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  716 |                 display = p->w_pdisplay;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mfileio.c:726:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  726 |                 if (setgid(real_gid) || setuid(real_uid))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  727 |                         Panic(errno, "printpipe setuid");[0m
      | [0;1;32m                                                         
[0m[1mfileio.c:737:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  737 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mfileio.c:755:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  755 |                 Msg(errno, "fork");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  756 |                 return -1;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mfileio.c:758:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  758 |                 displays = 0;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mfileio.c:784:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  784 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m78 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[25/38][188.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmppxtrnhtz.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/help.c
[1mhelp.c:165:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |   if (InitOverlayPage(sizeof(*helpdata), &HelpLf, 0))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  166 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:173:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |   for (n = 0; n <= RC_LAST; n++)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  174 |     used[n] = 0;[0m
      | [0;1;32m                
[0m[1mhelp.c:179:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |     if (n == RC_ILLEGAL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  180 |       continue;[0m
      | [0;1;32m               
[0m[1mhelp.c:184:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  185 |       helpdata->command_bindings++;[0m
      | [0;1;32m                                   
[0m[1mhelp.c:187:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |   for (n = i = 0; n <= RC_LAST; n++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  188 |     if (used[n]) {[0m
  189 |       l = strlen(comms[n].name);[0m
  190 |       if (l > mcom)[0m
  191 |         mcom = l;[0m
  192 |       if (used[n] > mkey)[0m
  193 |         mkey = used[n];[0m
  194 |       helpdata->nact[i++] = n;[0m
  195 |     }[0m
      | [0;1;32m     
[0m[1mhelp.c:190:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |       if (l > mcom)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  191 |         mcom = l;[0m
      | [0;1;32m                 
[0m[1mhelp.c:192:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |       if (used[n] > mkey)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  193 |         mkey = used[n];[0m
      | [0;1;32m                       
[0m[1mhelp.c:201:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |   if (mkey > MAXKLEN)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  202 |     mkey = MAXKLEN;[0m
      | [0;1;32m                   
[0m[1mhelp.c:211:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |   if (helpdata->inter <= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  212 |     helpdata->inter = 1;[0m
      | [0;1;32m                        
[0m[1mhelp.c:220:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |   while (helpdata->numskip < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  221 |     helpdata->numskip += flayer->l_height-5;[0m
      | [0;1;32m                                            
[0m[1mhelp.c:225:96: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |   if (helpdata->numskip > flayer->l_height/3 || helpdata->numskip > helpdata->command_bindings)[0m
      | [0;1;32m                                                                                               ^
[0m      | [0;32m                                                                                                {
[0m  226 |     helpdata->numskip = 1;[0m
      | [0;1;32m                          
[0m[1mhelp.c:242:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |         if (helppage() == 0)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  243 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mhelp.c:242:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |         if (helppage() == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  243 |           break;[0m
      | [0;1;32m                
[0m[1mhelp.c:248:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  248 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mhelp.c:250:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  250 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mhelp.c:255:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  255 |   if (done)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  256 |     HelpAbort();[0m
      | [0;1;32m                
[0m[1mhelp.c:273:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |   if (helpdata->grow >= helpdata->maxrow)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  274 |     return -1;[0m
      | [0;1;32m              
[0m[1mhelp.c:281:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  281 |   sprintf(cbuf,"Screen key bindings, page %d of %d.", helpdata->grow / (flayer->l_height-5) + 1, helpdata->numpages);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:281:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  281 |   sprintf(cbuf,"Screen key bindings, page %d of %d.", helpdata->grow / (flayer->l_height-5) + 1, helpdata->numpages);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:299:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |       if (ktabp == ktab)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  300 |         sprintf(cbuf,"Command key:  %s   Literal %s:  %s", Esc_buf, Esc_buf, buf);[0m
  301 |       else[0m
      | [0;32m      } 
[0m[1mhelp.c:300:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  300 |         sprintf(cbuf,"Command key:  %s   Literal %s:  %s", Esc_buf, Esc_buf, buf);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mhelp.c:300:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  300 |         sprintf(cbuf,"Command key:  %s   Literal %s:  %s", Esc_buf, Esc_buf, buf);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mhelp.c:301:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  302 |         sprintf(cbuf,"Command class: '%.80s'", helpdata->class);[0m
      | [0;1;32m                                                                
[0m[1mhelp.c:302:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  302 |         sprintf(cbuf,"Command class: '%.80s'", helpdata->class);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mhelp.c:302:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  302 |         sprintf(cbuf,"Command class: '%.80s'", helpdata->class);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mhelp.c:314:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |         for (key = 0; key < 256 + KMAP_KEYS; key++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  315 |         if (ktabp[key].nr == n && ktabp[key].args == noargs && strlen(buf) < sizeof(buf) - 7) {[0m
  316 |           strcat(buf, " ");[0m
  317 |           add_key_to_buf(buf, key);[0m
  318 |         }[0m
      | [0;1;32m         
[0m[1mhelp.c:316:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  316 |           strcat(buf, " ");[0m
      | [0;1;32m          ^~~~~~
[0m[1mhelp.c:316:11: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  316 |           strcat(buf, " ");[0m
      | [0;1;32m          ^~~~~~
[0m[1mhelp.c:330:15: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'n' is used in the enclosing expression, the value is never actually read from 'n' [clang-analyzer-deadcode.DeadStores][0m
  330 |       while ((n = ktabp[helpdata->command_search].nr) == RC_ILLEGAL || ktabp[helpdata->command_search].args == noargs) {[0m
      | [0;1;32m              ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:330:15: [0m[0;1;36mnote: [0mAlthough the value stored to 'n' is used in the enclosing expression, the value is never actually read from 'n'[0m
  330 |       while ((n = ktabp[helpdata->command_search].nr) == RC_ILLEGAL || ktabp[helpdata->command_search].args == noargs) {[0m
      | [0;1;32m              ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:331:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |         if (++helpdata->command_search >= 256 + KMAP_KEYS)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  332 |           return -1;[0m
      | [0;1;32m                    
[0m[1mhelp.c:342:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  343 |       helpdata->grow++;[0m
      | [0;1;32m                       
[0m[1mhelp.c:345:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  345 |   sprintf(cbuf,"[Press Space %s Return to end.]", helpdata->grow < helpdata->maxrow ? "for next page;" : "or");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:345:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  345 |   sprintf(cbuf,"[Press Space %s Return to end.]", helpdata->grow < helpdata->maxrow ? "for next page;" : "or");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:362:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |   if (fr <= 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  363 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:366:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |   if (l + 1 > fr)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  367 |     l = fr - 1;[0m
      | [0;1;32m               
[0m[1mhelp.c:380:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |       if (index(cp, '\'') != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  381 |         *bp++ = del = '"';[0m
  382 |       else[0m
      | [0;32m      } 
[0m[1mhelp.c:382:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  383 |         *bp++ = del = '\'';[0m
      | [0;1;32m                           
[0m[1mhelp.c:386:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |     while (ll-- && bp < buf + 250)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  387 |       bp += AddXChar(bp, *(unsigned char *)cp++);[0m
      | [0;1;32m                                                 
[0m[1mhelp.c:388:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |     if (del)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  389 |       *bp++ = del;[0m
      | [0;1;32m                  
[0m[1mhelp.c:393:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |       if (fr > 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  394 |         PadStr(buf, fr, x, y);[0m
      | [0;1;32m                              
[0m[1mhelp.c:395:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |       if (fr == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  396 |         LPutChar(flayer, &mchar_dol, x, y);[0m
      | [0;1;32m                                           
[0m[1mhelp.c:403:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |     if (*pp)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  404 |       LPutChar(flayer, fr ? &mchar_blank : &mchar_dol, x++, y);[0m
      | [0;1;32m                                                               
[0m[1mhelp.c:410:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |   if (key < 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  411 |     strcpy(buf, "unset");[0m
  412 |   else if (key == ' ')[0m
      | [0;32m  } 
[0m[1mhelp.c:411:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  411 |     strcpy(buf, "unset");[0m
      | [0;1;32m    ^~~~~~
[0m[1mhelp.c:411:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  411 |     strcpy(buf, "unset");[0m
      | [0;1;32m    ^~~~~~
[0m[1mhelp.c:412:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |   else if (key == ' ')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  413 |     strcpy(buf, "sp");[0m
  414 | #ifdef MAPKEYS[0m
  415 |   else if (key >= 256) {[0m
      | [0;32m  } 
[0m[1mhelp.c:413:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  413 |     strcpy(buf, "sp");[0m
      | [0;1;32m    ^~~~~~
[0m[1mhelp.c:413:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  413 |     strcpy(buf, "sp");[0m
      | [0;1;32m    ^~~~~~
[0m[1mhelp.c:424:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  425 |     buf[AddXChar(buf, key)] = 0;[0m
      | [0;1;32m                                
[0m[1mhelp.c:438:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |   if (y != 0 && y != flayer->l_height - 1)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  439 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:440:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |   if (!isblank)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  441 |     LClearArea(flayer, xs, y, xe, y, 0, 0);[0m
      | [0;1;32m                                           
[0m[1mhelp.c:572:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  572 |         if (*copydata->cps) {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  573 |           copypage();[0m
  574 |           break;[0m
  575 |         }[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mhelp.c:580:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  580 |         done = 1;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  581 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mhelp.c:583:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  583 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mhelp.c:602:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  602 |   if (InitOverlayPage(sizeof(*copydata), &CopyrightLf, 0))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  603 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:629:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  629 |     while (*cps == ' ')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  630 |       cps++;[0m
      | [0;1;32m            
[0m[1mhelp.c:636:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |     while (*cps && *cps != ' ' && *cps != '\n')[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  637 |       cps++;[0m
      | [0;1;32m            
[0m[1mhelp.c:641:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |     if (l > flayer->l_width - 1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  642 |       l = flayer->l_width - 1;[0m
      | [0;1;32m                              
[0m[1mhelp.c:655:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  655 |     if (l)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  656 |       LPutStr(flayer, ws, l, &mchar_blank, x, y);[0m
      | [0;1;32m                                                 
[0m[1mhelp.c:659:9: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding 'version' [clang-analyzer-security.ArrayBound][0m
  659 |     if (*cps == 0 && copydata->savedcps) {[0m
      | [0;1;32m        ^
[0m[1mhelp.c:681:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  681 |   ASSERT(flayer);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mhelp.c:682:7: [0m[0;1;36mnote: [0mAssuming 'y' is < 0[0m
  682 |   if (y < 0) {[0m
      | [0;1;32m      ^~~~~
[0m[1mhelp.c:682:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  682 |   if (y < 0) {[0m
      | [0;1;32m  ^
[0m[1mhelp.c:688:7: [0m[0;1;36mnote: [0mCalling 'copypage'[0m
  688 |       copypage();[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mhelp.c:619:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  619 |   ASSERT(flayer);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mhelp.c:627:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  627 |   while (*cps && y < flayer->l_height - 3) {[0m
      | [0;1;32m         ^~~~
[0m[1mhelp.c:627:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mhelp.c:627:18: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  627 |   while (*cps && y < flayer->l_height - 3) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:627:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  627 |   while (*cps && y < flayer->l_height - 3) {[0m
      | [0;1;32m  ^
[0m[1mhelp.c:629:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  629 |     while (*cps == ' ')[0m
      | [0;1;32m           ^~~~~~~~~~~
[0m[1mhelp.c:629:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 631[0m
  629 |     while (*cps == ' ')[0m
      | [0;1;32m    ^
[0m[1mhelp.c:631:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  631 |     if (strncmp(cps, "%v", 2) == 0) {[0m
      | [0;1;32m    ^
[0m[1mhelp.c:634:7: [0m[0;1;36mnote: [0m Execution continues on line 627[0m
  634 |       continue;[0m
      | [0;1;32m      ^
[0m[1mhelp.c:627:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  627 |   while (*cps && y < flayer->l_height - 3) {[0m
      | [0;1;32m         ^~~~
[0m[1mhelp.c:627:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mhelp.c:627:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  627 |   while (*cps && y < flayer->l_height - 3) {[0m
      | [0;1;32m  ^
[0m[1mhelp.c:629:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  629 |     while (*cps == ' ')[0m
      | [0;1;32m           ^~~~~~~~~~~
[0m[1mhelp.c:629:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 631[0m
  629 |     while (*cps == ' ')[0m
      | [0;1;32m    ^
[0m[1mhelp.c:631:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  631 |     if (strncmp(cps, "%v", 2) == 0) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:631:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  631 |     if (strncmp(cps, "%v", 2) == 0) {[0m
      | [0;1;32m    ^
[0m[1mhelp.c:636:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  636 |     while (*cps && *cps != ' ' && *cps != '\n')[0m
      | [0;1;32m           ^
[0m[1mhelp.c:636:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mhelp.c:636:35: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  636 |     while (*cps && *cps != ' ' && *cps != '\n')[0m
      | [0;1;32m                                  ^~~~~~~~~~~~
[0m[1mhelp.c:636:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 639[0m
  636 |     while (*cps && *cps != ' ' && *cps != '\n')[0m
      | [0;1;32m    ^
[0m[1mhelp.c:641:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  641 |     if (l > flayer->l_width - 1)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:641:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  641 |     if (l > flayer->l_width - 1)[0m
      | [0;1;32m    ^
[0m[1mhelp.c:644:9: [0m[0;1;36mnote: [0m'x' is 0[0m
  644 |     if (x && x + l >= flayer->l_width - 2) {[0m
      | [0;1;32m        ^
[0m[1mhelp.c:644:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  644 |     if (x && x + l >= flayer->l_width - 2) {[0m
      | [0;1;32m          ^
[0m[1mhelp.c:650:9: [0m[0;1;36mnote: [0m'x' is 0[0m
  650 |     if (x) {[0m
      | [0;1;32m        ^
[0m[1mhelp.c:650:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  650 |     if (x) {[0m
      | [0;1;32m    ^
[0m[1mhelp.c:655:9: [0m[0;1;36mnote: [0m'l' is not equal to 0[0m
  655 |     if (l)[0m
      | [0;1;32m        ^
[0m[1mhelp.c:655:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  655 |     if (l)[0m
      | [0;1;32m    ^
[0m[1mhelp.c:659:9: [0m[0;1;36mnote: [0mAccess of 'version' at negative byte offset[0m
  659 |     if (*cps == 0 && copydata->savedcps) {[0m
      | [0;1;32m        ^~~~
[0m[1mhelp.c:669:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  669 |     if (*cps == ' ' || *cps == '\n')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  670 |       cps++;[0m
      | [0;1;32m            
[0m[1mhelp.c:672:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  672 |   while (*cps == '\n')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  673 |     cps++;[0m
      | [0;1;32m          
[0m[1mhelp.c:674:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  674 |   sprintf(cbuf,"[Press Space %s Return to end.]", *cps ? "for next page;" : "or");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:674:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  674 |   sprintf(cbuf,"[Press Space %s Return to end.]", *cps ? "for next page;" : "or");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:691:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  691 |   if (y != 0 && y != flayer->l_height - 1)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  692 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:693:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |   if (isblank)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  694 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:741:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |   if (InitOverlayPage(sizeof(*bindkeydata), &BindkeyLf, 0))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  742 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:750:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |     if (tab[i].nr != RC_ILLEGAL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  751 |       n++;[0m
      | [0;1;32m          
[0m[1mhelp.c:756:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |   if (bindkeydata->pages == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  757 |     bindkeydata->pages = 1;[0m
      | [0;1;32m                           
[0m[1mhelp.c:779:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  779 |   sprintf(tbuf, "%s key bindings, page %d of %d.", bindkeydata->title, bindkeydata->page, bindkeydata->pages);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:779:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  779 |   sprintf(tbuf, "%s key bindings, page %d of %d.", bindkeydata->title, bindkeydata->page, bindkeydata->pages);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:787:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  787 |       if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  788 |         continue;[0m
      | [0;1;32m                 
[0m[1mhelp.c:790:11: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding 'term' [clang-analyzer-security.ArrayBound][0m
  790 |       s = term[i + T_CAPS].tcname;[0m
      | [0;1;32m          ^
[0m[1mhelp.c:873:7: [0m[0;1;36mnote: [0mAssuming 'y' is < 0[0m
  873 |   if (y < 0) {[0m
      | [0;1;32m      ^~~~~
[0m[1mhelp.c:873:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  873 |   if (y < 0) {[0m
      | [0;1;32m  ^
[0m[1mhelp.c:874:5: [0m[0;1;36mnote: [0mCalling 'bindkeypage'[0m
  874 |     bindkeypage();[0m
      | [0;1;32m    ^~~~~~~~~~~~~
[0m[1mhelp.c:782:30: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  782 |   for (i = bindkeydata->pos; i < KMAP_KEYS+KMAP_AKEYS+kmap_extn && y < flayer->l_height - 3; i++) {[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:782:30: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mhelp.c:782:68: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  782 |   for (i = bindkeydata->pos; i < KMAP_KEYS+KMAP_AKEYS+kmap_extn && y < flayer->l_height - 3; i++) {[0m
      | [0;1;32m                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:782:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  782 |   for (i = bindkeydata->pos; i < KMAP_KEYS+KMAP_AKEYS+kmap_extn && y < flayer->l_height - 3; i++) {[0m
      | [0;1;32m  ^
[0m[1mhelp.c:785:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  785 |     if (i < KMAP_KEYS) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~
[0m[1mhelp.c:785:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  785 |     if (i < KMAP_KEYS) {[0m
      | [0;1;32m    ^
[0m[1mhelp.c:794:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  794 |     else if (i < KMAP_KEYS+KMAP_AKEYS) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:794:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  794 |     else if (i < KMAP_KEYS+KMAP_AKEYS) {[0m
      | [0;1;32m         ^
[0m[1mhelp.c:809:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  809 |       if ((kme->fl & KMAP_NOTIMEOUT) != 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:809:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  809 |       if ((kme->fl & KMAP_NOTIMEOUT) != 0)[0m
      | [0;1;32m      ^
[0m[1mhelp.c:811:13: [0m[0;1;36mnote: [0mAssuming 'dmtab' is not equal to field 'tab'[0m
  811 |       act = bindkeydata->tab == dmtab ? &kme->dm : bindkeydata->tab == mmtab ? &kme->mm : &kme->um;[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:811:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mhelp.c:811:52: [0m[0;1;36mnote: [0mAssuming 'mmtab' is not equal to field 'tab'[0m
  811 |       act = bindkeydata->tab == dmtab ? &kme->dm : bindkeydata->tab == mmtab ? &kme->mm : &kme->um;[0m
      | [0;1;32m                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:811:52: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mhelp.c:812:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  812 |       if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:812:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  812 |       if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^
[0m[1mhelp.c:816:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  816 |     while (sl-- > 0)[0m
      | [0;1;32m           ^~~~~~~~
[0m[1mhelp.c:816:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  816 |     while (sl-- > 0)[0m
      | [0;1;32m    ^
[0m[1mhelp.c:816:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  816 |     while (sl-- > 0)[0m
      | [0;1;32m           ^~~~~~~~
[0m[1mhelp.c:816:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 819[0m
  816 |     while (sl-- > 0)[0m
      | [0;1;32m    ^
[0m[1mhelp.c:819:9: [0m[0;1;36mnote: [0m'del' is 0[0m
  819 |     if (del)[0m
      | [0;1;32m        ^~~
[0m[1mhelp.c:819:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  819 |     if (del)[0m
      | [0;1;32m    ^
[0m[1mhelp.c:823:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  823 |     while (p < tbuf + 15)[0m
      | [0;1;32m           ^~~~~~~~~~~~~
[0m[1mhelp.c:823:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 825[0m
  823 |     while (p < tbuf + 15)[0m
      | [0;1;32m    ^
[0m[1mhelp.c:827:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  827 |     if (p - tbuf > flayer->l_width - 1) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:827:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  827 |     if (p - tbuf > flayer->l_width - 1) {[0m
      | [0;1;32m    ^
[0m[1mhelp.c:782:30: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  782 |   for (i = bindkeydata->pos; i < KMAP_KEYS+KMAP_AKEYS+kmap_extn && y < flayer->l_height - 3; i++) {[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:782:30: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mhelp.c:782:68: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  782 |   for (i = bindkeydata->pos; i < KMAP_KEYS+KMAP_AKEYS+kmap_extn && y < flayer->l_height - 3; i++) {[0m
      | [0;1;32m                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:782:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  782 |   for (i = bindkeydata->pos; i < KMAP_KEYS+KMAP_AKEYS+kmap_extn && y < flayer->l_height - 3; i++) {[0m
      | [0;1;32m  ^
[0m[1mhelp.c:785:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  785 |     if (i < KMAP_KEYS) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~
[0m[1mhelp.c:785:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  785 |     if (i < KMAP_KEYS) {[0m
      | [0;1;32m    ^
[0m[1mhelp.c:787:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  787 |       if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~
[0m[1mhelp.c:787:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  787 |       if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^
[0m[1mhelp.c:790:11: [0m[0;1;36mnote: [0mAccess of 'term' at negative byte offset -34359736672[0m
  790 |       s = term[i + T_CAPS].tcname;[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1mhelp.c:796:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  796 |       if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  797 |         continue;[0m
      | [0;1;32m                 
[0m[1mhelp.c:809:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |       if ((kme->fl & KMAP_NOTIMEOUT) != 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  810 |         xch = "[T]";[0m
      | [0;1;32m                    
[0m[1mhelp.c:812:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |       if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  813 |         continue;[0m
      | [0;1;32m                 
[0m[1mhelp.c:816:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  816 |     while (sl-- > 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  817 |       p += AddXChar(p, *(unsigned char *)s++);[0m
      | [0;1;32m                                              
[0m[1mhelp.c:819:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |     if (del)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  820 |       *p++ = del;[0m
      | [0;1;32m                 
[0m[1mhelp.c:823:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  823 |     while (p < tbuf + 15)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  824 |       *p++ = ' ';[0m
      | [0;1;32m                 
[0m[1mhelp.c:825:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  825 |     sprintf(p, "%s -> ", xch);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mhelp.c:825:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  825 |     sprintf(p, "%s -> ", xch);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mhelp.c:838:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  838 |   sprintf(tbuf,"[Press Space %s Return to end.]", bindkeydata->page < bindkeydata->pages ? "for next page;" : "or");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:838:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  838 |   sprintf(tbuf,"[Press Space %s Return to end.]", bindkeydata->page < bindkeydata->pages ? "for next page;" : "or");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhelp.c:851:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  851 |         if (bindkeydata->page < bindkeydata->pages) {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  852 |           bindkeydata->pos = bindkeydata->last;[0m
  853 |           bindkeydata->page++;[0m
  854 |           bindkeypage();[0m
  855 |           break;[0m
  856 |         }[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mhelp.c:861:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  861 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mhelp.c:863:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  863 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mhelp.c:868:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  868 |   if (done)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  869 |     BindkeyAbort();[0m
      | [0;1;32m                   
[0m[1mhelp.c:877:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |   if (y != 0 && y != flayer->l_height - 1)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  878 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:879:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  879 |   if (!isblank)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  880 |     LClearArea(flayer, xs, y, xe, y, 0, 0);[0m
      | [0;1;32m                                           
[0m[1mhelp.c:913:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  913 |   if (y == 0 && xs == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  914 |     LPutStr(flayer, "Zmodem active on another display", flayer->l_width > 32 ? 32 : flayer->l_width, &mchar_blank, 0, 0);[0m
      | [0;1;32m                                                                                                                         
[0m[1mhelp.c:918:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  918 |   if (InitOverlayPage(1, &ZmodemLf, 1))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  919 |     return;[0m
      | [0;1;32m           
[0m[1mhelp.c:931:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  931 |   if (l > n)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  932 |     l = n;[0m
      | [0;1;32m          
[0m[1mhelp.c:934:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  934 |   if (l < n)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  935 |     LPutStr(flayer, (char *)blank, n - l, &mchar_blank, x + l, y);[0m
      | [0;1;32m                                                                  
[0m86 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[26/38][190.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpu8i1akxp.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/acls.c
[1macls.c:102:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  102 | GrowBitfield(bfp, len, delta, defaultbit)[0m
      | [0;1;32m^
[0m[1macls.c:109:22: [0m[0;1;35mwarning: [0m[1mCall to 'calloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI][0m
  109 |   if (!(n = (AclBits)calloc(1, (unsigned long)(&ACLBYTE((char *)0, len + delta + 1)))))[0m
      | [0;1;32m                     ^
[0m[1macls.c:1030:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1030 |   for (p = str; *p; p++)[0m
      | [0;1;32m  ^
[0m[1macls.c:1031:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1macls.c:1031:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1macls.c:1031:28: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m                           ^~~~~~~~
[0m[1macls.c:1031:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m    ^
[0m[1macls.c:1032:7: [0m[0;1;36mnote: [0m Execution continues on line 1033[0m
 1032 |       break;[0m
      | [0;1;32m      ^
[0m[1macls.c:1033:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1033 |   if (!*p)[0m
      | [0;1;32m  ^
[0m[1macls.c:1043:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1043 |   if (!strcmp("??", str))[0m
      | [0;1;32m  ^
[0m[1macls.c:1051:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1051 |   av[0] = *str ? str : "*";[0m
      | [0;1;32m          ^~~~
[0m[1macls.c:1051:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1macls.c:1053:7: [0m[0;1;36mnote: [0mCalling 'UsersAcl'[0m
 1053 |   if (UsersAcl(u, 3, av))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1macls.c:968:7: [0m[0;1;36mnote: [0m'argc' is not equal to 1[0m
  968 |   if (argc == 1)[0m
      | [0;1;32m      ^~~~
[0m[1macls.c:968:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  968 |   if (argc == 1)[0m
      | [0;1;32m  ^
[0m[1macls.c:982:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  982 |   if (argv[0][0] == '*' && argv[0][1] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1macls.c:982:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  982 |   if (argv[0][0] == '*' && argv[0][1] == '\0')[0m
      | [0;1;32m                        ^
[0m[1macls.c:998:25: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  998 |       for (s = argv[0]; *s && *s!=' ' && *s!='\t' && *s!=',' && *s!='='; s++)[0m
      | [0;1;32m                        ^
[0m[1macls.c:998:31: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  998 |       for (s = argv[0]; *s && *s!=' ' && *s!='\t' && *s!=',' && *s!='='; s++)[0m
      | [0;1;32m                              ^~~~~~~
[0m[1macls.c:998:39: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  998 |       for (s = argv[0]; *s && *s!=' ' && *s!='\t' && *s!=',' && *s!='='; s++)[0m
      | [0;1;32m                                      ^
[0m[1macls.c:1000:7: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1000 |       *s ? (*s++ = '\0') : (*s = '\0');[0m
      | [0;1;32m      ^
[0m[1macls.c:1001:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1001 |       debug2("UsersAcl(uu, \"%s\", argc=%d)\n", argv[0], argc);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:1002:12: [0m[0;1;36mnote: [0m'cf_u' is null[0m
 1002 |       if ((cf_u) ?[0m
      | [0;1;32m           ^~~~
[0m[1macls.c:1002:11: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1002 |       if ((cf_u) ?[0m
      | [0;1;32m          ^
[0m[1macls.c:1004:10: [0m[0;1;36mnote: [0mCalling 'UserAcl'[0m
 1004 |           ((r = UserAcl(uu, FindUserPtr(argv[0]), argc, argv)) < 0))[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:877:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m          ^
[0m[1macls.c:878:8: [0m[0;1;36mnote: [0m'argc' is > 1[0m
  878 |       (argc > 1 && !strcmp(argv[0], "nobody")))[0m
      | [0;1;32m       ^~~~
[0m[1macls.c:878:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1macls.c:878:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  878 |       (argc > 1 && !strcmp(argv[0], "nobody")))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:877:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m  ^
[0m[1macls.c:881:3: [0m[0;1;36mnote: [0mControl jumps to 'case 3:'  at line 887[0m
  881 |   switch (argc)[0m
      | [0;1;32m  ^
[0m[1macls.c:888:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  888 |       debug1("UserAcl: user '%s', no password:", argv[0]);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:889:15: [0m[0;1;36mnote: [0mCalling 'UserAdd'[0m
  889 |       return (UserAdd(argv[0],    NULL, u) < 0) || [0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:164:8: [0m[0;1;36mnote: [0m'up' is non-null[0m
  164 |   if (!up)[0m
      | [0;1;32m       ^~
[0m[1macls.c:164:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  164 |   if (!up)[0m
      | [0;1;32m  ^
[0m[1macls.c:166:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |   if (*up)[0m
      | [0;1;32m  ^
[0m[1macls.c:172:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  172 |   if (strcmp("none", name))     /* "none" is a reserved word */[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:172:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  172 |   if (strcmp("none", name))     /* "none" is a reserved word */[0m
      | [0;1;32m  ^
[0m[1macls.c:174:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  174 |   if (!*up)[0m
      | [0;1;32m      ^~~~
[0m[1macls.c:174:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  174 |   if (!*up)[0m
      | [0;1;32m  ^
[0m[1macls.c:187:7: [0m[0;1;36mnote: [0m'pass' is null[0m
  187 |   if (pass)[0m
      | [0;1;32m      ^~~~
[0m[1macls.c:187:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  187 |   if (pass)[0m
      | [0;1;32m  ^
[0m[1macls.c:189:15: [0m[0;1;36mnote: [0mField 'u_password' is null[0m
  189 |   if (!(*up)->u_password)[0m
      | [0;1;32m              ^
[0m[1macls.c:189:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  189 |   if (!(*up)->u_password)[0m
      | [0;1;32m  ^
[0m[1macls.c:197:25: [0m[0;1;36mnote: [0mAssuming 'maxusercount' is <= field 'u_id'[0m
  197 |   for ((*up)->u_id = 0; (*up)->u_id < maxusercount; (*up)->u_id++)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:197:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 200[0m
  197 |   for ((*up)->u_id = 0; (*up)->u_id < maxusercount; (*up)->u_id++)[0m
      | [0;1;32m  ^
[0m[1macls.c:200:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  200 |   debug2("UserAdd %s id %d\n", name, (*up)->u_id);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:201:7: [0m[0;1;36mnote: [0mAssuming 'maxusercount' is equal to field 'u_id'[0m
  201 |   if ((*up)->u_id == maxusercount)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:201:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  201 |   if ((*up)->u_id == maxusercount)[0m
      | [0;1;32m  ^
[0m[1macls.c:207:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  207 |       debug2("growing all bitfields %d += %d\n", maxusercount, USER_CHUNK);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:210:11: [0m[0;1;36mnote: [0mCalling 'GrowBitfield'[0m
  210 |       if (GrowBitfield(&userbits, maxusercount, USER_CHUNK, 0))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:109:22: [0m[0;1;36mnote: [0mCall to 'calloc' has an allocation size of 0 bytes[0m
  109 |   if (!(n = (AclBits)calloc(1, (unsigned long)(&ACLBYTE((char *)0, len + delta + 1)))))[0m
      | [0;1;32m                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:109:88: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |   if (!(n = (AclBits)calloc(1, (unsigned long)(&ACLBYTE((char *)0, len + delta + 1)))))[0m
      | [0;1;32m                                                                                       ^
[0m      | [0;32m                                                                                        {
[0m  110 |     return -1;[0m
      | [0;1;32m              
[0m[1macls.c:114:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |           ((i >= len) && (defaultbit)))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  115 |         ACLBYTE(n, i) |= ACLBIT(i);[0m
      | [0;1;32m                                   
[0m[1macls.c:117:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   if (len)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  118 |     free((char *)o);[0m
      | [0;1;32m                    
[0m[1macls.c:130:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  130 | FindUserPtr(name)[0m
      | [0;1;32m^
[0m[1macls.c:135:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |   for (u = &users; *u; u = &(*u)->u_next)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  136 |     if (!strcmp((*u)->u_name, name))[0m
  137 |       break;[0m
      | [0;1;32m            
[0m[1macls.c:136:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |     if (!strcmp((*u)->u_name, name))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  137 |       break;[0m
      | [0;1;32m            
[0m[1macls.c:156:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  156 | UserAdd(name, pass, up)[0m
      | [0;1;32m^
[0m[1macls.c:164:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |   if (!up)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  165 |     up = FindUserPtr(name);[0m
      | [0;1;32m                           
[0m[1macls.c:168:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |       if (pass)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  169 |         (*up)->u_password = SaveStr(pass);[0m
      | [0;1;32m                                          
[0m[1macls.c:172:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |   if (strcmp("none", name))     /* "none" is a reserved word */[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  173 |     *up = (struct acluser *)calloc(1, sizeof(struct acluser));[0m
      | [0;1;32m                                                              
[0m[1macls.c:174:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |   if (!*up)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  175 |     return -1;          /* he still does not exist */[0m
      | [0;1;32m                                                     
[0m[1macls.c:185:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  185 |   strncpy((*up)->u_name, name, MAXLOGINLEN);[0m
      | [0;1;32m  ^~~~~~~
[0m[1macls.c:185:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  185 |   strncpy((*up)->u_name, name, MAXLOGINLEN);[0m
      | [0;1;32m  ^~~~~~~
[0m[1macls.c:187:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |   if (pass)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  188 |     (*up)->u_password = SaveStr(pass);[0m
      | [0;1;32m                                      
[0m[1macls.c:189:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   if (!(*up)->u_password)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  190 |     (*up)->u_password = NullStr;[0m
      | [0;1;32m                                
[0m[1macls.c:197:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   for ((*up)->u_id = 0; (*up)->u_id < maxusercount; (*up)->u_id++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  198 |     if (!(ACLBIT((*up)->u_id) & ACLBYTE(userbits, (*up)->u_id)))[0m
  199 |       break;[0m
      | [0;1;32m            
[0m[1macls.c:198:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |     if (!(ACLBIT((*up)->u_id) & ACLBYTE(userbits, (*up)->u_id)))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  199 |       break;[0m
      | [0;1;32m            
[0m[1macls.c:229:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |           for (i = 0; i < ACL_BITS_PER_CMD; i++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  230 |             if (GrowBitfield(&comms[j].userbits[i], maxusercount, USER_CHUNK,[0m
  231 |                 default_c_bit[i]))[0m
  232 |               {[0m
  233 |                 free((char *)*up); *up = NULL; return -1;[0m
  234 |               }[0m
      | [0;1;32m               
[0m[1macls.c:254:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  254 |           for (j = 0; j < ACL_BITS_PER_WIN; j++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  255 |             if (GrowBitfield(&w->w_userbits[j], maxusercount, USER_CHUNK,[0m
  256 |                 default_w_bit[j]))[0m
  257 |               {[0m
  258 |                 free((char *)*up); *up = NULL; return -1;[0m
  259 |               }[0m
      | [0;1;32m               
[0m[1macls.c:275:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |   if ((*up)->u_id == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  276 |     AclSetPerm(NULL, *up, "+a", "#?");[0m
      | [0;1;32m                                      
[0m[1macls.c:332:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  332 | UserDel(name, up)[0m
      | [0;1;32m^
[0m[1macls.c:342:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |   if (!up)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  343 |     up = FindUserPtr(name);[0m
      | [0;1;32m                           
[0m[1macls.c:344:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |   if (!(u = *up))[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  345 |     return -1;                  /* he who does not exist cannot be removed */[0m
      | [0;1;32m                                                                             
[0m[1macls.c:350:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |       if (D_user != u)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  351 |         continue;[0m
      | [0;1;32m                 
[0m[1macls.c:352:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |       if (display == old)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  353 |         old = NULL;[0m
      | [0;1;32m                   
[0m[1macls.c:374:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  375 |             g = &(*g)->next;[0m
      | [0;1;32m                            
[0m[1macls.c:384:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |   for (i = 0; i < ACL_BITS_PER_WIN; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  385 |     free((char *)u->u_umask_w_bits[i]);[0m
      | [0;1;32m                                       
[0m[1macls.c:408:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  408 | UserFreeCopyBuffer(u)[0m
      | [0;1;32m^
[0m[1macls.c:414:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |   if (!u->u_plop.buf)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  415 |     return 1;[0m
      | [0;1;32m             
[0m[1macls.c:420:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |           pa->pa_pasteptr - u->u_plop.buf < u->u_plop.len)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  421 |         FreePaster(pa);[0m
      | [0;1;32m                       
[0m[1macls.c:438:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  438 | FindGroupPtr(gp, u, recursive)[0m
      | [0;1;32m^
[0m[1macls.c:448:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |       if ((*gp)->u == u)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  449 |         return gp;                      /* found him here. */[0m
      | [0;1;32m                                                             
[0m[1macls.c:451:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |           *(g = FindGroupPtr(&(*gp)->u->u_group, u, recursive + 1)))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  452 |         return g;                       /* found him there. */[0m
      | [0;1;32m                                                              
[0m[1macls.c:459:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  459 | PasswordMatches(pw, password)[0m
      | [0;1;32m^
[0m[1macls.c:462:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |   if (!*password)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  463 |     return 0;[0m
      | [0;1;32m             
[0m[1macls.c:474:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  474 | AclLinkUser(from, to)[0m
      | [0;1;32m^
[0m[1macls.c:480:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |   if (!*(u1 = FindUserPtr(from)) && UserAdd(from, NULL, u1))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  481 |     return -1;[0m
      | [0;1;32m              
[0m[1macls.c:482:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  482 |   if (!*(u2 = FindUserPtr(to)) && UserAdd(to, NULL, u2))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  483 |     return -1;                  /* hmm, could not find both users. */[0m
      | [0;1;32m                                                                     
[0m[1macls.c:485:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  485 |   if (*FindGroupPtr(&(*u2)->u_group, *u1, 1))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  486 |     return 1;                   /* cyclic link detected! */[0m
      | [0;1;32m                                                           
[0m[1macls.c:487:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |   if (*(g = FindGroupPtr(&(*u1)->u_group, *u2, 0)))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  488 |     return 2;                   /* aha, we are already linked! */[0m
      | [0;1;32m                                                                 
[0m[1macls.c:490:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  490 |   if (!(*g = (struct aclusergroup *)malloc(sizeof(struct aclusergroup))))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  491 |     return -1;                  /* Could not alloc link. Poor screen */[0m
      | [0;1;32m                                                                       
[0m[1macls.c:503:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  503 | DoSu(up, name, pw1, pw2)[0m
      | [0;1;32m^
[0m[1macls.c:510:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  510 |   if (!(u = *FindUserPtr(name)))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  511 |     sorry++;[0m
  512 |   else[0m
      | [0;32m  } 
[0m[1macls.c:531:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  532 |         pass = pp->pw_passwd;[0m
      | [0;1;32m                             
[0m[1macls.c:540:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |                (c >= 'A' && c <= 'Z')))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  541 |             break;[0m
      | [0;1;32m                  
[0m[1macls.c:550:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  551 |             pass = ss->sp_pwdp;[0m
      | [0;1;32m                               
[0m[1macls.c:564:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  564 |         if (*pass)                              /* but need one */[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  565 |           sorry++;[0m
      | [0;1;32m                  
[0m[1macls.c:576:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  576 |         if (*u->u_password)                     /* but need one */[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  577 |           sorry++;[0m
      | [0;1;32m                  
[0m[1macls.c:595:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |   if (sorry)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  596 |     return "Sorry."; [0m
  597 |   else[0m
      | [0;32m  } 
[0m[1macls.c:597:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  597 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  598 |     *up = u;    /* substitute user now */[0m
      | [0;1;32m                                         
[0m[1macls.c:612:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  612 | NewWindowAcl(w, u)[0m
      | [0;1;32m^
[0m[1macls.c:623:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |       GrowBitfield(&w->w_lio_notify, 0, maxusercount, 0))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  624 |     return -1;[0m
      | [0;1;32m              
[0m[1macls.c:630:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  630 |           while (--j >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  631 |             free((char *)w->w_userbits[j]);[0m
      | [0;1;32m                                           
[0m[1macls.c:636:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |       for (i = 0; i < maxusercount; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  637 |         if (u ? (ACLBIT(i) & ACLBYTE(u->u_umask_w_bits[j], i)) : [0m
  638 |                 default_w_bit[j])[0m
  639 |           ACLBYTE(w->w_userbits[j], i) |= ACLBIT(i);[0m
      | [0;1;32m                                                    
[0m[1macls.c:638:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  638 |                 default_w_bit[j])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  639 |           ACLBYTE(w->w_userbits[j], i) |= ACLBIT(i);[0m
      | [0;1;32m                                                    
[0m[1macls.c:645:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  645 | FreeWindowAcl(w)[0m
      | [0;1;32m^
[0m[1macls.c:650:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |   for (i = 0; i < ACL_BITS_PER_WIN; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  651 |     free((char *)w->w_userbits[i]);[0m
      | [0;1;32m                                   
[0m[1macls.c:663:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  663 | AclSetPermCmd(u, mode, cmd)[0m
      | [0;1;32m^
[0m[1macls.c:676:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  676 |           neg = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  677 |           continue;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1macls.c:679:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  679 |           neg = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  680 |           continue;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1macls.c:685:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  685 |           if (neg)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  686 |             ACLBYTE(cmd->userbits[ACL_EXEC], u->u_id) &= ~ACLBIT(u->u_id);[0m
  687 |           else[0m
      | [0;32m          } 
[0m[1macls.c:687:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  687 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  688 |             ACLBYTE(cmd->userbits[ACL_EXEC], u->u_id) |= ACLBIT(u->u_id);[0m
      | [0;1;32m                                                                         
[0m[1macls.c:689:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  689 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1macls.c:694:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  694 |           return -1;[0m
      | [0;1;32m          ^        
[0m      | [0;32m          {        ;} 
[0m[1macls.c:708:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  708 | AclSetPermWin(uu, u, mode, win)[0m
      | [0;1;32m^
[0m[1macls.c:735:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  735 |           neg = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  736 |           continue;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1macls.c:738:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  738 |           neg = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  739 |           continue;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1macls.c:741:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  741 |           bits = (1 << ACL_READ);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  742 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1macls.c:744:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  744 |           bits = (1 << ACL_WRITE);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  745 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1macls.c:747:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  747 |           bits = (1 << ACL_EXEC);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  748 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1macls.c:750:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  750 |           bits = (1 << ACL_BITS_PER_WIN) - 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  751 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1macls.c:753:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  753 |           return -1;[0m
      | [0;1;32m          ^        
[0m      | [0;32m          {        ;} 
[0m[1macls.c:757:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  757 |           if (!(bits & (1 << bit)))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  758 |             continue;[0m
      | [0;1;32m                     
[0m[1macls.c:759:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |           if (neg)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  760 |             ACLBYTE(bitarray[bit], u->u_id) &= ~ACLBIT(u->u_id);[0m
  761 |           else[0m
      | [0;32m          } 
[0m[1macls.c:760:6: [0m[0;1;35mwarning: [0m[1mArray access (from variable 'bitarray') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
  760 |             ACLBYTE(bitarray[bit], u->u_id) &= ~ACLBIT(u->u_id);[0m
      | [0;1;32m            ^
[0m[1m./acls.h:41:29: [0m[0;1;36mnote: [0mexpanded from macro 'ACLBYTE'[0m
   41 | #define ACLBYTE(data, w)   ((data)[(w) >> 3])[0m
      | [0;1;32m                            ^
[0m[1macls.c:1030:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1030 |   for (p = str; *p; p++)[0m
      | [0;1;32m  ^
[0m[1macls.c:1031:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1macls.c:1031:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1macls.c:1031:28: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m                           ^~~~~~~~
[0m[1macls.c:1031:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m    ^
[0m[1macls.c:1032:7: [0m[0;1;36mnote: [0m Execution continues on line 1033[0m
 1032 |       break;[0m
      | [0;1;32m      ^
[0m[1macls.c:1033:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1033 |   if (!*p)[0m
      | [0;1;32m  ^
[0m[1macls.c:1043:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1043 |   if (!strcmp("??", str))[0m
      | [0;1;32m  ^
[0m[1macls.c:1051:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1051 |   av[0] = *str ? str : "*";[0m
      | [0;1;32m          ^~~~
[0m[1macls.c:1051:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1macls.c:1053:7: [0m[0;1;36mnote: [0mCalling 'UsersAcl'[0m
 1053 |   if (UsersAcl(u, 3, av))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1macls.c:968:7: [0m[0;1;36mnote: [0m'argc' is not equal to 1[0m
  968 |   if (argc == 1)[0m
      | [0;1;32m      ^~~~
[0m[1macls.c:968:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  968 |   if (argc == 1)[0m
      | [0;1;32m  ^
[0m[1macls.c:982:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  982 |   if (argv[0][0] == '*' && argv[0][1] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1macls.c:982:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1macls.c:982:28: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  982 |   if (argv[0][0] == '*' && argv[0][1] == '\0')[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~
[0m[1macls.c:982:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  982 |   if (argv[0][0] == '*' && argv[0][1] == '\0')[0m
      | [0;1;32m  ^
[0m[1macls.c:986:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  986 |       debug("all users acls.\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:987:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  987 |       for (u = &users; *u; u = &(*u)->u_next)[0m
      | [0;1;32m      ^
[0m[1macls.c:988:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  988 |         if (strcmp("nobody", (*u)->u_name) && [0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:988:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1macls.c:989:8: [0m[0;1;36mnote: [0m'cf_u' is null[0m
  989 |             ((cf_u) ?[0m
      | [0;1;32m              ^~~~
[0m[1macls.c:989:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
  989 |             ((cf_u) ?[0m
      | [0;1;32m             ^
[0m[1macls.c:991:13: [0m[0;1;36mnote: [0mCalling 'UserAcl'[0m
  991 |              ((r = UserAcl(uu, u, argc, argv)) < 0)))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:877:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m       ^
[0m[1macls.c:877:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:877:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m      ^
[0m[1macls.c:878:8: [0m[0;1;36mnote: [0m'argc' is > 1[0m
  878 |       (argc > 1 && !strcmp(argv[0], "nobody")))[0m
      | [0;1;32m       ^~~~
[0m[1macls.c:878:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1macls.c:878:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  878 |       (argc > 1 && !strcmp(argv[0], "nobody")))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:877:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m  ^
[0m[1macls.c:881:3: [0m[0;1;36mnote: [0mControl jumps to 'case 3:'  at line 887[0m
  881 |   switch (argc)[0m
      | [0;1;32m  ^
[0m[1macls.c:888:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  888 |       debug1("UserAcl: user '%s', no password:", argv[0]);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:889:14: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  889 |       return (UserAdd(argv[0],    NULL, u) < 0) || [0m
      | [0;1;32m             ^
[0m[1macls.c:890:8: [0m[0;1;36mnote: [0mCalling 'AclSetPerm'[0m
  890 |               AclSetPerm(uu, *u, argv[1], argv[2]);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:816:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  816 |   debug3("AclSetPerm(uu, user '%s', mode '%s', object '%s')\n",[0m
      | [0;1;32m  ^
[0m[1m./screen.h:72:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug3'[0m
   72 | # define debug3(x,a,b,c) debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:818:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  818 |   while (*s)[0m
      | [0;1;32m  ^
[0m[1macls.c:820:7: [0m[0;1;36mnote: [0mControl jumps to 'case 63:'  at line 832[0m
  820 |       switch (*s)[0m
      | [0;1;32m      ^
[0m[1macls.c:833:8: [0m[0;1;36mnote: [0mAssuming 'uu' is non-null[0m
  833 |           if (uu)                       /* command umask or .. */[0m
      | [0;1;32m              ^~
[0m[1macls.c:833:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  833 |           if (uu)                       /* command umask or .. */[0m
      | [0;1;32m          ^
[0m[1macls.c:834:6: [0m[0;1;36mnote: [0mCalling 'AclSetPermWin'[0m
  834 |             AclSetPermWin(uu, u, mode, (struct win *)0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:718:7: [0m[0;1;36mnote: [0mAssuming 'uu' is null[0m
  718 |   if (uu)[0m
      | [0;1;32m      ^~
[0m[1macls.c:718:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  718 |   if (uu)[0m
      | [0;1;32m  ^
[0m[1macls.c:725:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  725 |       ASSERT(win);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1macls.c:726:7: [0m[0;1;36mnote: [0mNull pointer value stored to 'bitarray'[0m
  726 |       bitarray = win->w_userbits;[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:727:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  727 |       debug3("AclSetPermWin %s %s %d\n", u->u_name, mode, win->w_number);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:72:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug3'[0m
   72 | # define debug3(x,a,b,c) debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:730:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  730 |   while (*m)[0m
      | [0;1;32m  ^
[0m[1macls.c:732:7: [0m[0;1;36mnote: [0mControl jumps to 'case 45:'  at line 734[0m
  732 |       switch (*m++)[0m
      | [0;1;32m      ^
[0m[1macls.c:736:4: [0m[0;1;36mnote: [0m Execution continues on line 730[0m
  736 |           continue;[0m
      | [0;1;32m          ^
[0m[1macls.c:730:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  730 |   while (*m)[0m
      | [0;1;32m  ^
[0m[1macls.c:732:7: [0m[0;1;36mnote: [0mControl jumps to 'case 97:'  at line 749[0m
  732 |       switch (*m++)[0m
      | [0;1;32m      ^
[0m[1macls.c:751:4: [0m[0;1;36mnote: [0m Execution continues on line 755[0m
  751 |           break;[0m
      | [0;1;32m          ^
[0m[1macls.c:755:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  755 |       for (bit = 0; bit < ACL_BITS_PER_WIN; bit++)[0m
      | [0;1;32m      ^
[0m[1macls.c:757:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  757 |           if (!(bits & (1 << bit)))[0m
      | [0;1;32m          ^
[0m[1macls.c:759:8: [0m[0;1;36mnote: [0m'neg' is 1[0m
  759 |           if (neg)[0m
      | [0;1;32m              ^~~
[0m[1macls.c:759:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  759 |           if (neg)[0m
      | [0;1;32m          ^
[0m[1macls.c:760:6: [0m[0;1;36mnote: [0mArray access (from variable 'bitarray') results in a null pointer dereference[0m
  760 |             ACLBYTE(bitarray[bit], u->u_id) &= ~ACLBIT(u->u_id);[0m
      | [0;1;32m            ^
[0m[1m./acls.h:41:29: [0m[0;1;36mnote: [0mexpanded from macro 'ACLBYTE'[0m
   41 | #define ACLBYTE(data, w)   ((data)[(w) >> 3])[0m
      | [0;1;32m                            ^~~~~
[0m[1macls.c:761:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  761 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  762 |             ACLBYTE(bitarray[bit], u->u_id) |= ACLBIT(u->u_id);[0m
      | [0;1;32m                                                               
[0m[1macls.c:762:6: [0m[0;1;35mwarning: [0m[1mArray access (from variable 'bitarray') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
  762 |             ACLBYTE(bitarray[bit], u->u_id) |= ACLBIT(u->u_id);[0m
      | [0;1;32m            ^
[0m[1m./acls.h:41:29: [0m[0;1;36mnote: [0mexpanded from macro 'ACLBYTE'[0m
   41 | #define ACLBYTE(data, w)   ((data)[(w) >> 3])[0m
      | [0;1;32m                            ^
[0m[1macls.c:1030:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1030 |   for (p = str; *p; p++)[0m
      | [0;1;32m  ^
[0m[1macls.c:1031:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1macls.c:1031:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1macls.c:1031:28: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m                           ^~~~~~~~
[0m[1macls.c:1031:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m    ^
[0m[1macls.c:1032:7: [0m[0;1;36mnote: [0m Execution continues on line 1033[0m
 1032 |       break;[0m
      | [0;1;32m      ^
[0m[1macls.c:1033:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1033 |   if (!*p)[0m
      | [0;1;32m  ^
[0m[1macls.c:1043:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1043 |   if (!strcmp("??", str))[0m
      | [0;1;32m  ^
[0m[1macls.c:1051:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1051 |   av[0] = *str ? str : "*";[0m
      | [0;1;32m          ^~~~
[0m[1macls.c:1051:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1macls.c:1053:7: [0m[0;1;36mnote: [0mCalling 'UsersAcl'[0m
 1053 |   if (UsersAcl(u, 3, av))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1macls.c:968:7: [0m[0;1;36mnote: [0m'argc' is not equal to 1[0m
  968 |   if (argc == 1)[0m
      | [0;1;32m      ^~~~
[0m[1macls.c:968:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  968 |   if (argc == 1)[0m
      | [0;1;32m  ^
[0m[1macls.c:982:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  982 |   if (argv[0][0] == '*' && argv[0][1] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1macls.c:982:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1macls.c:982:28: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  982 |   if (argv[0][0] == '*' && argv[0][1] == '\0')[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~
[0m[1macls.c:982:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  982 |   if (argv[0][0] == '*' && argv[0][1] == '\0')[0m
      | [0;1;32m  ^
[0m[1macls.c:986:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  986 |       debug("all users acls.\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:987:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  987 |       for (u = &users; *u; u = &(*u)->u_next)[0m
      | [0;1;32m      ^
[0m[1macls.c:988:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  988 |         if (strcmp("nobody", (*u)->u_name) && [0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:988:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1macls.c:989:8: [0m[0;1;36mnote: [0m'cf_u' is null[0m
  989 |             ((cf_u) ?[0m
      | [0;1;32m              ^~~~
[0m[1macls.c:989:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
  989 |             ((cf_u) ?[0m
      | [0;1;32m             ^
[0m[1macls.c:991:13: [0m[0;1;36mnote: [0mCalling 'UserAcl'[0m
  991 |              ((r = UserAcl(uu, u, argc, argv)) < 0)))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:877:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m       ^
[0m[1macls.c:877:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:877:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m      ^
[0m[1macls.c:878:8: [0m[0;1;36mnote: [0m'argc' is > 1[0m
  878 |       (argc > 1 && !strcmp(argv[0], "nobody")))[0m
      | [0;1;32m       ^~~~
[0m[1macls.c:878:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1macls.c:878:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  878 |       (argc > 1 && !strcmp(argv[0], "nobody")))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:877:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  877 |   if ((*u && !strcmp((*u)->u_name, "nobody")) ||[0m
      | [0;1;32m  ^
[0m[1macls.c:881:3: [0m[0;1;36mnote: [0mControl jumps to 'case 3:'  at line 887[0m
  881 |   switch (argc)[0m
      | [0;1;32m  ^
[0m[1macls.c:888:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  888 |       debug1("UserAcl: user '%s', no password:", argv[0]);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:889:14: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  889 |       return (UserAdd(argv[0],    NULL, u) < 0) || [0m
      | [0;1;32m             ^
[0m[1macls.c:890:8: [0m[0;1;36mnote: [0mCalling 'AclSetPerm'[0m
  890 |               AclSetPerm(uu, *u, argv[1], argv[2]);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:816:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  816 |   debug3("AclSetPerm(uu, user '%s', mode '%s', object '%s')\n",[0m
      | [0;1;32m  ^
[0m[1m./screen.h:72:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug3'[0m
   72 | # define debug3(x,a,b,c) debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:818:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  818 |   while (*s)[0m
      | [0;1;32m  ^
[0m[1macls.c:820:7: [0m[0;1;36mnote: [0mControl jumps to 'case 63:'  at line 832[0m
  820 |       switch (*s)[0m
      | [0;1;32m      ^
[0m[1macls.c:833:8: [0m[0;1;36mnote: [0mAssuming 'uu' is non-null[0m
  833 |           if (uu)                       /* command umask or .. */[0m
      | [0;1;32m              ^~
[0m[1macls.c:833:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  833 |           if (uu)                       /* command umask or .. */[0m
      | [0;1;32m          ^
[0m[1macls.c:834:6: [0m[0;1;36mnote: [0mCalling 'AclSetPermWin'[0m
  834 |             AclSetPermWin(uu, u, mode, (struct win *)0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:718:7: [0m[0;1;36mnote: [0mAssuming 'uu' is null[0m
  718 |   if (uu)[0m
      | [0;1;32m      ^~
[0m[1macls.c:718:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  718 |   if (uu)[0m
      | [0;1;32m  ^
[0m[1macls.c:725:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  725 |       ASSERT(win);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1macls.c:726:7: [0m[0;1;36mnote: [0mNull pointer value stored to 'bitarray'[0m
  726 |       bitarray = win->w_userbits;[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:727:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  727 |       debug3("AclSetPermWin %s %s %d\n", u->u_name, mode, win->w_number);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:72:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug3'[0m
   72 | # define debug3(x,a,b,c) debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:730:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  730 |   while (*m)[0m
      | [0;1;32m  ^
[0m[1macls.c:732:7: [0m[0;1;36mnote: [0mControl jumps to 'case 97:'  at line 749[0m
  732 |       switch (*m++)[0m
      | [0;1;32m      ^
[0m[1macls.c:751:4: [0m[0;1;36mnote: [0m Execution continues on line 755[0m
  751 |           break;[0m
      | [0;1;32m          ^
[0m[1macls.c:755:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  755 |       for (bit = 0; bit < ACL_BITS_PER_WIN; bit++)[0m
      | [0;1;32m      ^
[0m[1macls.c:757:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  757 |           if (!(bits & (1 << bit)))[0m
      | [0;1;32m          ^
[0m[1macls.c:759:8: [0m[0;1;36mnote: [0m'neg' is 0[0m
  759 |           if (neg)[0m
      | [0;1;32m              ^~~
[0m[1macls.c:759:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  759 |           if (neg)[0m
      | [0;1;32m          ^
[0m[1macls.c:762:6: [0m[0;1;36mnote: [0mArray access (from variable 'bitarray') results in a null pointer dereference[0m
  762 |             ACLBYTE(bitarray[bit], u->u_id) |= ACLBIT(u->u_id);[0m
      | [0;1;32m            ^
[0m[1m./acls.h:41:29: [0m[0;1;36mnote: [0mexpanded from macro 'ACLBYTE'[0m
   41 | #define ACLBYTE(data, w)   ((data)[(w) >> 3])[0m
      | [0;1;32m                            ^~~~~
[0m[1macls.c:767:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  767 |               if (win->w_wlock == WLOCK_ON)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  768 |                 win->w_wlock = WLOCK_AUTO;[0m
      | [0;1;32m                                          
[0m[1macls.c:781:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |           for (bit = 0; bit < ACL_BITS_PER_WIN; bit++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  782 |             default_w_bit[bit] = [0m
  783 |               (ACLBYTE(bitarray[bit], u->u_id) & ACLBIT(u->u_id)) ? 1 : 0;[0m
      | [0;1;32m                                                                          
[0m[1macls.c:793:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |           for (bit = 0; bit < ACL_BITS_PER_CMD; bit++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  794 |             default_c_bit[bit] = [0m
  795 |               (ACLBYTE(bitarray[bit], u->u_id) & ACLBIT(u->u_id)) ? 1 : 0;[0m
      | [0;1;32m                                                                          
[0m[1macls.c:808:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  808 | AclSetPerm(uu, u, mode, s)[0m
      | [0;1;32m^
[0m[1macls.c:823:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  823 |           return AclSetPerm(uu, u, mode, "#?");[0m
      | [0;1;32m          ^                                   
[0m      | [0;32m          {                                   ;} 
[0m[1macls.c:825:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  825 |           if (uu)                       /* window umask or .. */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  826 |             AclSetPermWin(uu, u, mode, (struct win *)1);[0m
  827 |           else                          /* .. or all windows */[0m
  828 |             for (w = windows; w; w = w->w_next)[0m
  829 |               AclSetPermWin((struct acluser *)0, u, mode, w);[0m
  830 |           s++;[0m
  831 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1macls.c:825:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  825 |           if (uu)                       /* window umask or .. */[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  826 |             AclSetPermWin(uu, u, mode, (struct win *)1);[0m
  827 |           else                          /* .. or all windows */[0m
      | [0;32m          } 
[0m[1macls.c:827:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  827 |           else                          /* .. or all windows */[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  828 |             for (w = windows; w; w = w->w_next)[0m
  829 |               AclSetPermWin((struct acluser *)0, u, mode, w);[0m
      | [0;1;32m                                                             
[0m[1macls.c:828:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  828 |             for (w = windows; w; w = w->w_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  829 |               AclSetPermWin((struct acluser *)0, u, mode, w);[0m
      | [0;1;32m                                                             
[0m[1macls.c:833:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  833 |           if (uu)                       /* command umask or .. */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  834 |             AclSetPermWin(uu, u, mode, (struct win *)0);[0m
  835 |           else                          /* .. or all commands */[0m
  836 |             for (i = 0; i <= RC_LAST; i++)[0m
  837 |               AclSetPermCmd(u, mode, &comms[i]);[0m
  838 |           s++;[0m
  839 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1macls.c:833:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |           if (uu)                       /* command umask or .. */[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  834 |             AclSetPermWin(uu, u, mode, (struct win *)0);[0m
  835 |           else                          /* .. or all commands */[0m
      | [0;32m          } 
[0m[1macls.c:835:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  835 |           else                          /* .. or all commands */[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  836 |             for (i = 0; i <= RC_LAST; i++)[0m
  837 |               AclSetPermCmd(u, mode, &comms[i]);[0m
      | [0;1;32m                                                
[0m[1macls.c:836:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  836 |             for (i = 0; i <= RC_LAST; i++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  837 |               AclSetPermCmd(u, mode, &comms[i]);[0m
      | [0;1;32m                                                
[0m[1macls.c:841:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  841 |           for (p = s; *p && *p != ' ' && *p != '\t' && *p != ','; p++)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  842 |             ;[0m
  843 |           if ((ch = *p))[0m
  844 |             *p++ = '\0';[0m
  845 |           if ((i = FindCommnr(s)) != RC_ILLEGAL)[0m
  846 |             AclSetPermCmd(u, mode, &comms[i]);[0m
  847 |           else if (((i = WindowByNoN(s)) >= 0) && wtab[i])[0m
  848 |             AclSetPermWin((struct acluser *)0, u, mode, wtab[i]);[0m
  849 |           else[0m
  850 |             /* checking group name */[0m
  851 |             return -1;[0m
  852 |           if (ch)[0m
  853 |             p[-1] = ch;[0m
  854 |           s = p; [0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1macls.c:841:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  841 |           for (p = s; *p && *p != ' ' && *p != '\t' && *p != ','; p++)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  842 |             ;[0m
      | [0;1;32m             
[0m[1macls.c:843:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  843 |           if ((ch = *p))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  844 |             *p++ = '\0';[0m
      | [0;1;32m                        
[0m[1macls.c:845:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  845 |           if ((i = FindCommnr(s)) != RC_ILLEGAL)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  846 |             AclSetPermCmd(u, mode, &comms[i]);[0m
  847 |           else if (((i = WindowByNoN(s)) >= 0) && wtab[i])[0m
      | [0;32m          } 
[0m[1macls.c:847:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  847 |           else if (((i = WindowByNoN(s)) >= 0) && wtab[i])[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  848 |             AclSetPermWin((struct acluser *)0, u, mode, wtab[i]);[0m
  849 |           else[0m
      | [0;32m          } 
[0m[1macls.c:849:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  849 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  850 |             /* checking group name */[0m
  851 |             return -1;[0m
      | [0;1;32m                      
[0m[1macls.c:852:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |           if (ch)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  853 |             p[-1] = ch;[0m
      | [0;1;32m                       
[0m[1macls.c:872:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  872 | UserAcl(uu, u, argc, argv)[0m
      | [0;1;32m^
[0m[1macls.c:878:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  878 |       (argc > 1 && !strcmp(argv[0], "nobody")))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  879 |     return -1;                  /* do not change nobody! */[0m
      | [0;1;32m                                                           
[0m[1macls.c:884:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  884 |       debug2("UserAcl: user '%s', password '%s':", argv[0], argv[1]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  885 |       return (UserAdd(argv[0], argv[1], u) < 0) || [0m
  886 |               AclSetPerm(uu, *u, argv[2], argv[3]);[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:888:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  888 |       debug1("UserAcl: user '%s', no password:", argv[0]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  889 |       return (UserAdd(argv[0],    NULL, u) < 0) || [0m
  890 |               AclSetPerm(uu, *u, argv[1], argv[2]);[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:892:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  892 |       debug2("UserAcl: user '%s', password '%s'\n", argv[0], argv[1]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  893 |       return UserAdd(argv[0], argv[1], u) < 0;[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:895:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  895 |       debug1("UserAcl: user '%s', no password:", argv[0]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  896 |       return (UserAdd(argv[0],    NULL, u) < 0) || [0m
  897 |               AclSetPerm(uu, *u, "+a", "#?");[0m
      | [0;1;32m                                            
[0m      | [0;32m                                            ;} 
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1macls.c:899:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  899 |       return -1;[0m
      | [0;1;32m      ^        
[0m      | [0;32m      {        ;} 
[0m[1macls.c:904:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  904 | UserAclCopy(to_up, from_up)[0m
      | [0;1;32m^
[0m[1macls.c:910:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  910 |   if (!*to_up || !*from_up)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  911 |     return -1;[0m
      | [0;1;32m              
[0m[1macls.c:914:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  914 |   if ((to_id = (*to_up)->u_id) == (from_id = (*from_up)->u_id))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  915 |     return -1;[0m
      | [0;1;32m              
[0m[1macls.c:920:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  920 |           if (ACLBYTE(w->w_userbits[i], from_id) & ACLBIT(from_id))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  921 |             ACLBYTE(w->w_userbits[i], to_id) |= ACLBIT(to_id);[0m
  922 |           else[0m
      | [0;32m          } 
[0m[1macls.c:930:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  930 |                   if (w->w_wlock == WLOCK_ON)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  931 |                     w->w_wlock = WLOCK_AUTO;[0m
      | [0;1;32m                                            
[0m[1macls.c:940:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |           if (ACLBYTE(comms[j].userbits[i], from_id) & ACLBIT(from_id))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  941 |             ACLBYTE(comms[j].userbits[i], to_id) |= ACLBIT(to_id);[0m
  942 |           else[0m
      | [0;32m          } 
[0m[1macls.c:942:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  942 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  943 |             ACLBYTE(comms[j].userbits[i], to_id) &= ~ACLBIT(to_id);[0m
      | [0;1;32m                                                                   
[0m[1macls.c:959:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  959 | UsersAcl(uu, argc, argv)[0m
      | [0;1;32m^
[0m[1macls.c:973:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  973 |       while (*s)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  974 |         if (*s++ == '=') p = s;[0m
      | [0;1;32m                               
[0m[1macls.c:974:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  974 |         if (*s++ == '=') p = s;[0m
      | [0;1;32m                        ^      
[0m      | [0;32m                         {
[0m[1macls.c:987:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  987 |       for (u = &users; *u; u = &(*u)->u_next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  988 |         if (strcmp("nobody", (*u)->u_name) && [0m
  989 |             ((cf_u) ?[0m
  990 |              ((r = UserAclCopy(u, cf_u)) < 0) :[0m
  991 |              ((r = UserAcl(uu, u, argc, argv)) < 0)))[0m
  992 |           return -1;[0m
      | [0;1;32m                    
[0m[1macls.c:990:9: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'r' is used in the enclosing expression, the value is never actually read from 'r' [clang-analyzer-deadcode.DeadStores][0m
  990 |              ((r = UserAclCopy(u, cf_u)) < 0) :[0m
      | [0;1;32m               ^   ~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:990:9: [0m[0;1;36mnote: [0mAlthough the value stored to 'r' is used in the enclosing expression, the value is never actually read from 'r'[0m
  990 |              ((r = UserAclCopy(u, cf_u)) < 0) :[0m
      | [0;1;32m               ^   ~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:991:9: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'r' is used in the enclosing expression, the value is never actually read from 'r' [clang-analyzer-deadcode.DeadStores][0m
  991 |              ((r = UserAcl(uu, u, argc, argv)) < 0)))[0m
      | [0;1;32m               ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:991:9: [0m[0;1;36mnote: [0mAlthough the value stored to 'r' is used in the enclosing expression, the value is never actually read from 'r'[0m
  991 |              ((r = UserAcl(uu, u, argc, argv)) < 0)))[0m
      | [0;1;32m               ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:991:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  991 |              ((r = UserAcl(uu, u, argc, argv)) < 0)))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  992 |           return -1;[0m
      | [0;1;32m                    
[0m[1macls.c:998:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  998 |       for (s = argv[0]; *s && *s!=' ' && *s!='\t' && *s!=',' && *s!='='; s++)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  999 |         ;[0m
      | [0;1;32m         
[0m[1macls.c:1003:6: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'r' is used in the enclosing expression, the value is never actually read from 'r' [clang-analyzer-deadcode.DeadStores][0m
 1003 |           ((r = UserAclCopy(FindUserPtr(argv[0]), cf_u)) < 0) :[0m
      | [0;1;32m            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:1003:6: [0m[0;1;36mnote: [0mAlthough the value stored to 'r' is used in the enclosing expression, the value is never actually read from 'r'[0m
 1003 |           ((r = UserAclCopy(FindUserPtr(argv[0]), cf_u)) < 0) :[0m
      | [0;1;32m            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:1004:6: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'r' is used in the enclosing expression, the value is never actually read from 'r' [clang-analyzer-deadcode.DeadStores][0m
 1004 |           ((r = UserAcl(uu, FindUserPtr(argv[0]), argc, argv)) < 0))[0m
      | [0;1;32m            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:1004:6: [0m[0;1;36mnote: [0mAlthough the value stored to 'r' is used in the enclosing expression, the value is never actually read from 'r'[0m
 1004 |           ((r = UserAcl(uu, FindUserPtr(argv[0]), argc, argv)) < 0))[0m
      | [0;1;32m            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1macls.c:1004:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1004 |           ((r = UserAcl(uu, FindUserPtr(argv[0]), argc, argv)) < 0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1005 |         return -1;[0m
      | [0;1;32m                  
[0m[1macls.c:1020:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1020 | AclUmask(u, str, errp)[0m
      | [0;1;32m^
[0m[1macls.c:1030:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1030 |   for (p = str; *p; p++)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1031 |     if ((c = *p) == '+' || c == '-')[0m
 1032 |       break;[0m
      | [0;1;32m            
[0m[1macls.c:1031:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1031 |     if ((c = *p) == '+' || c == '-')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1032 |       break;[0m
      | [0;1;32m            
[0m[1macls.c:1038:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1038 |   strncpy(mode, p, 15);[0m
      | [0;1;32m  ^~~~~~~
[0m[1macls.c:1038:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1038 |   strncpy(mode, p, 15);[0m
      | [0;1;32m  ^~~~~~~
[0m[1macls.c:1048:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1048 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1049 |     av[2] = "#";[0m
      | [0;1;32m                
[0m[1macls.c:1064:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1064 | AclWinSwap(a, b)[0m
      | [0;1;32m^
[0m[1macls.c:1073:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1073 | AclCheckPermWin(u, mode, w)[0m
      | [0;1;32m^
[0m[1macls.c:1080:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1080 |   if (mode < 0 || mode >= ACL_BITS_PER_WIN)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1081 |     return -1;[0m
      | [0;1;32m              
[0m[1macls.c:1098:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1098 |           if (!AclCheckPermWin((*g)->u, mode, w))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1099 |             break;[0m
      | [0;1;32m                  
[0m[1macls.c:1103:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1103 |       if (*g)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1104 |         ok = 1;[0m
      | [0;1;32m               
[0m[1macls.c:1111:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1111 | AclCheckPermCmd(u, mode, c)[0m
      | [0;1;32m^
[0m[1macls.c:1118:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1118 |   if (mode < 0 || mode >= ACL_BITS_PER_CMD)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1119 |     return -1;[0m
      | [0;1;32m              
[0m[1macls.c:1135:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1135 |           if (!AclCheckPermCmd((*g)->u, mode, c))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1136 |             break;   [0m
[1macls.c:1140:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1140 |       if (*g)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1141 |         ok = 1;  [0m
141 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[27/38][192.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmp3iniqdu7.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/socket.c
[1msocket.c:92:14: [0m[0;1;35mwarning: [0m[1ma function declaration without a prototype is deprecated in all versions of C and is treated as a zero-parameter prototype in C23, conflicting with a previous declaration [clang-diagnostic-deprecated-non-prototype][0m
   92 | extern char *getenv();[0m
      | [0;1;32m             ^
[0m[1m/usr/include/stdlib.h:641:14: [0m[0;1;36mnote: [0mconflicting prototype is here[0m
  641 | extern char *getenv (const char *__name) __THROW __nonnull ((1)) __wur;[0m
      | [0;1;32m             ^
[0m[1msocket.c:127:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  127 | FindSocket(fdp, nfoundp, notherp, match, is_sock)[0m
      | [0;1;32m^
[0m[1msocket.c:155:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |       if (matchlen > NAME_MAX)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  156 |         matchlen = NAME_MAX;[0m
      | [0;1;32m                            
[0m[1msocket.c:172:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |   if ((dirp = opendir(SockPath)) == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  173 |     Panic(errno, "Cannot opendir %s", SockPath);[0m
      | [0;1;32m                                                
[0m[1msocket.c:182:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |       if (*name == 0 || *name == '.' || strlen(name) > 2*MAXSTR)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  183 |         continue;[0m
      | [0;1;32m                 
[0m[1msocket.c:190:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |               while (*n >= '0' && *n <= '9')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  191 |                 n++;[0m
      | [0;1;32m                    
[0m[1msocket.c:192:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |               if (*n == '.')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  193 |                 n++;[0m
      | [0;1;32m                    
[0m[1msocket.c:196:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |           if (strncmp(match, "tty", 3) && strncmp(n, "tty", 3) == 0)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  197 |             n += 3;[0m
      | [0;1;32m                   
[0m[1msocket.c:202:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |                   while (*n >= '0' && *n <= '9')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  203 |                     n++;[0m
      | [0;1;32m                        
[0m[1msocket.c:204:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |                   if (*n == '.')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  205 |                     n++;[0m
      | [0;1;32m                        
[0m[1msocket.c:206:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |                   if (strncmp(match, n, matchlen))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  207 |                     continue;[0m
      | [0;1;32m                             
[0m[1msocket.c:209:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  210 |                 continue;[0m
      | [0;1;32m                         
[0m[1msocket.c:212:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  213 |             cmatch = (*(n + matchlen) == 0);[0m
      | [0;1;32m                                            
[0m[1msocket.c:213:16: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the field 'd_name' [clang-analyzer-security.ArrayBound][0m
  213 |             cmatch = (*(n + matchlen) == 0);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1msocket.c:151:7: [0m[0;1;36mnote: [0mAssuming 'match' is non-null[0m
  151 |   if (match)[0m
      | [0;1;32m      ^~~~~
[0m[1msocket.c:151:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  151 |   if (match)[0m
      | [0;1;32m  ^
[0m[1msocket.c:155:11: [0m[0;1;36mnote: [0mAssuming 'matchlen' is > NAME_MAX[0m
  155 |       if (matchlen > NAME_MAX)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1msocket.c:155:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  155 |       if (matchlen > NAME_MAX)[0m
      | [0;1;32m      ^
[0m[1msocket.c:172:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  172 |   if ((dirp = opendir(SockPath)) == 0)[0m
      | [0;1;32m  ^
[0m[1msocket.c:177:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  177 |   while ((dp = readdir(dirp)))[0m
      | [0;1;32m  ^
[0m[1msocket.c:181:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  181 |       debug1("- %s\n",  name);[0m
      | [0;1;32m      ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1msocket.c:182:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  182 |       if (*name == 0 || *name == '.' || strlen(name) > 2*MAXSTR)[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1msocket.c:182:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msocket.c:182:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  182 |       if (*name == 0 || *name == '.' || strlen(name) > 2*MAXSTR)[0m
      | [0;1;32m                        ^~~~~~~~~~~~
[0m[1msocket.c:182:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  182 |       if (*name == 0 || *name == '.' || strlen(name) > 2*MAXSTR)[0m
      | [0;1;32m          ^
[0m[1msocket.c:182:41: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  182 |       if (*name == 0 || *name == '.' || strlen(name) > 2*MAXSTR)[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1msocket.c:182:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |       if (*name == 0 || *name == '.' || strlen(name) > 2*MAXSTR)[0m
      | [0;1;32m      ^
[0m[1msocket.c:184:11: [0m[0;1;36mnote: [0m'matchlen' is 255[0m
  184 |       if (matchlen)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1msocket.c:184:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  184 |       if (matchlen)[0m
      | [0;1;32m      ^
[0m[1msocket.c:188:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  188 |           if ((*match <= '0' || *match > '9') && (*n > '0' && *n <= '9'))[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1msocket.c:188:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msocket.c:188:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  188 |           if ((*match <= '0' || *match > '9') && (*n > '0' && *n <= '9'))[0m
      | [0;1;32m                                ^~~~~~~~~~~~
[0m[1msocket.c:188:40: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  188 |           if ((*match <= '0' || *match > '9') && (*n > '0' && *n <= '9'))[0m
      | [0;1;32m                                              ^
[0m[1msocket.c:196:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  196 |           if (strncmp(match, "tty", 3) && strncmp(n, "tty", 3) == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msocket.c:196:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msocket.c:196:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  196 |           if (strncmp(match, "tty", 3) && strncmp(n, "tty", 3) == 0)[0m
      | [0;1;32m          ^
[0m[1msocket.c:198:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  198 |           if (strncmp(match, n, matchlen))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msocket.c:198:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |           if (strncmp(match, n, matchlen))[0m
      | [0;1;32m          ^
[0m[1msocket.c:213:16: [0m[0;1;36mnote: [0mAccess of the field 'd_name' at index 258, while it holds only 256 'char' elements[0m
  213 |             cmatch = (*(n + matchlen) == 0);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1msocket.c:216:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  216 |       sprintf(SockPath + sdirlen, "/%s", name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msocket.c:216:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  216 |       sprintf(SockPath + sdirlen, "/%s", name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msocket.c:229:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |       if (!(*is_sock) && !S_ISFIFO(st.st_mode))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  230 |         continue;[0m
      | [0;1;32m                 
[0m[1msocket.c:235:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |       if ((int)st.st_uid != real_uid)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  236 |         continue;[0m
      | [0;1;32m                 
[0m[1msocket.c:256:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  256 |       if ((sent = (struct sent *)malloc(sizeof(struct sent))) == 0)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  257 |         continue;[0m
      | [0;1;32m                 
[0m[1msocket.c:327:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |       if (cmatch)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  328 |         nperfect++;[0m
      | [0;1;32m                   
[0m[1msocket.c:331:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |           if (firsts != -1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  332 |             close(firsts);[0m
      | [0;1;32m                          
[0m[1msocket.c:344:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |   if (!lsflag && nperfect == 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  345 |     ngood = nperfect;[0m
      | [0;1;32m                     
[0m[1msocket.c:351:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  351 |           Msg(0, nfound > 1 ? "There are screens on:" : "There is a screen on:");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  352 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msocket.c:354:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  354 |           Msg(0, nfound > 1 ? "There are several screens on:" : "There is a suitable screen on:");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  355 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msocket.c:357:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  357 |           Msg(0, "There are several suitable screens on:");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  358 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msocket.c:365:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  365 |               printf("\t%s\t(Attached)\n", sent->name);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  366 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msocket.c:368:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  368 |               printf("\t%s\t(Detached)\n", sent->name);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  369 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msocket.c:372:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  372 |               printf("\t%s\t(Multi, attached)\n", sent->name);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  373 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msocket.c:375:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  375 |               printf("\t%s\t(Multi, detached)\n", sent->name);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  376 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msocket.c:380:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  380 |               printf("\t%s\t(Dead ?%c?)\n", sent->name, '?');[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  381 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msocket.c:383:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  383 |               printf("\t%s\t(Removed)\n", sent->name);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  384 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msocket.c:386:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  386 |               printf("\t%s\t(Remote or dead)\n", sent->name);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  387 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msocket.c:389:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |               printf("\t%s\t(Private)\n", sent->name);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  390 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msocket.c:397:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |       if (wipeflag)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  398 |         Msg(0, "%d socket%s wiped out.", nwipe, nwipe > 1 ? "s" : "");[0m
  399 |       else[0m
      | [0;32m      } 
[0m[1msocket.c:399:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  400 |         Msg(0, m, ndead > 1 ? "s" : "", ndead > 1 ? "" : "es"); /* other args for nethack */[0m
      | [0;1;32m                                                                                            
[0m[1msocket.c:404:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  404 |       sprintf(SockPath + sdirlen, "/%s", firstn);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msocket.c:404:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  404 |       sprintf(SockPath + sdirlen, "/%s", firstn);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msocket.c:407:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  408 |     SockPath[sdirlen] = 0;[0m
      | [0;1;32m                          
[0m[1msocket.c:419:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |   if (notherp)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  420 |     *notherp = npriv;[0m
      | [0;1;32m                     
[0m[1msocket.c:421:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |   if (nfoundp)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  422 |     *nfoundp = nfound - nwipe;[0m
      | [0;1;32m                              
[0m[1msocket.c:449:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |       if (stat(SockPath, &st) < 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  450 |         Panic(errno, "stat");[0m
      | [0;1;32m                             
[0m[1msocket.c:454:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |       if ((int)st.st_uid != real_uid)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  455 |         Panic(0, "Unfortunately you are not its owner.");[0m
      | [0;1;32m                                                         
[0m[1msocket.c:457:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |       if ((st.st_mode & 0700) == 0600)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  458 |         Panic(0, "To resume it, use \"screen -r\"");[0m
  459 |       else[0m
      | [0;32m      } 
[0m[1msocket.c:459:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  460 |         Panic(0, "It is not detached.");[0m
      | [0;1;32m                                        
[0m[1msocket.c:465:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |   if (mkfifo(SockPath, SOCKMODE) < 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  466 |     Panic(0, "mkfifo %s failed", SockPath);[0m
      | [0;1;32m                                           
[0m[1msocket.c:472:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |   if (s < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  473 |     Panic(errno, "open fifo %s", SockPath);[0m
      | [0;1;32m                                           
[0m[1msocket.c:501:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  501 | MakeClientFifo(err)[0m
      | [0;1;32m^
[0m[1msocket.c:513:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |   if (err)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  514 |     Msg(errno, "%s", SockPath);[0m
      | [0;1;32m                               
[0m[1msocket.c:529:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |   if (s < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  530 |     Panic(errno, "socket");[0m
      | [0;1;32m                           
[0m[1msocket.c:533:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  533 |   strncpy(a.sun_path, SockPath, sizeof(a.sun_path));[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:533:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  533 |   strncpy(a.sun_path, SockPath, sizeof(a.sun_path));[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:554:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |       if (stat(SockPath, &st) < 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  555 |         Panic(errno, "stat");[0m
      | [0;1;32m                             
[0m[1msocket.c:559:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |       if (st.st_uid != real_uid)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  560 |         Panic(0, "Unfortunately you are not its owner.");[0m
      | [0;1;32m                                                         
[0m[1msocket.c:562:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  562 |       if ((st.st_mode & 0700) == 0600)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  563 |         Panic(0, "To resume it, use \"screen -r\"");[0m
  564 |       else[0m
      | [0;32m      } 
[0m[1msocket.c:564:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  564 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  565 |         Panic(0, "It is not detached.");[0m
      | [0;1;32m                                        
[0m[1msocket.c:576:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  576 |   if (bind(s, (struct sockaddr *) & a, strlen(SockPath) + 2) == -1)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  577 |     Panic(errno, "bind (%s)", SockPath);[0m
      | [0;1;32m                                        
[0m[1msocket.c:591:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |   if (listen(s, 5) == -1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  592 |     Panic(errno, "listen");[0m
      | [0;1;32m                           
[0m[1msocket.c:605:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  605 | MakeClientUnixSocket(err)[0m
      | [0;1;32m^
[0m[1msocket.c:612:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |   if (s < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  613 |     Panic(errno, "socket");[0m
      | [0;1;32m                           
[0m[1msocket.c:616:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  616 |   strncpy(a.sun_path, SockPath, sizeof(a.sun_path));[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:616:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  616 |   strncpy(a.sun_path, SockPath, sizeof(a.sun_path));[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:633:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  633 |       if (err)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  634 |         Msg(errno, "%s: connect", SockPath);[0m
      | [0;1;32m                                            
[0m[1msocket.c:647:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  647 | MakeServerSocket(socket)[0m
      | [0;1;32m^
[0m[1msocket.c:648:6: [0m[0;1;35mwarning: [0m[1mpromoted type 'int' of K&R function parameter is not compatible with the parameter type 'bool' declared in a previous prototype [clang-diagnostic-knr-promoted-parameter][0m
  648 | bool socket;[0m
      | [0;1;32m     ^
[0m[1m./extern.h:345:40: [0m[0;1;36mnote: [0mprevious declaration is here[0m
  345 | extern int   MakeServerSocket __P((bool));[0m
      | [0;1;32m                                       ^
[0m[1msocket.c:650:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |   if (socket)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  651 |     return MakeServerUnixSocket();[0m
      | [0;1;32m                                  
[0m[1msocket.c:657:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  657 | MakeClientSocket(err, socket)[0m
      | [0;1;32m^
[0m[1msocket.c:659:6: [0m[0;1;35mwarning: [0m[1mpromoted type 'int' of K&R function parameter is not compatible with the parameter type 'bool' declared in a previous prototype [clang-diagnostic-knr-promoted-parameter][0m
  659 | bool socket;[0m
      | [0;1;32m     ^
[0m[1m./extern.h:344:45: [0m[0;1;36mnote: [0mprevious declaration is here[0m
  344 | extern int   MakeClientSocket __P((int, bool));[0m
      | [0;1;32m                                            ^
[0m[1msocket.c:661:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  661 |   if (socket)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  662 |     return MakeClientUnixSocket(err);[0m
      | [0;1;32m                                     
[0m[1msocket.c:674:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  674 | SendCreateMsg(sty, nwin)[0m
      | [0;1;32m^
[0m[1msocket.c:686:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  686 |   if (strlen(sty) > NAME_MAX)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  687 |     sty[NAME_MAX] = 0;[0m
      | [0;1;32m                      
[0m[1msocket.c:689:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |   if (strlen(sty) > 2 * MAXSTR - 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  690 |     sty[2 * MAXSTR - 1] = 0;[0m
      | [0;1;32m                            
[0m[1msocket.c:691:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  691 |   sprintf(SockPath + strlen(SockPath), "/%s", sty);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:691:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  691 |   sprintf(SockPath + strlen(SockPath), "/%s", sty);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:693:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |   if ((s = MakeClientSocket(1, is_socket)) == -1)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  694 |     exit(1);[0m
      | [0;1;32m            
[0m[1msocket.c:696:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  696 |   bzero((char *)&m, sizeof(m));[0m
      | [0;1;32m  ^~~~~
[0m[1msocket.c:696:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  696 |   bzero((char *)&m, sizeof(m));[0m
      | [0;1;32m  ^~~~~
[0m[1msocket.c:698:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  698 |   strncpy(m.m_tty, attach_tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:698:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  698 |   strncpy(m.m_tty, attach_tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:702:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |   if (nwin->args != nwin_undef.args)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  703 |     for (av = nwin->args; *av && n < MAXARGS - 1; ++av, ++n)[0m
  704 |       {[0m
  705 |         len = strlen(*av) + 1;[0m
  706 |         if (p + len >= m.m.create.line + sizeof(m.m.create.line) - 1)[0m
  707 |           break;[0m
  708 |         strcpy(p, *av);[0m
  709 |         p += len;[0m
  710 |       }[0m
      | [0;1;32m       
[0m[1msocket.c:706:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  706 |         if (p + len >= m.m.create.line + sizeof(m.m.create.line) - 1)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  707 |           break;[0m
      | [0;1;32m                
[0m[1msocket.c:708:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  708 |         strcpy(p, *av);[0m
      | [0;1;32m        ^~~~~~
[0m[1msocket.c:708:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  708 |         strcpy(p, *av);[0m
      | [0;1;32m        ^~~~~~
[0m[1msocket.c:711:108: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |   if (nwin->aka != nwin_undef.aka && p + strlen(nwin->aka) + 1 < m.m.create.line + sizeof(m.m.create.line))[0m
      | [0;1;32m                                                                                                           ^
[0m      | [0;32m                                                                                                            {
[0m  712 |     strcpy(p, nwin->aka);[0m
  713 |   else[0m
      | [0;32m  } 
[0m[1msocket.c:712:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  712 |     strcpy(p, nwin->aka);[0m
      | [0;1;32m    ^~~~~~
[0m[1msocket.c:712:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  712 |     strcpy(p, nwin->aka);[0m
      | [0;1;32m    ^~~~~~
[0m[1msocket.c:713:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  714 |     *p = '\0';[0m
      | [0;1;32m              
[0m[1msocket.c:725:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |   if (nwin->term != nwin_undef.term)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  726 |     strncpy(m.m.create.screenterm, nwin->term, MAXTERMLEN);[0m
      | [0;1;32m                                                           
[0m[1msocket.c:726:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  726 |     strncpy(m.m.create.screenterm, nwin->term, MAXTERMLEN);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msocket.c:726:5: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  726 |     strncpy(m.m.create.screenterm, nwin->term, MAXTERMLEN);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msocket.c:730:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  730 |   if (write(s, (char *) &m, sizeof m) != sizeof m)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  731 |     Msg(errno, "write");[0m
      | [0;1;32m                        
[0m[1msocket.c:738:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  738 | SendErrorMsg(tty, buf)[0m
      | [0;1;32m^
[0m[1msocket.c:746:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  746 |   strncpy(m.m.message, buf, sizeof(m.m.message) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:746:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  746 |   strncpy(m.m.message, buf, sizeof(m.m.message) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:750:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |   if (s < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  751 |     return -1;[0m
      | [0;1;32m              
[0m[1msocket.c:753:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  753 |   strncpy(m.m_tty, tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:753:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  753 |   strncpy(m.m_tty, tty, sizeof(m.m_tty) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msocket.c:763:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  763 | ExecCreate(mp)[0m
      | [0;1;32m^
[0m[1msocket.c:774:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   if (n > MAXARGS - 1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  775 |     n = MAXARGS - 1;[0m
      | [0;1;32m                    
[0m[1msocket.c:784:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |           if (*buf)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  785 |             nwin.aka = buf;[0m
      | [0;1;32m                           
[0m[1msocket.c:787:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  787 |           if (num < 0 || num > maxwin - 1)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  788 |             num = 0;[0m
      | [0;1;32m                    
[0m[1msocket.c:800:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |   if (*p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  801 |     nwin.aka = p;[0m
      | [0;1;32m                 
[0m[1msocket.c:802:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  802 |   if (*args)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  803 |     nwin.args = args;[0m
      | [0;1;32m                     
[0m[1msocket.c:806:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  806 |   if (*mp->m.create.dir)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  807 |     nwin.dir = mp->m.create.dir;[0m
      | [0;1;32m                                
[0m[1msocket.c:810:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |   if (*mp->m.create.screenterm)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  811 |     nwin.term =  mp->m.create.screenterm;[0m
      | [0;1;32m                                         
[0m[1msocket.c:816:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  816 | CheckPid(pid)[0m
      | [0;1;32m^
[0m[1msocket.c:820:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |   if (pid < 2)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  821 |     return -1;[0m
      | [0;1;32m              
[0m[1msocket.c:822:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  822 |   if (eff_uid == real_uid)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  823 |     return kill(pid, 0);[0m
      | [0;1;32m                        
[0m[1msocket.c:824:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |   if (UserContext() > 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  825 |     UserReturn(kill(pid, 0));[0m
      | [0;1;32m                             
[0m[1msocket.c:857:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  857 | CreateTempDisplay(m, recvfd, wi)[0m
      | [0;1;32m^
[0m[1msocket.c:874:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  874 |         user = m->m.attach.auser;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  875 |         attach = 1;[0m
  876 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:883:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  883 |         user = m->m.detach.duser;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  884 |         attach = 0;[0m
  885 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:888:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  888 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m[1msocket.c:903:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'recvfd' is never read [clang-analyzer-deadcode.DeadStores][0m
  903 |       recvfd = -1;[0m
      | [0;1;32m      ^        ~~
[0m[1msocket.c:903:7: [0m[0;1;36mnote: [0mValue stored to 'recvfd' is never read[0m
  903 |       recvfd = -1;[0m
      | [0;1;32m      ^        ~~
[0m[1msocket.c:904:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  904 |       memset(&ttyname_in_ns, 0, sizeof(ttyname_in_ns));[0m
      | [0;1;32m      ^~~~~~
[0m[1msocket.c:904:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  904 |       memset(&ttyname_in_ns, 0, sizeof(ttyname_in_ns));[0m
      | [0;1;32m      ^~~~~~
[0m[1msocket.c:931:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  931 |           strncpy(m->m_tty, myttyname, sizeof(m->m_tty) - 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msocket.c:931:11: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  931 |           strncpy(m->m_tty, myttyname, sizeof(m->m_tty) - 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msocket.c:949:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |   if (attach)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  950 |     Kill(pid, SIGCONT);[0m
      | [0;1;32m                       
[0m[1msocket.c:969:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  969 |       if (strcmp(user, LoginName))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  970 |         if (*FindUserPtr(user) == 0)[0m
  971 |           {[0m
  972 |               write(i, "Access to session denied.\n", 26);[0m
  973 |               close(i);[0m
  974 |               Kill(pid, SIG_BYE);[0m
  975 |               Msg(0, "Attach: access denied for user %s.", user);[0m
  976 |               return -1;[0m
  977 |           }[0m
      | [0;1;32m           
[0m[1msocket.c:1010:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1010 |       if (D_encoding < 0 || !EncodingName(D_encoding))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1011 |         D_encoding = 0;[0m
      | [0;1;32m                       
[0m[1msocket.c:1028:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1028 |   if (fcntl(D_userfd, F_SETFL, FNBLOCK))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1029 |     Msg(errno, "Warning: NBLOCK fcntl failed");[0m
      | [0;1;32m                                               
[0m[1msocket.c:1055:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1055 |       if (fcntl(ServerSocket, F_SETFL, 0) == -1)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1056 |         Panic(errno, "BLOCK fcntl");[0m
      | [0;1;32m                                    
[0m[1msocket.c:1072:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 1072 |       bzero(&msg, sizeof(msg));[0m
      | [0;1;32m      ^~~~~
[0m[1msocket.c:1072:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 1072 |       bzero(&msg, sizeof(msg));[0m
      | [0;1;32m      ^~~~~
[0m[1msocket.c:1082:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |           if (len < 0 && errno == EINTR)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1083 |             continue;[0m
      | [0;1;32m                     
[0m[1msocket.c:1099:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1099 |                       cmsg->cmsg_type != SCM_RIGHTS)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1100 |                     continue;[0m
      | [0;1;32m                             
[0m[1msocket.c:1106:23: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1106 |                       bcopy(cp, &passedfd, sizeof(int));[0m
      | [0;1;32m                      ^~~~~
[0m[1msocket.c:1106:23: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1106 |                       bcopy(cp, &passedfd, sizeof(int));[0m
      | [0;1;32m                      ^~~~~
[0m[1msocket.c:1107:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1107 |                       if (recvfd >= 0 && passedfd != recvfd)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1108 |                         close(recvfd);[0m
      | [0;1;32m                                      
[0m[1msocket.c:1123:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1123 |       if (len < 0 && errno == EINTR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1124 |         continue;[0m
      | [0;1;32m                 
[0m[1msocket.c:1125:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |       if (len <= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1126 |         break;[0m
      | [0;1;32m              
[0m[1msocket.c:1136:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1136 |       if ((ServerSocket = secopen(SockPath, O_RDONLY | O_NONBLOCK, 0)) < 0)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 1137 |         Panic(errno, "reopen fifo %s", SockPath);[0m
      | [0;1;32m                                                 
[0m[1msocket.c:1151:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |       if (recvfd != -1)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1152 |         close(recvfd);[0m
      | [0;1;32m                      
[0m[1msocket.c:1157:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1157 |       if (left != sizeof(m))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1158 |         Msg(0, "Message %d of %d bytes too small", left, (int)sizeof(m));[0m
 1159 |       else[0m
      | [0;32m      } 
[0m[1msocket.c:1159:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1159 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1160 |         debug("No data on socket.\n");[0m
      | [0;1;32m                                      
[0m[1msocket.c:1165:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1165 |       if (recvfd != -1)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1166 |         close(recvfd);[0m
      | [0;1;32m                      
[0m[1msocket.c:1178:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1178 |   for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1179 |     if (TTYCMP(D_usertty, m.m_tty) == 0)[0m
 1180 |       break;[0m
      | [0;1;32m            
[0m[1msocket.c:1179:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1179 |     if (TTYCMP(D_usertty, m.m_tty) == 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1180 |       break;[0m
      | [0;1;32m            
[0m[1msocket.c:1185:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1185 |       for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1186 |         if (!TTYCMP(m.m_tty, wi->w_tty))[0m
 1187 |           {[0m
 1188 |             /* XXX: hmmm, rework this? */[0m
 1189 |             display =[0m
 1190 |                 wi->w_layer.l_cvlist ? wi->w_layer.l_cvlist->c_display : 0;[0m
 1191 |             debug2("but window %s %sfound.\n", m.m_tty,[0m
 1192 |                    display ? "" : "(backfacing)");[0m
 1193 |             break;[0m
 1194 |           }[0m
      | [0;1;32m           
[0m[1msocket.c:1198:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1198 |   if (display && D_status)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1199 |     RemoveStatus();[0m
      | [0;1;32m                   
[0m[1msocket.c:1203:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1203 |       if (recvfd != -1)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1204 |         close(recvfd);[0m
      | [0;1;32m                      
[0m[1msocket.c:1211:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1211 |         if (display)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1212 |           CheckScreenSize(1); /* Change fore */[0m
 1213 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:1211:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1211 |         if (display)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1212 |           CheckScreenSize(1); /* Change fore */[0m
      | [0;1;32m                                               
[0m[1msocket.c:1221:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1221 |         ExecCreate(&m);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1222 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:1224:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1224 |         if (display && D_userpid != 0 && kill(D_userpid, 0) == 0)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1225 |           break; /* Intruder Alert */[0m
 1226 |         debug2("RecMsg: apid=%d,was %d\n", m.m.attach.apid,[0m
 1227 |                display ? D_userpid : 0);[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1msocket.c:1224:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1224 |         if (display && D_userpid != 0 && kill(D_userpid, 0) == 0)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1225 |           break; /* Intruder Alert */[0m
      | [0;1;32m                                     
[0m[1msocket.c:1231:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1231 |         if (CreateTempDisplay(&m, recvfd, wi))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1232 |           break;[0m
 1233 | #ifdef PASSWORD[0m
 1234 |         if (D_user->u_password && *D_user->u_password)[0m
 1235 |           AskPassword(&m);[0m
 1236 |         else[0m
 1237 | #endif[0m
 1238 |           FinishAttach(&m);[0m
 1239 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:1231:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1231 |         if (CreateTempDisplay(&m, recvfd, wi))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1232 |           break;[0m
      | [0;1;32m                
[0m[1msocket.c:1234:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1234 |         if (D_user->u_password && *D_user->u_password)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1235 |           AskPassword(&m);[0m
 1236 |         else[0m
      | [0;32m        } 
[0m[1msocket.c:1236:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1236 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1237 | #endif[0m
 1238 |           FinishAttach(&m);[0m
      | [0;1;32m                           
[0m[1msocket.c:1241:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1241 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1242 |         int blocked=D_blocked;[0m
 1243 |         if(D_blocked == 4) /* allow error messages while in blanker mode */[0m
 1244 |           D_blocked=0; /* likely they're from failed blanker */[0m
 1245 |         Msg(0, "%s", m.m.message);[0m
 1246 |         D_blocked=blocked;[0m
 1247 |       }[0m
 1248 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:1242:21: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_blocked' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 1242 |         int blocked=D_blocked;[0m
      | [0;1;32m                    ^
[0m[1m./display.h:305:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_blocked'[0m
  305 | #define D_blocked       DISPLAY(d_blocked)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1msocket.c:1051:15: [0m[0;1;36mnote: [0mCalling 'IsSocket'[0m
 1051 |   is_socket = IsSocket(SockPath);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1msocket.c:1935:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1935 |   if (stat(path, &st) < 0)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1938:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1938 |   return S_ISSOCK(st.st_mode);[0m
      | [0;1;32m         ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:142:25: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISSOCK'[0m
  142 | # define S_ISSOCK(mode) __S_ISTYPE((mode), __S_IFSOCK)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msocket.c:1938:3: [0m[0;1;36mnote: [0mReturning the value 1, which participates in a condition later[0m
 1938 |   return S_ISSOCK(st.st_mode);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msocket.c:1051:15: [0m[0;1;36mnote: [0mReturning from 'IsSocket'[0m
 1051 |   is_socket = IsSocket(SockPath);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1msocket.c:1052:8: [0m[0;1;36mnote: [0m'is_socket' is true[0m
 1052 |   if (!is_socket)[0m
      | [0;1;32m       ^~~~~~~~~
[0m[1msocket.c:1052:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1052 |   if (!is_socket)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1063:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1063 |       debug("Ha, there was someone knocking on my socket??\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1msocket.c:1064:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1064 |       if ((ns = accept(ns, (struct sockaddr *)&a, (void *)&len)) < 0)[0m
      | [0;1;32m      ^
[0m[1msocket.c:1079:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1079 |       while (left > 0)[0m
      | [0;1;32m      ^
[0m[1msocket.c:1082:15: [0m[0;1;36mnote: [0m'len' is >= 0[0m
 1082 |           if (len < 0 && errno == EINTR)[0m
      | [0;1;32m              ^~~
[0m[1msocket.c:1082:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1082 |           if (len < 0 && errno == EINTR)[0m
      | [0;1;32m                      ^
[0m[1msocket.c:1084:15: [0m[0;1;36mnote: [0m'len' is >= 0[0m
 1084 |           if (len < 0)[0m
      | [0;1;32m              ^~~
[0m[1msocket.c:1084:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1084 |           if (len < 0)[0m
      | [0;1;32m          ^
[0m[1msocket.c:1090:15: [0m[0;1;36mnote: [0mAssuming field 'msg_controllen' is 0[0m
 1090 |           if (msg.msg_controllen)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1msocket.c:1090:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1090 |           if (msg.msg_controllen)[0m
      | [0;1;32m          ^
[0m[1msocket.c:1116:11: [0m[0;1;36mnote: [0m Execution continues on line 1120[0m
 1116 |           break;[0m
      | [0;1;32m          ^
[0m[1msocket.c:1120:10: [0m[0;1;36mnote: [0mAssuming 'left' is <= 0[0m
 1120 |   while (left > 0)[0m
      | [0;1;32m         ^~~~~~~~
[0m[1msocket.c:1120:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1131[0m
 1120 |   while (left > 0)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1131:8: [0m[0;1;36mnote: [0m'is_socket' is true[0m
 1131 |   if (!is_socket)[0m
      | [0;1;32m       ^~~~~~~~~
[0m[1msocket.c:1131:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1131 |   if (!is_socket)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1148:7: [0m[0;1;36mnote: [0m'len' is >= 0[0m
 1148 |   if (len < 0)[0m
      | [0;1;32m      ^~~
[0m[1msocket.c:1148:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1148 |   if (len < 0)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1155:7: [0m[0;1;36mnote: [0m'left' is <= 0[0m
 1155 |   if (left > 0)[0m
      | [0;1;32m      ^~~~
[0m[1msocket.c:1155:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1155 |   if (left > 0)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1163:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1163 |   if (m.protocol_revision != MSG_REVISION)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msocket.c:1163:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1163 |   if (m.protocol_revision != MSG_REVISION)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1171:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1171 |   debug2("*** RecMsg: type %d tty %s\n", m.type, m.m_tty);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1msocket.c:1172:7: [0m[0;1;36mnote: [0mAssuming field 'type' is not equal to MSG_ATTACH[0m
 1172 |   if (m.type != MSG_ATTACH && recvfd != -1)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1msocket.c:1172:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msocket.c:1172:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1172 |   if (m.type != MSG_ATTACH && recvfd != -1)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1178:8: [0m[0;1;36mnote: [0mValue assigned to 'display'[0m
 1178 |   for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~
[0m[1msocket.c:1178:28: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 1178 |   for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                           ^~~~~~~
[0m[1msocket.c:1178:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1181[0m
 1178 |   for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1181:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1181 |   debug2("display: %s display %sfound\n", m.m_tty, display ? "" : "not ");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1msocket.c:1183:8: [0m[0;1;36mnote: [0m'display' is null[0m
 1183 |   if (!display)[0m
      | [0;1;32m       ^~~~~~~
[0m[1msocket.c:1183:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1183 |   if (!display)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1185:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1198[0m
 1185 |       for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m      ^
[0m[1msocket.c:1198:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1198 |   if (display && D_status)[0m
      | [0;1;32m      ^~~~~~~
[0m[1msocket.c:1198:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1198 |   if (display && D_status)[0m
      | [0;1;32m              ^
[0m[1msocket.c:1201:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1201 |   if (display && !D_tcinited && m.type != MSG_HANGUP)[0m
      | [0;1;32m      ^~~~~~~
[0m[1msocket.c:1201:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1201 |   if (display && !D_tcinited && m.type != MSG_HANGUP)[0m
      | [0;1;32m              ^
[0m[1msocket.c:1208:3: [0m[0;1;36mnote: [0mControl jumps to 'case 1:'  at line 1240[0m
 1208 |   switch (m.type)[0m
      | [0;1;32m  ^
[0m[1msocket.c:1242:21: [0m[0;1;36mnote: [0mAccess to field 'd_blocked' results in a dereference of a null pointer (loaded from variable 'display')[0m
 1242 |         int blocked=D_blocked;[0m
      | [0;1;32m                    ^
[0m[1m./display.h:305:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_blocked'[0m
  305 | #define D_blocked       DISPLAY(d_blocked)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1msocket.c:1243:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1243 |         if(D_blocked == 4) /* allow error messages while in blanker mode */[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1244 |           D_blocked=0; /* likely they're from failed blanker */[0m
      | [0;1;32m                                                               
[0m[1msocket.c:1250:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1250 |         if (!wi) /* ignore hangups from inside */[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1251 |           Hangup();[0m
 1252 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:1250:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1250 |         if (!wi) /* ignore hangups from inside */[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1251 |           Hangup();[0m
      | [0;1;32m                   
[0m[1msocket.c:1260:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1260 |         if (user && user->u_password && *user->u_password)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1261 |           {[0m
 1262 |             if (CreateTempDisplay(&m, recvfd, 0))[0m
 1263 |               break;[0m
 1264 |             AskPassword(&m);[0m
 1265 |           }[0m
 1266 |         else[0m
 1267 | #endif /* PASSWORD */[0m
 1268 |           FinishDetach(&m);[0m
 1269 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:1262:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1262 |             if (CreateTempDisplay(&m, recvfd, 0))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1263 |               break;[0m
      | [0;1;32m                    
[0m[1msocket.c:1266:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1266 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1267 | #endif /* PASSWORD */[0m
 1268 |           FinishDetach(&m);[0m
      | [0;1;32m                           
[0m[1msocket.c:1272:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1272 |         {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1msocket.c:1274:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1274 |           strcpy(SockPath, m.m.command.writeback);[0m
      | [0;1;32m          ^~~~~~
[0m[1msocket.c:1274:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1274 |           strcpy(SockPath, m.m.command.writeback);[0m
      | [0;1;32m          ^~~~~~
[0m[1msocket.c:1277:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1277 |           strcpy(SockPath, oldSockPath);[0m
      | [0;1;32m          ^~~~~~
[0m[1msocket.c:1277:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1277 |           strcpy(SockPath, oldSockPath);[0m
      | [0;1;32m          ^~~~~~
[0m[1msocket.c:1285:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1285 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1286 |             queryflag = -1;[0m
      | [0;1;32m                           
[0m[1msocket.c:1296:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1296 |         DoCommandMsg(&m);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1297 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msocket.c:1299:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1299 |         Msg(0, "Invalid message (type %d).", m.type);[0m
      | [0;1;32m        ^                                           
[0m      | [0;32m        {                                           ;} 
[0m[1msocket.c:1304:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1304 | ReceiveRaw(s)[0m
      | [0;1;32m^
[0m[1msocket.c:1315:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1315 |       if (fcntl(s, F_SETFL, 0) < 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1316 |         Panic(errno, "BLOCK fcntl");[0m
      | [0;1;32m                                    
[0m[1msocket.c:1371:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1371 |       if (UserContext() <= 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1372 |         return UserStatus();[0m
      | [0;1;32m                            
[0m[1msocket.c:1382:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1382 |   if (euid != real_uid)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1383 |     UserReturn(r);[0m
      | [0;1;32m                  
[0m[1msocket.c:1398:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1398 |       if (UserContext() > 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1399 |         UserReturn(unlink(SockPath));[0m
      | [0;1;32m                                     
[0m[1msocket.c:1402:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1402 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1403 |     (void) unlink(SockPath);[0m
      | [0;1;32m                            
[0m[1msocket.c:1406:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1406 |   if ((ServerSocket = MakeServerSocket(is_socket)) < 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1407 |     return 0;[0m
      | [0;1;32m             
[0m[1msocket.c:1416:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1416 | FinishAttach(m)[0m
      | [0;1;32m^
[0m[1msocket.c:1453:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1453 |   if (extra_outcap)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1454 |     free(extra_outcap);[0m
      | [0;1;32m                       
[0m[1msocket.c:1455:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1455 |   if (extra_incap)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1456 |     free(extra_incap);[0m
      | [0;1;32m                      
[0m[1msocket.c:1461:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1461 |   if ((p = getenv("SYSSCREENRC")))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1462 |     StartRc(p, 1);[0m
 1463 |   else[0m
      | [0;32m  } 
[0m[1msocket.c:1463:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1463 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1464 | # endif[0m
 1465 |     StartRc(ETCSCREENRC, 1);[0m
      | [0;1;32m                            
[0m[1msocket.c:1476:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1476 |   if (displays->d_next == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1477 |     (void) chsock();[0m
      | [0;1;32m                    
[0m[1msocket.c:1492:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1492 |   if (displays->d_next == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1493 |     for (wi = windows; wi; wi = wi->w_next)[0m
 1494 |       if (wi->w_ptyfd >= 0 && wi->w_slot != (slot_t) -1)[0m
 1495 |         SetUtmp(wi);[0m
      | [0;1;32m                    
[0m[1msocket.c:1493:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1493 |     for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1494 |       if (wi->w_ptyfd >= 0 && wi->w_slot != (slot_t) -1)[0m
 1495 |         SetUtmp(wi);[0m
      | [0;1;32m                    
[0m[1msocket.c:1494:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |       if (wi->w_ptyfd >= 0 && wi->w_slot != (slot_t) -1)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1495 |         SetUtmp(wi);[0m
      | [0;1;32m                    
[0m[1msocket.c:1502:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1502 |       if (lay == &layout_last_marker)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1503 |         lay = layout_last;[0m
      | [0;1;32m                          
[0m[1msocket.c:1514:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1514 |   if (D_user->u_detachwin >= 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1515 |     fore = wtab[D_user->u_detachwin];[0m
 1516 |   else[0m
      | [0;32m  } 
[0m[1msocket.c:1516:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1516 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1517 |     fore = 0;[0m
      | [0;1;32m             
[0m[1msocket.c:1520:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1520 |   if (D_user->u_detachotherwin >= 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1521 |     D_other = wtab[D_user->u_detachotherwin];[0m
      | [0;1;32m                                             
[0m[1msocket.c:1526:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1526 |       if (!strcmp(m->m.attach.preselect, "="))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1527 |         fore = 0;[0m
 1528 |       else if (!strcmp(m->m.attach.preselect, "-"))[0m
      | [0;32m      } 
[0m[1msocket.c:1542:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1542 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1543 |         fore = FindNiceWindow(fore, m->m.attach.preselect);[0m
      | [0;1;32m                                                           
[0m[1msocket.c:1545:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1545 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1546 |     fore = FindNiceWindow(fore, 0);[0m
      | [0;1;32m                                   
[0m[1msocket.c:1547:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1547 |   if (fore)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1548 |     SetForeWindow(fore);[0m
 1549 |   else if (!noshowwin)[0m
      | [0;32m  } 
[0m[1msocket.c:1564:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1564 |   if (!D_fore && !noshowwin)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1565 |     ShowWindows(-1);[0m
      | [0;1;32m                    
[0m[1msocket.c:1568:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1568 |       if (TtyGrabConsole(console_window->w_ptyfd, 1, "reattach") == 0)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1569 |         Msg(0, "console %s is on window %d", HostName, console_window->w_number);[0m
      | [0;1;32m                                                                                 
[0m[1msocket.c:1584:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1584 | FinishDetach(m)[0m
      | [0;1;32m^
[0m[1msocket.c:1590:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1590 |   if (m->type == MSG_ATTACH)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1591 |     pid = D_userpid;[0m
 1592 |   else[0m
      | [0;32m  } 
[0m[1msocket.c:1592:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1592 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1593 |     pid = m->m.detach.dpid;[0m
      | [0;1;32m                           
[0m[1msocket.c:1598:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1598 |       if (det->d_userpid == pid)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1599 |         break;[0m
      | [0;1;32m              
[0m[1msocket.c:1611:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1611 |       if (m->type == MSG_POW_DETACH)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1612 |         Detach(D_REMOTE_POWER);[0m
 1613 |       else[0m
      | [0;32m      } 
[0m[1msocket.c:1615:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1615 |       if (m->type == MSG_DETACH)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1616 |         Detach(D_REMOTE);[0m
 1617 |       else if (m->type == MSG_ATTACH)[0m
      | [0;32m      } 
[0m[1msocket.c:1620:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1620 |           if (m->m.attach.detachfirst == MSG_POW_DETACH)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1621 |             Detach(D_REMOTE_POWER);[0m
 1622 |           else[0m
      | [0;32m          } 
[0m[1msocket.c:1624:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1624 |           if (m->m.attach.detachfirst == MSG_DETACH)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1625 |             Detach(D_REMOTE);[0m
      | [0;1;32m                             
[0m[1msocket.c:1631:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1631 |       if (display)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1632 |         FreeDisplay();[0m
      | [0;1;32m                      
[0m[1msocket.c:1647:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1647 | AskPassword(m)[0m
      | [0;1;32m^
[0m[1msocket.c:1653:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1653 |   if (!pwdata)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1654 |     Panic(0, "%s", strnomem);[0m
      | [0;1;32m                             
[0m[1msocket.c:1663:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1663 | PasswordProcessInput(ibuf, ilen)[0m
      | [0;1;32m^
[0m[1msocket.c:1686:8: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 1686 |               bzero(pwdata->buf, sizeof(pwdata->buf));[0m
      | [0;1;32m              ^~~~~
[0m[1msocket.c:1686:8: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 1686 |               bzero(pwdata->buf, sizeof(pwdata->buf));[0m
      | [0;1;32m              ^~~~~
[0m[1msocket.c:1687:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1687 |               if (!buf)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1688 |                 AddStr("\r\ncrypt() failed.\r\n");[0m
 1689 |               else[0m
      | [0;32m              } 
[0m[1msocket.c:1689:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1689 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1690 |                 AddStr("\r\nPassword incorrect.\r\n");[0m
      | [0;1;32m                                                      
[0m[1msocket.c:1699:4: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 1699 |           bzero(pwdata->buf, sizeof(pwdata->buf));[0m
      | [0;1;32m          ^~~~~
[0m[1msocket.c:1699:4: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 1699 |           bzero(pwdata->buf, sizeof(pwdata->buf));[0m
      | [0;1;32m          ^~~~~
[0m[1msocket.c:1725:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1725 |           if (l > 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1726 |             l--;[0m
      | [0;1;32m                
[0m[1msocket.c:1734:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1734 |       if (l < (int)sizeof(pwdata->buf) - 1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1735 |         pwdata->buf[l++] = c;[0m
      | [0;1;32m                             
[0m[1msocket.c:1743:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1743 | strncpy_escape_quote(dst, src, end)[0m
      | [0;1;32m^
[0m[1msocket.c:1751:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1751 |           if (dst + 2 < end)    /* \\ \" \0 */[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1752 |             *dst++ = '\\';[0m
 1753 |           else[0m
      | [0;32m          } 
[0m[1msocket.c:1753:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1753 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1754 |             return NULL;[0m
      | [0;1;32m                        
[0m[1msocket.c:1758:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1758 |   if (dst >= end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1759 |     return NULL;[0m
      | [0;1;32m                
[0m[1msocket.c:1766:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1766 | DoCommandMsg(mp)[0m
      | [0;1;32m^
[0m[1msocket.c:1783:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1783 |   if (n > MAXARGS - 1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1784 |     n = MAXARGS - 1;[0m
      | [0;1;32m                    
[0m[1msocket.c:1799:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1799 |   if (fc != fullcmd)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1800 |     *--fc = 0;[0m
      | [0;1;32m              
[0m[1msocket.c:1825:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1825 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1826 |     for (display = displays; display; display = display->d_next)[0m
 1827 |       if (D_user == user)[0m
 1828 |         break;[0m
      | [0;1;32m              
[0m[1msocket.c:1826:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1826 |     for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1827 |       if (D_user == user)[0m
 1828 |         break;[0m
      | [0;1;32m              
[0m[1msocket.c:1827:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1827 |       if (D_user == user)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1828 |         break;[0m
      | [0;1;32m              
[0m[1msocket.c:1829:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1829 |   for (fore = windows; fore; fore = fore->w_next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1830 |     if (!TTYCMP(mp->m_tty, fore->w_tty))[0m
 1831 |       {[0m
 1832 |         if (!display)[0m
 1833 |           display = fore->w_layer.l_cvlist ? fore->w_layer.l_cvlist->c_display : 0;[0m
 1834 | [0m
 1835 |         /* If the window is not visibile in any display, then do not use the originating window as[0m
 1836 |          * the foreground window for the command. This way, if there is an existing display, then[0m
 1837 |          * the command will execute from the foreground window of that display. This is necessary so[0m
 1838 |          * that commands that are relative to the window (e.g. 'next' etc.) do the right thing. */[0m
 1839 |         if (!fore->w_layer.l_cvlist || !fore->w_layer.l_cvlist->c_display)[0m
 1840 |           fore = NULL;[0m
 1841 |         break;[0m
 1842 |       }[0m
      | [0;1;32m       
[0m[1msocket.c:1832:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1832 |         if (!display)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1833 |           display = fore->w_layer.l_cvlist ? fore->w_layer.l_cvlist->c_display : 0;[0m
      | [0;1;32m                                                                                   
[0m[1msocket.c:1839:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1839 |         if (!fore->w_layer.l_cvlist || !fore->w_layer.l_cvlist->c_display)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1840 |           fore = NULL;[0m
      | [0;1;32m                      
[0m[1msocket.c:1843:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1843 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1844 |     display = displays;         /* sigh */[0m
      | [0;1;32m                                          
[0m[1msocket.c:1862:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1862 |       if (display && D_user == user)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1863 |         fore = Layer2Window(display->d_forecv->c_layer);[0m
      | [0;1;32m                                                        
[0m[1msocket.c:1870:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1870 |   if (!fore)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1871 |     fore = windows;             /* sigh */[0m
      | [0;1;32m                                          
[0m[1msocket.c:1881:94: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1881 |       if (fore && fore->w_savelayer && (fore->w_blocked || fore->w_savelayer->l_cvlist == 0))[0m
      | [0;1;32m                                                                                             ^
[0m      | [0;32m                                                                                              {
[0m 1882 |         flayer = fore->w_savelayer;[0m
      | [0;1;32m                                   
[0m[1msocket.c:1892:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1892 | SendAttachMsg(s, m, fd)[0m
      | [0;1;32m^
[0m[1msocket.c:1905:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 1905 |   bzero(&msg, sizeof(msg));[0m
      | [0;1;32m  ^~~~~
[0m[1msocket.c:1905:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 1905 |   bzero(&msg, sizeof(msg));[0m
      | [0;1;32m  ^~~~~
[0m[1msocket.c:1916:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1916 |   bcopy(&fd, CMSG_DATA(cmsg), sizeof(int));[0m
      | [0;1;32m  ^~~~~
[0m[1msocket.c:1916:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1916 |   bcopy(&fd, CMSG_DATA(cmsg), sizeof(int));[0m
      | [0;1;32m  ^~~~~
[0m[1msocket.c:1921:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1921 |       if (r == -1 && errno == EINTR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1922 |         continue;[0m
      | [0;1;32m                 
[0m[1msocket.c:1923:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1923 |       if (r == -1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1924 |         return -1;[0m
      | [0;1;32m                  
[0m[1msocket.c:1930:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1930 | IsSocket(path)[0m
      | [0;1;32m^
[0m[1msocket.c:1935:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1935 |   if (stat(path, &st) < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1936 |     return false;[0m
      | [0;1;32m                 
[0m222 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[28/38][209.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpe_wlhjl8.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/termcap.c
[1mtermcap.c:84:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   84 | gettermcapstring(s)[0m
      | [0;1;32m^
[0m[1mtermcap.c:89:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |   if (display == 0 || s == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   90 |     return 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:93:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |       if (term[i].type != T_STR)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   94 |         continue;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:95:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |       if (strcmp(term[i].tcname, s) == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   96 |         return D_tcs[i].str;[0m
      | [0;1;32m                            
[0m[1mtermcap.c:107:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  107 | InitTermcap(wi, he)[0m
      | [0;1;32m^
[0m[1mtermcap.c:117:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  117 |   bzero(tbuf, sizeof(tbuf));[0m
      | [0;1;32m  ^~~~~
[0m[1mtermcap.c:117:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  117 |   bzero(tbuf, sizeof(tbuf));[0m
      | [0;1;32m  ^~~~~
[0m[1mtermcap.c:151:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  151 |           D_tcs[i].flg = e_tgetflag(term[i].tcname);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  152 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m./display.h:281:16: [0m[0;1;36mnote: [0mexpanded from macro 'D_tcs'[0m
  281 | #define D_tcs           DISPLAY(d_tcs)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mtermcap.c:154:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  154 |           D_tcs[i].num = e_tgetnum(term[i].tcname);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  155 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m./display.h:281:16: [0m[0;1;36mnote: [0mexpanded from macro 'D_tcs'[0m
  281 | #define D_tcs           DISPLAY(d_tcs)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mtermcap.c:157:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |           D_tcs[i].str = e_tgetstr(term[i].tcname, &tp);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  158 |           /* no empty strings, please */[0m
  159 |           if (D_tcs[i].str && *D_tcs[i].str == 0)[0m
  160 |             D_tcs[i].str = 0;[0m
  161 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m./display.h:281:16: [0m[0;1;36mnote: [0mexpanded from macro 'D_tcs'[0m
  281 | #define D_tcs           DISPLAY(d_tcs)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mtermcap.c:159:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |           if (D_tcs[i].str && *D_tcs[i].str == 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  160 |             D_tcs[i].str = 0;[0m
      | [0;1;32m                             
[0m[1mtermcap.c:163:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  163 |           Panic(0, "Illegal tc type in entry #%d", i);[0m
      | [0;1;32m          ^                                          
[0m      | [0;32m          {                                          ;} 
[0m[1mtermcap.c:191:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |   if ((s = getenv("COLUMNS")) && (i = atoi(s)) > 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  192 |     D_CO = i;[0m
      | [0;1;32m             
[0m[1mtermcap.c:193:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |   if ((s = getenv("LINES")) && (i = atoi(s)) > 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  194 |     D_LI = i;[0m
      | [0;1;32m             
[0m[1mtermcap.c:195:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (wi)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  196 |     D_CO = wi;[0m
      | [0;1;32m              
[0m[1mtermcap.c:197:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   if (he)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  198 |     D_LI = he;[0m
      | [0;1;32m              
[0m[1mtermcap.c:199:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |   if (D_CO <= 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  200 |     D_CO = 80;[0m
      | [0;1;32m              
[0m[1mtermcap.c:201:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |   if (D_LI <= 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  202 |     D_LI = 24;[0m
      | [0;1;32m              
[0m[1mtermcap.c:218:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |       if (D_OP && InStr(D_OP, "\033[39;49m"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  219 |         D_CAX = 1;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:220:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |       if (D_OP && (InStr(D_OP, "\033[m") || InStr(D_OP, "\033[0m")))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  221 |         D_OP = 0;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:223:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |       if ((D_EA && InStr(D_EA, "\033(B")) || (D_AS && InStr(D_AS, "\033(0")))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  224 |         D_CG0 = 1;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:232:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |       if (D_CXT)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  233 |         D_BE = 1;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:235:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (nwin_options.flowflag == nwin_undef.flowflag)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  236 |     nwin_default.flowflag = D_CNF ? FLOW_NOW * 0 : [0m
  237 |                             D_NX ? FLOW_NOW * 1 :[0m
  238 |                             FLOW_AUTOFLAG;[0m
      | [0;1;32m                                          
[0m[1mtermcap.c:240:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |   if (!D_BL)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  241 |     D_BL = "\007";[0m
      | [0;1;32m                  
[0m[1mtermcap.c:244:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |       if (D_BS)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  245 |         D_BC = "\b";[0m
  246 |       else[0m
      | [0;32m      } 
[0m[1mtermcap.c:246:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  247 |         D_BC = D_LE;[0m
      | [0;1;32m                    
[0m[1mtermcap.c:249:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |   if (!D_CR)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  250 |     D_CR = "\r";[0m
      | [0;1;32m                
[0m[1mtermcap.c:251:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |   if (!D_NL)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  252 |     D_NL = "\n";[0m
      | [0;1;32m                
[0m[1mtermcap.c:260:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |   if (D_UG > 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  261 |     D_US = D_UE = 0;[0m
      | [0;1;32m                    
[0m[1mtermcap.c:262:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |   if (D_SG > 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  263 |     D_SO = D_SE = 0;[0m
      | [0;1;32m                    
[0m[1mtermcap.c:267:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |   if (D_UG > 0 && D_SG > 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  268 |     D_MH = D_MD = D_MR = D_MB = D_ME = 0;[0m
      | [0;1;32m                                         
[0m[1mtermcap.c:277:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |       if (D_ME)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  278 |         xse = xme;[0m
  279 |       else[0m
      | [0;32m      } 
[0m[1mtermcap.c:279:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  280 |         D_SO = 0;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:285:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |       if (D_ME)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  286 |         xue = xme;[0m
  287 |       else[0m
      | [0;32m      } 
[0m[1mtermcap.c:287:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  288 |         D_US = 0;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:300:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |   if (D_UE && D_SE && strcmp(D_SE, D_UE) == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  301 |     xse = xue;[0m
      | [0;1;32m              
[0m[1mtermcap.c:302:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |   if (D_SE && D_ME && strcmp(D_ME, D_SE) == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  303 |     xse = xme;[0m
      | [0;1;32m              
[0m[1mtermcap.c:304:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |   if (D_UE && D_ME && strcmp(D_ME, D_UE) == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  305 |     xue = xme;[0m
      | [0;1;32m              
[0m[1mtermcap.c:316:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |   for (i = 0; i < NATTR; i++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  317 |     if ((s = D_attrtab[i]))[0m
  318 |       {[0m
  319 |         t = D_attrtyp[i];[0m
  320 |         break;[0m
  321 |       }[0m
      | [0;1;32m       
[0m[1mtermcap.c:335:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |   if (D_CAF || D_CAB || D_CSF || D_CSB)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  336 |     D_hascolor = 1;[0m
      | [0;1;32m                   
[0m[1mtermcap.c:337:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |   if (D_UT)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  338 |     D_BE = 1;   /* screen erased with background color */[0m
      | [0;1;32m                                                         
[0m[1mtermcap.c:340:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |   if (!D_DO)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  341 |     D_DO = D_NL;[0m
      | [0;1;32m                
[0m[1mtermcap.c:342:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |   if (!D_SF)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  343 |     D_SF = D_NL;[0m
      | [0;1;32m                
[0m[1mtermcap.c:344:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |   if (D_IN)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  345 |     D_IC = D_IM = 0;[0m
      | [0;1;32m                    
[0m[1mtermcap.c:346:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |   if (D_EI == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  347 |     D_IM = 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:349:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |   if (D_IC && D_IM && strcmp(D_IC, D_IM) == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  350 |     D_IC = 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:351:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |   if (D_KE == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  352 |     D_KS = 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:353:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |   if (D_CVN == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  354 |     D_CVR = 0;[0m
      | [0;1;32m              
[0m[1mtermcap.c:355:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |   if (D_VE == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  356 |     D_VI = D_VS = 0;[0m
      | [0;1;32m                    
[0m[1mtermcap.c:357:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |   if (D_CCE == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  358 |     D_CCS = 0;[0m
      | [0;1;32m              
[0m[1mtermcap.c:363:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |       if (D_CS0 == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  364 | #ifdef TERMINFO[0m
  365 |         D_CS0 = "\033(%p1%c";[0m
      | [0;1;32m                             
[0m[1mtermcap.c:369:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |       if (D_CE0 == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  370 |         D_CE0 = "\033(B";[0m
      | [0;1;32m                         
[0m[1mtermcap.c:387:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |   for (i = 0; i < 256; i++)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  388 |     D_c0_tab[i] = i;[0m
      | [0;1;32m                    
[0m[1mtermcap.c:393:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |       for (i = (strlen(s) - 2) & ~1; i >= 0; i -= 2)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  394 |         D_c0_tab[(int)(unsigned char)s[i]] = s[i + 1];[0m
      | [0;1;32m                                                      
[0m[1mtermcap.c:396:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |   if (D_CC0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  397 |     for (i = (strlen(D_CC0) - 2) & ~1; i >= 0; i -= 2)[0m
  398 |       D_c0_tab[(int)(unsigned char)D_CC0[i]] = D_CC0[i + 1];[0m
      | [0;1;32m                                                            
[0m[1mtermcap.c:397:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |     for (i = (strlen(D_CC0) - 2) & ~1; i >= 0; i -= 2)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  398 |       D_c0_tab[(int)(unsigned char)D_CC0[i]] = D_CC0[i + 1];[0m
      | [0;1;32m                                                            
[0m[1mtermcap.c:401:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |   if (D_PF == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  402 |     D_PO = 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:406:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |   if (D_CXC)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  407 |     if (CreateTransTable(D_CXC))[0m
  408 |       return -1;[0m
      | [0;1;32m                
[0m[1mtermcap.c:407:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |     if (CreateTransTable(D_CXC))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  408 |       return -1;[0m
      | [0;1;32m                
[0m[1mtermcap.c:412:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |   if (D_CZ1 == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  413 |     D_CZ0 = 0;[0m
      | [0;1;32m              
[0m[1mtermcap.c:417:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  417 |   if (D_TS == 0 || D_FS == 0 || D_DS == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  418 |     D_HS = 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:422:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |       if (D_WS < 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  423 |         D_WS = 0;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:426:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  426 |   if (D_HS && !(hardstatusemu & HSTATUS_ALWAYS))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  427 |     D_has_hstatus = HSTATUS_HS;[0m
      | [0;1;32m                               
[0m[1mtermcap.c:433:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |       if (enc != -1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  434 |         D_encoding = enc;[0m
      | [0;1;32m                         
[0m[1mtermcap.c:437:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |   if (!D_tcs[T_NAVIGATE].str && D_tcs[T_NAVIGATE + 1].str)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  438 |     D_tcs[T_NAVIGATE].str = D_tcs[T_NAVIGATE + 1].str;  /* kh = @1 */[0m
      | [0;1;32m                                                                     
[0m[1mtermcap.c:439:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  439 |   if (!D_tcs[T_NAVIGATE + 2].str && D_tcs[T_NAVIGATE + 3].str)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  440 |     D_tcs[T_NAVIGATE + 2].str = D_tcs[T_NAVIGATE + 3].str; /* kH = @7 */[0m
      | [0;1;32m                                                                        
[0m[1mtermcap.c:466:105: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |   if (D_tcs[T_CAPS].str && D_tcs[T_CAPS + 10].str && !strcmp(D_tcs[T_CAPS].str, D_tcs[T_CAPS + 10].str))[0m
      | [0;1;32m                                                                                                        ^
[0m      | [0;32m                                                                                                         {
[0m  467 |     D_tcs[T_CAPS].str = 0;[0m
      | [0;1;32m                          
[0m[1mtermcap.c:469:86: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |   if (D_tcs[T_NAVIGATE_DELETE].str && !strcmp(D_tcs[T_NAVIGATE_DELETE].str, "\0177"))[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m  470 |     D_tcs[T_NAVIGATE_DELETE].str = 0;[0m
      | [0;1;32m                                     
[0m[1mtermcap.c:472:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |   if (D_tcs[T_CURSOR + 3].str && !strcmp(D_tcs[T_CURSOR + 3].str, "\008"))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  473 |     D_tcs[T_CURSOR + 3].str = 0;[0m
      | [0;1;32m                                
[0m[1mtermcap.c:477:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |   for (i = 0; i < T_OCAPS - T_CAPS; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  478 |     remap(i, 1);[0m
      | [0;1;32m                
[0m[1mtermcap.c:479:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |   for (i = 0; i < kmap_extn; i++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  480 |     remap(i + (KMAP_KEYS+KMAP_AKEYS), 1);[0m
      | [0;1;32m                                         
[0m[1mtermcap.c:499:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  499 | remap(n, map)[0m
      | [0;1;32m^
[0m[1mtermcap.c:525:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  525 |           if (n >= KMAP_KEYS)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  526 |             n -= T_OCAPS-T_CURSOR;[0m
      | [0;1;32m                                  
[0m[1mtermcap.c:529:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |           if (n >= T_CURSOR-T_CAPS)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  530 |             a2 = &tab[n + (T_OCAPS-T_CURSOR)];[0m
      | [0;1;32m                                              
[0m[1mtermcap.c:532:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |       if (s == 0 || l == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  533 |         return 0;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:534:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  534 |       if (a1 && a1->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  535 |         a1 = 0;[0m
      | [0;1;32m               
[0m[1mtermcap.c:536:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |       if (a2 && a2->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  537 |         a2 = 0;[0m
      | [0;1;32m               
[0m[1mtermcap.c:538:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |       if (a1 && a1->nr == RC_STUFF && a1->args[0] && strcmp(a1->args[0], s) == 0)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  539 |         a1 = 0;[0m
      | [0;1;32m               
[0m[1mtermcap.c:540:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |       if (a2 && a2->nr == RC_STUFF && a2->args[0] && strcmp(a2->args[0], s) == 0)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  541 |         a2 = 0;[0m
      | [0;1;32m               
[0m[1mtermcap.c:553:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  553 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  554 |         break;[0m
      | [0;1;32m              
[0m[1mtermcap.c:556:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  556 |   if (n < KMAP_KEYS)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  557 |     domap = 1;[0m
      | [0;1;32m              
[0m[1mtermcap.c:558:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |   if (map == 0 && domap)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  559 |     return 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:560:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |   if (map && !domap)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  561 |     return 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:563:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |   if (map)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  564 |     return addmapseq(s, l, n | fl);[0m
  565 |   else[0m
      | [0;32m  } 
[0m[1mtermcap.c:565:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  565 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  566 |     return remmapseq(s, l);[0m
      | [0;1;32m                           
[0m[1mtermcap.c:575:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |   if (DefaultEsc >= 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  576 |     return;[0m
      | [0;1;32m           
[0m[1mtermcap.c:586:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  586 |               if (umtab[nr].nr == RC_COMMAND)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  587 |                 break;[0m
      | [0;1;32m                      
[0m[1mtermcap.c:588:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  588 |               if (umtab[nr].nr == RC_ILLEGAL && dmtab[nr].nr == RC_COMMAND)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  589 |                 break;[0m
      | [0;1;32m                      
[0m[1mtermcap.c:594:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |               if (kme->um.nr == RC_COMMAND)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  595 |                 break;[0m
      | [0;1;32m                      
[0m[1mtermcap.c:596:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |               if (kme->um.nr == RC_ILLEGAL && kme->dm.nr == RC_COMMAND)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  597 |                 break;[0m
      | [0;1;32m                      
[0m[1mtermcap.c:607:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |   if (odisplay->d_user->u_Esc == -1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  608 |     odisplay->d_user->u_Esc = DefaultEsc;[0m
      | [0;1;32m                                         
[0m[1mtermcap.c:609:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |   if (odisplay->d_user->u_MetaEsc == -1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  610 |     odisplay->d_user->u_MetaEsc = DefaultMetaEsc;[0m
      | [0;1;32m                                                 
[0m[1mtermcap.c:617:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  617 | findseq_ge(seq, k, sp)[0m
      | [0;1;32m^
[0m[1mtermcap.c:632:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |           if (j == k || j == l)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  633 |             j = l - k;[0m
  634 |           else if (p[j] != ((unsigned char *)seq)[j])[0m
      | [0;32m          } 
[0m[1mtermcap.c:634:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |           else if (p[j] != ((unsigned char *)seq)[j])[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  635 |             j = p[j] - ((unsigned char *)seq)[j];[0m
  636 |           else[0m
      | [0;32m          } 
[0m[1mtermcap.c:636:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  637 |             continue;[0m
      | [0;1;32m                     
[0m[1mtermcap.c:652:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  652 | setseqoff(p, i, o)[0m
      | [0;1;32m^
[0m[1mtermcap.c:679:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  679 | addmapseq(seq, k, nr)[0m
      | [0;1;32m^
[0m[1mtermcap.c:687:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  687 |   if (k >= 254)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  688 |     return -1;[0m
      | [0;1;32m              
[0m[1mtermcap.c:707:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |   if (j > 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  708 |     bcopy((char *)p, (char *)p + 2 * k + 4, D_nseqs - i);[0m
      | [0;1;32m                                                         
[0m[1mtermcap.c:708:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  708 |     bcopy((char *)p, (char *)p + 2 * k + 4, D_nseqs - i);[0m
      | [0;1;32m    ^~~~~
[0m[1mtermcap.c:708:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  708 |     bcopy((char *)p, (char *)p + 2 * k + 4, D_nseqs - i);[0m
      | [0;1;32m    ^~~~~
[0m[1mtermcap.c:712:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  712 |   bcopy(seq, (char *)p + 3, k);[0m
      | [0;1;32m  ^~~~~
[0m[1mtermcap.c:712:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  712 |   bcopy(seq, (char *)p + 3, k);[0m
      | [0;1;32m  ^~~~~
[0m[1mtermcap.c:713:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  713 |   bzero(p + k + 3, k + 1);[0m
      | [0;1;32m  ^~~~~
[0m[1mtermcap.c:713:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  713 |   bzero(p + k + 3, k + 1);[0m
      | [0;1;32m  ^~~~~
[0m[1mtermcap.c:735:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |           if (!m && q[3 + j] != seq[j])[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  736 |             m = 1;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:739:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |               if (!mo && m)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  740 |                 setseqoff(q, j, (p - q - 4) / 2);[0m
      | [0;1;32m                                                 
[0m[1mtermcap.c:742:83: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |           else if (q + q[l + 4 + j] * 2 + 4 > p || (q + q[l + 4 + j] * 2 + 4 == p && !m))[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m  743 |             setseqoff(q, j, q[l + 4 + j] + k + 2);[0m
      | [0;1;32m                                                  
[0m[1mtermcap.c:753:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  753 | remmapseq(seq, k)[0m
      | [0;1;32m^
[0m[1mtermcap.c:760:20: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'j' is used in the enclosing expression, the value is never actually read from 'j' [clang-analyzer-deadcode.DeadStores][0m
  760 |   if (k >= 254 || (j = findseq_ge(seq, k, &p)) != 0)[0m
      | [0;1;32m                   ^   ~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtermcap.c:760:20: [0m[0;1;36mnote: [0mAlthough the value stored to 'j' is used in the enclosing expression, the value is never actually read from 'j'[0m
  760 |   if (k >= 254 || (j = findseq_ge(seq, k, &p)) != 0)[0m
      | [0;1;32m                   ^   ~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtermcap.c:760:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  760 |   if (k >= 254 || (j = findseq_ge(seq, k, &p)) != 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  761 |     return -1;[0m
      | [0;1;32m              
[0m[1mtermcap.c:767:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  767 |           if (q + q[l + 4 + j] * 2 + 4 == p)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  768 |             setseqoff(q, j, p[k + 4 + j] ? q[l + 4 + j] + p[k + 4 + j] - k : 0);[0m
  769 |           else if (q + q[l + 4 + j] * 2 + 4 > p)[0m
      | [0;32m          } 
[0m[1mtermcap.c:769:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  769 |           else if (q + q[l + 4 + j] * 2 + 4 > p)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  770 |             q[l + 4 + j] -= k + 2;[0m
      | [0;1;32m                                  
[0m[1mtermcap.c:773:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  773 |   if (D_kmaps + D_nseqs > p + 2 * k + 4)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  774 |     bcopy((char *)p + 2 * k + 4, (char *)p, (D_kmaps + D_nseqs) - (p + 2 * k + 4));[0m
      | [0;1;32m                                                                                   
[0m[1mtermcap.c:774:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  774 |     bcopy((char *)p + 2 * k + 4, (char *)p, (D_kmaps + D_nseqs) - (p + 2 * k + 4));[0m
      | [0;1;32m    ^~~~~
[0m[1mtermcap.c:774:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  774 |     bcopy((char *)p + 2 * k + 4, (char *)p, (D_kmaps + D_nseqs) - (p + 2 * k + 4));[0m
      | [0;1;32m    ^~~~~
[0m[1mtermcap.c:825:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  825 | AddCap(s)[0m
      | [0;1;32m^
[0m[1mtermcap.c:832:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  832 |       strcpy(Termcap + Termcaplen, s);[0m
      | [0;1;32m      ^~~~~~
[0m[1mtermcap.c:832:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  832 |       strcpy(Termcap + Termcaplen, s);[0m
      | [0;1;32m      ^~~~~~
[0m[1mtermcap.c:843:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  843 | MakeTermcap(aflag)[0m
      | [0;1;32m^
[0m[1mtermcap.c:868:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  868 |       sprintf(Termcap, "TERMCAP=%s", s);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtermcap.c:868:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  868 |       sprintf(Termcap, "TERMCAP=%s", s);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtermcap.c:879:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  879 |       strncpy(screenterm, "screen", MAXTERMLEN);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtermcap.c:879:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  879 |       strncpy(screenterm, "screen", MAXTERMLEN);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtermcap.c:891:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  891 |           sprintf(p, "%s.%s", screenterm, tname);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtermcap.c:891:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  891 |           sprintf(p, "%s.%s", screenterm, tname);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtermcap.c:892:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  892 |           if (e_tgetent(buf, p) == 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  893 |             break;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:898:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  898 |           sprintf(p, "%s-bce", screenterm);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtermcap.c:898:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  898 |           sprintf(p, "%s-bce", screenterm);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtermcap.c:899:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  899 |           if (e_tgetent(buf, p) == 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  900 |             break;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:911:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  911 |       strcpy(p, screenterm);[0m
      | [0;1;32m      ^~~~~~
[0m[1mtermcap.c:911:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  911 |       strcpy(p, screenterm);[0m
      | [0;1;32m      ^~~~~~
[0m[1mtermcap.c:912:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  912 |       if (e_tgetent(buf, p) == 1)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  913 |         break;[0m
      | [0;1;32m              
[0m[1mtermcap.c:914:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  914 |       strcpy(p, "vt100");[0m
      | [0;1;32m      ^~~~~~
[0m[1mtermcap.c:914:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  914 |       strcpy(p, "vt100");[0m
      | [0;1;32m      ^~~~~~
[0m[1mtermcap.c:936:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  936 |   if (strlen(Term) > TERMCAP_BUFSIZE - 40)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  937 |     strcpy(Term, "too_long");[0m
      | [0;1;32m                             
[0m[1mtermcap.c:938:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  938 |   sprintf(Termcap, "TERMCAP=SC|%s|VT 100/ANSI X3.64 virtual terminal:", Term + 5);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtermcap.c:938:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  938 |   sprintf(Termcap, "TERMCAP=SC|%s|VT 100/ANSI X3.64 virtual terminal:", Term + 5);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtermcap.c:955:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  955 |       strcpy(Termcap + Termcaplen, (char *)TermcapConst);[0m
      | [0;1;32m      ^~~~~~
[0m[1mtermcap.c:955:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  955 |       strcpy(Termcap + Termcaplen, (char *)TermcapConst);[0m
      | [0;1;32m      ^~~~~~
[0m[1mtermcap.c:958:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  958 |   sprintf(buf, "li#%d:co#%d:", he, wi);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtermcap.c:958:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  958 |   sprintf(buf, "li#%d:co#%d:", he, wi);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtermcap.c:973:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  973 |   else if (D_SR)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  974 |     AddCap("sr=\\EM:");[0m
      | [0;1;32m                       
[0m[1mtermcap.c:975:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  975 |   if (aflag || D_CS)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  976 |     AddCap("cs=\\E[%i%d;%dr:");[0m
      | [0;1;32m                               
[0m[1mtermcap.c:1015:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1015 |       if (D_MB)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1016 |         AddCap("mb=\\E[5m:");[0m
      | [0;1;32m                             
[0m[1mtermcap.c:1017:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1017 |       if (D_MD)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1018 |         AddCap("md=\\E[1m:");[0m
      | [0;1;32m                             
[0m[1mtermcap.c:1019:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1019 |       if (D_MH)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1020 |         AddCap("mh=\\E[2m:");[0m
      | [0;1;32m                             
[0m[1mtermcap.c:1021:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |       if (D_MR)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1022 |         AddCap("mr=\\E[7m:");[0m
      | [0;1;32m                             
[0m[1mtermcap.c:1023:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |       if (D_MB || D_MD || D_MH || D_MR)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1024 |         AddCap("me=\\E[m:ms:");[0m
      | [0;1;32m                               
[0m[1mtermcap.c:1025:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |       if (D_hascolor)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1026 |         AddCap("Co#8:pa#64:AF=\\E[3%dm:AB=\\E[4%dm:op=\\E[39;49m:AX:");[0m
      | [0;1;32m                                                                       
[0m[1mtermcap.c:1027:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |       if (D_VB)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1028 |         AddCap("vb=\\Eg:");[0m
      | [0;1;32m                           
[0m[1mtermcap.c:1041:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1041 |       if (D_CG0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1042 |         AddCap("G0:");[0m
      | [0;1;32m                      
[0m[1mtermcap.c:1060:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1060 |       if (D_CWS)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1061 |         AddCap("WS=\\E[8;%d;%dt:");[0m
      | [0;1;32m                                   
[0m[1mtermcap.c:1069:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1069 |           if (i >= T_KEYPAD)    /* don't put keypad codes in TERMCAP */[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1070 |             continue;           /* - makes it too big */[0m
      | [0;1;32m                                                        
[0m[1mtermcap.c:1072:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1072 |           if (i >= T_FEXTRA && i < T_BACKTAB) /* also skip extra vt220 keys */[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1073 |             continue;[0m
      | [0;1;32m                     
[0m[1mtermcap.c:1074:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1074 |           if (i > T_BACKTAB && i < T_NAVIGATE) /* more vt220 keys */[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1075 |             continue;[0m
      | [0;1;32m                     
[0m[1mtermcap.c:1080:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1080 |               if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1081 |                 act = &dmtab[i - (T_CURSOR - T_OCAPS + T_CAPS)];[0m
      | [0;1;32m                                                                
[0m[1mtermcap.c:1086:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1086 |               if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1087 |                 act = &dmtab[i - T_CAPS];[0m
      | [0;1;32m                                         
[0m[1mtermcap.c:1093:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1093 |               if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1094 |                 act = &dmtab[i - T_CAPS - 1];[0m
      | [0;1;32m                                             
[0m[1mtermcap.c:1107:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1107 |       if (display == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1108 |         continue;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:1112:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1112 |           if (D_tcs[i].str == 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1113 |             break;[0m
 1114 |           MakeString(term[i].tcname, buf, sizeof(buf), D_tcs[i].str);[0m
 1115 |           AddCap(buf);[0m
 1116 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtermcap.c:1112:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1112 |           if (D_tcs[i].str == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1113 |             break;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:1118:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1118 |           if (D_tcs[i].flg == 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1119 |             break;[0m
 1120 |           sprintf(buf, "%s:", term[i].tcname);[0m
 1121 |           AddCap(buf);[0m
 1122 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtermcap.c:1118:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1118 |           if (D_tcs[i].flg == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1119 |             break;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:1120:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1120 |           sprintf(buf, "%s:", term[i].tcname);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtermcap.c:1120:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1120 |           sprintf(buf, "%s:", term[i].tcname);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtermcap.c:1124:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1124 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mtermcap.c:1133:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1133 | DumpTermcap(aflag, f)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1140:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1140 |   if ((p = index(MakeTermcap(aflag), '=')) == NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1141 |     return;[0m
      | [0;1;32m           
[0m[1mtermcap.c:1157:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1157 |   if(*p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1158 |     fwrite(p, 1, strlen(p), f);[0m
      | [0;1;32m                               
[0m[1mtermcap.c:1163:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1163 | MakeString(cap, buf, buflen, s)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1181:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1181 |           *p++ = '\\';[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1182 |           *p++ = 'E';[0m
 1183 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtermcap.c:1185:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1185 |           strcpy(p, "\\072");[0m
      | [0;1;32m          ^~~~~~
[0m[1mtermcap.c:1185:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1185 |           strcpy(p, "\\072");[0m
      | [0;1;32m          ^~~~~~
[0m[1mtermcap.c:1185:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1185 |           strcpy(p, "\\072");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1186 |           p += 4;[0m
 1187 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtermcap.c:1191:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1191 |           *p++ = c;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1192 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtermcap.c:1194:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1194 |           if (c >= 200)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1195 |             {[0m
 1196 |               sprintf(p, "\\%03o", c & 0377);[0m
 1197 |               p += 4;[0m
 1198 |             }[0m
 1199 |           else if (c < ' ')[0m
 1200 |             {[0m
 1201 |               *p++ = '^';[0m
 1202 |               *p++ = c + '@';[0m
 1203 |             }[0m
 1204 |           else[0m
 1205 |             *p++ = c;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mtermcap.c:1196:8: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1196 |               sprintf(p, "\\%03o", c & 0377);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mtermcap.c:1196:8: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1196 |               sprintf(p, "\\%03o", c & 0377);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mtermcap.c:1204:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1204 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1205 |             *p++ = c;[0m
      | [0;1;32m                     
[0m[1mtermcap.c:1219:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1219 | CreateTransTable(s)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1238:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1238 |       if (QUOTES(s))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1239 |         s++;[0m
      | [0;1;32m            
[0m[1mtermcap.c:1241:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1241 |       if (curchar == 'B')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1242 |         curchar = 0;    /* ASCII */[0m
      | [0;1;32m                                   
[0m[1mtermcap.c:1258:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1258 |           if (QUOTES(s))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1259 |               s++;[0m
 1260 |           else if (*s == '%')[0m
      | [0;32m          } 
[0m[1mtermcap.c:1267:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1267 |       if (*s++ == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1268 |         break;[0m
      | [0;1;32m              
[0m[1mtermcap.c:1272:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1272 |           if (QUOTES((s - 1)))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1273 |             c = (unsigned char)*s++;[0m
 1274 |           else if (c == '%')[0m
      | [0;32m          } 
[0m[1mtermcap.c:1274:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1274 |           else if (c == '%')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1275 |             c = 256;[0m
      | [0;1;32m                    
[0m[1mtermcap.c:1276:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1276 |           if (ctable[c])[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1277 |             free(ctable[c]);[0m
      | [0;1;32m                            
[0m[1mtermcap.c:1280:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1280 |           if (c != 256)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1281 |             l = l * templnsub + templlen;[0m
      | [0;1;32m                                         
[0m[1mtermcap.c:1291:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1291 |               if (QUOTES(p))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1292 |                 p++;[0m
 1293 |               else if (*p == '%')[0m
      | [0;32m              } 
[0m[1mtermcap.c:1299:8: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1299 |               *sx++ = *p;[0m
      | [0;1;32m              ^~~~~
[0m[1mtermcap.c:1230:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1230 |   if ((D_xtable = (char ***)calloc(256, sizeof(char **))) == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtermcap.c:1230:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1230 |   if ((D_xtable = (char ***)calloc(256, sizeof(char **))) == 0)[0m
      | [0;1;32m  ^
[0m[1mtermcap.c:1236:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1236 |   while (*s)[0m
      | [0;1;32m  ^
[0m[1mtermcap.c:1238:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1238 |       if (QUOTES(s))[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1215:4: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m   ^~~~~~~~~~
[0m[1mtermcap.c:1238:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1238 |       if (QUOTES(s))[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1215:15: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1241:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1241 |       if (curchar == 'B')[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1mtermcap.c:1241:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1241 |       if (curchar == 'B')[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1246:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1246 |       if (D_xtable[curchar] == 0)[0m
      | [0;1;32m          ^
[0m[1m./display.h:287:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_xtable'[0m
  287 | #define D_xtable        DISPLAY(d_xtable)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mtermcap.c:1246:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1246 |       if (D_xtable[curchar] == 0)[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1248:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1248 |           if ((D_xtable[curchar] = (char **)calloc(257, sizeof(char *))) == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtermcap.c:1248:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1248 |           if ((D_xtable[curchar] = (char **)calloc(257, sizeof(char *))) == 0)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1256:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1256 |       for(; *s && *s != ','; s++)[0m
      | [0;1;32m            ^~
[0m[1mtermcap.c:1256:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtermcap.c:1256:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1256 |       for(; *s && *s != ','; s++)[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mtermcap.c:1256:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1267[0m
 1256 |       for(; *s && *s != ','; s++)[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1267:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1267 |       if (*s++ == 0)[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1269:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1269 |       while (*s && *s != ',')[0m
      | [0;1;32m             ^~
[0m[1mtermcap.c:1269:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtermcap.c:1269:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1269 |       while (*s && *s != ',')[0m
      | [0;1;32m                   ^~~~~~~~~
[0m[1mtermcap.c:1269:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1269 |       while (*s && *s != ',')[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1272:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1272 |           if (QUOTES((s - 1)))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1215:4: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m   ^~~~~~~~~~
[0m[1mtermcap.c:1272:8: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1272 |           if (QUOTES((s - 1)))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1215:15: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1274:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1274 |           else if (c == '%')[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mtermcap.c:1274:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1274 |           else if (c == '%')[0m
      | [0;1;32m               ^
[0m[1mtermcap.c:1276:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1276 |           if (ctable[c])[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mtermcap.c:1276:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1276 |           if (ctable[c])[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1280:8: [0m[0;1;36mnote: [0m'c' is not equal to 256[0m
 1280 |           if (c != 256)[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1280:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1280 |           if (c != 256)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1282:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1282 |           if ((ctable[c] = (char *)malloc(l + 1)) == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtermcap.c:1282:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1282 |           if ((ctable[c] = (char *)malloc(l + 1)) == 0)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1289:15: [0m[0;1;36mnote: [0m'c' is not equal to 256[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                     ^
[0m[1mtermcap.c:1289:14: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                    ^
[0m[1mtermcap.c:1289:41: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                                               ^~
[0m[1mtermcap.c:1289:41: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtermcap.c:1289:47: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                                                     ^~~~~~~~~
[0m[1mtermcap.c:1289:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1291:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1291 |               if (QUOTES(p))[0m
      | [0;1;32m                  ^
[0m[1mtermcap.c:1215:4: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m   ^~~~~~~~~~
[0m[1mtermcap.c:1291:12: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1291 |               if (QUOTES(p))[0m
      | [0;1;32m                  ^
[0m[1mtermcap.c:1215:15: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1293:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1293 |               else if (*p == '%')[0m
      | [0;1;32m                       ^~~~~~~~~
[0m[1mtermcap.c:1293:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1293 |               else if (*p == '%')[0m
      | [0;1;32m                   ^
[0m[1mtermcap.c:1289:41: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                                               ^~
[0m[1mtermcap.c:1289:41: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtermcap.c:1289:47: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                                                     ^~~~~~~~~
[0m[1mtermcap.c:1289:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1291:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1291 |               if (QUOTES(p))[0m
      | [0;1;32m                  ^
[0m[1mtermcap.c:1215:4: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m   ^~~~~~~~~~
[0m[1mtermcap.c:1291:12: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1291 |               if (QUOTES(p))[0m
      | [0;1;32m                  ^
[0m[1mtermcap.c:1215:15: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1293:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1293 |               else if (*p == '%')[0m
      | [0;1;32m                       ^~~~~~~~~
[0m[1mtermcap.c:1293:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1293 |               else if (*p == '%')[0m
      | [0;1;32m                   ^
[0m[1mtermcap.c:1299:8: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'char' element[0m
 1299 |               *sx++ = *p;[0m
      | [0;1;32m              ^~~~~
[0m[1mtermcap.c:1301:4: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1301 |           *sx = 0;[0m
      | [0;1;32m          ^~~
[0m[1mtermcap.c:1230:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1230 |   if ((D_xtable = (char ***)calloc(256, sizeof(char **))) == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtermcap.c:1230:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1230 |   if ((D_xtable = (char ***)calloc(256, sizeof(char **))) == 0)[0m
      | [0;1;32m  ^
[0m[1mtermcap.c:1236:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1236 |   while (*s)[0m
      | [0;1;32m  ^
[0m[1mtermcap.c:1238:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1238 |       if (QUOTES(s))[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1215:4: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m   ^~~~~~~~~~
[0m[1mtermcap.c:1238:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1238 |       if (QUOTES(s))[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1215:15: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1241:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1241 |       if (curchar == 'B')[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1mtermcap.c:1241:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1241 |       if (curchar == 'B')[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1246:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1246 |       if (D_xtable[curchar] == 0)[0m
      | [0;1;32m          ^
[0m[1m./display.h:287:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_xtable'[0m
  287 | #define D_xtable        DISPLAY(d_xtable)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mtermcap.c:1246:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1246 |       if (D_xtable[curchar] == 0)[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1248:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1248 |           if ((D_xtable[curchar] = (char **)calloc(257, sizeof(char *))) == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtermcap.c:1248:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1248 |           if ((D_xtable[curchar] = (char **)calloc(257, sizeof(char *))) == 0)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1256:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1256 |       for(; *s && *s != ','; s++)[0m
      | [0;1;32m            ^~
[0m[1mtermcap.c:1256:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtermcap.c:1256:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1256 |       for(; *s && *s != ','; s++)[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mtermcap.c:1256:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1267[0m
 1256 |       for(; *s && *s != ','; s++)[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1267:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1267 |       if (*s++ == 0)[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1269:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1269 |       while (*s && *s != ',')[0m
      | [0;1;32m             ^~
[0m[1mtermcap.c:1269:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtermcap.c:1269:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1269 |       while (*s && *s != ',')[0m
      | [0;1;32m                   ^~~~~~~~~
[0m[1mtermcap.c:1269:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1269 |       while (*s && *s != ',')[0m
      | [0;1;32m      ^
[0m[1mtermcap.c:1272:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1272 |           if (QUOTES((s - 1)))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1215:4: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m   ^~~~~~~~~~
[0m[1mtermcap.c:1272:8: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1272 |           if (QUOTES((s - 1)))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1215:15: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1274:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1274 |           else if (c == '%')[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mtermcap.c:1274:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1274 |           else if (c == '%')[0m
      | [0;1;32m               ^
[0m[1mtermcap.c:1276:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1276 |           if (ctable[c])[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mtermcap.c:1276:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1276 |           if (ctable[c])[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1280:8: [0m[0;1;36mnote: [0m'c' is not equal to 256[0m
 1280 |           if (c != 256)[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1280:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1280 |           if (c != 256)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1282:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1282 |           if ((ctable[c] = (char *)malloc(l + 1)) == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtermcap.c:1282:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1282 |           if ((ctable[c] = (char *)malloc(l + 1)) == 0)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1289:15: [0m[0;1;36mnote: [0m'c' is not equal to 256[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                     ^
[0m[1mtermcap.c:1289:14: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                    ^
[0m[1mtermcap.c:1289:41: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                                               ^~
[0m[1mtermcap.c:1289:41: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtermcap.c:1289:47: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                                                     ^~~~~~~~~
[0m[1mtermcap.c:1289:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m          ^
[0m[1mtermcap.c:1291:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1291 |               if (QUOTES(p))[0m
      | [0;1;32m                  ^
[0m[1mtermcap.c:1215:4: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m   ^~~~~~~~~~
[0m[1mtermcap.c:1291:12: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1291 |               if (QUOTES(p))[0m
      | [0;1;32m                  ^
[0m[1mtermcap.c:1215:15: [0m[0;1;36mnote: [0mexpanded from macro 'QUOTES'[0m
 1215 |   (*p == '\\' && (p[1] == '\\' || p[1] == ',' || p[1] == '%'))[0m
      | [0;1;32m              ^
[0m[1mtermcap.c:1293:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1293 |               else if (*p == '%')[0m
      | [0;1;32m                       ^~~~~~~~~
[0m[1mtermcap.c:1293:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1293 |               else if (*p == '%')[0m
      | [0;1;32m                   ^
[0m[1mtermcap.c:1289:41: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                                               ^~
[0m[1mtermcap.c:1289:44: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1289 |           for (p = ((c == 256) ? "%" : templ); *p && *p != ','; p++)[0m
      | [0;1;32m                                                  ^
[0m[1mtermcap.c:1301:4: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'char' element[0m
 1301 |           *sx = 0;[0m
      | [0;1;32m          ^~~
[0m[1mtermcap.c:1305:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1305 |       if (*s == ',')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1306 |         s++;[0m
      | [0;1;32m            
[0m[1mtermcap.c:1317:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1317 |   if ((p = D_xtable) == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1318 |     return;[0m
      | [0;1;32m           
[0m[1mtermcap.c:1321:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1321 |       if (*p == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1322 |         continue;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:1324:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |       for (j = 0; j < 257; j++, q++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1325 |         if (*q)[0m
 1326 |           free(*q);[0m
      | [0;1;32m                   
[0m[1mtermcap.c:1325:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1325 |         if (*q)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1326 |           free(*q);[0m
      | [0;1;32m                   
[0m[1mtermcap.c:1335:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1335 | copyarg(pp, s)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1343:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1343 |       if (QUOTES(p))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1344 |         p++;[0m
      | [0;1;32m            
[0m[1mtermcap.c:1345:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1345 |       if (s)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1346 |         *s++ = *p;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:1349:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1349 |   if (*p == ',')[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1350 |     p++;[0m
      | [0;1;32m        
[0m[1mtermcap.c:1363:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1363 | e_tgetent(bp, name)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1388:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1388 | findcap(cap, tepp, n)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1398:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1398 |   if (!extra_incap)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1399 |     return 0;[0m
      | [0;1;32m             
[0m[1mtermcap.c:1410:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1410 |           if (c && c != ':' && c != '@')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1411 |             p++;[0m
      | [0;1;32m                
[0m[1mtermcap.c:1412:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1412 |           if (c == 0 || c == '@' || c == '=' || c == ':' || c == '#')[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1413 |             cp = tep;[0m
      | [0;1;32m                     
[0m[1mtermcap.c:1420:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1420 |               if (c == ':')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1421 |                 break;[0m
      | [0;1;32m                      
[0m[1mtermcap.c:1422:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1422 |               if (c == '^')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1423 |                 mode = 1;[0m
      | [0;1;32m                         
[0m[1mtermcap.c:1424:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1424 |               if (c == '\\')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1425 |                 mode = 2;[0m
      | [0;1;32m                         
[0m[1mtermcap.c:1448:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1448 |                   num = 0;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1449 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mtermcap.c:1451:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1451 |                   c = 27;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1452 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mtermcap.c:1454:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1454 |                   c = '\n';[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1455 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mtermcap.c:1457:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1457 |                   c = '\r';[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1458 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mtermcap.c:1460:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1460 |                   c = '\t';[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1461 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mtermcap.c:1463:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1463 |                   c = '\b';[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1464 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mtermcap.c:1466:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1466 |                   c = '\f';[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 1467 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mtermcap.c:1479:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1479 |           if (mode)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1480 |             continue;[0m
      | [0;1;32m                     
[0m[1mtermcap.c:1500:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1500 | e_tgetstr(cap, tepp)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1505:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1505 |   if ((tep = findcap(cap, tepp, 0)))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1506 |     return (*tep == '@') ? 0 : tep;[0m
      | [0;1;32m                                   
[0m[1mtermcap.c:1511:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1511 | e_tgetflag(cap)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1517:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1517 |   if ((tep = findcap(cap, &bufp, 2)))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1518 |     return (*tep == '@') ? 0 : 1;[0m
      | [0;1;32m                                 
[0m[1mtermcap.c:1523:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1523 | e_tgetnum(cap)[0m
      | [0;1;32m^
[0m[1mtermcap.c:1534:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1534 |       if (c == '@')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1535 |         return -1;[0m
      | [0;1;32m                  
[0m[1mtermcap.c:1536:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1536 |       if (c == '0')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1537 |         base = 8;[0m
      | [0;1;32m                 
[0m[1mtermcap.c:1539:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1539 |       while ((c = *tep++) >= '0' && c <= '9')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1540 |         res = res * base + (c - '0');[0m
      | [0;1;32m                                     
[0m212 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[29/38][211.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpoauj9_jh.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/screen.c
[1mscreen.c:276:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  276 | static int lf_secreopen(name, wantfd, l)[0m
      | [0;1;32m           ^
[0m[1mscreen.c:298:24: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  298 | static struct passwd * getpwbyname(name, ppp)[0m
      | [0;1;32m                       ^
[0m[1mscreen.c:309:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |   if (!ppp && !(ppp = getpwnam(name)))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  310 |     return NULL;[0m
      | [0;1;32m                
[0m[1mscreen.c:317:109: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |   if (ppp->pw_passwd[0] == '#' && ppp->pw_passwd[1] == '#' && strcmp(ppp->pw_passwd + 2, ppp->pw_name) == 0)[0m
      | [0;1;32m                                                                                                            ^
[0m      | [0;32m                                                                                                             {
[0m  318 |     n = 13;[0m
      | [0;1;32m           
[0m[1mscreen.c:324:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |              (c >= 'A' && c <= 'Z')))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  325 |         break;[0m
      | [0;1;32m              
[0m[1mscreen.c:333:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |           if (spw)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  334 |             free(spw);[0m
      | [0;1;32m                      
[0m[1mscreen.c:342:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |   if (n < 13)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  343 |     ppp->pw_passwd = 0;[0m
      | [0;1;32m                       
[0m[1mscreen.c:345:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |   if (ppp->pw_passwd && strlen(ppp->pw_passwd) == 13 + 11)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  346 |     ppp->pw_passwd[13] = 0;     /* beware of linux's long passwords */[0m
      | [0;1;32m                                                                      
[0m[1mscreen.c:357:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |     if (s == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  358 |       s = getenv("LC_CTYPE");[0m
      | [0;1;32m                             
[0m[1mscreen.c:359:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |     if (s == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  360 |       s = getenv("LANG");[0m
      | [0;1;32m                         
[0m[1mscreen.c:410:3: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  410 |   snprintf(version, 59, "%d.%.2d.%.2d%s (%s%s) %s", REV, VERS,[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mscreen.c:410:3: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  410 |   snprintf(version, 59, "%d.%.2d.%.2d%s (%s%s) %s", REV, VERS,[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mscreen.c:503:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  503 |   strncpy(screenterm, "screen", MAXTERMLEN);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mscreen.c:503:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  503 |   strncpy(screenterm, "screen", MAXTERMLEN);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mscreen.c:540:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |           if (ap[1] == '-' && !strcmp(ap, "--help"))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  541 |             exit_with_usage(myname, NULL, NULL);[0m
      | [0;1;32m                                                
[0m[1mscreen.c:557:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  557 |             nwin_options.aflag = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  558 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:561:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  561 |             adaptflag = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  562 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:565:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  565 |             if (*++ap)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  566 |               preselect = ap;[0m
  567 |             else {[0m
  568 |               if (!--ac)[0m
  569 |                 exit_with_usage(myname, "Specify a window to preselect with -p", NULL);[0m
  570 |               preselect = *++av;[0m
  571 |             }[0m
  572 |             ap = NULL;[0m
  573 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:565:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  565 |             if (*++ap)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  566 |               preselect = ap;[0m
  567 |             else {[0m
      | [0;32m            } 
[0m[1mscreen.c:568:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  568 |               if (!--ac)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  569 |                 exit_with_usage(myname, "Specify a window to preselect with -p", NULL);[0m
      | [0;1;32m                                                                                       
[0m[1mscreen.c:582:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  582 |             if (*++ap)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  583 |               RcFileName = ap;[0m
  584 |             else {[0m
  585 |               if (--ac == 0)[0m
  586 |                 exit_with_usage(myname, "Specify an alternate rc-filename with -c", NULL);[0m
  587 |               RcFileName = *++av;[0m
  588 |             }[0m
  589 |             ap = NULL;[0m
  590 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:582:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |             if (*++ap)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  583 |               RcFileName = ap;[0m
  584 |             else {[0m
      | [0;32m            } 
[0m[1mscreen.c:585:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |               if (--ac == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  586 |                 exit_with_usage(myname, "Specify an alternate rc-filename with -c", NULL);[0m
      | [0;1;32m                                                                                          
[0m[1mscreen.c:593:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  593 |                     if (!*++ap) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  594 |               if (--ac == 0)[0m
  595 |                 exit_with_usage(myname, "Specify command characters with -e", NULL);[0m
  596 |               ap = *++av;[0m
  597 |             }[0m
  598 |             if (ParseEscape(ap))[0m
  599 |               Panic(0, "Two characters are required with -e option, not '%s'.", ap);[0m
  600 |             ap = NULL;[0m
  601 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:594:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |               if (--ac == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  595 |                 exit_with_usage(myname, "Specify command characters with -e", NULL);[0m
      | [0;1;32m                                                                                    
[0m[1mscreen.c:598:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  598 |             if (ParseEscape(ap))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  599 |               Panic(0, "Two characters are required with -e option, not '%s'.", ap);[0m
      | [0;1;32m                                                                                    
[0m[1mscreen.c:604:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  604 |             ap++;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mscreen.c:609:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  609 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mscreen.c:611:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  611 |                 ap--;[0m
      | [0;1;32m                ^   
[0m      | [0;32m                {   ;} 
[0m[1mscreen.c:616:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  616 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mscreen.c:618:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  618 |                 nwin_options.flowflag = FLOW_AUTOFLAG;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  619 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mscreen.c:621:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  621 |                 exit_with_usage(myname, "Unknown flow option -%s", --ap);[0m
      | [0;1;32m                ^                                                       
[0m      | [0;32m                {                                                       ;} 
[0m[1mscreen.c:626:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  626 |             if (--ac == 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  627 |               exit_with_usage(myname, NULL, NULL);[0m
  628 |             nwin_options.histheight = atoi(*++av);[0m
  629 |             if (nwin_options.histheight < 0)[0m
  630 |               exit_with_usage(myname, "-h: %s: negative scrollback size?", *av);[0m
  631 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:626:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |             if (--ac == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  627 |               exit_with_usage(myname, NULL, NULL);[0m
      | [0;1;32m                                                  
[0m[1mscreen.c:629:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  629 |             if (nwin_options.histheight < 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  630 |               exit_with_usage(myname, "-h: %s: negative scrollback size?", *av);[0m
      | [0;1;32m                                                                                
[0m[1mscreen.c:634:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  634 |             iflag = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  635 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:638:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  638 |             if (--ac == 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  639 |               exit_with_usage(myname, "Specify a new window-name with -t", NULL);[0m
  640 |             nwin_options.aka = *++av;[0m
  641 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:638:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  638 |             if (--ac == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  639 |               exit_with_usage(myname, "Specify a new window-name with -t", NULL);[0m
      | [0;1;32m                                                                                 
[0m[1mscreen.c:644:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  644 |             ap++;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mscreen.c:649:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  649 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mscreen.c:651:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  651 |                 ap--;[0m
      | [0;1;32m                ^   
[0m      | [0;32m                {   ;} 
[0m[1mscreen.c:656:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  656 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mscreen.c:658:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |                 nwin_options.lflag = 3;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  659 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mscreen.c:663:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  663 |                 if (ac > 1 && !SockMatch) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  664 |                   SockMatch = *++av;[0m
  665 |                   ac--;[0m
  666 |                 }[0m
  667 |                 ap = NULL;[0m
  668 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mscreen.c:670:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  670 |                 exit_with_usage(myname, "%s: Unknown suboption to -l", --ap);[0m
      | [0;1;32m                ^                                                           
[0m      | [0;32m                {                                                           ;} 
[0m[1mscreen.c:675:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  675 |             if (strcmp(ap+1, "ipe"))[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  676 |               exit_with_usage(myname, "Unknown option %s", --ap);[0m
  677 |             lsflag = 1;[0m
  678 |             wipeflag = 1;[0m
  679 |             if (ac > 1 && !SockMatch) {[0m
  680 |               SockMatch = *++av;[0m
  681 |               ac--;[0m
  682 |             }[0m
  683 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:675:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  675 |             if (strcmp(ap+1, "ipe"))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  676 |               exit_with_usage(myname, "Unknown option %s", --ap);[0m
      | [0;1;32m                                                                 
[0m[1mscreen.c:686:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  686 |             if (!strcmp(ap + 1, "ogfile")) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  687 |               if (--ac == 0)[0m
  688 |                 exit_with_usage(myname, "Specify logfile path with -Logfile", NULL);[0m
  689 | [0m
  690 |               if (strlen(*++av) > PATH_MAX)[0m
  691 |                 Panic(1, "-Logfile name too long. (max. %d char)", PATH_MAX);[0m
  692 | [0m
  693 |               free(screenlogfile); /* we already set it up while starting */[0m
  694 |               screenlogfile = SaveStr(*av);[0m
  695 | [0m
  696 |               ap = NULL;[0m
  697 |             } else if (!strcmp(ap, "L"))[0m
  698 |               nwin_options.Lflag = 1;[0m
  699 | [0m
  700 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:687:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  687 |               if (--ac == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  688 |                 exit_with_usage(myname, "Specify logfile path with -Logfile", NULL);[0m
      | [0;1;32m                                                                                    
[0m[1mscreen.c:690:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  690 |               if (strlen(*++av) > PATH_MAX)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  691 |                 Panic(1, "-Logfile name too long. (max. %d char)", PATH_MAX);[0m
      | [0;1;32m                                                                             
[0m[1mscreen.c:697:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  697 |             } else if (!strcmp(ap, "L"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  698 |               nwin_options.Lflag = 1;[0m
      | [0;1;32m                                     
[0m[1mscreen.c:703:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  703 |             mflag = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  704 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:707:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  707 |             force_vt = 0;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  708 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:711:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  711 |             if (--ac == 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  712 |               exit_with_usage(myname, "Specify terminal-type with -T", NULL);[0m
  713 |             if (strlen(*++av) < MAXTERMLEN) {[0m
  714 |               strncpy(screenterm, *av, MAXTERMLEN);[0m
  715 |               screenterm[MAXTERMLEN] = '\0';[0m
  716 |             } else[0m
  717 |               Panic(0, "-T: terminal name too long. (max. %d char)", MAXTERMLEN);[0m
  718 |             nwin_options.term = screenterm;[0m
  719 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:711:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |             if (--ac == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  712 |               exit_with_usage(myname, "Specify terminal-type with -T", NULL);[0m
      | [0;1;32m                                                                             
[0m[1mscreen.c:714:15: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  714 |               strncpy(screenterm, *av, MAXTERMLEN);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mscreen.c:714:15: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  714 |               strncpy(screenterm, *av, MAXTERMLEN);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mscreen.c:716:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  716 |             } else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  717 |               Panic(0, "-T: terminal name too long. (max. %d char)", MAXTERMLEN);[0m
      | [0;1;32m                                                                                 
[0m[1mscreen.c:722:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  722 |             quietflag = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  723 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:726:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  726 |             queryflag = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  727 |             cmdflag = 1;[0m
  728 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:741:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  741 |             if (*ap == 'x')[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  742 |               xflag = 1;[0m
  743 | #endif[0m
  744 |             if (rflag)[0m
  745 |               rflag = 2;[0m
  746 |             rflag += (*ap == 'R') ? 2 : 1;[0m
  747 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:741:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |             if (*ap == 'x')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  742 |               xflag = 1;[0m
      | [0;1;32m                        
[0m[1mscreen.c:744:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |             if (rflag)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  745 |               rflag = 2;[0m
      | [0;1;32m                        
[0m[1mscreen.c:751:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  751 |             dflag = 1;[0m
      | [0;1;32m            ^        
[0m      | [0;32m            {        ;} 
[0m[1mscreen.c:755:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  755 |             if (!dflag)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  756 |               dflag = 2;[0m
  757 |             if (ac == 2) {[0m
  758 |               if (*av[1] != '-' && !SockMatch) {[0m
  759 |                 SockMatch = *++av;[0m
  760 |                 ac--;[0m
  761 |                 debug2("dflag=%d, SockMatch=%s\n", dflag, SockMatch);[0m
  762 |               }[0m
  763 |             }[0m
  764 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:755:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |             if (!dflag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  756 |               dflag = 2;[0m
      | [0;1;32m                        
[0m[1mscreen.c:768:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  768 |             if (--ac == 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  769 |               exit_with_usage(myname, "Specify shell with -s", NULL);[0m
  770 |             if (ShellProg)[0m
  771 |               free(ShellProg);[0m
  772 |             ShellProg = SaveStr(*++av);[0m
  773 |             debug1("ShellProg: '%s'\n", ShellProg);[0m
  774 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:768:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  768 |             if (--ac == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  769 |               exit_with_usage(myname, "Specify shell with -s", NULL);[0m
      | [0;1;32m                                                                     
[0m[1mscreen.c:770:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  770 |             if (ShellProg)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  771 |               free(ShellProg);[0m
      | [0;1;32m                              
[0m[1mscreen.c:777:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  777 |             if (!SockMatch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  778 |               if (--ac == 0)[0m
  779 |                 exit_with_usage(myname, "Specify session-name with -S", NULL);[0m
  780 |               SockMatch = *++av;[0m
  781 |               debug1("SockMatch: '%s'\n", SockMatch);[0m
  782 |               debug1("SockMatch len: '%d'\n", (int)strlen(SockMatch));[0m
  783 |               if (strlen(SockMatch) > 80)[0m
  784 |                 exit_with_usage(myname, "Session-name is too long (max length is 80 symbols)", NULL);[0m
  785 |             }[0m
  786 |             if (!*SockMatch)[0m
  787 |               exit_with_usage(myname, "Empty session-name?", NULL);[0m
  788 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:778:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  778 |               if (--ac == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  779 |                 exit_with_usage(myname, "Specify session-name with -S", NULL);[0m
      | [0;1;32m                                                                              
[0m[1mscreen.c:783:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  783 |               if (strlen(SockMatch) > 80)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  784 |                 exit_with_usage(myname, "Session-name is too long (max length is 80 symbols)", NULL);[0m
      | [0;1;32m                                                                                                     
[0m[1mscreen.c:786:18: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'SockMatch') [clang-analyzer-core.NullDereference][0m
  786 |             if (!*SockMatch)[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mscreen.c:372:19: [0m[0;1;36mnote: [0m'ac' is not equal to 0[0m
  372 |   char *myname = (ac == 0) ? "screen" : av[0];[0m
      | [0;1;32m                  ^~
[0m[1mscreen.c:372:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  372 |   char *myname = (ac == 0) ? "screen" : av[0];[0m
      | [0;1;32m                 ^
[0m[1mscreen.c:413:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  413 |   debug2("-- screen debug started %s (%s)\n", *av, version);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:415:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  415 |   debug("POSIX\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:418:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  418 |   debug("TERMIO\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:427:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  427 |   debug("Window size changing enabled\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:430:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  430 |   debug("SETREUID\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:439:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  439 |   debug("USEBCOPY\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:442:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  442 |   debug("UTMPOK\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:445:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  445 |   debug("LOADAV\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:448:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  448 |   debug("NETHACK\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:451:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  451 |   debug("TERMINFO\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:454:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  454 |   debug("SHADOWPW\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:457:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  457 |   debug1("NAME_MAX = %d\n", NAME_MAX);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:477:22: [0m[0;1;36mnote: [0mAssuming 'ac' is > 1[0m
  477 |   default_startup = (ac > 1) ? 0 : 1;[0m
      | [0;1;32m                     ^~~~~~
[0m[1mscreen.c:477:21: [0m[0;1;36mnote: [0m'?' condition is true[0m
  477 |   default_startup = (ac > 1) ? 0 : 1;[0m
      | [0;1;32m                    ^
[0m[1mscreen.c:517:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  517 |   if (*av0 == '-') {[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mscreen.c:517:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  517 |   if (*av0 == '-') {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:527:10: [0m[0;1;36mnote: [0m'ac' is > 0[0m
  527 |   while (ac > 0){[0m
      | [0;1;32m         ^~
[0m[1mscreen.c:527:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  527 |   while (ac > 0){[0m
      | [0;1;32m  ^
[0m[1mscreen.c:529:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  529 |     if (--ac > 0 && *ap == '-') {[0m
      | [0;1;32m        ^
[0m[1mscreen.c:529:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  529 |     if (--ac > 0 && *ap == '-') {[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mscreen.c:529:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  529 |     if (--ac > 0 && *ap == '-') {[0m
      | [0;1;32m    ^
[0m[1mscreen.c:530:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  530 |           if (ap[1] == '-' && ap[2] == 0) {[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mscreen.c:530:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  530 |           if (ap[1] == '-' && ap[2] == 0) {[0m
      | [0;1;32m                           ^
[0m[1mscreen.c:536:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  536 |           if (ap[1] == '-' && !strcmp(ap, "--version")) {[0m
      | [0;1;32m                           ^
[0m[1mscreen.c:540:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  540 |           if (ap[1] == '-' && !strcmp(ap, "--help"))[0m
      | [0;1;32m                           ^
[0m[1mscreen.c:543:11: [0m[0;1;36mnote: [0m'ap' is non-null[0m
  543 |           while (ap && *ap && *++ap) {[0m
      | [0;1;32m                 ^~
[0m[1mscreen.c:543:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mscreen.c:543:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mscreen.c:543:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  543 |           while (ap && *ap && *++ap) {[0m
      | [0;1;32m          ^
[0m[1mscreen.c:544:9: [0m[0;1;36mnote: [0mControl jumps to 'case 83:'  at line 776[0m
  544 |         switch (*ap) {[0m
      | [0;1;32m        ^
[0m[1mscreen.c:777:18: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  777 |             if (!SockMatch) {[0m
      | [0;1;32m                 ^~~~~~~~~
[0m[1mscreen.c:777:13: [0m[0;1;36mnote: [0mTaking true branch[0m
  777 |             if (!SockMatch) {[0m
      | [0;1;32m            ^
[0m[1mscreen.c:778:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  778 |               if (--ac == 0)[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mscreen.c:778:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  778 |               if (--ac == 0)[0m
      | [0;1;32m              ^
[0m[1mscreen.c:781:15: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  781 |               debug1("SockMatch: '%s'\n", SockMatch);[0m
      | [0;1;32m              ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:782:15: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  782 |               debug1("SockMatch len: '%d'\n", (int)strlen(SockMatch));[0m
      | [0;1;32m              ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:783:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  783 |               if (strlen(SockMatch) > 80)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:783:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  783 |               if (strlen(SockMatch) > 80)[0m
      | [0;1;32m              ^
[0m[1mscreen.c:784:17: [0m[0;1;36mnote: [0mNull pointer value stored to 'SockMatch'[0m
  784 |                 exit_with_usage(myname, "Session-name is too long (max length is 80 symbols)", NULL);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:786:18: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'SockMatch')[0m
  786 |             if (!*SockMatch)[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mscreen.c:786:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  786 |             if (!*SockMatch)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  787 |               exit_with_usage(myname, "Empty session-name?", NULL);[0m
      | [0;1;32m                                                                   
[0m[1mscreen.c:791:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  791 |             cmdflag = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  792 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:795:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  795 |             printf("Screen version %s\n", version);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  796 |             exit(0);[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mscreen.c:800:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  800 |             nwin_options.encoding = nwin_options.encoding == -1 ? UTF8 : 0;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  801 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:805:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  805 |             exit_with_usage(myname, "Unknown option %s", --ap);[0m
      | [0;1;32m            ^                                                 
[0m      | [0;32m            {                                                 ;} 
[0m[1mscreen.c:809:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  810 |       break;[0m
      | [0;1;32m            
[0m[1mscreen.c:859:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  859 |       if (!newbuf)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  860 |         Panic(0, "%s", strnomem);[0m
      | [0;1;32m                                 
[0m[1mscreen.c:875:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  875 |   if (SockMatch && strlen(SockMatch) >= MAXSTR)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  876 |     Panic(0, "Ridiculously long socketname - try again.");[0m
      | [0;1;32m                                                          
[0m[1mscreen.c:877:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |   if (cmdflag && !rflag && !dflag && !xflag)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  878 |     xflag = 1;[0m
      | [0;1;32m              
[0m[1mscreen.c:879:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  880 |     detached = 1;[0m
      | [0;1;32m                 
[0m[1mscreen.c:886:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  886 |   if (ac)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  887 |     nwin.args = av;[0m
      | [0;1;32m                   
[0m[1mscreen.c:917:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  917 |     if (sty && *sty == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  918 |       sty = 0;[0m
      | [0;1;32m              
[0m[1mscreen.c:926:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  926 |       sprintf(nethackrc,"%s/.nethackrc", home);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:926:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  926 |       sprintf(nethackrc,"%s/.nethackrc", home);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:940:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |       if ((mppp = getpwnam(multi)) == (struct passwd *)0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  941 |         Panic(0, "Cannot identify account '%s'.", multi);[0m
      | [0;1;32m                                                         
[0m[1mscreen.c:944:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  944 |       if (strlen(multi_home) > MAXPATHLEN - 10)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  945 |         Panic(0, "home directory path too long");[0m
      | [0;1;32m                                                 
[0m[1mscreen.c:949:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |       if (rflag || lsflag)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  950 |         xflag = 1;[0m
      | [0;1;32m                  
[0m[1mscreen.c:956:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  956 |     if (eff_uid && (multi_uid != eff_uid))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  957 |       Panic(0, "Must run suid root for multiuser support.");[0m
      | [0;1;32m                                                            
[0m[1mscreen.c:959:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  959 |   if (SockMatch && *SockMatch == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  960 |     SockMatch = 0;[0m
      | [0;1;32m                  
[0m[1mscreen.c:964:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |     if ((ppp = getpwnam(LoginName)) != (struct passwd *) 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  965 |       if ((int)ppp->pw_uid != real_uid)[0m
  966 |         ppp = (struct passwd *) 0;[0m
      | [0;1;32m                                  
[0m[1mscreen.c:965:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  965 |       if ((int)ppp->pw_uid != real_uid)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  966 |         ppp = (struct passwd *) 0;[0m
      | [0;1;32m                                  
[0m[1mscreen.c:993:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  993 |   if (home == 0 || *home == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  994 |     home = ppp->pw_dir;[0m
      | [0;1;32m                       
[0m[1mscreen.c:995:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  995 |   if (strlen(LoginName) > MAXLOGINLEN)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  996 |     Panic(0, "LoginName too long - sorry.");[0m
      | [0;1;32m                                            
[0m[1mscreen.c:999:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  999 |   if (multi && strlen(multi) > MAXLOGINLEN)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1000 |     Panic(0, "Screen owner name too long - sorry.");[0m
      | [0;1;32m                                                    
[0m[1mscreen.c:1002:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1002 |   if (strlen(home) > MAXPATHLEN - 25)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1003 |     Panic(0, "$HOME too long - sorry.");[0m
      | [0;1;32m                                        
[0m[1mscreen.c:1013:32: [0m[0;1;35mwarning: [0m[1mThe left operand of '&' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
 1013 |     tty_mode = (int)st.st_mode & 0777;[0m
      | [0;1;32m                    ~~~~~~~~~~ ^
[0m[1mscreen.c:372:19: [0m[0;1;36mnote: [0m'ac' is not equal to 0[0m
  372 |   char *myname = (ac == 0) ? "screen" : av[0];[0m
      | [0;1;32m                  ^~
[0m[1mscreen.c:372:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  372 |   char *myname = (ac == 0) ? "screen" : av[0];[0m
      | [0;1;32m                 ^
[0m[1mscreen.c:413:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  413 |   debug2("-- screen debug started %s (%s)\n", *av, version);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:415:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  415 |   debug("POSIX\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:418:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  418 |   debug("TERMIO\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:427:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  427 |   debug("Window size changing enabled\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:430:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  430 |   debug("SETREUID\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:439:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  439 |   debug("USEBCOPY\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:442:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  442 |   debug("UTMPOK\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:445:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  445 |   debug("LOADAV\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:448:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  448 |   debug("NETHACK\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:451:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  451 |   debug("TERMINFO\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:454:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  454 |   debug("SHADOWPW\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:457:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  457 |   debug1("NAME_MAX = %d\n", NAME_MAX);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:477:22: [0m[0;1;36mnote: [0mAssuming 'ac' is <= 1[0m
  477 |   default_startup = (ac > 1) ? 0 : 1;[0m
      | [0;1;32m                     ^~~~~~
[0m[1mscreen.c:477:21: [0m[0;1;36mnote: [0m'?' condition is false[0m
  477 |   default_startup = (ac > 1) ? 0 : 1;[0m
      | [0;1;32m                    ^
[0m[1mscreen.c:517:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  517 |   if (*av0 == '-') {[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mscreen.c:517:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  517 |   if (*av0 == '-') {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:527:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  527 |   while (ac > 0){[0m
      | [0;1;32m  ^
[0m[1mscreen.c:529:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  529 |     if (--ac > 0 && *ap == '-') {[0m
      | [0;1;32m                 ^
[0m[1mscreen.c:810:7: [0m[0;1;36mnote: [0m Execution continues on line 814[0m
  810 |       break;[0m
      | [0;1;32m      ^
[0m[1mscreen.c:823:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  823 |   if (nwin_options.encoding == -1) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:823:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  823 |   if (nwin_options.encoding == -1) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:844:10: [0m[0;1;36mnote: [0mAssuming 's' is null[0m
  844 |     if ((s = locale_name())) {[0m
      | [0;1;32m         ^
[0m[1mscreen.c:844:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  844 |     if ((s = locale_name())) {[0m
      | [0;1;32m    ^
[0m[1mscreen.c:853:7: [0m[0;1;36mnote: [0mAssuming field 'aka' is null[0m
  853 |   if (nwin_options.aka) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mscreen.c:853:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  853 |   if (nwin_options.aka) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:875:7: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  875 |   if (SockMatch && strlen(SockMatch) >= MAXSTR)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:875:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  875 |   if (SockMatch && strlen(SockMatch) >= MAXSTR)[0m
      | [0;1;32m                ^
[0m[1mscreen.c:877:7: [0m[0;1;36mnote: [0mAssuming 'cmdflag' is 0[0m
  877 |   if (cmdflag && !rflag && !dflag && !xflag)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:877:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  877 |   if (cmdflag && !rflag && !dflag && !xflag)[0m
      | [0;1;32m              ^
[0m[1mscreen.c:879:8: [0m[0;1;36mnote: [0m'cmdflag' is 0[0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m       ^~~~~~~
[0m[1mscreen.c:879:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m      ^
[0m[1mscreen.c:879:19: [0m[0;1;36mnote: [0mAssuming 'dflag' is 0[0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m                  ^~~~~
[0m[1mscreen.c:879:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m                        ^
[0m[1mscreen.c:886:7: [0m[0;1;36mnote: [0m'ac' is 0[0m
  886 |   if (ac)[0m
      | [0;1;32m      ^~
[0m[1mscreen.c:886:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  886 |   if (ac)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:908:7: [0m[0;1;36mnote: [0mAssuming 'ShellProg' is non-null[0m
  908 |   if (!ShellProg) {[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mscreen.c:908:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  908 |   if (!ShellProg) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:915:8: [0m[0;1;36mnote: [0m'mflag' is 0[0m
  915 |   if (!mflag && !SockMatch) {[0m
      | [0;1;32m       ^~~~~
[0m[1mscreen.c:915:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  915 |   if (!mflag && !SockMatch) {[0m
      | [0;1;32m      ^
[0m[1mscreen.c:915:18: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  915 |   if (!mflag && !SockMatch) {[0m
      | [0;1;32m                 ^~~~~~~~~
[0m[1mscreen.c:915:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  915 |   if (!mflag && !SockMatch) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:917:9: [0m[0;1;36mnote: [0m'sty' is null[0m
  917 |     if (sty && *sty == 0)[0m
      | [0;1;32m        ^~~
[0m[1mscreen.c:917:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  917 |     if (sty && *sty == 0)[0m
      | [0;1;32m            ^
[0m[1mscreen.c:922:9: [0m[0;1;36mnote: [0mAssuming 'nethackflag' is not equal to 0[0m
  922 |   if (!(nethackflag = (getenv("NETHACKOPTIONS") != NULL))) {[0m
      | [0;1;32m        ^~~~~~~~~~~
[0m[1mscreen.c:922:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  922 |   if (!(nethackflag = (getenv("NETHACKOPTIONS") != NULL))) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:934:7: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  934 |   if (SockMatch && (sockp = index(SockMatch, '/'))) {[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:934:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  934 |   if (SockMatch && (sockp = index(SockMatch, '/'))) {[0m
      | [0;1;32m                ^
[0m[1mscreen.c:959:7: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  959 |   if (SockMatch && *SockMatch == 0)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:959:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  959 |   if (SockMatch && *SockMatch == 0)[0m
      | [0;1;32m                ^
[0m[1mscreen.c:963:8: [0m[0;1;36mnote: [0mAssuming 'LoginName' is null[0m
  963 |   if ((LoginName = getlogin()) && LoginName[0] != '\0') {[0m
      | [0;1;32m       ^~~~~~~~~
[0m[1mscreen.c:963:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  963 |   if ((LoginName = getlogin()) && LoginName[0] != '\0') {[0m
      | [0;1;32m                               ^
[0m[1mscreen.c:968:7: [0m[0;1;36mnote: [0mAssuming 'ppp' is not equal to null[0m
  968 |   if (ppp == 0) {[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mscreen.c:968:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  968 |   if (ppp == 0) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:993:7: [0m[0;1;36mnote: [0mAssuming 'home' is not equal to null[0m
  993 |   if (home == 0 || *home == '\0')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:993:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mscreen.c:993:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  993 |   if (home == 0 || *home == '\0')[0m
      | [0;1;32m                   ^~~~~~~~~~~~~
[0m[1mscreen.c:993:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  993 |   if (home == 0 || *home == '\0')[0m
      | [0;1;32m  ^
[0m[1mscreen.c:995:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  995 |   if (strlen(LoginName) > MAXLOGINLEN)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:995:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  995 |   if (strlen(LoginName) > MAXLOGINLEN)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:999:7: [0m[0;1;36mnote: [0mAssuming 'multi' is null[0m
  999 |   if (multi && strlen(multi) > MAXLOGINLEN)[0m
      | [0;1;32m      ^~~~~
[0m[1mscreen.c:999:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  999 |   if (multi && strlen(multi) > MAXLOGINLEN)[0m
      | [0;1;32m            ^
[0m[1mscreen.c:1002:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1002 |   if (strlen(home) > MAXPATHLEN - 25)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1002:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1002 |   if (strlen(home) > MAXPATHLEN - 25)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1006:8: [0m[0;1;36mnote: [0m'detached' is 0[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mscreen.c:1006:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1006:20: [0m[0;1;36mnote: [0mAssuming 'lsflag' is 0[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mscreen.c:1006:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1006:31: [0m[0;1;36mnote: [0mAssuming 'cmdflag' is 0[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m                              ^~~~~~~~
[0m[1mscreen.c:1006:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1006:45: [0m[0;1;36mnote: [0mAssuming 'dflag' is 0[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m                                            ^~~~~
[0m[1mscreen.c:1006:51: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m                                                  ^
[0m[1mscreen.c:1006:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1007:9: [0m[0;1;36mnote: [0m'sty' is null[0m
 1007 |       !(sty && !SockMatch && !mflag && !rflag && !xflag)) {[0m
      | [0;1;32m        ^~~
[0m[1mscreen.c:1007:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1007 |       !(sty && !SockMatch && !mflag && !rflag && !xflag)) {[0m
      | [0;1;32m            ^
[0m[1mscreen.c:1006:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1011:5: [0m[0;1;36mnote: [0mCalling 'SetTtyname'[0m
 1011 |     SetTtyname(true, &st);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:3420:6: [0m[0;1;36mnote: [0mAssuming 'attach_tty' is non-null[0m
 3420 |         if (!attach_tty) {[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mscreen.c:3420:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 3420 |         if (!attach_tty) {[0m
      | [0;1;32m        ^
[0m[1mscreen.c:3435:6: [0m[0;1;36mnote: [0m'attach_tty' is non-null[0m
 3435 |         if (attach_tty && strcmp(attach_tty, "")) {[0m
      | [0;1;32m            ^~~~~~~~~~
[0m[1mscreen.c:3435:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mscreen.c:3435:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 3435 |         if (attach_tty && strcmp(attach_tty, "")) {[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:3435:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 3435 |         if (attach_tty && strcmp(attach_tty, "")) {[0m
      | [0;1;32m        ^
[0m[1mscreen.c:3448:1: [0m[0;1;36mnote: [0mReturning without writing to '->st_mode'[0m
 3448 | }[0m
      | [0;1;32m^
[0m[1mscreen.c:1011:5: [0m[0;1;36mnote: [0mReturning from 'SetTtyname'[0m
 1011 |     SetTtyname(true, &st);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1013:32: [0m[0;1;36mnote: [0mThe left operand of '&' is a garbage value[0m
 1013 |     tty_mode = (int)st.st_mode & 0777;[0m
      | [0;1;32m                    ~~~~~~~~~~ ^
[0m[1mscreen.c:1017:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1017 |     if (fl != -1 && (fl & (O_RDWR|O_RDONLY|O_WRONLY)) == O_RDWR)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1018 |       attach_fd = 0;[0m
      | [0;1;32m                    
[0m[1mscreen.c:1022:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1022 |       if ((n = secopen(attach_tty, O_RDWR | O_NONBLOCK, 0)) < 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1023 |         Panic(0, "Cannot open your terminal '%s' - please check.", attach_tty);[0m
      | [0;1;32m                                                                               
[0m[1mscreen.c:1030:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1030 |     if ((attach_term = getenv("TERM")) == 0 || *attach_term == 0)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1031 |       Panic(0, "Please set a terminal type.");[0m
      | [0;1;32m                                              
[0m[1mscreen.c:1032:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1032 |     if (strlen(attach_term) > MAXTERMLEN)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1033 |       Panic(0, "$TERM too long - sorry.");[0m
      | [0;1;32m                                          
[0m[1mscreen.c:1044:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1044 |     if ((oumask = (int)umask(0)) == -1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1045 |       Panic(errno, "Cannot change umask to zero");[0m
      | [0;1;32m                                                  
[0m[1mscreen.c:1050:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1050 |       if (strlen(SockDir) >= MAXPATHLEN - 1)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1051 |         Panic(0, "Ridiculously long $SCREENDIR - try again.");[0m
      | [0;1;32m                                                              
[0m[1mscreen.c:1054:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1054 |       if (multi)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1055 |         Panic(0, "No $SCREENDIR with multi screens, please.");[0m
      | [0;1;32m                                                              
[0m[1mscreen.c:1066:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1066 |       sprintf(SockPath, "%s/S-%s", SockDir, multi);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1066:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1066 |       sprintf(SockPath, "%s/S-%s", SockDir, multi);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1083:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1083 |           if (mkdir(SockDir, 0700))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1084 |             UserReturn(0);[0m
      | [0;1;32m                          
[0m[1mscreen.c:1088:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1088 |         if (UserStatus() <= 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1089 |           Panic(0, "Cannot make directory '%s'.", SockDir);[0m
      | [0;1;32m                                                           
[0m[1mscreen.c:1091:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1091 |       if (SockDir != SockPath)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1092 |         strcpy(SockPath, SockDir);[0m
      | [0;1;32m                                  
[0m[1mscreen.c:1092:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1092 |         strcpy(SockPath, SockDir);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:1092:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1092 |         strcpy(SockPath, SockDir);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:1107:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1107 |         if (mkdir(SockDir, n) == -1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1108 |           Panic(errno, "Cannot make directory '%s'", SockDir);[0m
      | [0;1;32m                                                              
[0m[1mscreen.c:1111:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1111 |         if (!S_ISDIR(st.st_mode))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1112 |           Panic(0, "'%s' must be a directory.", SockDir);[0m
      | [0;1;32m                                                         
[0m[1mscreen.c:1113:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1113 |         if (eff_uid == 0 && real_uid && (int)st.st_uid != eff_uid)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1114 |           Panic(0, "Directory '%s' must be owned by root.", SockDir);[0m
      | [0;1;32m                                                                     
[0m[1mscreen.c:1117:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |         if (((int)st.st_mode & 0777) != n)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1118 |           Panic(0, "Directory '%s' must have mode %03o.", SockDir, n);[0m
      | [0;1;32m                                                                      
[0m[1mscreen.c:1120:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1120 |       sprintf(SockPath, "%s/S-%s", SockDir, LoginName);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1120:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1120 |       sprintf(SockPath, "%s/S-%s", SockDir, LoginName);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1122:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1122 |         if (mkdir(SockPath, 0700) == -1 && errno != EEXIST)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1123 |           Panic(errno, "Cannot make directory '%s'", SockPath);[0m
      | [0;1;32m                                                               
[0m[1mscreen.c:1130:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1130 |   if (stat(SockPath, &st) == -1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1131 |     Panic(errno, "Cannot access %s", SockPath);[0m
 1132 |   else[0m
      | [0;32m  } 
[0m[1mscreen.c:1133:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1133 |     if (!S_ISDIR(st.st_mode))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1134 |       Panic(0, "%s is not a directory.", SockPath);[0m
      | [0;1;32m                                                   
[0m[1mscreen.c:1137:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1137 |     if ((int)st.st_uid != multi_uid)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1138 |       Panic(0, "%s is not the owner of %s.", multi, SockPath);[0m
      | [0;1;32m                                                              
[0m[1mscreen.c:1148:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1148 |     if ((int)st.st_uid != real_uid)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1149 |       Panic(0, "You are not the owner of %s.", SockPath);[0m
      | [0;1;32m                                                         
[0m[1mscreen.c:1153:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1153 |   if ((st.st_mode & 0777) != 0700)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1154 |     Panic(0, "Directory %s must have mode 700.", SockPath);[0m
      | [0;1;32m                                                           
[0m[1mscreen.c:1155:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1155 |   if (SockMatch && index(SockMatch, '/'))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1156 |     Panic(0, "Bad session name '%s'", SockMatch);[0m
      | [0;1;32m                                                 
[0m[1mscreen.c:1172:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1172 |   if ((ap = index(HostName, '.')) != NULL)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1173 |     *ap = '\0';[0m
      | [0;1;32m               
[0m[1mscreen.c:1180:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1180 |     if (multi)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1181 |       real_uid = multi_uid;[0m
      | [0;1;32m                           
[0m[1mscreen.c:1184:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1184 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:987:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  987 |     setgid(real_gid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1184:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges[0m
 1184 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:987:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  987 |     setgid(real_gid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1184:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1184 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:988:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  988 |     setuid(real_uid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1184:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges[0m
 1184 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:988:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  988 |     setuid(real_uid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1187:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1187 |       if (rflag)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1188 |         exit(10 + i);[0m
 1189 |       else[0m
      | [0;32m      } 
[0m[1mscreen.c:1189:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1189 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1190 |         exit(9 + (fo || oth ? 1 : 0) + fo);[0m
      | [0;1;32m                                           
[0m[1mscreen.c:1192:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1192 |     if (fo == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1193 |       Panic(0, "No Sockets found in %s.\n", SockPath);[0m
      | [0;1;32m                                                      
[0m[1mscreen.c:1202:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1202 |     if (multi)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1203 |       real_uid = multi_uid;[0m
      | [0;1;32m                           
[0m[1mscreen.c:1208:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1208 |     if (!*av)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1209 |       Panic(0, "Please specify a command.");[0m
      | [0;1;32m                                            
[0m[1mscreen.c:1211:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1211 |       if (!*++av)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1212 |         Panic(0, "Please specify a parameter.");[0m
      | [0;1;32m                                                
[0m[1mscreen.c:1213:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1213 |       if (strlen(*av) > 80)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1214 |         Panic(0, "Parameter of command 'sessionname' is too long.");[0m
      | [0;1;32m                                                                    
[0m[1mscreen.c:1215:5: [0m[0;1;35mwarning: [0m[1mexpression result unused [clang-diagnostic-unused-value][0m
 1215 |     *--av;[0m
      | [0;1;32m    ^~~~~
[0m[1mscreen.c:1217:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1217 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:987:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  987 |     setgid(real_gid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1217:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges[0m
 1217 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:987:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  987 |     setgid(real_gid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1217:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1217 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:988:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  988 |     setuid(real_uid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1217:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges[0m
 1217 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:988:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  988 |     setuid(real_uid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1228:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1228 |     if (multiattach)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1229 |       Panic(0, "Can't create sessions of other users.");[0m
      | [0;1;32m                                                        
[0m[1mscreen.c:1244:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1244 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:987:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  987 |     setgid(real_gid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1244:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges[0m
 1244 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:987:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  987 |     setgid(real_gid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1244:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1244 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:988:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  988 |     setuid(real_uid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1244:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges[0m
 1244 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:988:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  988 |     setuid(real_uid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1252:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1252 |   if (!detached || dflag != 2)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1253 |     MasterPid = fork();[0m
 1254 |   else[0m
      | [0;32m  } 
[0m[1mscreen.c:1254:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1254 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1255 |     MasterPid = 0;[0m
      | [0;1;32m                  
[0m[1mscreen.c:1259:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1259 |       Panic(errno, "fork");[0m
      | [0;1;32m      ^                   
[0m      | [0;32m      {                   ;} 
[0m[1mscreen.c:1262:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1262 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mscreen.c:1264:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1264 |       if (detached)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1265 |         exit(0);[0m
 1266 |       if (SockMatch)[0m
 1267 |         sprintf(socknamebuf, "%d.%s", MasterPid, SockMatch);[0m
 1268 |       else[0m
 1269 |         sprintf(socknamebuf, "%d.%s.%s", MasterPid, stripdev(attach_tty), HostName);[0m
 1270 |     for (ap = socknamebuf; *ap; ap++)[0m
 1271 |       if (*ap == '/')[0m
 1272 |         *ap = '-';[0m
 1273 | #ifdef NAME_MAX[0m
 1274 |     if (strlen(socknamebuf) > NAME_MAX)[0m
 1275 |       socknamebuf[NAME_MAX] = 0;[0m
 1276 | #endif[0m
 1277 |     sprintf(SockPath + strlen(SockPath), "/%s", socknamebuf);[0m
 1278 |     SET_GUID();[0m
 1279 |     Attacher();[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mscreen.c:1264:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1264 |       if (detached)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1265 |         exit(0);[0m
      | [0;1;32m                
[0m[1mscreen.c:1266:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1266 |       if (SockMatch)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1267 |         sprintf(socknamebuf, "%d.%s", MasterPid, SockMatch);[0m
 1268 |       else[0m
      | [0;32m      } 
[0m[1mscreen.c:1267:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1267 |         sprintf(socknamebuf, "%d.%s", MasterPid, SockMatch);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:1267:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1267 |         sprintf(socknamebuf, "%d.%s", MasterPid, SockMatch);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:1268:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1268 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1269 |         sprintf(socknamebuf, "%d.%s.%s", MasterPid, stripdev(attach_tty), HostName);[0m
      | [0;1;32m                                                                                    
[0m[1mscreen.c:1269:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1269 |         sprintf(socknamebuf, "%d.%s.%s", MasterPid, stripdev(attach_tty), HostName);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:1269:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1269 |         sprintf(socknamebuf, "%d.%s.%s", MasterPid, stripdev(attach_tty), HostName);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:1270:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1270 |     for (ap = socknamebuf; *ap; ap++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1271 |       if (*ap == '/')[0m
 1272 |         *ap = '-';[0m
      | [0;1;32m                  
[0m[1mscreen.c:1271:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1271 |       if (*ap == '/')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1272 |         *ap = '-';[0m
      | [0;1;32m                  
[0m[1mscreen.c:1274:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1274 |     if (strlen(socknamebuf) > NAME_MAX)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1275 |       socknamebuf[NAME_MAX] = 0;[0m
      | [0;1;32m                                
[0m[1mscreen.c:1277:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1277 |     sprintf(SockPath + strlen(SockPath), "/%s", socknamebuf);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mscreen.c:1277:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1277 |     sprintf(SockPath + strlen(SockPath), "/%s", socknamebuf);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mscreen.c:1278:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1278 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:987:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  987 |     setgid(real_gid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1278:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges[0m
 1278 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:987:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  987 |     setgid(real_gid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1278:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1278 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:988:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  988 |     setuid(real_uid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1278:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges[0m
 1278 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:988:5: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  988 |     setuid(real_uid); \[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1283:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1283 |   if (!detached)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1284 |     PanicPid = getppid();[0m
      | [0;1;32m                         
[0m[1mscreen.c:1286:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1286 |   if (DefaultEsc == -1)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1287 |     DefaultEsc = Ctrl('a');[0m
      | [0;1;32m                           
[0m[1mscreen.c:1288:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1288 |   if (DefaultMetaEsc == -1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1289 |     DefaultMetaEsc = 'a';[0m
      | [0;1;32m                         
[0m[1mscreen.c:1294:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1294 |       memcpy(ap, "SCREEN", 6); /* name this process "SCREEN-BACKEND" */[0m
      | [0;1;32m      ^~~~~~
[0m[1mscreen.c:1294:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1294 |       memcpy(ap, "SCREEN", 6); /* name this process "SCREEN-BACKEND" */[0m
      | [0;1;32m      ^~~~~~
[0m[1mscreen.c:1299:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1299 |   if (ap < av0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1300 |     *av0 = 'S';[0m
      | [0;1;32m               
[0m[1mscreen.c:1318:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1318 |       if ((n = secopen(attach_tty, O_RDWR | O_NONBLOCK, 0)) < 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1319 |         Panic(0, "Cannot reopen '%s' - please check.", attach_tty);[0m
      | [0;1;32m                                                                   
[0m[1mscreen.c:1321:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1321 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1322 |       n = dup(attach_fd);[0m
      | [0;1;32m                         
[0m[1mscreen.c:1324:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1325 |     n = -1;[0m
      | [0;1;32m           
[0m[1mscreen.c:1339:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1339 |   if (UserAdd(LoginName, (char *)0, (struct acluser **)0) < 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1340 |     Panic(0, "Could not create user info");[0m
      | [0;1;32m                                           
[0m[1mscreen.c:1342:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1342 |     if (MakeDisplay(LoginName, attach_tty, attach_term, n, getppid(), &attach_Mode) == 0)[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m 1343 |       Panic(0, "Could not alloc display");[0m
      | [0;1;32m                                          
[0m[1mscreen.c:1353:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1353 |     sprintf(socknamebuf, "%d.%s", (int)getpid(), SockMatch);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mscreen.c:1353:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1353 |     sprintf(socknamebuf, "%d.%s", (int)getpid(), SockMatch);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mscreen.c:1356:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1356 |     sprintf(socknamebuf, "%d.%s.%s", (int)getpid(), stripdev(attach_tty), HostName);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mscreen.c:1356:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1356 |     sprintf(socknamebuf, "%d.%s.%s", (int)getpid(), stripdev(attach_tty), HostName);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mscreen.c:1358:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1358 |   for (ap = socknamebuf; *ap; ap++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1359 |     if (*ap == '/')[0m
 1360 |       *ap = '-';[0m
      | [0;1;32m                
[0m[1mscreen.c:1359:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1359 |     if (*ap == '/')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1360 |       *ap = '-';[0m
      | [0;1;32m                
[0m[1mscreen.c:1369:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1369 |   sprintf(SockPath + strlen(SockPath), "/%s", socknamebuf);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mscreen.c:1369:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1369 |   sprintf(SockPath + strlen(SockPath), "/%s", socknamebuf);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mscreen.c:1377:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1377 |   if ((ap = getenv("SYSSCREENRC")))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1378 |     (void)StartRc(ap, 0);[0m
 1379 |   else[0m
      | [0;32m  } 
[0m[1mscreen.c:1379:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1379 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1380 | # endif[0m
 1381 |     (void)StartRc(ETCSCREENRC, 0);[0m
      | [0;1;32m                                  
[0m[1mscreen.c:1394:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1394 |       if (D_userpid)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1395 |         Kill(D_userpid, SIG_BYE);[0m
      | [0;1;32m                                 
[0m[1mscreen.c:1404:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1404 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1405 |     MakeTermcap(1);[0m
      | [0;1;32m                   
[0m[1mscreen.c:1427:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1427 |     if (fcntl(D_userfd, F_SETFL, FNBLOCK))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1428 |       Msg(errno, "Warning: NBLOCK fcntl failed");[0m
      | [0;1;32m                                                 
[0m[1mscreen.c:1430:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1430 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1431 |     brktty(-1);         /* just try */[0m
      | [0;1;32m                                      
[0m[1mscreen.c:1435:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1435 |   if ((ap = getenv("SYSSCREENRC")))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1436 |     FinishRc(ap);[0m
 1437 |   else[0m
      | [0;32m  } 
[0m[1mscreen.c:1437:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1437 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1438 | # endif[0m
 1439 |     FinishRc(ETCSCREENRC);[0m
      | [0;1;32m                          
[0m[1mscreen.c:1449:7: [0m[0;1;35mwarning: [0m[1mThe left expression of the compound assignment is an uninitialized value. The computed value will also be garbage [clang-analyzer-core.uninitialized.Assign][0m
 1449 |       FD_SET(0, &rfd);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/select.h:85:28: [0m[0;1;36mnote: [0mexpanded from macro 'FD_SET'[0m
   85 | #define FD_SET(fd, fdsetp)      __FD_SET (fd, fdsetp)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/bits/select.h:33:40: [0m[0;1;36mnote: [0mexpanded from macro '__FD_SET'[0m
   33 |   ((void) (__FDS_BITS (s)[__FD_ELT(d)] |= __FD_MASK(d)))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
[0m[1mscreen.c:372:19: [0m[0;1;36mnote: [0m'ac' is not equal to 0[0m
  372 |   char *myname = (ac == 0) ? "screen" : av[0];[0m
      | [0;1;32m                  ^~
[0m[1mscreen.c:372:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  372 |   char *myname = (ac == 0) ? "screen" : av[0];[0m
      | [0;1;32m                 ^
[0m[1mscreen.c:413:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  413 |   debug2("-- screen debug started %s (%s)\n", *av, version);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:415:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  415 |   debug("POSIX\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:418:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  418 |   debug("TERMIO\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:427:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  427 |   debug("Window size changing enabled\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:430:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  430 |   debug("SETREUID\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:439:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  439 |   debug("USEBCOPY\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:442:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  442 |   debug("UTMPOK\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:445:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  445 |   debug("LOADAV\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:448:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  448 |   debug("NETHACK\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:451:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  451 |   debug("TERMINFO\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:454:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  454 |   debug("SHADOWPW\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:457:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  457 |   debug1("NAME_MAX = %d\n", NAME_MAX);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:477:22: [0m[0;1;36mnote: [0mAssuming 'ac' is <= 1[0m
  477 |   default_startup = (ac > 1) ? 0 : 1;[0m
      | [0;1;32m                     ^~~~~~
[0m[1mscreen.c:477:21: [0m[0;1;36mnote: [0m'?' condition is false[0m
  477 |   default_startup = (ac > 1) ? 0 : 1;[0m
      | [0;1;32m                    ^
[0m[1mscreen.c:517:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  517 |   if (*av0 == '-') {[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mscreen.c:517:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  517 |   if (*av0 == '-') {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:527:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  527 |   while (ac > 0){[0m
      | [0;1;32m  ^
[0m[1mscreen.c:529:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  529 |     if (--ac > 0 && *ap == '-') {[0m
      | [0;1;32m                 ^
[0m[1mscreen.c:810:7: [0m[0;1;36mnote: [0m Execution continues on line 814[0m
  810 |       break;[0m
      | [0;1;32m      ^
[0m[1mscreen.c:823:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  823 |   if (nwin_options.encoding == -1) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:823:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  823 |   if (nwin_options.encoding == -1) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:844:10: [0m[0;1;36mnote: [0mAssuming 's' is null[0m
  844 |     if ((s = locale_name())) {[0m
      | [0;1;32m         ^
[0m[1mscreen.c:844:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  844 |     if ((s = locale_name())) {[0m
      | [0;1;32m    ^
[0m[1mscreen.c:853:7: [0m[0;1;36mnote: [0mAssuming field 'aka' is null[0m
  853 |   if (nwin_options.aka) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mscreen.c:853:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  853 |   if (nwin_options.aka) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:875:7: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  875 |   if (SockMatch && strlen(SockMatch) >= MAXSTR)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:875:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  875 |   if (SockMatch && strlen(SockMatch) >= MAXSTR)[0m
      | [0;1;32m                ^
[0m[1mscreen.c:877:7: [0m[0;1;36mnote: [0mAssuming 'cmdflag' is 0[0m
  877 |   if (cmdflag && !rflag && !dflag && !xflag)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:877:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  877 |   if (cmdflag && !rflag && !dflag && !xflag)[0m
      | [0;1;32m              ^
[0m[1mscreen.c:879:8: [0m[0;1;36mnote: [0m'cmdflag' is 0[0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m       ^~~~~~~
[0m[1mscreen.c:879:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m      ^
[0m[1mscreen.c:879:19: [0m[0;1;36mnote: [0mAssuming 'dflag' is 0[0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m                  ^~~~~
[0m[1mscreen.c:879:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  879 |   if (!cmdflag && dflag && mflag && !(rflag || xflag))[0m
      | [0;1;32m                        ^
[0m[1mscreen.c:886:7: [0m[0;1;36mnote: [0m'ac' is 0[0m
  886 |   if (ac)[0m
      | [0;1;32m      ^~
[0m[1mscreen.c:886:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  886 |   if (ac)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:908:7: [0m[0;1;36mnote: [0mAssuming 'ShellProg' is non-null[0m
  908 |   if (!ShellProg) {[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mscreen.c:908:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  908 |   if (!ShellProg) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:915:8: [0m[0;1;36mnote: [0m'mflag' is 0[0m
  915 |   if (!mflag && !SockMatch) {[0m
      | [0;1;32m       ^~~~~
[0m[1mscreen.c:915:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  915 |   if (!mflag && !SockMatch) {[0m
      | [0;1;32m      ^
[0m[1mscreen.c:915:18: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  915 |   if (!mflag && !SockMatch) {[0m
      | [0;1;32m                 ^~~~~~~~~
[0m[1mscreen.c:915:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  915 |   if (!mflag && !SockMatch) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:917:9: [0m[0;1;36mnote: [0m'sty' is null[0m
  917 |     if (sty && *sty == 0)[0m
      | [0;1;32m        ^~~
[0m[1mscreen.c:917:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  917 |     if (sty && *sty == 0)[0m
      | [0;1;32m            ^
[0m[1mscreen.c:922:9: [0m[0;1;36mnote: [0mAssuming 'nethackflag' is not equal to 0[0m
  922 |   if (!(nethackflag = (getenv("NETHACKOPTIONS") != NULL))) {[0m
      | [0;1;32m        ^~~~~~~~~~~
[0m[1mscreen.c:922:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  922 |   if (!(nethackflag = (getenv("NETHACKOPTIONS") != NULL))) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:934:7: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  934 |   if (SockMatch && (sockp = index(SockMatch, '/'))) {[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:934:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  934 |   if (SockMatch && (sockp = index(SockMatch, '/'))) {[0m
      | [0;1;32m                ^
[0m[1mscreen.c:959:7: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
  959 |   if (SockMatch && *SockMatch == 0)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:959:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  959 |   if (SockMatch && *SockMatch == 0)[0m
      | [0;1;32m                ^
[0m[1mscreen.c:963:8: [0m[0;1;36mnote: [0mAssuming 'LoginName' is null[0m
  963 |   if ((LoginName = getlogin()) && LoginName[0] != '\0') {[0m
      | [0;1;32m       ^~~~~~~~~
[0m[1mscreen.c:963:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  963 |   if ((LoginName = getlogin()) && LoginName[0] != '\0') {[0m
      | [0;1;32m                               ^
[0m[1mscreen.c:968:7: [0m[0;1;36mnote: [0mAssuming 'ppp' is not equal to null[0m
  968 |   if (ppp == 0) {[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mscreen.c:968:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  968 |   if (ppp == 0) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:993:7: [0m[0;1;36mnote: [0mAssuming 'home' is not equal to null[0m
  993 |   if (home == 0 || *home == '\0')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:993:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mscreen.c:993:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  993 |   if (home == 0 || *home == '\0')[0m
      | [0;1;32m                   ^~~~~~~~~~~~~
[0m[1mscreen.c:993:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  993 |   if (home == 0 || *home == '\0')[0m
      | [0;1;32m  ^
[0m[1mscreen.c:995:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  995 |   if (strlen(LoginName) > MAXLOGINLEN)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:995:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  995 |   if (strlen(LoginName) > MAXLOGINLEN)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:999:7: [0m[0;1;36mnote: [0mAssuming 'multi' is null[0m
  999 |   if (multi && strlen(multi) > MAXLOGINLEN)[0m
      | [0;1;32m      ^~~~~
[0m[1mscreen.c:999:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  999 |   if (multi && strlen(multi) > MAXLOGINLEN)[0m
      | [0;1;32m            ^
[0m[1mscreen.c:1002:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1002 |   if (strlen(home) > MAXPATHLEN - 25)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1002:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1002 |   if (strlen(home) > MAXPATHLEN - 25)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1006:8: [0m[0;1;36mnote: [0m'detached' is 0[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mscreen.c:1006:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1006:20: [0m[0;1;36mnote: [0mAssuming 'lsflag' is not equal to 0[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mscreen.c:1006:28: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1006 |   if (!detached && !lsflag && !cmdflag && !(dflag && !mflag && !rflag && !xflag) &&[0m
      | [0;1;32m                           ^
[0m[1mscreen.c:1044:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1044 |     if ((oumask = (int)umask(0)) == -1)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1044:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1044 |     if ((oumask = (int)umask(0)) == -1)[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1048:15: [0m[0;1;36mnote: [0mAssuming the environment variable exists[0m
 1048 |     SockDir = getenv("SCREENDIR");[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1049:9: [0m[0;1;36mnote: [0m'SockDir' is non-null[0m
 1049 |     if (SockDir) {[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:1049:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1049 |     if (SockDir) {[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1050:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1050 |       if (strlen(SockDir) >= MAXPATHLEN - 1)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1050:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1050 |       if (strlen(SockDir) >= MAXPATHLEN - 1)[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1054:11: [0m[0;1;36mnote: [0m'multi' is null[0m
 1054 |       if (multi)[0m
      | [0;1;32m          ^~~~~
[0m[1mscreen.c:1054:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1054 |       if (multi)[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1060:9: [0m[0;1;36mnote: [0mAssuming 'multiattach' is 0[0m
 1060 |     if (multiattach) {[0m
      | [0;1;32m        ^~~~~~~~~~~
[0m[1mscreen.c:1060:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1060 |     if (multiattach) {[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1079:9: [0m[0;1;36mnote: [0m'SockDir' is non-null[0m
 1079 |     if (SockDir) {[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:1079:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1079 |     if (SockDir) {[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1080:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1080 |       if (access(SockDir, F_OK)) {[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1081:9: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1081 |         debug1("SockDir '%s' missing ...\n", SockDir);[0m
      | [0;1;32m        ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:1082:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1082 |         if (UserContext() > 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1082:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1082 |         if (UserContext() > 0) {[0m
      | [0;1;32m        ^
[0m[1mscreen.c:1088:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1088 |         if (UserStatus() <= 0)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1088:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1088 |         if (UserStatus() <= 0)[0m
      | [0;1;32m        ^
[0m[1mscreen.c:1091:11: [0m[0;1;36mnote: [0mAssuming 'SockDir' is equal to 'SockPath'[0m
 1091 |       if (SockDir != SockPath)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1091:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1091 |       if (SockDir != SockPath)[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1130:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1130 |   if (stat(SockPath, &st) == -1)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1133:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1133 |     if (!S_ISDIR(st.st_mode))[0m
      | [0;1;32m         ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:125:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISDIR'[0m
  125 | #define S_ISDIR(mode)    __S_ISTYPE((mode), __S_IFDIR)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1133:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1133 |     if (!S_ISDIR(st.st_mode))[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1136:7: [0m[0;1;36mnote: [0mAssuming 'multi' is null[0m
 1136 |   if (multi) {[0m
      | [0;1;32m      ^~~~~
[0m[1mscreen.c:1136:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1136 |   if (multi) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1148:9: [0m[0;1;36mnote: [0mAssuming 'real_uid' is equal to field 'st_uid'[0m
 1148 |     if ((int)st.st_uid != real_uid)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1148:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1148 |     if ((int)st.st_uid != real_uid)[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1153:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1153 |   if ((st.st_mode & 0777) != 0700)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1153:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1153 |   if ((st.st_mode & 0777) != 0700)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1155:7: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
 1155 |   if (SockMatch && index(SockMatch, '/'))[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:1155:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1155 |   if (SockMatch && index(SockMatch, '/'))[0m
      | [0;1;32m                ^
[0m[1mscreen.c:1160:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1160 |   debug2("SockPath: %s  SockMatch: %s\n", SockPath, SockMatch ? SockMatch : "NULL");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:1172:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1172 |   if ((ap = index(HostName, '.')) != NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1172:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1172 |   if ((ap = index(HostName, '.')) != NULL)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1175:7: [0m[0;1;36mnote: [0mAssuming 'lsflag' is 0[0m
 1175 |   if (lsflag) {[0m
      | [0;1;32m      ^~~~~~
[0m[1mscreen.c:1175:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1175 |   if (lsflag) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1199:7: [0m[0;1;36mnote: [0mAssuming 'cmdflag' is 0[0m
 1199 |   if (cmdflag) {[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1199:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1199 |   if (cmdflag) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1221:12: [0m[0;1;36mnote: [0mAssuming 'rflag' is 0[0m
 1221 |   else if (rflag || xflag) {[0m
      | [0;1;32m           ^~~~~
[0m[1mscreen.c:1221:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mscreen.c:1221:21: [0m[0;1;36mnote: [0mAssuming 'xflag' is 0[0m
 1221 |   else if (rflag || xflag) {[0m
      | [0;1;32m                    ^~~~~
[0m[1mscreen.c:1221:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1221 |   else if (rflag || xflag) {[0m
      | [0;1;32m       ^
[0m[1mscreen.c:1234:12: [0m[0;1;36mnote: [0mAssuming 'dflag' is 0[0m
 1234 |   else if (dflag && !mflag) {[0m
      | [0;1;32m           ^~~~~
[0m[1mscreen.c:1234:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1234 |   else if (dflag && !mflag) {[0m
      | [0;1;32m                 ^
[0m[1mscreen.c:1241:8: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
 1241 |   if (!SockMatch && !mflag && sty) {[0m
      | [0;1;32m       ^~~~~~~~~
[0m[1mscreen.c:1241:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1241 |   if (!SockMatch && !mflag && sty) {[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1241:22: [0m[0;1;36mnote: [0m'mflag' is 0[0m
 1241 |   if (!SockMatch && !mflag && sty) {[0m
      | [0;1;32m                     ^~~~~
[0m[1mscreen.c:1241:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1241 |   if (!SockMatch && !mflag && sty) {[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1241:31: [0m[0;1;36mnote: [0m'sty' is null[0m
 1241 |   if (!SockMatch && !mflag && sty) {[0m
      | [0;1;32m                              ^~~
[0m[1mscreen.c:1241:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1241 |   if (!SockMatch && !mflag && sty) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1252:8: [0m[0;1;36mnote: [0m'detached' is 0[0m
 1252 |   if (!detached || dflag != 2)[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mscreen.c:1252:17: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1252 |   if (!detached || dflag != 2)[0m
      | [0;1;32m                ^
[0m[1mscreen.c:1257:3: [0m[0;1;36mnote: [0mControl jumps to the 'default' case at line 1263[0m
 1257 |   switch (MasterPid) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1264:11: [0m[0;1;36mnote: [0m'detached' is 0[0m
 1264 |       if (detached)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mscreen.c:1264:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1264 |       if (detached)[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1266:11: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
 1266 |       if (SockMatch)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mscreen.c:1266:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1266 |       if (SockMatch)[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1270:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1274[0m
 1270 |     for (ap = socknamebuf; *ap; ap++)[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1274:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1274 |     if (strlen(socknamebuf) > NAME_MAX)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1274:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1274 |     if (strlen(socknamebuf) > NAME_MAX)[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1278:5: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1278 |     SET_GUID();[0m
      | [0;1;32m    ^
[0m[1mscreen.c:985:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET_GUID'[0m
  985 | #define SET_GUID() do \[0m
      | [0;1;32m                   ^
[0m[1mscreen.c:1283:8: [0m[0;1;36mnote: [0m'detached' is 0[0m
 1283 |   if (!detached)[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mscreen.c:1283:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1283 |   if (!detached)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1286:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1286 |   if (DefaultEsc == -1)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mscreen.c:1286:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1286 |   if (DefaultEsc == -1)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1288:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1288 |   if (DefaultMetaEsc == -1)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1288:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1288 |   if (DefaultMetaEsc == -1)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1292:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1299[0m
 1292 |   while (ap >= av0) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1299:7: [0m[0;1;36mnote: [0mAssuming 'ap' is >= 'av0'[0m
 1299 |   if (ap < av0)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mscreen.c:1299:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1299 |   if (ap < av0)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1316:8: [0m[0;1;36mnote: [0m'detached' is 0[0m
 1316 |   if (!detached) {[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mscreen.c:1316:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1316 |   if (!detached) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1317:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1317 |     if (attach_fd == -1) {[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1318:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1318 |       if ((n = secopen(attach_tty, O_RDWR | O_NONBLOCK, 0)) < 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1318:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1318 |       if ((n = secopen(attach_tty, O_RDWR | O_NONBLOCK, 0)) < 0)[0m
      | [0;1;32m      ^
[0m[1mscreen.c:1333:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1333 |   debug("-- screen.back debug started\n");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:1339:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1339 |   if (UserAdd(LoginName, (char *)0, (struct acluser **)0) < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1339:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1339 |   if (UserAdd(LoginName, (char *)0, (struct acluser **)0) < 0)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1341:8: [0m[0;1;36mnote: [0m'detached' is 0[0m
 1341 |   if (!detached) {[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mscreen.c:1341:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1341 |   if (!detached) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1342:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1342 |     if (MakeDisplay(LoginName, attach_tty, attach_term, n, getppid(), &attach_Mode) == 0)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1342:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1342 |     if (MakeDisplay(LoginName, attach_tty, attach_term, n, getppid(), &attach_Mode) == 0)[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1346:18: [0m[0;1;36mnote: [0mAssuming field 'encoding' is <= 0[0m
 1346 |     D_encoding = nwin_options.encoding > 0 ? nwin_options.encoding : 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1346:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mscreen.c:1347:5: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1347 |     debug1("D_encoding = %d\n", D_encoding);[0m
      | [0;1;32m    ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:1351:7: [0m[0;1;36mnote: [0m'SockMatch' is null[0m
 1351 |   if (SockMatch) {[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mscreen.c:1351:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1351 |   if (SockMatch) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1358:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1363[0m
 1358 |   for (ap = socknamebuf; *ap; ap++)[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1363:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1363 |   if (strlen(socknamebuf) > NAME_MAX) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1363:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1363 |   if (strlen(socknamebuf) > NAME_MAX) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1377:8: [0m[0;1;36mnote: [0mAssuming 'ap' is null[0m
 1377 |   if ((ap = getenv("SYSSCREENRC")))[0m
      | [0;1;32m       ^~
[0m[1mscreen.c:1377:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1377 |   if ((ap = getenv("SYSSCREENRC")))[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1389:7: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1389 |   if (display) {[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1389:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1389 |   if (display) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1422:7: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1422 |   if (display) {[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1422:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1422 |   if (display) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1435:8: [0m[0;1;36mnote: [0mAssuming 'ap' is null[0m
 1435 |   if ((ap = getenv("SYSSCREENRC")))[0m
      | [0;1;32m       ^~
[0m[1mscreen.c:1435:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1435 |   if ((ap = getenv("SYSSCREENRC")))[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1443:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1443 |   debug2("UID %d  EUID %d\n", (int)getuid(), (int)geteuid());[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:1444:7: [0m[0;1;36mnote: [0mAssuming 'windows' is equal to NULL[0m
 1444 |   if (windows == NULL) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mscreen.c:1444:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1444 |   if (windows == NULL) {[0m
      | [0;1;32m  ^
[0m[1mscreen.c:1445:5: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1445 |     debug("We open one default window, as screenrc did not specify one.\n");[0m
      | [0;1;32m    ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mscreen.c:1446:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1446 |     if (MakeWindow(&nwin) == -1) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:1446:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1446 |     if (MakeWindow(&nwin) == -1) {[0m
      | [0;1;32m    ^
[0m[1mscreen.c:1449:7: [0m[0;1;36mnote: [0mThe left expression of the compound assignment is an uninitialized value. The computed value will also be garbage[0m
 1449 |       FD_SET(0, &rfd);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/select.h:85:28: [0m[0;1;36mnote: [0mexpanded from macro 'FD_SET'[0m
   85 | #define FD_SET(fd, fdsetp)      __FD_SET (fd, fdsetp)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/bits/select.h:33:40: [0m[0;1;36mnote: [0mexpanded from macro '__FD_SET'[0m
   33 |   ((void) (__FDS_BITS (s)[__FD_ELT(d)] |= __FD_MASK(d)))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
[0m[1mscreen.c:1458:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1458 |   else if (ac) /* Screen was invoked with a command */[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1459 |     MakeWindow(&nwin);[0m
      | [0;1;32m                      
[0m[1mscreen.c:1465:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1465 |   if (display && default_startup)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1466 |     display_copyright();[0m
      | [0;1;32m                        
[0m[1mscreen.c:1492:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1492 | WindowDied(p, wstat, wstat_valid)[0m
      | [0;1;32m^
[0m[1mscreen.c:1523:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1523 |       WIFEXITED(wstat) && WEXITSTATUS(wstat) == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1524 |     killit = 1;[0m
      | [0;1;32m               
[0m[1mscreen.c:1531:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1531 |       if (WIFEXITED(wstat))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1532 |         if (WEXITSTATUS(wstat))[0m
 1533 |           sprintf(reason, "terminated with exit status %d", WEXITSTATUS(wstat));[0m
 1534 |         else[0m
 1535 |           sprintf(reason, "terminated normally");[0m
 1536 |       else if (WIFSIGNALED(wstat))[0m
      | [0;32m      } 
[0m[1mscreen.c:1532:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1532 |         if (WEXITSTATUS(wstat))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1533 |           sprintf(reason, "terminated with exit status %d", WEXITSTATUS(wstat));[0m
 1534 |         else[0m
      | [0;32m        } 
[0m[1mscreen.c:1533:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1533 |           sprintf(reason, "terminated with exit status %d", WEXITSTATUS(wstat));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:1533:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1533 |           sprintf(reason, "terminated with exit status %d", WEXITSTATUS(wstat));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:1534:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1534 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1535 |           sprintf(reason, "terminated normally");[0m
      | [0;1;32m                                                 
[0m[1mscreen.c:1535:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1535 |           sprintf(reason, "terminated normally");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:1535:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1535 |           sprintf(reason, "terminated normally");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:1536:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1536 |       else if (WIFSIGNALED(wstat))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1537 |         sprintf(reason, "terminated with signal %d%s", WTERMSIG(wstat),[0m
 1538 | [0m
 1539 | #ifdef WCOREDUMP[0m
 1540 |                WCOREDUMP(wstat) ? " (core file generated)" : "");[0m
      | [0;1;32m                                                                 
[0m[1mscreen.c:1537:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1537 |         sprintf(reason, "terminated with signal %d%s", WTERMSIG(wstat),[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:1537:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1537 |         sprintf(reason, "terminated with signal %d%s", WTERMSIG(wstat),[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:1544:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1544 |     } else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1545 |       sprintf(reason, "detached from window");[0m
      | [0;1;32m                                              
[0m[1mscreen.c:1545:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1545 |       sprintf(reason, "detached from window");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1545:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1545 |       sprintf(reason, "detached from window");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:1549:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1549 |     if (s && *s)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1550 |       s[strlen(s) - 1] = '\0';[0m
      | [0;1;32m                              
[0m[1mscreen.c:1566:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1566 |     sprintf(buf, "\n\r=== Command %s (%s) ===", reason, s ? s : "?");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mscreen.c:1566:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1566 |     sprintf(buf, "\n\r=== Command %s (%s) ===", reason, s ? s : "?");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mscreen.c:1576:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1576 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1577 |     KillWindow(p);[0m
      | [0;1;32m                  
[0m[1mscreen.c:1603:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1603 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1604 |       debug1("'%s' reconstructed\n", SockPath);[0m
      | [0;1;32m                                               
[0m[1mscreen.c:1606:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1606 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1607 |     debug2("SigChldHandler: stat '%s' o.k. (%03o)\n", SockPath, (int)st.st_mode);[0m
      | [0;1;32m                                                                                 
[0m[1mscreen.c:1610:17: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1610 | static sigret_t SigChld SIGDEFARG[0m
      | [0;1;32m                ^
[0m[1mscreen.c:1617:10: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1617 | sigret_t SigHup SIGDEFARG[0m
      | [0;1;32m         ^
[0m[1mscreen.c:1620:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1620 |   while ((display = displays) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1621 |     Hangup();[0m
      | [0;1;32m             
[0m[1mscreen.c:1630:17: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1630 | static sigret_t SigInt SIGDEFARG[0m
      | [0;1;32m                ^
[0m[1mscreen.c:1652:17: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1652 | static sigret_t CoreDump SIGDEFARG[0m
      | [0;1;32m                ^
[0m[1mscreen.c:1663:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1663 |   if (running_w_s_bit)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1664 |     dump_msg = "";[0m
      | [0;1;32m                  
[0m[1mscreen.c:1670:3: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1670 |   setgid(getgid());[0m
      | [0;1;32m  ^~~~~~
[0m[1mscreen.c:1670:3: [0m[0;1;36mnote: [0mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges[0m
 1670 |   setgid(getgid());[0m
      | [0;1;32m  ^~~~~~
[0m[1mscreen.c:1671:3: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1671 |   setuid(getuid());[0m
      | [0;1;32m  ^~~~~~
[0m[1mscreen.c:1671:3: [0m[0;1;36mnote: [0mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges[0m
 1671 |   setuid(getuid());[0m
      | [0;1;32m  ^~~~~~
[0m[1mscreen.c:1675:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1675 |   sprintf(buf, "\r\n[screen caught signal %d.%s]\r\n", sigsig, dump_msg);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mscreen.c:1675:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1675 |   sprintf(buf, "\r\n[screen caught signal %d.%s]\r\n", sigsig, dump_msg);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mscreen.c:1681:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1681 |     if (disp->d_nonblock < -1 || disp->d_nonblock > 1000000)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1682 |     continue;[0m
      | [0;1;32m             
[0m[1mscreen.c:1697:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1697 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1698 |     abort();[0m
      | [0;1;32m            
[0m[1mscreen.c:1766:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1766 |         if (killpg(pid, SIGCONT))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1767 |           kill(pid, SIGCONT);[0m
      | [0;1;32m                             
[0m[1mscreen.c:1802:17: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1802 | static sigret_t FinitHandler SIGDEFARG[0m
      | [0;1;32m                ^
[0m[1mscreen.c:1838:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1838 |     if (D_status)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1839 |       RemoveStatus();[0m
      | [0;1;32m                     
[0m[1mscreen.c:1863:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1863 |     setgid(real_gid);[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1863:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setgid' is not checked.  If an error occurs in 'setgid', the following code may execute with unexpected privileges[0m
 1863 |     setgid(real_gid);[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1864:5: [0m[0;1;35mwarning: [0m[1mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges [clang-analyzer-security.insecureAPI.UncheckedReturn][0m
 1864 |     setuid(real_uid);[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1864:5: [0m[0;1;36mnote: [0mThe return value from the call to 'setuid' is not checked.  If an error occurs in 'setuid', the following code may execute with unexpected privileges[0m
 1864 |     setuid(real_uid);[0m
      | [0;1;32m    ^~~~~~
[0m[1mscreen.c:1872:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1872 |   if (display == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1873 |     return;[0m
      | [0;1;32m           
[0m[1mscreen.c:1879:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1879 |   if (auto_detach || displays->d_next)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1880 |     Detach(D_HANGUP);[0m
 1881 |   else[0m
      | [0;32m  } 
[0m[1mscreen.c:1881:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1881 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1882 |     Finit(0);[0m
      | [0;1;32m             
[0m[1mscreen.c:1904:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1904 |   if (display == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1905 |     return;[0m
      | [0;1;32m           
[0m[1mscreen.c:1920:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1920 |   if (D_status)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1921 |     RemoveStatus();[0m
      | [0;1;32m                   
[0m[1mscreen.c:1923:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1923 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1924 |     return;[0m
      | [0;1;32m           
[0m[1mscreen.c:1928:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1928 |       sign = SIG_BYE;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1929 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:1932:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1932 |       AddStrSock("detached");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1933 |       sign = SIG_BYE;[0m
 1934 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:1907:25: [0m[0;1;36mnote: [0mexpanded from macro 'AddStrSock'[0m
 1907 | #define AddStrSock(msg) do { \[0m
      | [0;1;32m                        ^
[0m[1mscreen.c:1938:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1938 |       sign = SIG_STOP;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1939 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:1944:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1944 |       AddStrSock("remote detached");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1945 |       sign = SIG_BYE;[0m
 1946 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:1907:25: [0m[0;1;36mnote: [0mexpanded from macro 'AddStrSock'[0m
 1907 | #define AddStrSock(msg) do { \[0m
      | [0;1;32m                        ^
[0m[1mscreen.c:1951:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1951 |       AddStrSock("power detached");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1952 |       if (PowDetachString) {[0m
 1953 |         AddStr(PowDetachString);[0m
 1954 |         AddStr("\r\n");[0m
 1955 |       }[0m
 1956 |       sign = SIG_POWER_BYE;[0m
 1957 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:1907:25: [0m[0;1;36mnote: [0mexpanded from macro 'AddStrSock'[0m
 1907 | #define AddStrSock(msg) do { \[0m
      | [0;1;32m                        ^
[0m[1mscreen.c:1961:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1961 |       AddStrSock("remote power detached");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1962 |       if (PowDetachString) {[0m
 1963 |         AddStr(PowDetachString);[0m
 1964 |         AddStr("\r\n");[0m
 1965 |       }[0m
 1966 |       sign = SIG_POWER_BYE;[0m
 1967 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:1907:25: [0m[0;1;36mnote: [0mexpanded from macro 'AddStrSock'[0m
 1907 | #define AddStrSock(msg) do { \[0m
      | [0;1;32m                        ^
[0m[1mscreen.c:1972:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1972 |       ClearAll();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1973 |       sign = SIG_LOCK;[0m
 1974 |       /* tell attacher to lock terminal with a lockprg. */[0m
 1975 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:1989:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1989 |   if (mode != D_HANGUP)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1990 |     RestoreLoginSlot();[0m
      | [0;1;32m                       
[0m[1mscreen.c:2013:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2013 |     if (p)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2014 |       WindowChanged(p, 'u');[0m
      | [0;1;32m                            
[0m[1mscreen.c:2021:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2021 |   if (displays == 0) /* Flag detached-ness */[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2022 |     (void) chsock();[0m
      | [0;1;32m                    
[0m[1mscreen.c:2049:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2049 |   for (op = environ; *op; ++op)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2050 |     ;[0m
      | [0;1;32m     
[0m[1mscreen.c:2051:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2051 |   if (NewEnv)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2052 |     free((char *)NewEnv);[0m
      | [0;1;32m                         
[0m[1mscreen.c:2053:27: [0m[0;1;35mwarning: [0m[1mResult of 'malloc' is converted to a pointer of type 'char *', which is incompatible with sizeof operand type 'char **' [clang-analyzer-unix.MallocSizeof][0m
 2053 |   NewEnv = np = (char **) malloc((unsigned) (op - environ + 7 + 1) * sizeof(char **));[0m
      | [0;1;32m                 ~~~~~~~  ^~~~~~                                     ~~~~~~~~~~~~~~~
[0m[1mscreen.c:2053:27: [0m[0;1;36mnote: [0mResult of 'malloc' is converted to a pointer of type 'char *', which is incompatible with sizeof operand type 'char **'[0m
 2053 |   NewEnv = np = (char **) malloc((unsigned) (op - environ + 7 + 1) * sizeof(char **));[0m
      | [0;1;32m                 ~~~~~~~  ^~~~~~                                     ~~~~~~~~~~~~~~~
[0m[1mscreen.c:2054:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2054 |   if (!NewEnv)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2055 |     Panic(0, "%s", strnomem);[0m
      | [0;1;32m                             
[0m[1mscreen.c:2056:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2056 |   sprintf(stybuf, "STY=%s", strlen(SockName) <= MAXSTR - 5 ? SockName : "?");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mscreen.c:2056:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2056 |   sprintf(stybuf, "STY=%s", strlen(SockName) <= MAXSTR - 5 ? SockName : "?");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mscreen.c:2070:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2070 |       && !IsSymbol(*op, "LINES") && !IsSymbol(*op, "COLUMNS"))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2071 |       *np++ = *op;[0m
      | [0;1;32m                  
[0m[1mscreen.c:2105:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2105 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2097:2: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2097 |         strncpy(p, strerror(err), B + sizeof(B) - p - 1);       \[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:2105:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2105 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2097:2: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2097 |         strncpy(p, strerror(err), B + sizeof(B) - p - 1);       \[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:2105:3: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2105 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2090:11: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2090 |     (void)vsnprintf(p, sizeof(B) - 100, fmt, VA_ARGS(ap));      \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mscreen.c:2105:3: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
 2105 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2090:11: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2090 |     (void)vsnprintf(p, sizeof(B) - 100, fmt, VA_ARGS(ap));      \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mscreen.c:2109:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2109 |   if (display && displays)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2110 |     MakeStatus(buf);[0m
 2111 |   else if (displays) {[0m
      | [0;32m  } 
[0m[1mscreen.c:2112:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2112 |     for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2113 |       MakeStatus(buf);[0m
      | [0;1;32m                      
[0m[1mscreen.c:2125:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2125 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2126 |     printf("%s\r\n", buf);[0m
      | [0;1;32m                          
[0m[1mscreen.c:2128:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2128 |   if (queryflag >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2129 |     write(queryflag, buf, strlen(buf));[0m
      | [0;1;32m                                       
[0m[1mscreen.c:2138:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2138 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2097:2: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2097 |         strncpy(p, strerror(err), B + sizeof(B) - p - 1);       \[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:2138:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2138 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2097:2: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2097 |         strncpy(p, strerror(err), B + sizeof(B) - p - 1);       \[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:2138:3: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2138 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2090:11: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2090 |     (void)vsnprintf(p, sizeof(B) - 100, fmt, VA_ARGS(ap));      \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mscreen.c:2138:3: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
 2138 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2090:11: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2090 |     (void)vsnprintf(p, sizeof(B) - 100, fmt, VA_ARGS(ap));      \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mscreen.c:2143:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2143 |     if (PanicPid)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2144 |       Kill(PanicPid, SIG_BYE);[0m
      | [0;1;32m                              
[0m[1mscreen.c:2156:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2156 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m[1mscreen.c:2158:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2158 |       if (D_status)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2159 |         RemoveStatus();[0m
      | [0;1;32m                       
[0m[1mscreen.c:2170:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2170 |       if (D_userpid)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2171 |         Kill(D_userpid, SIG_BYE);[0m
      | [0;1;32m                                 
[0m[1mscreen.c:2177:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2177 |     if (setuid(own_uid))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2178 |       xseteuid(own_uid);        /* may be a loop. sigh. */[0m
      | [0;1;32m                                                          
[0m[1mscreen.c:2194:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2194 |   if (queryflag < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2195 |     return;[0m
      | [0;1;32m           
[0m[1mscreen.c:2197:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2197 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2097:2: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2097 |         strncpy(p, strerror(err), B + sizeof(B) - p - 1);       \[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:2197:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2197 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2097:2: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2097 |         strncpy(p, strerror(err), B + sizeof(B) - p - 1);       \[0m
      | [0;1;32m        ^~~~~~~
[0m[1mscreen.c:2197:3: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2197 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2090:11: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2090 |     (void)vsnprintf(p, sizeof(B) - 100, fmt, VA_ARGS(ap));      \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mscreen.c:2197:3: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
 2197 |   PROCESS_MESSAGE(buf);[0m
      | [0;1;32m  ^
[0m[1mscreen.c:2090:11: [0m[0;1;36mnote: [0mexpanded from macro 'PROCESS_MESSAGE'[0m
 2090 |     (void)vsnprintf(p, sizeof(B) - 100, fmt, VA_ARGS(ap));      \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mscreen.c:2232:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2232 |   if (padlen < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2233 |     padlen = 0;[0m
      | [0;1;32m               
[0m[1mscreen.c:2247:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2247 |       while (i-- > 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2248 |             *pn-- = ' ';[0m
      | [0;1;32m                        
[0m[1mscreen.c:2251:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2251 |       if (r && p - buf + 1== winmsg_rendpos[r - 1])[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2252 |         winmsg_rendpos[--r] = pn - buf + 1;[0m
      | [0;1;32m                                           
[0m[1mscreen.c:2279:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2279 |     if (c == '\t')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2280 |     c = ' ';[0m
      | [0;1;32m            
[0m[1mscreen.c:2281:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2281 |     if (c >= ' ' || c == '\005')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2282 |       *q++ = c;[0m
      | [0;1;32m               
[0m[1mscreen.c:2307:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2307 |   for (j = 0; j < l; j++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2308 |     if (bt->buf[i - j - 1] == '\n')[0m
 2309 |       break;[0m
      | [0;1;32m            
[0m[1mscreen.c:2308:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2308 |     if (bt->buf[i - j - 1] == '\n')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2309 |       break;[0m
      | [0;1;32m            
[0m[1mscreen.c:2312:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2312 |     for (k = i - j - 2; k >= 0; k--)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2313 |       if (bt->buf[k] == '\n')[0m
 2314 |         break;[0m
      | [0;1;32m              
[0m[1mscreen.c:2313:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2313 |       if (bt->buf[k] == '\n')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2314 |         break;[0m
      | [0;1;32m              
[0m[1mscreen.c:2316:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2316 |     bcopy(bt->buf + k, bt->result, i - j - k);[0m
      | [0;1;32m    ^~~~~
[0m[1mscreen.c:2316:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2316 |     bcopy(bt->buf + k, bt->result, i - j - k);[0m
      | [0;1;32m    ^~~~~
[0m[1mscreen.c:2328:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2328 |     if (j)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2329 |       bcopy(bt->buf + i - j, bt->buf, j);[0m
      | [0;1;32m                                         
[0m[1mscreen.c:2329:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2329 |       bcopy(bt->buf + i - j, bt->buf, j);[0m
      | [0;1;32m      ^~~~~
[0m[1mscreen.c:2329:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2329 |       bcopy(bt->buf + i - j, bt->buf, j);[0m
      | [0;1;32m      ^~~~~
[0m[1mscreen.c:2341:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2341 |   for (btp = &backticks; (bt = *btp) != 0; btp = &bt->next)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 2342 |     if (bt->num == num)[0m
 2343 |       break;[0m
      | [0;1;32m            
[0m[1mscreen.c:2342:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2342 |     if (bt->num == num)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2343 |       break;[0m
      | [0;1;32m            
[0m[1mscreen.c:2345:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2345 |   if (!bt && !cmdv)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2346 |     return;[0m
      | [0;1;32m           
[0m[1mscreen.c:2349:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2349 |     for (v = bt->cmdv; *v; v++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2350 |       free(*v);[0m
      | [0;1;32m               
[0m[1mscreen.c:2352:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2352 |     if (bt->buf)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2353 |           free(bt->buf);[0m
      | [0;1;32m                        
[0m[1mscreen.c:2354:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2354 |     if (bt->ev.fd >= 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2355 |           close(bt->ev.fd);[0m
      | [0;1;32m                           
[0m[1mscreen.c:2371:5: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 2371 |     bzero(bt, sizeof(*bt));[0m
      | [0;1;32m    ^~~~~
[0m[1mscreen.c:2371:5: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 2371 |     bzero(bt, sizeof(*bt));[0m
      | [0;1;32m    ^~~~~
[0m[1mscreen.c:2399:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2399 |     if (bt->ev.fd >= 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2400 |       evenq(&bt->ev);[0m
      | [0;1;32m                     
[0m[1mscreen.c:2410:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2410 |   if (bt->tick && (!*tickp || bt->tick < *tickp))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2411 |     *tickp = bt->tick;[0m
      | [0;1;32m                      
[0m[1mscreen.c:2418:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2418 |   if (f == -1)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2419 |     return bt->result;[0m
      | [0;1;32m                      
[0m[1mscreen.c:2424:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2424 |     for (j = 1; j < l; j++)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2425 |           if (bt->result[i - j - 1] == '\n')[0m
 2426 |             break;[0m
      | [0;1;32m                  
[0m[1mscreen.c:2425:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2425 |           if (bt->result[i - j - 1] == '\n')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2426 |             break;[0m
      | [0;1;32m                  
[0m[1mscreen.c:2434:4: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2434 |           bcopy(bt->result + i - j, bt->result, j);[0m
      | [0;1;32m          ^~~~~
[0m[1mscreen.c:2434:4: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2434 |           bcopy(bt->result + i - j, bt->result, j);[0m
      | [0;1;32m          ^~~~~
[0m[1mscreen.c:2441:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2441 |   if (i && bt->result[i - 1] == '\n')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2442 |     i--;[0m
      | [0;1;32m        
[0m[1mscreen.c:2453:91: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2453 |   if (winmsg_numrend >= MAX_WINMSG_REND || str < winmsg_buf || str >= winmsg_buf + MAXSTR)[0m
      | [0;1;32m                                                                                          ^
[0m      | [0;32m                                                                                           {
[0m 2454 |     return -1;[0m
      | [0;1;32m              
[0m[1mscreen.c:2485:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2485 |   if (winmsg_numrend >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2486 |     winmsg_numrend = 0;[0m
 2487 |   else[0m
      | [0;32m  } 
[0m[1mscreen.c:2487:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2487 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2488 |     winmsg_numrend = -winmsg_numrend;[0m
      | [0;1;32m                                     
[0m[1mscreen.c:2498:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2498 |       if (*s != '^' && *s >= 64)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2499 |         *p &= 0x1f;[0m
      | [0;1;32m                   
[0m[1mscreen.c:2512:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2512 |             ctrl = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2513 |             *p-- = '^';[0m
 2514 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2517:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2517 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mscreen.c:2523:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2523 |     if (*++s == esc)    /* double escape ? */[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2524 |       continue;[0m
      | [0;1;32m               
[0m[1mscreen.c:2526:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2526 |     if ((plusflg = *s == '+') != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2527 |       s++;[0m
      | [0;1;32m          
[0m[1mscreen.c:2529:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2529 |     if ((minusflg = *s == '-') != 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2530 |       s++;[0m
      | [0;1;32m          
[0m[1mscreen.c:2532:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2532 |     if ((zeroflg = *s == '0') != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2533 |       s++;[0m
      | [0;1;32m          
[0m[1mscreen.c:2536:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2536 |     while(*s >= '0' && *s <= '9')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2537 |           num = num * 10 + (*s++ - '0');[0m
      | [0;1;32m                                        
[0m[1mscreen.c:2539:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2539 |     if ((longflg = *s == 'L') != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2540 |       s++;[0m
      | [0;1;32m          
[0m[1mscreen.c:2544:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2544 |         p--;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2545 |         if (qmpos) {[0m
 2546 |           if ((!qmflag && !omflag) || omflag == 1){[0m
 2547 |             p = qmpos;[0m
 2548 |             if (qmnumrend < winmsg_numrend)[0m
 2549 |               winmsg_numrend = qmnumrend;[0m
 2550 |                   }[0m
 2551 |               qmpos = 0;[0m
 2552 |               break;[0m
 2553 |             }[0m
 2554 |             qmpos = p;[0m
 2555 |             qmnumrend = winmsg_numrend;[0m
 2556 |             qmflag = omflag = 0;[0m
 2557 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2548:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2548 |             if (qmnumrend < winmsg_numrend)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2549 |               winmsg_numrend = qmnumrend;[0m
      | [0;1;32m                                         
[0m[1mscreen.c:2560:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2560 |         p--;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2561 |         if (!qmpos)[0m
 2562 |           break;[0m
 2563 |         if (qmflag && omflag != 1) {[0m
 2564 |           omflag = 1;[0m
 2565 |           qmpos = p;[0m
 2566 |           qmnumrend = winmsg_numrend;[0m
 2567 |         }[0m
 2568 |         else {[0m
 2569 |           p = qmpos;[0m
 2570 |           if (qmnumrend < winmsg_numrend)[0m
 2571 |             winmsg_numrend = qmnumrend;[0m
 2572 |           omflag = -1;[0m
 2573 |             }[0m
 2574 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mscreen.c:2561:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2561 |         if (!qmpos)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2562 |           break;[0m
      | [0;1;32m                
[0m[1mscreen.c:2570:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2570 |           if (qmnumrend < winmsg_numrend)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2571 |             winmsg_numrend = qmnumrend;[0m
      | [0;1;32m                                       
[0m[1mscreen.c:2579:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2579 |         if (l < 4)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2580 |           break;[0m
      | [0;1;32m                
[0m[1mscreen.c:2581:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2581 |         if (tm == 0) {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mscreen.c:2587:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2587 |         if (!tick || tick > 3600)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2588 |         tick = 3600;[0m
      | [0;1;32m                    
[0m[1mscreen.c:2592:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2592 |             sprintf(p, "%02d", tm->tm_mday % 100);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2592:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2592 |             sprintf(p, "%02d", tm->tm_mday % 100);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2592:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2592 |             sprintf(p, "%02d", tm->tm_mday % 100);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2593 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2597:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2597 |             strftime(p, l, (longflg ? "%A" : "%a"), tm);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2598 | #else[0m
 2599 |             sprintf(p, "%3.3s", days + 3 * tm->tm_wday);[0m
 2600 | #endif[0m
 2601 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2604:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2604 |             sprintf(p, "%02d", tm->tm_mon + 1);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2604:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2604 |             sprintf(p, "%02d", tm->tm_mon + 1);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2604:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2604 |             sprintf(p, "%02d", tm->tm_mon + 1);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2605 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2609:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2609 |             strftime(p, l, (longflg ? "%B" : "%b"), tm);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2610 | #else[0m
 2611 |             sprintf(p, "%3.3s", months + 3 * tm->tm_mon);[0m
 2612 | #endif[0m
 2613 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2616:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2616 |             sprintf(p, "%02d", tm->tm_year % 100);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2616:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2616 |             sprintf(p, "%02d", tm->tm_year % 100);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2616:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2616 |             sprintf(p, "%02d", tm->tm_year % 100);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2617 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2620:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2620 |             sprintf(p, "%04d", tm->tm_year + 1900);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2620:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2620 |             sprintf(p, "%04d", tm->tm_year + 1900);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2620:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2620 |             sprintf(p, "%04d", tm->tm_year + 1900);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2621 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2624:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2624 |             sprintf(p, tm->tm_hour >= 12 ? "pm" : "am");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2624:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2624 |             sprintf(p, tm->tm_hour >= 12 ? "pm" : "am");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2624:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2624 |             sprintf(p, tm->tm_hour >= 12 ? "pm" : "am");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2625 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2628:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2628 |             sprintf(p, tm->tm_hour >= 12 ? "PM" : "AM");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2628:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2628 |             sprintf(p, tm->tm_hour >= 12 ? "PM" : "AM");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2628:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2628 |             sprintf(p, tm->tm_hour >= 12 ? "PM" : "AM");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2629 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2632:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2632 |             sprintf(p, "%02d", tm->tm_sec);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2632:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2632 |             sprintf(p, "%02d", tm->tm_sec);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2632:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2632 |             sprintf(p, "%02d", tm->tm_sec);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2633 |             tick = 1;[0m
 2634 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2637:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2637 |             sprintf(p, zeroflg ? "%02d:%02d" : "%2d:%02d", tm->tm_hour, tm->tm_min);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2637:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2637 |             sprintf(p, zeroflg ? "%02d:%02d" : "%2d:%02d", tm->tm_hour, tm->tm_min);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2637:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2637 |             sprintf(p, zeroflg ? "%02d:%02d" : "%2d:%02d", tm->tm_hour, tm->tm_min);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2638 |             if (!tick || tick > 60)[0m
 2639 |               tick = 60;[0m
 2640 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2638:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2638 |             if (!tick || tick > 60)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2639 |               tick = 60;[0m
      | [0;1;32m                        
[0m[1mscreen.c:2643:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2643 |             sprintf(p, zeroflg ? "%02d:%02d" : "%2d:%02d", (tm->tm_hour + 11) % 12 + 1, tm->tm_min);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2643:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2643 |             sprintf(p, zeroflg ? "%02d:%02d" : "%2d:%02d", (tm->tm_hour + 11) % 12 + 1, tm->tm_min);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mscreen.c:2643:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2643 |             sprintf(p, zeroflg ? "%02d:%02d" : "%2d:%02d", (tm->tm_hour + 11) % 12 + 1, tm->tm_min);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2644 |             if (!tick || tick > 60)[0m
 2645 |               tick = 60;[0m
 2646 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mscreen.c:2644:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2644 |             if (!tick || tick > 60)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2645 |               tick = 60;[0m
      | [0;1;32m                        
[0m[1mscreen.c:2649:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2649 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mscreen.c:2657:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2657 |         for (i = 0; win && win->w_cmdargs[i]; i++) {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2658 |           if (l < strlen(win->w_cmdargs[i]) + 1)[0m
 2659 |             break;[0m
 2660 |           sprintf(p, i ? " %s" : "%s", win->w_cmdargs[i]);[0m
 2661 |           l -= strlen(p);[0m
 2662 |           p += strlen(p);[0m
 2663 |           if (i == 0 && *s == 'X')[0m
 2664 |             break;[0m
 2665 |                 }[0m
 2666 |                 p--;[0m
 2667 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mscreen.c:2658:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2658 |           if (l < strlen(win->w_cmdargs[i]) + 1)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2659 |             break;[0m
      | [0;1;32m                  
[0m[1mscreen.c:2660:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2660 |           sprintf(p, i ? " %s" : "%s", win->w_cmdargs[i]);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:2660:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2660 |           sprintf(p, i ? " %s" : "%s", win->w_cmdargs[i]);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:2663:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2663 |           if (i == 0 && *s == 'X')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2664 |             break;[0m
      | [0;1;32m                  
[0m[1mscreen.c:2671:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2671 |         *p = 0;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mscreen.c:2672:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2672 |         if (l > 20)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2673 |           AddLoadav(p);[0m
      | [0;1;32m                       
[0m[1mscreen.c:2678:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2678 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2679 |           *p = '?';[0m
      | [0;1;32m                   
[0m[1mscreen.c:2681:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2681 |         if (!tick || tick > 60)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2682 |           tick = 60;[0m
      | [0;1;32m                    
[0m[1mscreen.c:2695:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2695 |         if (*s == '`') {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mscreen.c:2696:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2696 |           for (bt = backticks; bt; bt = bt->next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2697 |             if (bt->num == num)[0m
 2698 |               break;[0m
      | [0;1;32m                    
[0m[1mscreen.c:2697:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2697 |             if (bt->num == num)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2698 |               break;[0m
      | [0;1;32m                    
[0m[1mscreen.c:2710:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2710 |           strcpy(savebuf, winmsg_buf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mscreen.c:2710:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2710 |           strcpy(savebuf, winmsg_buf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mscreen.c:2715:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2715 |           if (!tick || oldtick < tick)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2716 |             tick = oldtick;[0m
      | [0;1;32m                           
[0m[1mscreen.c:2717:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2717 |           if ((int)strlen(winmsg_buf) < l)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2718 |             strcat(savebuf, winmsg_buf);[0m
      | [0;1;32m                                        
[0m[1mscreen.c:2718:13: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2718 |             strcat(savebuf, winmsg_buf);[0m
      | [0;1;32m            ^~~~~~
[0m[1mscreen.c:2718:13: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 2718 |             strcat(savebuf, winmsg_buf);[0m
      | [0;1;32m            ^~~~~~
[0m[1mscreen.c:2719:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2719 |           strcpy(winmsg_buf, savebuf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mscreen.c:2719:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2719 |           strcpy(winmsg_buf, savebuf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mscreen.c:2720:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2720 |           while (oldnumrend < winmsg_numrend)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2721 |             winmsg_rendpos[oldnumrend++] += p - winmsg_buf;[0m
      | [0;1;32m                                                           
[0m[1mscreen.c:2722:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2722 |           if (*p)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2723 |             qmflag = 1;[0m
      | [0;1;32m                       
[0m[1mscreen.c:2737:9: [0m[0;1;35mwarning: [0m[1mValue stored to 'ss' is never read [clang-analyzer-deadcode.DeadStores][0m
 2737 |         ss = AddWindows(p, l - 1, (*s == 'w' ? 0 : 1) |[0m
      | [0;1;32m        ^    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 2738 |              (longflg ? 0 : 2) | (plusflg ? 4 : 0) |[0m
      | [0;1;32m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 2739 |              (minusflg ? 8 : 0), win ? win->w_number : -1);[0m
      | [0;1;32m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:2737:9: [0m[0;1;36mnote: [0mValue stored to 'ss' is never read[0m
 2737 |         ss = AddWindows(p, l - 1, (*s == 'w' ? 0 : 1) |[0m
      | [0;1;32m        ^    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 2738 |              (longflg ? 0 : 2) | (plusflg ? 4 : 0) |[0m
      | [0;1;32m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 2739 |              (minusflg ? 8 : 0), win ? win->w_number : -1);[0m
      | [0;1;32m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:2740:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2740 |         if (display)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2741 |         D_fore = oldfore;[0m
      | [0;1;32m                         
[0m[1mscreen.c:2743:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2743 |           if (*p)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2744 |         qmflag = 1;[0m
 2745 |       p += strlen(p) - 1;[0m
 2746 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2743:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2743 |           if (*p)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2744 |         qmflag = 1;[0m
      | [0;1;32m                   
[0m[1mscreen.c:2749:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2749 |       *p = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2750 |       if (win)[0m
 2751 |         AddOtherUsers(p, l - 1, win);[0m
 2752 |       if (*p)[0m
 2753 |         qmflag = 1;[0m
 2754 |       p += strlen(p) - 1;[0m
 2755 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2750:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2750 |       if (win)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2751 |         AddOtherUsers(p, l - 1, win);[0m
      | [0;1;32m                                     
[0m[1mscreen.c:2752:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2752 |       if (*p)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2753 |         qmflag = 1;[0m
      | [0;1;32m                   
[0m[1mscreen.c:2758:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2758 |       *p = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2759 |       if (win)[0m
 2760 |         AddWindowFlags(p, l - 1, win);[0m
 2761 |       if (*p)[0m
 2762 |         qmflag = 1;[0m
 2763 |       p += strlen(p) - 1;[0m
 2764 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2759:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2759 |       if (win)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2760 |         AddWindowFlags(p, l - 1, win);[0m
      | [0;1;32m                                      
[0m[1mscreen.c:2761:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2761 |       if (*p)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2762 |         qmflag = 1;[0m
      | [0;1;32m                   
[0m[1mscreen.c:2767:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2767 |       *p = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2768 |       if (win && (int)strlen(win->w_title) < l) {[0m
 2769 |         strcpy(p, win->w_title);[0m
 2770 |         if (*p)[0m
 2771 |           qmflag = 1;[0m
 2772 |       }[0m
 2773 |       p += strlen(p) - 1;[0m
 2774 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2769:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2769 |         strcpy(p, win->w_title);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:2769:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2769 |         strcpy(p, win->w_title);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:2770:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2770 |         if (*p)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2771 |           qmflag = 1;[0m
      | [0;1;32m                     
[0m[1mscreen.c:2778:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2778 |       *p = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2779 |       D_encoding = nwin_options.encoding > 0 ? nwin_options.encoding : 0;[0m
 2780 |       if (win && win->w_encoding) {[0m
 2781 |         *p++ = ' ';[0m
 2782 |         strcpy(p, EncodingName(win->w_encoding));[0m
 2783 |       }[0m
 2784 |       p += strlen(p) - 1;[0m
 2785 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2782:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2782 |         strcpy(p, EncodingName(win->w_encoding));[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:2782:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2782 |         strcpy(p, EncodingName(win->w_encoding));[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:2789:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2789 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mscreen.c:2793:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2793 |       for (i = 0; i < 127; i++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2794 |         if (s[i] && s[i] != '}')[0m
 2795 |           rbuf[i] = s[i];[0m
 2796 |         else[0m
 2797 |           break;[0m
      | [0;1;32m                
[0m[1mscreen.c:2794:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2794 |         if (s[i] && s[i] != '}')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2795 |           rbuf[i] = s[i];[0m
 2796 |         else[0m
      | [0;32m        } 
[0m[1mscreen.c:2796:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2796 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2797 |           break;[0m
      | [0;1;32m                
[0m[1mscreen.c:2804:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2804 |         if (i != 1 || rbuf[0] != '-')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2805 |           r = ParseAttrColor(rbuf, (char *)0, 0);[0m
      | [0;1;32m                                                 
[0m[1mscreen.c:2818:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2818 |       *p = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2819 |       if ((int)strlen(HostName) < l) {[0m
 2820 |         strcpy(p, HostName);[0m
 2821 |         if (*p)[0m
 2822 |           qmflag = 1;[0m
 2823 |       }[0m
 2824 |       p += strlen(p) - 1;[0m
 2825 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2820:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2820 |         strcpy(p, HostName);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:2820:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2820 |         strcpy(p, HostName);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:2821:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2821 |         if (*p)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2822 |           qmflag = 1;[0m
      | [0;1;32m                     
[0m[1mscreen.c:2828:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2828 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2829 |       char *session_name;[0m
 2830 |       *p = 0;[0m
 2831 |       session_name = strchr(SockName, '.') + 1;[0m
 2832 |       if ((int)strlen(session_name) < l) {[0m
 2833 |         strcpy(p, session_name);[0m
 2834 |         if (*p)[0m
 2835 |           qmflag = 1;[0m
 2836 |       }[0m
 2837 |       p += strlen(p) - 1;[0m
 2838 |         }[0m
 2839 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mscreen.c:2833:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2833 |         strcpy(p, session_name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:2833:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2833 |         strcpy(p, session_name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:2834:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2834 |         if (*p)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2835 |           qmflag = 1;[0m
      | [0;1;32m                     
[0m[1mscreen.c:2842:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2842 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2843 |       sprintf(p, "%d", (plusflg && display) ? D_userpid : getpid());[0m
 2844 |       p += strlen(p) - 1;[0m
 2845 |     }[0m
 2846 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mscreen.c:2843:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2843 |       sprintf(p, "%d", (plusflg && display) ? D_userpid : getpid());[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:2843:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2843 |       sprintf(p, "%d", (plusflg && display) ? D_userpid : getpid());[0m
      | [0;1;32m      ^~~~~~~
[0m[1mscreen.c:2849:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2849 |       p--;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2850 |       /* small hack */[0m
 2851 |       if (display && ((ev && ev == &D_forecv->c_captev) || (!ev && win && win == D_fore)))[0m
 2852 |         minusflg = !minusflg;[0m
 2853 |       if (minusflg)[0m
 2854 |         qmflag = 1;[0m
 2855 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2851:91: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2851 |       if (display && ((ev && ev == &D_forecv->c_captev) || (!ev && win && win == D_fore)))[0m
      | [0;1;32m                                                                                          ^
[0m      | [0;32m                                                                                           {
[0m 2852 |         minusflg = !minusflg;[0m
      | [0;1;32m                             
[0m[1mscreen.c:2853:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2853 |       if (minusflg)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2854 |         qmflag = 1;[0m
      | [0;1;32m                   
[0m[1mscreen.c:2858:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2858 |       p--;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2859 | #ifdef COPY_PASTE[0m
 2860 |       if (display && ev && ev != &D_hstatusev) {                   /* Hack */[0m
 2861 |         /* Is the layer in the current canvas in copy mode? */[0m
 2862 |         struct canvas *cv = (struct canvas *)ev->data;[0m
 2863 |         if (ev == &cv->c_captev && cv->c_layer->l_layfn == &MarkLf)[0m
 2864 |           qmflag = 1;[0m
 2865 |       }[0m
 2866 | #endif[0m
 2867 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2863:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2863 |         if (ev == &cv->c_captev && cv->c_layer->l_layfn == &MarkLf)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 2864 |           qmflag = 1;[0m
      | [0;1;32m                     
[0m[1mscreen.c:2871:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2871 |       p--;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2872 |       if (display && D_ESCseen)[0m
 2873 |         qmflag = 1;[0m
 2874 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2872:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2872 |       if (display && D_ESCseen)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2873 |         qmflag = 1;[0m
      | [0;1;32m                   
[0m[1mscreen.c:2877:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2877 |       truncpos = p - winmsg_buf;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2878 |       truncper = num > 100 ? 100 : num;[0m
 2879 |       trunclong = longflg;[0m
 2880 |       p--;[0m
 2881 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:2886:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2886 |       if (num || zeroflg || plusflg || longflg || (*s != '=')) {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mscreen.c:2890:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2890 |           if (!plusflg && padlen == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2891 |             num = p - winmsg_buf;[0m
      | [0;1;32m                                 
[0m[1mscreen.c:2895:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2895 |           if (*s != '=' && num == 0 && !plusflg)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2896 |             num = 100;[0m
      | [0;1;32m                      
[0m[1mscreen.c:2897:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2897 |           if (num > 100)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2898 |             num = 100;[0m
      | [0;1;32m                      
[0m[1mscreen.c:2899:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2899 |           if (padlen == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2900 |             num = p - winmsg_buf;[0m
 2901 |           else[0m
      | [0;32m          } 
[0m[1mscreen.c:2901:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2901 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2902 |             num = (padlen - (plusflg ? lastpad : 0)) * num / 100;[0m
      | [0;1;32m                                                                 
[0m[1mscreen.c:2905:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2905 |         if (num < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2906 |           num = 0;[0m
      | [0;1;32m                  
[0m[1mscreen.c:2908:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2908 |         if (plusflg)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2909 |           num += lastpad;[0m
      | [0;1;32m                         
[0m[1mscreen.c:2911:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2911 |         if (num > MAXSTR - 1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2912 |           num = MAXSTR - 1;[0m
      | [0;1;32m                           
[0m[1mscreen.c:2914:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2914 |         if (numpad)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2915 |           p = pad_expand(winmsg_buf, p, numpad, num);[0m
      | [0;1;32m                                                     
[0m[1mscreen.c:2926:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2926 |           if (trunc > num)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2927 |             trunc = num;[0m
      | [0;1;32m                        
[0m[1mscreen.c:2928:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2928 |           if (trunc < lastpad)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2929 |             trunc = lastpad;[0m
      | [0;1;32m                            
[0m[1mscreen.c:2931:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2931 |           if (left > p - winmsg_buf - num)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2932 |             left = p - winmsg_buf - num;[0m
      | [0;1;32m                                        
[0m[1mscreen.c:2937:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2937 |             if (left + lastpad > p - winmsg_buf)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2938 |               left = p - winmsg_buf - lastpad;[0m
      | [0;1;32m                                              
[0m[1mscreen.c:2939:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2939 |             if (p - winmsg_buf - lastpad - left > 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2940 |               bcopy(winmsg_buf + lastpad + left, winmsg_buf + lastpad,  p - winmsg_buf - lastpad - left);[0m
      | [0;1;32m                                                                                                         
[0m[1mscreen.c:2940:15: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2940 |               bcopy(winmsg_buf + lastpad + left, winmsg_buf + lastpad,  p - winmsg_buf - lastpad - left);[0m
      | [0;1;32m              ^~~~~
[0m[1mscreen.c:2940:15: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2940 |               bcopy(winmsg_buf + lastpad + left, winmsg_buf + lastpad,  p - winmsg_buf - lastpad - left);[0m
      | [0;1;32m              ^~~~~
[0m[1mscreen.c:2946:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2946 |               if (winmsg_rendpos[r] < lastpad)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2947 |                 winmsg_rendpos[r] = lastpad;[0m
      | [0;1;32m                                            
[0m[1mscreen.c:2951:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2951 |               if (p - winmsg_buf > lastpad)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2952 |                 winmsg_buf[lastpad] = '.';[0m
      | [0;1;32m                                          
[0m[1mscreen.c:2953:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2953 |               if (p - winmsg_buf > lastpad + 1)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2954 |                 winmsg_buf[lastpad + 1] = '.';[0m
      | [0;1;32m                                              
[0m[1mscreen.c:2955:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2955 |               if (p - winmsg_buf > lastpad + 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2956 |                 winmsg_buf[lastpad + 2] = '.';[0m
      | [0;1;32m                                              
[0m[1mscreen.c:2963:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2963 |               if (num - 1 >= lastpad)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2964 |                 p[-1] = '.';[0m
      | [0;1;32m                            
[0m[1mscreen.c:2965:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2965 |               if (num - 2 >= lastpad)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2966 |                 p[-2] = '.';[0m
      | [0;1;32m                            
[0m[1mscreen.c:2967:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2967 |               if (num - 3 >= lastpad)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2968 |                 p[-3] = '.';[0m
      | [0;1;32m                            
[0m[1mscreen.c:2971:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2971 |             while (r && winmsg_rendpos[r - 1] > num)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2972 |               winmsg_rendpos[--r] = num;[0m
      | [0;1;32m                                        
[0m[1mscreen.c:2976:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2976 |           if (lastpad > p - winmsg_buf)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2977 |             lastpad = p - winmsg_buf;[0m
      | [0;1;32m                                     
[0m[1mscreen.c:2982:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2982 |           while (p - winmsg_buf < num)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2983 |             *p++ = ' ';[0m
      | [0;1;32m                       
[0m[1mscreen.c:2998:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2998 |       s++;[0m
      | [0;1;32m      ^  
[0m      | [0;32m      {  ;} 
[0m[1mscreen.c:3002:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3002 |       s--;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3003 |       if (l > 10 + num) {[0m
 3004 |         if (num == 0)[0m
 3005 |           num = 1;[0m
 3006 |         if (!win)[0m
 3007 |           sprintf(p, "%*s", num, num > 1 ? "--" : "-");[0m
 3008 |         else[0m
 3009 |           sprintf(p, "%*d", num, win->w_number);[0m
 3010 |         qmflag = 1;[0m
 3011 |         p += strlen(p) - 1;[0m
 3012 |       }[0m
 3013 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mscreen.c:3004:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3004 |         if (num == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3005 |           num = 1;[0m
      | [0;1;32m                  
[0m[1mscreen.c:3006:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3006 |         if (!win)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3007 |           sprintf(p, "%*s", num, num > 1 ? "--" : "-");[0m
 3008 |         else[0m
      | [0;32m        } 
[0m[1mscreen.c:3007:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3007 |           sprintf(p, "%*s", num, num > 1 ? "--" : "-");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:3007:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 3007 |           sprintf(p, "%*s", num, num > 1 ? "--" : "-");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:3008:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3008 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3009 |           sprintf(p, "%*d", num, win->w_number);[0m
      | [0;1;32m                                                
[0m[1mscreen.c:3009:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3009 |           sprintf(p, "%*d", num, win->w_number);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:3009:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 3009 |           sprintf(p, "%*d", num, win->w_number);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mscreen.c:3017:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3017 |   if (qmpos && !qmflag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3018 |     p = qmpos + 1;[0m
      | [0;1;32m                  
[0m[1mscreen.c:3021:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3021 |     if (padlen > MAXSTR - 1)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3022 |       padlen = MAXSTR - 1;[0m
      | [0;1;32m                          
[0m[1mscreen.c:3023:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'p' is never read [clang-analyzer-deadcode.DeadStores][0m
 3023 |     p = pad_expand(winmsg_buf, p, numpad, padlen);[0m
      | [0;1;32m    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:3023:5: [0m[0;1;36mnote: [0mValue stored to 'p' is never read[0m
 3023 |     p = pad_expand(winmsg_buf, p, numpad, padlen);[0m
      | [0;1;32m    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mscreen.c:3032:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3032 |     if (tick == 1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3033 |       now.tv_sec++;[0m
 3034 |     else[0m
      | [0;32m    } 
[0m[1mscreen.c:3034:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3034 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 3035 |       now.tv_sec += tick - (now.tv_sec % tick);[0m
      | [0;1;32m                                               
[0m[1mscreen.c:3059:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3059 |     if (l > max)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3060 |       l = max;[0m
      | [0;1;32m              
[0m[1mscreen.c:3063:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3063 |     while (l-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3064 |       PUTCHARLP(*s++);[0m
      | [0;1;32m                      
[0m[1mscreen.c:3072:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3072 |     if (p > winmsg_rendpos[i] || winmsg_rendpos[i] > l)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3073 |       break;[0m
      | [0;1;32m            
[0m[1mscreen.c:3076:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3076 |       if (n > max)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3077 |         n = max;[0m
      | [0;1;32m                
[0m[1mscreen.c:3081:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3081 |         if (start-- > 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3082 |           s++;[0m
 3083 |         else[0m
      | [0;32m        } 
[0m[1mscreen.c:3083:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3083 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3084 |           PUTCHARLP(*s++);[0m
      | [0;1;32m                          
[0m[1mscreen.c:3090:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3090 |       if (rendstackn > 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3091 |         rend = rendstack[--rendstackn];[0m
      | [0;1;32m                                       
[0m[1mscreen.c:3102:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3102 |     if (n > max)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3103 |       n = max;[0m
      | [0;1;32m              
[0m[1mscreen.c:3105:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3105 |       if (start-- > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3106 |         s++;[0m
 3107 |       else[0m
      | [0;32m      } 
[0m[1mscreen.c:3107:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3107 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3108 |         PUTCHARLP(*s++);[0m
      | [0;1;32m                        
[0m[1mscreen.c:3149:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3149 |   if (GotSigChld)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3150 |       SigChldHandler();[0m
      | [0;1;32m                       
[0m[1mscreen.c:3182:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3182 |         for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3183 |           if (cv->c_layer->l_bottom == &p->w_layer)[0m
 3184 |             break;[0m
      | [0;1;32m                  
[0m[1mscreen.c:3183:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3183 |           if (cv->c_layer->l_bottom == &p->w_layer)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3184 |             break;[0m
      | [0;1;32m                  
[0m[1mscreen.c:3202:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3202 |       if (p->w_monitor == MON_FOUND)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3203 |         p->w_monitor = MON_DONE;[0m
      | [0;1;32m                                
[0m[1mscreen.c:3211:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3211 |         for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3212 |           if (cv->c_layer->l_bottom == &p->w_layer)[0m
 3213 |             break;[0m
      | [0;1;32m                  
[0m[1mscreen.c:3212:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3212 |           if (cv->c_layer->l_bottom == &p->w_layer)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3213 |             break;[0m
      | [0;1;32m                  
[0m[1mscreen.c:3214:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3214 |         if (cv)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 3215 |           continue;   /* user already sees window */[0m
      | [0;1;32m                                                    
[0m[1mscreen.c:3218:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3218 |         if (!(ACLBYTE(p->w_mon_notify, D_user->u_id) & ACLBIT(D_user->u_id)))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 3219 |           continue;   /* user doesn't care */[0m
      | [0;1;32m                                             
[0m[1mscreen.c:3239:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3239 |     if (D_status == STATUS_ON_WIN)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3240 |       continue;[0m
      | [0;1;32m               
[0m[1mscreen.c:3248:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3248 |       if (lx == cv->c_layer->l_width)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3249 |         lx--;[0m
      | [0;1;32m             
[0m[1mscreen.c:3254:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3254 |         if (n > cv->c_layer->l_height)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3255 |           n = cv->c_layer->l_height;[0m
      | [0;1;32m                                    
[0m[1mscreen.c:3259:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3259 |             for (i = 0; i < n; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3260 |               LayRedisplayLine(i, 0, flayer->l_width - 1, 1);[0m
      | [0;1;32m                                                             
[0m[1mscreen.c:3269:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3269 |         if (n > cv->c_layer->l_height)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3270 |           n = cv->c_layer->l_height;[0m
      | [0;1;32m                                    
[0m[1mscreen.c:3274:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3274 |            for (i = 0; i < n; i++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3275 |              LayRedisplayLine(i + flayer->l_height - n, 0, flayer->l_width - 1, 1);[0m
      | [0;1;32m                                                                                   
[0m[1mscreen.c:3282:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3282 |         if (n < (cv->c_xe - cv->c_xs + 1) / 2)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3283 |           n = (cv->c_xe - cv->c_xs + 1) / 2;[0m
      | [0;1;32m                                            
[0m[1mscreen.c:3284:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3284 |         if (cv->c_xoff + n > cv->c_xs)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3285 |           n = cv->c_xs - cv->c_xoff;[0m
      | [0;1;32m                                    
[0m[1mscreen.c:3288:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3288 |         if (n > cv->c_layer->l_width)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3289 |           n = cv->c_layer->l_width;[0m
      | [0;1;32m                                   
[0m[1mscreen.c:3302:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3302 |         if (n < (cv->c_xe - cv->c_xs + 1) / 2)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3303 |           n = (cv->c_xe - cv->c_xs + 1) / 2;[0m
      | [0;1;32m                                            
[0m[1mscreen.c:3304:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3304 |         if (cv->c_xoff - n + cv->c_layer->l_width - 1 < cv->c_xe)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 3305 |           n = cv->c_xoff + cv->c_layer->l_width - 1 - cv->c_xe;[0m
      | [0;1;32m                                                               
[0m[1mscreen.c:3308:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3308 |         if (n > cv->c_layer->l_width)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3309 |           n = cv->c_layer->l_width;[0m
      | [0;1;32m                                   
[0m[1mscreen.c:3323:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3323 |     if (D_status == STATUS_ON_WIN || D_cvlist == 0 || D_cvlist->c_next == 0)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 3324 |       continue;[0m
      | [0;1;32m               
[0m[1mscreen.c:3336:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3336 |   if (!islogfile(NULL))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3337 |     return;          /* no more logfiles */[0m
      | [0;1;32m                                           
[0m[1mscreen.c:3346:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3346 |   if (!logtstamp_on)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3347 |     return;[0m
      | [0;1;32m           
[0m[1mscreen.c:3351:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3351 |     if (!p->w_log)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3352 |       continue;[0m
      | [0;1;32m               
[0m[1mscreen.c:3354:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3354 |     if (p->w_logsilence < logtstamp_after)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3355 |       continue;[0m
      | [0;1;32m               
[0m[1mscreen.c:3356:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3356 |     if (p->w_logsilence - n >= logtstamp_after)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3357 |       continue;[0m
      | [0;1;32m               
[0m[1mscreen.c:3372:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3372 |   if (*p == 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3373 |     return 0;[0m
      | [0;1;32m             
[0m[1mscreen.c:3376:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3376 |     if (*++p == '?')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3377 |       *cp = '\177';[0m
 3378 |     else if (*p >= '@')[0m
      | [0;32m    } 
[0m[1mscreen.c:3378:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3378 |     else if (*p >= '@')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3379 |       *cp = Ctrl(*p);[0m
 3380 |     else[0m
      | [0;32m    } 
[0m[1mscreen.c:3380:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3380 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 3381 |       return 0;[0m
      | [0;1;32m               
[0m[1mscreen.c:3386:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3386 |     do[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3387 |       *cp = *cp * 8 + *p - '0';[0m
 3388 |       while (*++p <= '7' && *p >= '0');[0m
      | [0;32m      } 
[0m[1mscreen.c:3390:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3390 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3391 |     *cp = *p++;[0m
      | [0;1;32m               
[0m[1mscreen.c:3399:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3399 |   if (*p == 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3400 |     SetEscape((struct acluser *)0, -1, -1);[0m
 3401 |   else {[0m
      | [0;32m  } 
[0m[1mscreen.c:3403:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3403 |         (p = ParseChar(p, (char *)buf+1)) == NULL || *p)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 3404 |       return -1;[0m
      | [0;1;32m                
[0m[1mscreen.c:3416:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3416 |         memset(&attach_tty_name_in_ns, 0, sizeof(attach_tty_name_in_ns));[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:3416:2: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3416 |         memset(&attach_tty_name_in_ns, 0, sizeof(attach_tty_name_in_ns));[0m
      | [0;1;32m        ^~~~~~
[0m[1mscreen.c:3426:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3426 |                         if (ret < 0 || (size_t)ret >= sizeof(attach_tty_name_in_ns))[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m 3427 |                                 Panic(0, "Bad tty '%s'", attach_tty);[0m
      | [0;1;32m                                                                     
[0m[1mscreen.c:3436:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3436 |                 if (stat(attach_tty, st))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3437 |                         Panic(errno, "Cannot access '%s'", attach_tty);[0m
      | [0;1;32m                                                                       
[0m[1mscreen.c:3439:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3439 |                 if (strlen(attach_tty) >= MAXPATHLEN)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3440 |                         Panic(0, "TtyName too long - sorry.");[0m
      | [0;1;32m                                                              
[0m[1mscreen.c:3445:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3445 |                 if (saved_errno != ENODEV && CheckTtyname(attach_tty))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 3446 |                         Panic(0, "Bad tty '%s'", attach_tty);[0m
      | [0;1;32m                                                             
[0m462 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[30/38][225.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmppc4w0ndi.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/resize.c
[1mresize.c:92:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   92 | CheckScreenSize(change_flag)[0m
      | [0;1;32m^
[0m[1mresize.c:113:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |       if (wi == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  114 |         wi = D_CO;[0m
      | [0;1;32m                  
[0m[1mresize.c:115:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |       if (he == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  116 |         he = D_LI;[0m
      | [0;1;32m                  
[0m[1mresize.c:152:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  152 | ChangeScreenSize(wi, he, change_fore)[0m
      | [0;1;32m^
[0m[1mresize.c:174:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |   if (D_forecv == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  175 |     D_forecv = D_cvlist;[0m
      | [0;1;32m                        
[0m[1mresize.c:176:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |   if (D_forecv)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  177 |     D_fore = Layer2Window(D_forecv->c_layer);[0m
      | [0;1;32m                                             
[0m[1mresize.c:191:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |           (D_CO == Z0width || D_CO == Z1width))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  192 |         D_defwidth = D_CO;[0m
  193 |       else[0m
      | [0;32m      } 
[0m[1mresize.c:193:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  194 |         D_defwidth = wi;[0m
      | [0;1;32m                        
[0m[1mresize.c:198:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |   if (change_fore)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  199 |     ResizeLayersToCanvases();[0m
      | [0;1;32m                             
[0m[1mresize.c:216:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |           if (p->w_savelayer && p->w_savelayer->l_cvlist == 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  217 |             ResizeLayer(p->w_savelayer, wwi, he, 0);[0m
      | [0;1;32m                                                    
[0m[1mresize.c:237:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |       if (l == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  238 |         continue;[0m
      | [0;1;32m                 
[0m[1mresize.c:272:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |           if (n < (cv->c_xe - cv->c_xs + 1) / 2)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  273 |             n = (cv->c_xe - cv->c_xs + 1) / 2;[0m
      | [0;1;32m                                              
[0m[1mresize.c:274:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |           if (cv->c_xoff + n > cv->c_xs)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  275 |             n = cv->c_xs - cv->c_xoff;[0m
      | [0;1;32m                                      
[0m[1mresize.c:282:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |           if (n < (cv->c_xe - cv->c_xs + 1) / 2)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  283 |             n = (cv->c_xe - cv->c_xs + 1) / 2;[0m
      | [0;1;32m                                              
[0m[1mresize.c:284:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |           if (cv->c_xoff - n + cv->c_layer->l_width - 1 < cv->c_xe)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  285 |             n = cv->c_xoff + cv->c_layer->l_width - 1 - cv->c_xe;[0m
      | [0;1;32m                                                                 
[0m[1mresize.c:299:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  299 | MayResizeLayer(l)[0m
      | [0;1;32m^
[0m[1mresize.c:306:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |       if (l->l_cvlist)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  307 |         if (++cvs > 1 || l->l_cvlist->c_lnext)[0m
  308 |           {[0m
  309 |             debug1("may not - cvs %d\n", cvs);[0m
  310 |             return 0;[0m
  311 |           }[0m
      | [0;1;32m           
[0m[1mresize.c:359:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  359 | ResizeLayer(l, wi, he, norefdisp)[0m
      | [0;1;32m^
[0m[1mresize.c:369:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |   if (l->l_width == wi && l->l_height == he)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  370 |     return;[0m
      | [0;1;32m           
[0m[1mresize.c:375:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |   if (oldflayer && (l == oldflayer || Layer2Window(oldflayer) == p))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  376 |     oldflayer = NULL;[0m
      | [0;1;32m                     
[0m[1mresize.c:383:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |       for (d = displays; d; d = d->d_next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  384 |         for (cv = d->d_cvlist; cv; cv = cv->c_next)[0m
  385 |           {[0m
  386 |             if (p == Layer2Window(cv->c_layer))[0m
  387 |               {[0m
  388 |                 /* Canvas 'cv' on display 'd' shows this window. Remove any non-resizable[0m
  389 |                  * layers over it. */[0m
  390 |                 RESIZE_OR_KILL_LAYERS(cv->c_layer, wi, he);[0m
  391 |               }[0m
  392 |           }[0m
      | [0;1;32m           
[0m[1mresize.c:402:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |       if (display == norefdisp)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  403 |         continue;[0m
      | [0;1;32m                 
[0m[1mresize.c:404:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  404 |       for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  405 |         if (Layer2Window(cv->c_layer) == p)[0m
  406 |           {[0m
  407 |             CV_CALL(cv, LayRedisplayLine(-1, -1, -1, 0));[0m
  408 |             RefreshArea(cv->c_xs, cv->c_ys, cv->c_xe, cv->c_ye, 0);[0m
  409 |           }[0m
      | [0;1;32m           
[0m[1mresize.c:419:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |   if (oldflayer)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  420 |     flayer = oldflayer;[0m
      | [0;1;32m                       
[0m[1mresize.c:425:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  425 | FreeMline(ml)[0m
      | [0;1;32m^
[0m[1mresize.c:428:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |   if (ml->image)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  429 |     free(ml->image);[0m
      | [0;1;32m                    
[0m[1mresize.c:430:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |   if (ml->attr && ml->attr != null)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  431 |     free(ml->attr);[0m
      | [0;1;32m                   
[0m[1mresize.c:433:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |   if (ml->font && ml->font != null)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  434 |     free(ml->font);[0m
      | [0;1;32m                   
[0m[1mresize.c:435:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |   if (ml->fontx && ml->fontx != null)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  436 |     free(ml->fontx);[0m
      | [0;1;32m                    
[0m[1mresize.c:439:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  439 |   if (ml->color && ml->color != null)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  440 |     free(ml->color);[0m
      | [0;1;32m                    
[0m[1mresize.c:450:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  450 | AllocMline(ml, w)[0m
      | [0;1;32m^
[0m[1mresize.c:466:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |   if (ml->image == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  467 |     return -1;[0m
      | [0;1;32m              
[0m[1mresize.c:473:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  473 | BcopyMline(mlf, xf, mlt, xt, l, w)[0m
      | [0;1;32m^
[0m[1mresize.c:479:3: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  479 |   bcopy((char *)mlf->image + xf, (char *)mlt->image + xt, l);[0m
      | [0;1;32m  ^~~~~
[0m[1mresize.c:479:3: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  479 |   bcopy((char *)mlf->image + xf, (char *)mlt->image + xt, l);[0m
      | [0;1;32m  ^~~~~
[0m[1mresize.c:482:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  482 |       if ((mlt->attr = (unsigned char *)calloc(w, 1)) == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  483 |         mlt->attr = null, r = -1;[0m
      | [0;1;32m                                 
[0m[1mresize.c:485:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  485 |   if (mlt->attr != null)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  486 |     bcopy((char *)mlf->attr + xf, (char *)mlt->attr + xt, l);[0m
      | [0;1;32m                                                             
[0m[1mresize.c:486:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  486 |     bcopy((char *)mlf->attr + xf, (char *)mlt->attr + xt, l);[0m
      | [0;1;32m    ^~~~~
[0m[1mresize.c:486:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  486 |     bcopy((char *)mlf->attr + xf, (char *)mlt->attr + xt, l);[0m
      | [0;1;32m    ^~~~~
[0m[1mresize.c:490:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  490 |       if ((mlt->font = (unsigned char *)calloc(w, 1)) == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  491 |         mlt->font = null, r = -1;[0m
      | [0;1;32m                                 
[0m[1mresize.c:493:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |   if (mlt->font != null)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  494 |     bcopy((char *)mlf->font + xf, (char *)mlt->font + xt, l);[0m
      | [0;1;32m                                                             
[0m[1mresize.c:494:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  494 |     bcopy((char *)mlf->font + xf, (char *)mlt->font + xt, l);[0m
      | [0;1;32m    ^~~~~
[0m[1mresize.c:494:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  494 |     bcopy((char *)mlf->font + xf, (char *)mlt->font + xt, l);[0m
      | [0;1;32m    ^~~~~
[0m[1mresize.c:497:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  497 |       if ((mlt->fontx = (unsigned char *)calloc(w, 1)) == 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  498 |         mlt->fontx = null, r = -1;[0m
      | [0;1;32m                                  
[0m[1mresize.c:500:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |   if (mlt->fontx != null)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  501 |     bcopy((char *)mlf->fontx + xf, (char *)mlt->fontx + xt, l);[0m
      | [0;1;32m                                                               
[0m[1mresize.c:501:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  501 |     bcopy((char *)mlf->fontx + xf, (char *)mlt->fontx + xt, l);[0m
      | [0;1;32m    ^~~~~
[0m[1mresize.c:501:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  501 |     bcopy((char *)mlf->fontx + xf, (char *)mlt->fontx + xt, l);[0m
      | [0;1;32m    ^~~~~
[0m[1mresize.c:506:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |       if ((mlt->color = (unsigned char *)calloc(w, 1)) == 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  507 |         mlt->color = null, r = -1;[0m
      | [0;1;32m                                  
[0m[1mresize.c:509:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |   if (mlt->color != null)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  510 |     bcopy((char *)mlf->color + xf, (char *)mlt->color + xt, l);[0m
      | [0;1;32m                                                               
[0m[1mresize.c:510:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  510 |     bcopy((char *)mlf->color + xf, (char *)mlt->color + xt, l);[0m
      | [0;1;32m    ^~~~~
[0m[1mresize.c:510:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  510 |     bcopy((char *)mlf->color + xf, (char *)mlt->color + xt, l);[0m
      | [0;1;32m    ^~~~~
[0m[1mresize.c:528:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  528 | CheckMaxSize(wi)[0m
      | [0;1;32m^
[0m[1mresize.c:537:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |   if (wi > MAXWIDTH)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  538 |           wi = MAXWIDTH;[0m
      | [0;1;32m                        
[0m[1mresize.c:539:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |   if (wi <= maxwidth)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  540 |     return;[0m
      | [0;1;32m           
[0m[1mresize.c:557:173: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  557 |   if (!(blank && null && mline_old.image && mline_old.attr IFFONT(&& mline_old.font) IFFONTX(&& mline_old.fontx) IFCOLOR(&& mline_old.color) IFCOLORX(&& mline_old.colorx)))[0m
      | [0;1;32m                                                                                                                                                                            ^
[0m      | [0;32m                                                                                                                                                                             {
[0m  558 |     Panic(0, "%s", strnomem);[0m
      | [0;1;32m                             
[0m[1mresize.c:561:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
  561 |   bzero((char *)null, maxwidth);[0m
      | [0;1;32m  ^~~~~
[0m[1mresize.c:561:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
  561 |   bzero((char *)null, maxwidth);[0m
      | [0;1;32m  ^~~~~
[0m[1mresize.c:616:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  616 | xrealloc(mem, len)[0m
      | [0;1;32m^
[0m[1mresize.c:622:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  622 |   if (mem == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  623 |     return malloc(len);[0m
      | [0;1;32m                       
[0m[1mresize.c:624:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  624 |   if ((nmem = realloc(mem, len)))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  625 |     return nmem;[0m
      | [0;1;32m                
[0m[1mresize.c:631:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  631 | MakeBlankLine(p, n)[0m
      | [0;1;32m^
[0m[1mresize.c:635:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  635 |   while (n--)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  636 |     *p++ = ' ';[0m
      | [0;1;32m               
[0m[1mresize.c:659:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  659 | ChangeWindowSize(p, wi, he, hi)[0m
      | [0;1;32m^
[0m[1mresize.c:668:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  668 |   if (wi <= 0 || he <= 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  669 |     wi = he = hi = 0;[0m
      | [0;1;32m                     
[0m[1mresize.c:671:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |   if (p->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  672 |     return 0;[0m
      | [0;1;32m             
[0m[1mresize.c:769:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  769 |           if (!ml->image)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  770 |             break;[0m
      | [0;1;32m                  
[0m[1mresize.c:771:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  771 |           if (ml->image[p->w_width] == ' ')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  772 |             break;[0m
      | [0;1;32m                  
[0m[1mresize.c:775:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  775 |       if (shift < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  776 |         shift = 0;[0m
  777 |       else[0m
      | [0;32m      } 
[0m[1mresize.c:777:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  778 |         debug1("resize: cursor out of bounds, shifting %d\n", shift);[0m
      | [0;1;32m                                                                     
[0m[1mresize.c:783:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  783 |           if (naka < 1 || naka > he)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  784 |             naka = 0;[0m
      | [0;1;32m                     
[0m[1mresize.c:794:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |   if (fy >= 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  795 |     mlf = OLDWIN(fy);[0m
      | [0;1;32m                     
[0m[1mresize.c:796:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  796 |   if (ty >= 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  797 |     mlt = NEWWIN(ty);[0m
      | [0;1;32m                     
[0m[1mresize.c:806:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  806 |           if (--fy >= 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  807 |             mlf = OLDWIN(fy);[0m
      | [0;1;32m                             
[0m[1mresize.c:808:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |           if (--ty >= 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  809 |             mlt = NEWWIN(ty);[0m
      | [0;1;32m                             
[0m[1mresize.c:814:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |       for (l = p->w_width - 1; l > 0; l--)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  815 |         if (mlf->image[l] != ' ' || mlf->attr[l])[0m
  816 |           break;[0m
      | [0;1;32m                
[0m[1mresize.c:815:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  815 |         if (mlf->image[l] != ' ' || mlf->attr[l])[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  816 |           break;[0m
      | [0;1;32m                
[0m[1mresize.c:817:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  817 |       if (fy == p->w_y + p->w_histheight && l < p->w_x)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  818 |         l = p->w_x;     /* cursor is non blank */[0m
      | [0;1;32m                                                 
[0m[1mresize.c:826:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |           if (ml->image[p->w_width] == ' ')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  827 |             break;[0m
      | [0;1;32m                  
[0m[1mresize.c:839:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  839 |               if (AllocMline(mlt, wi + 1))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  840 |                 goto nomem;[0m
      | [0;1;32m                           
[0m[1mresize.c:844:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |           if (BcopyMline(mlf, lf - lx, mlt, lt - lx, lx, wi + 1))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  845 |             goto nomem;[0m
      | [0;1;32m                       
[0m[1mresize.c:853:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  853 |               if (ty + shift > hi + he - 1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  854 |                 shift = hi + he - 1 - ty;[0m
      | [0;1;32m                                         
[0m[1mresize.c:862:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  862 |                       if (y - shift < ty)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  863 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mresize.c:871:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  871 |                   if (naka > 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  872 |                     naka = naka + shift > he ? 0 : naka + shift;[0m
      | [0;1;32m                                                                
[0m[1mresize.c:877:85: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |           if (p->w_autoaka > 0 && fy == p->w_autoaka - 1 + p->w_histheight && lf - lx <= 0)[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m  878 |             naka = ty - hi >= 0 ? 1 + ty - hi : 0;[0m
      | [0;1;32m                                                  
[0m[1mresize.c:887:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |               if (--fy >= 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  888 |                 mlf = OLDWIN(fy);[0m
      | [0;1;32m                                 
[0m[1mresize.c:893:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  893 |               if (--ty >= 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  894 |                 mlt = NEWWIN(ty);[0m
      | [0;1;32m                                 
[0m[1mresize.c:902:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  902 |       if (--fy >= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  903 |         mlf = OLDWIN(fy);[0m
      | [0;1;32m                         
[0m[1mresize.c:907:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  907 |       if (AllocMline(mlt, wi + 1))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  908 |         goto nomem;[0m
      | [0;1;32m                   
[0m[1mresize.c:910:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  910 |       if (--ty >= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  911 |         mlt = NEWWIN(ty);[0m
      | [0;1;32m                         
[0m[1mresize.c:923:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  923 |   if (p->w_mlines && p->w_mlines != nmlines)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  924 |     free((char *)p->w_mlines);[0m
      | [0;1;32m                              
[0m[1mresize.c:927:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  927 |   if (p->w_hlines && p->w_hlines != nhlines)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  928 |     free((char *)p->w_hlines);[0m
      | [0;1;32m                              
[0m[1mresize.c:940:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |           if (p->w_tabs == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  941 |             goto nomem;[0m
      | [0;1;32m                       
[0m[1mresize.c:942:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  942 |           for (; t < wi; t++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  943 |             p->w_tabs[t] = t && !(t & 7) ? 1 : 0; [0m
[1mresize.c:943:6: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the heap area [clang-analyzer-security.ArrayBound][0m
  943 |             p->w_tabs[t] = t && !(t & 7) ? 1 : 0; [0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mresize.c:668:7: [0m[0;1;36mnote: [0mAssuming 'wi' is > 0[0m
  668 |   if (wi <= 0 || he <= 0)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mresize.c:668:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mresize.c:668:18: [0m[0;1;36mnote: [0mAssuming 'he' is > 0[0m
  668 |   if (wi <= 0 || he <= 0)[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mresize.c:668:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  668 |   if (wi <= 0 || he <= 0)[0m
      | [0;1;32m  ^
[0m[1mresize.c:671:7: [0m[0;1;36mnote: [0mAssuming field 'w_type' is not equal to W_TYPE_GROUP[0m
  671 |   if (p->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mresize.c:671:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  671 |   if (p->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m  ^
[0m[1mresize.c:674:7: [0m[0;1;36mnote: [0mAssuming 'wi' is <= MAXWIDTH[0m
  674 |   if (wi > MAXWIDTH)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1mresize.c:674:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  674 |   if (wi > MAXWIDTH)[0m
      | [0;1;32m  ^
[0m[1mresize.c:680:7: [0m[0;1;36mnote: [0mAssuming 'he' is <= MAXWIDTH[0m
  680 |   if (he > MAXWIDTH)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1mresize.c:680:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  680 |   if (he > MAXWIDTH)[0m
      | [0;1;32m  ^
[0m[1mresize.c:686:7: [0m[0;1;36mnote: [0mAssuming 'wi' is not equal to field 'l_width'[0m
  686 |   if (p->w_width == wi && p->w_height == he && p->w_histheight == hi)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mresize.c:686:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  686 |   if (p->w_width == wi && p->w_height == he && p->w_histheight == hi)[0m
      | [0;1;32m                       ^
[0m[1mresize.c:704:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  704 |   debug("ChangeWindowSize");[0m
      | [0;1;32m  ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mresize.c:705:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  705 |   debug3(" from (%d,%d)+%d", p->w_width, p->w_height, p->w_histheight);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:72:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug3'[0m
   72 | # define debug3(x,a,b,c) debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mresize.c:706:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  706 |   debug3(" to(%d,%d)+%d\n", wi, he, hi);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:72:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug3'[0m
   72 | # define debug3(x,a,b,c) debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mresize.c:716:7: [0m[0;1;36mnote: [0m'wi' is not equal to 0[0m
  716 |   if (wi)[0m
      | [0;1;32m      ^~
[0m[1mresize.c:716:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  716 |   if (wi)[0m
      | [0;1;32m  ^
[0m[1mresize.c:718:11: [0m[0;1;36mnote: [0mAssuming 'wi' is not equal to field 'l_width'[0m
  718 |       if (wi != p->w_width || he != p->w_height)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1mresize.c:718:28: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  718 |       if (wi != p->w_width || he != p->w_height)[0m
      | [0;1;32m                           ^
[0m[1mresize.c:720:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  720 |           if ((nmlines = (struct mline *)calloc(he, sizeof(struct mline))) == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mresize.c:720:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  720 |           if ((nmlines = (struct mline *)calloc(he, sizeof(struct mline))) == 0)[0m
      | [0;1;32m          ^
[0m[1mresize.c:739:7: [0m[0;1;36mnote: [0mAssuming 'hi' is 0[0m
  739 |   if (hi)[0m
      | [0;1;32m      ^~
[0m[1mresize.c:739:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  739 |   if (hi)[0m
      | [0;1;32m  ^
[0m[1mresize.c:752:7: [0m[0;1;36mnote: [0mAssuming field 'l_width' is not equal to 0[0m
  752 |   if (p->w_width && p->w_x == p->w_width)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mresize.c:752:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mresize.c:752:21: [0m[0;1;36mnote: [0mAssuming field 'l_x' is not equal to field 'l_width'[0m
  752 |   if (p->w_width && p->w_x == p->w_width)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mresize.c:752:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  752 |   if (p->w_width && p->w_x == p->w_width)[0m
      | [0;1;32m  ^
[0m[1mresize.c:760:21: [0m[0;1;36mnote: [0m'wi' is not equal to field 'l_width'[0m
  760 |   if (p->w_width == wi)[0m
      | [0;1;32m                    ^~
[0m[1mresize.c:760:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  760 |   if (p->w_width == wi)[0m
      | [0;1;32m  ^
[0m[1mresize.c:793:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  793 |   debug2("fy %d ty %d\n", fy, ty);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mresize.c:794:7: [0m[0;1;36mnote: [0mAssuming 'fy' is < 0[0m
  794 |   if (fy >= 0)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mresize.c:794:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  794 |   if (fy >= 0)[0m
      | [0;1;32m  ^
[0m[1mresize.c:796:7: [0m[0;1;36mnote: [0m'ty' is >= 0[0m
  796 |   if (ty >= 0)[0m
      | [0;1;32m      ^~
[0m[1mresize.c:796:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  796 |   if (ty >= 0)[0m
      | [0;1;32m  ^
[0m[1mresize.c:797:18: [0m[0;1;36mnote: [0m'ty' is >= 'hi'[0m
  797 |     mlt = NEWWIN(ty);[0m
      | [0;1;32m                 ^
[0m[1mresize.c:648:21: [0m[0;1;36mnote: [0mexpanded from macro 'NEWWIN'[0m
  648 | #define NEWWIN(y) ((y < hi) ? &nhlines[y] : &nmlines[y - hi])[0m
      | [0;1;32m                    ^
[0m[1mresize.c:797:11: [0m[0;1;36mnote: [0m'?' condition is false[0m
  797 |     mlt = NEWWIN(ty);[0m
      | [0;1;32m          ^
[0m[1mresize.c:648:20: [0m[0;1;36mnote: [0mexpanded from macro 'NEWWIN'[0m
  648 | #define NEWWIN(y) ((y < hi) ? &nhlines[y] : &nmlines[y - hi])[0m
      | [0;1;32m                   ^
[0m[1mresize.c:799:10: [0m[0;1;36mnote: [0m'fy' is < 0[0m
  799 |   while (fy >= 0 && ty >= 0)[0m
      | [0;1;32m         ^~
[0m[1mresize.c:799:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  799 |   while (fy >= 0 && ty >= 0)[0m
      | [0;1;32m                 ^
[0m[1mresize.c:899:10: [0m[0;1;36mnote: [0m'fy' is < 0[0m
  899 |   while (fy >= 0)[0m
      | [0;1;32m         ^~
[0m[1mresize.c:899:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 905[0m
  899 |   while (fy >= 0)[0m
      | [0;1;32m  ^
[0m[1mresize.c:905:10: [0m[0;1;36mnote: [0m'ty' is >= 0[0m
  905 |   while (ty >= 0)[0m
      | [0;1;32m         ^~
[0m[1mresize.c:905:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  905 |   while (ty >= 0)[0m
      | [0;1;32m  ^
[0m[1mresize.c:907:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  907 |       if (AllocMline(mlt, wi + 1))[0m
      | [0;1;32m      ^
[0m[1mresize.c:910:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  910 |       if (--ty >= 0)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mresize.c:910:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  910 |       if (--ty >= 0)[0m
      | [0;1;32m      ^
[0m[1mresize.c:905:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 923[0m
  905 |   while (ty >= 0)[0m
      | [0;1;32m  ^
[0m[1mresize.c:923:7: [0m[0;1;36mnote: [0mAssuming field 'w_mlines' is null[0m
  923 |   if (p->w_mlines && p->w_mlines != nmlines)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mresize.c:923:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  923 |   if (p->w_mlines && p->w_mlines != nmlines)[0m
      | [0;1;32m                  ^
[0m[1mresize.c:927:7: [0m[0;1;36mnote: [0mAssuming field 'w_hlines' is null[0m
  927 |   if (p->w_hlines && p->w_hlines != nhlines)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mresize.c:927:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  927 |   if (p->w_hlines && p->w_hlines != nhlines)[0m
      | [0;1;32m                  ^
[0m[1mresize.c:934:21: [0m[0;1;36mnote: [0m'wi' is not equal to field 'l_width'[0m
  934 |   if (p->w_width != wi)[0m
      | [0;1;32m                    ^~
[0m[1mresize.c:934:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  934 |   if (p->w_width != wi)[0m
      | [0;1;32m  ^
[0m[1mresize.c:936:11: [0m[0;1;36mnote: [0m'wi' is not equal to 0[0m
  936 |       if (wi)[0m
      | [0;1;32m          ^~
[0m[1mresize.c:936:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  936 |       if (wi)[0m
      | [0;1;32m      ^
[0m[1mresize.c:938:8: [0m[0;1;36mnote: [0mAssuming field 'w_tabs' is non-null[0m
  938 |           t = p->w_tabs ? p->w_width : 0;[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mresize.c:938:8: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mresize.c:940:11: [0m[0;1;36mnote: [0mField 'w_tabs' is not equal to null[0m
  940 |           if (p->w_tabs == 0)[0m
      | [0;1;32m                 ^
[0m[1mresize.c:940:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  940 |           if (p->w_tabs == 0)[0m
      | [0;1;32m          ^
[0m[1mresize.c:942:11: [0m[0;1;36mnote: [0mAssuming 't' is < 'wi'[0m
  942 |           for (; t < wi; t++)[0m
      | [0;1;32m                 ^~~~~~
[0m[1mresize.c:942:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  942 |           for (; t < wi; t++)[0m
      | [0;1;32m          ^
[0m[1mresize.c:943:21: [0m[0;1;36mnote: [0m't' is not equal to 0[0m
  943 |             p->w_tabs[t] = t && !(t & 7) ? 1 : 0; [0m
      | [0;1;32m                           ^
[0m[1mresize.c:943:21: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mresize.c:943:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  943 |             p->w_tabs[t] = t && !(t & 7) ? 1 : 0; [0m
      | [0;1;32m                                ^~~~~~~~
[0m[1mresize.c:943:21: [0m[0;1;36mnote: [0m'?' condition is false[0m
  943 |             p->w_tabs[t] = t && !(t & 7) ? 1 : 0; [0m
      | [0;1;32m                           ^
[0m[1mresize.c:943:6: [0m[0;1;36mnote: [0mAccess of the heap area at negative byte offset[0m
  943 |             p->w_tabs[t] = t && !(t & 7) ? 1 : 0; [0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mresize.c:948:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  948 |           if (p->w_tabs)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  949 |             free(p->w_tabs);[0m
      | [0;1;32m                            
[0m[1mresize.c:959:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  959 |   if (p->w_autoaka > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  960 |     p->w_autoaka = naka;[0m
      | [0;1;32m                        
[0m[1mresize.c:963:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  963 |   if (p->w_x > wi)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  964 |     p->w_x = wi;[0m
      | [0;1;32m                
[0m[1mresize.c:965:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  965 |   if (p->w_y >= he)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  966 |     p->w_y = he - 1;[0m
      | [0;1;32m                    
[0m[1mresize.c:967:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  967 |   if (p->w_saved.x > wi)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  968 |     p->w_saved.x = wi;[0m
      | [0;1;32m                      
[0m[1mresize.c:969:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  969 |   if (p->w_saved.y >= he)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  970 |     p->w_saved.y = he - 1;[0m
      | [0;1;32m                          
[0m[1mresize.c:971:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  971 |   if (p->w_saved.y < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  972 |     p->w_saved.y = 0;[0m
      | [0;1;32m                     
[0m[1mresize.c:973:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  973 |   if (p->w_alt.cursor.x > wi)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  974 |     p->w_alt.cursor.x = wi;[0m
      | [0;1;32m                           
[0m[1mresize.c:975:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  975 |   if (p->w_alt.cursor.y >= he)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  976 |     p->w_alt.cursor.y = he - 1;[0m
      | [0;1;32m                               
[0m[1mresize.c:977:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  977 |   if (p->w_alt.cursor.y < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  978 |     p->w_alt.cursor.y = 0;[0m
      | [0;1;32m                          
[0m[1mresize.c:992:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  992 |       if (ioctl(p->w_ptyfd, TIOCSWINSZ, (char *)&glwz))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  993 |         debug2("SetPtySize: errno %d (fd:%d)\n", errno, p->w_ptyfd);[0m
      | [0;1;32m                                                                    
[0m[1mresize.c:1000:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1000 |   if(p->w_scrollback_height > hi)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1001 |     p->w_scrollback_height = hi;[0m
      | [0;1;32m                                
[0m[1mresize.c:1040:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |       if (nmlines && p->w_mlines != nmlines)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1041 |         free((char *)nmlines);[0m
      | [0;1;32m                              
[0m[1mresize.c:1043:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1043 |       if (nhlines && p->w_hlines != nhlines)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1044 |         free((char *)nhlines);[0m
      | [0;1;32m                              
[0m[1mresize.c:1053:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1053 | FreeAltScreen(p)[0m
      | [0;1;32m^
[0m[1mresize.c:1060:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1060 |       for (i = 0; i < p->w_alt.height; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1061 |         FreeMline(p->w_alt.mlines + i);[0m
      | [0;1;32m                                       
[0m[1mresize.c:1070:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |       for (i = 0; i < p->w_alt.histheight; i++)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1071 |         FreeMline(p->w_alt.hlines + i);[0m
      | [0;1;32m                                       
[0m[1mresize.c:1081:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1081 | SwapAltScreen(p)[0m
      | [0;1;32m^
[0m[1mresize.c:1102:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1102 | EnterAltScreen(p)[0m
      | [0;1;32m^
[0m[1mresize.c:1124:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1124 | LeaveAltScreen(p)[0m
      | [0;1;32m^
[0m[1mresize.c:1127:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1127 |   if (!p->w_alt.on)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1128 |     return;[0m
      | [0;1;32m           
[0m113 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[31/38][236.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpap7j1zf2.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/mark.c
[1mmark.c:104:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |             c == '-' || c == '+')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  105 |     /* thus we can catch email-addresses as a word :-) */[0m
  106 |                 return 1;[0m
  107 |         else if (c != ' ')[0m
      | [0;32m        } 
[0m[1mmark.c:107:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |         else if (c != ' ')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  108 |                 return 2;[0m
      | [0;1;32m                         
[0m[1mmark.c:118:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |         for (x = markdata->left_mar, i = WIN(y)->image + x; x < fore->w_width - 1; x++)[0m
      | [0;1;32m                                                                                       ^
[0m      | [0;32m                                                                                        {
[0m  119 |                 if (*i++ != ' ')[0m
  120 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:119:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |                 if (*i++ != ' ')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  120 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:121:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |         if (x == fore->w_width - 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  122 |                 x = markdata->left_mar;[0m
      | [0;1;32m                                       
[0m[1mmark.c:132:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  132 |         for (x = markdata->right_mar, i = WIN(y)->image + x; x >= 0; x--)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  133 |                 if (*i-- != ' ')[0m
  134 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:133:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |                 if (*i-- != ' ')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  134 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:135:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |         if (x < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  136 |                 x = markdata->left_mar;[0m
      | [0;1;32m                                       
[0m[1mmark.c:164:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |                 adjust = -1; /* fall through */[0m
      | [0;1;32m                ^          
[0m      | [0;32m                {          ;} 
[0m[1mmark.c:166:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  166 |                 step = 1;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  167 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mmark.c:169:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  169 |                 adjust = 1; /* fall through */[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mmark.c:171:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |                 step = -1;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  172 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mmark.c:174:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  174 |                 ASSERT(0);[0m
      | [0;1;32m                ^        
[0m      | [0;32m                {        ;} 
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mmark.c:218:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |         if ((flags & NW_ENDOFWORD) && (flags & NW_MUSTMOVE))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  219 |                 x += sx;[0m
      | [0;1;32m                        
[0m[1mmark.c:222:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |                 if (x >= xx || x < 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  223 |                         q = 0;[0m
  224 |                 else if (flags & NW_BIG)[0m
      | [0;32m                } 
[0m[1mmark.c:224:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |                 else if (flags & NW_BIG)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  225 |                         q = ml->image[x] == ' ';[0m
  226 |                 else[0m
      | [0;32m                } 
[0m[1mmark.c:226:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  227 |                         q = is_letter(ml->image[x]);[0m
      | [0;1;32m                                                    
[0m[1mmark.c:230:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |                         if (oq == 0 || !(flags & NW_ENDOFWORD))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  231 |                                 *xp = x;[0m
  232 |                         else[0m
      | [0;32m                        } 
[0m[1mmark.c:232:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  233 |                                 *xp = x - sx;[0m
      | [0;1;32m                                             
[0m[1mmark.c:237:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                                 if (--num <= 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  238 |                                         return;[0m
      | [0;1;32m                                               
[0m[1mmark.c:244:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |                         if (++y >= yy)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  245 |                                 return;[0m
      | [0;1;32m                                       
[0m[1mmark.c:249:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |                         if (--y < 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  250 |                                 return;[0m
      | [0;1;32m                                       
[0m[1mmark.c:293:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |                 if (redisplay != 2 && pt == 0 && ry > yend)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  294 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:298:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |                 if (from < markdata->left_mar)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  299 |                         from = markdata->left_mar;[0m
      | [0;1;32m                                                  
[0m[1mmark.c:300:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                 for (to = fore->w_width, im = ml->image + to; to >= 0; to--)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  301 |                         if (*im-- != ' ')[0m
  302 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmark.c:301:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |                         if (*im-- != ' ')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  302 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmark.c:303:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |                 if (i == y2 && x2 < to)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  304 |                         to = x2;[0m
      | [0;1;32m                                
[0m[1mmark.c:305:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                 if (to > markdata->right_mar)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  306 |                         to = markdata->right_mar;[0m
      | [0;1;32m                                                 
[0m[1mmark.c:307:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |                 if (redisplay == 1 && from <= to && ry >= 0 && ry <= yend)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  308 |                         MarkRedisplayLine(ry, from, to, 0);[0m
      | [0;1;32m                                                           
[0m[1mmark.c:309:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |                 if (redisplay != 2 && pt == 0)  /* don't count/copy */[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  310 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mmark.c:313:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |                 if (dw_right(ml, j, fore->w_encoding))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  314 |                         j--;[0m
      | [0;1;32m                            
[0m[1mmark.c:330:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |                                 if (c == UCS_HIDDEN)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  331 |                                         continue;[0m
      | [0;1;32m                                                 
[0m[1mmark.c:334:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |                                 if (pt)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  335 |                                         pt += c;[0m
      | [0;1;32m                                                
[0m[1mmark.c:349:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |                                 if (pt)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  350 |                                         pt += c;[0m
      | [0;1;32m                                                
[0m[1mmark.c:354:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |                         if (pt)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  355 |                                 *pt++ = c;[0m
      | [0;1;32m                                          
[0m[1mmark.c:361:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  361 |                                 strcpy(pt, "\033(B");[0m
      | [0;1;32m                                ^~~~~~
[0m[1mmark.c:361:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  361 |                                 strcpy(pt, "\033(B");[0m
      | [0;1;32m                                ^~~~~~
[0m[1mmark.c:373:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  373 |                                 if (pt)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  374 |                                         *pt++ = '\r';[0m
  375 |                                 l++;[0m
  376 |                                 if (join_with_cr) {[0m
  377 |                                         if (pt)[0m
  378 |                                                 *pt++ = '\n';[0m
  379 |                                         l++;[0m
  380 |                                 }[0m
  381 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mmark.c:373:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |                                 if (pt)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  374 |                                         *pt++ = '\r';[0m
      | [0;1;32m                                                     
[0m[1mmark.c:377:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |                                         if (pt)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  378 |                                                 *pt++ = '\n';[0m
      | [0;1;32m                                                             
[0m[1mmark.c:383:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  383 |                                 break;[0m
      | [0;1;32m                                ^    
[0m      | [0;32m                                {    ;} 
[0m[1mmark.c:385:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  385 |                                 if (pt)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  386 |                                         *pt++ = ' ';[0m
  387 |                                 l++;[0m
  388 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mmark.c:385:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |                                 if (pt)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  386 |                                         *pt++ = ' ';[0m
      | [0;1;32m                                                    
[0m[1mmark.c:390:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  390 |                                 if (pt)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  391 |                                         *pt++ = ',';[0m
  392 |                                 l++;[0m
  393 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mmark.c:390:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |                                 if (pt)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  391 |                                         *pt++ = ',';[0m
      | [0;1;32m                                                    
[0m[1mmark.c:407:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |         if (a == b)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  408 |                 return 1;[0m
      | [0;1;32m                         
[0m[1mmark.c:409:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |         if (a == 0 || b == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  410 |                 return 1;[0m
      | [0;1;32m                         
[0m[1mmark.c:411:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |         if (a <= '9' && a >= '0' && b <= '9' && b >= '0')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  412 |                 return 1;[0m
      | [0;1;32m                         
[0m[1mmark.c:427:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  427 |         if (x >= fore->w_width)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  428 |                 x = fore->w_width - 1;[0m
      | [0;1;32m                                      
[0m[1mmark.c:432:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |         for (xx = x - 1, linep = ml->image + xx; xx >= 0; xx--)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  433 |                 if ((q = *linep--) != ' ')[0m
  434 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:433:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |                 if ((q = *linep--) != ' ')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  434 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:440:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |                         for (i = fore->w_width - 1, linep += i; i >= x; i--)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  441 |                                 if (*linep-- != ' ')[0m
  442 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mmark.c:441:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |                                 if (*linep-- != ' ')[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  442 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mmark.c:443:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |                         if (i >= x)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  444 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmark.c:447:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |         if (yy < 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  448 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mmark.c:449:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |         if (D_user->u_plop.buf)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  450 |                 UserFreeCopyBuffer(D_user);[0m
      | [0;1;32m                                           
[0m[1mmark.c:456:2: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  456 |         bcopy((char *)linep - i + x + 1, D_user->u_plop.buf, i - x + 1);[0m
      | [0;1;32m        ^~~~~
[0m[1mmark.c:456:2: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  456 |         bcopy((char *)linep - i + x + 1, D_user->u_plop.buf, i - x + 1);[0m
      | [0;1;32m        ^~~~~
[0m[1mmark.c:476:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |         if (InitOverlayPage(sizeof(*markdata), &MarkLf, 1))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  477 |                 return;[0m
      | [0;1;32m                       
[0m[1mmark.c:493:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |         if (x >= fore->w_width)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  494 |                 x = fore->w_width - 1;[0m
      | [0;1;32m                                      
[0m[1mmark.c:537:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |                         if (r == -1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  538 |                                 LayProcessMouseSwitch(flayer, 0);[0m
  539 |                         else {[0m
      | [0;32m                        } 
[0m[1mmark.c:540:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |                                 if (r)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  541 |                                         ch = 0222;[0m
  542 |                                 else[0m
      | [0;32m                                } 
[0m[1mmark.c:542:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  543 |                                         continue;[0m
      | [0;1;32m                                                 
[0m[1mmark.c:596:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  596 |                         markdata->f_cmd.direction = od;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  597 |                         debug("entering char search\n");[0m
  598 |                         continue;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1mmark.c:601:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |                         if (!markdata->f_cmd.target)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  602 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmark.c:603:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  603 |                         if (!rep_cnt)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  604 |                                 rep_cnt = 1;[0m
  605 |                         nextchar(&cx,[0m
  606 |                                  &cy,[0m
  607 |                                  od == ';' ? markdata->f_cmd.direction : (markdata->f_cmd.direction ^ 0x20),[0m
  608 |                                  markdata->f_cmd.target,[0m
  609 |                                  rep_cnt);[0m
  610 |                                  revto(cx, cy);[0m
  611 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:603:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |                         if (!rep_cnt)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  604 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:614:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |                         if (!markdata->second)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  615 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmark.c:616:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  616 |                         markdata->cx = markdata->x1;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  617 |                         markdata->cy = markdata->y1;[0m
  618 |                         markdata->x1 = cx;[0m
  619 |                         markdata->y1 = cy;[0m
  620 |                         revto(markdata->cx, markdata->cy);[0m
  621 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:623:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  623 |                         Redisplay(0);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  624 |                         LGotoPos(flayer, cx, W2D(cy));[0m
  625 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:629:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  629 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  630 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:631:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  631 |                         revto(cx - rep_cnt, cy);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  632 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:636:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  637 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:638:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  638 |                         revto(cx, cy + rep_cnt);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  639 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:641:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  641 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  642 |                                 rep_cnt = 1;[0m
  643 |                         j = cy + rep_cnt;[0m
  644 |                         if (j > fore->w_histheight + fore->w_height - 1)[0m
  645 |                                 j = fore->w_histheight + fore->w_height - 1;[0m
  646 |                         revto(linestart(j), j);[0m
  647 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:641:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  642 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:644:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |                         if (j > fore->w_histheight + fore->w_height - 1)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  645 |                                 j = fore->w_histheight + fore->w_height - 1;[0m
      | [0;1;32m                                                                            
[0m[1mmark.c:649:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  649 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  650 |                                 rep_cnt = 1;[0m
  651 |                         cy -= rep_cnt;[0m
  652 |                         if (cy < 0)[0m
  653 |                                 cy = 0;[0m
  654 |                         revto(linestart(cy), cy);[0m
  655 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:649:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  649 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  650 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:652:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |                         if (cy < 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  653 |                                 cy = 0;[0m
      | [0;1;32m                                       
[0m[1mmark.c:657:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  657 |                         revto(linestart(cy), cy);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  658 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:660:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  660 |                         revto(markdata->left_mar, cy + 1);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  661 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:665:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  666 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:667:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  667 |                         revto(cx, cy - rep_cnt);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  668 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:671:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  672 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:673:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  673 |                         revto(cx + rep_cnt, cy);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  674 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:678:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  678 |                         break;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                        {    ;} 
[0m[1mmark.c:680:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  680 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  681 |                                 rep_cnt = (fore->w_height + 1) >> 1;[0m
  682 |                         revto_line(cx, cy + rep_cnt, W2D(cy));[0m
  683 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:680:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  680 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  681 |                                 rep_cnt = (fore->w_height + 1) >> 1;[0m
      | [0;1;32m                                                                    
[0m[1mmark.c:685:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  685 |                         revto(lineend(cy), cy);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  686 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:688:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  688 |                         ISearch(-1);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  689 |                         in_mark = 0;[0m
  690 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:692:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  692 |                         ISearch(1);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  693 |                         in_mark = 0;[0m
  694 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:696:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  696 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  697 |                                 rep_cnt = (fore->w_height + 1) >> 1;[0m
  698 |                         revto_line(cx, cy - rep_cnt, W2D(cy));[0m
  699 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:696:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  697 |                                 rep_cnt = (fore->w_height + 1) >> 1;[0m
      | [0;1;32m                                                                    
[0m[1mmark.c:701:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  701 |                         if (markdata->left_mar == 0 && markdata->right_mar == fore->w_width - 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  702 |                                 LMsg(0, "Column %d Line %d(+%d)", cx + 1, W2D(cy) + 1, markdata->hist_offset);[0m
  703 |                         else[0m
  704 |                                 LMsg(0, "Column %d(%d..%d) Line %d(+%d)",[0m
  705 |                                     cx + 1, markdata->left_mar + 1,[0m
  706 |                                     markdata->right_mar + 1, W2D(cy) + 1,[0m
  707 |                                     markdata->hist_offset);[0m
  708 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:701:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  701 |                         if (markdata->left_mar == 0 && markdata->right_mar == fore->w_width - 1)[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m  702 |                                 LMsg(0, "Column %d Line %d(+%d)", cx + 1, W2D(cy) + 1, markdata->hist_offset);[0m
  703 |                         else[0m
      | [0;32m                        } 
[0m[1mmark.c:703:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  703 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  704 |                                 LMsg(0, "Column %d(%d..%d) Line %d(+%d)",[0m
  705 |                                     cx + 1, markdata->left_mar + 1,[0m
  706 |                                     markdata->right_mar + 1, W2D(cy) + 1,[0m
  707 |                                     markdata->hist_offset);[0m
      | [0;1;32m                                                           
[0m[1mmark.c:710:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  710 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  711 |                                 rep_cnt = 1;[0m
  712 |                         rep_cnt *= fore->w_height;[0m
  713 |                         revto(cx, cy - rep_cnt);[0m
  714 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:710:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  710 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  711 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:716:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  716 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  717 |                                 rep_cnt = 1;[0m
  718 |                         rep_cnt *= fore->w_height;[0m
  719 |                         revto(cx, cy + rep_cnt);[0m
  720 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:716:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  716 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  717 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:722:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  722 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  723 |                                 rep_cnt = 1;[0m
  724 |                         rep_cnt = MarkScrollUpDisplay(rep_cnt);[0m
  725 |                         if (cy < D2W(0))[0m
  726 |                                 revto(cx, D2W(0));[0m
  727 |                         else[0m
  728 |                                 LGotoPos(flayer, cx, W2D(cy));[0m
  729 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:722:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  722 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  723 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:724:4: [0m[0;1;35mwarning: [0m[1mValue stored to 'rep_cnt' is never read [clang-analyzer-deadcode.DeadStores][0m
  724 |                         rep_cnt = MarkScrollUpDisplay(rep_cnt);[0m
      | [0;1;32m                        ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmark.c:724:4: [0m[0;1;36mnote: [0mValue stored to 'rep_cnt' is never read[0m
  724 |                         rep_cnt = MarkScrollUpDisplay(rep_cnt);[0m
      | [0;1;32m                        ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmark.c:725:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |                         if (cy < D2W(0))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  726 |                                 revto(cx, D2W(0));[0m
  727 |                         else[0m
      | [0;32m                        } 
[0m[1mmark.c:727:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  727 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  728 |                                 LGotoPos(flayer, cx, W2D(cy));[0m
      | [0;1;32m                                                              
[0m[1mmark.c:731:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  731 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  732 |                                 rep_cnt = 1;[0m
  733 |                         rep_cnt = MarkScrollDownDisplay(rep_cnt);[0m
  734 |                         if (cy > D2W(fore->w_height - 1))[0m
  735 |                                 revto(cx, D2W(fore->w_height - 1));[0m
  736 |                         else[0m
  737 |                                 LGotoPos(flayer, cx, W2D(cy));[0m
  738 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:731:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  732 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:733:4: [0m[0;1;35mwarning: [0m[1mValue stored to 'rep_cnt' is never read [clang-analyzer-deadcode.DeadStores][0m
  733 |                         rep_cnt = MarkScrollDownDisplay(rep_cnt);[0m
      | [0;1;32m                        ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmark.c:733:4: [0m[0;1;36mnote: [0mValue stored to 'rep_cnt' is never read[0m
  733 |                         rep_cnt = MarkScrollDownDisplay(rep_cnt);[0m
      | [0;1;32m                        ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmark.c:734:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  734 |                         if (cy > D2W(fore->w_height - 1))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  735 |                                 revto(cx, D2W(fore->w_height - 1));[0m
  736 |                         else[0m
      | [0;32m                        } 
[0m[1mmark.c:736:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  736 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  737 |                                 LGotoPos(flayer, cx, W2D(cy));[0m
      | [0;1;32m                                                              
[0m[1mmark.c:741:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  741 |                         break;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                        {    ;} 
[0m[1mmark.c:744:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  744 |                         if (rep_cnt < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  745 |                                 rep_cnt = 0;[0m
  746 |                         if (rep_cnt > 100)[0m
  747 |                                 rep_cnt = 100;[0m
  748 | [0m
  749 |                         revto_line(markdata->left_mar,[0m
  750 |                             fore->w_histheight - fore->w_scrollback_height +[0m
  751 |                             (int)(rep_cnt * (fore->w_scrollback_height +[0m
  752 |                             fore->w_height) / 100.0), (fore->w_height - 1) / 2);[0m
  753 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:744:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |                         if (rep_cnt < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  745 |                                 rep_cnt = 0;[0m
      | [0;1;32m                                            
[0m[1mmark.c:746:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  746 |                         if (rep_cnt > 100)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  747 |                                 rep_cnt = 100;[0m
      | [0;1;32m                                              
[0m[1mmark.c:761:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  761 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  762 |                                 rep_cnt = fore->w_histheight + fore->w_height;[0m
      | [0;1;32m                                                                              
[0m[1mmark.c:763:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  763 |                         revto_line(markdata->left_mar, --rep_cnt, (fore->w_height - 1) / 2);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  764 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:766:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  766 |                         revto(markdata->left_mar, D2W(0));[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  767 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:769:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  769 |                         revto(markdata->left_mar, D2W((fore->w_height - 1) / 2));[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  770 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:772:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  772 |                         revto(markdata->left_mar, D2W(fore->w_height - 1));[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  773 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:775:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  775 |                         revto(--rep_cnt, cy);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  776 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:778:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  778 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  779 |                                 rep_cnt = 1;[0m
  780 |                         nextword(&cx, &cy, NW_MUSTMOVE, rep_cnt);[0m
  781 |                         revto(cx, cy);[0m
  782 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:778:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  778 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  779 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:785:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  786 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:787:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  787 |                         nextword(&cx, &cy, NW_ENDOFWORD|NW_MUSTMOVE | (od == 'E' ? NW_BIG : 0), rep_cnt);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  788 |                         revto(cx, cy);[0m
  789 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:792:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  792 |                         if (rep_cnt == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  793 |                                 rep_cnt = 1;[0m
      | [0;1;32m                                            
[0m[1mmark.c:794:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  794 |                         nextword(&cx, &cy, NW_BACK|NW_ENDOFWORD|NW_MUSTMOVE | (od == 'B' ? NW_BIG : 0), rep_cnt);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  795 |                         revto(cx, cy);[0m
  796 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:798:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  798 |                         markdata->append_mode = 1 - markdata->append_mode;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  799 |                         debug1("append mode %d--\n", markdata->append_mode);[0m
  800 |                         LMsg(0, (markdata->append_mode) ? ":set append" : ":set noappend");[0m
  801 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:805:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |                         if (markdata->left_mar == 8)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  806 |                                 rep_cnt = 1;[0m
  807 |                         else[0m
      | [0;32m                        } 
[0m[1mmark.c:807:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  808 |                                 rep_cnt = 9;[0m
      | [0;1;32m                                            
[0m[1mmark.c:817:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  817 |                         rep_cnt--;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1mmark.c:818:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |                         if (rep_cnt < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  819 |                                 rep_cnt = cx;[0m
      | [0;1;32m                                             
[0m[1mmark.c:822:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  822 |                                 if (markdata->left_mar > markdata->right_mar)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  823 |                                         markdata->left_mar = markdata->right_mar;[0m
      | [0;1;32m                                                                                 
[0m[1mmark.c:826:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |                                 if (markdata->left_mar > markdata->right_mar)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  827 |                                         markdata->right_mar = markdata->left_mar;[0m
      | [0;1;32m                                                                                 
[0m[1mmark.c:834:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  834 |                         if (od == 'v' || od == 'V')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  835 |                                 LMsg(0, (markdata->left_mar != 8) ? ":set nonu" : ":set nu");[0m
      | [0;1;32m                                                                                             
[0m[1mmark.c:839:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  839 |                         markdata->nonl = (markdata->nonl + 1) % 4;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1mmark.c:842:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  842 |                                 if (join_with_cr)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  843 |                                         LMsg(0, "Multiple lines (CR/LF)");[0m
  844 |                                 else[0m
  845 |                                         LMsg(0, "Multiple lines (LF)");[0m
  846 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mmark.c:842:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |                                 if (join_with_cr)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  843 |                                         LMsg(0, "Multiple lines (CR/LF)");[0m
  844 |                                 else[0m
      | [0;32m                                } 
[0m[1mmark.c:844:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  845 |                                         LMsg(0, "Multiple lines (LF)");[0m
      | [0;1;32m                                                                       
[0m[1mmark.c:848:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  848 |                                 LMsg(0, "Lines joined");[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  849 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mmark.c:851:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  851 |                                 LMsg(0, "Lines joined with blanks");[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  852 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mmark.c:854:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  854 |                                 LMsg(0, "Lines joined with comma");[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m  855 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mmark.c:859:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  859 |                         Search(1);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  860 |                         in_mark = 0;[0m
  861 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:863:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  863 |                         Search(-1);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  864 |                         in_mark = 0;[0m
  865 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:867:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  867 |                         Search(0);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  868 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:870:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  870 |                         markdata->isdir = -markdata->isdir;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  871 |                         Search(0);[0m
  872 |                         markdata->isdir = -markdata->isdir;[0m
  873 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:882:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  882 |                         if (--rep_cnt > 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  883 |                                 revto(cx, cy + rep_cnt);[0m
  884 |                         revto(lineend(markdata->cy), markdata->cy);[0m
  885 |                         if (od == 'y')[0m
  886 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mmark.c:882:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  882 |                         if (--rep_cnt > 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  883 |                                 revto(cx, cy + rep_cnt);[0m
      | [0;1;32m                                                        
[0m[1mmark.c:885:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  885 |                         if (od == 'y')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  886 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmark.c:889:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  889 |                         if (od == 'W') {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  890 |                                 if (rep_cnt == 0)[0m
  891 |                                         rep_cnt = 1;[0m
  892 |                                 if (!markdata->second) {[0m
  893 |                                         nextword(&cx, &cy, NW_BACK|NW_ENDOFWORD, 1);[0m
  894 |                                         revto(cx, cy);[0m
  895 |                                         markdata->second++;[0m
  896 |                                         cx = markdata->x1 = markdata->cx;[0m
  897 |                                         cy = markdata->y1 = markdata->cy;[0m
  898 |                                 }[0m
  899 |                                 nextword(&cx, &cy, NW_ENDOFWORD, rep_cnt);[0m
  900 |                                 revto(cx, cy);[0m
  901 |                         }[0m
  902 |                         cx = markdata->cx;[0m
  903 |                         cy = markdata->cy;[0m
      | [0;1;32m                                         
[0m      | [0;32m                                         ;} 
[0m[1mmark.c:890:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |                                 if (rep_cnt == 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  891 |                                         rep_cnt = 1;[0m
      | [0;1;32m                                                    
[0m[1mmark.c:906:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  906 |                         if (od == 'A')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  907 |                                 markdata->append_mode = 1;[0m
      | [0;1;32m                                                         
[0m      | [0;32m                                                         ;} 
[0m[1mmark.c:906:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  906 |                         if (od == 'A')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  907 |                                 markdata->append_mode = 1;[0m
      | [0;1;32m                                                          
[0m[1mmark.c:910:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  910 |                         if (od == '>')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  911 |                                 markdata->write_buffer = 1;[0m
      | [0;1;32m                                                          
[0m      | [0;32m                                                          ;} 
[0m[1mmark.c:910:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  910 |                         if (od == '>')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  911 |                                 markdata->write_buffer = 1;[0m
      | [0;1;32m                                                           
[0m[1mmark.c:929:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  929 |                                 if (md_user->u_plop.buf && !append_mode)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  930 |                                         UserFreeCopyBuffer(md_user);[0m
      | [0;1;32m                                                                    
[0m[1mmark.c:938:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  938 |                                         if (md_user->u_plop.buf)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  939 |                                                 md_user->u_plop.buf = realloc(md_user->u_plop.buf, (unsigned)(md_user->u_plop.len + newcopylen + 3));[0m
  940 |                                         else {[0m
      | [0;32m                                        } 
[0m[1mmark.c:958:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  958 |                                                         if (join_with_cr) {[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                        {
[0m  959 |                                                                 md_user->u_plop.buf[md_user->u_plop.len] = '\r';[0m
  960 |                                                                 md_user->u_plop.len++;[0m
  961 |                                                         }[0m
  962 |                                                         md_user->u_plop.buf[md_user->u_plop.len] = '\n';[0m
  963 |                                                         md_user->u_plop.len++;[0m
  964 |                                                         break;[0m
      | [0;1;32m                                                             
[0m      | [0;32m                                                             ;} 
[0m[1mmark.c:966:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  966 |                                                         break;[0m
      | [0;1;32m                                                        ^    
[0m      | [0;32m                                                        {    ;} 
[0m[1mmark.c:968:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  968 |                                                         md_user->u_plop.buf[md_user->u_plop.len] = ' ';[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                        {
[0m  969 |                                                         md_user->u_plop.len++;[0m
  970 |                                                         break;[0m
      | [0;1;32m                                                             
[0m      | [0;32m                                                             ;} 
[0m[1mmark.c:972:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  972 |                                                         md_user->u_plop.buf[md_user->u_plop.len] = ',';[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                        {
[0m  973 |                                                         md_user->u_plop.len++;[0m
  974 |                                                         break;[0m
      | [0;1;32m                                                             
[0m      | [0;32m                                                             ;} 
[0m[1mmark.c:994:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  994 |                                 if (append_mode)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  995 |                                         LMsg(0, "Appended %d characters to buffer", newcopylen);[0m
  996 |                                 else[0m
      | [0;32m                                } 
[0m[1mmark.c:996:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  996 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  997 |                                         LMsg(0, "Copied %d characters into buffer", md_user->u_plop.len);[0m
      | [0;1;32m                                                                                                         
[0m[1mmark.c:999:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  999 |                                 if (write_buffer)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1000 |                                         WriteFile(md_user, (char *)0, DUMP_EXCHANGE);[0m
      | [0;1;32m                                                                                     
[0m[1mmark.c:1006:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1006 |                         if (flayer->l_mouseevent.start) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1mmark.c:1020:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1020 |                                 } else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1021 |                                         od = 0;[0m
      | [0;1;32m                                               
[0m[1mmark.c:1023:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |                                 if (od)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1024 |                                         goto processchar;[0m
      | [0;1;32m                                                         
[0m[1mmark.c:1025:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1026 |                                 LayProcessMouseSwitch(flayer, 1);[0m
      | [0;1;32m                                                                 
[0m[1mmark.c:1030:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1030 |                         MarkAbort();[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1031 |                         LMsg(0, "Copy mode aborted");[0m
 1032 |                         in_mark = 0;[0m
 1033 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mmark.c:1035:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |                 if (in_mark)    /* markdata may be freed */[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1036 |                         markdata->rep_cnt = 0;[0m
      | [0;1;32m                                              
[0m[1mmark.c:1064:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1064 |         if (tx < 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1065 |                 tx = 0;[0m
 1066 |         else if (tx > fore->w_width - 1)[0m
      | [0;32m        } 
[0m[1mmark.c:1066:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |         else if (tx > fore->w_width - 1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1067 |                 tx = fore->w_width - 1;[0m
      | [0;1;32m                                       
[0m[1mmark.c:1068:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1068 |         if (ty < fore->w_histheight - fore->w_scrollback_height)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1069 |                 ty = fore->w_histheight - fore->w_scrollback_height;[0m
 1070 |         else if (ty > fore->w_histheight + fore->w_height - 1)[0m
      | [0;32m        } 
[0m[1mmark.c:1070:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |         else if (ty > fore->w_histheight + fore->w_height - 1)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1071 |                 ty = fore->w_histheight + fore->w_height - 1;[0m
      | [0;1;32m                                                             
[0m[1mmark.c:1079:89: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |         if (ty == fy && fx + 1 == tx && dw_right(ml, tx, fore->w_encoding) && tx < D_width - 1)[0m
      | [0;1;32m                                                                                               ^
[0m      | [0;32m                                                                                                {
[0m 1080 |                 tx++;[0m
      | [0;1;32m                     
[0m[1mmark.c:1081:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1081 |         if (ty == fy && fx - 1 == tx && dw_right(ml, fx, fore->w_encoding) && tx)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m 1082 |                 tx--;[0m
      | [0;1;32m                     
[0m[1mmark.c:1094:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1094 |         if (line >= 0 && line < fore->w_height)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1095 |                 i = W2D(ty) - line;[0m
 1096 |         else if (ty < markdata->hist_offset)[0m
      | [0;32m        } 
[0m[1mmark.c:1096:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |         else if (ty < markdata->hist_offset)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1097 |                 i = ty - markdata->hist_offset;[0m
 1098 |         else if (ty > markdata->hist_offset + (fore->w_height - 1))[0m
      | [0;32m        } 
[0m[1mmark.c:1098:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1098 |         else if (ty > markdata->hist_offset + (fore->w_height - 1))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1099 |                 i = ty - markdata->hist_offset - (fore->w_height - 1);[0m
      | [0;1;32m                                                                      
[0m[1mmark.c:1101:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1101 |         if (i > 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1102 |                 yend -= MarkScrollUpDisplay(i);[0m
 1103 |         else if (i < 0)[0m
      | [0;32m        } 
[0m[1mmark.c:1103:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1103 |         else if (i < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1104 |                 ystart += MarkScrollDownDisplay(-i);[0m
      | [0;1;32m                                                    
[0m[1mmark.c:1134:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1134 |         if (en < qq)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1135 |                 en--;[0m
      | [0;1;32m                     
[0m[1mmark.c:1160:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1160 |                 if (ry > yend)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1161 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:1164:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1164 |                         for (ce = fore->w_width; ce >= 0; ce--, wi--)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1165 |                                 if (*wi != ' ')[0m
 1166 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mmark.c:1165:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1165 |                                 if (*wi != ' ')[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1166 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mmark.c:1172:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1172 |                                 if (t == revst)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1173 |                                         revst--;[0m
      | [0;1;32m                                                
[0m[1mmark.c:1187:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1187 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1188 |                                 copy_mline2mchar(&mc, ml, x);[0m
      | [0;1;32m                                                             
[0m[1mmark.c:1198:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1198 |                         if (dw_left(ml, x, fore->w_encoding))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1199 |                                 x++;[0m
      | [0;1;32m                                    
[0m[1mmark.c:1240:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1240 |         if (y < 0)      /* No special full page handling */[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1241 |                 return;[0m
      | [0;1;32m                       
[0m[1mmark.c:1252:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1252 |                 if (dw_right(ml, xs, fore->w_encoding) && xs > 0)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1253 |                         xs--;[0m
      | [0;1;32m                             
[0m[1mmark.c:1254:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1254 |                 if (dw_left(ml, xe, fore->w_encoding) && xe < fore->w_width - 1)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 1255 |                         xe++;[0m
      | [0;1;32m                             
[0m[1mmark.c:1256:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1256 |                 if (xs == 0 && y > 0 && wy > 0 && WIN(wy - 1)->image[flayer->l_width] == 0)[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m 1257 |                         LCDisplayLineWrap(flayer, ml, y, xs, xe, isblank);[0m
 1258 |                 else[0m
      | [0;32m                } 
[0m[1mmark.c:1258:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1258 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1259 |                         LCDisplayLine(flayer, ml, y, xs, xe, isblank);[0m
      | [0;1;32m                                                                      
[0m[1mmark.c:1273:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1273 |         for (x = fore->w_width, wi = ml->image + fore->w_width; x >= 0; x--, wi--)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 1274 |                 if (*wi != ' ')[0m
 1275 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:1274:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1274 |                 if (*wi != ' ')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1275 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:1276:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1276 |         if (x < rm)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1277 |                 rm = x;[0m
      | [0;1;32m                       
[0m[1mmark.c:1279:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1279 |         for (x = xs; x <= xe; x++, cp++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1280 |                 if (cp >= sta && x >= markdata->left_mar)[0m
 1281 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:1280:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1280 |                 if (cp >= sta && x >= markdata->left_mar)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1281 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:1283:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1283 |         if (dw_right(ml, x, fore->w_encoding))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1284 |                 x--;[0m
      | [0;1;32m                    
[0m[1mmark.c:1286:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1286 |         if (x > xs)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1287 |                 LCDisplayLine(flayer, ml, y, xs, x - 1, isblank);[0m
      | [0;1;32m                                                                 
[0m[1mmark.c:1289:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1289 |                 if (cp > sto || x > rm)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1290 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:1307:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1307 |                 if (dw_left(ml, x, fore->w_encoding))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1308 |                         x++;[0m
      | [0;1;32m                            
[0m[1mmark.c:1311:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1311 |         if (x <= xe)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1312 |                 LCDisplayLine(flayer, ml, y, x, xe, isblank);[0m
      | [0;1;32m                                                             
[0m[1mmark.c:1334:129: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1334 |         if (fore->w_encoding && fore->w_encoding != UTF8 && D_encoding == UTF8 && ContainsSpecialDeffont(ml, xs, xe, fore->w_encoding))[0m
      | [0;1;32m                                                                                                                                       ^
[0m      | [0;32m                                                                                                                                        {
[0m 1335 |                 return EXPENSIVE;[0m
      | [0;1;32m                                 
[0m[1mmark.c:1340:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1340 |                 while (dx--)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1341 |                         PUTCHAR(*i++);[0m
      | [0;1;32m                                      
[0m[1mmark.c:1345:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1345 |         if (markdata->second == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1346 |                 st = en = -1;[0m
 1347 |         else {[0m
      | [0;32m        } 
[0m[1mmark.c:1357:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |         for (rm = fore->w_width, i = ml->image + fore->w_width; rm >= 0; rm--)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1358 |                 if (*i-- != ' ')[0m
 1359 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:1358:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1358 |                 if (*i-- != ' ')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1359 |                         break;[0m
      | [0;1;32m                              
[0m[1mmark.c:1360:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1360 |         if (rm > markdata->right_mar)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1361 |                 rm = markdata->right_mar;[0m
      | [0;1;32m                                         
[0m[1mmark.c:1372:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1372 |                         if (!cmp_mchar(rend, &mchar_marked))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1373 |                                 return EXPENSIVE;[0m
      | [0;1;32m                                                 
[0m[1mmark.c:1376:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1376 |                         if (!cmp_mchar_mline(rend, ml, x))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1377 |                                 return EXPENSIVE;[0m
      | [0;1;32m                                                 
[0m[1mmark.c:1393:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1393 |         if (n <= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1394 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mmark.c:1395:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1395 |         if (n > fore->w_histheight - markdata->hist_offset)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1396 |                 n = fore->w_histheight - markdata->hist_offset;[0m
      | [0;1;32m                                                               
[0m[1mmark.c:1401:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1401 |         while (i-- > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1402 |                 MarkRedisplayLine(flayer->l_height - i - 1, 0, flayer->l_width - 1, 1);[0m
      | [0;1;32m                                                                                       
[0m[1mmark.c:1412:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1412 |         if (n <= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1413 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mmark.c:1414:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1414 |         if (n > markdata->hist_offset)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1415 |                 n = markdata->hist_offset;[0m
      | [0;1;32m                                          
[0m[1mmark.c:1419:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1419 |         while (i-- > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1420 |                 MarkRedisplayLine(i, 0, flayer->l_width - 1, 1);[0m
      | [0;1;32m                                                                
[0m[1mmark.c:1430:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1430 |         if (bufiscopy)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1431 |                 pa->pa_pastebuf = buf;[0m
      | [0;1;32m                                      
[0m[1mmark.c:1439:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1439 |         if (pa->pa_pastebuf)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1440 |                 free(pa->pa_pastebuf);[0m
      | [0;1;32m                                      
[0m221 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[32/38][236.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmp_uh4saxf.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/encoding.c
[1mencoding.c:302:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |       while((*p)[0])[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  303 |         p++;[0m
      | [0;1;32m            
[0m[1mencoding.c:308:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  308 | recode_char(c, to_utf, font)[0m
      | [0;1;32m^
[0m[1mencoding.c:316:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |       if (c < 256)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  317 |         return c;[0m
      | [0;1;32m                 
[0m[1mencoding.c:324:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  324 |             f ^= ('C' ^ '5');[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  325 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mencoding.c:327:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  327 |             f ^= ('E' ^ '6');[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  328 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mencoding.c:330:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  330 |             f ^= ('H' ^ '7');[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  331 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mencoding.c:333:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  333 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mencoding.c:341:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  342 |         for (; (*p)[0]; p++)[0m
  343 |           {[0m
  344 |             if ((p[0][0] & 0x8000) && (c <= (p[0][0] & 0x7fff)) && c >= p[-1][0])[0m
  345 |               return c - p[-1][0] + p[-1][1];[0m
  346 |             if ((*p)[0] == c)[0m
  347 |               return (*p)[1];[0m
  348 |           }[0m
      | [0;1;32m           
[0m[1mencoding.c:344:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |             if ((p[0][0] & 0x8000) && (c <= (p[0][0] & 0x7fff)) && c >= p[-1][0])[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  345 |               return c - p[-1][0] + p[-1][1];[0m
      | [0;1;32m                                             
[0m[1mencoding.c:346:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |             if ((*p)[0] == c)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  347 |               return (*p)[1];[0m
      | [0;1;32m                             
[0m[1mencoding.c:353:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |       if (c < 256)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  354 |         return c;       /* latin1 */[0m
      | [0;1;32m                                    
[0m[1mencoding.c:358:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |           if (p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  359 |             for (; (*p)[1]; p++)[0m
  360 |               {[0m
  361 |                 if ((p[0][0] & 0x8000) && c <= p[0][1] && c >= p[-1][1])[0m
  362 |                   return (c - p[-1][1] + p[-1][0]) | (font << 8);[0m
  363 |                 if ((*p)[1] == c)[0m
  364 |                   return (*p)[0] | (font << 8);[0m
  365 |               }[0m
      | [0;1;32m               
[0m[1mencoding.c:361:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |                 if ((p[0][0] & 0x8000) && c <= p[0][1] && c >= p[-1][1])[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  362 |                   return (c - p[-1][1] + p[-1][0]) | (font << 8);[0m
      | [0;1;32m                                                                 
[0m[1mencoding.c:363:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |                 if ((*p)[1] == c)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  364 |                   return (*p)[0] | (font << 8);[0m
      | [0;1;32m                                               
[0m[1mencoding.c:369:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |   if (c < 128 && (font & 128) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  370 |     return c;[0m
      | [0;1;32m             
[0m[1mencoding.c:379:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  380 |         for (; (*p)[1]; p++)[0m
  381 |           {[0m
  382 |             if ((p[0][0] & 0x8000) && c <= p[0][1] && c >= p[-1][1])[0m
  383 |               return (c - p[-1][1] + p[-1][0]) | (font & 128 ? 0 : font << 8);[0m
  384 |             if ((*p)[1] == c)[0m
  385 |               return (*p)[0] | (font & 128 ? 0 : font << 8);[0m
  386 |           }[0m
      | [0;1;32m           
[0m[1mencoding.c:382:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |             if ((p[0][0] & 0x8000) && c <= p[0][1] && c >= p[-1][1])[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  383 |               return (c - p[-1][1] + p[-1][0]) | (font & 128 ? 0 : font << 8);[0m
      | [0;1;32m                                                                              
[0m[1mencoding.c:384:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |             if ((*p)[1] == c)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  385 |               return (*p)[0] | (font & 128 ? 0 : font << 8);[0m
      | [0;1;32m                                                            
[0m[1mencoding.c:394:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  394 | recode_char_dw(c, c2p, to_utf, font)[0m
      | [0;1;32m^
[0m[1mencoding.c:411:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  412 |         for (; (*p)[0]; p++)[0m
  413 |           if ((*p)[0] == c)[0m
  414 |             {[0m
  415 | #ifdef DW_CHARS[0m
  416 |               if (!utf8_isdouble((*p)[1]))[0m
  417 |                 *c2p = ' ';[0m
  418 | #endif[0m
  419 |               return (*p)[1];[0m
  420 |             }[0m
      | [0;1;32m             
[0m[1mencoding.c:412:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |         for (; (*p)[0]; p++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  413 |           if ((*p)[0] == c)[0m
  414 |             {[0m
  415 | #ifdef DW_CHARS[0m
  416 |               if (!utf8_isdouble((*p)[1]))[0m
  417 |                 *c2p = ' ';[0m
  418 | #endif[0m
  419 |               return (*p)[1];[0m
  420 |             }[0m
      | [0;1;32m             
[0m[1mencoding.c:416:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  416 |               if (!utf8_isdouble((*p)[1]))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  417 |                 *c2p = ' ';[0m
      | [0;1;32m                           
[0m[1mencoding.c:428:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |           if (p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  429 |             for (; (*p)[1]; p++)[0m
  430 |               if ((*p)[1] == c)[0m
  431 |                 {[0m
  432 |                   *c2p = ((*p)[0] & 255) | font << 8 | 0x8000;[0m
  433 |                   return ((*p)[0] >> 8) | font << 8;[0m
  434 |                 }[0m
      | [0;1;32m                 
[0m[1mencoding.c:429:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |             for (; (*p)[1]; p++)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  430 |               if ((*p)[1] == c)[0m
  431 |                 {[0m
  432 |                   *c2p = ((*p)[0] & 255) | font << 8 | 0x8000;[0m
  433 |                   return ((*p)[0] >> 8) | font << 8;[0m
  434 |                 }[0m
      | [0;1;32m                 
[0m[1mencoding.c:447:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  448 |         for (; (*p)[1]; p++)[0m
  449 |           if ((*p)[1] == c)[0m
  450 |             {[0m
  451 |               *c2p = ((*p)[0] & 255) | font << 8 | 0x8000;[0m
  452 |               return ((*p)[0] >> 8) | font << 8;[0m
  453 |             }[0m
      | [0;1;32m             
[0m[1mencoding.c:448:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |         for (; (*p)[1]; p++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  449 |           if ((*p)[1] == c)[0m
  450 |             {[0m
  451 |               *c2p = ((*p)[0] & 255) | font << 8 | 0x8000;[0m
  452 |               return ((*p)[0] >> 8) | font << 8;[0m
  453 |             }[0m
      | [0;1;32m             
[0m[1mencoding.c:460:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  460 | recode_char_to_encoding(c, encoding)[0m
      | [0;1;32m^
[0m[1mencoding.c:466:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |   if (encoding == UTF8)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  467 |     return recode_char(c, 1, -1);[0m
      | [0;1;32m                                 
[0m[1mencoding.c:468:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if ((fp = encodings[encoding].fontlist) != 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  469 |     while(*fp)[0m
  470 |       if ((x = recode_char(c, 0, (unsigned char)*fp++)) != -1)[0m
  471 |         return x;[0m
      | [0;1;32m                 
[0m[1mencoding.c:469:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |     while(*fp)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  470 |       if ((x = recode_char(c, 0, (unsigned char)*fp++)) != -1)[0m
  471 |         return x;[0m
      | [0;1;32m                 
[0m[1mencoding.c:470:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |       if ((x = recode_char(c, 0, (unsigned char)*fp++)) != -1)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  471 |         return x;[0m
      | [0;1;32m                 
[0m[1mencoding.c:472:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |   if (encodings[encoding].deffont)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  473 |     if ((x = recode_char(c, 0, encodings[encoding].deffont)) != -1)[0m
  474 |       return x;[0m
      | [0;1;32m               
[0m[1mencoding.c:473:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |     if ((x = recode_char(c, 0, encodings[encoding].deffont)) != -1)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  474 |       return x;[0m
      | [0;1;32m               
[0m[1mencoding.c:480:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  480 | recode_char_dw_to_encoding(c, c2p, encoding)[0m
      | [0;1;32m^
[0m[1mencoding.c:486:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |   if (encoding == UTF8)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  487 |     return recode_char_dw(c, c2p, 1, -1);[0m
      | [0;1;32m                                         
[0m[1mencoding.c:488:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |   if ((fp = encodings[encoding].fontlist) != 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  489 |     while(*fp)[0m
  490 |       if ((x = recode_char_dw(c, c2p, 0, (unsigned char)*fp++)) != -1)[0m
  491 |         return x;[0m
      | [0;1;32m                 
[0m[1mencoding.c:489:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  489 |     while(*fp)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  490 |       if ((x = recode_char_dw(c, c2p, 0, (unsigned char)*fp++)) != -1)[0m
  491 |         return x;[0m
      | [0;1;32m                 
[0m[1mencoding.c:490:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  490 |       if ((x = recode_char_dw(c, c2p, 0, (unsigned char)*fp++)) != -1)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  491 |         return x;[0m
      | [0;1;32m                 
[0m[1mencoding.c:492:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |   if (encodings[encoding].deffont)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  493 |     if ((x = recode_char_dw(c, c2p, 0, encodings[encoding].deffont)) != -1)[0m
  494 |       return x;[0m
      | [0;1;32m               
[0m[1mencoding.c:493:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |     if ((x = recode_char_dw(c, c2p, 0, encodings[encoding].deffont)) != -1)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  494 |       return x;[0m
      | [0;1;32m               
[0m[1mencoding.c:501:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  501 | recode_mchar(mc, from, to)[0m
      | [0;1;32m^
[0m[1mencoding.c:509:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |   if (from == to || (from != UTF8 && to != UTF8))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  510 |     return mc;[0m
      | [0;1;32m              
[0m[1mencoding.c:512:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |   if (rmc.font == 0 && from != UTF8)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  513 |     rmc.font = encodings[from].deffont;[0m
      | [0;1;32m                                       
[0m[1mencoding.c:514:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  514 |   if (rmc.font == 0)    /* latin1 is the same in unicode */[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  515 |     return mc;[0m
      | [0;1;32m              
[0m[1mencoding.c:517:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  517 |   if (from == UTF8)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  518 |     c |= rmc.fontx << 16;[0m
      | [0;1;32m                         
[0m[1mencoding.c:526:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  527 | #endif[0m
  528 |     c = recode_char_to_encoding(c, to);[0m
      | [0;1;32m                                       
[0m[1mencoding.c:531:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |   if (to == UTF8)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  532 |     rmc.fontx = c >> 16 & 255;[0m
      | [0;1;32m                              
[0m[1mencoding.c:537:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  537 | recode_mline(ml, w, from, to)[0m
      | [0;1;32m^
[0m[1mencoding.c:547:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  547 |   if (from == to || (from != UTF8 && to != UTF8) || w == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  548 |     return ml;[0m
      | [0;1;32m              
[0m[1mencoding.c:549:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |   if (ml->font == null && ml->fontx == null && encodings[from].deffont == 0)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  550 |     return ml;[0m
      | [0;1;32m              
[0m[1mencoding.c:555:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |           if (rml[i].image == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  556 |             rml[i].image = malloc(w);[0m
  557 |           else[0m
      | [0;32m          } 
[0m[1mencoding.c:557:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  557 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  558 |             rml[i].image = realloc(rml[i].image, w);[0m
      | [0;1;32m                                                    
[0m[1mencoding.c:559:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |           if (rml[i].font == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  560 |             rml[i].font = malloc(w);[0m
  561 |           else[0m
      | [0;32m          } 
[0m[1mencoding.c:561:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  562 |             rml[i].font = realloc(rml[i].font, w);[0m
      | [0;1;32m                                                  
[0m[1mencoding.c:563:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |           if (rml[i].fontx == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  564 |             rml[i].fontx = malloc(w);[0m
  565 |           else[0m
      | [0;32m          } 
[0m[1mencoding.c:565:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  565 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  566 |             rml[i].fontx = realloc(rml[i].fontx, w);[0m
      | [0;1;32m                                                    
[0m[1mencoding.c:577:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  578 |     debug1("%c", "0123456789abcdef"[(ml->image[i] >> 4) & 15]);[0m
      | [0;1;32m                                                               
[0m[1mencoding.c:580:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  580 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  581 |     debug1("%c", "0123456789abcdef"[(ml->image[i]     ) & 15]);[0m
      | [0;1;32m                                                               
[0m[1mencoding.c:583:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  584 |     debug1("%c", "0123456789abcdef"[(ml->font[i] >> 4) & 15]);[0m
      | [0;1;32m                                                              
[0m[1mencoding.c:586:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  586 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  587 |     debug1("%c", "0123456789abcdef"[(ml->font[i]     ) & 15]);[0m
      | [0;1;32m                                                              
[0m[1mencoding.c:589:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  590 |     debug1("%c", "0123456789abcdef"[(ml->fontx[i] >> 4) & 15]);[0m
      | [0;1;32m                                                               
[0m[1mencoding.c:592:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  592 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  593 |     debug1("%c", "0123456789abcdef"[(ml->fontx[i]     ) & 15]);[0m
      | [0;1;32m                                                               
[0m[1mencoding.c:607:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |       if (from == UTF8)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  608 |         c |= ml->fontx[i] << 16;[0m
      | [0;1;32m                                
[0m[1mencoding.c:609:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |       if (from != UTF8 && c < 256)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  610 |         c |= encodings[from].deffont << 8;[0m
      | [0;1;32m                                          
[0m[1mencoding.c:614:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |           if (i + 1 == w)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  615 |             c = '?';[0m
  616 |           else[0m
      | [0;32m          } 
[0m[1mencoding.c:622:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  622 |               if (to == UTF8)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  623 |                 rl->fontx[i - 1]  = c >> 16 & 255;[0m
      | [0;1;32m                                                  
[0m[1mencoding.c:629:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  629 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  630 | #endif[0m
  631 |         c = recode_char_to_encoding(c, to);[0m
      | [0;1;32m                                           
[0m[1mencoding.c:634:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |       if (to == UTF8)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  635 |         rl->fontx[i] = c >> 16 & 255;[0m
      | [0;1;32m                                     
[0m[1mencoding.c:639:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  639 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  640 |     debug1("%c", "0123456789abcdef"[(rl->image[i] >> 4) & 15]);[0m
      | [0;1;32m                                                               
[0m[1mencoding.c:642:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  643 |     debug1("%c", "0123456789abcdef"[(rl->image[i]     ) & 15]);[0m
      | [0;1;32m                                                               
[0m[1mencoding.c:645:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  646 |     debug1("%c", "0123456789abcdef"[(rl->font[i] >> 4) & 15]);[0m
      | [0;1;32m                                                              
[0m[1mencoding.c:648:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  649 |     debug1("%c", "0123456789abcdef"[(rl->font[i]     ) & 15]);[0m
      | [0;1;32m                                                              
[0m[1mencoding.c:651:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  652 |     debug1("%c", "0123456789abcdef"[(rl->fontx[i] >> 4) & 15]);[0m
      | [0;1;32m                                                               
[0m[1mencoding.c:654:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  654 |   for (i = 0; i < w; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  655 |     debug1("%c", "0123456789abcdef"[(rl->fontx[i]     ) & 15]);[0m
      | [0;1;32m                                                               
[0m[1mencoding.c:669:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  669 | AddUtf8(c)[0m
      | [0;1;32m^
[0m[1mencoding.c:702:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  702 | ToUtf8_comb(p, c)[0m
      | [0;1;32m^
[0m[1mencoding.c:717:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  717 | ToUtf8(p, c)[0m
      | [0;1;32m^
[0m[1mencoding.c:726:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  726 |           if (p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  727 |             *p++ = (c & 0x3000000) >> 12 ^ 0xf8;[0m
      | [0;1;32m                                                
[0m[1mencoding.c:731:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  732 |         *p++ = (c & 0x1fc0000) >> 18 ^ 0xf0;[0m
      | [0;1;32m                                            
[0m[1mencoding.c:738:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  738 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  739 |         *p++ = (c & 0x7f000) >> 12 ^ 0xe0; [0m
[1mencoding.c:745:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  745 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  746 |         *p++ = (c & 0x1fc0) >> 6 ^ 0xc0; [0m
[1mencoding.c:750:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  751 |     *p++ = c;[0m
      | [0;1;32m             
[0m[1mencoding.c:762:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  762 | FromUtf8(c, utf8charp)[0m
      | [0;1;32m^
[0m[1mencoding.c:773:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  773 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  774 |         c = (c & 0x3f) | (utf8char << 6);[0m
      | [0;1;32m                                         
[0m[1mencoding.c:778:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  778 |           if ((c & 0x820823e0) == 0x80000000)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  779 |             c = 0xfdffffff;[0m
  780 |           else if ((c & 0x020821f0) == 0x02000000)[0m
      | [0;32m          } 
[0m[1mencoding.c:780:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |           else if ((c & 0x020821f0) == 0x02000000)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  781 |             c = 0xfff7ffff;[0m
  782 |           else if ((c & 0x000820f8) == 0x00080000)[0m
      | [0;32m          } 
[0m[1mencoding.c:782:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  782 |           else if ((c & 0x000820f8) == 0x00080000)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  783 |             c = 0xffffd000;[0m
  784 |           else if ((c & 0x0000207c) == 0x00002000)[0m
      | [0;32m          } 
[0m[1mencoding.c:784:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |           else if ((c & 0x0000207c) == 0x00002000)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  785 |             c = 0xffffff70;[0m
      | [0;1;32m                           
[0m[1mencoding.c:791:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |       if (c >= 0xfe)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  792 |         c = UCS_REPL;[0m
  793 |       else if (c >= 0xfc)[0m
      | [0;32m      } 
[0m[1mencoding.c:793:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |       else if (c >= 0xfc)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  794 |         c = (c & 0x01) | 0xbffffffc;    /* 5 bytes to follow */[0m
  795 |       else if (c >= 0xf8)[0m
      | [0;32m      } 
[0m[1mencoding.c:795:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  795 |       else if (c >= 0xf8)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  796 |         c = (c & 0x03) | 0xbfffff00;    /* 4 */[0m
  797 |       else if (c >= 0xf0)[0m
      | [0;32m      } 
[0m[1mencoding.c:797:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |       else if (c >= 0xf0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  798 |         c = (c & 0x07) | 0xbfffc000;    /* 3 */[0m
  799 |       else if (c >= 0xe0)[0m
      | [0;32m      } 
[0m[1mencoding.c:799:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  799 |       else if (c >= 0xe0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  800 |         c = (c & 0x0f) | 0xbff00000;    /* 2 */[0m
  801 |       else if (c >= 0xc2)[0m
      | [0;32m      } 
[0m[1mencoding.c:801:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  801 |       else if (c >= 0xc2)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  802 |         c = (c & 0x1f) | 0xfc000000;    /* 1 */[0m
  803 |       else if (c >= 0xc0)[0m
      | [0;32m      } 
[0m[1mencoding.c:803:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  803 |       else if (c >= 0xc0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  804 |         c = 0xfdffffff;         /* overlong */[0m
  805 |       else if (c >= 0x80)[0m
      | [0;32m      } 
[0m[1mencoding.c:805:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |       else if (c >= 0x80)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  806 |         c = UCS_REPL;[0m
      | [0;1;32m                     
[0m[1mencoding.c:809:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |   if (utf8char)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  810 |     return -1;[0m
      | [0;1;32m              
[0m[1mencoding.c:815:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  815 |   if (c & 0xff800000)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  816 |     c = UCS_REPL;       /* sorry, only know 23bit Unicode */[0m
      | [0;1;32m                                                            
[0m[1mencoding.c:818:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |   if (c >= 0xd800 && (c <= 0xdfff || c == 0xfffe || c == 0xffff))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  819 |     c = UCS_REPL;       /* illegal code */[0m
      | [0;1;32m                                          
[0m[1mencoding.c:825:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  825 | WinSwitchEncoding(p, encoding)[0m
      | [0;1;32m^
[0m[1mencoding.c:841:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  841 |   for (d = displays; d; d = d->d_next)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  842 |     for (cv = d->d_cvlist; cv; cv = cv->c_next)[0m
  843 |       if (p == Layer2Window(cv->c_layer))[0m
  844 |         {[0m
  845 |           flayer = cv->c_layer;[0m
  846 |           while(flayer->l_next)[0m
  847 |             {[0m
  848 |               if (oldflayer == flayer)[0m
  849 |                 oldflayer = flayer->l_next;[0m
  850 |               ExitOverlayPage();[0m
  851 |             }[0m
  852 |         }[0m
      | [0;1;32m         
[0m[1mencoding.c:842:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |     for (cv = d->d_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  843 |       if (p == Layer2Window(cv->c_layer))[0m
  844 |         {[0m
  845 |           flayer = cv->c_layer;[0m
  846 |           while(flayer->l_next)[0m
  847 |             {[0m
  848 |               if (oldflayer == flayer)[0m
  849 |                 oldflayer = flayer->l_next;[0m
  850 |               ExitOverlayPage();[0m
  851 |             }[0m
  852 |         }[0m
      | [0;1;32m         
[0m[1mencoding.c:848:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  848 |               if (oldflayer == flayer)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  849 |                 oldflayer = flayer->l_next;[0m
      | [0;1;32m                                           
[0m[1mencoding.c:861:87: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m  862 |         continue;[0m
      | [0;1;32m                 
[0m[1mencoding.c:866:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  866 |           if (p->w_encoding == UTF8)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  867 |             c |= ml->fontx[i] << 16;[0m
      | [0;1;32m                                    
[0m[1mencoding.c:867:11: [0m[0;1;35mwarning: [0m[1mArray access (via field 'fontx') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
  867 |             c |= ml->fontx[i] << 16;[0m
      | [0;1;32m                 ^   ~~~~~
[0m[1mencoding.c:835:8: [0m[0;1;36mnote: [0mAssuming field 'l_encoding' is equal to UTF8[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:835:35: [0m[0;1;36mnote: [0mAssuming 'encoding' is not equal to UTF8[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~
[0m[1mencoding.c:835:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m  ^
[0m[1mencoding.c:841:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 853[0m
  841 |   for (d = displays; d; d = d->d_next)[0m
      | [0;1;32m  ^
[0m[1mencoding.c:854:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  854 |   for (j = 0; j < p->w_height + p->w_histheight; j++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:854:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  854 |   for (j = 0; j < p->w_height + p->w_histheight; j++)[0m
      | [0;1;32m  ^
[0m[1mencoding.c:857:12: [0m[0;1;36mnote: [0mAssuming 'j' is < field 'l_height'[0m
  857 |       ml = j < p->w_height ? &p->w_mlines[j] : &p->w_hlines[j - p->w_height];[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mencoding.c:857:12: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mencoding.c:861:11: [0m[0;1;36mnote: [0mAssuming 'null' is equal to field 'font'[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1mencoding.c:861:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mencoding.c:861:31: [0m[0;1;36mnote: [0mAssuming field 'fontx' is equal to null[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mencoding.c:861:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:861:49: [0m[0;1;36mnote: [0mAssuming field 'deffont' is not equal to 0[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:861:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m      ^
[0m[1mencoding.c:863:19: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'l_width'[0m
  863 |       for (i = 0; i < p->w_width; i++)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~
[0m[1mencoding.c:863:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  863 |       for (i = 0; i < p->w_width; i++)[0m
      | [0;1;32m      ^
[0m[1mencoding.c:866:11: [0m[0;1;36mnote: [0mField 'l_encoding' is equal to UTF8[0m
  866 |           if (p->w_encoding == UTF8)[0m
      | [0;1;32m                 ^
[0m[1m./window.h:312:30: [0m[0;1;36mnote: [0mexpanded from macro 'w_encoding'[0m
  312 | #define w_encoding   w_layer.l_encoding[0m
      | [0;1;32m                             ^
[0m[1mencoding.c:866:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  866 |           if (p->w_encoding == UTF8)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:867:11: [0m[0;1;36mnote: [0mArray access (via field 'fontx') results in a null pointer dereference[0m
  867 |             c |= ml->fontx[i] << 16;[0m
      | [0;1;32m                 ^   ~~~~~
[0m[1mencoding.c:868:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  869 |             c |= encodings[p->w_encoding].deffont << 8;[0m
      | [0;1;32m                                                       
[0m[1mencoding.c:870:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |           if (c < 256)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  871 |             continue;[0m
      | [0;1;32m                     
[0m[1mencoding.c:883:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  883 |               if (i + 1 == p->w_width)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  884 |                 c = '?';[0m
  885 |               else[0m
      | [0;32m              } 
[0m[1mencoding.c:889:47: [0m[0;1;35mwarning: [0m[1mArray access (via field 'fontx') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
  889 |                   c2 = ml->image[i] | (ml->font[i] << 8) | (ml->fontx[i] << 16);[0m
      | [0;1;32m                                                            ^   ~~~~~
[0m[1mencoding.c:835:8: [0m[0;1;36mnote: [0mAssuming field 'l_encoding' is not equal to UTF8[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:835:35: [0m[0;1;36mnote: [0mAssuming 'encoding' is equal to UTF8[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~
[0m[1mencoding.c:835:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m  ^
[0m[1mencoding.c:841:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 853[0m
  841 |   for (d = displays; d; d = d->d_next)[0m
      | [0;1;32m  ^
[0m[1mencoding.c:854:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  854 |   for (j = 0; j < p->w_height + p->w_histheight; j++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:854:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  854 |   for (j = 0; j < p->w_height + p->w_histheight; j++)[0m
      | [0;1;32m  ^
[0m[1mencoding.c:857:12: [0m[0;1;36mnote: [0mAssuming 'j' is < field 'l_height'[0m
  857 |       ml = j < p->w_height ? &p->w_mlines[j] : &p->w_hlines[j - p->w_height];[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mencoding.c:857:12: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mencoding.c:861:11: [0m[0;1;36mnote: [0mAssuming 'null' is equal to field 'font'[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1mencoding.c:861:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mencoding.c:861:31: [0m[0;1;36mnote: [0mAssuming field 'fontx' is equal to null[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mencoding.c:861:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:861:49: [0m[0;1;36mnote: [0mAssuming field 'deffont' is not equal to 0[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:861:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m      ^
[0m[1mencoding.c:863:19: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'l_width'[0m
  863 |       for (i = 0; i < p->w_width; i++)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~
[0m[1mencoding.c:863:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  863 |       for (i = 0; i < p->w_width; i++)[0m
      | [0;1;32m      ^
[0m[1mencoding.c:866:11: [0m[0;1;36mnote: [0mField 'l_encoding' is not equal to UTF8[0m
  866 |           if (p->w_encoding == UTF8)[0m
      | [0;1;32m                 ^
[0m[1m./window.h:312:30: [0m[0;1;36mnote: [0mexpanded from macro 'w_encoding'[0m
  312 | #define w_encoding   w_layer.l_encoding[0m
      | [0;1;32m                             ^
[0m[1mencoding.c:866:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  866 |           if (p->w_encoding == UTF8)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:868:11: [0m[0;1;36mnote: [0mField 'l_encoding' is not equal to UTF8[0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m                 ^
[0m[1m./window.h:312:30: [0m[0;1;36mnote: [0mexpanded from macro 'w_encoding'[0m
  312 | #define w_encoding   w_layer.l_encoding[0m
      | [0;1;32m                             ^
[0m[1mencoding.c:868:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m              ^
[0m[1mencoding.c:868:33: [0m[0;1;36mnote: [0mAssuming 'c' is >= 256[0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m                                       ^~~~~~~
[0m[1mencoding.c:868:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:870:8: [0m[0;1;36mnote: [0m'c' is >= 256[0m
  870 |           if (c < 256)[0m
      | [0;1;32m              ^
[0m[1mencoding.c:870:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  870 |           if (c < 256)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:872:20: [0m[0;1;36mnote: [0m'null' is equal to field 'font'[0m
  872 |           if (ml->font == null)[0m
      | [0;1;32m                          ^~~~
[0m[1mencoding.c:872:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  872 |           if (ml->font == null)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:874:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  874 |               if ((ml->font = (unsigned char *)calloc(p->w_width + 1, 1)) == 0)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:874:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  874 |               if ((ml->font = (unsigned char *)calloc(p->w_width + 1, 1)) == 0)[0m
      | [0;1;32m              ^
[0m[1mencoding.c:881:12: [0m[0;1;36mnote: [0mField 'l_encoding' is not equal to UTF8[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m                  ^
[0m[1m./window.h:312:30: [0m[0;1;36mnote: [0mexpanded from macro 'w_encoding'[0m
  312 | #define w_encoding   w_layer.l_encoding[0m
      | [0;1;32m                             ^
[0m[1mencoding.c:881:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m               ^
[0m[1mencoding.c:881:34: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~~~~
[0m[1mencoding.c:881:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m               ^
[0m[1mencoding.c:881:55: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m                                                             ^~~~~~~~~~~~~~~~~
[0m[1mencoding.c:881:74: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m                                                                                ^
[0m[1mencoding.c:883:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  883 |               if (i + 1 == p->w_width)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:883:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  883 |               if (i + 1 == p->w_width)[0m
      | [0;1;32m              ^
[0m[1mencoding.c:889:47: [0m[0;1;36mnote: [0mArray access (via field 'fontx') results in a null pointer dereference[0m
  889 |                   c2 = ml->image[i] | (ml->font[i] << 8) | (ml->fontx[i] << 16);[0m
      | [0;1;32m                                                            ^   ~~~~~
[0m[1mencoding.c:903:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  903 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  904 |                     ml->fontx = null;[0m
      | [0;1;32m                                     
[0m[1mencoding.c:910:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  910 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  911 | #endif[0m
  912 |             c = recode_char_to_encoding(c, encoding);[0m
      | [0;1;32m                                                     
[0m[1mencoding.c:925:22: [0m[0;1;35mwarning: [0m[1mArray access (via field 'fontx') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
  925 |               ml->fontx[i]  = c >> 16 & 255;[0m
      | [0;1;32m                  ~~~~~     ^
[0m[1mencoding.c:835:8: [0m[0;1;36mnote: [0mAssuming field 'l_encoding' is not equal to UTF8[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:835:35: [0m[0;1;36mnote: [0mAssuming 'encoding' is equal to UTF8[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~
[0m[1mencoding.c:835:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  835 |   if ((p->w_encoding == UTF8) == (encoding == UTF8))[0m
      | [0;1;32m  ^
[0m[1mencoding.c:841:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 853[0m
  841 |   for (d = displays; d; d = d->d_next)[0m
      | [0;1;32m  ^
[0m[1mencoding.c:854:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  854 |   for (j = 0; j < p->w_height + p->w_histheight; j++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:854:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  854 |   for (j = 0; j < p->w_height + p->w_histheight; j++)[0m
      | [0;1;32m  ^
[0m[1mencoding.c:857:12: [0m[0;1;36mnote: [0mAssuming 'j' is < field 'l_height'[0m
  857 |       ml = j < p->w_height ? &p->w_mlines[j] : &p->w_hlines[j - p->w_height];[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mencoding.c:857:12: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mencoding.c:861:11: [0m[0;1;36mnote: [0mAssuming 'null' is equal to field 'font'[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1mencoding.c:861:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mencoding.c:861:31: [0m[0;1;36mnote: [0mAssuming field 'fontx' is equal to null[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mencoding.c:861:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:861:49: [0m[0;1;36mnote: [0mAssuming field 'deffont' is not equal to 0[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:861:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  861 |       if (ml->font == null && ml->fontx == 0 && encodings[p->w_encoding].deffont == 0)[0m
      | [0;1;32m      ^
[0m[1mencoding.c:863:19: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'l_width'[0m
  863 |       for (i = 0; i < p->w_width; i++)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~
[0m[1mencoding.c:863:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  863 |       for (i = 0; i < p->w_width; i++)[0m
      | [0;1;32m      ^
[0m[1mencoding.c:866:11: [0m[0;1;36mnote: [0mField 'l_encoding' is not equal to UTF8[0m
  866 |           if (p->w_encoding == UTF8)[0m
      | [0;1;32m                 ^
[0m[1m./window.h:312:30: [0m[0;1;36mnote: [0mexpanded from macro 'w_encoding'[0m
  312 | #define w_encoding   w_layer.l_encoding[0m
      | [0;1;32m                             ^
[0m[1mencoding.c:866:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  866 |           if (p->w_encoding == UTF8)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:868:11: [0m[0;1;36mnote: [0mField 'l_encoding' is not equal to UTF8[0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m                 ^
[0m[1m./window.h:312:30: [0m[0;1;36mnote: [0mexpanded from macro 'w_encoding'[0m
  312 | #define w_encoding   w_layer.l_encoding[0m
      | [0;1;32m                             ^
[0m[1mencoding.c:868:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m              ^
[0m[1mencoding.c:868:33: [0m[0;1;36mnote: [0mAssuming 'c' is >= 256[0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m                                       ^~~~~~~
[0m[1mencoding.c:868:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  868 |           if (p->w_encoding != UTF8 && c < 256)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:870:8: [0m[0;1;36mnote: [0m'c' is >= 256[0m
  870 |           if (c < 256)[0m
      | [0;1;32m              ^
[0m[1mencoding.c:870:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  870 |           if (c < 256)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:872:20: [0m[0;1;36mnote: [0m'null' is equal to field 'font'[0m
  872 |           if (ml->font == null)[0m
      | [0;1;32m                          ^~~~
[0m[1mencoding.c:872:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  872 |           if (ml->font == null)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:874:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  874 |               if ((ml->font = (unsigned char *)calloc(p->w_width + 1, 1)) == 0)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:874:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  874 |               if ((ml->font = (unsigned char *)calloc(p->w_width + 1, 1)) == 0)[0m
      | [0;1;32m              ^
[0m[1mencoding.c:881:12: [0m[0;1;36mnote: [0mField 'l_encoding' is not equal to UTF8[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m                  ^
[0m[1m./window.h:312:30: [0m[0;1;36mnote: [0mexpanded from macro 'w_encoding'[0m
  312 | #define w_encoding   w_layer.l_encoding[0m
      | [0;1;32m                             ^
[0m[1mencoding.c:881:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m               ^
[0m[1mencoding.c:881:34: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~~~~
[0m[1mencoding.c:881:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m               ^
[0m[1mencoding.c:881:55: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m                                                             ^~~~~~~~~~~~~~~~~
[0m[1mencoding.c:881:74: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  881 |           if ((p->w_encoding != UTF8 && (c & 0x1f00) != 0 && (c & 0xe000) == 0) || (p->w_encoding == UTF8 && utf8_isdouble(c)))[0m
      | [0;1;32m                                                                                ^
[0m[1mencoding.c:883:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  883 |               if (i + 1 == p->w_width)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:883:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  883 |               if (i + 1 == p->w_width)[0m
      | [0;1;32m              ^
[0m[1mencoding.c:915:8: [0m[0;1;36mnote: [0m'encoding' is equal to UTF8[0m
  915 |           if (encoding == UTF8)[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mencoding.c:915:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  915 |           if (encoding == UTF8)[0m
      | [0;1;32m          ^
[0m[1mencoding.c:917:12: [0m[0;1;36mnote: [0m'c' is <= 65536[0m
  917 |               if (c > 0x10000 && ml->fontx == null)[0m
      | [0;1;32m                  ^
[0m[1mencoding.c:917:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  917 |               if (c > 0x10000 && ml->fontx == null)[0m
      | [0;1;32m                              ^
[0m[1mencoding.c:925:22: [0m[0;1;36mnote: [0mArray access (via field 'fontx') results in a null pointer dereference[0m
  925 |               ml->fontx[i]  = c >> 16 & 255;[0m
      | [0;1;32m                  ~~~~~     ^
[0m[1mencoding.c:927:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  927 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  928 |             ml->fontx = null;[0m
      | [0;1;32m                             
[0m[1mencoding.c:946:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |   if (ucs < table[0].first || ucs > table[max].last)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  947 |     return 0;[0m
      | [0;1;32m             
[0m[1mencoding.c:950:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  950 |     if (ucs > table[mid].last)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  951 |       min = mid + 1;[0m
  952 |     else if (ucs < table[mid].first)[0m
      | [0;32m    } 
[0m[1mencoding.c:952:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  952 |     else if (ucs < table[mid].first)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  953 |       max = mid - 1;[0m
  954 |     else[0m
      | [0;32m    } 
[0m[1mencoding.c:954:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  954 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  955 |       return 1;[0m
      | [0;1;32m               
[0m[1mencoding.c:962:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  962 | utf8_isdouble(c)[0m
      | [0;1;32m^
[0m[1mencoding.c:1266:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1266 |   if (c >= 0xdf00 && c <= 0xdfff)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1267 |     return 1;                   /* dw combining sequence */[0m
      | [0;1;32m                                                           
[0m[1mencoding.c:1276:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1276 | utf8_iscomb(c)[0m
      | [0;1;32m^
[0m[1mencoding.c:1335:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1335 | comb_tofront(i)[0m
      | [0;1;32m^
[0m[1mencoding.c:1349:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1349 |       if (i < 0xd800 || i >= 0xe000)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1350 |         return;[0m
      | [0;1;32m               
[0m[1mencoding.c:1356:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1356 | utf8_handle_comb(c, mc)[0m
      | [0;1;32m^
[0m[1mencoding.c:1368:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1368 |       if (!combchars)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1369 |         return;[0m
      | [0;1;32m               
[0m[1mencoding.c:1374:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1374 |           if (combchars[0x800])[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1375 |             free(combchars[0x800]);[0m
      | [0;1;32m                                   
[0m[1mencoding.c:1376:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1376 |           if (combchars[0x801])[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1377 |             free(combchars[0x801]);[0m
      | [0;1;32m                                   
[0m[1mencoding.c:1393:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1393 |       if (!combchars[i])[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1394 |         break;[0m
      | [0;1;32m              
[0m[1mencoding.c:1395:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1395 |       if (combchars[i]->c1 == c1 && combchars[i]->c2 == c)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1396 |         break;[0m
      | [0;1;32m              
[0m[1mencoding.c:1401:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1401 |       if (c1 >= 0xd800 && c1 < 0xe000)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1402 |         comb_tofront(c1 - 0xd800);[0m
      | [0;1;32m                                  
[0m[1mencoding.c:1417:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1417 |       if (!combchars[i])[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1418 |         return;[0m
      | [0;1;32m               
[0m[1mencoding.c:1445:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1445 | encmatch(s1, s2)[0m
      | [0;1;32m^
[0m[1mencoding.c:1453:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1453 |       if (c1 >= 'A' && c1 <= 'Z')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1454 |         c1 += 'a' - 'A';[0m
      | [0;1;32m                        
[0m[1mencoding.c:1461:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1461 |       if (c2 >= 'A' && c2 <= 'Z')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1462 |         c2 += 'a' - 'A';[0m
      | [0;1;32m                        
[0m[1mencoding.c:1468:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1468 |       if (c1 != c2)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1469 |         return 0;[0m
      | [0;1;32m                 
[0m[1mencoding.c:1478:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1478 | FindEncoding(name)[0m
      | [0;1;32m^
[0m[1mencoding.c:1484:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1484 |   if (name == 0 || *name == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1485 |     return 0;[0m
      | [0;1;32m             
[0m[1mencoding.c:1486:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1486 |   if (encmatch(name, "euc"))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1487 |     name = "eucJP";[0m
      | [0;1;32m                   
[0m[1mencoding.c:1488:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1488 |   if (encmatch(name, "off") || encmatch(name, "iso8859-1"))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1489 |     return 0;[0m
      | [0;1;32m             
[0m[1mencoding.c:1494:89: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |   for (encoding = 0; encoding < (int)(sizeof(encodings)/sizeof(*encodings)); encoding++)[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m 1495 |     if (encmatch(name, encodings[encoding].name))[0m
 1496 |       {[0m
 1497 | #ifdef UTF8[0m
 1498 |         LoadFontTranslationsForEncoding(encoding);[0m
 1499 | #endif[0m
 1500 |         return encoding;[0m
 1501 |       }[0m
      | [0;1;32m       
[0m[1mencoding.c:1506:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1506 | EncodingName(encoding)[0m
      | [0;1;32m^
[0m[1mencoding.c:1509:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1509 |   if (encoding >= (int)(sizeof(encodings)/sizeof(*encodings)))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1510 |     return 0;[0m
      | [0;1;32m             
[0m[1mencoding.c:1515:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1515 | EncodingDefFont(encoding)[0m
      | [0;1;32m^
[0m[1mencoding.c:1522:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1522 | ResetEncoding(p)[0m
      | [0;1;32m^
[0m[1mencoding.c:1529:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1529 |   if (c)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1530 |     SetCharsets(p, c);[0m
      | [0;1;32m                      
[0m[1mencoding.c:1537:20: [0m[0;1;35mwarning: [0m[1mArray access (via field 'charsets') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
 1537 |       p->w_FontE = encodings[encoding].charsets[1];[0m
      | [0;1;32m                   ^                   ~~~~~~~~
[0m[1mencoding.c:1529:7: [0m[0;1;36mnote: [0mAssuming 'c' is null[0m
 1529 |   if (c)[0m
      | [0;1;32m      ^
[0m[1mencoding.c:1529:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1529 |   if (c)[0m
      | [0;1;32m  ^
[0m[1mencoding.c:1534:7: [0m[0;1;36mnote: [0mAssuming field 'usegr' is not equal to 0[0m
 1534 |   if (encodings[encoding].usegr)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mencoding.c:1534:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1534 |   if (encodings[encoding].usegr)[0m
      | [0;1;32m  ^
[0m[1mencoding.c:1537:20: [0m[0;1;36mnote: [0mArray access (via field 'charsets') results in a null pointer dereference[0m
 1537 |       p->w_FontE = encodings[encoding].charsets[1];[0m
      | [0;1;32m                   ^                   ~~~~~~~~
[0m[1mencoding.c:1539:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1539 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1540 |     p->w_FontE = 0;[0m
      | [0;1;32m                   
[0m[1mencoding.c:1541:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1541 |   if (encodings[encoding].noc1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1542 |     p->w_c1 = 0;[0m
      | [0;1;32m                
[0m[1mencoding.c:1555:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1555 | DecodeChar(c, encoding, statep)[0m
      | [0;1;32m^
[0m[1mencoding.c:1567:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1567 |       if (c >= 0x10000)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1568 |         c = (c & 0x7f0000) << 8 | (c & 0xffff);[0m
      | [0;1;32m                                               
[0m[1mencoding.c:1581:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1581 |           if (c < 0x80)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1582 |             return c;[0m
      | [0;1;32m                     
[0m[1mencoding.c:1590:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1590 |           if (c <= 0x9f)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1591 |             c = (c - 0x81) * 2 + 0x21; [0m
 1592 |           else[0m
      | [0;32m          } 
[0m[1mencoding.c:1592:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1592 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1593 |             c = (c - 0xc1) * 2 + 0x21; [0m
[1mencoding.c:1594:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1594 |           if (t <= 0x7e)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1595 |             t -= 0x1f;[0m
 1596 |           else if (t <= 0x9e)[0m
      | [0;32m          } 
[0m[1mencoding.c:1596:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1596 |           else if (t <= 0x9e)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1597 |             t -= 0x20;[0m
 1598 |           else[0m
      | [0;32m          } 
[0m[1mencoding.c:1598:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1598 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1599 |              t -= 0x7e, c++;[0m
      | [0;1;32m                            
[0m[1mencoding.c:1620:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1620 |           if (c == 0x8e)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1621 |             return t | (KANA << 16);[0m
      | [0;1;32m                                    
[0m[1mencoding.c:1631:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1631 |       if (encoding == EUC_KR)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1632 |         return c | (3 << 16);[0m
      | [0;1;32m                             
[0m[1mencoding.c:1633:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1633 |       if (encoding == EUC_CN)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1634 |         return c | (1 << 16);[0m
      | [0;1;32m                             
[0m[1mencoding.c:1635:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1635 |       if (c & (KANJI0212 << 16))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1636 |         return c;[0m
 1637 |       else[0m
      | [0;32m      } 
[0m[1mencoding.c:1637:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1637 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1638 |         return c | (KANJI << 16);[0m
      | [0;1;32m                                 
[0m[1mencoding.c:1646:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1646 |               if (encoding == GBK && c == 0x80)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1647 |                 return 0xa4 | (('b'|0x80) << 16);[0m
      | [0;1;32m                                                 
[0m[1mencoding.c:1663:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1663 | EncodeChar(bp, c, encoding, fontp)[0m
      | [0;1;32m^
[0m[1mencoding.c:1674:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1674 |       if (*fontp == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1675 |         return 0;[0m
      | [0;1;32m                 
[0m[1mencoding.c:1709:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1709 |       if (c >= 0x10000)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1710 |         c = (c & 0x7f0000) >> 8 | (c & 0xffff);[0m
      | [0;1;32m                                               
[0m[1mencoding.c:1728:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1728 |   if (f & 0x80)         /* map special 96-fonts to latin1 */[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1729 |     f = 0;[0m
      | [0;1;32m          
[0m[1mencoding.c:1733:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1733 |       if (f == KANA)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1734 |         c = (c & 0xff) | 0x80;[0m
 1735 |       else if (f == KANJI)[0m
      | [0;32m      } 
[0m[1mencoding.c:1737:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1737 |           if (!bp)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1738 |             return 2;[0m
      | [0;1;32m                     
[0m[1mencoding.c:1797:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1797 |   if (encoding == GBK && f == 0 && c == 0xa4)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1798 |     c = 0x80;[0m
      | [0;1;32m             
[0m[1mencoding.c:1810:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1810 |              if (f > 2)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1811 |                *bp++ = '(';[0m
      | [0;1;32m                           
[0m[1mencoding.c:1818:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1818 |           if (f == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1819 |             f = 'B';[0m
      | [0;1;32m                    
[0m[1mencoding.c:1831:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1831 |       if (bp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1832 |         *bp++ = c >> 8;[0m
      | [0;1;32m                       
[0m[1mencoding.c:1835:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1835 |   if (bp)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 1836 |     *bp++ = c;[0m
      | [0;1;32m              
[0m[1mencoding.c:1841:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1841 | CanEncodeFont(encoding, f)[0m
      | [0;1;32m^
[0m[1mencoding.c:1848:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1848 |       return 1;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mencoding.c:1851:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1851 |       return f == KANJI || f == KANA;[0m
      | [0;1;32m      ^                             
[0m      | [0;32m      {                             ;} 
[0m[1mencoding.c:1853:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1853 |       return f == KANJI || f == KANA || f == KANJI0212;[0m
      | [0;1;32m      ^                                               
[0m      | [0;32m      {                                               ;} 
[0m[1mencoding.c:1855:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1855 |       return f == 3;[0m
      | [0;1;32m      ^            
[0m      | [0;32m      {            ;} 
[0m[1mencoding.c:1857:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1857 |       return f == 1;[0m
      | [0;1;32m      ^            
[0m      | [0;32m      {            ;} 
[0m[1mencoding.c:1859:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1859 |       return f == 030;[0m
      | [0;1;32m      ^              
[0m      | [0;32m      {              ;} 
[0m[1mencoding.c:1861:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1861 |       return f == 031;[0m
      | [0;1;32m      ^              
[0m      | [0;32m      {              ;} 
[0m[1mencoding.c:1863:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1863 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mencoding.c:1870:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1870 | PrepareEncodedChar(c)[0m
      | [0;1;32m^
[0m[1mencoding.c:1882:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1882 |       if (f == KANA)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1883 |         return c | 0x80;[0m
 1884 |       else if (f == KANJI)[0m
      | [0;32m      } 
[0m[1mencoding.c:1916:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1916 |   if ((encoding == BIG5 && f == 030) || (encoding == GBK && f == 031))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1917 |     return c | 0x80;[0m
      | [0;1;32m                    
[0m[1mencoding.c:1923:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1923 | RecodeBuf(fbuf, flen, fenc, tenc, tbuf)[0m
      | [0;1;32m^
[0m[1mencoding.c:1936:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1936 |       if (c == -2)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1937 |         i--;[0m
      | [0;1;32m            
[0m[1mencoding.c:1938:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1938 |       if (c < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1939 |         continue;[0m
      | [0;1;32m                 
[0m[1mencoding.c:1948:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1948 | ContainsSpecialDeffont(ml, xs, xe, encoding)[0m
      | [0;1;32m^
[0m[1mencoding.c:1956:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1956 |   if (encoding == UTF8 || encodings[encoding].deffont == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1957 |     return 0;[0m
      | [0;1;32m             
[0m[1mencoding.c:1963:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1963 |       if (*f++)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1964 |         continue;[0m
      | [0;1;32m                 
[0m[1mencoding.c:1979:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1979 | LoadFontTranslation(font, file)[0m
      | [0;1;32m^
[0m[1mencoding.c:1993:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1993 |       if (font == 0 || screenencodings == 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1994 |         return -1;[0m
      | [0;1;32m                  
[0m[1mencoding.c:1995:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1995 |       if (strlen(screenencodings) > sizeof(buf) - 10)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1996 |         return -1;[0m
      | [0;1;32m                  
[0m[1mencoding.c:1997:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1997 |       sprintf(buf, "%s/%02x", screenencodings, font & 0xff);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mencoding.c:1997:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1997 |       sprintf(buf, "%s/%02x", screenencodings, font & 0xff);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mencoding.c:2001:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2001 |   if ((f = secfopen(myfile, "r")) == 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2002 |     return -1;[0m
      | [0;1;32m              
[0m[1mencoding.c:2006:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2006 |       for(; i < 12; i++)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2007 |         if (getc(f) != "ScreenI2UTF8"[i])[0m
 2008 |           break;[0m
      | [0;1;32m                
[0m[1mencoding.c:2007:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2007 |         if (getc(f) != "ScreenI2UTF8"[i])[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2008 |           break;[0m
      | [0;1;32m                
[0m[1mencoding.c:2009:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2009 |       if (getc(f) != 0)         /* format */[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2010 |         break;[0m
      | [0;1;32m              
[0m[1mencoding.c:2012:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2012 |       if (fo == EOF)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2013 |         break;[0m
      | [0;1;32m              
[0m[1mencoding.c:2014:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2014 |       if (font != -1 && font != fo)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2015 |         break;[0m
      | [0;1;32m              
[0m[1mencoding.c:2018:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2018 |       if (x == EOF)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2019 |         break;[0m
      | [0;1;32m              
[0m[1mencoding.c:2022:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2022 |       while ((x = getc(f)) && x != EOF)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2023 |         getc(f);        /* skip font name (padded to 2 bytes) */[0m
      | [0;1;32m                                                                
[0m[1mencoding.c:2024:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2024 |       if ((p = malloc(sizeof(*p) * (i + 1))) == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2025 |         break;[0m
      | [0;1;32m              
[0m[1mencoding.c:2034:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2034 |           if (c == EOF)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2035 |             break;[0m
      | [0;1;32m                  
[0m[1mencoding.c:2048:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2048 |       if (recodetabs[fo].tab && (recodetabs[fo].flags & RECODETAB_ALLOCED) != 0)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 2049 |         free(recodetabs[fo].tab);[0m
      | [0;1;32m                                 
[0m[1mencoding.c:2059:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2059 |       if (c != 'S')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2060 |         break;[0m
      | [0;1;32m              
[0m[1mencoding.c:2064:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2064 |   if (font != -1 && file == 0 && recodetabs[font].flags == 0)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2065 |     recodetabs[font].flags = RECODETAB_TRIED;[0m
      | [0;1;32m                                             
[0m[1mencoding.c:2070:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2070 | LoadFontTranslationsForEncoding(encoding)[0m
      | [0;1;32m^
[0m[1mencoding.c:2077:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2077 |   if ((c = encodings[encoding].fontlist) != 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2078 |     while ((f = (unsigned char)*c++) != 0)[0m
 2079 |       if (recodetabs[f].flags == 0)[0m
 2080 |           LoadFontTranslation(f, 0);[0m
      | [0;1;32m                                    
[0m[1mencoding.c:2078:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2078 |     while ((f = (unsigned char)*c++) != 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2079 |       if (recodetabs[f].flags == 0)[0m
 2080 |           LoadFontTranslation(f, 0);[0m
      | [0;1;32m                                    
[0m[1mencoding.c:2079:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2079 |       if (recodetabs[f].flags == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2080 |           LoadFontTranslation(f, 0);[0m
      | [0;1;32m                                    
[0m[1mencoding.c:2082:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2082 |   if (f > 0 && recodetabs[f].flags == 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2083 |     LoadFontTranslation(f, 0);[0m
      | [0;1;32m                              
[0m217 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[33/38][239.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmp_ng3sjyg.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/window.c
[1mwindow.c:180:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  180 | nwin_compose(def, new, res)[0m
      | [0;1;32m^
[0m[1mwindow.c:228:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  228 | DoAutolf(buf, lenp, fr)[0m
      | [0;1;32m^
[0m[1mwindow.c:239:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |       if (*p != '\r')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  240 |         continue;[0m
      | [0;1;32m                 
[0m[1mwindow.c:246:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |       if (len == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  247 |         break;[0m
      | [0;1;32m              
[0m[1mwindow.c:248:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  248 |       bcopy(p, p + 1, len++);[0m
      | [0;1;32m      ^~~~~
[0m[1mwindow.c:248:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  248 |       bcopy(p, p + 1, len++);[0m
      | [0;1;32m      ^~~~~
[0m[1mwindow.c:256:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  256 | WinProcess(bufpp, lenp)[0m
      | [0;1;32m^
[0m[1mwindow.c:327:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |   if (l > f)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  328 |     l = f;[0m
      | [0;1;32m          
[0m[1mwindow.c:336:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
  336 |       bcopy(*bufpp, ibuf + *ilen, l2);[0m
      | [0;1;32m      ^~~~~
[0m[1mwindow.c:336:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
  336 |       bcopy(*bufpp, ibuf + *ilen, l2);[0m
      | [0;1;32m      ^~~~~
[0m[1mwindow.c:337:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |       if (fore->w_autolf && (trunc = DoAutolf(ibuf + *ilen, &l2, f - l2)))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  338 |         l -= trunc;[0m
      | [0;1;32m                   
[0m[1mwindow.c:355:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  355 | ZombieProcess(bufpp, lenp)[0m
      | [0;1;32m^
[0m[1mwindow.c:390:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  390 | WinRedisplayLine(y, from, to, isblank)[0m
      | [0;1;32m^
[0m[1mwindow.c:394:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |   if (y < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  395 |     return;[0m
      | [0;1;32m           
[0m[1mwindow.c:397:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |   if (from == 0 && y > 0 && fore->w_mlines[y - 1].image[fore->w_width] == 0)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  398 |     LCDisplayLineWrap(&fore->w_layer, &fore->w_mlines[y], y, from, to, isblank);[0m
  399 |   else[0m
      | [0;32m  } 
[0m[1mwindow.c:399:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  400 |     LCDisplayLine(&fore->w_layer, &fore->w_mlines[y], y, from, to, isblank);[0m
      | [0;1;32m                                                                            
[0m[1mwindow.c:404:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  404 | WinRewrite(y, x1, x2, rend, doit)[0m
      | [0;1;32m^
[0m[1mwindow.c:427:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  427 |       while (dx-- > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  428 |         PUTCHAR(*i++);[0m
      | [0;1;32m                      
[0m[1mwindow.c:436:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |   if (is_dw_font(rend->font))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  437 |     return EXPENSIVE;[0m
      | [0;1;32m                     
[0m[1mwindow.c:440:146: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |   if (fore->w_encoding && fore->w_encoding != UTF8 && D_encoding == UTF8 && ContainsSpecialDeffont(fore->w_mlines + y, x1, x2, fore->w_encoding))[0m
      | [0;1;32m                                                                                                                                                 ^
[0m      | [0;32m                                                                                                                                                  {
[0m  441 |     return EXPENSIVE;[0m
      | [0;1;32m                     
[0m[1mwindow.c:454:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |       if (*p++ != rend->attr)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  455 |         return EXPENSIVE;[0m
      | [0;1;32m                         
[0m[1mwindow.c:457:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |       if (*f++ != rend->font)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  458 |         return EXPENSIVE;[0m
      | [0;1;32m                         
[0m[1mwindow.c:459:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |       if (*fx++ != rend->fontx)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  460 |         return EXPENSIVE;[0m
      | [0;1;32m                         
[0m[1mwindow.c:463:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |       if (*c++ != rend->color)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  464 |         return EXPENSIVE;[0m
      | [0;1;32m                         
[0m[1mwindow.c:475:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  475 | WinClearLine(y, xs, xe, bce)[0m
      | [0;1;32m^
[0m[1mwindow.c:484:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  484 | WinResize(wi, he)[0m
      | [0;1;32m^
[0m[1mwindow.c:501:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if (cv != D_forecv)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  502 |         continue;[0m
      | [0;1;32m                 
[0m[1mwindow.c:525:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  525 | DoStartLog(w, buf, bufsize)[0m
      | [0;1;32m^
[0m[1mwindow.c:531:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |   if (!w || !buf)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  532 |     return -1;[0m
      | [0;1;32m              
[0m[1mwindow.c:534:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  534 |   strncpy(buf, MakeWinMsg(screenlogfile, w, '%'), bufsize - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:534:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  534 |   strncpy(buf, MakeWinMsg(screenlogfile, w, '%'), bufsize - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:539:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |   if (w->w_log != NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  540 |     logfclose(w->w_log);[0m
      | [0;1;32m                        
[0m[1mwindow.c:542:86: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |   if ((w->w_log = logfopen(buf, islogfile(buf) ? NULL : secfopen(buf, "a"))) == NULL)[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m  543 |     return -2;[0m
      | [0;1;32m              
[0m[1mwindow.c:561:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  561 | MakeWindow(newwin)[0m
      | [0;1;32m^
[0m[1mwindow.c:576:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  576 |       if (!maxwin)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  577 |         maxwin = MAXWIN;[0m
      | [0;1;32m                        
[0m[1mwindow.c:596:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |       if (*pp == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  597 |         break;[0m
      | [0;1;32m              
[0m[1mwindow.c:598:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  598 |       if (++pp == wtab + maxwin)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  599 |         pp = wtab;[0m
      | [0;1;32m                  
[0m[1mwindow.c:628:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |   if ((f = OpenDevice(nwin.args, nwin.lflag, &type, &TtyName)) < 0)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  629 |     return -1;[0m
      | [0;1;32m              
[0m[1mwindow.c:630:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  630 |   if (type == W_TYPE_GROUP)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  631 |     f = -1;[0m
      | [0;1;32m           
[0m[1mwindow.c:641:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |   if (type != W_TYPE_PTY)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  642 |     nwin.lflag = 0;[0m
      | [0;1;32m                   
[0m[1mwindow.c:648:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |   for (i = 0; nwin.args[i] && i < MAXARGS - 1; i++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  649 |     p->w_cmdargs[i] = SaveStr(nwin.args[i]);[0m
      | [0;1;32m                                            
[0m[1mwindow.c:651:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |   if (nwin.dir)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  652 |     p->w_dir = SaveStr(nwin.dir);[0m
      | [0;1;32m                                 
[0m[1mwindow.c:653:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |   if (nwin.term)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  654 |     p->w_term = SaveStr(nwin.term);[0m
      | [0;1;32m                                   
[0m[1mwindow.c:658:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  658 |   if (fore && fore->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  659 |     p->w_group = fore;[0m
  660 |   else if (fore && fore->w_group)[0m
      | [0;32m  } 
[0m[1mwindow.c:660:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  660 |   else if (fore && fore->w_group)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  661 |     p->w_group = fore->w_group;[0m
      | [0;1;32m                               
[0m[1mwindow.c:685:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  685 |   if (display && !AclCheckPermWin(D_user, ACL_WRITE, p))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  686 |     p->w_wlockuser = D_user;[0m
      | [0;1;32m                            
[0m[1mwindow.c:693:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |   if (!nwin.aka)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  694 |     nwin.aka = Filename(nwin.args[0]);[0m
      | [0;1;32m                                      
[0m[1mwindow.c:695:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  695 |   strncpy(p->w_akabuf, nwin.aka, sizeof(p->w_akabuf) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:695:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  695 |   strncpy(p->w_akabuf, nwin.aka, sizeof(p->w_akabuf) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:703:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  703 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  704 |     p->w_title = p->w_akachange = p->w_akabuf;[0m
      | [0;1;32m                                              
[0m[1mwindow.c:705:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  705 |   if (nwin.hstatus)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  706 |     p->w_hstatus = SaveStr(nwin.hstatus);[0m
      | [0;1;32m                                         
[0m[1mwindow.c:712:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  712 |       for (i = 0; i < maxusercount; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  713 |         ACLBYTE(p->w_mon_notify, i) |= ACLBIT(i);[0m
      | [0;1;32m                                                 
[0m[1mwindow.c:725:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |       for (i = 0; i < maxusercount; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  726 |         ACLBYTE(p->w_lio_notify, i) |= ACLBIT(i);[0m
      | [0;1;32m                                                 
[0m[1mwindow.c:736:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  736 |   strncpy(p->w_tty, TtyName, MAXSTR - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:736:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  736 |   strncpy(p->w_tty, TtyName, MAXSTR - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:761:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  761 |   if (nwin.charset)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  762 |     SetCharsets(p, nwin.charset);[0m
      | [0;1;32m                                 
[0m[1mwindow.c:811:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  811 |   if (display && D_fore)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  812 |     D_other = D_fore;[0m
      | [0;1;32m                     
[0m[1mwindow.c:839:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  839 |       if (display || (p->w_lflag & 2))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  840 |         SetUtmp(p);[0m
      | [0;1;32m                   
[0m[1mwindow.c:854:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |         if (nwin.poll_zombie_timeout)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  855 |                 p->w_poll_zombie_timeout = nwin.poll_zombie_timeout;[0m
      | [0;1;32m                                                                    
[0m[1mwindow.c:903:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  903 | RemakeWindow(p)[0m
      | [0;1;32m^
[0m[1mwindow.c:917:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  917 |   if ((f = OpenDevice(p->w_cmdargs, lflag, &p->w_type, &TtyName)) < 0)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  918 |     return -1;[0m
      | [0;1;32m              
[0m[1mwindow.c:922:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  922 |   strncpy(p->w_tty, *TtyName ? TtyName : p->w_title, MAXSTR - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:922:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  922 |   strncpy(p->w_tty, *TtyName ? TtyName : p->w_title, MAXSTR - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:958:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  958 |       if (p->w_pid < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  959 |         return -1;[0m
      | [0;1;32m                  
[0m[1mwindow.c:963:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  963 |   if (p->w_slot == (slot_t)0 && (display || (p->w_lflag & 2)))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  964 |     SetUtmp(p);[0m
      | [0;1;32m               
[0m[1mwindow.c:974:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  974 | CloseDevice(wp)[0m
      | [0;1;32m^
[0m[1mwindow.c:977:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  977 |   if (wp->w_ptyfd < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  978 |     return;[0m
      | [0;1;32m           
[0m[1mwindow.c:997:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  997 | FreeWindow(wp)[0m
      | [0;1;32m^
[0m[1mwindow.c:1007:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1007 |   if (wp->w_pwin)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1008 |     FreePseudowin(wp);[0m
      | [0;1;32m                      
[0m[1mwindow.c:1020:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1020 |   if (wp->w_log != NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1021 |     logfclose(wp->w_log);[0m
      | [0;1;32m                         
[0m[1mwindow.c:1027:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |       for (win = windows; win; win = win->w_next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1028 |         if (win->w_group == wp)[0m
 1029 |           win->w_group = wp->w_group;[0m
      | [0;1;32m                                     
[0m[1mwindow.c:1028:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1028 |         if (win->w_group == wp)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1029 |           win->w_group = wp->w_group;[0m
      | [0;1;32m                                     
[0m[1mwindow.c:1032:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1032 |   if (wp->w_hstatus)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1033 |     free(wp->w_hstatus);[0m
      | [0;1;32m                        
[0m[1mwindow.c:1034:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1034 |   for (i = 0; wp->w_cmdargs[i]; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1035 |     free(wp->w_cmdargs[i]);[0m
      | [0;1;32m                           
[0m[1mwindow.c:1036:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1036 |   if (wp->w_dir)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1037 |     free(wp->w_dir);[0m
      | [0;1;32m                    
[0m[1mwindow.c:1038:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1038 |   if (wp->w_term)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1039 |     free(wp->w_term);[0m
      | [0;1;32m                     
[0m[1mwindow.c:1042:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1042 |       if (d->d_other == wp)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1043 |         d->d_other = d->d_fore && d->d_fore->w_next != wp ? d->d_fore->w_next : wp->w_next;[0m
      | [0;1;32m                                                                                           
[0m[1mwindow.c:1044:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1044 |       if (d->d_fore == wp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1045 |         d->d_fore = NULL;[0m
      | [0;1;32m                         
[0m[1mwindow.c:1048:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1048 |           for (l = cv->c_layer; l; l = l->l_next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1049 |             if (l->l_layfn == &WinLf)[0m
 1050 |               break;[0m
      | [0;1;32m                    
[0m[1mwindow.c:1049:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1049 |             if (l->l_layfn == &WinLf)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1050 |               break;[0m
      | [0;1;32m                    
[0m[1mwindow.c:1051:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1051 |           if (!l)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1052 |             continue;[0m
      | [0;1;32m                     
[0m[1mwindow.c:1053:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1053 |           if ((struct win *)l->l_data != wp)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1054 |             continue;[0m
      | [0;1;32m                     
[0m[1mwindow.c:1055:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1055 |           if (cv->c_layer == wp->w_savelayer)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1056 |             wp->w_savelayer = 0;[0m
      | [0;1;32m                                
[0m[1mwindow.c:1060:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1060 |   if (wp->w_savelayer)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1061 |     KillLayerChain(wp->w_savelayer);[0m
      | [0;1;32m                                    
[0m[1mwindow.c:1073:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1073 |   if (flayer == &wp->w_layer)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1074 |     flayer = 0;[0m
      | [0;1;32m               
[0m[1mwindow.c:1092:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1092 | OpenDevice(args, lflag, typep, namep)[0m
      | [0;1;32m^
[0m[1mwindow.c:1102:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |   if (!arg)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1103 |     return -1;[0m
      | [0;1;32m              
[0m[1mwindow.c:1123:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1123 |       if ((f = OpenTTY(arg, args[1])) < 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1124 |         return -1;[0m
      | [0;1;32m                  
[0m[1mwindow.c:1169:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1169 |   if (*typep == W_TYPE_PTY || *typep == W_TYPE_PLAIN)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1170 |     tcflush(f, TCIOFLUSH);[0m
      | [0;1;32m                          
[0m[1mwindow.c:1173:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1173 |   if (*typep != W_TYPE_PTY)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1174 |     return f;[0m
      | [0;1;32m             
[0m[1mwindow.c:1209:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1209 | ForkWindow(win, args, ttyn)[0m
      | [0;1;32m^
[0m[1mwindow.c:1253:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1253 |       Msg(errno, "fork");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1254 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mwindow.c:1256:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1256 |       signal(SIGHUP, SIG_DFL);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1m./os.h:423:17: [0m[0;1;36mnote: [0mexpanded from macro 'signal'[0m
  423 | # define signal xsignal[0m
      | [0;1;32m                ^
[0m[1mwindow.c:1273:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1273 |       if (setgid(real_gid) || setuid(real_uid))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1274 |         Panic(errno, "Setuid/gid");[0m
      | [0;1;32m                                   
[0m[1mwindow.c:1278:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1278 |       if (!pwin)        /* ignore directory if pseudo */[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1279 | #endif[0m
 1280 |         if (win->w_dir && *win->w_dir && chdir(win->w_dir))[0m
 1281 |           Panic(errno, "Cannot chdir to %s", win->w_dir);[0m
      | [0;1;32m                                                         
[0m[1mwindow.c:1280:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1280 |         if (win->w_dir && *win->w_dir && chdir(win->w_dir))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1281 |           Panic(errno, "Cannot chdir to %s", win->w_dir);[0m
      | [0;1;32m                                                         
[0m[1mwindow.c:1288:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1288 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1289 |         brktty(-1);[0m
      | [0;1;32m                   
[0m[1mwindow.c:1302:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1302 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1303 |         closeallfiles(win->w_ptyfd);[0m
      | [0;1;32m                                    
[0m[1mwindow.c:1337:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1337 |                   if (separate_sids)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1338 |                     newfd = open(ttyn, O_RDWR);[0m
 1339 |                   else[0m
      | [0;32m                  } 
[0m[1mwindow.c:1339:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1339 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1340 |                     newfd = open(ttyn, O_RDWR|O_NOCTTY);[0m
      | [0;1;32m                                                        
[0m[1mwindow.c:1344:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1344 |                   if (newfd < 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1345 |                     Panic(errno, "Cannot open %s", ttyn);[0m
      | [0;1;32m                                                         
[0m[1mwindow.c:1347:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1347 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1348 |                 dup(newfd);[0m
      | [0;1;32m                           
[0m[1mwindow.c:1363:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1363 |             if (fcntl(win->w_ptyfd, F_SETFL, 0))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1364 |               Msg(errno, "Warning: clear NBLOCK fcntl failed");[0m
      | [0;1;32m                                                               
[0m[1mwindow.c:1381:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1381 |       if (slave != -1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1382 |         close(slave);[0m
      | [0;1;32m                     
[0m[1mwindow.c:1387:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1387 |           if (fgtty(newfd))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1388 |             Msg(errno, "fgtty");[0m
      | [0;1;32m                                
[0m[1mwindow.c:1442:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1442 |       strncpy(shellbuf + 6, ShellProg + (*ShellProg == '-'), sizeof(shellbuf) - 7);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mwindow.c:1442:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1442 |       strncpy(shellbuf + 6, ShellProg + (*ShellProg == '-'), sizeof(shellbuf) - 7);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mwindow.c:1451:4: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1451 |           snprintf(tebuf, sizeof(tebuf), "TERM=%s", win->w_term);[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mwindow.c:1451:4: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1451 |           snprintf(tebuf, sizeof(tebuf), "TERM=%s", win->w_term);[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mwindow.c:1461:9: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1461 |                       bcopy(s2, s1 + tl, strlen(s2) + 1);[0m
      | [0;1;32m                      ^~~~~
[0m[1mwindow.c:1461:9: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1461 |                       bcopy(s2, s1 + tl, strlen(s2) + 1);[0m
      | [0;1;32m                      ^~~~~
[0m[1mwindow.c:1462:9: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1462 |                       bcopy(win->w_term, s1, tl);[0m
      | [0;1;32m                      ^~~~~
[0m[1mwindow.c:1462:9: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1462 |                       bcopy(win->w_term, s1, tl);[0m
      | [0;1;32m                      ^~~~~
[0m[1mwindow.c:1467:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1467 |       snprintf(ebuf, sizeof(ebuf), "WINDOW=%d", win->w_number);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwindow.c:1467:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1467 |       snprintf(ebuf, sizeof(ebuf), "WINDOW=%d", win->w_number);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwindow.c:1470:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1470 |       if (*proc == '-')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1471 |         proc++;[0m
      | [0;1;32m               
[0m[1mwindow.c:1472:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1472 |       if (!*proc)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1473 |         proc = DefaultShell;[0m
      | [0;1;32m                            
[0m[1mwindow.c:1479:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1479 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mwindow.c:1481:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1481 |   if (slave != -1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1482 |     close(slave);[0m
      | [0;1;32m                 
[0m[1mwindow.c:1537:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1537 | winexec(av)[0m
      | [0;1;32m^
[0m[1mwindow.c:1549:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1549 |   if ((w = display ? fore : windows) == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1550 |     return -1;[0m
      | [0;1;32m              
[0m[1mwindow.c:1568:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1568 |   for (s = *av; *s == ' '; s++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1569 |     ;[0m
      | [0;1;32m     
[0m[1mwindow.c:1570:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1570 |   for (p = s; *p == ':' || *p == '.' || *p == '!'; p++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1571 |     ;[0m
      | [0;1;32m     
[0m[1mwindow.c:1572:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1572 |   if (*p != '|')[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1573 |     while (*p && p > s && p[-1] == '.')[0m
 1574 |       p--;[0m
      | [0;1;32m          
[0m[1mwindow.c:1573:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1573 |     while (*p && p > s && p[-1] == '.')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1574 |       p--;[0m
      | [0;1;32m          
[0m[1mwindow.c:1580:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1580 |   if (*p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 1581 |     av[0] = p;[0m
 1582 |   else[0m
      | [0;32m  } 
[0m[1mwindow.c:1582:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1582 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1583 |     av++;[0m
      | [0;1;32m         
[0m[1mwindow.c:1594:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1594 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mwindow.c:1596:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1596 |           l |= F_PBACK << (i * F_PSHIFT);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1597 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mwindow.c:1599:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1599 |           l |= F_PBOTH << (i * F_PSHIFT);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1600 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mwindow.c:1613:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1613 |   if (!(l & F_PBACK))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1614 |     l |= F_UWP;[0m
      | [0;1;32m               
[0m[1mwindow.c:1623:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1623 |       while (*p && l-- > 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1624 |         *t++ = *p++;[0m
      | [0;1;32m                    
[0m[1mwindow.c:1625:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1625 |       if (l <= 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1626 |         break;[0m
      | [0;1;32m              
[0m[1mwindow.c:1637:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1637 |   strncpy(pwin->p_tty, t, MAXSTR - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:1637:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1637 |   strncpy(pwin->p_tty, t, MAXSTR - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mwindow.c:1645:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1645 |   if (!(pwin->p_fdpat & F_PFRONT))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1646 |     evdeq(&w->w_readev);[0m
      | [0;1;32m                        
[0m[1mwindow.c:1676:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1676 |   if (pwin->p_fdpat & (F_PFRONT << F_PSHIFT * 2 | F_PFRONT << F_PSHIFT))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1677 |     evenq(&pwin->p_readev);[0m
      | [0;1;32m                           
[0m[1mwindow.c:1680:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1680 |   if (r < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1681 |     FreePseudowin(w);[0m
      | [0;1;32m                     
[0m[1mwindow.c:1686:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1686 | FreePseudowin(w)[0m
      | [0;1;32m^
[0m[1mwindow.c:1692:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1692 |   if (fcntl(w->w_ptyfd, F_SETFL, FNBLOCK))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1693 |     Msg(errno, "Warning: FreePseudowin: NBLOCK fcntl failed");[0m
      | [0;1;32m                                                              
[0m[1mwindow.c:1698:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1698 |       if (ioctl(w->w_ptyfd, TIOCPKT, (char *)&flag))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1699 |         Msg(errno, "Warning: FreePseudowin: TIOCPKT win ioctl");[0m
      | [0;1;32m                                                                
[0m[1mwindow.c:1705:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1705 |   if (pwin->p_ptyfd >= 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1706 |     close(pwin->p_ptyfd);[0m
      | [0;1;32m                         
[0m[1mwindow.c:1709:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1709 |   if (w->w_readev.condneg == &pwin->p_inlen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1710 |     w->w_readev.condpos = w->w_readev.condneg = 0;[0m
      | [0;1;32m                                                  
[0m[1mwindow.c:1724:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1724 | ReleaseAutoWritelock(dis, w)[0m
      | [0;1;32m^
[0m[1mwindow.c:1736:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1736 |       for (d = displays; d; d = d->d_next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1737 |         if (( d != dis) && (d->d_fore == w) && (d->d_user == dis->d_user))[0m
 1738 |           break;[0m
      | [0;1;32m                
[0m[1mwindow.c:1737:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1737 |         if (( d != dis) && (d->d_fore == w) && (d->d_user == dis->d_user))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1738 |           break;[0m
      | [0;1;32m                
[0m[1mwindow.c:1754:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1754 | ObtainAutoWritelock(d, w)[0m
      | [0;1;32m^
[0m[1mwindow.c:1778:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1778 | paste_slowev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:1787:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1787 |   if (!flayer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1788 |     pa->pa_pastelen = 0;[0m
      | [0;1;32m                        
[0m[1mwindow.c:1789:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1789 |   if (!pa->pa_pastelen)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1790 |     return;[0m
      | [0;1;32m           
[0m[1mwindow.c:1804:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1804 | muchpending(p, ev)[0m
      | [0;1;32m^
[0m[1mwindow.c:1822:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1822 |       if (D_blocked)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1823 |         continue;[0m
      | [0;1;32m                 
[0m[1mwindow.c:1848:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1848 | win_readev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:1876:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1876 |   if (p->w_layer.l_cvlist && muchpending(p, ev))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1877 |     return;[0m
      | [0;1;32m           
[0m[1mwindow.c:1879:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1879 |   if (!p->w_zdisplay)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1880 | #endif[0m
 1881 |     if (p->w_blocked)[0m
 1882 |       {[0m
 1883 |         ev->condpos = &const_one;[0m
 1884 |         ev->condneg = &p->w_blocked;[0m
 1885 |         return;[0m
 1886 |       }[0m
      | [0;1;32m       
[0m[1mwindow.c:1887:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1887 |   if (ev->condpos)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1888 |     ev->condpos = ev->condneg = 0;[0m
      | [0;1;32m                                  
[0m[1mwindow.c:1900:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1900 |       if (errno == EINTR || errno == EAGAIN)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1901 |         return;[0m
      | [0;1;32m               
[0m[1mwindow.c:1931:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1931 |           if (buf[0] & TIOCPKT_NOSTOP)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1932 |             WNewAutoFlow(p, 0);[0m
      | [0;1;32m                               
[0m[1mwindow.c:1933:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1933 |           if (buf[0] & TIOCPKT_DOSTOP)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1934 |             WNewAutoFlow(p, 1);[0m
      | [0;1;32m                               
[0m[1mwindow.c:1944:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1944 |   if (len == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1945 |     return;[0m
      | [0;1;32m           
[0m[1mwindow.c:1947:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1947 |   if (zmodem_mode && zmodem_parse(p, bp, len))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1948 |     return;[0m
      | [0;1;32m           
[0m[1mwindow.c:1954:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1954 |       bcopy(bp, p->w_pwin->p_inbuf + p->w_pwin->p_inlen, len);[0m
      | [0;1;32m      ^~~~~
[0m[1mwindow.c:1954:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1954 |       bcopy(bp, p->w_pwin->p_inbuf + p->w_pwin->p_inlen, len);[0m
      | [0;1;32m      ^~~~~
[0m[1mwindow.c:1967:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1967 | win_resurrect_zombie_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:1975:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1975 |         if (p->w_deadpid != p->w_pid)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1976 |                 return;[0m
      | [0;1;32m                       
[0m[1mwindow.c:1983:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1983 | win_writeev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:1992:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1992 |       if ((len = write(ev->fd, p->w_inbuf, p->w_inlen)) <= 0)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1993 |         len = p->w_inlen;       /* dead window */[0m
      | [0;1;32m                                                 
[0m[1mwindow.c:1994:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1994 |       if ((p->w_inlen -= len))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1995 |         bcopy(p->w_inbuf + len, p->w_inbuf, p->w_inlen);[0m
      | [0;1;32m                                                        
[0m[1mwindow.c:1995:2: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 1995 |         bcopy(p->w_inbuf + len, p->w_inbuf, p->w_inlen);[0m
      | [0;1;32m        ^~~~~
[0m[1mwindow.c:1995:2: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 1995 |         bcopy(p->w_inbuf + len, p->w_inbuf, p->w_inlen);[0m
      | [0;1;32m        ^~~~~
[0m[1mwindow.c:2002:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2002 |       if (flayer)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2003 |         DoProcess(p, &pa->pa_pasteptr, &pa->pa_pastelen, pa);[0m
      | [0;1;32m                                                             
[0m[1mwindow.c:2014:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2014 | pseu_readev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:2036:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2036 |   if (p->w_layer.l_cvlist && muchpending(p, ev))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2037 |     return;[0m
      | [0;1;32m           
[0m[1mwindow.c:2044:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2044 |   if (ev->condpos)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2045 |     ev->condpos = ev->condneg = 0;[0m
      | [0;1;32m                                  
[0m[1mwindow.c:2056:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2056 |       if (errno == EINTR || errno == EAGAIN)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2057 |         return;[0m
      | [0;1;32m               
[0m[1mwindow.c:2069:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2069 |       bcopy(buf, p->w_inbuf + p->w_inlen, len);[0m
      | [0;1;32m      ^~~~~
[0m[1mwindow.c:2069:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2069 |       bcopy(buf, p->w_inbuf + p->w_inlen, len);[0m
      | [0;1;32m      ^~~~~
[0m[1mwindow.c:2077:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2077 | pseu_writeev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:2086:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2086 |   if (pw->p_inlen == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2087 |     return;[0m
      | [0;1;32m           
[0m[1mwindow.c:2088:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2088 |   if ((len = write(ev->fd, pw->p_inbuf, pw->p_inlen)) <= 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 2089 |     len = pw->p_inlen;          /* dead pseudo */[0m
      | [0;1;32m                                                 
[0m[1mwindow.c:2090:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2090 |   if ((p->w_pwin->p_inlen -= len))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2091 |     bcopy(p->w_pwin->p_inbuf + len, p->w_pwin->p_inbuf, p->w_pwin->p_inlen);[0m
      | [0;1;32m                                                                            
[0m[1mwindow.c:2091:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2091 |     bcopy(p->w_pwin->p_inbuf + len, p->w_pwin->p_inbuf, p->w_pwin->p_inlen);[0m
      | [0;1;32m    ^~~~~
[0m[1mwindow.c:2091:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2091 |     bcopy(p->w_pwin->p_inbuf + len, p->w_pwin->p_inbuf, p->w_pwin->p_inlen);[0m
      | [0;1;32m    ^~~~~
[0m[1mwindow.c:2098:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2098 | win_silenceev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:2107:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2107 |       for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2108 |         if (cv->c_layer->l_bottom == &p->w_layer)[0m
 2109 |           break;[0m
      | [0;1;32m                
[0m[1mwindow.c:2108:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2108 |         if (cv->c_layer->l_bottom == &p->w_layer)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2109 |           break;[0m
      | [0;1;32m                
[0m[1mwindow.c:2110:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2110 |       if (cv)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2111 |         continue;       /* user already sees window */[0m
      | [0;1;32m                                                      
[0m[1mwindow.c:2113:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2113 |       if (!(ACLBYTE(p->w_lio_notify, D_user->u_id) & ACLBIT(D_user->u_id)))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 2114 |         continue;[0m
      | [0;1;32m                 
[0m[1mwindow.c:2123:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2123 | win_destroyev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:2134:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2134 | zmodem_parse(p, bp, len)[0m
      | [0;1;32m^
[0m[1mwindow.c:2145:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2145 |           for (; i < len; i++, b2++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2146 |             if (*b2 == 030)[0m
 2147 |               break;[0m
      | [0;1;32m                    
[0m[1mwindow.c:2146:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2146 |             if (*b2 == 030)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2147 |               break;[0m
      | [0;1;32m                    
[0m[1mwindow.c:2148:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2148 |           if (i == len)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2149 |             break;[0m
      | [0;1;32m                  
[0m[1mwindow.c:2150:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2150 |           if (i > 1 && b2[-1] == '*' && b2[-2] == '*')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2151 |             p->w_zauto = 3;[0m
      | [0;1;32m                           
[0m[1mwindow.c:2154:36: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the string literal [clang-analyzer-security.ArrayBound][0m
 2154 |       if (p->w_zauto > 5 || *b2 == "**\030B00"[p->w_zauto] || (p->w_zauto == 5 && *b2 == '1') || (p->w_zauto == 5 && p->w_zdisplay && *b2 == '8'))[0m
      | [0;1;32m                                   ^
[0m[1mwindow.c:1863:10: [0m[0;1;36mnote: [0mAssuming field 'w_pwin' is null[0m
 1863 |   wtop = p->w_pwin && W_WTOP(p);[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mwindow.c:1863:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1863 |   wtop = p->w_pwin && W_WTOP(p);[0m
      | [0;1;32m                   ^
[0m[1mwindow.c:1864:7: [0m[0;1;36mnote: [0m'wtop' is 0[0m
 1864 |   if (wtop)[0m
      | [0;1;32m      ^~~~
[0m[1mwindow.c:1864:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1864 |   if (wtop)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:1876:7: [0m[0;1;36mnote: [0mAssuming field 'l_cvlist' is null[0m
 1876 |   if (p->w_layer.l_cvlist && muchpending(p, ev))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1mwindow.c:1876:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1876 |   if (p->w_layer.l_cvlist && muchpending(p, ev))[0m
      | [0;1;32m                          ^
[0m[1mwindow.c:1879:7: [0m[0;1;36mnote: [0mAssuming field 'w_zdisplay' is non-null[0m
 1879 |   if (!p->w_zdisplay)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mwindow.c:1879:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1879 |   if (!p->w_zdisplay)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:1887:7: [0m[0;1;36mnote: [0mAssuming field 'condpos' is null[0m
 1887 |   if (ev->condpos)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mwindow.c:1887:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1887 |   if (ev->condpos)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:1890:8: [0m[0;1;36mnote: [0mAssuming 'len' is 0[0m
 1890 |   if ((len = p->w_outlen))[0m
      | [0;1;32m       ^~~
[0m[1mwindow.c:1890:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1890 |   if ((len = p->w_outlen))[0m
      | [0;1;32m  ^
[0m[1mwindow.c:1897:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1897 |   debug1("going to read from window fd %d\n", ev->fd);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mwindow.c:1898:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1898 |   if ((len = read(ev->fd, buf, size)) < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwindow.c:1898:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1898 |   if ((len = read(ev->fd, buf, size)) < 0)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:1914:7: [0m[0;1;36mnote: [0mAssuming 'len' is not equal to 0[0m
 1914 |   if (len == 0)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwindow.c:1914:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1914 |   if (len == 0)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:1924:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1924 |   debug1(" -> %d bytes\n", len);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mwindow.c:1926:7: [0m[0;1;36mnote: [0mAssuming field 'w_type' is not equal to W_TYPE_PTY[0m
 1926 |   if (p->w_type == W_TYPE_PTY)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwindow.c:1926:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1926 |   if (p->w_type == W_TYPE_PTY)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:1944:7: [0m[0;1;36mnote: [0m'len' is not equal to 0[0m
 1944 |   if (len == 0)[0m
      | [0;1;32m      ^~~
[0m[1mwindow.c:1944:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1944 |   if (len == 0)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:1947:7: [0m[0;1;36mnote: [0mAssuming 'zmodem_mode' is not equal to 0[0m
 1947 |   if (zmodem_mode && zmodem_parse(p, bp, len))[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mwindow.c:1947:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwindow.c:1947:22: [0m[0;1;36mnote: [0mCalling 'zmodem_parse'[0m
 1947 |   if (zmodem_mode && zmodem_parse(p, bp, len))[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwindow.c:2141:15: [0m[0;1;36mnote: [0m'i' is < 'len'[0m
 2141 |   for (i = 0; i < len; i++, b2++)[0m
      | [0;1;32m              ^
[0m[1mwindow.c:2141:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2141 |   for (i = 0; i < len; i++, b2++)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:2143:11: [0m[0;1;36mnote: [0mAssuming field 'w_zauto' is not equal to 0[0m
 2143 |       if (p->w_zauto == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mwindow.c:2143:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2143 |       if (p->w_zauto == 0)[0m
      | [0;1;32m      ^
[0m[1mwindow.c:2154:11: [0m[0;1;36mnote: [0mAssuming field 'w_zauto' is > 5[0m
 2154 |       if (p->w_zauto > 5 || *b2 == "**\030B00"[p->w_zauto] || (p->w_zauto == 5 && *b2 == '1') || (p->w_zauto == 5 && p->w_zdisplay && *b2 == '8'))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1mwindow.c:2154:26: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2154 |       if (p->w_zauto > 5 || *b2 == "**\030B00"[p->w_zauto] || (p->w_zauto == 5 && *b2 == '1') || (p->w_zauto == 5 && p->w_zdisplay && *b2 == '8'))[0m
      | [0;1;32m                         ^
[0m[1mwindow.c:2156:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2156 |           if (++p->w_zauto < 6)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~
[0m[1mwindow.c:2156:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 2156 |           if (++p->w_zauto < 6)[0m
      | [0;1;32m          ^
[0m[1mwindow.c:2157:6: [0m[0;1;36mnote: [0m Execution continues on line 2141[0m
 2157 |             continue;[0m
      | [0;1;32m            ^
[0m[1mwindow.c:2141:15: [0m[0;1;36mnote: [0mAssuming 'i' is < 'len'[0m
 2141 |   for (i = 0; i < len; i++, b2++)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mwindow.c:2141:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2141 |   for (i = 0; i < len; i++, b2++)[0m
      | [0;1;32m  ^
[0m[1mwindow.c:2143:14: [0m[0;1;36mnote: [0mField 'w_zauto' is not equal to 0[0m
 2143 |       if (p->w_zauto == 0)[0m
      | [0;1;32m             ^
[0m[1mwindow.c:2143:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2143 |       if (p->w_zauto == 0)[0m
      | [0;1;32m      ^
[0m[1mwindow.c:2154:14: [0m[0;1;36mnote: [0mField 'w_zauto' is <= 5[0m
 2154 |       if (p->w_zauto > 5 || *b2 == "**\030B00"[p->w_zauto] || (p->w_zauto == 5 && *b2 == '1') || (p->w_zauto == 5 && p->w_zdisplay && *b2 == '8'))[0m
      | [0;1;32m             ^
[0m[1mwindow.c:2154:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 2154 |       if (p->w_zauto > 5 || *b2 == "**\030B00"[p->w_zauto] || (p->w_zauto == 5 && *b2 == '1') || (p->w_zauto == 5 && p->w_zdisplay && *b2 == '8'))[0m
      | [0;1;32m          ^
[0m[1mwindow.c:2154:36: [0m[0;1;36mnote: [0mAccess of the string literal at negative byte offset -2147483648[0m
 2154 |       if (p->w_zauto > 5 || *b2 == "**\030B00"[p->w_zauto] || (p->w_zauto == 5 && *b2 == '1') || (p->w_zauto == 5 && p->w_zdisplay && *b2 == '8'))[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwindow.c:2156:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2156 |           if (++p->w_zauto < 6)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2157 |             continue;[0m
      | [0;1;32m                     
[0m[1mwindow.c:2158:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2158 |           if (p->w_zauto == 6)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2159 |             p->w_zauto = 0;[0m
      | [0;1;32m                           
[0m[1mwindow.c:2162:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2162 |               if (i > 6)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2163 |                 WriteString(p, bp, i + 1 - 6);[0m
      | [0;1;32m                                              
[0m[1mwindow.c:2171:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2171 |               for (; i < len; i++, b2++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2172 |                 if (*b2 == se)[0m
 2173 |                   break;[0m
      | [0;1;32m                        
[0m[1mwindow.c:2172:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2172 |                 if (*b2 == se)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2173 |                   break;[0m
      | [0;1;32m                        
[0m[1mwindow.c:2179:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2179 |                   while (len-- > 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2180 |                     AddChar(*bp++);[0m
      | [0;1;32m                                   
[0m[1mwindow.c:2188:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2188 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2189 |         p->w_zauto = *b2 == '*' ? (p->w_zauto == 2 ? 2 : 1) : 0;[0m
      | [0;1;32m                                                                
[0m[1mwindow.c:2191:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2191 |   if (p->w_zauto == 0 && bp[len - 1] == '*')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2192 |     p->w_zauto = len > 1 && bp[len - 2] == '*' ? 2 : 1;[0m
      | [0;1;32m                                                       
[0m[1mwindow.c:2196:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2196 |       while (len-- > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2197 |         AddChar(*bp++);[0m
      | [0;1;32m                       
[0m[1mwindow.c:2204:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2204 | zmodem_fin(buf, len, data)[0m
      | [0;1;32m^
[0m[1mwindow.c:2212:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2212 |   if (len)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2213 |     RcLine(buf, strlen(buf) + 1);[0m
 2214 |   else[0m
      | [0;32m  } 
[0m[1mwindow.c:2223:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2223 | zmodem_found(p, send, bp, len)[0m
      | [0;1;32m^
[0m[1mwindow.c:2235:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2235 |   for (i = 0; i < len ; i++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2236 |     if (bp[i] != 030)[0m
 2237 |       n = 0;[0m
 2238 |     else if (++n > 4)[0m
 2239 |       return;[0m
      | [0;1;32m             
[0m[1mwindow.c:2236:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2236 |     if (bp[i] != 030)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2237 |       n = 0;[0m
 2238 |     else if (++n > 4)[0m
      | [0;32m    } 
[0m[1mwindow.c:2238:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2238 |     else if (++n > 4)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2239 |       return;[0m
      | [0;1;32m             
[0m[1mwindow.c:2246:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2246 |       if (!d || d->d_fore != p)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2247 |         for (d = displays; d; d = d->d_next)[0m
 2248 |           if (d->d_fore == p)[0m
 2249 |             break;[0m
      | [0;1;32m                  
[0m[1mwindow.c:2247:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2247 |         for (d = displays; d; d = d->d_next)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2248 |           if (d->d_fore == p)[0m
 2249 |             break;[0m
      | [0;1;32m                  
[0m[1mwindow.c:2248:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2248 |           if (d->d_fore == p)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2249 |             break;[0m
      | [0;1;32m                  
[0m[1mwindow.c:2250:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2250 |       if (!d && p->w_layer.l_cvlist)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2251 |         d = p->w_layer.l_cvlist->c_display;[0m
      | [0;1;32m                                           
[0m[1mwindow.c:2252:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2252 |       if (!d)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2253 |         d = displays;[0m
      | [0;1;32m                     
[0m[1mwindow.c:2254:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2254 |       if (!d)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2255 |         return;[0m
      | [0;1;32m               
[0m[1mwindow.c:2271:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2271 |       while (len-- > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2272 |         AddChar(*bp++);[0m
      | [0;1;32m                       
[0m[1mwindow.c:2284:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2284 | zmodem_abort(p, d)[0m
      | [0;1;32m^
[0m[1mwindow.c:2294:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2294 |           if (oldflayer == p->w_savelayer)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2295 |             oldflayer = flayer->l_next;[0m
      | [0;1;32m                                       
[0m[1mwindow.c:2332:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2332 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 2333 |     p->w_number = old;[0m
      | [0;1;32m                      
[0m208 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[34/38][240.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmprhonzmor.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/process.c
[1mprocess.c:445:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  445 | parse_input_int(buf, len, val)[0m
      | [0;1;32m^
[0m[1mprocess.c:456:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |           if (buf[i] >= '0' && buf[i] <= '9')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  457 |             x = x * 16 | (buf[i] - '0');[0m
  458 |           else if (buf[i] >= 'a' && buf[i] <= 'f')[0m
      | [0;32m          } 
[0m[1mprocess.c:458:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |           else if (buf[i] >= 'a' && buf[i] <= 'f')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  459 |             x = x * 16 | (buf[i] - ('a' - 10));[0m
  460 |           else if (buf[i] >= 'A' && buf[i] <= 'F')[0m
      | [0;32m          } 
[0m[1mprocess.c:460:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |           else if (buf[i] >= 'A' && buf[i] <= 'F')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  461 |             x = x * 16 | (buf[i] - ('A' - 10));[0m
  462 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:462:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  463 |             return 0;[0m
      | [0;1;32m                     
[0m[1mprocess.c:471:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |           if (buf[i] < '0' || buf[i] > '7')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  472 |             return 0;[0m
      | [0;1;32m                     
[0m[1mprocess.c:476:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  477 |     return 0;[0m
      | [0;1;32m             
[0m[1mprocess.c:516:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |       if (i + KMAPDEFSTART < T_CAPS)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  517 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:518:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |       if (i + KMAPDEFSTART >= T_CAPS + KMAP_KEYS)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  519 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:520:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |       if (kmapdef[i] == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  521 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:527:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |       if (i + KMAPADEFSTART < T_CURSOR)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  528 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:529:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |       if (i + KMAPADEFSTART >= T_CURSOR + KMAP_AKEYS)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  530 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:531:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |       if (kmapadef[i] == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  532 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:538:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |       if (i + KMAPMDEFSTART < T_CAPS)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  539 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:540:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |       if (i + KMAPMDEFSTART >= T_CAPS + KMAP_KEYS)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  541 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:542:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |       if (kmapmdef[i] == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  543 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:604:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  604 |       sprintf(arg1, "%d", i);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:604:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  604 |       sprintf(arg1, "%d", i);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:675:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  675 | FindKtab(class, create)[0m
      | [0;1;32m^
[0m[1mprocess.c:682:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |   if (class == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  683 |     return ktab;[0m
      | [0;1;32m                
[0m[1mprocess.c:684:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |   for (kpp = &kclasses; (kp = *kpp) != 0; kpp = &kp->next)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  685 |     if (!strcmp(kp->name, class))[0m
  686 |       break;[0m
      | [0;1;32m            
[0m[1mprocess.c:685:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  685 |     if (!strcmp(kp->name, class))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  686 |       break;[0m
      | [0;1;32m            
[0m[1mprocess.c:689:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |       if (!create)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  690 |         return 0;[0m
      | [0;1;32m                 
[0m[1mprocess.c:717:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  717 | ClearAction(act)[0m
      | [0;1;32m^
[0m[1mprocess.c:722:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  722 |   if (act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  723 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:725:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |   if (act->args == noargs)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  726 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:727:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  727 |   for (p = act->args; *p; p++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  728 |     free(*p);[0m
      | [0;1;32m             
[0m[1mprocess.c:747:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  747 | ProcessInput(ibuf, ilen)[0m
      | [0;1;32m^
[0m[1mprocess.c:757:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  757 |   if (display == 0 || ilen == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  758 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:759:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |   if (D_seql)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  760 |     evdeq(&D_mapev);[0m
      | [0;1;32m                    
[0m[1mprocess.c:789:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |               if (l == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  790 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:798:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |                   if (StuffKey(i))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  799 |                     ProcessInput2((char *)q + 3, q[2]);[0m
      | [0;1;32m                                                       
[0m[1mprocess.c:800:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |                   if (display == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  801 |                     return;[0m
      | [0;1;32m                           
[0m[1mprocess.c:805:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  806 |                 D_dontmap = 1;[0m
      | [0;1;32m                              
[0m[1mprocess.c:809:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |               if (display == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  810 |                 return;[0m
      | [0;1;32m                       
[0m[1mprocess.c:819:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |               if (slen)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  820 |                 ProcessInput2(ibuf, slen);[0m
      | [0;1;32m                                          
[0m[1mprocess.c:821:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  821 |               if (display == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  822 |                 return;[0m
      | [0;1;32m                       
[0m[1mprocess.c:835:47: [0m[0;1;35mwarning: [0m[1mThe bcmp() function is obsoleted by memcmp() [clang-analyzer-security.insecureAPI.bcmp][0m
  835 |                   if (D_kmaps + D_nseqs > q && q[2] > l && !bcmp(D_seqp - l, q + 3, l))[0m
      | [0;1;32m                                                            ^~~~
[0m[1mprocess.c:835:47: [0m[0;1;36mnote: [0mThe bcmp() function is obsoleted by memcmp()[0m
  835 |                   if (D_kmaps + D_nseqs > q && q[2] > l && !bcmp(D_seqp - l, q + 3, l))[0m
      | [0;1;32m                                                            ^~~~
[0m[1mprocess.c:851:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  851 |               if (StuffKey(i))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  852 |                 ProcessInput2(p, l);[0m
      | [0;1;32m                                    
[0m[1mprocess.c:853:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  853 |               if (display == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  854 |                 return;[0m
      | [0;1;32m                       
[0m[1mprocess.c:865:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  865 |           if (s[-l-3] & KMAP_NOTIMEOUT >> 8)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  866 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:888:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  888 | ProcessInput2(ibuf, ilen)[0m
      | [0;1;32m^
[0m[1mprocess.c:908:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  908 |               if ((unsigned char)*s++ == D_user->u_Esc)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  909 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:913:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  913 |           if (slen)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  914 |             DoProcess(fore, &ibuf, &slen, 0);[0m
      | [0;1;32m                                             
[0m[1mprocess.c:921:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |       if (ilen <= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  922 |         return;[0m
      | [0;1;32m               
[0m[1mprocess.c:937:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  937 |       if (ch == D_user->u_Esc) [0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  938 |         ch = DefaultEsc;[0m
  939 |       else if (ch == D_user->u_MetaEsc) [0m
      | [0;32m      } 
[0m[1mprocess.c:939:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |       else if (ch == D_user->u_MetaEsc) [0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  940 |         ch = DefaultMetaEsc;[0m
      | [0;1;32m                            
[0m[1mprocess.c:942:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  942 |       if (ch >= 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  943 |         DoAction(&ktabp[ch], ch);[0m
      | [0;1;32m                                 
[0m[1mprocess.c:950:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  950 | DoProcess(p, bufp, lenp, pa)[0m
      | [0;1;32m^
[0m[1mprocess.c:985:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  985 |       if (pa && !pa->pa_pastelayer)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  986 |         break;          /* flush rest of paste */[0m
      | [0;1;32m                                                 
[0m[1mprocess.c:1005:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1005 |   if (pa && pa->pa_pastelen == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1006 |     FreePaster(pa);[0m
      | [0;1;32m                   
[0m[1mprocess.c:1011:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1011 | FindCommnr(str)[0m
      | [0;1;32m^
[0m[1mprocess.c:1019:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1019 |       if (x > 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1020 |         l = m + 1;[0m
 1021 |       else if (x < 0)[0m
      | [0;32m      } 
[0m[1mprocess.c:1021:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |       else if (x < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1022 |         r = m - 1;[0m
 1023 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:1023:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1024 |         return m;[0m
      | [0;1;32m                 
[0m[1mprocess.c:1030:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1030 | CheckArgNum(nr, args)[0m
      | [0;1;32m^
[0m[1mprocess.c:1045:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1046 |     ;[0m
      | [0;1;32m     
[0m[1mprocess.c:1063:36: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of 'argss' [clang-analyzer-security.ArrayBound][0m
 1063 |               argss[n + 1], argss[n + 2], argss[n + 3], "");[0m
      | [0;1;32m                                          ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mCalling 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1047[0m
[1mprocess.c:1047:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1047:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1056:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1056 |   else if ((comms[nr].flags & ARGS_PLUS1) && [0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1056:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1056 |   else if ((comms[nr].flags & ARGS_PLUS1) && [0m
      | [0;1;32m           ^
[0m[1mprocess.c:1057:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1057 |            (comms[nr].flags & ARGS_PLUS2) &&[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1056:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1056 |   else if ((comms[nr].flags & ARGS_PLUS1) && [0m
      | [0;1;32m           ^
[0m[1mprocess.c:1058:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1058 |            (comms[nr].flags & ARGS_PLUS3))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1056:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1056 |   else if ((comms[nr].flags & ARGS_PLUS1) && [0m
      | [0;1;32m       ^
[0m[1mprocess.c:1060:11: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to 'n'[0m
 1060 |       if (i != n && i != n + 1 && i != n + 2 && i != n + 3)[0m
      | [0;1;32m          ^~~~~~
[0m[1mprocess.c:1060:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mprocess.c:1060:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1060 |       if (i != n && i != n + 1 && i != n + 2 && i != n + 3)[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mprocess.c:1060:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1060 |       if (i != n && i != n + 1 && i != n + 2 && i != n + 3)[0m
      | [0;1;32m          ^
[0m[1mprocess.c:1060:35: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1060 |       if (i != n && i != n + 1 && i != n + 2 && i != n + 3)[0m
      | [0;1;32m                                  ^~~~~~~~~~
[0m[1mprocess.c:1060:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1060 |       if (i != n && i != n + 1 && i != n + 2 && i != n + 3)[0m
      | [0;1;32m          ^
[0m[1mprocess.c:1060:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1060 |       if (i != n && i != n + 1 && i != n + 2 && i != n + 3)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1063:36: [0m[0;1;36mnote: [0mAccess of 'argss' at index 6, while it holds only 6 'char *' elements[0m
 1063 |               argss[n + 1], argss[n + 2], argss[n + 3], "");[0m
      | [0;1;32m                                          ^~~~~~~~~~~~
[0m[1mprocess.c:1133:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1133 | StuffFin(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:1138:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |   if (!flayer)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1139 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:1140:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1140 |   while(len)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1141 |     LayProcess(&buf, &len);[0m
      | [0;1;32m                           
[0m[1mprocess.c:1156:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1156 | DoAction(act, key)[0m
      | [0;1;32m^
[0m[1mprocess.c:1208:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1209 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:1227:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1227 |       if (!*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:1227:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1227 |       if (!*args)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1228 |         InputSelect();[0m
 1229 |       else if (args[0][0] == '-' && !args[0][1])[0m
      | [0;32m      } 
[0m[1mprocess.c:1247:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1247 |       else if (ParseWinNum(act, &n) == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1248 |         SwitchWindow(n);[0m
 1249 |       else if (queryflag >= 0)[0m
      | [0;32m      } 
[0m[1mprocess.c:1249:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1249 |       else if (queryflag >= 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1250 |         queryflag = -1; /* ParseWinNum already prints out an appropriate error message. */[0m
      | [0;1;32m                                                                                          
[0m[1mprocess.c:1254:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1254 |       if (ParseOnOff(act, &defautonuke) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1255 |         OutputMsg(0, "Default autonuke turned %s", defautonuke ? "on" : "off");[0m
 1256 |       if (display && *rc_name)[0m
 1257 |         D_auto_nuke = defautonuke;[0m
 1258 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1254:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1254 |       if (ParseOnOff(act, &defautonuke) == 0 && msgok)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1255 |         OutputMsg(0, "Default autonuke turned %s", defautonuke ? "on" : "off");[0m
      | [0;1;32m                                                                               
[0m[1mprocess.c:1256:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1256 |       if (display && *rc_name)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1257 |         D_auto_nuke = defautonuke;[0m
      | [0;1;32m                                  
[0m[1mprocess.c:1260:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1260 |       if (ParseOnOff(act, &D_auto_nuke) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1261 |         OutputMsg(0, "Autonuke turned %s", D_auto_nuke ? "on" : "off");[0m
 1262 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1260:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1260 |       if (ParseOnOff(act, &D_auto_nuke) == 0 && msgok)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1261 |         OutputMsg(0, "Autonuke turned %s", D_auto_nuke ? "on" : "off");[0m
      | [0;1;32m                                                                       
[0m[1mprocess.c:1265:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1265 |       if (ParseNum(act, &defobuflimit) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1266 |         OutputMsg(0, "Default limit set to %d", defobuflimit);[0m
 1267 |       if (display && *rc_name)[0m
 1268 |         {[0m
 1269 |           D_obufmax = defobuflimit;[0m
 1270 |           D_obuflenmax = D_obuflen - D_obufmax;[0m
 1271 |         }[0m
 1272 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1265:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1265 |       if (ParseNum(act, &defobuflimit) == 0 && msgok)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1266 |         OutputMsg(0, "Default limit set to %d", defobuflimit);[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:1274:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1274 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1275 |         OutputMsg(0, "Limit is %d, current buffer size is %d", D_obufmax, D_obuflen);[0m
 1276 |       else if (ParseNum(act, &D_obufmax) == 0 && msgok)[0m
 1277 |         OutputMsg(0, "Limit set to %d", D_obufmax);[0m
 1278 |       D_obuflenmax = D_obuflen - D_obufmax;[0m
 1279 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1274:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1274 |       if (*args == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1275 |         OutputMsg(0, "Limit is %d, current buffer size is %d", D_obufmax, D_obuflen);[0m
 1276 |       else if (ParseNum(act, &D_obufmax) == 0 && msgok)[0m
      | [0;32m      } 
[0m[1mprocess.c:1275:57: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_obufmax' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 1275 |         OutputMsg(0, "Limit is %d, current buffer size is %d", D_obufmax, D_obuflen);[0m
      | [0;1;32m                                                               ^
[0m[1m./display.h:268:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_obufmax'[0m
  268 | #define D_obufmax       DISPLAY(d_obufmax)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 120:'  at line 1273[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1274:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1274 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1275:2: [0m[0;1;36mnote: [0mAssuming field 'quiet' is 0[0m
 1275 |         OutputMsg(0, "Limit is %d, current buffer size is %d", D_obufmax, D_obuflen);[0m
      | [0;1;32m        ^
[0m[1mprocess.c:1152:20: [0m[0;1;36mnote: [0mexpanded from macro 'OutputMsg'[0m
 1152 | #define OutputMsg       (!act->quiet ? Msg : queryflag >= 0 ? QueryMsg : Dummy)[0m
      | [0;1;32m                         ^~~~~~~~~~~
[0m[1mprocess.c:1275:2: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1275 |         OutputMsg(0, "Limit is %d, current buffer size is %d", D_obufmax, D_obuflen);[0m
      | [0;1;32m        ^
[0m[1mprocess.c:1152:20: [0m[0;1;36mnote: [0mexpanded from macro 'OutputMsg'[0m
 1152 | #define OutputMsg       (!act->quiet ? Msg : queryflag >= 0 ? QueryMsg : Dummy)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1275:57: [0m[0;1;36mnote: [0mAccess to field 'd_obufmax' results in a dereference of a null pointer (loaded from variable 'display')[0m
 1275 |         OutputMsg(0, "Limit is %d, current buffer size is %d", D_obufmax, D_obuflen);[0m
      | [0;1;32m                                                               ^
[0m[1m./display.h:268:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_obufmax'[0m
  268 | #define D_obufmax       DISPLAY(d_obufmax)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1276:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1276 |       else if (ParseNum(act, &D_obufmax) == 0 && msgok)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1277 |         OutputMsg(0, "Limit set to %d", D_obufmax);[0m
      | [0;1;32m                                                   
[0m[1mprocess.c:1281:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1281 |       WriteFile(user, (char *)0, DUMP_TERMCAP);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1282 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1284:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1284 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:1295:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1295 |             else if (!strcmp(*args, "--") && args[1])[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1296 |               file = args[1];[0m
 1297 |             else[0m
      | [0;32m            } 
[0m[1mprocess.c:1297:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1297 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1298 |               file = args[0];[0m
      | [0;1;32m                             
[0m[1mprocess.c:1310:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1310 |       (void)ParseOnOff(act, &nwin_default.Lflag);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1311 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1313:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1313 |       n = fore->w_log ? 1 : 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1314 |       ParseSwitch(act, &n);[0m
 1315 |       LogToggle(n);[0m
 1316 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1319:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1319 |       Detach(D_STOP);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1320 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1323:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1323 |       if (MoreWindows())[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1324 |         SwitchWindow(NextWindow());[0m
 1325 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1323:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1323 |       if (MoreWindows())[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1324 |         SwitchWindow(NextWindow());[0m
      | [0;1;32m                                   
[0m[1mprocess.c:1327:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1327 |       if (MoreWindows())[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1328 |         SwitchWindow(PreviousWindow());[0m
 1329 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1327:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1327 |       if (MoreWindows())[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1328 |         SwitchWindow(PreviousWindow());[0m
      | [0;1;32m                                       
[0m[1mprocess.c:1355:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1355 |         if (name)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1356 |           free(name);[0m
      | [0;1;32m                     
[0m[1mprocess.c:1360:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1360 |       if (key >= 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1361 |         {[0m
 1362 |           Input("Really quit and kill all your windows [y/n]", 1, INP_RAW, confirm_fn, NULL, RC_QUIT);[0m
 1363 |           break;[0m
 1364 |         }[0m
 1365 |       Finit(0);[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mprocess.c:1369:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1369 |       if (*args && !strcmp(*args, "-h"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1370 |         Hangup();[0m
 1371 |       else[0m
 1372 |         Detach(D_DETACH);[0m
 1373 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1369:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1369 |       if (*args && !strcmp(*args, "-h"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1370 |         Hangup();[0m
 1371 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:1371:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1371 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1372 |         Detach(D_DETACH);[0m
      | [0;1;32m                         
[0m[1mprocess.c:1376:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1376 |       if (key >= 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1377 |         {[0m
 1378 |           static char buf[2];[0m
 1379 | [0m
 1380 |           buf[0] = key;[0m
 1381 |           Input(buf, 1, INP_RAW, pow_detach_fn, NULL, 0);[0m
 1382 |         }[0m
 1383 |       else[0m
 1384 |         Detach(D_POWER); /* detach and kill Attacher's parent */[0m
 1385 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1383:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1383 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1384 |         Detach(D_POWER); /* detach and kill Attacher's parent */[0m
      | [0;1;32m                                                                
[0m[1mprocess.c:1412:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1412 |       if (*args == 0 || strcmp("off", *args))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1413 |         OutputMsg(0, "Sorry, screen was compiled without -DDEBUG option.");[0m
 1414 | #endif[0m
 1415 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1412:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1412 |       if (*args == 0 || strcmp("off", *args))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1413 |         OutputMsg(0, "Sorry, screen was compiled without -DDEBUG option.");[0m
      | [0;1;32m                                                                           
[0m[1mprocess.c:1418:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1418 |       if (*args && !strcmp(*args, "sendcmd"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:1425:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1425 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1426 |             OutputMsg(0, "zmodem sendcmd: %s", zmodem_sendcmd);[0m
      | [0;1;32m                                                               
[0m[1mprocess.c:1436:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1436 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1437 |             OutputMsg(0, "zmodem recvcmd: %s", zmodem_recvcmd);[0m
      | [0;1;32m                                                               
[0m[1mprocess.c:1442:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1442 |           for (i = 0; i < 4; i++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1443 |             if (!strcmp(zmodes[i], *args))[0m
 1444 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:1443:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1443 |             if (!strcmp(zmodes[i], *args))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1444 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:1445:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1445 |           if (i == 4 && !strcmp(*args, "on"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1446 |             i = 1;[0m
      | [0;1;32m                  
[0m[1mprocess.c:1454:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1454 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1455 |         OutputMsg(0, "zmodem mode is %s", zmodes[zmodem_mode]);[0m
      | [0;1;32m                                                               
[0m[1mprocess.c:1462:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1462 |         for (i = 0; i < sizeof(ktab)/sizeof(*ktab); i++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1463 |           ClearAction(&ktab[i]);[0m
      | [0;1;32m                                
[0m[1mprocess.c:1468:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1468 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:1488:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1488 |           } else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1489 |             ZombieKey_onerror = 0;[0m
      | [0;1;32m                                  
[0m[1mprocess.c:1496:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1496 |       s = D_user->u_name;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1497 | #else[0m
 1498 |       s = D_usertty;[0m
 1499 | #endif[0m
 1500 |         {[0m
 1501 |           struct display *olddisplay = display;[0m
 1502 |           display = 0;          /* no display will cause a broadcast */[0m
 1503 |           OutputMsg(0, "%s: %s", s, *args);[0m
 1504 |           display = olddisplay;[0m
 1505 |         }[0m
 1506 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1496:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_user' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 1496 |       s = D_user->u_name;[0m
      | [0;1;32m          ^
[0m[1m./display.h:199:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_user'[0m
  199 | #define D_user          DISPLAY(d_user)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 178:'  at line 1494[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1496:11: [0m[0;1;36mnote: [0mAccess to field 'd_user' results in a dereference of a null pointer (loaded from variable 'display')[0m
 1496 |       s = D_user->u_name;[0m
      | [0;1;32m          ^
[0m[1m./display.h:199:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_user'[0m
  199 | #define D_user          DISPLAY(d_user)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1509:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1509 |       if (!user)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:1509:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1509 |       if (!user)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1510 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:1519:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1519 |       if (n) n--;[0m
      | [0;1;32m            ^    
[0m      | [0;32m             {
[0m[1mprocess.c:1532:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1532 |             if (!n)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1533 |               u = user;[0m
 1534 |             else[0m
      | [0;32m            } 
[0m[1mprocess.c:1539:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1539 |                     if (!strncmp(*args, u->u_name, n))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1540 |                       break;[0m
      | [0;1;32m                            
[0m[1mprocess.c:1553:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1553 |                 if (D_forecv == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1554 |                   continue;[0m
      | [0;1;32m                           
[0m[1mprocess.c:1557:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1557 |                 if (D_user != u)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1558 |                   continue;[0m
      | [0;1;32m                           
[0m[1mprocess.c:1561:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1561 |                 if (display)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1562 |                   OutputMsg(0, "command from %s: %s %s", [0m
 1563 |                       s, args[1], args[2] ? args[2] : "");[0m
      | [0;1;32m                                                          
[0m[1mprocess.c:1578:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1578 |                 if (D_forecv == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1579 |                   continue;[0m
      | [0;1;32m                           
[0m[1mprocess.c:1586:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1586 |                      strncmp(args[0], D_usertty + 8, n)))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1587 |                   continue;[0m
      | [0;1;32m                           
[0m[1mprocess.c:1590:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1590 |                 if (display)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1591 |                   OutputMsg(0, "command from %s: %s %s", [0m
 1592 |                       s, args[1], args[2] ? args[2] : "");[0m
      | [0;1;32m                                                          
[0m[1mprocess.c:1600:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1600 |           n--;[0m
      | [0;1;32m          ^  
[0m      | [0;32m          {  ;} 
[0m[1mprocess.c:1617:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1617 |                     if (strncmp(args[0], fore->w_title, n))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1618 |                       continue;[0m
      | [0;1;32m                               
[0m[1mprocess.c:1629:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1629 |                     if (fore->w_layer.l_cvlist)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1630 |                       display = fore->w_layer.l_cvlist->c_display;[0m
      | [0;1;32m                                                                  
[0m[1mprocess.c:1642:9: [0m[0;1;35mwarning: [0m[1mThe left operand of '<' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
 1642 |                 if (i < 0)[0m
      | [0;1;32m                    ~ ^
[0m[1mprocess.c:1164:13: [0m[0;1;36mnote: [0m'i' declared without an initial value[0m
 1164 |   int argc, i, n, msgok;[0m
      | [0;1;32m            ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mCalling 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1047[0m
[1mprocess.c:1047:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1047:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1049:11: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'n'[0m
 1049 |       if (i < n)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1049:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1049 |       if (i < n)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1129:3: [0m[0;1;36mnote: [0mReturning without writing to '**args', which participates in a condition later[0m
 1129 |   return i;[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mReturning from 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 9:'  at line 1507[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1509:11: [0m[0;1;36mnote: [0mAssuming 'user' is non-null[0m
 1509 |       if (!user)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1509:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1509 |       if (!user)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1519:11: [0m[0;1;36mnote: [0mAssuming 'n' is 0[0m
 1519 |       if (n) n--;[0m
      | [0;1;32m          ^
[0m[1mprocess.c:1519:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1519 |       if (n) n--;[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1525:7: [0m[0;1;36mnote: [0mControl jumps to the 'default' case at line 1602[0m
 1525 |       switch (args[0][n])[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1610:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1610 |             if (!*args[0] || (i = WindowByNumber(args[0])) < 0)[0m
      | [0;1;32m                ^~~~~~~~~
[0m[1mprocess.c:1610:20: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1610 |             if (!*args[0] || (i = WindowByNumber(args[0])) < 0)[0m
      | [0;1;32m                          ^
[0m[1mprocess.c:1614:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1640[0m
 1614 |                 for (fore = windows; fore; fore = nw)[0m
      | [0;1;32m                ^
[0m[1mprocess.c:1642:9: [0m[0;1;36mnote: [0mThe left operand of '<' is a garbage value[0m
 1642 |                 if (i < 0)[0m
      | [0;1;32m                    ~ ^
[0m[1mprocess.c:1642:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1642 |                 if (i < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1643 |                   OutputMsg(0, "%s: at '%s': no such window.\n", rc_name, args[0]);[0m
      | [0;1;32m                                                                                   
[0m[1mprocess.c:1650:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1650 |                 if (fore->w_layer.l_cvlist)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1651 |                   display = fore->w_layer.l_cvlist->c_display;[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:1663:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1663 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1664 |               OutputMsg(0, "%s: at [identifier][%%|*|#] command [args]", rc_name);[0m
      | [0;1;32m                                                                                  
[0m[1mprocess.c:1677:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1677 |       i = fore ? fore->w_encoding : display ? display->d_encoding : 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:1720:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1720 |               if (pp->buf)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1721 |                 free(pp->buf);[0m
      | [0;1;32m                              
[0m[1mprocess.c:1729:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1729 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1730 |         /*[0m
 1731 |          * with one argument we copy the copybuffer into a specified register[0m
 1732 |          * This could be done with RC_PASTE too, but is here to be consistent[0m
 1733 |          * with the zero argument call.[0m
 1734 |          */[0m
 1735 |         copy_reg_fn(&ch, 0, NULL);[0m
      | [0;1;32m                                  
[0m[1mprocess.c:1740:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1740 |       i = fore ? fore->w_encoding : display ? display->d_encoding : 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:1767:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1767 |           if (user->u_plop.buf != NULL)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1768 |             UserFreeCopyBuffer(user);[0m
      | [0;1;32m                                     
[0m[1mprocess.c:1783:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1783 |           if (plp->buf)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1784 |             free(plp->buf);[0m
      | [0;1;32m                           
[0m[1mprocess.c:1793:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1793 |       if ((s = *args) == NULL)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1794 |         {[0m
 1795 |           Input("Process register:", 1, INP_RAW, process_fn, NULL, 0);[0m
 1796 |           break;[0m
 1797 |         }[0m
 1798 |       if (*argl != 1)[0m
 1799 |         {[0m
 1800 |           OutputMsg(0, "%s: process: character, ^x, or (octal) \\032 expected.", rc_name);[0m
 1801 |           break;[0m
 1802 |         }[0m
 1803 |       ch = args[0][0];[0m
 1804 |       process_fn(&ch, 0, NULL);[0m
 1805 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1807:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1807 |       s = *args;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:1822:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1822 |           for (i = T_CAPS; i < T_OCAPS; i++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1823 |             if (strcmp(term[i].tcname, s) == 0)[0m
 1824 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:1823:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1823 |             if (strcmp(term[i].tcname, s) == 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1824 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:1831:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1831 |           if (StuffKey(i - T_CAPS) == 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1832 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:1835:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1835 |           if (s == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1836 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:1839:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1839 |       while(n)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1840 |         LayProcess(&s, &n);[0m
      | [0;1;32m                           
[0m[1mprocess.c:1843:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1843 |       Activate(-1);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1844 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1846:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1846 |                         if (args[0]) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1847 |                                 ShowWindowsX(args[0]);[0m
 1848 |                                 break;[0m
 1849 |                         }[0m
 1850 |       ShowWindows(-1);[0m
 1851 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1853:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1853 |       OutputMsg(0, "screen %s", version);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1854 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1152:19: [0m[0;1;36mnote: [0mexpanded from macro 'OutputMsg'[0m
 1152 | #define OutputMsg       (!act->quiet ? Msg : queryflag >= 0 ? QueryMsg : Dummy)[0m
      | [0;1;32m                        ^
[0m[1mprocess.c:1856:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1856 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1857 |         {[0m
 1858 |           timestring = SaveStr(*args);[0m
 1859 |           break;[0m
 1860 |         }[0m
 1861 |       OutputMsg(0, "%s", MakeWinMsg(timestring, fore, '%'));[0m
 1862 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1864:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1864 |       ShowInfo();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1865 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1867:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1867 |       ShowDInfo();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1868 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1880:8: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_ESCseen' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 1880 |           if (D_ESCseen != ktab || ktabp != ktab)[0m
      | [0;1;32m              ^
[0m[1m./display.h:258:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_ESCseen'[0m
  258 | #define D_ESCseen       DISPLAY(d_ESCseen)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 35:'  at line 1869[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1872:8: [0m[0;1;36mnote: [0m'argc' is not equal to 2[0m
 1872 |           if (argc == 2 && !strcmp(*args, "-c"))[0m
      | [0;1;32m              ^~~~
[0m[1mprocess.c:1872:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1872 |           if (argc == 2 && !strcmp(*args, "-c"))[0m
      | [0;1;32m                        ^
[0m[1mprocess.c:1880:8: [0m[0;1;36mnote: [0mAccess to field 'd_ESCseen' results in a dereference of a null pointer (loaded from variable 'display')[0m
 1880 |           if (D_ESCseen != ktab || ktabp != ktab)[0m
      | [0;1;32m              ^
[0m[1m./display.h:258:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_ESCseen'[0m
  258 | #define D_ESCseen       DISPLAY(d_ESCseen)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1897:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1897 |       if (MoreWindows())[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1898 |         SwitchWindow(display && D_other ? D_other->w_number : NextWindow());[0m
 1899 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1897:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1897 |       if (MoreWindows())[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1898 |         SwitchWindow(display && D_other ? D_other->w_number : NextWindow());[0m
      | [0;1;32m                                                                            
[0m[1mprocess.c:1901:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1901 |       if (user->u_Esc == -1)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1902 |         break;[0m
 1903 |       ch = user->u_Esc;[0m
 1904 |       s = &ch;[0m
 1905 |       n = 1;[0m
 1906 |       LayProcess(&s, &n);[0m
 1907 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1901:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1901 |       if (user->u_Esc == -1)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1902 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:1909:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1909 |       ch = Ctrl('q');[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1910 |       s = &ch;[0m
 1911 |       n = 1;[0m
 1912 |       LayProcess(&s, &n);[0m
 1913 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1915:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1915 |       ch = Ctrl('s');[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1916 |       s = &ch;[0m
 1917 |       n = 1;[0m
 1918 |       LayProcess(&s, &n);[0m
 1919 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1928:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1928 |               if (ParseNum(act, &n))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1929 |                 for (n = 0; n < (int)(sizeof(types)/sizeof(*types)); n++)[0m
 1930 |                   {[0m
 1931 |                     for (i = 0; i < 4; i++)[0m
 1932 |                       {[0m
 1933 |                         ch = args[0][i];[0m
 1934 |                         if (ch >= 'a' && ch <= 'z')[0m
 1935 |                           ch -= 'a' - 'A';[0m
 1936 |                         if (ch != types[n][i] && (ch + ('a' - 'A')) != types[n][i])[0m
 1937 |                           break;[0m
 1938 |                       }[0m
 1939 |                     if (i == 4)[0m
 1940 |                       break;[0m
 1941 |                   }[0m
      | [0;1;32m                   
[0m[1mprocess.c:1934:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1934 |                         if (ch >= 'a' && ch <= 'z')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1935 |                           ch -= 'a' - 'A';[0m
      | [0;1;32m                                          
[0m[1mprocess.c:1936:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1936 |                         if (ch != types[n][i] && (ch + ('a' - 'A')) != types[n][i])[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 1937 |                           break;[0m
      | [0;1;32m                                
[0m[1mprocess.c:1939:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1939 |                     if (i == 4)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1940 |                       break;[0m
      | [0;1;32m                            
[0m[1mprocess.c:1942:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1942 |               if (n < 0 || n >= (int)(sizeof(types)/sizeof(*types)))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1943 |                 OutputMsg(0, "%s invalid, chose one of %s, %s or %s", *args, types[0], types[1], types[2]);[0m
 1944 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:1950:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1950 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1951 |             OutputMsg(0, "breaktype is (%d) %s", breaktype, types[breaktype]);[0m
      | [0;1;32m                                                                              
[0m[1mprocess.c:1953:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1953 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprocess.c:1957:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1957 |       if (*args && ParseNum(act, &n))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1958 |         break;[0m
 1959 |       SendBreak(fore, n, nr == RC_POW_BREAK);[0m
 1960 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1957:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1957 |       if (*args && ParseNum(act, &n))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1958 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:1963:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1963 |       Detach(D_LOCK);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1964 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:1973:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1973 |         if (*args && !strcmp(*args, "-w"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1974 |           what = 1;[0m
 1975 |         else if (*args && !strcmp(*args, "-d"))[0m
      | [0;32m        } 
[0m[1mprocess.c:1975:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1975 |         else if (*args && !strcmp(*args, "-d"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1976 |           what = 2;[0m
      | [0;1;32m                   
[0m[1mprocess.c:1977:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1977 |         if (what)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1978 |           args++;[0m
      | [0;1;32m                 
[0m[1mprocess.c:1979:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1979 |         if (what == 0 && flayer && !display)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1980 |           what = 1;[0m
      | [0;1;32m                   
[0m[1mprocess.c:2012:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2012 |                 if (h == H0height)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2013 |                   h = H1height;[0m
 2014 |                 else if (h == H1height)[0m
      | [0;32m                } 
[0m[1mprocess.c:2014:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2014 |                 else if (h == H1height)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2015 |                   h = H0height;[0m
 2016 |                 else if (h > (H0height + H1height) / 2)[0m
      | [0;32m                } 
[0m[1mprocess.c:2016:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2016 |                 else if (h > (H0height + H1height) / 2)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2017 |                   h = H0height;[0m
 2018 |                 else[0m
      | [0;32m                } 
[0m[1mprocess.c:2018:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2018 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2019 |                   h = H1height;[0m
      | [0;1;32m                               
[0m[1mprocess.c:2024:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2024 |                 if (args[1])[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2025 |                   w = atoi(args[1]);[0m
      | [0;1;32m                                    
[0m[1mprocess.c:2032:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2032 |                 if (w == Z0width)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2033 |                   w = Z1width;[0m
 2034 |                 else if (w == Z1width)[0m
      | [0;32m                } 
[0m[1mprocess.c:2034:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2034 |                 else if (w == Z1width)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2035 |                   w = Z0width;[0m
 2036 |                 else if (w > (Z0width + Z1width) / 2)[0m
      | [0;32m                } 
[0m[1mprocess.c:2036:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2036 |                 else if (w > (Z0width + Z1width) / 2)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2037 |                   w = Z0width;[0m
 2038 |                 else[0m
      | [0;32m                } 
[0m[1mprocess.c:2038:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2038 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2039 |                   w = Z1width;[0m
      | [0;1;32m                              
[0m[1mprocess.c:2044:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2044 |                 if (args[1])[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2045 |                   h = atoi(args[1]);[0m
      | [0;1;32m                                    
[0m[1mprocess.c:2065:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2065 |             if (flayer->l_width == w && flayer->l_height == h)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2066 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:2070:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2070 |         if (D_width == w && D_height == h)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2071 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:2085:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2085 |             if (h == D_height)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2086 |               OutputMsg(0, "Your termcap does not specify how to change the terminal's width to %d.", w);[0m
 2087 |             else if (w == D_width)[0m
      | [0;32m            } 
[0m[1mprocess.c:2087:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2087 |             else if (w == D_width)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2088 |               OutputMsg(0, "Your termcap does not specify how to change the terminal's height to %d.", h);[0m
 2089 |             else[0m
      | [0;32m            } 
[0m[1mprocess.c:2089:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2089 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2090 |               OutputMsg(0, "Your termcap does not specify how to change the terminal's resolution to %dx%d.", w, h);[0m
      | [0;1;32m                                                                                                                    
[0m[1mprocess.c:2093:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2093 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprocess.c:2095:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2095 |       (void)ParseOnOff(act, &nwin_default.dynamicaka);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2096 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2098:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2098 |       (void)ParseOnOff(act, &fore->w_dynamicaka);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2099 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2101:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2101 |       if (queryflag >= 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2102 |         {[0m
 2103 |           if (fore)[0m
 2104 |             OutputMsg(0, "%s", fore->w_title);[0m
 2105 |           else[0m
 2106 |             queryflag = -1;[0m
 2107 |           break;[0m
 2108 |         }[0m
 2109 |       if (*args == 0)[0m
 2110 |         InputAKA();[0m
 2111 |       else[0m
 2112 |         ChangeAKA(fore, *args, strlen(*args));[0m
 2113 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2103:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2103 |           if (fore)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2104 |             OutputMsg(0, "%s", fore->w_title);[0m
 2105 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:2105:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2105 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2106 |             queryflag = -1;[0m
      | [0;1;32m                           
[0m[1mprocess.c:2109:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2109 |       if (*args == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2110 |         InputAKA();[0m
 2111 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2111:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2111 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2112 |         ChangeAKA(fore, *args, strlen(*args));[0m
      | [0;1;32m                                              
[0m[1mprocess.c:2115:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2115 |       Input(":", MAXSTR, INP_EVERY, Colonfin, NULL, 0);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2116 |       if (*args && **args)[0m
 2117 |         {[0m
 2118 |           s = *args;[0m
 2119 |           n = strlen(s);[0m
 2120 |           LayProcess(&s, &n);[0m
 2121 |         }[0m
 2122 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2124:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2124 |       if (D_status_lastmsg)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2125 |         OutputMsg(0, "%s", D_status_lastmsg);[0m
 2126 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2124:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_status_lastmsg' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 2124 |       if (D_status_lastmsg)[0m
      | [0;1;32m          ^
[0m[1m./display.h:248:26: [0m[0;1;36mnote: [0mexpanded from macro 'D_status_lastmsg'[0m
  248 | #define D_status_lastmsg        DISPLAY(d_status_lastmsg)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 97:'  at line 2123[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:2124:11: [0m[0;1;36mnote: [0mAccess to field 'd_status_lastmsg' results in a dereference of a null pointer (loaded from variable 'display')[0m
 2124 |       if (D_status_lastmsg)[0m
      | [0;1;32m          ^
[0m[1m./display.h:248:26: [0m[0;1;36mnote: [0mexpanded from macro 'D_status_lastmsg'[0m
  248 | #define D_status_lastmsg        DISPLAY(d_status_lastmsg)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:2124:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2124 |       if (D_status_lastmsg)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2125 |         OutputMsg(0, "%s", D_status_lastmsg);[0m
      | [0;1;32m                                             
[0m[1mprocess.c:2128:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2128 |       DoScreen("key", args);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2129 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2131:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2131 |       if (ParseSwitch(act, &fore->w_wrap) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2132 |         OutputMsg(0, "%cwrap", fore->w_wrap ? '+' : '-');[0m
 2133 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2131:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2131 |       if (ParseSwitch(act, &fore->w_wrap) == 0 && msgok)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2132 |         OutputMsg(0, "%cwrap", fore->w_wrap ? '+' : '-');[0m
      | [0;1;32m                                                         
[0m[1mprocess.c:2135:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2135 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2143:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2143 |               if (ParseOnOff(act, &n))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2144 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:2150:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2150 |           if (fore->w_flow & FLOW_AUTOFLAG)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2151 |             fore->w_flow = (fore->w_flow & FLOW_AUTO) | FLOW_NOW;[0m
 2152 |           else if (fore->w_flow & FLOW_NOW)[0m
      | [0;32m          } 
[0m[1mprocess.c:2152:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2152 |           else if (fore->w_flow & FLOW_NOW)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2153 |             fore->w_flow &= ~FLOW_NOW;[0m
 2154 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:2154:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2154 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2155 |             fore->w_flow = fore->w_flow ? FLOW_AUTOFLAG|FLOW_AUTO|FLOW_NOW : FLOW_AUTOFLAG;[0m
      | [0;1;32m                                                                                           
[0m[1mprocess.c:2158:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2158 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2159 |         OutputMsg(0, "%cflow%s", (fore->w_flow & FLOW_NOW) ? '+' : '-',[0m
 2160 |             (fore->w_flow & FLOW_AUTOFLAG) ? "(auto)" : "");[0m
      | [0;1;32m                                                            
[0m[1mprocess.c:2164:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2164 |       if (args[0][0] == 'a')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2165 |         nwin_default.wlock = WLOCK_AUTO;[0m
 2166 |       else[0m
 2167 |         {[0m
 2168 |           if (ParseOnOff(act, &n))[0m
 2169 |             break;[0m
 2170 |           nwin_default.wlock = n ? WLOCK_ON : WLOCK_OFF;[0m
 2171 |         }[0m
 2172 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2164:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2164 |       if (args[0][0] == 'a')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2165 |         nwin_default.wlock = WLOCK_AUTO;[0m
 2166 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2168:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2168 |           if (ParseOnOff(act, &n))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2169 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:2174:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2174 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2182:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2182 |               if (ParseOnOff(act, &n))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2183 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:2190:25: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_user' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 2190 |           if (!AclCheckPermWin(D_user, ACL_WRITE, fore))[0m
      | [0;1;32m                               ^
[0m[1m./display.h:199:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_user'[0m
  199 | #define D_user          DISPLAY(d_user)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 184:'  at line 2173[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:2174:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2174 |       if (*args)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:2176:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2176 |           if (args[0][0] == 'a')[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~
[0m[1mprocess.c:2176:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 2176 |           if (args[0][0] == 'a')[0m
      | [0;1;32m          ^
[0m[1mprocess.c:2190:25: [0m[0;1;36mnote: [0mAccess to field 'd_user' results in a dereference of a null pointer (loaded from variable 'display')[0m
 2190 |           if (!AclCheckPermWin(D_user, ACL_WRITE, fore))[0m
      | [0;1;32m                               ^
[0m[1m./display.h:199:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_user'[0m
  199 | #define D_user          DISPLAY(d_user)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:2190:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2190 |           if (!AclCheckPermWin(D_user, ACL_WRITE, fore))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2191 |             fore->w_wlockuser = D_user;[0m
      | [0;1;32m                                       
[0m[1mprocess.c:2198:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2198 |       ResetAnsiState(fore);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2199 |       WriteString(fore, "\033[H\033[J", 6);[0m
 2200 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2202:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2202 |       ResetAnsiState(fore);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2203 | #ifdef ZMODEM[0m
 2204 |       if (fore->w_zdisplay)[0m
 2205 |         zmodem_abort(fore, fore->w_zdisplay);[0m
 2206 | #endif[0m
 2207 |       WriteString(fore, "\033c", 2);[0m
 2208 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2204:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2204 |       if (fore->w_zdisplay)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2205 |         zmodem_abort(fore, fore->w_zdisplay);[0m
      | [0;1;32m                                             
[0m[1mprocess.c:2210:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2210 |       n = fore->w_monitor != MON_OFF;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2212:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2212 |       if (display)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2213 |         n = n && (ACLBYTE(fore->w_mon_notify, D_user->u_id) & ACLBIT(D_user->u_id));[0m
      | [0;1;32m                                                                                    
[0m[1mprocess.c:2215:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2215 |       if (ParseSwitch(act, &n))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2216 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2220:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2220 |           if (display)  /* we tell only this user */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2221 |             ACLBYTE(fore->w_mon_notify, D_user->u_id) |= ACLBIT(D_user->u_id);[0m
 2222 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:2222:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2222 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2223 |             for (i = 0; i < maxusercount; i++)[0m
 2224 |               ACLBYTE(fore->w_mon_notify, i) |= ACLBIT(i);[0m
      | [0;1;32m                                                          
[0m[1mprocess.c:2223:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2223 |             for (i = 0; i < maxusercount; i++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2224 |               ACLBYTE(fore->w_mon_notify, i) |= ACLBIT(i);[0m
      | [0;1;32m                                                          
[0m[1mprocess.c:2226:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2226 |           if (fore->w_monitor == MON_OFF)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2227 |             fore->w_monitor = MON_ON;[0m
      | [0;1;32m                                     
[0m[1mprocess.c:2233:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2233 |           if (display) /* we remove only this user */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2234 |             ACLBYTE(fore->w_mon_notify, D_user->u_id) [0m
 2235 |               &= ~ACLBIT(D_user->u_id);[0m
 2236 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:2236:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2236 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2237 |             for (i = 0; i < maxusercount; i++)[0m
 2238 |               ACLBYTE(fore->w_mon_notify, i) &= ~ACLBIT(i);[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:2237:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2237 |             for (i = 0; i < maxusercount; i++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2238 |               ACLBYTE(fore->w_mon_notify, i) &= ~ACLBIT(i);[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:2239:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2239 |           for (i = maxusercount - 1; i >= 0; i--)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2240 |             if (ACLBYTE(fore->w_mon_notify, i))[0m
 2241 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:2240:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2240 |             if (ACLBYTE(fore->w_mon_notify, i))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2241 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:2242:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2242 |           if (i < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2243 | #endif[0m
 2244 |             fore->w_monitor = MON_OFF;[0m
      | [0;1;32m                                      
[0m[1mprocess.c:2250:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2250 |       display_displays();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2251 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2254:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2254 |       if (!*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2254:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2254 |       if (!*args)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2255 |         display_windows(0, WLIST_NUM, (struct win *)0);[0m
 2256 |       else if (!strcmp(*args, "string"))[0m
      | [0;32m      } 
[0m[1mprocess.c:2260:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2260 |               if (wliststr)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2261 |                 free(wliststr);[0m
      | [0;1;32m                               
[0m[1mprocess.c:2264:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2264 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2265 |             OutputMsg(0, "windowlist string is '%s'", wliststr);[0m
      | [0;1;32m                                                                
[0m[1mprocess.c:2271:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2271 |               if (wlisttit)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2272 |                 free(wlisttit);[0m
      | [0;1;32m                               
[0m[1mprocess.c:2275:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2275 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2276 |             OutputMsg(0, "windowlist title is '%s'", wlisttit);[0m
      | [0;1;32m                                                               
[0m[1mprocess.c:2282:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2282 |           for (i = 0; i < argc; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2283 |             if (!args[i])[0m
 2284 |               continue;[0m
 2285 |             else if (!strcmp(args[i], "-m"))[0m
 2286 |               flag |= WLIST_MRU;[0m
 2287 |             else if (!strcmp(args[i], "-b"))[0m
 2288 |               blank = 1;[0m
 2289 |             else if (!strcmp(args[i], "-g"))[0m
 2290 |               flag |= WLIST_NESTED;[0m
 2291 |             else[0m
 2292 |               {[0m
 2293 |                 OutputMsg(0, "usage: windowlist [-b] [-g] [-m] [string [string] | title [title]]");[0m
 2294 |                 break;[0m
 2295 |               }[0m
      | [0;1;32m               
[0m[1mprocess.c:2283:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2283 |             if (!args[i])[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2284 |               continue;[0m
 2285 |             else if (!strcmp(args[i], "-m"))[0m
      | [0;32m            } 
[0m[1mprocess.c:2285:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2285 |             else if (!strcmp(args[i], "-m"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2286 |               flag |= WLIST_MRU;[0m
 2287 |             else if (!strcmp(args[i], "-b"))[0m
      | [0;32m            } 
[0m[1mprocess.c:2287:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2287 |             else if (!strcmp(args[i], "-b"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2288 |               blank = 1;[0m
 2289 |             else if (!strcmp(args[i], "-g"))[0m
      | [0;32m            } 
[0m[1mprocess.c:2289:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2289 |             else if (!strcmp(args[i], "-g"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2290 |               flag |= WLIST_NESTED;[0m
 2291 |             else[0m
      | [0;32m            } 
[0m[1mprocess.c:2296:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2296 |           if (i == argc)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2297 |             display_windows(blank, flag, (struct win *)0);[0m
      | [0;1;32m                                                          
[0m[1mprocess.c:2301:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2301 |       if (argc == 2 && !strcmp(*args, "-c"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2302 |         {[0m
 2303 |           struct action *ktabp;[0m
 2304 |           if ((ktabp = FindKtab(args[1], 0)) == 0)[0m
 2305 |             {[0m
 2306 |               OutputMsg(0, "Unknown command class '%s'", args[1]);[0m
 2307 |               break;[0m
 2308 |             }[0m
 2309 |           display_help(args[1], ktabp);[0m
 2310 |         }[0m
 2311 |       else[0m
 2312 |         display_help((char *)0, ktab);[0m
 2313 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2311:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2311 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2312 |         display_help((char *)0, ktab);[0m
      | [0;1;32m                                      
[0m[1mprocess.c:2315:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2315 |       display_copyright();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2316 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2319:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2319 |       if (flayer->l_layfn != &WinLf)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2320 |         {[0m
 2321 |           OutputMsg(0, "Must be on a window layer");[0m
 2322 |           break;[0m
 2323 |         }[0m
 2324 |       MarkRoutine();[0m
 2325 |       WindowChanged(fore, 'P');[0m
 2326 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2337:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2337 |         if (GetHistory() == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2338 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:2339:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2339 |         if (user->u_plop.buf == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2340 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:2361:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2361 |         if (args[1] == 0 && !fore)      /* no window? */[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2362 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:2374:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2374 |         else if (fore)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2375 |           enc = fore->w_encoding;[0m
      | [0;1;32m                                 
[0m[1mprocess.c:2386:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2386 |                 if (enc == -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2387 |                   enc = user->u_plop.enc;[0m
      | [0;1;32m                                         
[0m[1mprocess.c:2388:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2388 |                 if (enc != user->u_plop.enc)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2389 |                   l += RecodeBuf((unsigned char *)user->u_plop.buf, user->u_plop.len, user->u_plop.enc, enc, (unsigned char *)0);[0m
 2390 |                 else[0m
      | [0;32m                } 
[0m[1mprocess.c:2390:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2390 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2391 | # endif[0m
 2392 |                   l += user->u_plop.len;[0m
      | [0;1;32m                                        
[0m[1mprocess.c:2397:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2397 |                 if (enc == -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2398 |                   enc = plop_tab[(int)(unsigned char)ch].enc;[0m
      | [0;1;32m                                                             
[0m[1mprocess.c:2399:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2399 |                 if (enc != plop_tab[(int)(unsigned char)ch].enc)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2400 |                   l += RecodeBuf((unsigned char *)plop_tab[(int)(unsigned char)ch].buf, plop_tab[(int)(unsigned char)ch].len, plop_tab[(int)(unsigned char)ch].enc, enc, (unsigned char *)0);[0m
 2401 |                 else[0m
      | [0;32m                } 
[0m[1mprocess.c:2401:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2401 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2402 | # endif[0m
 2403 |                   l += plop_tab[(int)(unsigned char)ch].len;[0m
      | [0;1;32m                                                            
[0m[1mprocess.c:2416:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2416 |         if (s[1] == 0 && args[1] == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2417 | # ifdef ENCODINGS[0m
 2418 |           if (enc == (*s == '.' ? user->u_plop.enc : plop_tab[(int)(unsigned char)*s].enc))[0m
 2419 | # endif[0m
 2420 |             {[0m
 2421 |               MakePaster(&fore->w_paster, *s == '.' ? user->u_plop.buf : plop_tab[(int)(unsigned char)*s].buf, l, 0);[0m
 2422 |               break;[0m
 2423 |             }[0m
      | [0;1;32m             
[0m[1mprocess.c:2447:6: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 2447 |             bcopy(pp->buf, dbuf + l, pp->len);[0m
      | [0;1;32m            ^~~~~
[0m[1mprocess.c:2447:6: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 2447 |             bcopy(pp->buf, dbuf + l, pp->len);[0m
      | [0;1;32m            ^~~~~
[0m[1mprocess.c:2466:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2466 |                 if (user->u_plop.buf != NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2467 |                   UserFreeCopyBuffer(user);[0m
      | [0;1;32m                                           
[0m[1mprocess.c:2477:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2477 |                 if (pp->buf)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2478 |                   free(pp->buf);[0m
      | [0;1;32m                                
[0m[1mprocess.c:2489:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2489 |       if (!user->u_plop.buf)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2526:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2526 |           if (args[0] && args[1])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2527 |             OutputMsg(0, "%s: writebuf: too many arguments", rc_name);[0m
 2528 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:2528:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2528 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2529 |             WriteFile(user, args[0], DUMP_EXCHANGE);[0m
      | [0;1;32m                                                    
[0m[1mprocess.c:2531:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2531 |           if (user->u_plop.buf != oldplop.buf)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2532 |             free(user->u_plop.buf);[0m
      | [0;1;32m                                   
[0m[1mprocess.c:2539:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2539 |       i = fore ? fore->w_encoding : display ? display->d_encoding : 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2558:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2558 |           if (user->u_plop.buf)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2559 |             UserFreeCopyBuffer(user);[0m
      | [0;1;32m                                     
[0m[1mprocess.c:2568:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2568 |       KillBuffers();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2569 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2571:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2571 |       (void)ParseSwitch(act, &search_ic);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2572 |       if (msgok)[0m
 2573 |         OutputMsg(0, "Will %signore case in searches", search_ic ? "" : "not ");[0m
 2574 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2572:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2572 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2573 |         OutputMsg(0, "Will %signore case in searches", search_ic ? "" : "not ");[0m
      | [0;1;32m                                                                                
[0m[1mprocess.c:2577:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2577 |       if (*argl == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2578 |         SetEscape(user, -1, -1);[0m
 2579 |       else if (*argl == 2)[0m
 2580 |         SetEscape(user, (int)(unsigned char)args[0][0], (int)(unsigned char)args[0][1]);[0m
 2581 |       else[0m
 2582 |         {[0m
 2583 |           OutputMsg(0, "%s: two characters required after escape.", rc_name);[0m
 2584 |           break;[0m
 2585 |         }[0m
 2586 |       /* Change defescape if master user. This is because we only[0m
 2587 |        * have one ktab.[0m
 2588 |        */[0m
 2589 |       if (display && user != users)[0m
 2590 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprocess.c:2577:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2577 |       if (*argl == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2578 |         SetEscape(user, -1, -1);[0m
 2579 |       else if (*argl == 2)[0m
      | [0;32m      } 
[0m[1mprocess.c:2579:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2579 |       else if (*argl == 2)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2580 |         SetEscape(user, (int)(unsigned char)args[0][0], (int)(unsigned char)args[0][1]);[0m
 2581 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2589:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2589 |       if (display && user != users)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2590 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2593:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2593 |       if (*argl == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2594 |         SetEscape(NULL, -1, -1);[0m
 2595 |       else if (*argl == 2)[0m
 2596 |         SetEscape(NULL, (int)(unsigned char)args[0][0], (int)(unsigned char)args[0][1]);[0m
 2597 |       else[0m
 2598 |         {[0m
 2599 |           OutputMsg(0, "%s: two characters required after defescape.", rc_name);[0m
 2600 |           break;[0m
 2601 |         }[0m
 2602 | #ifdef MAPKEYS[0m
 2603 |       CheckEscape();[0m
 2604 | #endif[0m
 2605 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2593:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2593 |       if (*argl == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2594 |         SetEscape(NULL, -1, -1);[0m
 2595 |       else if (*argl == 2)[0m
      | [0;32m      } 
[0m[1mprocess.c:2595:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2595 |       else if (*argl == 2)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2596 |         SetEscape(NULL, (int)(unsigned char)args[0][0], (int)(unsigned char)args[0][1]);[0m
 2597 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2607:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2607 |       s = *args ? *args : home;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2608 |       if (chdir(s) == -1)[0m
 2609 |         OutputMsg(errno, "%s", s);[0m
 2610 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2608:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2608 |       if (chdir(s) == -1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2609 |         OutputMsg(errno, "%s", s);[0m
      | [0;1;32m                                  
[0m[1mprocess.c:2613:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2613 |       if (ParseSaveStr(act, &ShellProg) == 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2614 |         ShellArgs[0] = ShellProg;[0m
      | [0;1;32m                                 
[0m[1mprocess.c:2615:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2615 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprocess.c:2617:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2617 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2618 |         (void)ParseSaveStr(act, &hardcopydir);[0m
 2619 |       if (msgok)[0m
 2620 |         OutputMsg(0, "hardcopydir is %s\n", hardcopydir && *hardcopydir ? hardcopydir : "<cwd>");[0m
 2621 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2617:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2617 |       if (*args)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2618 |         (void)ParseSaveStr(act, &hardcopydir);[0m
      | [0;1;32m                                              
[0m[1mprocess.c:2619:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2619 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2620 |         OutputMsg(0, "hardcopydir is %s\n", hardcopydir && *hardcopydir ? hardcopydir : "<cwd>");[0m
      | [0;1;32m                                                                                                 
[0m[1mprocess.c:2623:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2623 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2629:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2629 |               if (msgok)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2630 |                 OutputMsg(0, "log flush timeout set to %ds\n", log_flush);[0m
      | [0;1;32m                                                                          
[0m[1mprocess.c:2633:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2633 |           if (ParseSaveStr(act, &screenlogfile))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2634 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:2635:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2635 |           if (fore && fore->w_log)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2636 |             if (DoStartLog(fore, buf, sizeof(buf)))[0m
 2637 |               OutputMsg(0, "Error opening logfile \"%s\"", buf);[0m
      | [0;1;32m                                                                
[0m[1mprocess.c:2636:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2636 |             if (DoStartLog(fore, buf, sizeof(buf)))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2637 |               OutputMsg(0, "Error opening logfile \"%s\"", buf);[0m
      | [0;1;32m                                                                
[0m[1mprocess.c:2638:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2638 |           if (!msgok)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2639 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:2644:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2644 |       if (!*args || !strcmp(*args, "on") || !strcmp(*args, "off"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2646:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2646 |           if (ParseSwitch(act, &logtstamp_on) == 0 && msgok)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2647 |             OutputMsg(0, "timestamps turned %s", logtstamp_on ? "on" : "off");[0m
      | [0;1;32m                                                                              
[0m[1mprocess.c:2653:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2653 |               if (logtstamp_string)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2654 |                 free(logtstamp_string);[0m
      | [0;1;32m                                       
[0m[1mprocess.c:2657:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2657 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2658 |             OutputMsg(0, "logfile timestamp is '%s'", logtstamp_string);[0m
      | [0;1;32m                                                                        
[0m[1mprocess.c:2665:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2665 |               if (!msgok)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2666 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:2670:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2670 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2671 |         OutputMsg(0, "usage: logtstamp [after [n]|string [str]|on|off]");[0m
      | [0;1;32m                                                                         
[0m[1mprocess.c:2674:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2674 |       (void)ParseSaveStr(act, &nwin_default.aka);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2675 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2679:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2679 |       if (!rc_name || !*rc_name)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2680 |         OutputMsg(0, "Sorry, too late now. Place that in your .screenrc file.");[0m
      | [0;1;32m                                                                                
[0m[1mprocess.c:2681:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2681 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprocess.c:2683:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2683 |       break;                    /* Already handled */[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprocess.c:2685:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2685 |       s = NULL;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2686 |       if (ParseSaveStr(act, &s))[0m
 2687 |         break;[0m
 2688 |       if (strlen(s) > MAXTERMLEN)[0m
 2689 |         {[0m
 2690 |           OutputMsg(0, "%s: term: argument too long ( < %d)", rc_name, MAXTERMLEN);[0m
 2691 |           free(s);[0m
 2692 |           break;[0m
 2693 |         }[0m
 2694 |       strncpy(screenterm, s, MAXTERMLEN);[0m
 2695 |       screenterm[MAXTERMLEN] = '\0';[0m
 2696 |       free(s);[0m
 2697 |       debug1("screenterm set to %s\n", screenterm);[0m
 2698 |       MakeTermcap((display == 0));[0m
 2699 |       debug("new termcap made\n");[0m
 2700 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2686:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2686 |       if (ParseSaveStr(act, &s))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2687 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2694:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2694 |       strncpy(screenterm, s, MAXTERMLEN);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:2694:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2694 |       strncpy(screenterm, s, MAXTERMLEN);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:2702:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2702 |       if (!msgok && (!rc_name || strcmp(rc_name, "-X")))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2702:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2702 |       if (!msgok && (!rc_name || strcmp(rc_name, "-X")))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2703 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2719:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2719 |           if (s)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2720 |             s = MakeWinMsg(s, fore, '%');[0m
      | [0;1;32m                                         
[0m[1mprocess.c:2722:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2722 |       if (s)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2723 |         OutputMsg(0, "%s", s);[0m
 2724 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2739:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2739 |       (void)ParseSaveStr(act, &BellString);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2740 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2743:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2743 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2744 |         BufferFile = SaveStr(DEFAULT_BUFFERFILE);[0m
 2745 |       else if (ParseSaveStr(act, &BufferFile))[0m
 2746 |         break;[0m
 2747 |       if (msgok)[0m
 2748 |         OutputMsg(0, "Bufferfile is now '%s'", BufferFile);[0m
 2749 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2743:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2743 |       if (*args == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2744 |         BufferFile = SaveStr(DEFAULT_BUFFERFILE);[0m
 2745 |       else if (ParseSaveStr(act, &BufferFile))[0m
      | [0;32m      } 
[0m[1mprocess.c:2745:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2745 |       else if (ParseSaveStr(act, &BufferFile))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2746 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2747:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2747 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2748 |         OutputMsg(0, "Bufferfile is now '%s'", BufferFile);[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:2752:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2752 |       (void)ParseSaveStr(act, &ActivityString);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2753 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2756:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2756 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2757 |         {[0m
 2758 |           char buf[256];[0m
 2759 |           AddXChars(buf, sizeof(buf), PowDetachString);[0m
 2760 |           OutputMsg(0, "pow_detach_msg is '%s'", buf);[0m
 2761 |           break;[0m
 2762 |         }[0m
 2763 |       (void)ParseSaveStr(act, &PowDetachString);[0m
 2764 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2768:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2768 |       n = fore->w_slot != (slot_t)-1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2772:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2772 |           if (!displays && n)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2773 |             SlotToggle(n);[0m
      | [0;1;32m                          
[0m[1mprocess.c:2779:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2779 |           if (!displays && n)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2780 |             SlotToggle(0);[0m
      | [0;1;32m                          
[0m[1mprocess.c:2783:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2783 |       if (ParseSwitch(act, &n) == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2784 |         SlotToggle(n);[0m
      | [0;1;32m                      
[0m[1mprocess.c:2787:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2787 |       if (!strcmp(*args, "always"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2788 |         nwin_default.lflag |= 2;[0m
 2789 |       else if (!strcmp(*args, "attached"))[0m
 2790 |         nwin_default.lflag &= ~2;[0m
 2791 |       else[0m
 2792 |         (void)ParseOnOff(act, &nwin_default.lflag);[0m
 2793 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2787:12: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 2787 |       if (!strcmp(*args, "always"))[0m
      | [0;1;32m           ^      ~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mCalling 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1045:15: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1047[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1047:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1047:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1049:11: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'n'[0m
 1049 |       if (i < n)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1049:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1049 |       if (i < n)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mReturning from 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 54:'  at line 2786[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:2787:12: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 2787 |       if (!strcmp(*args, "always"))[0m
      | [0;1;32m           ^      ~~~~~
[0m[1mprocess.c:2787:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2787 |       if (!strcmp(*args, "always"))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2788 |         nwin_default.lflag |= 2;[0m
 2789 |       else if (!strcmp(*args, "attached"))[0m
      | [0;32m      } 
[0m[1mprocess.c:2789:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2789 |       else if (!strcmp(*args, "attached"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2790 |         nwin_default.lflag &= ~2;[0m
 2791 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2791:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2791 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2792 |         (void)ParseOnOff(act, &nwin_default.lflag);[0m
      | [0;1;32m                                                   
[0m[1mprocess.c:2796:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2796 |       if (args[0] && args[1] && args[1][0] == 'i')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2801:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2801 |               if (!D_flow)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2802 |                 continue;[0m
      | [0;1;32m                         
[0m[1mprocess.c:2812:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2812 |       if (args[0] && args[0][0] == 'a')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2813 |         nwin_default.flowflag = FLOW_AUTOFLAG;[0m
 2814 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2814:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2814 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2815 |         (void)ParseOnOff(act, &nwin_default.flowflag);[0m
      | [0;1;32m                                                      
[0m[1mprocess.c:2818:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2818 |       (void)ParseOnOff(act, &nwin_default.wrap);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2819 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2821:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2821 |       (void)ParseOnOff(act, &nwin_default.c1);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2822 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2825:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2825 |       (void)ParseOnOff(act, &nwin_default.bce);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2826 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2829:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2829 |       (void)ParseOnOff(act, &nwin_default.gr);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2830 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2832:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2832 |       if (ParseOnOff(act, &n) == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2833 |         nwin_default.monitor = (n == 0) ? MON_OFF : MON_ON;[0m
 2834 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2832:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2832 |       if (ParseOnOff(act, &n) == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2833 |         nwin_default.monitor = (n == 0) ? MON_OFF : MON_ON;[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:2836:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2836 |       if (ParseOnOff(act, &n) == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2837 |         defmousetrack = (n == 0) ? 0 : 1000;[0m
 2838 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2836:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2836 |       if (ParseOnOff(act, &n) == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2837 |         defmousetrack = (n == 0) ? 0 : 1000;[0m
      | [0;1;32m                                            
[0m[1mprocess.c:2840:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2840 |       if (!args[0])[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2841 |         {[0m
 2842 |           OutputMsg(0, "Mouse tracking for this display is turned %s", D_mousetrack ? "on" : "off");[0m
 2843 |         }[0m
 2844 |       else if (ParseOnOff(act, &n) == 0)[0m
 2845 |         {[0m
 2846 |           D_mousetrack = n == 0 ? 0 : 1000;[0m
 2847 |           if (D_fore)[0m
 2848 |             MouseMode(D_fore->w_mouse);[0m
 2849 |         }[0m
 2850 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2842:65: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_mousetrack' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 2842 |           OutputMsg(0, "Mouse tracking for this display is turned %s", D_mousetrack ? "on" : "off");[0m
      | [0;1;32m                                                                       ^
[0m[1m./display.h:241:22: [0m[0;1;36mnote: [0mexpanded from macro 'D_mousetrack'[0m
  241 | #define D_mousetrack    DISPLAY(d_mousetrack)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mCalling 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1045:15: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1047[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1047:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1047:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1049:11: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'n'[0m
 1049 |       if (i < n)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1049:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1049 |       if (i < n)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1129:3: [0m[0;1;36mnote: [0mReturning without writing to '*args', which participates in a condition later[0m
 1129 |   return i;[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mReturning from 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 112:'  at line 2839[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:2840:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2840 |       if (!args[0])[0m
      | [0;1;32m      ^
[0m[1mprocess.c:2842:4: [0m[0;1;36mnote: [0mAssuming field 'quiet' is 0[0m
 2842 |           OutputMsg(0, "Mouse tracking for this display is turned %s", D_mousetrack ? "on" : "off");[0m
      | [0;1;32m          ^
[0m[1mprocess.c:1152:20: [0m[0;1;36mnote: [0mexpanded from macro 'OutputMsg'[0m
 1152 | #define OutputMsg       (!act->quiet ? Msg : queryflag >= 0 ? QueryMsg : Dummy)[0m
      | [0;1;32m                         ^~~~~~~~~~~
[0m[1mprocess.c:2842:4: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2842 |           OutputMsg(0, "Mouse tracking for this display is turned %s", D_mousetrack ? "on" : "off");[0m
      | [0;1;32m          ^
[0m[1mprocess.c:1152:20: [0m[0;1;36mnote: [0mexpanded from macro 'OutputMsg'[0m
 1152 | #define OutputMsg       (!act->quiet ? Msg : queryflag >= 0 ? QueryMsg : Dummy)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:2842:65: [0m[0;1;36mnote: [0mAccess to field 'd_mousetrack' results in a dereference of a null pointer (loaded from variable 'display')[0m
 2842 |           OutputMsg(0, "Mouse tracking for this display is turned %s", D_mousetrack ? "on" : "off");[0m
      | [0;1;32m                                                                       ^
[0m[1m./display.h:241:22: [0m[0;1;36mnote: [0mexpanded from macro 'D_mousetrack'[0m
  241 | #define D_mousetrack    DISPLAY(d_mousetrack)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:2846:17: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_mousetrack' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 2846 |           D_mousetrack = n == 0 ? 0 : 1000;[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mCalling 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1047[0m
[1mprocess.c:1047:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1047:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1049:11: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'n'[0m
 1049 |       if (i < n)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1049:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1049 |       if (i < n)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1129:3: [0m[0;1;36mnote: [0mReturning without writing to '*args', which participates in a condition later[0m
 1129 |   return i;[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mReturning from 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 112:'  at line 2839[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:2840:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2840 |       if (!args[0])[0m
      | [0;1;32m      ^
[0m[1mprocess.c:2844:12: [0m[0;1;36mnote: [0mTaking true branch[0m
 2844 |       else if (ParseOnOff(act, &n) == 0)[0m
      | [0;1;32m           ^
[0m[1mprocess.c:2846:19: [0m[0;1;36mnote: [0m'n' is not equal to 0[0m
 2846 |           D_mousetrack = n == 0 ? 0 : 1000;[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:2846:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:2846:17: [0m[0;1;36mnote: [0mAccess to field 'd_mousetrack' results in a dereference of a null pointer (loaded from variable 'display')[0m
 2846 |           D_mousetrack = n == 0 ? 0 : 1000;[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:2847:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2847 |           if (D_fore)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2848 |             MouseMode(D_fore->w_mouse);[0m
      | [0;1;32m                                       
[0m[1mprocess.c:2852:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2852 |       if (ParseOnOff(act, &n) == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2853 |         nwin_default.silence = (n == 0) ? SILENCE_OFF : SILENCE_ON;[0m
 2854 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2852:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2852 |       if (ParseOnOff(act, &n) == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2853 |         nwin_default.silence = (n == 0) ? SILENCE_OFF : SILENCE_ON;[0m
      | [0;1;32m                                                                   
[0m[1mprocess.c:2856:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2856 |       if (!*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2857 |         OutputMsg(0, "W%s echo command when creating windows.", [0m
 2858 |           VerboseCreate ? "ill" : "on't");[0m
 2859 |       else if (ParseOnOff(act, &n) == 0)[0m
 2860 |         VerboseCreate = n;[0m
 2861 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2856:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2856 |       if (!*args)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2857 |         OutputMsg(0, "W%s echo command when creating windows.", [0m
 2858 |           VerboseCreate ? "ill" : "on't");[0m
 2859 |       else if (ParseOnOff(act, &n) == 0)[0m
      | [0;32m      } 
[0m[1mprocess.c:2859:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2859 |       else if (ParseOnOff(act, &n) == 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2860 |         VerboseCreate = n;[0m
      | [0;1;32m                          
[0m[1mprocess.c:2863:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2863 |       if (display)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2874:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2874 |           if (!strncmp(s, "always", 6))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2875 |             s += 6;[0m
      | [0;1;32m                   
[0m[1mprocess.c:2876:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2876 |           if (!strcmp(s, "firstline"))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2877 |             new_use = HSTATUS_FIRSTLINE;[0m
 2878 |           else if (!strcmp(s, "lastline"))[0m
      | [0;32m          } 
[0m[1mprocess.c:2878:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2878 |           else if (!strcmp(s, "lastline"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2879 |             new_use = HSTATUS_LASTLINE;[0m
 2880 |           else if (!strcmp(s, "ignore"))[0m
      | [0;32m          } 
[0m[1mprocess.c:2880:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2880 |           else if (!strcmp(s, "ignore"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2881 |             new_use = HSTATUS_IGNORE;[0m
 2882 |           else if (!strcmp(s, "message"))[0m
      | [0;32m          } 
[0m[1mprocess.c:2882:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2882 |           else if (!strcmp(s, "message"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2883 |             new_use = HSTATUS_MESSAGE;[0m
 2884 |           else if (!strcmp(args[0], "string"))[0m
      | [0;32m          } 
[0m[1mprocess.c:2906:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2906 |                   if (D_HS && s == args[0])[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2907 |                     new_use = HSTATUS_HS;[0m
      | [0;1;32m                                         
[0m[1mprocess.c:2911:134: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2911 |                   if ((new_use == HSTATUS_LASTLINE && old_use != HSTATUS_LASTLINE) || (new_use != HSTATUS_LASTLINE && old_use == HSTATUS_LASTLINE))[0m
      | [0;1;32m                                                                                                                                                   ^
[0m      | [0;32m                                                                                                                                                    {
[0m 2912 |                     ChangeScreenSize(D_width, D_height, 1);[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:2913:138: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2913 |                   if ((new_use == HSTATUS_FIRSTLINE && old_use != HSTATUS_FIRSTLINE) || (new_use != HSTATUS_FIRSTLINE && old_use == HSTATUS_FIRSTLINE))[0m
      | [0;1;32m                                                                                                                                                       ^
[0m      | [0;32m                                                                                                                                                        {
[0m 2914 |                     ChangeScreenSize(D_width, D_height, 1);[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:2920:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2920 |               if (hstatusstring)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2921 |                 free(hstatusstring);[0m
      | [0;1;32m                                    
[0m[1mprocess.c:2923:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2923 |               for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 2924 |                 RefreshHStatus();[0m
      | [0;1;32m                                 
[0m[1mprocess.c:2930:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2930 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2931 |         OutputMsg(0, "messages displayed on %s", use_hardstatus ? "hardstatus line" : "window");[0m
      | [0;1;32m                                                                                                
[0m[1mprocess.c:2934:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2934 |       if (strcmp(args[0], "always") == 0 || strcmp(args[0], "splitonly") == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:2939:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2939 |           for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2940 |             ChangeScreenSize(D_width, D_height, 1);[0m
      | [0;1;32m                                                   
[0m[1mprocess.c:2958:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2958 |       if (!args[1])[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2959 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2960:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2960 |       if (captionstring)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2961 |         free(captionstring);[0m
      | [0;1;32m                            
[0m[1mprocess.c:2966:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2966 |       n = (console_window != 0);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2967 |       if (ParseSwitch(act, &n))[0m
 2968 |         break;[0m
 2969 |       if (TtyGrabConsole(fore->w_ptyfd, n, rc_name))[0m
 2970 |         break;[0m
 2971 |       if (n == 0)[0m
 2972 |           OutputMsg(0, "%s: releasing console %s", rc_name, HostName);[0m
 2973 |       else if (console_window)[0m
 2974 |           OutputMsg(0, "%s: stealing console %s from window %d (%s)", rc_name, [0m
 2975 |               HostName, console_window->w_number, console_window->w_title);[0m
 2976 |       else[0m
 2977 |           OutputMsg(0, "%s: grabbing console %s", rc_name, HostName);[0m
 2978 |       console_window = n ? fore : 0;[0m
 2979 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2967:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2967 |       if (ParseSwitch(act, &n))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2968 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2969:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2969 |       if (TtyGrabConsole(fore->w_ptyfd, n, rc_name))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2970 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2971:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2971 |       if (n == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2972 |           OutputMsg(0, "%s: releasing console %s", rc_name, HostName);[0m
 2973 |       else if (console_window)[0m
      | [0;32m      } 
[0m[1mprocess.c:2973:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2973 |       else if (console_window)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2974 |           OutputMsg(0, "%s: stealing console %s from window %d (%s)", rc_name, [0m
 2975 |               HostName, console_window->w_number, console_window->w_title);[0m
 2976 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2976:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2976 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2977 |           OutputMsg(0, "%s: grabbing console %s", rc_name, HostName);[0m
      | [0;1;32m                                                                     
[0m[1mprocess.c:2981:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2981 |       if (ParseOnOff(act, &all_norefresh))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2982 |         break;[0m
 2983 |       if (!all_norefresh && fore)[0m
 2984 |         Activate(-1);[0m
 2985 |       if (msgok)[0m
 2986 |         OutputMsg(0, all_norefresh ? "No refresh on window change!\n" :[0m
 2987 |                                "Window specific refresh\n");[0m
 2988 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2981:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2981 |       if (ParseOnOff(act, &all_norefresh))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2982 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2983:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2983 |       if (!all_norefresh && fore)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2984 |         Activate(-1);[0m
      | [0;1;32m                     
[0m[1mprocess.c:2985:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2985 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2986 |         OutputMsg(0, all_norefresh ? "No refresh on window change!\n" :[0m
 2987 |                                "Window specific refresh\n");[0m
      | [0;1;32m                                                            
[0m[1mprocess.c:2990:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2990 |       (void)ParseSwitch(act, &n);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2991 |       fore->w_norefresh = n;[0m
 2992 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2994:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2994 |       if (ParseSwitch(act, &visual_bell) || !msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2995 |         break;[0m
 2996 |       if (visual_bell == 0)[0m
 2997 |         OutputMsg(0, "switched to audible bell.");[0m
 2998 |       else[0m
 2999 |         OutputMsg(0, "switched to visual bell.");[0m
 3000 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:2994:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2994 |       if (ParseSwitch(act, &visual_bell) || !msgok)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2995 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:2996:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2996 |       if (visual_bell == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2997 |         OutputMsg(0, "switched to audible bell.");[0m
 2998 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:2998:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2998 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2999 |         OutputMsg(0, "switched to visual bell.");[0m
      | [0;1;32m                                                 
[0m[1mprocess.c:3002:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3002 |       if (ParseNum1000(act, &VBellWait) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3003 |         OutputMsg(0, "vbellwait set to %.10g seconds", VBellWait/1000.);[0m
 3004 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3002:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3002 |       if (ParseNum1000(act, &VBellWait) == 0 && msgok)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3003 |         OutputMsg(0, "vbellwait set to %.10g seconds", VBellWait/1000.);[0m
      | [0;1;32m                                                                        
[0m[1mprocess.c:3006:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3006 |       if (ParseNum1000(act, &MsgWait) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3007 |         OutputMsg(0, "msgwait set to %.10g seconds", MsgWait/1000.);[0m
 3008 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3006:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3006 |       if (ParseNum1000(act, &MsgWait) == 0 && msgok)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3007 |         OutputMsg(0, "msgwait set to %.10g seconds", MsgWait/1000.);[0m
      | [0;1;32m                                                                    
[0m[1mprocess.c:3010:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3010 |       if (ParseNum1000(act, &MsgMinWait) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3011 |         OutputMsg(0, "msgminwait set to %.10g seconds", MsgMinWait/1000.);[0m
 3012 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3010:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3010 |       if (ParseNum1000(act, &MsgMinWait) == 0 && msgok)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3011 |         OutputMsg(0, "msgminwait set to %.10g seconds", MsgMinWait/1000.);[0m
      | [0;1;32m                                                                          
[0m[1mprocess.c:3014:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3014 |       if (ParseNum(act, &SilenceWait))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3015 |         break;[0m
 3016 |       if (SilenceWait < 1)[0m
 3017 |         SilenceWait = 1;[0m
 3018 |       for (p = windows; p; p = p->w_next)[0m
 3019 |         p->w_silencewait = SilenceWait;[0m
 3020 |       if (msgok)[0m
 3021 |         OutputMsg(0, "silencewait set to %d seconds", SilenceWait);[0m
 3022 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3014:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3014 |       if (ParseNum(act, &SilenceWait))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3015 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:3016:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3016 |       if (SilenceWait < 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3017 |         SilenceWait = 1;[0m
      | [0;1;32m                        
[0m[1mprocess.c:3018:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3018 |       for (p = windows; p; p = p->w_next)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3019 |         p->w_silencewait = SilenceWait;[0m
      | [0;1;32m                                       
[0m[1mprocess.c:3020:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3020 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3021 |         OutputMsg(0, "silencewait set to %d seconds", SilenceWait);[0m
      | [0;1;32m                                                                   
[0m[1mprocess.c:3024:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3024 |       if (fore->w_number < NextWindow())[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3025 |         WindowChangeNumber(fore->w_number, NextWindow());[0m
 3026 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3024:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3024 |       if (fore->w_number < NextWindow())[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3025 |         WindowChangeNumber(fore->w_number, NextWindow());[0m
      | [0;1;32m                                                         
[0m[1mprocess.c:3028:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3028 |       if (fore->w_number > PreviousWindow())[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3029 |         WindowChangeNumber(fore->w_number, PreviousWindow());[0m
 3030 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3028:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3028 |       if (fore->w_number > PreviousWindow())[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3029 |         WindowChangeNumber(fore->w_number, PreviousWindow());[0m
      | [0;1;32m                                                             
[0m[1mprocess.c:3032:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3032 |       CollapseWindowlist();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3033 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3035:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3035 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3035:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3035 |       if (*args == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3036 |         OutputMsg(0, queryflag >= 0 ? "%d (%s)" : "This is window %d (%s).", fore->w_number, fore->w_title);[0m
 3037 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:3041:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3041 |           if (args[0][0] == '+')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3042 |             rel = 1;[0m
 3043 |           else if (args[0][0] == '-')[0m
      | [0;32m          } 
[0m[1mprocess.c:3043:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3043 |           else if (args[0][0] == '-')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3044 |             rel = -1;[0m
      | [0;1;32m                     
[0m[1mprocess.c:3045:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3045 |           if (rel)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3046 |             ++act->args[0];[0m
      | [0;1;32m                           
[0m[1mprocess.c:3048:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3048 |           if (rel)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3049 |             --act->args[0];[0m
      | [0;1;32m                           
[0m[1mprocess.c:3050:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3050 |           if (parse)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3051 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3052:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3052 |           if (rel > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3053 |             n += old;[0m
 3054 |           else if (rel < 0)[0m
      | [0;32m          } 
[0m[1mprocess.c:3054:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3054 |           else if (rel < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3055 |             n = old - n;[0m
      | [0;1;32m                        
[0m[1mprocess.c:3066:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3066 |                         if (argc != 1) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3067 |                                 Msg(0, "Setting zombie polling needs a timeout arg\n");[0m
 3068 |                                 break;[0m
 3069 |                         }[0m
 3070 | [0m
 3071 |                         nwin_default.poll_zombie_timeout = atoi(args[0]);[0m
 3072 |                         if (fore)[0m
 3073 |                                 fore->w_poll_zombie_timeout = nwin_default.poll_zombie_timeout;[0m
 3074 |                         debug1("Setting zombie polling to %d\n", nwin_default.poll_zombie_timeout);[0m
 3075 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mprocess.c:3072:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3072 |                         if (fore)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3073 |                                 fore->w_poll_zombie_timeout = nwin_default.poll_zombie_timeout;[0m
      | [0;1;32m                                                                                               
[0m[1mprocess.c:3078:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3078 |                         if (fore) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1mprocess.c:3092:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3092 |                                 if (wtab[i] == NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3093 |                                         continue;[0m
      | [0;1;32m                                                 
[0m[1mprocess.c:3097:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3097 |                                         if (wtab[nr] == NULL)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 3098 |                                                 continue;[0m
      | [0;1;32m                                                         
[0m[1mprocess.c:3100:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3100 |                                         if (strcmp(wtab[nr]->w_title,wtab[n]->w_title) < 0)[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m 3101 |                                                 n = nr;[0m
      | [0;1;32m                                                       
[0m[1mprocess.c:3121:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3121 |       n = fore->w_silence != 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3125:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3125 |           if (ParseNum(act, &i))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3126 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3129:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3129 |       else if (ParseSwitch(act, &n))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3130 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:3134:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3134 |           if (display)  /* we tell only this user */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3135 |             ACLBYTE(fore->w_lio_notify, D_user->u_id) |= ACLBIT(D_user->u_id);[0m
 3136 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:3136:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3136 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3137 |             for (n = 0; n < maxusercount; n++)[0m
 3138 |               ACLBYTE(fore->w_lio_notify, n) |= ACLBIT(n);[0m
      | [0;1;32m                                                          
[0m[1mprocess.c:3137:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3137 |             for (n = 0; n < maxusercount; n++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3138 |               ACLBYTE(fore->w_lio_notify, n) |= ACLBIT(n);[0m
      | [0;1;32m                                                          
[0m[1mprocess.c:3145:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3145 |           if (!msgok)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3146 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3152:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3152 |           if (display) /* we remove only this user */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3153 |             ACLBYTE(fore->w_lio_notify, D_user->u_id) [0m
 3154 |               &= ~ACLBIT(D_user->u_id);[0m
 3155 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:3155:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3155 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3156 |             for (n = 0; n < maxusercount; n++)[0m
 3157 |               ACLBYTE(fore->w_lio_notify, n) &= ~ACLBIT(n);[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:3156:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3156 |             for (n = 0; n < maxusercount; n++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3157 |               ACLBYTE(fore->w_lio_notify, n) &= ~ACLBIT(n);[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:3158:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3158 |           for (i = maxusercount - 1; i >= 0; i--)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 3159 |             if (ACLBYTE(fore->w_lio_notify, i))[0m
 3160 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:3159:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3159 |             if (ACLBYTE(fore->w_lio_notify, i))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3160 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:3167:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3167 |           if (!msgok)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3168 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3174:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3174 |       (void)ParseNum(act, &nwin_default.histheight);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3175 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3177:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3177 |       if (flayer->l_layfn == &MarkLf)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3178 |         {[0m
 3179 |           OutputMsg(0, "Cannot resize scrollback buffer in copy/scrollback mode.");[0m
 3180 |           break;[0m
 3181 |         }[0m
 3182 |       (void)ParseNum(act, &n);[0m
 3183 |       ChangeWindowSize(fore, fore->w_width, fore->w_height, n);[0m
 3184 |       if (msgok)[0m
 3185 |         OutputMsg(0, "scrollback set to %d", fore->w_histheight);[0m
 3186 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3184:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3184 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3185 |         OutputMsg(0, "scrollback set to %d", fore->w_histheight);[0m
      | [0;1;32m                                                                 
[0m[1mprocess.c:3189:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3189 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3189:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3189 |       if (*args == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3190 |         OutputMsg(0, "This session is named '%s'\n", SockName);[0m
 3191 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:3196:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3196 |           if (ParseSaveStr(act, &s))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3197 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3204:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3204 |           strncpy(buf, SockPath, SockName - SockPath);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:3204:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 3204 |           strncpy(buf, SockPath, SockName - SockPath);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:3205:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3205 |           sprintf(buf + (SockName - SockPath), "%d.%s", (int)getpid(), s); [0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:3205:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 3205 |           sprintf(buf + (SockName - SockPath), "%d.%s", (int)getpid(), s); [0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:3218:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 3218 |           strcpy(SockPath, buf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprocess.c:3218:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 3218 |           strcpy(SockPath, buf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprocess.c:3224:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3224 |       if (!args[0] || !args[1])[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3225 |         {[0m
 3226 |           debug1("RC_SETENV arguments missing: %s\n", args[0] ? args[0] : "");[0m
 3227 |           InputSetenv(args[0]);[0m
 3228 |         }[0m
 3229 |       else[0m
 3230 |         {[0m
 3231 |           xsetenv(args[0], args[1]);[0m
 3232 |           MakeNewEnv();[0m
 3233 |         }[0m
 3234 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3236:7: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 3236 |       unsetenv(*args);[0m
      | [0;1;32m      ^        ~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mCalling 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1045:15: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1047[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1047:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1047:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1049:11: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'n'[0m
 1049 |       if (i < n)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1049:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1049 |       if (i < n)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mReturning from 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 171:'  at line 3235[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:3236:7: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 3236 |       unsetenv(*args);[0m
      | [0;1;32m      ^        ~~~~~
[0m[1mprocess.c:3236:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3236 |       unsetenv(*args);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3237 |       MakeNewEnv();[0m
 3238 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3241:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3241 |       (void)ParseNum(act, &nwin_default.slow);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3242 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3244:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3244 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3245 |         OutputMsg(0, fore->w_slowpaste ? [0m
 3246 |                "Slowpaste in window %d is %d milliseconds." :[0m
 3247 |                "Slowpaste in window %d is unset.", [0m
 3248 |             fore->w_number, fore->w_slowpaste);[0m
 3249 |       else if (ParseNum(act, &fore->w_slowpaste) == 0 && msgok)[0m
 3250 |         OutputMsg(0, fore->w_slowpaste ?[0m
 3251 |                "Slowpaste in window %d set to %d milliseconds." :[0m
 3252 |                "Slowpaste in window %d now unset.", [0m
 3253 |             fore->w_number, fore->w_slowpaste);[0m
 3254 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3244:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3244 |       if (*args == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3245 |         OutputMsg(0, fore->w_slowpaste ? [0m
 3246 |                "Slowpaste in window %d is %d milliseconds." :[0m
 3247 |                "Slowpaste in window %d is unset.", [0m
 3248 |             fore->w_number, fore->w_slowpaste);[0m
 3249 |       else if (ParseNum(act, &fore->w_slowpaste) == 0 && msgok)[0m
      | [0;32m      } 
[0m[1mprocess.c:3249:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3249 |       else if (ParseNum(act, &fore->w_slowpaste) == 0 && msgok)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 3250 |         OutputMsg(0, fore->w_slowpaste ?[0m
 3251 |                "Slowpaste in window %d set to %d milliseconds." :[0m
 3252 |                "Slowpaste in window %d now unset.", [0m
 3253 |             fore->w_number, fore->w_slowpaste);[0m
      | [0;1;32m                                               
[0m[1mprocess.c:3256:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3256 |       if (CompileKeys(*args, *argl, mark_key_tab))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3257 |         {[0m
 3258 |           OutputMsg(0, "%s: markkeys: syntax error.", rc_name);[0m
 3259 |           break;[0m
 3260 |         }[0m
 3261 |       debug1("markkeys %s\n", *args);[0m
 3262 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3265:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3265 |       if (ParseSwitch(act, &pastefont) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3266 |         OutputMsg(0, "Will %spaste font settings", pastefont ? "" : "not ");[0m
 3267 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3265:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3265 |       if (ParseSwitch(act, &pastefont) == 0 && msgok)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3266 |         OutputMsg(0, "Will %spaste font settings", pastefont ? "" : "not ");[0m
      | [0;1;32m                                                                            
[0m[1mprocess.c:3270:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3270 |       (void)ParseSwitch(act, &join_with_cr);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3271 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3273:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3273 |       if (ParseSwitch(act, &compacthist) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3274 |         OutputMsg(0, "%scompacting history lines", compacthist ? "" : "not ");[0m
 3275 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3273:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3273 |       if (ParseSwitch(act, &compacthist) == 0 && msgok)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3274 |         OutputMsg(0, "%scompacting history lines", compacthist ? "" : "not ");[0m
      | [0;1;32m                                                                              
[0m[1mprocess.c:3279:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3279 |       (void)ParseOnOff(act, &nethackflag);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3280 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3287:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3287 |       (void)ParseOnOff(act, &hardcopy_append);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3288 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3290:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3290 |       if (*args == 0) [0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3291 |         { [0m
 3292 |           char buf[256];[0m
 3293 |           AddXChars(buf, sizeof(buf), VisualBellString);[0m
 3294 |           OutputMsg(0, "vbell_msg is '%s'", buf);[0m
 3295 |           break; [0m
 3296 |         }[0m
 3297 |       (void)ParseSaveStr(act, &VisualBellString);[0m
 3298 |       debug1(" new vbellstr '%s'\n", VisualBellString);[0m
 3299 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3301:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3301 |       if (ParseBase(act, *args, &n, 8, "octal"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3302 |         break;[0m
 3303 |       if (n < 0 || n > 0777)[0m
 3304 |         {[0m
 3305 |           OutputMsg(0, "%s: mode: Invalid tty mode %o", rc_name, n);[0m
 3306 |           break;[0m
 3307 |         }[0m
 3308 |       TtyMode = n;[0m
 3309 |       if (msgok)[0m
 3310 |         OutputMsg(0, "Ttymode set to %03o", TtyMode);[0m
 3311 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3301:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3301 |       if (ParseBase(act, *args, &n, 8, "octal"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3302 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:3309:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3309 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3310 |         OutputMsg(0, "Ttymode set to %03o", TtyMode);[0m
      | [0;1;32m                                                     
[0m[1mprocess.c:3313:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3313 |       (void)ParseOnOff(act, &auto_detach);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3314 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3316:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3316 |       (void)ParseOnOff(act, &default_startup);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3317 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3320:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3320 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3323:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3323 |           if (user->u_password != NullStr) free((char *)user->u_password);[0m
      | [0;1;32m                                          ^                               
[0m      | [0;32m                                           {
[0m[1mprocess.c:3327:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3327 |               if (n)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3328 |                 OutputMsg(0, "Password checking disabled");[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:3345:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3345 |         {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mprocess.c:3354:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3354 |                   if (ktabp == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3355 |                     break;[0m
      | [0;1;32m                          
[0m[1mprocess.c:3367:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3367 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3368 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:3373:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3373 |               for (n = 0; n < KMAP_KEYS; n++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3374 |                 if (strcmp(term[n + T_CAPS].tcname, *args) == 0)[0m
 3375 |                   break;[0m
      | [0;1;32m                        
[0m[1mprocess.c:3374:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3374 |                 if (strcmp(term[n + T_CAPS].tcname, *args) == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 3375 |                   break;[0m
      | [0;1;32m                        
[0m[1mprocess.c:3390:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3390 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3391 |             n = (unsigned char)args[0][0];[0m
      | [0;1;32m                                          
[0m[1mprocess.c:3400:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3400 |               if (CheckArgNum(i, args + 2) < 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3401 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:3405:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3405 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3406 |             ClearAction(&ktabp[n]);[0m
      | [0;1;32m                                   
[0m[1mprocess.c:3411:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3411 |         {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mprocess.c:3420:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3420 |               if (strcmp(*args, "-t") == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3421 |                 fl = KMAP_NOTIMEOUT;[0m
 3422 |               else if (strcmp(*args, "-k") == 0)[0m
      | [0;32m              } 
[0m[1mprocess.c:3422:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3422 |               else if (strcmp(*args, "-k") == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3423 |                 kf = 1;[0m
 3424 |               else if (strcmp(*args, "-a") == 0)[0m
      | [0;32m              } 
[0m[1mprocess.c:3424:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3424 |               else if (strcmp(*args, "-a") == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3425 |                 af = 1;[0m
 3426 |               else if (strcmp(*args, "-d") == 0)[0m
      | [0;32m              } 
[0m[1mprocess.c:3426:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3426 |               else if (strcmp(*args, "-d") == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3427 |                 df = 1;[0m
 3428 |               else if (strcmp(*args, "-m") == 0)[0m
      | [0;32m              } 
[0m[1mprocess.c:3428:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3428 |               else if (strcmp(*args, "-m") == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3429 |                 mf = 1;[0m
 3430 |               else if (strcmp(*args, "--") == 0)[0m
      | [0;32m              } 
[0m[1mprocess.c:3449:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3449 |               if (mf)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3450 |                 display_bindkey("Edit mode", mmtab);[0m
 3451 |               else if (df)[0m
      | [0;32m              } 
[0m[1mprocess.c:3451:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3451 |               else if (df)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3452 |                 display_bindkey("Default", dmtab);[0m
 3453 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:3453:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3453 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3454 |                 display_bindkey("User", umtab);[0m
      | [0;1;32m                                               
[0m[1mprocess.c:3469:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3469 |               for (i = 0, kme = kmap_exts; i < kmap_extn; i++, kme++)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 3470 |                 if (kme->str == 0)[0m
 3471 |                   {[0m
 3472 |                     if (args[1])[0m
 3473 |                       break;[0m
 3474 |                   }[0m
 3475 |                 else[0m
 3476 |                   if (*argl == (kme->fl & ~KMAP_NOTIMEOUT) && bcmp(kme->str, *args, *argl) == 0)[0m
 3477 |                       break;[0m
      | [0;1;32m                            
[0m[1mprocess.c:3472:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3472 |                     if (args[1])[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3473 |                       break;[0m
      | [0;1;32m                            
[0m[1mprocess.c:3476:49: [0m[0;1;35mwarning: [0m[1mThe bcmp() function is obsoleted by memcmp() [clang-analyzer-security.insecureAPI.bcmp][0m
 3476 |                   if (*argl == (kme->fl & ~KMAP_NOTIMEOUT) && bcmp(kme->str, *args, *argl) == 0)[0m
      | [0;1;32m                                                              ^~~~
[0m[1mprocess.c:3476:49: [0m[0;1;36mnote: [0mThe bcmp() function is obsoleted by memcmp()[0m
 3476 |                   if (*argl == (kme->fl & ~KMAP_NOTIMEOUT) && bcmp(kme->str, *args, *argl) == 0)[0m
      | [0;1;32m                                                              ^~~~
[0m[1mprocess.c:3476:83: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3476 |                   if (*argl == (kme->fl & ~KMAP_NOTIMEOUT) && bcmp(kme->str, *args, *argl) == 0)[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m 3477 |                       break;[0m
      | [0;1;32m                            
[0m[1mprocess.c:3488:5: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 3488 |                   bzero((char *)kme, 8 * sizeof(*kmap_exts));[0m
      | [0;1;32m                  ^~~~~
[0m[1mprocess.c:3488:5: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 3488 |                   bzero((char *)kme, 8 * sizeof(*kmap_exts));[0m
      | [0;1;32m                  ^~~~~
[0m[1mprocess.c:3499:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3499 |               if (df == 0 && kme->dm.nr != RC_ILLEGAL)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3500 |                 used = 1;[0m
      | [0;1;32m                         
[0m[1mprocess.c:3501:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3501 |               if (mf == 0 && kme->mm.nr != RC_ILLEGAL)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3502 |                 used = 1;[0m
      | [0;1;32m                         
[0m[1mprocess.c:3503:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3503 |               if ((df || mf) && kme->um.nr != RC_ILLEGAL)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3504 |                 used = 1;[0m
      | [0;1;32m                         
[0m[1mprocess.c:3510:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3510 |               for (i = T_CAPS; i < T_OCAPS; i++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3511 |                 if (strcmp(term[i].tcname, *args) == 0)[0m
 3512 |                   break;[0m
      | [0;1;32m                        
[0m[1mprocess.c:3511:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3511 |                 if (strcmp(term[i].tcname, *args) == 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3512 |                   break;[0m
      | [0;1;32m                        
[0m[1mprocess.c:3518:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3518 |               if (af && i >= T_CURSOR && i < T_OCAPS)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3519 |                 i -=  T_CURSOR - KMAP_KEYS;[0m
 3520 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:3520:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3520 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3521 |                 i -=  T_CAPS;[0m
      | [0;1;32m                             
[0m[1mprocess.c:3531:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3531 |               if (CheckArgNum(newnr, args + 2) < 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3532 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:3537:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3537 |                   if (kme->str)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3538 |                     free(kme->str);[0m
      | [0;1;32m                                   
[0m[1mprocess.c:3543:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3543 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3544 |             ClearAction(newact);[0m
      | [0;1;32m                                
[0m[1mprocess.c:3545:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3545 |           for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 3546 |             remap(i, args[1] ? 1 : 0);[0m
      | [0;1;32m                                      
[0m[1mprocess.c:3560:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3560 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3561 |         {[0m
 3562 |           if (ParseNum(act, &n))[0m
 3563 |             break;[0m
 3564 |           if (n < 0)[0m
 3565 |             {[0m
 3566 |               OutputMsg(0, "%s: maptimeout: illegal time %d", rc_name, n);[0m
 3567 |               break;[0m
 3568 |             }[0m
 3569 |           maptimeout = n;[0m
 3570 |         }[0m
 3571 |       if (*args == 0 || msgok)[0m
 3572 |         OutputMsg(0, "maptimeout is %dms", maptimeout);[0m
 3573 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3562:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3562 |           if (ParseNum(act, &n))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3563 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3571:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3571 |       if (*args == 0 || msgok)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3572 |         OutputMsg(0, "maptimeout is %dms", maptimeout);[0m
      | [0;1;32m                                                       
[0m[1mprocess.c:3575:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3575 |       D_dontmap = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3576 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./display.h:278:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_dontmap'[0m
  278 | #define D_dontmap       DISPLAY(d_dontmap)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mprocess.c:3575:17: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_dontmap' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 3575 |       D_dontmap = 1;[0m
      | [0;1;32m                ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 106:'  at line 3574[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:3575:17: [0m[0;1;36mnote: [0mAccess to field 'd_dontmap' results in a dereference of a null pointer (loaded from variable 'display')[0m
 3575 |       D_dontmap = 1;[0m
      | [0;1;32m                ^
[0m[1mprocess.c:3578:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3578 |       D_mapdefault = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3579 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./display.h:279:22: [0m[0;1;36mnote: [0mexpanded from macro 'D_mapdefault'[0m
  279 | #define D_mapdefault    DISPLAY(d_mapdefault)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mprocess.c:3578:20: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_mapdefault' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 3578 |       D_mapdefault = 1;[0m
      | [0;1;32m                   ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 105:'  at line 3577[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:3578:20: [0m[0;1;36mnote: [0mAccess to field 'd_mapdefault' results in a dereference of a null pointer (loaded from variable 'display')[0m
 3578 |       D_mapdefault = 1;[0m
      | [0;1;32m                   ^
[0m[1mprocess.c:3587:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3587 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprocess.c:3589:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3589 |       if (UserDel(args[0], NULL))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3590 |         break;[0m
 3591 |       if (msgok)[0m
 3592 |         OutputMsg(0, "%s removed from acl database", args[0]);[0m
 3593 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3589:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3589 |       if (UserDel(args[0], NULL))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3590 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:3591:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3591 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3592 |         OutputMsg(0, "%s removed from acl database", args[0]);[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:3600:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3600 |       if (args[1])[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3604:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3604 |               if (AclLinkUser(args[0], args[1]))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3605 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:3606:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3606 |               if (msgok)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3607 |                 OutputMsg(0, "User %s joined acl-group %s", args[0], args[1]);[0m
      | [0;1;32m                                                                              
[0m[1mprocess.c:3614:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3614 |               if (!(u = *FindUserPtr(args[0])))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3615 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:3632:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3632 |               if (msgok)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3633 |                 OutputMsg(0, "User %s does not exist.", args[0]);[0m
      | [0;1;32m                                                                 
[0m[1mprocess.c:3640:8: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3640 |               sprintf(p, "%s ", g->u->u_name);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprocess.c:3640:8: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 3640 |               sprintf(p, "%s ", g->u->u_name);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprocess.c:3642:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3642 |               if (p > buf+200)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3643 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:3646:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3646 |           if (ngroups)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3647 |             *(--p) = '\0';[0m
      | [0;1;32m                          
[0m[1mprocess.c:3658:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3658 |           if (AclUmask(display ? D_user : users, s, &err))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 3659 |             OutputMsg(0, "umask: %s\n", err);[0m
      | [0;1;32m                                             
[0m[1mprocess.c:3661:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3661 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprocess.c:3663:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3663 |       if (ParseOnOff(act, &n))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3664 |         break;[0m
 3665 |       multi = n ? "" : 0;[0m
 3666 |       chsock();[0m
 3667 |       if (msgok)[0m
 3668 |         OutputMsg(0, "Multiuser mode %s", multi ? "enabled" : "disabled");[0m
 3669 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3663:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3663 |       if (ParseOnOff(act, &n))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3664 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:3667:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3667 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3668 |         OutputMsg(0, "Multiuser mode %s", multi ? "enabled" : "disabled");[0m
      | [0;1;32m                                                                          
[0m[1mprocess.c:3673:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3673 |       winexec(args);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3674 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3678:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3678 |       i = D_nonblock >= 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3678:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_nonblock' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 3678 |       i = D_nonblock >= 0;[0m
      | [0;1;32m          ^
[0m[1m./display.h:211:25: [0m[0;1;36mnote: [0mexpanded from macro 'D_nonblock'[0m
  211 | #define D_nonblock      DISPLAY(d_nonblock)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 118:'  at line 3677[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:3678:11: [0m[0;1;36mnote: [0mAccess to field 'd_nonblock' results in a dereference of a null pointer (loaded from variable 'display')[0m
 3678 |       i = D_nonblock >= 0;[0m
      | [0;1;32m          ^
[0m[1m./display.h:211:25: [0m[0;1;36mnote: [0mexpanded from macro 'D_nonblock'[0m
  211 | #define D_nonblock      DISPLAY(d_nonblock)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:3681:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3681 |           if (ParseNum1000(act, &i))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3682 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3684:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3684 |       else if (!ParseSwitch(act, &i))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3685 |         i = i == 0 ? -1 : 1000;[0m
 3686 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:3686:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3686 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3687 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:3688:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3688 |       if (msgok && i == -1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3689 |         OutputMsg(0, "display set to blocking mode");[0m
 3690 |       else if (msgok && i == 0)[0m
      | [0;32m      } 
[0m[1mprocess.c:3690:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3690 |       else if (msgok && i == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3691 |         OutputMsg(0, "display set to nonblocking mode, no timeout");[0m
 3692 |       else if (msgok)[0m
      | [0;32m      } 
[0m[1mprocess.c:3692:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3692 |       else if (msgok)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3693 |         OutputMsg(0, "display set to nonblocking mode, %.10gs timeout", i/1000.);[0m
      | [0;1;32m                                                                                 
[0m[1mprocess.c:3695:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3695 |       if (D_nonblock <= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3696 |         evdeq(&D_blockedev);[0m
      | [0;1;32m                            
[0m[1mprocess.c:3699:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3699 |       if (*args && ((args[0][0] >= '0' && args[0][0] <= '9') || args[0][0] == '.'))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3700 |         {[0m
 3701 |           if (ParseNum1000(act, &defnonblock))[0m
 3702 |             break;[0m
 3703 |         }[0m
 3704 |       else if (!ParseOnOff(act, &defnonblock))[0m
 3705 |         defnonblock = defnonblock == 0 ? -1 : 1000;[0m
 3706 |       else[0m
 3707 |         break;[0m
 3708 |       if (display && *rc_name)[0m
 3709 |         {[0m
 3710 |           D_nonblock = defnonblock;[0m
 3711 |           if (D_nonblock <= 0)[0m
 3712 |             evdeq(&D_blockedev);[0m
 3713 |         }[0m
 3714 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3701:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3701 |           if (ParseNum1000(act, &defnonblock))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3702 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3704:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3704 |       else if (!ParseOnOff(act, &defnonblock))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3705 |         defnonblock = defnonblock == 0 ? -1 : 1000;[0m
 3706 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:3706:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3706 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3707 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:3711:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3711 |           if (D_nonblock <= 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3712 |             evdeq(&D_blockedev);[0m
      | [0;1;32m                                
[0m[1mprocess.c:3718:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3718 |       if (fore->w_gr == 2)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3719 |         fore->w_gr = 0;[0m
 3720 | #endif[0m
 3721 |       if (ParseSwitch(act, &fore->w_gr) == 0 && msgok)[0m
 3722 |         OutputMsg(0, "Will %suse GR", fore->w_gr ? "" : "not ");[0m
 3723 | #ifdef ENCODINGS[0m
 3724 |       if (fore->w_gr == 0 && fore->w_FontE)[0m
 3725 |         fore->w_gr = 2;[0m
 3726 | #endif[0m
 3727 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3718:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3718 |       if (fore->w_gr == 2)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3719 |         fore->w_gr = 0;[0m
      | [0;1;32m                       
[0m[1mprocess.c:3721:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3721 |       if (ParseSwitch(act, &fore->w_gr) == 0 && msgok)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3722 |         OutputMsg(0, "Will %suse GR", fore->w_gr ? "" : "not ");[0m
      | [0;1;32m                                                                
[0m[1mprocess.c:3724:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3724 |       if (fore->w_gr == 0 && fore->w_FontE)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3725 |         fore->w_gr = 2;[0m
      | [0;1;32m                       
[0m[1mprocess.c:3729:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3729 |       if (ParseSwitch(act, &fore->w_c1) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3730 |         OutputMsg(0, "Will %suse C1", fore->w_c1 ? "" : "not ");[0m
 3731 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3729:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3729 |       if (ParseSwitch(act, &fore->w_c1) == 0 && msgok)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3730 |         OutputMsg(0, "Will %suse C1", fore->w_c1 ? "" : "not ");[0m
      | [0;1;32m                                                                
[0m[1mprocess.c:3734:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3734 |       if (ParseSwitch(act, &fore->w_bce) == 0 && msgok)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3735 |         OutputMsg(0, "Will %serase with background color", fore->w_bce ? "" : "not ");[0m
 3736 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3734:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3734 |       if (ParseSwitch(act, &fore->w_bce) == 0 && msgok)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3735 |         OutputMsg(0, "Will %serase with background color", fore->w_bce ? "" : "not ");[0m
      | [0;1;32m                                                                                      
[0m[1mprocess.c:3744:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3744 |           if (!args[1])[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3745 |             OutputMsg(0, "encodings directory is %s", screenencodings ? screenencodings : "<unset>");[0m
 3746 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:3753:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3753 |       if (*args && !strcmp(args[0], "-l"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3755:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3755 |           if (!args[1])[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3756 |             OutputMsg(0, "encoding: -l: argument required");[0m
 3757 |           else if (LoadFontTranslation(-1, args[1]))[0m
      | [0;32m          } 
[0m[1mprocess.c:3757:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3757 |           else if (LoadFontTranslation(-1, args[1]))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3758 |             OutputMsg(0, "encoding: could not load utf8 encoding file");[0m
 3759 |           else if (msgok)[0m
      | [0;32m          } 
[0m[1mprocess.c:3759:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3759 |           else if (msgok)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3760 |             OutputMsg(0, "encoding: utf8 encoding file loaded");[0m
      | [0;1;32m                                                                
[0m[1mprocess.c:3773:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3773 |           if (args[i] == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3774 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3775:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3775 |           if (!strcmp(args[i], "."))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3776 |             continue;[0m
      | [0;1;32m                     
[0m[1mprocess.c:3788:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3788 |           else if (i && display)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3789 |             D_encoding  = n;[0m
      | [0;1;32m                            
[0m[1mprocess.c:3795:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3795 |       if (n == -1)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3796 |         {[0m
 3797 |           OutputMsg(0, "defencoding: unknown encoding '%s'", *args);[0m
 3798 |           break;[0m
 3799 |         }[0m
 3800 |       nwin_default.encoding = n;[0m
 3801 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3806:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3806 |       n = nwin_default.encoding == UTF8;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3807 |       if (ParseSwitch(act, &n) == 0)[0m
 3808 |         {[0m
 3809 |           nwin_default.encoding = n ? UTF8 : 0;[0m
 3810 |           if (msgok)[0m
 3811 |             OutputMsg(0, "Will %suse UTF-8 encoding for new windows", n ? "" : "not ");[0m
 3812 |         }[0m
 3813 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3810:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3810 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3811 |             OutputMsg(0, "Will %suse UTF-8 encoding for new windows", n ? "" : "not ");[0m
      | [0;1;32m                                                                                       
[0m[1mprocess.c:3815:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3815 |       for (i = 0; i < 2; i++)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3817:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3817 |           if (i && args[i] == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3818 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3819:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3819 |           if (args[i] == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3820 |             n = fore->w_encoding != UTF8;[0m
 3821 |           else if (strcmp(args[i], "off") == 0)[0m
      | [0;32m          } 
[0m[1mprocess.c:3821:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3821 |           else if (strcmp(args[i], "off") == 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3822 |             n = 0;[0m
 3823 |           else if (strcmp(args[i], "on") == 0)[0m
      | [0;32m          } 
[0m[1mprocess.c:3823:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3823 |           else if (strcmp(args[i], "on") == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3824 |             n = 1;[0m
 3825 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:3833:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3833 |               if (msgok)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3834 |                 OutputMsg(0, "Will %suse UTF-8 encoding", n ? "" : "not ");[0m
      | [0;1;32m                                                                           
[0m[1mprocess.c:3836:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3836 |           else if (display)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3837 |             D_encoding = n ? UTF8 : 0;[0m
      | [0;1;32m                                      
[0m[1mprocess.c:3838:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3838 |           if (args[i] == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3839 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3845:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3845 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3847:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3847 |           if (printcmd)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3848 |             free(printcmd);[0m
      | [0;1;32m                           
[0m[1mprocess.c:3850:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3850 |           if (**args)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3851 |             printcmd = SaveStr(*args);[0m
      | [0;1;32m                                      
[0m[1mprocess.c:3855:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3855 |           if (printcmd)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3856 |             OutputMsg(0, "using '%s' as print command", printcmd);[0m
 3857 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:3857:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3857 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3858 |             OutputMsg(0, "using termcap entries for printing");[0m
      | [0;1;32m                                                               
[0m[1mprocess.c:3864:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3864 |       if (argl && argl[0] > 0 && args[1] && argl[1] > 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3878:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3878 |                   if (!args[1][1])[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3879 |                     digraphs[i].value = (int)args[1][0];[0m
 3880 | #ifdef UTF8[0m
 3881 |                   else[0m
      | [0;32m                  } 
[0m[1mprocess.c:3889:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3889 |                           if (t == -1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3890 |                             continue;[0m
      | [0;1;32m                                     
[0m[1mprocess.c:3891:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3891 |                           if (t == -2)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3892 |                             digraphs[i].value = 0;[0m
 3893 |                           else[0m
      | [0;32m                          } 
[0m[1mprocess.c:3893:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3893 |                           else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3894 |                             digraphs[i].value = t;[0m
      | [0;1;32m                                                  
[0m[1mprocess.c:3913:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3913 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3914 |         {[0m
 3915 |           char buf[256];[0m
 3916 |           *buf = 0;[0m
 3917 |           if (nwin_default.hstatus)[0m
 3918 |             AddXChars(buf, sizeof(buf), nwin_default.hstatus);[0m
 3919 |           OutputMsg(0, "default hstatus is '%s'", buf);[0m
 3920 |           break;[0m
 3921 |         }[0m
 3922 |       (void)ParseSaveStr(act, &nwin_default.hstatus);[0m
 3923 |       if (*nwin_default.hstatus == 0)[0m
 3924 |         {[0m
 3925 |           free(nwin_default.hstatus);[0m
 3926 |           nwin_default.hstatus = 0;[0m
 3927 |         }[0m
 3928 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3917:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3917 |           if (nwin_default.hstatus)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3918 |             AddXChars(buf, sizeof(buf), nwin_default.hstatus);[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:3930:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3930 |       (void)ParseSaveStr(act, &fore->w_hstatus);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3931 |       if (*fore->w_hstatus == 0)[0m
 3932 |         {[0m
 3933 |           free(fore->w_hstatus);[0m
 3934 |           fore->w_hstatus = 0;[0m
 3935 |         }[0m
 3936 |       WindowChanged(fore, 'h');[0m
 3937 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:3946:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3946 |           if (nwin_default.charset)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3947 |             AddXChars(buf, sizeof(buf), nwin_default.charset);[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:3951:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3951 |       n = strlen(*args);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3969:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3969 |       if (nwin_default.charset)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3970 |         free(nwin_default.charset);[0m
      | [0;1;32m                                   
[0m[1mprocess.c:3976:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3976 |       s = args[0];[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:3977:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3977 |       if (*s >= '0' && *s <= '9')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3978 |         i = *s - '0';[0m
 3979 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:3979:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3979 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3980 |         for (i = 0; i < 8; i++)[0m
 3981 |           if (*s == "dubrsBiI"[i])[0m
 3982 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3980:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3980 |         for (i = 0; i < 8; i++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3981 |           if (*s == "dubrsBiI"[i])[0m
 3982 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3981:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3981 |           if (*s == "dubrsBiI"[i])[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3982 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:3987:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3987 |           if (*s == 'd' && s[1] == 'd')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3988 |             nr = 3;[0m
 3989 |           else if (*s == '.' && s[1] == 'd')[0m
      | [0;32m          } 
[0m[1mprocess.c:3989:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3989 |           else if (*s == '.' && s[1] == 'd')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3990 |             nr = 2;[0m
 3991 |           else if (*s == 'd' && s[1] == '.')[0m
      | [0;32m          } 
[0m[1mprocess.c:3991:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3991 |           else if (*s == 'd' && s[1] == '.')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3992 |             nr = 1;[0m
 3993 |           else if (*s != '.' || s[1] != '.')[0m
      | [0;32m          } 
[0m[1mprocess.c:3993:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3993 |           else if (*s != '.' || s[1] != '.')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3994 |             s--;[0m
      | [0;1;32m                
[0m[1mprocess.c:4003:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4003 |       if (args[1])[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4004 |         n = ParseAttrColor(args[1], args[2], 1);[0m
      | [0;1;32m                                                
[0m[1mprocess.c:4005:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4005 |       if (n == -1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4006 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:4009:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4009 |       for (i = 0; i < 8; i++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 4010 |         if (attr2color[i][0] || attr2color[i][1] || attr2color[i][2] || attr2color[i][3])[0m
 4011 |           n |= 1 << i;[0m
      | [0;1;32m                      
[0m[1mprocess.c:4010:83: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4010 |         if (attr2color[i][0] || attr2color[i][1] || attr2color[i][2] || attr2color[i][3])[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m 4011 |           n |= 1 << i;[0m
      | [0;1;32m                      
[0m[1mprocess.c:4016:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4016 |       i = -1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4050:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4050 |       i = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4054:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4054 |           if (i == -1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4055 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:4060:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4060 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 4061 | #ifdef COLOR[0m
 4062 |         OutputMsg(0, "Standout attributes 0x%02x  color 0x%02x", (unsigned char)mchar_so.attr, 0x99 ^ (unsigned char)mchar_so.color);[0m
      | [0;1;32m                                                                                                                                     
[0m[1mprocess.c:4069:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4069 |         do_source(*args);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 4070 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprocess.c:4074:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4074 |       s = NULL;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4075 |       if (!*args)[0m
 4076 |         {[0m
 4077 |           OutputMsg(0, "%s:%s screen login", HostName, SockPath);[0m
 4078 |           InputSu(D_fore, &D_user, NULL);[0m
 4079 |         }[0m
 4080 |       else if (!args[1])[0m
 4081 |         InputSu(D_fore, &D_user, args[0]);[0m
 4082 |       else if (!args[2])[0m
 4083 |         s = DoSu(&D_user, args[0], args[1], "\377");[0m
 4084 |       else[0m
 4085 |         s = DoSu(&D_user, args[0], args[1], args[2]);[0m
 4086 |       if (s)[0m
 4087 |         OutputMsg(0, "%s", s);[0m
 4088 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4080:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4080 |       else if (!args[1])[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 4081 |         InputSu(D_fore, &D_user, args[0]);[0m
 4082 |       else if (!args[2])[0m
      | [0;32m      } 
[0m[1mprocess.c:4081:17: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_fore' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4081 |         InputSu(D_fore, &D_user, args[0]);[0m
      | [0;1;32m                ^
[0m[1m./display.h:209:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_fore'[0m
  209 | #define D_fore          DISPLAY(d_fore)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mCalling 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1045:15: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1047[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1047:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1047:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1049:11: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'n'[0m
 1049 |       if (i < n)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1049:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1049 |       if (i < n)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mReturning from 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 161:'  at line 4073[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4075:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4075 |       if (!*args)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:4080:12: [0m[0;1;36mnote: [0mTaking true branch[0m
 4080 |       else if (!args[1])[0m
      | [0;1;32m           ^
[0m[1mprocess.c:4081:17: [0m[0;1;36mnote: [0mAccess to field 'd_fore' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4081 |         InputSu(D_fore, &D_user, args[0]);[0m
      | [0;1;32m                ^
[0m[1m./display.h:209:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_fore'[0m
  209 | #define D_fore          DISPLAY(d_fore)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4082:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4082 |       else if (!args[2])[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 4083 |         s = DoSu(&D_user, args[0], args[1], "\377");[0m
 4084 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:4084:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4084 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4085 |         s = DoSu(&D_user, args[0], args[1], args[2]);[0m
      | [0;1;32m                                                     
[0m[1mprocess.c:4086:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4086 |       if (s)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 4087 |         OutputMsg(0, "%s", s);[0m
      | [0;1;32m                              
[0m[1mprocess.c:4091:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4091 |       s = args[0];[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4092 |       if (s && !strcmp(s, "-v"))[0m
 4093 |         AddCanvas(SLICE_HORI);[0m
 4094 |       else[0m
 4095 |         AddCanvas(SLICE_VERT);[0m
 4096 |       Activate(-1);[0m
 4097 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4092:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4092 |       if (s && !strcmp(s, "-v"))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 4093 |         AddCanvas(SLICE_HORI);[0m
 4094 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:4094:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4094 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4095 |         AddCanvas(SLICE_VERT);[0m
      | [0;1;32m                              
[0m[1mprocess.c:4099:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4099 |       RemCanvas();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4100 |       Activate(-1);[0m
 4101 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4103:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4103 |       OneCanvas();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4104 |       Activate(-1);[0m
 4105 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4107:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4107 |       D_forecv->c_xoff = D_forecv->c_xs;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4108 |       D_forecv->c_yoff = D_forecv->c_ys;[0m
 4109 |       RethinkViewportOffsets(D_forecv);[0m
 4110 |       ResizeLayer(D_forecv->c_layer, D_forecv->c_xe - D_forecv->c_xs + 1, D_forecv->c_ye - D_forecv->c_ys + 1, 0);[0m
 4111 |       flayer = D_forecv->c_layer;[0m
 4112 |       LaySetCursor();[0m
 4113 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mprocess.c:4107:26: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4107 |       D_forecv->c_xoff = D_forecv->c_xs;[0m
      | [0;1;32m                         ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 78:'  at line 4106[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4107:26: [0m[0;1;36mnote: [0mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4107 |       D_forecv->c_xoff = D_forecv->c_xs;[0m
      | [0;1;32m                         ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4115:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4115 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4117:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 4118 |           cv = D_forecv->c_next ? D_forecv->c_next : D_cvlist;[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;32m        } 
[0m[1mprocess.c:4118:9: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4118 |           cv = D_forecv->c_next ? D_forecv->c_next : D_cvlist;[0m
      | [0;1;32m               ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 80:'  at line 4114[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4117:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                   ^
[0m[1mprocess.c:4118:9: [0m[0;1;36mnote: [0mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4118 |           cv = D_forecv->c_next ? D_forecv->c_next : D_cvlist;[0m
      | [0;1;32m               ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4121:16: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_cvlist' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4121 |             for (cv = D_cvlist; cv->c_next && cv->c_next != D_forecv; cv = cv->c_next)[0m
      | [0;1;32m                      ^
[0m[1m./display.h:202:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_cvlist'[0m
  202 | #define D_cvlist        DISPLAY(d_cvlist)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 80:'  at line 4114[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4117:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m            ^
[0m[1mprocess.c:4117:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4117:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m        ^
[0m[1mprocess.c:4119:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4121:16: [0m[0;1;36mnote: [0mAccess to field 'd_cvlist' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4121 |             for (cv = D_cvlist; cv->c_next && cv->c_next != D_forecv; cv = cv->c_next)[0m
      | [0;1;32m                      ^
[0m[1m./display.h:202:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_cvlist'[0m
  202 | #define D_cvlist        DISPLAY(d_cvlist)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4121:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4121 |             for (cv = D_cvlist; cv->c_next && cv->c_next != D_forecv; cv = cv->c_next)[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m 4122 |               ;[0m
      | [0;1;32m               
[0m[1mprocess.c:4124:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 4125 |           cv = D_cvlist;[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;32m        } 
[0m[1mprocess.c:4125:9: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_cvlist' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4125 |           cv = D_cvlist;[0m
      | [0;1;32m               ^
[0m[1m./display.h:202:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_cvlist'[0m
  202 | #define D_cvlist        DISPLAY(d_cvlist)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 80:'  at line 4114[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4117:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m            ^
[0m[1mprocess.c:4117:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4117:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m        ^
[0m[1mprocess.c:4119:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4119:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4124:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4125:9: [0m[0;1;36mnote: [0mAccess to field 'd_cvlist' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4125 |           cv = D_cvlist;[0m
      | [0;1;32m               ^
[0m[1m./display.h:202:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_cvlist'[0m
  202 | #define D_cvlist        DISPLAY(d_cvlist)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4128:16: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_cvlist' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4128 |             for (cv = D_cvlist; cv->c_next; cv = cv->c_next)[0m
      | [0;1;32m                      ^
[0m[1m./display.h:202:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_cvlist'[0m
  202 | #define D_cvlist        DISPLAY(d_cvlist)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 80:'  at line 4114[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4117:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m            ^
[0m[1mprocess.c:4117:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4117:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m        ^
[0m[1mprocess.c:4119:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4119:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4124:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4124:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4126:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4128:16: [0m[0;1;36mnote: [0mAccess to field 'd_cvlist' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4128 |             for (cv = D_cvlist; cv->c_next; cv = cv->c_next)[0m
      | [0;1;32m                      ^
[0m[1m./display.h:202:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_cvlist'[0m
  202 | #define D_cvlist        DISPLAY(d_cvlist)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4128:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4128 |             for (cv = D_cvlist; cv->c_next; cv = cv->c_next)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 4129 |               ;[0m
      | [0;1;32m               
[0m[1mprocess.c:4131:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4131 |         else if (!strcmp(*args, "up"))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 4132 |           cv = FindCanvas(D_forecv->c_xs, D_forecv->c_ys - 1);[0m
 4133 |         else if (!strcmp(*args, "down"))[0m
      | [0;32m        } 
[0m[1mprocess.c:4132:20: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4132 |           cv = FindCanvas(D_forecv->c_xs, D_forecv->c_ys - 1);[0m
      | [0;1;32m                          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 80:'  at line 4114[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4117:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m            ^
[0m[1mprocess.c:4117:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4117:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m        ^
[0m[1mprocess.c:4119:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4119:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4124:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4124:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4126:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4126:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4131:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4131 |         else if (!strcmp(*args, "up"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4132:20: [0m[0;1;36mnote: [0mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4132 |           cv = FindCanvas(D_forecv->c_xs, D_forecv->c_ys - 1);[0m
      | [0;1;32m                          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4133:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4133 |         else if (!strcmp(*args, "down"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4134 |           cv = FindCanvas(D_forecv->c_xs, D_forecv->c_ye + 2);[0m
 4135 |         else if (!strcmp(*args, "left"))[0m
      | [0;32m        } 
[0m[1mprocess.c:4134:20: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4134 |           cv = FindCanvas(D_forecv->c_xs, D_forecv->c_ye + 2);[0m
      | [0;1;32m                          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 80:'  at line 4114[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4117:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m            ^
[0m[1mprocess.c:4117:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4117:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m        ^
[0m[1mprocess.c:4119:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4119:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4124:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4124:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4126:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4126:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4131:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4131 |         else if (!strcmp(*args, "up"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4131:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4131 |         else if (!strcmp(*args, "up"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4133:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4133 |         else if (!strcmp(*args, "down"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4134:20: [0m[0;1;36mnote: [0mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4134 |           cv = FindCanvas(D_forecv->c_xs, D_forecv->c_ye + 2);[0m
      | [0;1;32m                          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4135:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4135 |         else if (!strcmp(*args, "left"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4136 |           cv = FindCanvas(D_forecv->c_xs - 1, D_forecv->c_ys);[0m
 4137 |         else if (!strcmp(*args, "right"))[0m
      | [0;32m        } 
[0m[1mprocess.c:4136:20: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4136 |           cv = FindCanvas(D_forecv->c_xs - 1, D_forecv->c_ys);[0m
      | [0;1;32m                          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 80:'  at line 4114[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4117:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m            ^
[0m[1mprocess.c:4117:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4117:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m        ^
[0m[1mprocess.c:4119:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4119:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4124:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4124:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4126:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4126:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4131:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4131 |         else if (!strcmp(*args, "up"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4131:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4131 |         else if (!strcmp(*args, "up"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4133:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4133 |         else if (!strcmp(*args, "down"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4133:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4133 |         else if (!strcmp(*args, "down"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4135:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4135 |         else if (!strcmp(*args, "left"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4136:20: [0m[0;1;36mnote: [0mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4136 |           cv = FindCanvas(D_forecv->c_xs - 1, D_forecv->c_ys);[0m
      | [0;1;32m                          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4137:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4137 |         else if (!strcmp(*args, "right"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 4138 |           cv = FindCanvas(D_forecv->c_xe + 1, D_forecv->c_ys);[0m
 4139 |         else[0m
      | [0;32m        } 
[0m[1mprocess.c:4138:20: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4138 |           cv = FindCanvas(D_forecv->c_xe + 1, D_forecv->c_ys);[0m
      | [0;1;32m                          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 80:'  at line 4114[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4117:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m            ^
[0m[1mprocess.c:4117:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4117:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 4117 |         if (!*args || !strcmp(*args, "next"))[0m
      | [0;1;32m        ^
[0m[1mprocess.c:4119:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4119:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4119 |         else if (!strcmp(*args, "prev"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4124:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4124:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4124 |         else if (!strcmp(*args, "top"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4126:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4126:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4126 |         else if (!strcmp(*args, "bottom"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4131:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4131 |         else if (!strcmp(*args, "up"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4131:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4131 |         else if (!strcmp(*args, "up"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4133:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4133 |         else if (!strcmp(*args, "down"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4133:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4133 |         else if (!strcmp(*args, "down"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4135:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 4135 |         else if (!strcmp(*args, "left"))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4135:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 4135 |         else if (!strcmp(*args, "left"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4137:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4137 |         else if (!strcmp(*args, "right"))[0m
      | [0;1;32m             ^
[0m[1mprocess.c:4138:20: [0m[0;1;36mnote: [0mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4138 |           cv = FindCanvas(D_forecv->c_xe + 1, D_forecv->c_ys);[0m
      | [0;1;32m                          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4148:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4148 |       i = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4149:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 4149 |       if (D_forecv->c_slorient == SLICE_UNKN)[0m
      | [0;1;32m          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 142:'  at line 4147[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4149:11: [0m[0;1;36mnote: [0mAccess to field 'd_forecv' results in a dereference of a null pointer (loaded from variable 'display')[0m
 4149 |       if (D_forecv->c_slorient == SLICE_UNKN)[0m
      | [0;1;32m          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4156:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4156 |           if (!strcmp(*args, "-h"))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 4157 |             i |= RESIZE_FLAG_H;[0m
 4158 |           else if (!strcmp(*args, "-v"))[0m
      | [0;32m          } 
[0m[1mprocess.c:4158:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4158 |           else if (!strcmp(*args, "-v"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4159 |             i |= RESIZE_FLAG_V;[0m
 4160 |           else if (!strcmp(*args, "-b"))[0m
      | [0;32m          } 
[0m[1mprocess.c:4160:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4160 |           else if (!strcmp(*args, "-b"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4161 |             i |= RESIZE_FLAG_H | RESIZE_FLAG_V;[0m
 4162 |           else if (!strcmp(*args, "-p"))[0m
      | [0;32m          } 
[0m[1mprocess.c:4162:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4162 |           else if (!strcmp(*args, "-p"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4163 |             i |= D_forecv->c_slorient == SLICE_VERT ? RESIZE_FLAG_H : RESIZE_FLAG_V;[0m
 4164 |           else if (!strcmp(*args, "-l"))[0m
      | [0;32m          } 
[0m[1mprocess.c:4164:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4164 |           else if (!strcmp(*args, "-l"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4165 |             i |= RESIZE_FLAG_L;[0m
 4166 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4166:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4166 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4167 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:4174:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4174 |       if (*args)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 4175 |         ResizeRegions(*args, i);[0m
 4176 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:4176:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4176 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4177 |         Input(resizeprompts[i], 20, INP_EVERY, ResizeFin, (char*)0, i);[0m
      | [0;1;32m                                                                       
[0m[1mprocess.c:4180:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4180 |       (void)ParseSwitch(act, &separate_sids);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4181 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4183:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4183 |       args = SaveArgs(args);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4184 |       for (i = 0; args[i]; i++)[0m
 4185 |         {[0m
 4186 |           if (args[i][0])[0m
 4187 |             Colonfin(args[i], strlen(args[i]), (char *)0);[0m
 4188 |           free(args[i]);[0m
 4189 |         }[0m
 4190 |       free(args);[0m
 4191 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4186:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4186 |           if (args[i][0])[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 4187 |             Colonfin(args[i], strlen(args[i]), (char *)0);[0m
      | [0;1;32m                                                          
[0m[1mprocess.c:4193:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4193 |       (void)ParseSwitch(act, &use_altscreen);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4194 |       if (msgok)[0m
 4195 |         OutputMsg(0, "Will %sdo alternate screen switching", use_altscreen ? "" : "not ");[0m
 4196 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4194:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4194 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 4195 |         OutputMsg(0, "Will %sdo alternate screen switching", use_altscreen ? "" : "not ");[0m
      | [0;1;32m                                                                                          
[0m[1mprocess.c:4198:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4198 |       if (!args[0])[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4203:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4203 |       if (ParseNum(act, &n))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 4204 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:4205:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4205 |       if (n < 1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 4206 |         OutputMsg(0, "illegal maxwin number specified");[0m
 4207 |       else if (n > 2048)[0m
      | [0;32m      } 
[0m[1mprocess.c:4207:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4207 |       else if (n > 2048)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 4208 |         OutputMsg(0, "maximum 2048 windows allowed");[0m
 4209 |       else if (n > maxwin && windows)[0m
      | [0;32m      } 
[0m[1mprocess.c:4209:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4209 |       else if (n > maxwin && windows)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 4210 |         OutputMsg(0, "may increase maxwin only when there's no window");[0m
 4211 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:4216:15: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 4216 |               bzero(wtab, n * sizeof(struct win *));[0m
      | [0;1;32m              ^~~~~
[0m[1mprocess.c:4216:15: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 4216 |               bzero(wtab, n * sizeof(struct win *));[0m
      | [0;1;32m              ^~~~~
[0m[1mprocess.c:4222:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4222 |       if (ParseBase(act, *args, &n, 10, "decimal"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4222:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4222 |       if (ParseBase(act, *args, &n, 10, "decimal"))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 4223 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:4224:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4224 |       if (!args[1])[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 4225 |         setbacktick(n, 0, 0, (char **)0);[0m
 4226 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:4234:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4234 |           if (ParseBase(act, args[1], &lifespan, 10, "decimal"))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 4235 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:4236:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4236 |           if (ParseBase(act, args[2], &tick, 10, "decimal"))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 4237 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:4244:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4244 |       if (blankerprg)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4245 |         {[0m
 4246 |           RunBlanker(blankerprg);[0m
 4247 |           break;[0m
 4248 |         }[0m
 4249 | #endif[0m
 4250 |       ClearAll();[0m
 4251 |       CursorVisibility(-1);[0m
 4252 |       D_blocked = 4;[0m
 4253 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4256:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4256 |       if (!args[0])[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4262:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4262 |               for (pp = blankerprg; *pp; pp++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 4263 |                 p += snprintf(p, sizeof(path) - (p - path) - 1, "%s ", *pp);[0m
      | [0;1;32m                                                                            
[0m[1mprocess.c:4263:8: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4263 |                 p += snprintf(p, sizeof(path) - (p - path) - 1, "%s ", *pp);[0m
      | [0;1;32m                     ^~~~~~~~
[0m[1mprocess.c:4263:8: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 4263 |                 p += snprintf(p, sizeof(path) - (p - path) - 1, "%s ", *pp);[0m
      | [0;1;32m                     ^~~~~~~~
[0m[1mprocess.c:4264:8: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding 'path' [clang-analyzer-security.ArrayBound][0m
 4264 |               *(p - 1) = '\0';[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 20:'  at line 4255[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4256:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4256 |       if (!args[0])[0m
      | [0;1;32m      ^
[0m[1mprocess.c:4258:8: [0m[0;1;36mnote: [0mAssuming 'blankerprg' is non-null[0m
 4258 |           if (blankerprg)[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mprocess.c:4258:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 4258 |           if (blankerprg)[0m
      | [0;1;32m          ^
[0m[1mprocess.c:4262:8: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 4264[0m
 4262 |               for (pp = blankerprg; *pp; pp++)[0m
      | [0;1;32m              ^
[0m[1mprocess.c:4264:8: [0m[0;1;36mnote: [0mAccess of 'path' at negative byte offset -1[0m
 4264 |               *(p - 1) = '\0';[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mprocess.c:4267:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4267 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4268 |             OutputMsg(0, "No blankerprg set.");[0m
      | [0;1;32m                                               
[0m[1mprocess.c:4274:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4274 |           for (pp = blankerprg; *pp; pp++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 4275 |             free(*pp);[0m
      | [0;1;32m                      
[0m[1mprocess.c:4279:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4279 |       if (args[0][0])[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 4280 |         blankerprg = SaveArgs(args);[0m
      | [0;1;32m                                    
[0m[1mprocess.c:4284:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4284 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4287:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4287 |           if (!strcmp(*args, "off"))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 4288 |             idletimo = 0;[0m
 4289 |           else if (args[0][0])[0m
      | [0;32m          } 
[0m[1mprocess.c:4289:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4289 |           else if (args[0][0])[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4290 |             idletimo = atoi(*args) * 1000;[0m
      | [0;1;32m                                          
[0m[1mprocess.c:4298:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4298 |               if (CheckArgNum(i, args + 2) < 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 4299 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:4303:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4303 |           for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 4304 |             ResetIdle();[0m
      | [0;1;32m                        
[0m[1mprocess.c:4309:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4309 |           if (idletimo)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 4310 |             OutputMsg(0, "idle timeout %ds, %s", idletimo / 1000, comms[idleaction.nr].name);[0m
 4311 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4311:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4311 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4312 |             OutputMsg(0, "idle off");[0m
      | [0;1;32m                                     
[0m[1mprocess.c:4316:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4316 |       for (i = 0; i < 2 && args[i]; i++)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4318:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4318 |           if (!strcmp(args[i], "max") || !strcmp(args[i], "_"))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 4319 |             n = -1;[0m
 4320 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4320:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4320 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4321 |             n = atoi(args[i]);[0m
      | [0;1;32m                              
[0m[1mprocess.c:4322:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4322 |           if (i == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 4323 |             focusminwidth = n;[0m
 4324 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4324:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4324 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4325 |             focusminheight = n;[0m
      | [0;1;32m                               
[0m[1mprocess.c:4333:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4333 |               if (n == -1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 4334 |                 strcpy(b[i], "max");[0m
 4335 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:4335:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4335 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4336 |                 sprintf(b[i], "%d", n);[0m
      | [0;1;32m                                       
[0m[1mprocess.c:4336:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4336 |                 sprintf(b[i], "%d", n);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprocess.c:4336:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 4336 |                 sprintf(b[i], "%d", n);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprocess.c:4342:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4342 |       if (*args)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4348:94: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4348 |               if (fore->w_group == fore || (fore->w_group && fore->w_group->w_type != W_TYPE_GROUP))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 4349 |                 fore->w_group = 0;[0m
      | [0;1;32m                                  
[0m[1mprocess.c:4357:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4357 |           if (fore->w_group)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 4358 |             OutputMsg(0, "window group is %d (%s)\n", fore->w_group->w_number, fore->w_group->w_title);[0m
 4359 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4359:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4359 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4360 |             OutputMsg(0, "window belongs to no group");[0m
      | [0;1;32m                                                       
[0m[1mprocess.c:4367:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4367 |       if (!strcmp(args[0], "title"))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprocess.c:4371:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4371 |               if (!args[1])  // There is no display, and there is no new title. Ignore.[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 4372 |                 break;[0m
      | [0;1;32m                      
[0m[1mprocess.c:4373:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4373 |               if (!layout_attach || layout_attach == &layout_last_marker)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 4374 |                 layout_attach = CreateLayout(args[1], 0);[0m
 4375 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:4375:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4375 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4376 |                 RenameLayout(layout_attach, args[1]);[0m
      | [0;1;32m                                                     
[0m[1mprocess.c:4396:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4396 |               if (args[1] && layout_attach && layout_attach != &layout_last_marker)[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 4397 |                 RenumberLayout(layout_attach, atoi(args[1]));[0m
      | [0;1;32m                                                             
[0m[1mprocess.c:4420:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4420 |                   if (!strcmp(args[1], "on"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 4421 |                     layout_attach->lay_autosave = 1;[0m
 4422 |                   else if (!strcmp(args[1], "off"))[0m
      | [0;32m                  } 
[0m[1mprocess.c:4422:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4422 |                   else if (!strcmp(args[1], "off"))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 4423 |                     layout_attach->lay_autosave = 0;[0m
      | [0;1;32m                                                    
[0m[1mprocess.c:4435:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4435 |               if (!strcmp(args[1], "on"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 4436 |                 D_layout->lay_autosave = 1;[0m
 4437 |               else if (!strcmp(args[1], "off"))[0m
      | [0;32m              } 
[0m[1mprocess.c:4437:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4437 |               else if (!strcmp(args[1], "off"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 4438 |                 D_layout->lay_autosave = 0;[0m
 4439 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:4445:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4445 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 4446 |             OutputMsg(0, "autosave is %s", D_layout->lay_autosave ? "on" : "off");[0m
      | [0;1;32m                                                                                  
[0m[1mprocess.c:4454:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4454 |               while (*t >= '0' && *t <= '9')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 4455 |                 t++;[0m
      | [0;1;32m                    
[0m[1mprocess.c:4459:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4459 |                   if (*t)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 4460 |                     t++;[0m
      | [0;1;32m                        
[0m[1mprocess.c:4462:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4462 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4463 |                 t = args[1];[0m
      | [0;1;32m                            
[0m[1mprocess.c:4465:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4465 |           if (!t || !*t)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 4466 |             t = "layout";[0m
      | [0;1;32m                         
[0m[1mprocess.c:4477:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4477 |           if (display)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4478 |             SaveLayout(args[1], &D_canvas);[0m
      | [0;1;32m                                           
[0m[1mprocess.c:4484:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4484 |               if (args[1])[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 4485 |                 layout_attach = FindLayout(args[1]);[0m
      | [0;1;32m                                                    
[0m[1mprocess.c:4499:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4499 |               if (layout_attach && layout_attach != &layout_last_marker)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 4500 |                 layout_attach = layout_attach->lay_next ? layout_attach->lay_next : layouts;;[0m
      | [0;1;32m                                                                                            
[0m[1mprocess.c:4504:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4504 |           if (lay)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4505 |             lay = lay->lay_next ? lay->lay_next : layouts;[0m
 4506 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4506:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4506 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4507 |             lay = layouts;[0m
      | [0;1;32m                          
[0m[1mprocess.c:4513:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4513 |           if (lay == D_layout)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4514 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:4524:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4524 |               for (lay = layouts; lay->lay_next && lay->lay_next != target; lay = lay->lay_next)[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m 4525 |                 ;[0m
      | [0;1;32m                 
[0m[1mprocess.c:4527:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4527 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4528 |             lay = layouts;[0m
      | [0;1;32m                          
[0m[1mprocess.c:4541:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4541 |           if (lay == D_layout)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4542 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:4550:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4550 |               if (!layout_attach)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 4551 |                 OutputMsg(0, "no attach layout set");[0m
 4552 |               else if (layout_attach == &layout_last_marker)[0m
      | [0;32m              } 
[0m[1mprocess.c:4552:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4552 |               else if (layout_attach == &layout_last_marker)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 4553 |                 OutputMsg(0, "will attach to last layout");[0m
 4554 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:4554:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4554 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4555 |                 OutputMsg(0, "will attach to layout %d (%s)", layout_attach->lay_number, layout_attach->lay_title);[0m
      | [0;1;32m                                                                                                                   
[0m[1mprocess.c:4558:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4558 |           if (!strcmp(args[1], ":last"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4559 |             layout_attach = &layout_last_marker;[0m
 4560 |           else if (!args[1][0])[0m
      | [0;32m          } 
[0m[1mprocess.c:4560:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4560 |           else if (!args[1][0])[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 4561 |             layout_attach = 0;[0m
 4562 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4590:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4590 |           if (lay)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4591 |             RemoveLayout(lay);[0m
      | [0;1;32m                              
[0m[1mprocess.c:4595:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4595 |           if (!display)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 4596 |             OutputMsg(0, "Must have a display for 'layout dump'.");[0m
 4597 |           else if (!LayoutDumpCanvas(&D_canvas, args[1] ? args[1] : "layout-dump"))[0m
      | [0;32m          } 
[0m[1mprocess.c:4597:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4597 |           else if (!LayoutDumpCanvas(&D_canvas, args[1] ? args[1] : "layout-dump"))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 4598 |             OutputMsg(errno, "Error dumping layout.");[0m
 4599 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4599:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4599 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4600 |             OutputMsg(0, "Layout dumped to \"%s\"", args[1] ? args[1] : "layout-dump");[0m
      | [0;1;32m                                                                                       
[0m[1mprocess.c:4602:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4602 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4603 |         OutputMsg(0, "unknown layout subcommand");[0m
      | [0;1;32m                                                  
[0m[1mprocess.c:4607:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4607 |       if(ParseSwitch(act, &cjkwidth) == 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 4608 |       {[0m
 4609 |         if(msgok)[0m
 4610 |           OutputMsg(0, "Treat ambiguous width characters as %s width", cjkwidth ? "full" : "half");[0m
 4611 |       }[0m
 4612 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprocess.c:4609:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4609 |         if(msgok)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 4610 |           OutputMsg(0, "Treat ambiguous width characters as %s width", cjkwidth ? "full" : "half");[0m
      | [0;1;32m                                                                                                   
[0m[1mprocess.c:4619:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4619 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprocess.c:4623:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4623 |       for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 4624 |         if (display == odisplay)[0m
 4625 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:4624:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4624 |         if (display == odisplay)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 4625 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:4636:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4636 |   for (pos = 1; pos < MAXWIN; pos++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 4637 |     if (wtab[pos])[0m
 4638 |       for (; moveto < pos; moveto++)[0m
 4639 |         if (!wtab[moveto])[0m
 4640 |           {[0m
 4641 |           WindowChangeNumber(pos, moveto);[0m
 4642 |           break;[0m
 4643 |           }[0m
      | [0;1;32m           
[0m[1mprocess.c:4637:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4637 |     if (wtab[pos])[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4638 |       for (; moveto < pos; moveto++)[0m
 4639 |         if (!wtab[moveto])[0m
 4640 |           {[0m
 4641 |           WindowChangeNumber(pos, moveto);[0m
 4642 |           break;[0m
 4643 |           }[0m
      | [0;1;32m           
[0m[1mprocess.c:4638:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4638 |       for (; moveto < pos; moveto++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 4639 |         if (!wtab[moveto])[0m
 4640 |           {[0m
 4641 |           WindowChangeNumber(pos, moveto);[0m
 4642 |           break;[0m
 4643 |           }[0m
      | [0;1;32m           
[0m[1mprocess.c:4647:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 4647 | DoCommand(argv, argl) [0m
      | [0;1;32m^
[0m[1mprocess.c:4658:7: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'cmd') [clang-analyzer-core.NullDereference][0m
 4658 |   if (*cmd == '@')      /* Suppress error */[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 9:'  at line 1507[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1509:11: [0m[0;1;36mnote: [0mAssuming 'user' is non-null[0m
 1509 |       if (!user)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1509:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1509 |       if (!user)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1519:11: [0m[0;1;36mnote: [0mAssuming 'n' is 0[0m
 1519 |       if (n) n--;[0m
      | [0;1;32m          ^
[0m[1mprocess.c:1519:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1519 |       if (n) n--;[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1525:7: [0m[0;1;36mnote: [0mControl jumps to 'case 37:'  at line 1570[0m
 1525 |       switch (args[0][n])[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1574:6: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1574 |             debug1("at display matching '%s'\n", args[0]);[0m
      | [0;1;32m            ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1575:6: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1575 |             for (display = displays; display; display = nd)[0m
      | [0;1;32m            ^
[0m[1mprocess.c:1578:7: [0m[0;1;36mnote: [0mAssuming field 'd_forecv' is not equal to null[0m
 1578 |                 if (D_forecv == 0)[0m
      | [0;1;32m                    ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mprocess.c:1578:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1578 |                 if (D_forecv == 0)[0m
      | [0;1;32m                ^
[0m[1mprocess.c:1582:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1582 |                 if (strncmp(args[0], D_usertty, n) && [0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1582:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1582 |                 if (strncmp(args[0], D_usertty, n) && [0m
      | [0;1;32m                                                   ^
[0m[1mprocess.c:1588:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1588 |                 debug1("AT display %s\n", D_usertty);[0m
      | [0;1;32m                ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1589:3: [0m[0;1;36mnote: [0mCalling 'DoCommand'[0m
 1589 |                 DoCommand(args + 1, argl + 1);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4652:3: [0m[0;1;36mnote: [0m'cmd' initialized to a null pointer value[0m
 4652 |   const char *cmd = *argv;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1mprocess.c:4658:7: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'cmd')[0m
 4658 |   if (*cmd == '@')      /* Suppress error */[0m
      | [0;1;32m      ^~~~
[0m[1mprocess.c:4680:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 4680 | SaveAction(act, nr, args, argl)[0m
      | [0;1;32m^
[0m[1mprocess.c:4690:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4690 |   if (args)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 4691 |     while (args[argc])[0m
 4692 |       argc++;[0m
      | [0;1;32m             
[0m[1mprocess.c:4691:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4691 |     while (args[argc])[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4692 |       argc++;[0m
      | [0;1;32m             
[0m[1mprocess.c:4700:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4700 |   if ((pp = (char **)malloc((unsigned)(argc + 1) * sizeof(char *))) == 0)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 4701 |     Panic(0, "%s", strnomem);[0m
      | [0;1;32m                             
[0m[1mprocess.c:4702:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4702 |   if ((lp = (int *)malloc((unsigned)(argc) * sizeof(int))) == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 4703 |     Panic(0, "%s", strnomem);[0m
      | [0;1;32m                             
[0m[1mprocess.c:4716:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 4716 | SaveArgs(args)[0m
      | [0;1;32m^
[0m[1mprocess.c:4722:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4722 |   while (args[argc])[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 4723 |     argc++;[0m
      | [0;1;32m           
[0m[1mprocess.c:4724:27: [0m[0;1;35mwarning: [0m[1mResult of 'malloc' is converted to a pointer of type 'char *', which is incompatible with sizeof operand type 'char **' [clang-analyzer-unix.MallocSizeof][0m
 4724 |   if ((pp = ap = (char **)malloc((unsigned)(argc + 1) * sizeof(char **))) == 0)[0m
      | [0;1;32m                  ~~~~~~~ ^~~~~~                        ~~~~~~~~~~~~~~~
[0m[1mprocess.c:4724:27: [0m[0;1;36mnote: [0mResult of 'malloc' is converted to a pointer of type 'char *', which is incompatible with sizeof operand type 'char **'[0m
 4724 |   if ((pp = ap = (char **)malloc((unsigned)(argc + 1) * sizeof(char **))) == 0)[0m
      | [0;1;32m                  ~~~~~~~ ^~~~~~                        ~~~~~~~~~~~~~~~
[0m[1mprocess.c:4724:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4724 |   if ((pp = ap = (char **)malloc((unsigned)(argc + 1) * sizeof(char **))) == 0)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 4725 |     Panic(0, "%s", strnomem);[0m
      | [0;1;32m                             
[0m[1mprocess.c:4726:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4726 |   while (argc--)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 4727 |     *pp++ = SaveStr(*args++);[0m
      | [0;1;32m                             
[0m[1mprocess.c:4743:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 4743 | Parse(buf, bufl, args, argl)[0m
      | [0;1;32m^
[0m[1mprocess.c:4758:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4758 |       while (*p && (*p == ' ' || *p == '\t'))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 4759 |         ++p;[0m
      | [0;1;32m            
[0m[1mprocess.c:4773:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4773 |           for (delim = 0; delim < argc; delim++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 4774 |             debug1("-- %s\n", args[delim]);[0m
      | [0;1;32m                                           
[0m[1mprocess.c:4788:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4788 |           if (*p == delim)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 4789 |             delim = 0;[0m
 4790 |           else if (delim != '\'' && *p == '\\' && (p[1] == 'n' || p[1] == 'r' || p[1] == 't' || p[1] == '\'' || p[1] == '"' || p[1] == '\\' || p[1] == '$' || p[1] == '#' || p[1] == '^' || (p[1] >= '0' && p[1] <= '7')))[0m
      | [0;32m          } 
[0m[1mprocess.c:4812:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4812 |                       case 'n': *pp = '\n'; break;[0m
      | [0;1;32m                                ^                
[0m      | [0;32m                                {                ;} 
[0m[1mprocess.c:4813:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4813 |                       case 'r': *pp = '\r'; break;[0m
      | [0;1;32m                                ^                
[0m      | [0;32m                                {                ;} 
[0m[1mprocess.c:4814:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4814 |                       case 't': *pp = '\t'; break;[0m
      | [0;1;32m                                ^                
[0m      | [0;32m                                {                ;} 
[0m[1mprocess.c:4815:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4815 |                       default: *pp = *p; break;[0m
      | [0;1;32m                               ^              
[0m      | [0;32m                               {              ;} 
[0m[1mprocess.c:4831:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4831 |                   if (*ps == '{' && *p == '}')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 4832 |                     break;[0m
      | [0;1;32m                          
[0m[1mprocess.c:4833:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4833 |                   if (*ps == ':' && *p == ':')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 4834 |                     break;[0m
      | [0;1;32m                          
[0m[1mprocess.c:4835:125: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4835 |                   if (*ps != '{' && *ps != ':' && (*p < 'a' || *p > 'z') && (*p < 'A' || *p > 'Z') && (*p < '0' || *p > '9') && *p != '_')[0m
      | [0;1;32m                                                                                                                                          ^
[0m      | [0;32m                                                                                                                                           {
[0m 4836 |                     break;[0m
      | [0;1;32m                          
[0m[1mprocess.c:4852:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4852 |               if (*ps == ':')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 4853 |                 v = gettermcapstring(ps + 1);[0m
 4854 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:4856:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4856 |                   if (*ps == '{')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 4857 |                     ps++;[0m
      | [0;1;32m                         
[0m[1mprocess.c:4859:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4859 |                   if (!strcmp(ps, "TERM"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 4860 |                     v = display ? D_termname : "unknown";[0m
 4861 |                   else if (!strcmp(ps, "COLUMNS"))[0m
      | [0;32m                  } 
[0m[1mprocess.c:4861:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4861 |                   else if (!strcmp(ps, "COLUMNS"))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 4862 |                     sprintf(xbuf, "%d", display ? D_width : -1);[0m
 4863 |                   else if (!strcmp(ps, "LINES"))[0m
      | [0;32m                  } 
[0m[1mprocess.c:4862:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4862 |                     sprintf(xbuf, "%d", display ? D_width : -1);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4862:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 4862 |                     sprintf(xbuf, "%d", display ? D_width : -1);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4863:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4863 |                   else if (!strcmp(ps, "LINES"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 4864 |                     sprintf(xbuf, "%d", display ? D_height : -1);[0m
 4865 |                   else if (!strcmp(ps, "PID"))[0m
      | [0;32m                  } 
[0m[1mprocess.c:4864:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4864 |                     sprintf(xbuf, "%d", display ? D_height : -1);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4864:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 4864 |                     sprintf(xbuf, "%d", display ? D_height : -1);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4865:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4865 |                   else if (!strcmp(ps, "PID"))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 4866 |                     sprintf(xbuf, "%d", getpid());[0m
 4867 |                   else if (!strcmp(ps, "PWD"))[0m
      | [0;32m                  } 
[0m[1mprocess.c:4866:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4866 |                     sprintf(xbuf, "%d", getpid());[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4866:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 4866 |                     sprintf(xbuf, "%d", getpid());[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:4869:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4869 |                       if (getcwd(path, sizeof(path) - 1) == 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 4870 |                         v = "?";[0m
 4871 |                       else[0m
      | [0;32m                      } 
[0m[1mprocess.c:4871:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4871 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 4872 |                         v = path;[0m
      | [0;1;32m                                 
[0m[1mprocess.c:4876:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4876 |                       if ((v = strchr(SockName, '.')))  /* Skip the PID */[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 4877 |                         v++;[0m
 4878 |                       else[0m
      | [0;32m                      } 
[0m[1mprocess.c:4878:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4878 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 4879 |                         v = SockName;[0m
      | [0;1;32m                                     
[0m[1mprocess.c:4881:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4881 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4882 |                     v = getenv(ps);[0m
      | [0;1;32m                                   
[0m[1mprocess.c:4894:6: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 4894 |                           bcopy(p, p + right, strlen(p) + 1);[0m
      | [0;1;32m                          ^~~~~
[0m[1mprocess.c:4894:6: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 4894 |                           bcopy(p, p + right, strlen(p) + 1);[0m
      | [0;1;32m                          ^~~~~
[0m[1mprocess.c:4903:5: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 4903 |                   bcopy(v, pp, vl);[0m
      | [0;1;32m                  ^~~~~
[0m[1mprocess.c:4903:5: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 4903 |                   bcopy(v, pp, vl);[0m
      | [0;1;32m                  ^~~~~
[0m[1mprocess.c:4913:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4913 |           else if (delim == 0 && (*p == '\'' || *p == '"'))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 4914 |             delim = *p;[0m
 4915 |           else if (delim == 0 && (*p == ' ' || *p == '\t' || *p == '\n'))[0m
      | [0;32m          } 
[0m[1mprocess.c:4915:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4915 |           else if (delim == 0 && (*p == ' ' || *p == '\t' || *p == '\n'))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 4916 |             break;[0m
 4917 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:4917:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4917 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4918 |             *pp++ = *p;[0m
      | [0;1;32m                       
[0m[1mprocess.c:4926:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4926 |       if (*p)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 4927 |         p++;[0m
      | [0;1;32m            
[0m[1mprocess.c:4936:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 4936 | SetEscape(u, e, me)[0m
      | [0;1;32m^
[0m[1mprocess.c:4949:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4949 |           if (DefaultEsc >= 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4950 |             ClearAction(&ktab[DefaultEsc]);[0m
      | [0;1;32m                                           
[0m[1mprocess.c:4951:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4951 |           if (DefaultMetaEsc >= 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 4952 |             ClearAction(&ktab[DefaultMetaEsc]);[0m
      | [0;1;32m                                               
[0m[1mprocess.c:4973:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 4973 | ParseSwitch(act, var)[0m
      | [0;1;32m^
[0m[1mprocess.c:4986:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 4986 | ParseOnOff(act, var)[0m
      | [0;1;32m^
[0m[1mprocess.c:4995:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4995 |       if (strcmp(args[0], "on") == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 4996 |         num = 1;[0m
 4997 |       else if (strcmp(args[0], "off") == 0)[0m
      | [0;32m      } 
[0m[1mprocess.c:4997:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4997 |       else if (strcmp(args[0], "off") == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 4998 |         num = 0;[0m
      | [0;1;32m                
[0m[1mprocess.c:5005:8: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'var') [clang-analyzer-core.NullDereference][0m
 5005 |   *var = num;[0m
      | [0;1;32m       ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 12:'  at line 1259[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1260:27: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'var'[0m
 1260 |       if (ParseOnOff(act, &D_auto_nuke) == 0 && msgok)[0m
      | [0;1;32m                          ^~~~~~~~~~~~
[0m[1mprocess.c:1260:11: [0m[0;1;36mnote: [0mCalling 'ParseOnOff'[0m
 1260 |       if (ParseOnOff(act, &D_auto_nuke) == 0 && msgok)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:4993:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 4993 |   if (args[1] == 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4995:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 4995 |       if (strcmp(args[0], "on") == 0)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:5000:7: [0m[0;1;36mnote: [0m'num' is >= 0[0m
 5000 |   if (num < 0)[0m
      | [0;1;32m      ^~~
[0m[1mprocess.c:5000:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 5000 |   if (num < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:5005:8: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'var')[0m
 5005 |   *var = num;[0m
      | [0;1;32m   ~~~ ^
[0m[1mprocess.c:5010:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5010 | ParseSaveStr(act, var)[0m
      | [0;1;32m^
[0m[1mprocess.c:5020:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5020 |   if (*var)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 5021 |     free(*var);[0m
      | [0;1;32m               
[0m[1mprocess.c:5027:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5027 | ParseNum(act, var)[0m
      | [0;1;32m^
[0m[1mprocess.c:5044:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5044 |       if (*p >= '0' && *p <= '9')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 5045 |         i = 10 * i + (*p - '0');[0m
 5046 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:5055:8: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'var') [clang-analyzer-core.NullDereference][0m
 5055 |   *var = i;[0m
      | [0;1;32m       ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mCalling 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1045:15: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprocess.c:1045:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1047[0m
 1045 |   for (i = 0; args[i]; i++)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1047:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1047:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1047 |   if (comms[nr].flags & ARGS_ORMORE)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1049:11: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'n'[0m
 1049 |       if (i < n)[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:1049:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1049 |       if (i < n)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1208:15: [0m[0;1;36mnote: [0mReturning from 'CheckArgNum'[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 120:'  at line 1273[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1274:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1274 |       if (*args == 0)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1276:30: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'var'[0m
 1276 |       else if (ParseNum(act, &D_obufmax) == 0 && msgok)[0m
      | [0;1;32m                             ^~~~~~~~~~
[0m[1mprocess.c:1276:16: [0m[0;1;36mnote: [0mCalling 'ParseNum'[0m
 1276 |       else if (ParseNum(act, &D_obufmax) == 0 && msgok)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:5035:7: [0m[0;1;36mnote: [0m'p' is not equal to null[0m
 5035 |   if (p == 0 || *p == 0 || args[1])[0m
      | [0;1;32m      ^
[0m[1mprocess.c:5035:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mprocess.c:5035:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 5035 |   if (p == 0 || *p == 0 || args[1])[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprocess.c:5035:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 5035 |   if (p == 0 || *p == 0 || args[1])[0m
      | [0;1;32m      ^
[0m[1mprocess.c:5035:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 5035 |   if (p == 0 || *p == 0 || args[1])[0m
      | [0;1;32m  ^
[0m[1mprocess.c:5042:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 5042 |   while (*p)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:5044:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 5044 |       if (*p >= '0' && *p <= '9')[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mprocess.c:5044:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mprocess.c:5044:24: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 5044 |       if (*p >= '0' && *p <= '9')[0m
      | [0;1;32m                       ^~~~~~~~~
[0m[1mprocess.c:5044:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 5044 |       if (*p >= '0' && *p <= '9')[0m
      | [0;1;32m      ^
[0m[1mprocess.c:5042:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 5054[0m
 5042 |   while (*p)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:5054:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 5054 |   debug1("ParseNum got %d\n", i);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:5055:8: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'var')[0m
 5055 |   *var = i;[0m
      | [0;1;32m   ~~~ ^
[0m[1mprocess.c:5060:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5060 | ParseNum1000(act, var)[0m
      | [0;1;32m^
[0m[1mprocess.c:5080:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5080 |           if (dig < 4)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 5081 |             i = 10 * i + (*p - '0');[0m
 5082 |           else if (dig == 4 && *p >= '5')[0m
      | [0;32m          } 
[0m[1mprocess.c:5082:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5082 |           else if (dig == 4 && *p >= '5')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 5083 |             i++;[0m
      | [0;1;32m                
[0m[1mprocess.c:5084:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5084 |           if (dig)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 5085 |             dig++;[0m
      | [0;1;32m                  
[0m[1mprocess.c:5087:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5087 |       else if (*p == '.' && !dig)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 5088 |         dig++;[0m
 5089 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:5097:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5097 |   if (dig == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 5098 |     i *= 1000;[0m
 5099 |   else[0m
      | [0;32m  } 
[0m[1mprocess.c:5099:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5099 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 5100 |     while (dig++ < 4)[0m
 5101 |       i *= 10;[0m
      | [0;1;32m              
[0m[1mprocess.c:5100:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5100 |     while (dig++ < 4)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 5101 |       i *= 10;[0m
      | [0;1;32m              
[0m[1mprocess.c:5102:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5102 |   if (i < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 5103 |     i = (int)((unsigned int)~0 >> 1);[0m
      | [0;1;32m                                     
[0m[1mprocess.c:5110:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5110 | WindowByName(s)[0m
      | [0;1;32m^
[0m[1mprocess.c:5115:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5115 |   for (p = windows; p; p = p->w_next)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5116 |     if (!strcmp(p->w_title, s))[0m
 5117 |       return p;[0m
      | [0;1;32m               
[0m[1mprocess.c:5116:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5116 |     if (!strcmp(p->w_title, s))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 5117 |       return p;[0m
      | [0;1;32m               
[0m[1mprocess.c:5118:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5118 |   for (p = windows; p; p = p->w_next)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5119 |     if (!strncmp(p->w_title, s, strlen(s)))[0m
 5120 |       return p;[0m
      | [0;1;32m               
[0m[1mprocess.c:5119:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5119 |     if (!strncmp(p->w_title, s, strlen(s)))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5120 |       return p;[0m
      | [0;1;32m               
[0m[1mprocess.c:5125:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5125 | WindowByNumber(str)[0m
      | [0;1;32m^
[0m[1mprocess.c:5133:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5133 |       if (*s < '0' || *s > '9')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 5134 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:5146:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5146 | WindowByNoN(str)[0m
      | [0;1;32m^
[0m[1mprocess.c:5154:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5154 |       if ((p = WindowByName(str)))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 5155 |         return p->w_number;[0m
      | [0;1;32m                           
[0m[1mprocess.c:5162:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5162 | ParseWinNum(act, var)[0m
      | [0;1;32m^
[0m[1mprocess.c:5188:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5188 | ParseBase(act, p, var, base, bname)[0m
      | [0;1;32m^
[0m[1mprocess.c:5198:7: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'p') [clang-analyzer-core.NullDereference][0m
 5198 |   if (*p == 0)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 13:'  at line 4221[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:4222:26: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'p'[0m
 4222 |       if (ParseBase(act, *args, &n, 10, "decimal"))[0m
      | [0;1;32m                         ^~~~~
[0m[1mprocess.c:4222:11: [0m[0;1;36mnote: [0mCalling 'ParseBase'[0m
 4222 |       if (ParseBase(act, *args, &n, 10, "decimal"))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:5198:7: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'p')[0m
 5198 |   if (*p == 0)[0m
      | [0;1;32m      ^~
[0m[1mprocess.c:5205:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5205 |       if (c >= 'a' && c <= 'z')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 5206 |         c -= 'a' - 'A';[0m
      | [0;1;32m                       
[0m[1mprocess.c:5207:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5207 |       if (c >= 'A' && c <= 'Z')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 5208 |         c -= 'A' - ('0' + 10);[0m
      | [0;1;32m                              
[0m[1mprocess.c:5223:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5223 | IsNum(s, base)[0m
      | [0;1;32m^
[0m[1mprocess.c:5227:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5227 |   for (base += '0'; *s; ++s)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 5228 |     if (*s < '0' || *s > base)[0m
 5229 |       return 0;[0m
      | [0;1;32m               
[0m[1mprocess.c:5228:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5228 |     if (*s < '0' || *s > base)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5229 |       return 0;[0m
      | [0;1;32m               
[0m[1mprocess.c:5234:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5234 | IsNumColon(s, base, p, psize)[0m
      | [0;1;32m^
[0m[1mprocess.c:5241:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5241 |       strncpy(p, q + 1, psize - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:5241:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 5241 |       strncpy(p, q + 1, psize - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:5245:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5245 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 5246 |     *p = '\0';[0m
      | [0;1;32m              
[0m[1mprocess.c:5251:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5251 | SwitchWindow(n)[0m
      | [0;1;32m^
[0m[1mprocess.c:5293:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5293 | SetForeWindow(wi)[0m
      | [0;1;32m^
[0m[1mprocess.c:5304:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5304 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 5305 |     WindowChanged(p, 'u');[0m
      | [0;1;32m                          
[0m[1mprocess.c:5306:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5306 |   if (wi)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 5307 |     WindowChanged(wi, 'u');[0m
      | [0;1;32m                           
[0m[1mprocess.c:5320:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5320 | Activate(norefresh)[0m
      | [0;1;32m^
[0m[1mprocess.c:5324:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5324 |   if (display == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 5325 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:5332:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5332 |   if (MayResizeLayer(D_forecv->c_layer))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 5333 |     ResizeLayer(D_forecv->c_layer, D_forecv->c_xe - D_forecv->c_xs + 1, D_forecv->c_ye - D_forecv->c_ys + 1, display);[0m
      | [0;1;32m                                                                                                                      
[0m[1mprocess.c:5339:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5339 |       if (fore->w_monitor != MON_OFF)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5340 |         fore->w_monitor = MON_ON;[0m
      | [0;1;32m                                 
[0m[1mprocess.c:5366:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5366 |       if (pp == wtab + maxwin)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5367 |         pp = wtab;[0m
      | [0;1;32m                  
[0m[1mprocess.c:5370:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5370 |           if (!fore || group == (*pp)->w_group)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 5371 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:5374:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5374 |   if (pp == wtab + n)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 5375 |     return -1;[0m
      | [0;1;32m              
[0m[1mprocess.c:5388:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5388 |       if (pp == wtab - 1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 5389 |         pp = wtab + maxwin - 1;[0m
      | [0;1;32m                               
[0m[1mprocess.c:5392:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5392 |           if (!fore || group == (*pp)->w_group)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 5393 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:5396:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5396 |   if (pp == wtab + n)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 5397 |     return -1;[0m
      | [0;1;32m              
[0m[1mprocess.c:5405:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5405 |   if (windows && (fore == 0 || windows->w_next))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 5406 |     return 1;[0m
      | [0;1;32m             
[0m[1mprocess.c:5417:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5417 | KillWindow(wi)[0m
      | [0;1;32m^
[0m[1mprocess.c:5428:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5428 |   for (pp = &windows; (p = *pp); pp = &p->w_next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5429 |     if (p == wi)[0m
 5430 |       break;[0m
      | [0;1;32m            
[0m[1mprocess.c:5429:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5429 |     if (p == wi)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 5430 |       break;[0m
      | [0;1;32m            
[0m[1mprocess.c:5432:9: [0m[0;1;35mwarning: [0m[1mAccess to field 'w_next' results in a dereference of a null pointer (loaded from variable 'p') [clang-analyzer-core.NullDereference][0m
 5432 |   *pp = p->w_next;[0m
      | [0;1;32m        ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 96:'  at line 1330[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1334:6: [0m[0;1;36mnote: [0mAssuming 'key' is < 0[0m
 1334 |         if (key >= 0)[0m
      | [0;1;32m            ^~~~~~~~
[0m[1mprocess.c:1334:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1334 |         if (key >= 0)[0m
      | [0;1;32m        ^
[0m[1mprocess.c:1345:6: [0m[0;1;36mnote: [0mAssuming field 'w_pwin' is null[0m
 1345 |         if (fore->w_pwin)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mprocess.c:1345:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1345 |         if (fore->w_pwin)[0m
      | [0;1;32m        ^
[0m[1mprocess.c:1353:2: [0m[0;1;36mnote: [0mCalling 'KillWindow'[0m
 1353 |         KillWindow(fore);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:5428:24: [0m[0;1;36mnote: [0mValue assigned to 'p'[0m
 5428 |   for (pp = &windows; (p = *pp); pp = &p->w_next)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mprocess.c:5428:24: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 5428 |   for (pp = &windows; (p = *pp); pp = &p->w_next)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mprocess.c:5428:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 5431[0m
 5428 |   for (pp = &windows; (p = *pp); pp = &p->w_next)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:5431:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 5431 |   ASSERT(p);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mprocess.c:5432:9: [0m[0;1;36mnote: [0mAccess to field 'w_next' results in a dereference of a null pointer (loaded from variable 'p')[0m
 5432 |   *pp = p->w_next;[0m
      | [0;1;32m        ^
[0m[1mprocess.c:5450:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5450 |           if (Layer2Window(cv->c_layer) != wi)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 5451 |             continue;[0m
      | [0;1;32m                     
[0m[1mprocess.c:5470:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5470 |   for (lay = layouts; lay; lay = lay->lay_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 5471 |     UpdateLayoutCanvas(&lay->lay_canvas, wi);[0m
      | [0;1;32m                                             
[0m[1mprocess.c:5480:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5480 | LogToggle(on)[0m
      | [0;1;32m^
[0m[1mprocess.c:5487:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5487 |       if (display && !*rc_name)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 5488 |         Msg(0, "You are %s logging.", on ? "already" : "not");[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:5504:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5504 |   if (ftell(fore->w_log->fp) == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 5505 |     Msg(0, "Creating logfile \"%s\".", fore->w_log->name);[0m
 5506 |   else[0m
      | [0;32m  } 
[0m[1mprocess.c:5506:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5506 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 5507 |     Msg(0, "Appending to logfile \"%s\".", fore->w_log->name);[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:5512:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5512 | AddWindows(buf, len, flags, where)[0m
      | [0;1;32m^
[0m[1mprocess.c:5532:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5532 |       if (pp - wtab == where && ss == buf)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5533 |         ss = s;[0m
      | [0;1;32m               
[0m[1mprocess.c:5534:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5534 |       if ((p = *pp) == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 5535 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5536:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5536 |       if ((flags & 1) && display && p == D_fore)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 5537 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5538:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5538 |       if (display && D_fore && D_fore->w_group != p->w_group)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 5539 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5543:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5543 |       if (l > 20)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 5544 |         l = 20;[0m
      | [0;1;32m               
[0m[1mprocess.c:5545:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5545 |       if (s - buf + l > len - 24)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 5546 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:5555:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5555 |           if (flags & 8)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 5556 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:5560:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5560 |           if (p->w_monitor == MON_DONE && renditions[REND_MONITOR] != -1)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 5561 |             rend = renditions[REND_MONITOR];[0m
 5562 |           else if ((p->w_bell == BELL_DONE || p->w_bell == BELL_FOUND) && renditions[REND_BELL] != -1)[0m
      | [0;32m          } 
[0m[1mprocess.c:5562:96: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5562 |           else if ((p->w_bell == BELL_DONE || p->w_bell == BELL_FOUND) && renditions[REND_BELL] != -1)[0m
      | [0;1;32m                                                                                                      ^
[0m      | [0;32m                                                                                                       {
[0m 5563 |             rend = renditions[REND_BELL];[0m
 5564 |           else if ((p->w_silence == SILENCE_FOUND || p->w_silence == SILENCE_DONE) && renditions[REND_SILENCE] != -1)[0m
      | [0;32m          } 
[0m[1mprocess.c:5564:111: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5564 |           else if ((p->w_silence == SILENCE_FOUND || p->w_silence == SILENCE_DONE) && renditions[REND_SILENCE] != -1)[0m
      | [0;1;32m                                                                                                                     ^
[0m      | [0;32m                                                                                                                      {
[0m 5565 |             rend = renditions[REND_SILENCE];[0m
      | [0;1;32m                                            
[0m[1mprocess.c:5567:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5567 |       if (rend != -1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 5568 |         AddWinMsgRend(s, rend);[0m
      | [0;1;32m                               
[0m[1mprocess.c:5569:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5569 |       sprintf(s, "%d", p->w_number);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:5569:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5569 |       sprintf(s, "%d", p->w_number);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:5571:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5571 |       if (display && p == D_fore)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 5572 |         *s++ = '*';[0m
      | [0;1;32m                   
[0m[1mprocess.c:5575:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5575 |           if (display && p == D_other)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 5576 |             *s++ = '-';[0m
      | [0;1;32m                       
[0m[1mprocess.c:5580:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5580 |       strncpy(s, cmd, l);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:5580:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 5580 |       strncpy(s, cmd, l);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:5582:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5582 |       if (rend != -1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 5583 |         AddWinMsgRend(s, -1);[0m
      | [0;1;32m                             
[0m[1mprocess.c:5590:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5590 | AddWindowFlags(buf, len, p)[0m
      | [0;1;32m^
[0m[1mprocess.c:5607:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5607 |   if (p->w_layer.l_cvlist && p->w_layer.l_cvlist->c_lnext)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 5608 |     *s++ = '&';[0m
      | [0;1;32m               
[0m[1mprocess.c:5615:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5615 |   if (p->w_bell == BELL_DONE)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5616 |     *s++ = '!';[0m
      | [0;1;32m               
[0m[1mprocess.c:5618:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5618 |   if (p->w_slot != (slot_t) 0 && p->w_slot != (slot_t) -1)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 5619 |     *s++ = '$';[0m
      | [0;1;32m               
[0m[1mprocess.c:5623:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5623 |       strcpy(s, "(L)");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5623:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5623 |       strcpy(s, "(L)");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5626:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5626 |   if (p->w_ptyfd < 0 && p->w_type != W_TYPE_GROUP)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 5627 |     *s++ = 'Z';[0m
      | [0;1;32m               
[0m[1mprocess.c:5633:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5633 | AddOtherUsers(buf, len, p)[0m
      | [0;1;32m^
[0m[1mprocess.c:5646:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5646 |       if (olddisplay && D_user == olddisplay->d_user)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 5647 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5648:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5648 |       for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 5649 |         if (Layer2Window(cv->c_layer) == p)[0m
 5650 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:5649:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5649 |         if (Layer2Window(cv->c_layer) == p)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5650 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:5651:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5651 |       if (!cv)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 5652 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5653:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5653 |       for (d = displays; d && d != display; d = d->d_next)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 5654 |         if (D_user == d->d_user)[0m
 5655 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:5654:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5654 |         if (D_user == d->d_user)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5655 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:5656:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5656 |       if (d && d != display)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 5657 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5664:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5664 |       if (l + 1 > len)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 5665 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:5666:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5666 |       strcpy(s, D_user->u_name);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5666:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5666 |       strcpy(s, D_user->u_name);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5676:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5676 | ShowWindows(where)[0m
      | [0;1;32m^
[0m[1mprocess.c:5682:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5682 |   if (display && where == -1 && D_fore)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5683 |     where = D_fore->w_number;[0m
      | [0;1;32m                             
[0m[1mprocess.c:5692:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5692 |           if (ss < buf)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 5693 |             ss = buf;[0m
      | [0;1;32m                     
[0m[1mprocess.c:5696:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5696 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 5697 |     ss = buf;[0m
      | [0;1;32m             
[0m[1mprocess.c:5706:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5706 | ShowWindowsX(str)[0m
      | [0;1;32m^
[0m[1mprocess.c:5712:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5712 |                 if (!wtab[i])[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5713 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mprocess.c:5728:43: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_x' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 5728 |       Msg(0, "(%d,%d)/(%d,%d) no window", D_x + 1, D_y + 1, D_width, D_height);[0m
      | [0;1;32m                                          ^
[0m[1m./display.h:221:14: [0m[0;1;36mnote: [0mexpanded from macro 'D_x'[0m
  221 | #define D_x             DISPLAY(d_x)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 94:'  at line 1863[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1864:7: [0m[0;1;36mnote: [0mCalling 'ShowInfo'[0m
 1864 |       ShowInfo();[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mprocess.c:5726:7: [0m[0;1;36mnote: [0mAssuming 'wp' is equal to null[0m
 5726 |   if (wp == 0)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:5726:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 5726 |   if (wp == 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:5728:43: [0m[0;1;36mnote: [0mAccess to field 'd_x' results in a dereference of a null pointer (loaded from variable 'display')[0m
 5728 |       Msg(0, "(%d,%d)/(%d,%d) no window", D_x + 1, D_y + 1, D_width, D_height);[0m
      | [0;1;32m                                          ^
[0m[1m./display.h:221:14: [0m[0;1;36mnote: [0mexpanded from macro 'D_x'[0m
  221 | #define D_x             DISPLAY(d_x)[0m
      | [0;1;32m                        ^~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5732:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5732 |   if (buf < (p += GetAnsiStatus(wp, p)))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 5733 |     *p++ = ' ';[0m
      | [0;1;32m               
[0m[1mprocess.c:5734:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5734 |   sprintf(p, "(%d,%d)/(%d,%d)",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprocess.c:5734:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5734 |   sprintf(p, "(%d,%d)/(%d,%d)",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprocess.c:5737:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5737 |   sprintf(p += strlen(p), "+%d", wp->w_histheight);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprocess.c:5737:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5737 |   sprintf(p += strlen(p), "+%d", wp->w_histheight);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprocess.c:5739:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5739 |   sprintf(p += strlen(p), " %c%sflow",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprocess.c:5739:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5739 |   sprintf(p += strlen(p), " %c%sflow",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprocess.c:5743:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5743 |   if (!wp->w_wrap) sprintf(p += strlen(p), " -wrap");[0m
      | [0;1;32m                  ^                                  
[0m      | [0;32m                   {
[0m[1mprocess.c:5743:20: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5743 |   if (!wp->w_wrap) sprintf(p += strlen(p), " -wrap");[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mprocess.c:5743:20: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5743 |   if (!wp->w_wrap) sprintf(p += strlen(p), " -wrap");[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mprocess.c:5744:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5744 |   if (wp->w_insert) sprintf(p += strlen(p), " ins");[0m
      | [0;1;32m                   ^                                
[0m      | [0;32m                    {
[0m[1mprocess.c:5744:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5744 |   if (wp->w_insert) sprintf(p += strlen(p), " ins");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5744:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5744 |   if (wp->w_insert) sprintf(p += strlen(p), " ins");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5745:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5745 |   if (wp->w_origin) sprintf(p += strlen(p), " org");[0m
      | [0;1;32m                   ^                                
[0m      | [0;32m                    {
[0m[1mprocess.c:5745:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5745 |   if (wp->w_origin) sprintf(p += strlen(p), " org");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5745:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5745 |   if (wp->w_origin) sprintf(p += strlen(p), " org");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5746:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5746 |   if (wp->w_keypad) sprintf(p += strlen(p), " app");[0m
      | [0;1;32m                   ^                                
[0m      | [0;32m                    {
[0m[1mprocess.c:5746:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5746 |   if (wp->w_keypad) sprintf(p += strlen(p), " app");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5746:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5746 |   if (wp->w_keypad) sprintf(p += strlen(p), " app");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5747:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5747 |   if (wp->w_log)    sprintf(p += strlen(p), " log");[0m
      | [0;1;32m                ^                                   
[0m      | [0;32m                 {
[0m[1mprocess.c:5747:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5747 |   if (wp->w_log)    sprintf(p += strlen(p), " log");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5747:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5747 |   if (wp->w_log)    sprintf(p += strlen(p), " log");[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:5753:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5753 |     sprintf(p += strlen(p), " mon");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprocess.c:5753:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5753 |     sprintf(p += strlen(p), " mon");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprocess.c:5754:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5754 |   if (wp->w_mouse) sprintf(p += strlen(p), " mouse");[0m
      | [0;1;32m                  ^                                  
[0m      | [0;32m                   {
[0m[1mprocess.c:5754:20: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5754 |   if (wp->w_mouse) sprintf(p += strlen(p), " mouse");[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mprocess.c:5754:20: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5754 |   if (wp->w_mouse) sprintf(p += strlen(p), " mouse");[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mprocess.c:5756:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5756 |   if (wp->w_bce) sprintf(p += strlen(p), " bce");[0m
      | [0;1;32m                ^                                
[0m      | [0;32m                 {
[0m[1mprocess.c:5756:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5756 |   if (wp->w_bce) sprintf(p += strlen(p), " bce");[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mprocess.c:5756:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5756 |   if (wp->w_bce) sprintf(p += strlen(p), " bce");[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mprocess.c:5758:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5758 |   if (!wp->w_c1) sprintf(p += strlen(p), " -c1");[0m
      | [0;1;32m                ^                                
[0m      | [0;32m                 {
[0m[1mprocess.c:5758:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5758 |   if (!wp->w_c1) sprintf(p += strlen(p), " -c1");[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mprocess.c:5758:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5758 |   if (!wp->w_c1) sprintf(p += strlen(p), " -c1");[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mprocess.c:5759:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5759 |   if (wp->w_norefresh) sprintf(p += strlen(p), " nored");[0m
      | [0;1;32m                      ^                                  
[0m      | [0;32m                       {
[0m[1mprocess.c:5759:24: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5759 |   if (wp->w_norefresh) sprintf(p += strlen(p), " nored");[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mprocess.c:5759:24: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5759 |   if (wp->w_norefresh) sprintf(p += strlen(p), " nored");[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mprocess.c:5767:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5767 |       strcpy(p, EncodingName(wp->w_encoding));[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5767:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5767 |       strcpy(p, EncodingName(wp->w_encoding));[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5771:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5771 |   if (wp->w_encoding != UTF8)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m[1mprocess.c:5778:6: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5778 |             sprintf(p, " G%c", wp->w_Charset + '0');[0m
      | [0;1;32m            ^~~~~~~
[0m[1mprocess.c:5778:6: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5778 |             sprintf(p, " G%c", wp->w_Charset + '0');[0m
      | [0;1;32m            ^~~~~~~
[0m[1mprocess.c:5779:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5779 |             if (wp->w_FontE >= ' ')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 5780 |               p[3] = wp->w_FontE;[0m
 5781 |             else[0m
      | [0;32m            } 
[0m[1mprocess.c:5790:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5790 |         else if (wp->w_gr)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 5791 |           sprintf(p++, " G%c%c[", wp->w_Charset + '0', wp->w_CharsetR + '0');[0m
 5792 |         else[0m
      | [0;32m        } 
[0m[1mprocess.c:5791:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5791 |           sprintf(p++, " G%c%c[", wp->w_Charset + '0', wp->w_CharsetR + '0');[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:5791:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5791 |           sprintf(p++, " G%c%c[", wp->w_Charset + '0', wp->w_CharsetR + '0');[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:5792:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5792 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 5793 |           sprintf(p, " G%c[", wp->w_Charset + '0');[0m
      | [0;1;32m                                                   
[0m[1mprocess.c:5793:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5793 |           sprintf(p, " G%c[", wp->w_Charset + '0');[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:5793:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5793 |           sprintf(p, " G%c[", wp->w_Charset + '0');[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:5797:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5797 |             if (wp->w_charsets[i] == ASCII)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5798 |               *p++ = 'B';[0m
 5799 |             else if (wp->w_charsets[i] >= ' ')[0m
      | [0;32m            } 
[0m[1mprocess.c:5799:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5799 |             else if (wp->w_charsets[i] >= ' ')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 5800 |               *p++ = wp->w_charsets[i];[0m
 5801 |             else[0m
      | [0;32m            } 
[0m[1mprocess.c:5832:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5832 |   if (display == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 5833 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:5835:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5835 |   sprintf(p, "(%d,%d)", D_width, D_height),[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprocess.c:5835:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 5835 |   sprintf(p, "(%d,%d)", D_width, D_height),[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprocess.c:5841:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5841 |       strcpy(p, EncodingName(D_encoding));[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5841:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5841 |       strcpy(p, EncodingName(D_encoding));[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5847:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5847 |       strcpy(p, " xterm");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5847:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5847 |       strcpy(p, " xterm");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5853:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5853 |       strcpy(p, " color");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5853:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5853 |       strcpy(p, " color");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5860:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5860 |       strcpy(p, " iso2022");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5860:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5860 |       strcpy(p, " iso2022");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5861:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'p' is never read [clang-analyzer-deadcode.DeadStores][0m
 5861 |       p += strlen(p);[0m
      | [0;1;32m      ^    ~~~~~~~~~
[0m[1mprocess.c:5861:7: [0m[0;1;36mnote: [0mValue stored to 'p' is never read[0m
 5861 |       p += strlen(p);[0m
      | [0;1;32m      ^    ~~~~~~~~~
[0m[1mprocess.c:5865:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 5865 |       strcpy(p, " altchar");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5865:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 5865 |       strcpy(p, " altchar");[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:5866:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'p' is never read [clang-analyzer-deadcode.DeadStores][0m
 5866 |       p += strlen(p);[0m
      | [0;1;32m      ^    ~~~~~~~~~
[0m[1mprocess.c:5866:7: [0m[0;1;36mnote: [0mValue stored to 'p' is never read[0m
 5866 |       p += strlen(p);[0m
      | [0;1;32m      ^    ~~~~~~~~~
[0m[1mprocess.c:5873:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5873 | AKAfin(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:5879:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5879 |   if (len && fore)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 5880 |     ChangeAKA(fore, buf, strlen(buf));[0m
      | [0;1;32m                                      
[0m[1mprocess.c:5891:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5891 |   if (enter_window_name_mode == 1) return;[0m
      | [0;1;32m                                  ^       
[0m      | [0;32m                                   {
[0m[1mprocess.c:5897:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5897 |   if (!s)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 5898 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:5901:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5901 |       if ((*(unsigned char *)s & 0x7f) < 0x20 || *s == 0x7f)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 5902 |         continue;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5910:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5910 | Colonfin(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:5925:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5925 |       while (*s && s - buf < len)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 5926 |         if (*s++ == ' ')[0m
 5927 |           return;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5926:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5926 |         if (*s++ == ' ')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 5927 |           return;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5931:111: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5931 |           (captionalways || D_has_hstatus == HSTATUS_LASTLINE || (D_canvas.c_slperp && D_canvas.c_slperp->c_slnext)))[0m
      | [0;1;32m                                                                                                                     ^
[0m      | [0;32m                                                                                                                      {
[0m 5932 |         showmessage = 1;[0m
      | [0;1;32m                        
[0m[1mprocess.c:5938:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5938 |           if (x > 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 5939 |             l = m + 1;[0m
 5940 |           else if (x < 0)[0m
      | [0;32m          } 
[0m[1mprocess.c:5940:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5940 |           else if (x < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 5941 |             r = m - 1;[0m
 5942 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:5945:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5945 |               for (l = m - 1; l >= 0 && strncmp(buf, comms[l].name, len) == 0; l--)[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 5946 |                 ;[0m
      | [0;1;32m                 
[0m[1mprocess.c:5947:102: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5947 |               for (m = ++l; m <= r && strncmp(buf, comms[m].name, len) == 0 && s - mbuf < sizeof(mbuf); m++)[0m
      | [0;1;32m                                                                                                            ^
[0m      | [0;32m                                                                                                             {
[0m 5948 |                 s += snprintf(s, sizeof(mbuf) - (s - mbuf), " %s", comms[m].name);[0m
      | [0;1;32m                                                                                  
[0m[1mprocess.c:5948:8: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5948 |                 s += snprintf(s, sizeof(mbuf) - (s - mbuf), " %s", comms[m].name);[0m
      | [0;1;32m                     ^~~~~~~~
[0m[1mprocess.c:5948:8: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5948 |                 s += snprintf(s, sizeof(mbuf) - (s - mbuf), " %s", comms[m].name);[0m
      | [0;1;32m                     ^~~~~~~~
[0m[1mprocess.c:5951:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5951 |                   if (showmessage)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 5952 |                     Msg(0, "Possible commands:%s", mbuf);[0m
      | [0;1;32m                                                         
[0m[1mprocess.c:5957:11: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5957 |                   len = snprintf(mbuf, sizeof(mbuf), "%s \t", comms[l].name + len);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mprocess.c:5957:11: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5957 |                   len = snprintf(mbuf, sizeof(mbuf), "%s \t", comms[l].name + len);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mprocess.c:5958:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5958 |                   if (len > 0 && len < sizeof(mbuf))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 5959 |                     LayProcess(&s, &len);[0m
      | [0;1;32m                                         
[0m[1mprocess.c:5964:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5964 |       if (l > r && showmessage)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 5965 |         Msg(0, "No commands matching '%*s'", len, buf);[0m
      | [0;1;32m                                                       
[0m[1mprocess.c:5969:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5969 |   if (!len || buf[len])[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 5970 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:5973:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5973 |   if (len > (int)sizeof(mbuf))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5974 |     RcLine(buf, len);[0m
 5975 |   else[0m
      | [0;32m  } 
[0m[1mprocess.c:5977:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 5977 |       bcopy(buf, mbuf, len);[0m
      | [0;1;32m      ^~~~~
[0m[1mprocess.c:5977:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 5977 |       bcopy(buf, mbuf, len);[0m
      | [0;1;32m      ^~~~~
[0m[1mprocess.c:5983:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 5983 | SelectFin(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:5990:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5990 |   if (!len || !display)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 5991 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:5998:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5998 |   if ((n = WindowByNoN(buf)) < 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 5999 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:6004:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6004 | SelectLayoutFin(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6011:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6011 |   if (!len || !display)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6012 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:6020:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6020 |   if (!lay)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 6021 |     Msg(0, "No such layout\n");[0m
 6022 |   else if (lay == D_layout)[0m
      | [0;32m  } 
[0m[1mprocess.c:6022:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6022 |   else if (lay == D_layout)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 6023 |     Msg(0, "This IS layout %d (%s).\n", lay->lay_number, lay->lay_title);[0m
 6024 |   else[0m
      | [0;32m  } 
[0m[1mprocess.c:6042:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6042 | SetenvFin1(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6047:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6047 |   if (!len || !display)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6048 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:6053:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6053 | SetenvFin2(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6058:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6058 |   if (!len || !display)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6059 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:6066:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6066 | InputSetenv(arg)[0m
      | [0;1;32m^
[0m[1mprocess.c:6073:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6073 |       strncpy(setenv_var, arg, sizeof(setenv_var) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:6073:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 6073 |       strncpy(setenv_var, arg, sizeof(setenv_var) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:6074:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6074 |       sprintf(setenv_buf, "Enter value for %s: ", setenv_var);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:6074:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 6074 |       sprintf(setenv_buf, "Enter value for %s: ", setenv_var);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:6077:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6077 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 6078 |     Input("Setenv: Enter variable name: ", 30, INP_COOKED, SetenvFin1, NULL, 0);[0m
      | [0;1;32m                                                                                
[0m[1mprocess.c:6089:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6089 | DoScreen(fn, av)[0m
      | [0;1;32m^
[0m[1mprocess.c:6107:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6107 |           switch (av[0][2])[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mprocess.c:6112:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6112 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mprocess.c:6117:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6117 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mprocess.c:6119:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6119 |               nwin.flowflag = FLOW_AUTOFLAG;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 6120 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mprocess.c:6122:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6122 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mprocess.c:6126:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6126 |           if (av[0][2])[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 6127 |             nwin.aka = &av[0][2];[0m
 6128 |           else if (*++av)[0m
 6129 |             nwin.aka = *av;[0m
 6130 |           else[0m
 6131 |             --av;[0m
 6132 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprocess.c:6126:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6126 |           if (av[0][2])[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6127 |             nwin.aka = &av[0][2];[0m
 6128 |           else if (*++av)[0m
      | [0;32m          } 
[0m[1mprocess.c:6128:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6128 |           else if (*++av)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 6129 |             nwin.aka = *av;[0m
 6130 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:6130:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6130 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6131 |             --av;[0m
      | [0;1;32m                 
[0m[1mprocess.c:6134:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6134 |           if (av[0][2])[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 6135 |             nwin.term = &av[0][2];[0m
 6136 |           else if (*++av)[0m
 6137 |             nwin.term = *av;[0m
 6138 |           else[0m
 6139 |             --av;[0m
 6140 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprocess.c:6134:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6134 |           if (av[0][2])[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6135 |             nwin.term = &av[0][2];[0m
 6136 |           else if (*++av)[0m
      | [0;32m          } 
[0m[1mprocess.c:6136:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6136 |           else if (*++av)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 6137 |             nwin.term = *av;[0m
 6138 |           else[0m
      | [0;32m          } 
[0m[1mprocess.c:6138:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6138 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6139 |             --av;[0m
      | [0;1;32m                 
[0m[1mprocess.c:6142:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6142 |           if (av[0][2])[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 6143 |             nwin.histheight = atoi(av[0] + 2);[0m
 6144 |           else if (*++av)[0m
 6145 |             nwin.histheight = atoi(*av);[0m
 6146 |           else [0m
 6147 |             --av;[0m
 6148 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprocess.c:6142:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6142 |           if (av[0][2])[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6143 |             nwin.histheight = atoi(av[0] + 2);[0m
 6144 |           else if (*++av)[0m
      | [0;32m          } 
[0m[1mprocess.c:6144:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6144 |           else if (*++av)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 6145 |             nwin.histheight = atoi(*av);[0m
 6146 |           else [0m
      | [0;32m          } 
[0m[1mprocess.c:6146:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6146 |           else [0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6147 |             --av;[0m
      | [0;1;32m                 
[0m[1mprocess.c:6151:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6151 |           switch (av[0][2])[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mprocess.c:6156:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6156 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mprocess.c:6161:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6161 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mprocess.c:6163:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6163 |               nwin.lflag = 3;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 6164 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mprocess.c:6166:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6166 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mprocess.c:6171:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6171 |           nwin.aflag = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 6172 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprocess.c:6174:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6174 |           nwin.monitor = MON_ON;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 6175 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprocess.c:6177:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6177 |           nwin.Lflag = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 6178 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprocess.c:6180:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6180 |           Msg(0, "%s: screen: invalid option -%c.", fn, av[0][1]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 6181 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprocess.c:6187:16: [0m[0;1;35mwarning: [0m[1mThe left operand of '!=' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
 6187 |       if (*buf != '\0')[0m
      | [0;1;32m               ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 143:'  at line 2127[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:2128:7: [0m[0;1;36mnote: [0mCalling 'DoScreen'[0m
 2128 |       DoScreen("key", args);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:6097:10: [0m[0;1;36mnote: [0m'av' is non-null[0m
 6097 |   while (av && *av && av[0][0] == '-')[0m
      | [0;1;32m         ^~
[0m[1mprocess.c:6097:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mprocess.c:6097:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mprocess.c:6097:23: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 6097 |   while (av && *av && av[0][0] == '-')[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1mprocess.c:6097:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 6185[0m
 6097 |   while (av && *av && av[0][0] == '-')[0m
      | [0;1;32m  ^
[0m[1mprocess.c:6185:7: [0m[0;1;36mnote: [0m'av' is non-null[0m
 6185 |   if (av && *av && IsNumColon(*av, 10, buf, sizeof(buf)))[0m
      | [0;1;32m      ^~
[0m[1mprocess.c:6185:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mprocess.c:6185:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mprocess.c:6185:20: [0m[0;1;36mnote: [0mCalling 'IsNumColon'[0m
 6185 |   if (av && *av && IsNumColon(*av, 10, buf, sizeof(buf)))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:5239:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 5239 |   if ((q = rindex(s, ':')) != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:5239:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 5239 |   if ((q = rindex(s, ':')) != 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:6185:20: [0m[0;1;36mnote: [0mReturning from 'IsNumColon'[0m
 6185 |   if (av && *av && IsNumColon(*av, 10, buf, sizeof(buf)))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:6185:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 6185 |   if (av && *av && IsNumColon(*av, 10, buf, sizeof(buf)))[0m
      | [0;1;32m  ^
[0m[1mprocess.c:6187:16: [0m[0;1;36mnote: [0mThe left operand of '!=' is a garbage value[0m
 6187 |       if (*buf != '\0')[0m
      | [0;1;32m          ~~~~ ^
[0m[1mprocess.c:6187:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6187 |       if (*buf != '\0')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6188 |         nwin.aka = buf;[0m
      | [0;1;32m                       
[0m[1mprocess.c:6201:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6201 |       if (!nwin.aka)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 6202 |         nwin.aka = Filename(*av);[0m
      | [0;1;32m                                 
[0m[1mprocess.c:6218:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6218 | CompileKeys(s, sl, array)[0m
      | [0;1;32m^
[0m[1mprocess.c:6228:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6228 |       for (i = 0; i < 256; i++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 6229 |         array[i] = i;[0m
      | [0;1;32m                     
[0m[1mprocess.c:6235:13: [0m[0;1;35mwarning: [0m[1mDereference of null pointer [clang-analyzer-core.NullDereference][0m
 6235 |       key = *(unsigned char *)s++;[0m
      | [0;1;32m            ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1176:7: [0m[0;1;36mnote: [0mAssuming index is non-negative[0m
 1176 |   n = comms[nr].flags;[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 108:'  at line 3255[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:3256:11: [0m[0;1;36mnote: [0mCalling 'CompileKeys'[0m
 3256 |       if (CompileKeys(*args, *argl, mark_key_tab))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:6226:7: [0m[0;1;36mnote: [0mAssuming 'sl' is not equal to 0[0m
 6226 |   if (sl == 0)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:6226:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 6226 |   if (sl == 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:6232:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 6232 |   debug1("CompileKeys: '%s'\n", s);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:6233:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 6233 |   while (sl)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:6235:31: [0m[0;1;36mnote: [0mNull pointer value stored to 's'[0m
 6235 |       key = *(unsigned char *)s++;[0m
      | [0;1;32m                              ^~~
[0m[1mprocess.c:6235:13: [0m[0;1;36mnote: [0mDereference of null pointer[0m
 6235 |       key = *(unsigned char *)s++;[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:6236:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6236 |       if (*s != '=' || sl < 3)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 6237 |         return -1;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6247:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6247 |       if (sl == 0) [0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 6248 |         break;[0m
      | [0;1;32m              
[0m[1mprocess.c:6249:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6249 |       if (*s++ != ':')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 6250 |         return -1;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6263:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6263 | pow_detach_fn(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6271:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6271 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6271:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 6271 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6276:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6276 |       if (display)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 6277 |         write(D_userfd, "\007", 1);[0m
      | [0;1;32m                                   
[0m[1mprocess.c:6280:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6280 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 6281 |     Detach(D_POWER);[0m
      | [0;1;32m                    
[0m[1mprocess.c:6287:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6287 | copy_reg_fn(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6296:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6296 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6296:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 6296 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6299:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6299 |   if (pp->buf)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6300 |     free(pp->buf);[0m
      | [0;1;32m                  
[0m[1mprocess.c:6303:7: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_user' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
 6303 |   if (D_user->u_plop.len)[0m
      | [0;1;32m      ^
[0m[1m./display.h:199:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_user'[0m
  199 | #define D_user          DISPLAY(d_user)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
 1170 |   user = display ? D_user : users;[0m
      | [0;1;32m         ^~~~~~~
[0m[1mprocess.c:1170:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mprocess.c:1171:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1171:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1171 |   if (nr == RC_ILLEGAL)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1183:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1183:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1183 |   if (!(n & CAN_QUERY) && queryflag >= 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1190:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~
[0m[1mprocess.c:1190:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1190 |   if ((n & NEED_DISPLAY) && display == 0)[0m
      | [0;1;32m                         ^
[0m[1mprocess.c:1196:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mprocess.c:1196:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1196 |   if ((n & NEED_FORE) && fore == 0)[0m
      | [0;1;32m                      ^
[0m[1mprocess.c:1202:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~
[0m[1mprocess.c:1202:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   if ((n & NEED_LAYER) && flayer == 0)[0m
      | [0;1;32m                       ^
[0m[1mprocess.c:1208:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1208 |   if ((argc = CheckArgNum(nr, args)) < 0)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1211:7: [0m[0;1;36mnote: [0m'display' is null[0m
 1211 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:1211:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1223:11: [0m[0;1;36mnote: [0m'display' is null[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m          ^~~~~~~
[0m[1mprocess.c:1223:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1223 |   msgok = display && !*rc_name;[0m
      | [0;1;32m                  ^
[0m[1mprocess.c:1224:3: [0m[0;1;36mnote: [0mControl jumps to 'case 135:'  at line 1675[0m
 1224 |   switch(nr)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:1677:11: [0m[0;1;36mnote: [0mAssuming 'fore' is non-null[0m
 1677 |       i = fore ? fore->w_encoding : display ? display->d_encoding : 0;[0m
      | [0;1;32m          ^~~~
[0m[1mprocess.c:1677:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mprocess.c:1678:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1678 |       if (args[0] && args[1] && !strcmp(args[0], "-e"))[0m
      | [0;1;32m          ^
[0m[1mprocess.c:1678:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1678 |       if (args[0] && args[1] && !strcmp(args[0], "-e"))[0m
      | [0;1;32m                             ^
[0m[1mprocess.c:1695:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |       if ((s = *args) == NULL)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1700:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1700 |       if (*argl != 1)[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mprocess.c:1700:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1700 |       if (*argl != 1)[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1709:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1709 |       if (args[1])[0m
      | [0;1;32m      ^
[0m[1mprocess.c:1735:9: [0m[0;1;36mnote: [0mCalling 'copy_reg_fn'[0m
 1735 |         copy_reg_fn(&ch, 0, NULL);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mprocess.c:6294:7: [0m[0;1;36mnote: [0m'len' is 0[0m
 6294 |   if (len)[0m
      | [0;1;32m      ^~~
[0m[1mprocess.c:6294:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 6294 |   if (len)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:6299:7: [0m[0;1;36mnote: [0mAssuming field 'buf' is null[0m
 6299 |   if (pp->buf)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mprocess.c:6299:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 6299 |   if (pp->buf)[0m
      | [0;1;32m  ^
[0m[1mprocess.c:6303:7: [0m[0;1;36mnote: [0mAccess to field 'd_user' results in a dereference of a null pointer (loaded from variable 'display')[0m
 6303 |   if (D_user->u_plop.len)[0m
      | [0;1;32m      ^
[0m[1m./display.h:199:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_user'[0m
  199 | #define D_user          DISPLAY(d_user)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mprocess.c:6310:7: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 6310 |       bcopy(D_user->u_plop.buf, pp->buf, D_user->u_plop.len);[0m
      | [0;1;32m      ^~~~~
[0m[1mprocess.c:6310:7: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 6310 |       bcopy(D_user->u_plop.buf, pp->buf, D_user->u_plop.len);[0m
      | [0;1;32m      ^~~~~
[0m[1mprocess.c:6320:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6320 | ins_reg_fn(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6329:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6329 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6329:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 6329 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6332:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6332 |   if (!fore)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 6333 |     return;     /* Input() should not call us w/o fore, but you never know... */[0m
      | [0;1;32m                                                                                
[0m[1mprocess.c:6334:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6334 |   if (*buf == '.')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 6335 |     Msg(0, "ins_reg_fn: Warning: pasting real register '.'!");[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:6346:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6346 | process_fn(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6355:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6355 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6355:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 6355 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6367:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6367 | confirm_fn(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6376:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6376 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6376:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 6376 |       memset(buf, 0, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6396:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6396 | su_fin(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6408:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 6408 |     { strcpy(p = i->pw1, "\377"); l = sizeof(i->pw1) - 1; }[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6408:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 6408 |     { strcpy(p = i->pw1, "\377"); l = sizeof(i->pw1) - 1; }[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6410:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 6410 |     { strcpy(p = i->pw2, "\377"); l = sizeof(i->pw2) - 1; }[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6410:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 6410 |     { strcpy(p = i->pw2, "\377"); l = sizeof(i->pw2) - 1; }[0m
      | [0;1;32m      ^~~~~~
[0m[1mprocess.c:6411:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6411 |   if (buf && len)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 6412 |     strncpy(p, buf, 1 + ((l < len) ? l : len));[0m
      | [0;1;32m                                               
[0m[1mprocess.c:6412:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6412 |     strncpy(p, buf, 1 + ((l < len) ? l : len));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprocess.c:6412:5: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 6412 |     strncpy(p, buf, 1 + ((l < len) ? l : len));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mprocess.c:6413:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6413 |   if (!*i->name)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 6414 |     Input("Screen User: ", sizeof(i->name) - 1, INP_COOKED, su_fin, (char *)i, 0);[0m
 6415 |   else if (!*i->pw1)[0m
      | [0;32m  } 
[0m[1mprocess.c:6415:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6415 |   else if (!*i->pw1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 6416 |     Input("User's UNIX Password: ", sizeof(i->pw1)-1, INP_COOKED|INP_NOECHO, su_fin, (char *)i, 0);[0m
 6417 |   else if (!*i->pw2)[0m
      | [0;32m  } 
[0m[1mprocess.c:6417:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6417 |   else if (!*i->pw2)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 6418 |     Input("User's Screen Password: ", sizeof(i->pw2)-1, INP_COOKED|INP_NOECHO, su_fin, (char *)i, 0);[0m
 6419 |   else[0m
      | [0;32m  } 
[0m[1mprocess.c:6421:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6421 |       if ((p = DoSu(i->up, i->name, i->pw2, i->pw1)))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 6422 |         Msg(0, "%s", p);[0m
      | [0;1;32m                        
[0m[1mprocess.c:6428:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6428 | InputSu(w, up, name)[0m
      | [0;1;32m^
[0m[1mprocess.c:6435:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6435 |   if (!(i = (struct inputsu *)calloc(1, sizeof(struct inputsu))))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 6436 |     return -1;[0m
      | [0;1;32m              
[0m[1mprocess.c:6439:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6439 |   if (name && *name)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 6440 |     su_fin(name, (int)strlen(name), (char *)i); /* can also initialise stuff */[0m
 6441 |   else[0m
      | [0;32m  } 
[0m[1mprocess.c:6441:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6441 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 6442 |     su_fin((char *)0, 0, (char *)i);[0m
      | [0;1;32m                                    
[0m[1mprocess.c:6450:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6450 | pass1(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6457:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6457 |   if (!*buf)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 6458 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:6460:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6460 |   if (u->u_password != NullStr)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 6461 |     free((char *)u->u_password);[0m
      | [0;1;32m                                
[0m[1mprocess.c:6463:3: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 6463 |   bzero(buf, strlen(buf));[0m
      | [0;1;32m  ^~~~~
[0m[1mprocess.c:6463:3: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 6463 |   bzero(buf, strlen(buf));[0m
      | [0;1;32m  ^~~~~
[0m[1mprocess.c:6468:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6468 | pass2(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6483:11: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 6483 |           bzero(u->u_password, strlen(u->u_password));[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:6483:11: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 6483 |           bzero(u->u_password, strlen(u->u_password));[0m
      | [0;1;32m          ^~~~~
[0m[1mprocess.c:6491:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6491 |       if (buf)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6492 |         bzero(buf, strlen(buf));[0m
      | [0;1;32m                                
[0m[1mprocess.c:6492:9: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 6492 |         bzero(buf, strlen(buf));[0m
      | [0;1;32m        ^~~~~
[0m[1mprocess.c:6492:9: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 6492 |         bzero(buf, strlen(buf));[0m
      | [0;1;32m        ^~~~~
[0m[1mprocess.c:6497:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6497 |       for (st = 0; st < 2; st++)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 6498 |         salt[st] = 'A' + (int)((time(0) >> 6 * st) % 26);[0m
      | [0;1;32m                                                         
[0m[1mprocess.c:6501:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 6501 |       bzero(u->u_password, strlen(u->u_password));[0m
      | [0;1;32m      ^~~~~
[0m[1mprocess.c:6501:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 6501 |       bzero(u->u_password, strlen(u->u_password));[0m
      | [0;1;32m      ^~~~~
[0m[1mprocess.c:6510:7: [0m[0;1;35mwarning: [0m[1mThe bzero() function is obsoleted by memset() [clang-analyzer-security.insecureAPI.bzero][0m
 6510 |       bzero(buf, strlen(buf));[0m
      | [0;1;32m      ^~~~~
[0m[1mprocess.c:6510:7: [0m[0;1;36mnote: [0mThe bzero() function is obsoleted by memset()[0m
 6510 |       bzero(buf, strlen(buf));[0m
      | [0;1;32m      ^~~~~
[0m[1mprocess.c:6512:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6512 |       if (u->u_plop.buf)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 6513 |         UserFreeCopyBuffer(u);[0m
      | [0;1;32m                              
[0m[1mprocess.c:6523:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6523 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 6524 |         Msg(0, "[ Password moved into copybuffer ]");[0m
      | [0;1;32m                                                     
[0m[1mprocess.c:6533:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6533 | digraph_find(buf)[0m
      | [0;1;32m^
[0m[1mprocess.c:6537:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6537 |   for (i = 0; i < MAX_DIGRAPH && digraphs[i].d[0]; i++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 6538 |     if ((digraphs[i].d[0] == (unsigned char)buf[0] && digraphs[i].d[1] == (unsigned char)buf[1]) ||[0m
 6539 |         (digraphs[i].d[0] == (unsigned char)buf[1] && digraphs[i].d[1] == (unsigned char)buf[0]))[0m
 6540 |       break;[0m
      | [0;1;32m            
[0m[1mprocess.c:6539:91: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6539 |         (digraphs[i].d[0] == (unsigned char)buf[1] && digraphs[i].d[1] == (unsigned char)buf[0]))[0m
      | [0;1;32m                                                                                                 ^
[0m      | [0;32m                                                                                                  {
[0m 6540 |       break;[0m
      | [0;1;32m            
[0m[1mprocess.c:6545:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6545 | digraph_fn(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:6556:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6556 |       if (ch < ' ' || ch == '\177')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 6557 |         return;[0m
      | [0;1;32m               
[0m[1mprocess.c:6560:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6560 |           if (len == 1)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6561 |             return;[0m
      | [0;1;32m                   
[0m[1mprocess.c:6567:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6567 |           if (len == (*buf == 'U' ? 5 : 3))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 6568 |             buf[len] = '\n';[0m
      | [0;1;32m                            
[0m[1mprocess.c:6578:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6578 |           if (len == 3)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 6579 |             buf[len] = '\n';[0m
      | [0;1;32m                            
[0m[1mprocess.c:6582:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6582 |       if (len == 1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 6583 |         buf[len] = '\n';[0m
      | [0;1;32m                        
[0m[1mprocess.c:6586:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6586 |   if (len < 1)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6587 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:6593:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6593 |   if (len < 2)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6594 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:6607:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6607 |   if (flayer->l_encoding == UTF8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 6608 |     i = ToUtf8(buf, x); /* buf is big enough for all UTF-8 codes */[0m
      | [0;1;32m                                                                   
[0m[1mprocess.c:6610:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6610 |   while(i)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 6611 |     LayProcess(&buf, &i);[0m
      | [0;1;32m                         
[0m[1mprocess.c:6616:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6616 | StuffKey(i)[0m
      | [0;1;32m^
[0m[1mprocess.c:6642:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6642 |   if (i >= T_CURSOR - T_CAPS && i < T_KEYPAD - T_CAPS && D_cursorkeys)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 6643 |     i += T_OCAPS - T_CURSOR;[0m
 6644 |   else if (i >= T_KEYPAD - T_CAPS && i < T_OCAPS - T_CAPS && D_keypad)[0m
      | [0;32m  } 
[0m[1mprocess.c:6644:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6644 |   else if (i >= T_KEYPAD - T_CAPS && i < T_OCAPS - T_CAPS && D_keypad)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 6645 |     i += T_OCAPS - T_CURSOR;[0m
      | [0;1;32m                            
[0m[1mprocess.c:6651:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6651 |   if (flayer && flayer->l_mode == 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 6652 |     act = i < KMAP_KEYS+KMAP_AKEYS ? &mmtab[i] : &kmap_exts[i - (KMAP_KEYS+KMAP_AKEYS)].mm;[0m
      | [0;1;32m                                                                                           
[0m[1mprocess.c:6654:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6654 |   if ((!act || act->nr == RC_ILLEGAL) && !D_mapdefault)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 6655 |     act = i < KMAP_KEYS+KMAP_AKEYS ? &umtab[i] : &kmap_exts[i - (KMAP_KEYS+KMAP_AKEYS)].um;[0m
      | [0;1;32m                                                                                           
[0m[1mprocess.c:6656:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6656 |   if (!act || act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 6657 |     act = i < KMAP_KEYS+KMAP_AKEYS ? &dmtab[i] : &kmap_exts[i - (KMAP_KEYS+KMAP_AKEYS)].dm;[0m
      | [0;1;32m                                                                                           
[0m[1mprocess.c:6662:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6662 |       if (D_tcs[keyno + T_CAPS].str && strlen(D_tcs[keyno + T_CAPS].str) == 1)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 6663 |         return -1;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6673:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6673 |   if (act == 0 || act->nr == RC_ILLEGAL)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 6674 |     return -1;[0m
      | [0;1;32m              
[0m[1mprocess.c:6682:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6682 | IsOnDisplay(wi)[0m
      | [0;1;32m^
[0m[1mprocess.c:6687:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6687 |   for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 6688 |     if (Layer2Window(cv->c_layer) == wi)[0m
 6689 |       return 1;[0m
      | [0;1;32m               
[0m[1mprocess.c:6688:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6688 |     if (Layer2Window(cv->c_layer) == wi)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 6689 |       return 1;[0m
      | [0;1;32m               
[0m[1mprocess.c:6694:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6694 | FindNiceWindow(wi, presel)[0m
      | [0;1;32m^
[0m[1mprocess.c:6704:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6704 |       if (i >= 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 6705 |         wi = wtab[i];[0m
      | [0;1;32m                     
[0m[1mprocess.c:6707:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6707 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 6708 |     return wi;[0m
      | [0;1;32m              
[0m[1mprocess.c:6710:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6710 |   if (wi && AclCheckPermWin(D_user, ACL_READ, wi))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 6711 |     wi = 0;[0m
      | [0;1;32m           
[0m[1mprocess.c:6718:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6718 |       for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 6719 |         if (!wi->w_layer.l_cvlist && !AclCheckPermWin(D_user, ACL_WRITE, wi))[0m
 6720 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:6719:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6719 |         if (!wi->w_layer.l_cvlist && !AclCheckPermWin(D_user, ACL_WRITE, wi))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 6720 |           break;[0m
      | [0;1;32m                
[0m[1mprocess.c:6721:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6721 |       if (!wi)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6722 |         for (wi = windows; wi; wi = wi->w_next)[0m
 6723 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi) && !AclCheckPermWin(D_user, ACL_WRITE, wi))[0m
 6724 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6722:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6722 |         for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 6723 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi) && !AclCheckPermWin(D_user, ACL_WRITE, wi))[0m
 6724 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6723:92: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6723 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi) && !AclCheckPermWin(D_user, ACL_WRITE, wi))[0m
      | [0;1;32m                                                                                                  ^
[0m      | [0;32m                                                                                                   {
[0m 6724 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6725:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6725 |       if (!wi)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6726 |         for (wi = windows; wi; wi = wi->w_next)[0m
 6727 |           if (!wi->w_layer.l_cvlist && !AclCheckPermWin(D_user, ACL_READ, wi))[0m
 6728 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6726:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6726 |         for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 6727 |           if (!wi->w_layer.l_cvlist && !AclCheckPermWin(D_user, ACL_READ, wi))[0m
 6728 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6727:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6727 |           if (!wi->w_layer.l_cvlist && !AclCheckPermWin(D_user, ACL_READ, wi))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 6728 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6729:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6729 |       if (!wi)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6730 |         for (wi = windows; wi; wi = wi->w_next)[0m
 6731 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi) && !AclCheckPermWin(D_user, ACL_READ, wi))[0m
 6732 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6730:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6730 |         for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 6731 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi) && !AclCheckPermWin(D_user, ACL_READ, wi))[0m
 6732 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6731:91: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6731 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi) && !AclCheckPermWin(D_user, ACL_READ, wi))[0m
      | [0;1;32m                                                                                                 ^
[0m      | [0;32m                                                                                                  {
[0m 6732 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6734:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6734 |       if (!wi)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6735 |         for (wi = windows; wi; wi = wi->w_next)[0m
 6736 |           if (!wi->w_layer.l_cvlist)[0m
 6737 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6735:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6735 |         for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 6736 |           if (!wi->w_layer.l_cvlist)[0m
 6737 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6736:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6736 |           if (!wi->w_layer.l_cvlist)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 6737 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6738:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6738 |       if (!wi)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6739 |         for (wi = windows; wi; wi = wi->w_next)[0m
 6740 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi))[0m
 6741 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6739:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6739 |         for (wi = windows; wi; wi = wi->w_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 6740 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi))[0m
 6741 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6740:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6740 |           if (wi->w_layer.l_cvlist && !IsOnDisplay(wi))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 6741 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6744:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6744 |   if (wi && AclCheckPermWin(D_user, ACL_READ, wi))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 6745 |     wi = 0;[0m
      | [0;1;32m           
[0m[1mprocess.c:6813:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6813 | CalcSlicePercent(cv, percent)[0m
      | [0;1;32m^
[0m[1mprocess.c:6818:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6818 |   if (!cv || !cv->c_slback)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 6819 |     return percent;[0m
      | [0;1;32m                   
[0m[1mprocess.c:6822:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6822 |   for (cv = cv->c_slback->c_slperp, wsum = 0; cv; cv = cv->c_slnext)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 6823 |     wsum += cv->c_slweight;[0m
      | [0;1;32m                           
[0m[1mprocess.c:6824:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6824 |   if (wsum == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 6825 |     return 0;[0m
      | [0;1;32m             
[0m[1mprocess.c:6830:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6830 | ChangeCanvasSize(fcv, abs, diff, gflag, percent)[0m
      | [0;1;32m^
[0m[1mprocess.c:6841:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6841 |   if (abs == 0 && diff == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 6842 |     return 0;[0m
      | [0;1;32m             
[0m[1mprocess.c:6845:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6845 |       if (diff == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 6846 |           fcv->c_slweight = 0;[0m
 6847 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:6849:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6849 |           for (cv = fcv->c_slback->c_slperp; cv; cv = cv->c_slnext)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 6850 |             cv->c_slweight = 0;[0m
      | [0;1;32m                               
[0m[1mprocess.c:6853:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6853 |           if (gflag && cv && cv->c_slback)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 6854 |             ChangeCanvasSize(cv, abs, diff, gflag, percent);[0m
      | [0;1;32m                                                            
[0m[1mprocess.c:6860:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6860 |       if (diff < 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 6861 |         diff = 0;[0m
      | [0;1;32m                 
[0m[1mprocess.c:6862:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6862 |       if (percent && diff > percent)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 6863 |         diff = percent;[0m
      | [0;1;32m                       
[0m[1mprocess.c:6868:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6868 |       for (cv = fcv->c_slback->c_slperp, wsum = 0; cv; cv = cv->c_slnext)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 6869 |         wsum += cv->c_slweight;[0m
      | [0;1;32m                               
[0m[1mprocess.c:6877:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6877 |               for (cv = fcv->c_slback->c_slperp; cv; cv = cv->c_slnext)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 6878 |                 cv->c_slweight *= scale;[0m
      | [0;1;32m                                        
[0m[1mprocess.c:6887:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6887 |                   if (cv->c_slweight == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 6888 |                     cv->c_slweight = 1;[0m
      | [0;1;32m                                       
[0m[1mprocess.c:6898:114: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6898 |       if (abs && diff == (fcv->c_slorient == SLICE_VERT ? fcv->c_ye - fcv->c_ys + 2 : fcv->c_xe - fcv->c_xs + 2))[0m
      | [0;1;32m                                                                                                                 ^
[0m      | [0;32m                                                                                                                  {
[0m 6899 |         return 0;[0m
      | [0;1;32m                 
[0m[1mprocess.c:6907:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6907 |   if (abs)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 6908 |     diff = diff - fcv->c_slweight;[0m
      | [0;1;32m                                  
[0m[1mprocess.c:6910:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6910 |   if (diff == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 6911 |     return 0;[0m
      | [0;1;32m             
[0m[1mprocess.c:6926:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6926 |           if (dir == -1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 6927 |             break;[0m
      | [0;1;32m                  
[0m[1mprocess.c:6932:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6932 |       if (percent)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 6933 |         m = 1;[0m
 6934 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:6934:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6934 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 6935 |         m = cv->c_slperp ? CountCanvasPerp(cv) * 2 : 2;[0m
      | [0;1;32m                                                       
[0m[1mprocess.c:6940:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6940 |           if (have > diff)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 6941 |             have = diff;[0m
      | [0;1;32m                        
[0m[1mprocess.c:6952:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6952 |       if (cv && cv->c_slback)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6953 |         done += ChangeCanvasSize(fcv->c_slback->c_slback, 0, diff, gflag, percent);[0m
      | [0;1;32m                                                                                   
[0m[1mprocess.c:6961:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 6961 | ResizeRegions(arg, flags)[0m
      | [0;1;32m^
[0m[1mprocess.c:6971:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6971 |   if (!*arg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 6972 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:6981:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6981 |   if (orient == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 6982 |     orient = D_forecv->c_slorient;[0m
      | [0;1;32m                                  
[0m[1mprocess.c:6988:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6988 |       if (cv->c_slperp->c_slorient & orient)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 6989 |         EqualizeCanvas(cv->c_slperp, gflag);[0m
      | [0;1;32m                                            
[0m[1mprocess.c:6998:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6998 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 6999 |            EqualizeCanvas(cv, gflag);[0m
      | [0;1;32m                                     
[0m[1mprocess.c:7019:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7019 |       if (l > 0 && arg[l - 1] == '%')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 7020 |         percent = 1000;[0m
      | [0;1;32m                       
[0m[1mprocess.c:7021:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7021 |       if (*arg == '+')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 7022 |         diff = atoi(arg + 1);[0m
 7023 |       else if (*arg == '-')[0m
      | [0;32m      } 
[0m[1mprocess.c:7023:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7023 |       else if (*arg == '-')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 7024 |         diff = -atoi(arg + 1);[0m
 7025 |       else[0m
      | [0;32m      } 
[0m[1mprocess.c:7028:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7028 |           if (diff < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 7029 |             diff = 0;[0m
      | [0;1;32m                     
[0m[1mprocess.c:7033:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7033 |   if (!abs && !diff)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 7034 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:7035:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7035 |   if (percent)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 7036 |     diff = diff * percent / 100;[0m
      | [0;1;32m                                
[0m[1mprocess.c:7038:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7038 |   if (cv->c_slorient & orient)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 7039 |     ChangeCanvasSize(cv, abs, diff, gflag, percent);[0m
      | [0;1;32m                                                    
[0m[1mprocess.c:7040:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7040 |   if (cv->c_slback->c_slorient & orient)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 7041 |     ChangeCanvasSize(cv->c_slback, abs, diff, gflag, percent);[0m
      | [0;1;32m                                                              
[0m[1mprocess.c:7112:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 7112 | ResizeFin(buf, len, data)[0m
      | [0;1;32m^
[0m[1mprocess.c:7125:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7125 |   if (ch == 'h')[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 7126 |     flags ^= RESIZE_FLAG_H;[0m
 7127 |   else if (ch == 'v')[0m
      | [0;32m  } 
[0m[1mprocess.c:7127:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7127 |   else if (ch == 'v')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 7128 |     flags ^= RESIZE_FLAG_V;[0m
 7129 |   else if (ch == 'b')[0m
      | [0;32m  } 
[0m[1mprocess.c:7129:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7129 |   else if (ch == 'b')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 7130 |     flags |= RESIZE_FLAG_H|RESIZE_FLAG_V;[0m
 7131 |   else if (ch == 'p')[0m
      | [0;32m  } 
[0m[1mprocess.c:7131:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7131 |   else if (ch == 'p')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 7132 |     flags ^= D_forecv->c_slorient == SLICE_VERT ? RESIZE_FLAG_H : RESIZE_FLAG_V;[0m
 7133 |   else if (ch == 'l')[0m
      | [0;32m  } 
[0m[1mprocess.c:7133:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7133 |   else if (ch == 'l')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 7134 |     flags ^= RESIZE_FLAG_L;[0m
 7135 |   else[0m
      | [0;32m  } 
[0m[1mprocess.c:7135:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7135 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 7136 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:7143:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 7143 | SetForeCanvas(d, cv)[0m
      | [0;1;32m^
[0m[1mprocess.c:7148:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7148 |   if (d->d_forecv == cv)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 7149 |     return;[0m
      | [0;1;32m           
[0m[1mprocess.c:7162:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7162 |   if (D_other == fore)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 7163 |     D_other = 0;[0m
      | [0;1;32m                
[0m[1mprocess.c:7199:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 7199 | ParseAttrColor(s1, s2, msgok)[0m
      | [0;1;32m^
[0m[1mprocess.c:7208:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7208 |   while (*s == ' ')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 7209 |     s++;[0m
      | [0;1;32m        
[0m[1mprocess.c:7211:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7211 |   while (*ss && *ss != ' ')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 7212 |     ss++;[0m
      | [0;1;32m         
[0m[1mprocess.c:7213:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7213 |   while (*ss == ' ')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 7214 |     ss++;[0m
      | [0;1;32m         
[0m[1mprocess.c:7233:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7233 |       else if (*s == '=')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7234 |         s++;[0m
      | [0;1;32m            
[0m[1mprocess.c:7238:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7238 |           if (*s >= '0' && *s <= '9')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 7239 |             n = n * 16 + (*s++ - '0');[0m
 7240 |           else if (*s >= 'a' && *s <= 'f')[0m
      | [0;32m          } 
[0m[1mprocess.c:7240:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7240 |           else if (*s >= 'a' && *s <= 'f')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 7241 |             n = n * 16 + (*s++ - ('a' - 10));[0m
 7242 |           else if (*s >= 'A' && *s <= 'F')[0m
      | [0;32m          } 
[0m[1mprocess.c:7242:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7242 |           else if (*s >= 'A' && *s <= 'F')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 7243 |             n = n * 16 + (*s++ - ('A' - 10));[0m
 7244 |           else if (*s && *s != ' ')[0m
      | [0;32m          } 
[0m[1mprocess.c:7246:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7246 |               if (msgok)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 7247 |                 Msg(0, "Illegal attribute hexchar '%c'", *s);[0m
      | [0;1;32m                                                             
[0m[1mprocess.c:7255:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7255 |               if (*s == 'd')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 7256 |                 n |= A_DI;[0m
 7257 |               else if (*s == 'u')[0m
      | [0;32m              } 
[0m[1mprocess.c:7257:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7257 |               else if (*s == 'u')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 7258 |                 n |= A_US;[0m
 7259 |               else if (*s == 'b')[0m
      | [0;32m              } 
[0m[1mprocess.c:7259:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7259 |               else if (*s == 'b')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 7260 |                 n |= A_BD;[0m
 7261 |               else if (*s == 'r')[0m
      | [0;32m              } 
[0m[1mprocess.c:7261:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7261 |               else if (*s == 'r')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 7262 |                 n |= A_RV;[0m
 7263 |               else if (*s == 's')[0m
      | [0;32m              } 
[0m[1mprocess.c:7263:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7263 |               else if (*s == 's')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 7264 |                 n |= A_SO;[0m
 7265 |               else if (*s == 'B')[0m
      | [0;32m              } 
[0m[1mprocess.c:7265:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7265 |               else if (*s == 'B')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 7266 |                 n |= A_BL;[0m
 7267 |               else[0m
      | [0;32m              } 
[0m[1mprocess.c:7269:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7269 |                   if (msgok)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 7270 |                     Msg(0, "Illegal attribute specifier '%c'", *s);[0m
      | [0;1;32m                                                                   
[0m[1mprocess.c:7278:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7278 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 7279 |             Msg(0, "junk after attribute description: '%c'", *s);[0m
      | [0;1;32m                                                                 
[0m[1mprocess.c:7282:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7282 |       if (mode == -1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 7283 |         r = n << 8 | n;[0m
 7284 |       else if (mode == 1)[0m
      | [0;32m      } 
[0m[1mprocess.c:7284:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7284 |       else if (mode == 1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7285 |         r = n << 8;[0m
 7286 |       else if (mode == 2)[0m
      | [0;32m      } 
[0m[1mprocess.c:7286:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7286 |       else if (mode == 2)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7287 |         r = n;[0m
 7288 |       else if (mode == 0)[0m
      | [0;32m      } 
[0m[1mprocess.c:7288:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7288 |       else if (mode == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7289 |         r = 0xffff ^ n;[0m
      | [0;1;32m                       
[0m[1mprocess.c:7291:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7291 |   while (*s && *s == ' ')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7292 |     s++;[0m
      | [0;1;32m        
[0m[1mprocess.c:7298:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7298 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 7299 |             Msg(0, "junk after description: '%c'", *s);[0m
      | [0;1;32m                                                       
[0m[1mprocess.c:7303:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7303 |       while (*s && *s == ' ')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 7304 |         s++;[0m
      | [0;1;32m            
[0m[1mprocess.c:7322:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7322 |           for (i = 0; costr[i]; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 7323 |             if (*s == costr[i])[0m
 7324 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:7323:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7323 |             if (*s == costr[i])[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 7324 |               break;[0m
      | [0;1;32m                    
[0m[1mprocess.c:7327:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7327 |               if (msgok)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 7328 |                 Msg(0, "illegal color descriptor: '%c'", *s);[0m
      | [0;1;32m                                                             
[0m[1mprocess.c:7334:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7334 |           if (i >= 48)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 7335 |             n = (n & 0x20ff) | 0x200;[0m
      | [0;1;32m                                     
[0m[1mprocess.c:7339:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7339 |       if ((n & 0xf00) == 0xf00)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 7340 |         n ^= 0xf00;     /* clear superflous bits */[0m
      | [0;1;32m                                                   
[0m[1mprocess.c:7342:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7342 |       if (n & 0x2000)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 7343 |         n ^= 0x2400;    /* shift bit into right position */[0m
      | [0;1;32m                                                           
[0m[1mprocess.c:7345:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7345 |       if (numco == 1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 7346 |         n |= 0xf0;      /* don't change bg color */[0m
      | [0;1;32m                                                   
[0m[1mprocess.c:7347:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7347 |       if (numco != 2 && n != 0xff)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 7348 |         n |= 0x100;     /* special invert mode */[0m
      | [0;1;32m                                                 
[0m[1mprocess.c:7351:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7351 |           if (msgok)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 7352 |             Msg(0, "junk after color description: '%c'", *s);[0m
      | [0;1;32m                                                             
[0m[1mprocess.c:7360:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7360 |   while (*s && *s == ' ')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7361 |     s++;[0m
      | [0;1;32m        
[0m[1mprocess.c:7364:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7364 |       if (msgok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 7365 |         Msg(0, "junk after description: '%c'", *s);[0m
      | [0;1;32m                                                   
[0m[1mprocess.c:7381:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 7381 | ApplyAttrColor(i, mc)[0m
      | [0;1;32m^
[0m[1mprocess.c:7393:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7393 |       if (mc->attr & (A_SO|A_RV))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 7394 | # ifdef COLORS16[0m
 7395 |         i = ((i & 0x0f) << 4) | ((i & 0xf0) >> 4) | ((i & 0x200) << 1) | ((i & 0x400) >> 1);[0m
      | [0;1;32m                                                                                            
[0m[1mprocess.c:7401:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7401 |   if ((i & 0x0f) != 0x0f)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7402 |     mc->attr = (mc->attr & 0xbf) | ((i >> 3) & 0x40);[0m
      | [0;1;32m                                                     
[0m[1mprocess.c:7403:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7403 |   if ((i & 0xf0) != 0xf0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7404 |     mc->attr = (mc->attr & 0x7f) | ((i >> 3) & 0x80);[0m
      | [0;1;32m                                                     
[0m[1mprocess.c:7407:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7407 |   if ((i & 0x0e) == 0x0e)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7408 |     i = (i & 0xf0) | (mc->color & 0x0f);[0m
      | [0;1;32m                                        
[0m[1mprocess.c:7409:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 7409 |   if ((i & 0xe0) == 0xe0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 7410 |     i = (i & 0x0f) | (mc->color & 0xf0);[0m
      | [0;1;32m                                        
[0m1149 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[35/38][244.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpvwsbjxpa.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/layout.c
[1mlayout.c:53:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |     if (cv != c)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   54 |       free(cv);[0m
      | [0;1;32m               
[0m[1mlayout.c:63:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |   if (startat >= MAXLAY || startat < 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   64 |     startat = 0;[0m
      | [0;1;32m                
[0m[1mlayout.c:66:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |     if (!laytab[i])[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   67 |       break;[0m
      | [0;1;32m            
[0m[1mlayout.c:68:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |     if (++i == MAXLAY)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   69 |       i = 0;[0m
      | [0;1;32m            
[0m[1mlayout.c:83:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |   while (*pl)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m   84 |     pl = &(*pl)->lay_next;[0m
      | [0;1;32m                          
[0m[1mlayout.c:93:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   for (lay = layouts; lay; lay = lay->lay_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   94 |     if (!strcmp(lay->lay_title, name))[0m
   95 |       break;[0m
      | [0;1;32m            
[0m[1mlayout.c:94:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |     if (!strcmp(lay->lay_title, name))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   95 |       break;[0m
      | [0;1;32m            
[0m[1mlayout.c:96:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (lay)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   97 |     FreeLayoutCv(&lay->lay_canvas);[0m
   98 |   else[0m
      | [0;32m  } 
[0m[1mlayout.c:98:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   99 |     lay = CreateLayout(name, 0);[0m
      | [0;1;32m                                
[0m[1mlayout.c:100:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |   if (!lay)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  101 |     return;[0m
      | [0;1;32m           
[0m[1mlayout.c:112:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   if (!lay || !lay->lay_autosave)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  113 |     return;[0m
      | [0;1;32m           
[0m[1mlayout.c:126:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |   for (i = 0, s = name; *s >= '0' && *s <= '9'; s++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  127 |     i = i * 10 + (*s - '0');[0m
      | [0;1;32m                            
[0m[1mlayout.c:128:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |   if (!*s && s != name && i >= 0 && i < MAXLAY)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  129 |     return laytab[i];[0m
      | [0;1;32m                     
[0m[1mlayout.c:130:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |   for (lay = layouts; lay; lay = lay->lay_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  131 |     if (!strcmp(lay->lay_title, name))[0m
  132 |       break;[0m
      | [0;1;32m            
[0m[1mlayout.c:131:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |     if (!strcmp(lay->lay_title, name))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  132 |       break;[0m
      | [0;1;32m            
[0m[1mlayout.c:138:18: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_layout' results in a dereference of a null pointer (loaded from variable 'display') [clang-analyzer-core.NullDereference][0m
  138 |   AutosaveLayout(D_layout);[0m
      | [0;1;32m                 ^
[0m[1m./display.h:203:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_layout'[0m
  203 | #define D_layout        DISPLAY(d_layout)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mlayout.c:257:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  257 |   for (; *layp; layp = &(*layp)->lay_next) {[0m
      | [0;1;32m  ^
[0m[1mlayout.c:258:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  258 |     if (*layp == lay) {[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mlayout.c:258:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  258 |     if (*layp == lay) {[0m
      | [0;1;32m    ^
[0m[1mlayout.c:260:7: [0m[0;1;36mnote: [0m Execution continues on line 263[0m
  260 |       break;[0m
      | [0;1;32m      ^
[0m[1mlayout.c:265:7: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
  265 |   if (display && D_layout == lay)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlayout.c:265:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  265 |   if (display && D_layout == lay)[0m
      | [0;1;32m              ^
[0m[1mlayout.c:270:7: [0m[0;1;36mnote: [0mAssuming field 'lay_title' is null[0m
  270 |   if (lay->lay_title)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mlayout.c:270:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  270 |   if (lay->lay_title)[0m
      | [0;1;32m  ^
[0m[1mlayout.c:274:7: [0m[0;1;36mnote: [0mAssuming 'layouts' is non-null[0m
  274 |   if (layouts)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlayout.c:274:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  274 |   if (layouts)[0m
      | [0;1;32m  ^
[0m[1mlayout.c:275:17: [0m[0;1;36mnote: [0m'display' is null[0m
  275 |     LoadLayout((display && D_layout) ? D_layout : *layp ? *layp : layouts,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mlayout.c:275:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  275 |     LoadLayout((display && D_layout) ? D_layout : *layp ? *layp : layouts,[0m
      | [0;1;32m                        ^
[0m[1mlayout.c:275:51: [0m[0;1;36mnote: [0m'?' condition is true[0m
  275 |     LoadLayout((display && D_layout) ? D_layout : *layp ? *layp : layouts,[0m
      | [0;1;32m                                                  ^
[0m[1mlayout.c:276:2: [0m[0;1;36mnote: [0m'display' is null[0m
  276 |         display ? &D_canvas : (struct canvas *)0);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mlayout.c:276:2: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mlayout.c:275:5: [0m[0;1;36mnote: [0mCalling 'LoadLayout'[0m
  275 |     LoadLayout((display && D_layout) ? D_layout : *layp ? *layp : layouts,[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  276 |         display ? &D_canvas : (struct canvas *)0);[0m
      | [0;1;32m        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlayout.c:138:18: [0m[0;1;36mnote: [0mAccess to field 'd_layout' results in a dereference of a null pointer (loaded from variable 'display')[0m
  138 |   AutosaveLayout(D_layout);[0m
      | [0;1;32m                 ^
[0m[1m./display.h:203:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_layout'[0m
  203 | #define D_layout        DISPLAY(d_layout)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mlayout.c:140:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  140 |     while (D_canvas.c_slperp)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  141 |       FreeCanvas(D_canvas.c_slperp);[0m
      | [0;1;32m                                    
[0m[1mlayout.c:147:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |   while (D_canvas.c_slperp)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  148 |     FreeCanvas(D_canvas.c_slperp);[0m
      | [0;1;32m                                  
[0m[1mlayout.c:151:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |   if (!D_forecv)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  152 |     MakeDefaultCanvas();[0m
      | [0;1;32m                        
[0m[1mlayout.c:171:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |   if (!lay)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  172 |     return;[0m
      | [0;1;32m           
[0m[1mlayout.c:182:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  183 |     layout_attach = lay;[0m
      | [0;1;32m                        
[0m[1mlayout.c:197:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |     if (pp - laytab == where && ss == buf)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  198 |       ss = s;[0m
      | [0;1;32m             
[0m[1mlayout.c:199:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |     if ((p = *pp) == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  200 |       continue;[0m
      | [0;1;32m               
[0m[1mlayout.c:203:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |     if (l > 20)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  204 |       l = 20;[0m
      | [0;1;32m             
[0m[1mlayout.c:205:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |     if (s - buf + l > len - 24)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  206 |       break;[0m
      | [0;1;32m            
[0m[1mlayout.c:211:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  211 |     sprintf(s, "%d", p->lay_number);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mlayout.c:211:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  211 |     sprintf(s, "%d", p->lay_number);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mlayout.c:212:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |     if (p->lay_number == where)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  213 |         ss = s;[0m
      | [0;1;32m               
[0m[1mlayout.c:215:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |     if (display && p == D_layout)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  216 |       *s++ = '*';[0m
      | [0;1;32m                 
[0m[1mlayout.c:218:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  218 |     strncpy(s, t, l);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mlayout.c:218:5: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  218 |     strncpy(s, t, l);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mlayout.c:230:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  231 |     return;[0m
      | [0;1;32m           
[0m[1mlayout.c:236:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |   if (where == -1 && D_layout)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  237 |     where = D_layout->lay_number;[0m
      | [0;1;32m                                 
[0m[1mlayout.c:244:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |       if (ss < buf)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  245 |         ss = buf;[0m
      | [0;1;32m                 
[0m[1mlayout.c:248:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  249 |     ss = buf;[0m
      | [0;1;32m             
[0m[1mlayout.c:265:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |   if (display && D_layout == lay)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  266 |     D_layout = (struct layout *)0;[0m
      | [0;1;32m                                  
[0m[1mlayout.c:270:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |   if (lay->lay_title)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  271 |     free(lay->lay_title);[0m
      | [0;1;32m                         
[0m[1mlayout.c:274:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |   if (layouts)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  275 |     LoadLayout((display && D_layout) ? D_layout : *layp ? *layp : layouts,[0m
  276 |         display ? &D_canvas : (struct canvas *)0);[0m
      | [0;1;32m                                                  
[0m[1mlayout.c:287:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |       if (l->l_cvlist == 0 && (wi == 0 || l != wi->w_savelayer))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  288 |         KillLayerChain(l);[0m
      | [0;1;32m                          
[0m[1mlayout.c:300:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |     if (cv->c_slperp)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  301 |       UpdateLayoutCanvas(cv->c_slperp, wi);[0m
      | [0;1;32m                                           
[0m[1mlayout.c:309:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |   for (c = cv->c_slperp; c && c->c_slnext; c = c->c_slnext)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  310 |     fprintf(file, "split%s\n", c->c_slorient == SLICE_HORI ? " -v" : "");[0m
      | [0;1;32m                                                                         
[0m[1mlayout.c:310:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  310 |     fprintf(file, "split%s\n", c->c_slorient == SLICE_HORI ? " -v" : "");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mlayout.c:310:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  310 |     fprintf(file, "split%s\n", c->c_slorient == SLICE_HORI ? " -v" : "");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mlayout.c:313:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |     if (c->c_slperp)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  314 |       dump_canvas(c, file);[0m
  315 |     else[0m
      | [0;32m    } 
[0m[1mlayout.c:315:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  316 |       fprintf(file, "focus\n");[0m
      | [0;1;32m                               
[0m[1mlayout.c:316:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  316 |       fprintf(file, "focus\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlayout.c:316:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  316 |       fprintf(file, "focus\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlayout.c:323:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |   if (!file)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  324 |     return 0;[0m
      | [0;1;32m             
[0m[1mlayout.c:341:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |   if (number < 0 || number >= MAXLAY)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  342 |     return 0;[0m
      | [0;1;32m             
[0m[1mlayout.c:347:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |   if (lay)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  348 |     lay->lay_number = old;[0m
      | [0;1;32m                          
[0m50 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[36/38][246.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpafhk5l06.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/canvas.c
[1mcanvas.c:43:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   43 | CanvasInitBlank(cv)[0m
      | [0;1;32m^
[0m[1mcanvas.c:59:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   59 | FreePerp(pcv)[0m
      | [0;1;32m^
[0m[1mcanvas.c:64:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |   if (!pcv->c_slperp)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   65 |     return;[0m
      | [0;1;32m           
[0m[1mcanvas.c:68:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   if (cv->c_slprev)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   69 |     cv->c_slprev->c_slnext = cv;[0m
      | [0;1;32m                                
[0m[1mcanvas.c:71:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (cv->c_slback && cv->c_slback->c_slperp == pcv)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   72 |     cv->c_slback->c_slperp = cv;[0m
      | [0;1;32m                                
[0m[1mcanvas.c:83:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |   if (cv->c_slnext)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   84 |     cv->c_slnext->c_slprev = cv;[0m
      | [0;1;32m                                
[0m[1mcanvas.c:90:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   90 | FreeCanvas(cv)[0m
      | [0;1;32m^
[0m[1mcanvas.c:97:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (cv->c_slprev)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   98 |     cv->c_slprev->c_slnext = cv->c_slnext;[0m
      | [0;1;32m                                          
[0m[1mcanvas.c:99:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |   if (cv->c_slnext)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  100 |     cv->c_slnext->c_slprev = cv->c_slprev;[0m
      | [0;1;32m                                          
[0m[1mcanvas.c:101:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  102 |     cv->c_slback->c_slperp = cv->c_slnext ? cv->c_slnext : cv->c_slprev;[0m
      | [0;1;32m                                                                        
[0m[1mcanvas.c:105:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |       while (cv->c_slperp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  106 |         FreeCanvas(cv->c_slperp);[0m
      | [0;1;32m                                 
[0m[1mcanvas.c:106:2: [0m[0;1;35mwarning: [0m[1mUse of memory after it is freed [clang-analyzer-unix.Malloc][0m
  106 |         FreeCanvas(cv->c_slperp);[0m
      | [0;1;32m        ^
[0m[1mcanvas.c:821:7: [0m[0;1;36mnote: [0mAssuming field 'c_slprev' is null[0m
  821 |   if (cv->c_slprev)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:821:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  821 |   if (cv->c_slprev)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:826:7: [0m[0;1;36mnote: [0mAssuming field 'c_slnext' is non-null[0m
  826 |   if (cv->c_slnext)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:826:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  826 |   if (cv->c_slnext)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:831:8: [0m[0;1;36mnote: [0m'ocv' is non-null[0m
  831 |   if (!ocv)[0m
      | [0;1;32m       ^~~
[0m[1mcanvas.c:831:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  831 |   if (!ocv)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:833:7: [0m[0;1;36mnote: [0mAssuming field 'c_slback' is null[0m
  833 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:833:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  833 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m                   ^
[0m[1mcanvas.c:836:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  836 |   while (D_canvas.c_slperp)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:837:5: [0m[0;1;36mnote: [0mCalling 'FreeCanvas'[0m
  837 |     FreeCanvas(D_canvas.c_slperp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanvas.c:97:7: [0m[0;1;36mnote: [0mAssuming field 'c_slprev' is null[0m
   97 |   if (cv->c_slprev)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:97:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   97 |   if (cv->c_slprev)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:99:7: [0m[0;1;36mnote: [0mAssuming field 'c_slnext' is null[0m
   99 |   if (cv->c_slnext)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:99:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   99 |   if (cv->c_slnext)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:101:7: [0m[0;1;36mnote: [0mAssuming field 'c_slback' is null[0m
  101 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:101:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  101 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m                   ^
[0m[1mcanvas.c:103:7: [0m[0;1;36mnote: [0mAssuming field 'c_slperp' is non-null[0m
  103 |   if (cv->c_slperp)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:103:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  103 |   if (cv->c_slperp)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:105:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  105 |       while (cv->c_slperp)[0m
      | [0;1;32m      ^
[0m[1mcanvas.c:106:2: [0m[0;1;36mnote: [0mCalling 'FreeCanvas'[0m
  106 |         FreeCanvas(cv->c_slperp);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanvas.c:97:7: [0m[0;1;36mnote: [0mAssuming field 'c_slprev' is null[0m
   97 |   if (cv->c_slprev)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:97:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   97 |   if (cv->c_slprev)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:99:7: [0m[0;1;36mnote: [0mAssuming field 'c_slnext' is null[0m
   99 |   if (cv->c_slnext)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:99:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   99 |   if (cv->c_slnext)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:101:7: [0m[0;1;36mnote: [0mAssuming field 'c_slback' is null[0m
  101 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:101:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  101 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m                   ^
[0m[1mcanvas.c:103:7: [0m[0;1;36mnote: [0mAssuming field 'c_slperp' is null[0m
  103 |   if (cv->c_slperp)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanvas.c:103:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  103 |   if (cv->c_slperp)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:112:7: [0m[0;1;36mnote: [0m'display' is non-null[0m
  112 |   if (display)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcanvas.c:112:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  112 |   if (display)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:114:11: [0m[0;1;36mnote: [0mAssuming 'cv' is not equal to field 'd_forecv'[0m
  114 |       if (D_forecv == cv)[0m
      | [0;1;32m          ^
[0m[1m./display.h:204:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_forecv'[0m
  204 | #define D_forecv        DISPLAY(d_forecv)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mcanvas.c:114:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  114 |       if (D_forecv == cv)[0m
      | [0;1;32m      ^
[0m[1mcanvas.c:118:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 125[0m
  118 |       for (cvp = &D_cvlist; *cvp ; cvp = &(*cvp)->c_next)[0m
      | [0;1;32m      ^
[0m[1mcanvas.c:125:7: [0m[0;1;36mnote: [0mAssuming field 'c_layer' is null[0m
  125 |   p = cv->c_layer ? Layer2Window(cv->c_layer) : 0;[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mcanvas.c:125:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mcanvas.c:127:7: [0m[0;1;36mnote: [0m'p' is null[0m
  127 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mcanvas.c:127:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  127 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:129:7: [0m[0;1;36mnote: [0mAssuming 'flayer' is not equal to field 'c_layer'[0m
  129 |   if (flayer == cv->c_layer)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mcanvas.c:129:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  129 |   if (flayer == cv->c_layer)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:131:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 138[0m
  131 |   for (vp = cv->c_vplist; vp; vp = nvp)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:140:3: [0m[0;1;36mnote: [0mMemory is released[0m
  140 |   free(cv);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mcanvas.c:106:2: [0m[0;1;36mnote: [0mReturning; memory was released via 1st parameter[0m
  106 |         FreeCanvas(cv->c_slperp);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanvas.c:105:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  105 |       while (cv->c_slperp)[0m
      | [0;1;32m      ^
[0m[1mcanvas.c:106:2: [0m[0;1;36mnote: [0mUse of memory after it is freed[0m
  106 |         FreeCanvas(cv->c_slperp);[0m
      | [0;1;32m        ^          ~~~~~~~~~~~~
[0m[1mcanvas.c:114:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       if (D_forecv == cv)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  115 |         D_forecv = 0;[0m
      | [0;1;32m                     
[0m[1mcanvas.c:118:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |       for (cvp = &D_cvlist; *cvp ; cvp = &(*cvp)->c_next)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  119 |         if (*cvp == cv)[0m
  120 |           {[0m
  121 |             *cvp = cv->c_next;[0m
  122 |             break;[0m
  123 |           }[0m
      | [0;1;32m           
[0m[1mcanvas.c:127:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  128 |     WindowChanged(p, 'u');[0m
      | [0;1;32m                          
[0m[1mcanvas.c:129:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |   if (flayer == cv->c_layer)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  130 |     flayer = 0;[0m
      | [0;1;32m               
[0m[1mcanvas.c:144:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  144 | CountCanvas(cv)[0m
      | [0;1;32m^
[0m[1mcanvas.c:154:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |           for (cvp = cv->c_slperp; cvp; cvp = cvp->c_slnext)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  155 |             if (cvp->c_slperp)[0m
  156 |               {[0m
  157 |                 n = CountCanvas(cvp->c_slperp);[0m
  158 |                 if (n > nump)[0m
  159 |                   nump = n;[0m
  160 |               }[0m
      | [0;1;32m               
[0m[1mcanvas.c:158:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |                 if (n > nump)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  159 |                   nump = n;[0m
      | [0;1;32m                           
[0m[1mcanvas.c:163:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  164 |         num++;[0m
      | [0;1;32m              
[0m[1mcanvas.c:170:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  170 | CountCanvasPerp(cv)[0m
      | [0;1;32m^
[0m[1mcanvas.c:175:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |   for (cvp = cv->c_slperp; cvp; cvp = cvp->c_slnext)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  176 |     if (cvp->c_slperp)[0m
  177 |       {[0m
  178 |         n = CountCanvas(cvp->c_slperp);[0m
  179 |         if (n > num)[0m
  180 |           num = n;[0m
  181 |       }[0m
      | [0;1;32m       
[0m[1mcanvas.c:179:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |         if (n > num)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  180 |           num = n;[0m
      | [0;1;32m                  
[0m[1mcanvas.c:186:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  186 | FindCanvas(x, y)[0m
      | [0;1;32m^
[0m[1mcanvas.c:195:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |       if (x >= cv->c_xs && x <= cv->c_xe && y >= cv->c_ys && y <= cv->c_ye + 1)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  196 |         return cv;[0m
      | [0;1;32m                  
[0m[1mcanvas.c:197:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |       if (cv == D_forecv)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  198 |         continue;[0m
      | [0;1;32m                 
[0m[1mcanvas.c:202:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |           if (x < cv->c_xs || x > cv->c_xe)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  203 |             continue;[0m
      | [0;1;32m                     
[0m[1mcanvas.c:204:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |           if (y < D_forecv->c_ys && y < cv->c_ys)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  205 |             continue;[0m
      | [0;1;32m                     
[0m[1mcanvas.c:206:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |           if (y > D_forecv->c_ye + 1 && y > cv->c_ye + 1)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  207 |             continue;[0m
      | [0;1;32m                     
[0m[1mcanvas.c:208:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |           if (y < cv->c_ys)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  209 |             m = cv->c_ys - y;[0m
      | [0;1;32m                             
[0m[1mcanvas.c:210:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |           if (y > cv->c_ye + 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  211 |             m = y - (cv->c_ye + 1);[0m
      | [0;1;32m                                   
[0m[1mcanvas.c:215:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |           if (y < cv->c_ys || y > cv->c_ye + 1)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  216 |             continue;[0m
      | [0;1;32m                     
[0m[1mcanvas.c:217:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |           if (x < D_forecv->c_xs && x < cv->c_xs)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  218 |             continue;[0m
      | [0;1;32m                     
[0m[1mcanvas.c:219:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |           if (x > D_forecv->c_xe && x > cv->c_xe)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  220 |             continue;[0m
      | [0;1;32m                     
[0m[1mcanvas.c:221:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |           if (x < cv->c_xs)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  222 |             m = cv->c_xs - x;[0m
      | [0;1;32m                             
[0m[1mcanvas.c:223:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |           if (x > cv->c_xe)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  224 |             m = x - cv->c_xe;[0m
      | [0;1;32m                             
[0m[1mcanvas.c:236:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  236 | SetCanvasWindow(cv, wi)[0m
      | [0;1;32m^
[0m[1mcanvas.c:250:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |       for (cvpp = &l->l_cvlist; (cvp = *cvpp); cvpp = &cvp->c_lnext)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  251 |         if (cvp == cv)[0m
  252 |           break;[0m
      | [0;1;32m                
[0m[1mcanvas.c:251:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |         if (cvp == cv)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  252 |           break;[0m
      | [0;1;32m                
[0m[1mcanvas.c:273:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |       if (l->l_cvlist == 0 && (p == 0 || l != p->w_savelayer))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  274 |         KillLayerChain(l);[0m
      | [0;1;32m                          
[0m[1mcanvas.c:281:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |       if (wi->w_savelayer && (wi->w_blocked || wi->w_savelayer->l_cvlist == 0))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  282 |         l = wi->w_savelayer;[0m
      | [0;1;32m                            
[0m[1mcanvas.c:287:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |       if (wi)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  288 |         l->l_data = (char *)wi;[0m
  289 |       else[0m
      | [0;32m      } 
[0m[1mcanvas.c:289:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  290 |         l->l_data = 0;[0m
      | [0;1;32m                      
[0m[1mcanvas.c:302:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |   if (flayer == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  303 |     flayer = l;[0m
      | [0;1;32m               
[0m[1mcanvas.c:316:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |   if (wi && D_other == wi)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  317 |     D_other = wi->w_next;       /* Might be 0, but that's OK. */[0m
      | [0;1;32m                                                                
[0m[1mcanvas.c:332:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |               for (pp = &windows; (p = *pp); pp = &p->w_next)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  333 |                 if (p == wi)[0m
  334 |                   break;[0m
      | [0;1;32m                        
[0m[1mcanvas.c:333:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |                 if (p == wi)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  334 |                   break;[0m
      | [0;1;32m                        
[0m[1mcanvas.c:336:14: [0m[0;1;35mwarning: [0m[1mAccess to field 'w_next' results in a dereference of a null pointer (loaded from variable 'p') [clang-analyzer-core.NullDereference][0m
  336 |               *pp = p->w_next;[0m
      | [0;1;32m                    ^
[0m[1mcanvas.c:906:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  906 |   for (; cv; cv = cv->c_slnext)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:908:11: [0m[0;1;36mnote: [0mAssuming field 'c_slperp' is null[0m
  908 |       if (cv->c_slperp)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mcanvas.c:908:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  908 |       if (cv->c_slperp)[0m
      | [0;1;32m      ^
[0m[1mcanvas.c:913:11: [0m[0;1;36mnote: [0mAssuming field 'c_layer' is non-null[0m
  913 |       p = cv->c_layer ? (struct win *)cv->c_layer->l_data : 0;[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mcanvas.c:913:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mcanvas.c:915:7: [0m[0;1;36mnote: [0mCalling 'SetCanvasWindow'[0m
  915 |       SetCanvasWindow(cv, p);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanvas.c:247:7: [0m[0;1;36mnote: [0m'l' is null[0m
  247 |   if (l)[0m
      | [0;1;32m      ^
[0m[1mcanvas.c:247:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  247 |   if (l)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:278:7: [0m[0;1;36mnote: [0mAssuming 'wi' is non-null[0m
  278 |   if (wi && wi->w_type != W_TYPE_GROUP)[0m
      | [0;1;32m      ^~
[0m[1mcanvas.c:278:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mcanvas.c:278:13: [0m[0;1;36mnote: [0mAssuming field 'w_type' is not equal to W_TYPE_GROUP[0m
  278 |   if (wi && wi->w_type != W_TYPE_GROUP)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanvas.c:278:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  278 |   if (wi && wi->w_type != W_TYPE_GROUP)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:281:11: [0m[0;1;36mnote: [0mAssuming field 'w_savelayer' is null[0m
  281 |       if (wi->w_savelayer && (wi->w_blocked || wi->w_savelayer->l_cvlist == 0))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mcanvas.c:281:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  281 |       if (wi->w_savelayer && (wi->w_blocked || wi->w_savelayer->l_cvlist == 0))[0m
      | [0;1;32m                          ^
[0m[1mcanvas.c:294:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  294 |   ASSERT(l->l_cvlist != cv);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mcanvas.c:302:7: [0m[0;1;36mnote: [0mAssuming 'flayer' is not equal to null[0m
  302 |   if (flayer == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mcanvas.c:302:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  302 |   if (flayer == 0)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:305:7: [0m[0;1;36mnote: [0m'wi' is non-null[0m
  305 |   if (wi && wi->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m      ^~
[0m[1mcanvas.c:305:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mcanvas.c:305:13: [0m[0;1;36mnote: [0mAssuming field 'w_type' is not equal to W_TYPE_GROUP[0m
  305 |   if (wi && wi->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanvas.c:305:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  305 |   if (wi && wi->w_type == W_TYPE_GROUP)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:316:7: [0m[0;1;36mnote: [0m'wi' is non-null[0m
  316 |   if (wi && D_other == wi)[0m
      | [0;1;32m      ^~
[0m[1mcanvas.c:316:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mcanvas.c:316:13: [0m[0;1;36mnote: [0mAssuming 'wi' is not equal to field 'd_other'[0m
  316 |   if (wi && D_other == wi)[0m
      | [0;1;32m            ^
[0m[1m./display.h:210:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_other'[0m
  210 | #define D_other         DISPLAY(d_other)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mcanvas.c:316:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  316 |   if (wi && D_other == wi)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:318:7: [0m[0;1;36mnote: [0mAssuming 'cv' is equal to field 'd_forecv'[0m
  318 |   if (cv == D_forecv)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mcanvas.c:318:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  318 |   if (cv == D_forecv)[0m
      | [0;1;32m  ^
[0m[1mcanvas.c:322:11: [0m[0;1;36mnote: [0m'wi' is non-null[0m
  322 |       if (wi)[0m
      | [0;1;32m          ^~
[0m[1mcanvas.c:322:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  322 |       if (wi)[0m
      | [0;1;32m      ^
[0m[1mcanvas.c:330:8: [0m[0;1;36mnote: [0mAssuming 'windows' is not equal to 'wi'[0m
  330 |           if (windows != wi)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1mcanvas.c:330:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  330 |           if (windows != wi)[0m
      | [0;1;32m          ^
[0m[1mcanvas.c:332:29: [0m[0;1;36mnote: [0mValue assigned to 'p'[0m
  332 |               for (pp = &windows; (p = *pp); pp = &p->w_next)[0m
      | [0;1;32m                                   ^~~~~~~
[0m[1mcanvas.c:332:29: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  332 |               for (pp = &windows; (p = *pp); pp = &p->w_next)[0m
      | [0;1;32m                                   ^~~~~~~
[0m[1mcanvas.c:332:8: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 335[0m
  332 |               for (pp = &windows; (p = *pp); pp = &p->w_next)[0m
      | [0;1;32m              ^
[0m[1mcanvas.c:335:8: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  335 |               ASSERT(p);[0m
      | [0;1;32m              ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mcanvas.c:336:14: [0m[0;1;36mnote: [0mAccess to field 'w_next' results in a dereference of a null pointer (loaded from variable 'p')[0m
  336 |               *pp = p->w_next;[0m
      | [0;1;32m                    ^
[0m[1mcanvas.c:346:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  346 | cv_winid_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mcanvas.c:362:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |   if (cv->c_ye + 1 < D_height)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  363 |     RefreshLine(cv->c_ye + 1, 0, D_width - 1, 0);[0m
      | [0;1;32m                                                 
[0m[1mcanvas.c:364:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |   if (ox != -1 && oy != -1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  365 |     GotoPos(ox, oy);[0m
      | [0;1;32m                    
[0m[1mcanvas.c:374:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |   if ((cv = (struct canvas *)calloc(1, sizeof *cv)) == 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  375 |     return -1;[0m
      | [0;1;32m              
[0m[1mcanvas.c:411:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  411 | CreateCanvasChainRec(cv, cvp)[0m
      | [0;1;32m^
[0m[1mcanvas.c:417:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  417 |       if (cv->c_slperp)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  418 |         cvp = CreateCanvasChainRec(cv->c_slperp, cvp);[0m
  419 |       else[0m
      | [0;32m      } 
[0m[1mcanvas.c:437:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  437 | EqualizeCanvas(cv, gflag)[0m
      | [0;1;32m^
[0m[1mcanvas.c:447:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |           for (cv2 = cv->c_slperp; cv2; cv2 = cv2->c_slnext)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  448 |             if (cv2->c_slperp)[0m
  449 |               EqualizeCanvas(cv2->c_slperp, gflag);[0m
      | [0;1;32m                                                   
[0m[1mcanvas.c:448:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |             if (cv2->c_slperp)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  449 |               EqualizeCanvas(cv2->c_slperp, gflag);[0m
      | [0;1;32m                                                   
[0m[1mcanvas.c:451:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  452 |         cv->c_slweight = 1;[0m
      | [0;1;32m                           
[0m[1mcanvas.c:457:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  457 | ResizeCanvas(cv)[0m
      | [0;1;32m^
[0m[1mcanvas.c:473:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |   if (cv == 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  474 |     return;[0m
      | [0;1;32m           
[0m[1mcanvas.c:500:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |               if (focusmin > 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  501 |                 focusmin--;[0m
  502 |               else if (focusmin < 0)[0m
      | [0;32m              } 
[0m[1mcanvas.c:502:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |               else if (focusmin < 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  503 |                 focusmin = cv->c_slorient == SLICE_VERT ? ye - ys + 2 : xe - xs + 2;[0m
      | [0;1;32m                                                                                    
[0m[1mcanvas.c:514:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  514 |       if (nh < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  515 |         nh = 0;[0m
      | [0;1;32m               
[0m[1mcanvas.c:516:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |       if (focusmin > nh)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  517 |         focusmin = nh;[0m
      | [0;1;32m                      
[0m[1mcanvas.c:528:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   if (wsum == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  529 |     wsum = 1;[0m
      | [0;1;32m             
[0m[1mcanvas.c:537:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |       if (cv2 == fcv)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  538 |         m += focusmin;[0m
      | [0;1;32m                      
[0m[1mcanvas.c:543:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |       if (hh <= m + 1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  544 |         need += m + 1 - hh;[0m
  545 |       else[0m
      | [0;32m      } 
[0m[1mcanvas.c:545:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  546 |         got += hh - m - 1;[0m
      | [0;1;32m                          
[0m[1mcanvas.c:549:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |   if (need > got)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  550 |     need = got;[0m
      | [0;1;32m               
[0m[1mcanvas.c:576:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  576 |       if (cv == fcv)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  577 |         m += focusmin;[0m
      | [0;1;32m                      
[0m[1mcanvas.c:590:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |     if (got != 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  591 |       hx = need * (hh - m - 1) / got;[0m
  592 |     else[0m
      | [0;32m    } 
[0m[1mcanvas.c:592:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  592 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  593 |       debug("   got = 0\n");[0m
      | [0;1;32m                            
[0m[1mcanvas.c:650:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  650 | AddPerp(cv)[0m
      | [0;1;32m^
[0m[1mcanvas.c:656:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |   if ((pcv = (struct canvas *)calloc(1, sizeof *cv)) == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  657 |     return 0;[0m
      | [0;1;32m             
[0m[1mcanvas.c:664:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  664 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  665 |     cv->c_slback->c_slperp = pcv;[0m
      | [0;1;32m                                 
[0m[1mcanvas.c:673:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |   if (pcv->c_slnext)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  674 |     pcv->c_slnext->c_slprev = pcv;[0m
      | [0;1;32m                                  
[0m[1mcanvas.c:675:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  675 |   if (pcv->c_slprev)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  676 |     pcv->c_slprev->c_slnext = pcv;[0m
      | [0;1;32m                                  
[0m[1mcanvas.c:689:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  689 | AddCanvas(orient)[0m
      | [0;1;32m^
[0m[1mcanvas.c:699:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |   if (cv->c_slorient != SLICE_UNKN && cv->c_slorient != orient)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  700 |     if (!AddPerp(cv))[0m
  701 |       return -1;[0m
      | [0;1;32m                
[0m[1mcanvas.c:700:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  700 |     if (!AddPerp(cv))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  701 |       return -1;[0m
      | [0;1;32m                
[0m[1mcanvas.c:708:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (!captionalways && cv == D_canvas.c_slperp && !cv->c_slnext)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  709 |     ye--;       /* need space for caption */[0m
      | [0;1;32m                                            
[0m[1mcanvas.c:715:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |   if (orient == SLICE_VERT)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  716 |     h = ye - ys + 1;[0m
  717 |   else[0m
      | [0;32m  } 
[0m[1mcanvas.c:717:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  718 |     h = xe - xs + 1;[0m
      | [0;1;32m                    
[0m[1mcanvas.c:721:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  721 |   if (h < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  722 |     return -1;          /* can't fit in */[0m
      | [0;1;32m                                          
[0m[1mcanvas.c:724:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  724 |   if ((cv = (struct canvas *)calloc(1, sizeof *cv)) == 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  725 |     return -1;[0m
      | [0;1;32m              
[0m[1mcanvas.c:732:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |   if (cv->c_slnext)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  733 |     cv->c_slnext->c_slprev = cv;[0m
      | [0;1;32m                                
[0m[1mcanvas.c:772:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  772 |   if (cv->c_slorient == SLICE_UNKN)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  773 |     return;[0m
      | [0;1;32m           
[0m[1mcanvas.c:774:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   while (cv->c_slprev)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  775 |     cv = cv->c_slprev;[0m
      | [0;1;32m                      
[0m[1mcanvas.c:776:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  776 |   if (!cv->c_slnext)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  777 |     return;[0m
      | [0;1;32m           
[0m[1mcanvas.c:789:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |   if (!D_forecv)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  790 |     D_forecv = cv->c_slnext;[0m
      | [0;1;32m                            
[0m[1mcanvas.c:794:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |   while (D_forecv->c_slperp)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  795 |     D_forecv = D_forecv->c_slperp;[0m
      | [0;1;32m                                  
[0m[1mcanvas.c:801:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  801 |       if (!captionalways)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  802 |         cv->c_slback->c_ye = ++ye;      /* caption line no longer needed */[0m
      | [0;1;32m                                                                           
[0m[1mcanvas.c:831:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |   if (!ocv)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  832 |     return;[0m
      | [0;1;32m           
[0m[1mcanvas.c:833:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |   if (cv->c_slback && cv->c_slback->c_slperp == cv)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  834 |     cv->c_slback->c_slperp = ocv;[0m
      | [0;1;32m                                 
[0m[1mcanvas.c:836:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  836 |   while (D_canvas.c_slperp)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  837 |     FreeCanvas(D_canvas.c_slperp);[0m
      | [0;1;32m                                  
[0m[1mcanvas.c:844:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |   if (!captionalways)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  845 |     D_canvas.c_ye++;    /* caption line no longer needed */[0m
      | [0;1;32m                                                           
[0m[1mcanvas.c:853:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  853 | DupLayoutCv(cvf, cvt, save)[0m
      | [0;1;32m^
[0m[1mcanvas.c:861:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |       if (cvf == D_forecv)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  862 |         D_forecv = cvt;[0m
      | [0;1;32m                       
[0m[1mcanvas.c:902:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  902 | PutWindowCv(cv)[0m
      | [0;1;32m^
[0m103 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[37/38][291.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmp_86qkfgr.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/layer.c
[1mlayer.c:63:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |   if (ml == 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   64 |     return 0;[0m
      | [0;1;32m             
[0m[1mlayer.c:104:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  105 |     LayPauseUpdateRegion(l, x, x, y, y);[0m
      | [0;1;32m                                        
[0m[1mlayer.c:147:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |   if (n == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  148 |     return;[0m
      | [0;1;32m           
[0m[1mlayer.c:149:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  150 |     LayPauseUpdateRegion(l, xs, xe, y, y);[0m
      | [0;1;32m                                          
[0m[1mlayer.c:195:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (n == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  196 |     return;[0m
      | [0;1;32m           
[0m[1mlayer.c:197:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  198 |     LayPauseUpdateRegion(l, 0, l->l_width - 1, ys, ye);[0m
      | [0;1;32m                                                       
[0m[1mlayer.c:258:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  259 |     LayPauseUpdateRegion(l, x, l->l_width - 1, y, y);[0m
      | [0;1;32m                                                     
[0m[1mlayer.c:312:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  313 |     LayPauseUpdateRegion(l, x,[0m
  314 | [0m
  315 | #ifdef DW_CHARS[0m
  316 |   x + (c->mbcs ? 1 : 0)[0m
  317 | #else[0m
  318 |   x[0m
  319 | #endif[0m
  320 |   , y, y);[0m
      | [0;1;32m          
[0m[1mlayer.c:350:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |   if (x + n > l->l_width)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  351 |     n = l->l_width - x;[0m
      | [0;1;32m                       
[0m[1mlayer.c:360:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  361 |     LayPauseUpdateRegion(l, x, x + n - 1, y, y);[0m
      | [0;1;32m                                                
[0m[1mlayer.c:409:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |   if (x + n > l->l_width)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  410 |     n = l->l_width - x;[0m
      | [0;1;32m                       
[0m[1mlayer.c:419:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  420 |     LayPauseUpdateRegion(l, x, x + n - 1, y, y);[0m
      | [0;1;32m                                                
[0m[1mlayer.c:423:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |   if (len > n)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  424 |     len = n;[0m
      | [0;1;32m            
[0m[1mlayer.c:468:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if (xs >= l->l_width)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  469 |     xs = l->l_width - 1;[0m
      | [0;1;32m                        
[0m[1mlayer.c:470:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |   if (xe >= l->l_width)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  471 |     xe = l->l_width - 1;[0m
      | [0;1;32m                        
[0m[1mlayer.c:472:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  473 |       LayPauseUpdateRegion(l, xs, xe, y, y);[0m
      | [0;1;32m                                            
[0m[1mlayer.c:508:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |   if (ys < 0 || ye < ys)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  509 |     return;[0m
      | [0;1;32m           
[0m[1mlayer.c:512:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |   if (xs >= l->l_width)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  513 |     xs = l->l_width - 1;[0m
      | [0;1;32m                        
[0m[1mlayer.c:514:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  514 |   if (xe >= l->l_width)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  515 |     xe = l->l_width - 1;[0m
      | [0;1;32m                        
[0m[1mlayer.c:516:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  517 |     LayPauseUpdateRegion(l, xs, xe, ys, ye);[0m
      | [0;1;32m                                            
[0m[1mlayer.c:596:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  597 |     LayPauseUpdateRegion(l, xs, xe, y, y);[0m
      | [0;1;32m                                          
[0m[1mlayer.c:640:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |   if (from <= to)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  641 |     LCDisplayLine(l, ml, y, from, to, isblank);[0m
      | [0;1;32m                                               
[0m[1mlayer.c:651:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |     if (D_blocked)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  652 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:665:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |   if (l->l_pause.d)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  666 |     /* XXX: 'y'? */[0m
  667 |     LayPauseUpdateRegion(l, 0, l->l_width - 1, top, bot);[0m
      | [0;1;32m                                                         
[0m[1mlayer.c:699:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |       for (evp = cv->c_vplist; evp; evp = evp->v_next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  700 |         if (y2 >= evp->v_ys && y2 <= evp->v_ye && evp->v_xoff + l->l_width - 1 >= evp->v_xs && evp->v_xoff + l->l_width - 1 <= evp->v_xe)[0m
  701 |           break;        /* gotcha! */[0m
      | [0;1;32m                                     
[0m[1mlayer.c:781:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |     if (D_blocked)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  782 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:783:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  783 |     if (cv != D_forecv)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  784 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:795:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  795 |     if (cv != D_forecv)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  796 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:807:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |     if (D_blocked)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  808 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:809:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |     if (cv != D_forecv)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  810 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:821:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  821 |     if (D_blocked)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  822 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:823:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  823 |     if (cv != D_forecv)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  824 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:835:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  835 |     if (D_blocked)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  836 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:837:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  837 |     if (cv != D_forecv)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  838 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:857:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  857 |   if (!isblank)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  858 |     LClearArea(l, 0, 0, l->l_width - 1, l->l_height - 1, 0, 0);[0m
      | [0;1;32m                                                               
[0m[1mlayer.c:861:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |   for (y = 0; y < l->l_height; y++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  862 |     LayRedisplayLine(y, 0, l->l_width - 1, 1);[0m
      | [0;1;32m                                              
[0m[1mlayer.c:884:9: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  884 |   (void)vsnprintf(p, sizeof(buf) - 100, fmt, VA_ARGS(ap));[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mlayer.c:884:9: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
  884 |   (void)vsnprintf(p, sizeof(buf) - 100, fmt, VA_ARGS(ap));[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mlayer.c:891:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  891 |     strncpy(p, strerror(err), buf + sizeof(buf) - p - 1);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mlayer.c:891:5: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  891 |     strncpy(p, strerror(err), buf + sizeof(buf) - p - 1);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mlayer.c:897:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  897 |     for (cv = D_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  898 |       if (cv->c_layer == flayer)[0m
  899 |         break;[0m
      | [0;1;32m              
[0m[1mlayer.c:898:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  898 |       if (cv->c_layer == flayer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  899 |         break;[0m
      | [0;1;32m              
[0m[1mlayer.c:901:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  901 |     if (cv == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  902 |       continue;[0m
      | [0;1;32m               
[0m[1mlayer.c:908:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  908 | LExtMouseMode(l, on)[0m
      | [0;1;32m^
[0m[1mlayer.c:916:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  916 |       if (D_blocked)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  917 |         continue;[0m
      | [0;1;32m                 
[0m[1mlayer.c:918:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  918 |       if (cv != D_forecv)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  919 |         continue;[0m
      | [0;1;32m                 
[0m[1mlayer.c:940:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |     if (l->l_layfn == &WinLf || l->l_layfn == &BlankLf)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  941 |       break;[0m
      | [0;1;32m            
[0m[1mlayer.c:943:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  943 |     if (oldflayer == l)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  944 |       oldflayer = 0;[0m
      | [0;1;32m                    
[0m[1mlayer.c:952:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  952 |   while (flayer != l)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  953 |     ExitOverlayPage();[0m
      | [0;1;32m                      
[0m[1mlayer.c:969:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  969 |   if (display && D_forecv->c_layer == flayer)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  970 |     cv = D_forecv;      /* work only on this cv! */[0m
      | [0;1;32m                                                   
[0m[1mlayer.c:988:85: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  988 |     if (p->w_savelayer && p->w_savelayer != flayer && p->w_savelayer->l_cvlist == 0)[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m  989 |       KillLayerChain(p->w_savelayer);[0m
      | [0;1;32m                                     
[0m[1mlayer.c:1000:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1000 |     for (cvpp = &flayer->l_cvlist; (cvp = *cvpp); cvpp = &cvp->c_lnext)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1001 |       if (cvp == cv)[0m
 1002 |         break;[0m
      | [0;1;32m              
[0m[1mlayer.c:1001:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1001 |       if (cvp == cv)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1002 |         break;[0m
      | [0;1;32m              
[0m[1mlayer.c:1012:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1012 |     if (block)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1013 |       debug("layer is blocking\n");[0m
      | [0;1;32m                                   
[0m[1mlayer.c:1024:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1024 |     for (cvp = newlay->l_cvlist; cvp; cvp = cvp->c_lnext)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1025 |       cvp->c_layer = newlay;[0m
      | [0;1;32m                            
[0m[1mlayer.c:1055:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1055 |     if (oldlay->l_layfn->lf_LayFree)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1056 |       LayFree(oldlay->l_data);[0m
      | [0;1;32m                              
[0m[1mlayer.c:1062:7: [0m[0;1;35mwarning: [0m[1mAccess to field 'l_layfn' results in a dereference of a null pointer (loaded from variable 'flayer') [clang-analyzer-core.NullDereference][0m
 1062 |   if (flayer->l_layfn == &WinLf) {[0m
      | [0;1;32m      ^
[0m[1mlayer.c:966:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  966 |   ASSERT(flayer);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mlayer.c:969:7: [0m[0;1;36mnote: [0mAssuming 'display' is null[0m
  969 |   if (display && D_forecv->c_layer == flayer)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlayer.c:969:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  969 |   if (display && D_forecv->c_layer == flayer)[0m
      | [0;1;32m              ^
[0m[1mlayer.c:972:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  972 |   if ((newlay = (struct layer *)calloc(1, sizeof(struct layer))) == 0) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlayer.c:972:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  972 |   if ((newlay = (struct layer *)calloc(1, sizeof(struct layer))) == 0) {[0m
      | [0;1;32m  ^
[0m[1mlayer.c:976:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  976 |   debug2("Entering new layer on top of %#x: %#x\n", (unsigned int)flayer, newlay);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:71:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug2'[0m
   71 | # define debug2(x,a,b)   debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mlayer.c:978:7: [0m[0;1;36mnote: [0mAssuming 'datasize' is 0[0m
  978 |   if (datasize) {[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mlayer.c:978:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  978 |   if (datasize) {[0m
      | [0;1;32m  ^
[0m[1mlayer.c:987:7: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
  987 |   if (p && (p->w_savelayer == flayer || (block && flayer->l_next == 0))) {[0m
      | [0;1;32m      ^
[0m[1mlayer.c:987:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mlayer.c:987:13: [0m[0;1;36mnote: [0mAssuming 'flayer' is not equal to field 'w_savelayer'[0m
  987 |   if (p && (p->w_savelayer == flayer || (block && flayer->l_next == 0))) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlayer.c:987:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mlayer.c:987:42: [0m[0;1;36mnote: [0mAssuming 'block' is not equal to 0[0m
  987 |   if (p && (p->w_savelayer == flayer || (block && flayer->l_next == 0))) {[0m
      | [0;1;32m                                         ^~~~~
[0m[1mlayer.c:987:42: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mlayer.c:987:51: [0m[0;1;36mnote: [0mAssuming field 'l_next' is equal to null[0m
  987 |   if (p && (p->w_savelayer == flayer || (block && flayer->l_next == 0))) {[0m
      | [0;1;32m                                                  ^~~~~~~~~~~~~~~~~~~
[0m[1mlayer.c:987:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  987 |   if (p && (p->w_savelayer == flayer || (block && flayer->l_next == 0))) {[0m
      | [0;1;32m  ^
[0m[1mlayer.c:988:9: [0m[0;1;36mnote: [0mAssuming field 'w_savelayer' is non-null[0m
  988 |     if (p->w_savelayer && p->w_savelayer != flayer && p->w_savelayer->l_cvlist == 0)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mlayer.c:988:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mlayer.c:988:45: [0m[0;1;36mnote: [0m'flayer' is not equal to field 'w_savelayer'[0m
  988 |     if (p->w_savelayer && p->w_savelayer != flayer && p->w_savelayer->l_cvlist == 0)[0m
      | [0;1;32m                                            ^~~~~~
[0m[1mlayer.c:988:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  988 |     if (p->w_savelayer && p->w_savelayer != flayer && p->w_savelayer->l_cvlist == 0)[0m
      | [0;1;32m        ^
[0m[1mlayer.c:988:55: [0m[0;1;36mnote: [0mAssuming field 'l_cvlist' is equal to null[0m
  988 |     if (p->w_savelayer && p->w_savelayer != flayer && p->w_savelayer->l_cvlist == 0)[0m
      | [0;1;32m                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlayer.c:988:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  988 |     if (p->w_savelayer && p->w_savelayer != flayer && p->w_savelayer->l_cvlist == 0)[0m
      | [0;1;32m    ^
[0m[1mlayer.c:989:7: [0m[0;1;36mnote: [0mCalling 'KillLayerChain'[0m
  989 |       KillLayerChain(p->w_savelayer);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlayer.c:938:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  938 |   debug1("KillLayerChain %#x\n", lay);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mlayer.c:939:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  939 |   for (l = lay; l; l = l->l_next) {[0m
      | [0;1;32m  ^
[0m[1mlayer.c:940:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  940 |     if (l->l_layfn == &WinLf || l->l_layfn == &BlankLf)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mlayer.c:940:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mlayer.c:940:33: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  940 |     if (l->l_layfn == &WinLf || l->l_layfn == &BlankLf)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mlayer.c:940:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  940 |     if (l->l_layfn == &WinLf || l->l_layfn == &BlankLf)[0m
      | [0;1;32m    ^
[0m[1mlayer.c:942:5: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  942 |     debug1("- killing %#x\n", l);[0m
      | [0;1;32m    ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mlayer.c:943:9: [0m[0;1;36mnote: [0mAssuming 'oldflayer' is not equal to 'l'[0m
  943 |     if (oldflayer == l)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mlayer.c:943:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  943 |     if (oldflayer == l)[0m
      | [0;1;32m    ^
[0m[1mlayer.c:945:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 939[0m
  945 |     for (cv = l->l_cvlist; cv; cv = ncv) {[0m
      | [0;1;32m    ^
[0m[1mlayer.c:939:17: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  939 |   for (l = lay; l; l = l->l_next) {[0m
      | [0;1;32m                ^
[0m[1mlayer.c:939:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 951[0m
  939 |   for (l = lay; l; l = l->l_next) {[0m
      | [0;1;32m  ^
[0m[1mlayer.c:952:10: [0m[0;1;36mnote: [0m'flayer' is not equal to 'l'[0m
  952 |   while (flayer != l)[0m
      | [0;1;32m         ^~~~~~
[0m[1mlayer.c:952:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  952 |   while (flayer != l)[0m
      | [0;1;32m  ^
[0m[1mlayer.c:953:5: [0m[0;1;36mnote: [0mCalling 'ExitOverlayPage'[0m
  953 |     ExitOverlayPage();[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~
[0m[1mlayer.c:1051:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1051 |   ASSERT(flayer);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mlayer.c:1052:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1052 |   debug1("Exiting layer %#x\n", (unsigned int)flayer);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:70:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug1'[0m
   70 | # define debug1(x,a)     debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mlayer.c:1054:7: [0m[0;1;36mnote: [0mAssuming field 'l_data' is null[0m
 1054 |   if (oldlay->l_data) {[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mlayer.c:1054:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1054 |   if (oldlay->l_data) {[0m
      | [0;1;32m  ^
[0m[1mlayer.c:1061:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'flayer'[0m
 1061 |   flayer = oldlay->l_next;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlayer.c:1062:7: [0m[0;1;36mnote: [0mAccess to field 'l_layfn' results in a dereference of a null pointer (loaded from variable 'flayer')[0m
 1062 |   if (flayer->l_layfn == &WinLf) {[0m
      | [0;1;32m      ^~~~~~
[0m[1mlayer.c:1078:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1078 |   if (p && p->w_savelayer == oldlay)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1079 |     p->w_savelayer = flayer;[0m
      | [0;1;32m                            
[0m[1mlayer.c:1081:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1081 |   if (p && oldlay == p->w_paster.pa_pastelayer)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1082 |     p->w_paster.pa_pastelayer = 0;[0m
      | [0;1;32m                                  
[0m[1mlayer.c:1085:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1085 |   for (lay = layouts; lay; lay = lay->lay_next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1086 |     for (cv = lay->lay_cvlist; cv; cv = cv->c_next)[0m
 1087 |       if (cv->c_layer == oldlay)[0m
 1088 |         cv->c_layer = flayer;[0m
      | [0;1;32m                             
[0m[1mlayer.c:1086:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1086 |     for (cv = lay->lay_cvlist; cv; cv = cv->c_next)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1087 |       if (cv->c_layer == oldlay)[0m
 1088 |         cv->c_layer = flayer;[0m
      | [0;1;32m                             
[0m[1mlayer.c:1087:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1087 |       if (cv->c_layer == oldlay)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1088 |         cv->c_layer = flayer;[0m
      | [0;1;32m                             
[0m[1mlayer.c:1101:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1101 |     if (doredisplay)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1102 |       LRefreshAll(flayer, 0);[0m
      | [0;1;32m                             
[0m[1mlayer.c:1116:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1116 |   if (l->l_mouseevent.len >= sizeof(l->l_mouseevent.buffer))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1117 |     return -1;[0m
      | [0;1;32m              
[0m[1mlayer.c:1126:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1126 |   if ((l->l_mouseevent.start = s))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1127 |     l->l_mouseevent.len = 0;[0m
      | [0;1;32m                            
[0m[1mlayer.c:1138:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |   if (layer->l_pause.d == pause)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1139 |     return;[0m
      | [0;1;32m           
[0m[1mlayer.c:1148:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1148 |   if (layer->l_pause.top == -1 && layer->l_pause.bottom == -1)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1149 |     return;[0m
      | [0;1;32m           
[0m[1mlayer.c:1151:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |   if (layer->l_layfn == &WinLf)  /* Currently, this will always be the case! */[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1152 |     win = layer->l_data;[0m
 1153 |   else[0m
      | [0;32m  } 
[0m[1mlayer.c:1153:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1153 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1154 |     win = NULL;[0m
      | [0;1;32m               
[0m[1mlayer.c:1159:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1159 |     if (!cv->c_slorient)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1160 |       continue;              /* Wasn't split, so already updated. */[0m
      | [0;1;32m                                                                    
[0m[1mlayer.c:1171:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1171 |           if (xs < vp->v_xs) xs = vp->v_xs;[0m
      | [0;1;32m                            ^              
[0m      | [0;32m                             {
[0m[1mlayer.c:1172:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1172 |           if (xe > vp->v_xe) xe = vp->v_xe;[0m
      | [0;1;32m                            ^              
[0m      | [0;32m                             {
[0m[1mlayer.c:1177:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |             if (dw_left(ml, xe, UTF8))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1178 |               xe++;[0m
      | [0;1;32m                   
[0m[1mlayer.c:1182:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1182 |           if (xs <= xe)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1183 |             RefreshLine(line + vp->v_yoff, xs, xe, 0);[0m
      | [0;1;32m                                                      
[0m[1mlayer.c:1192:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1192 |       if (cx < cv->c_xs) cx = cv->c_xs;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                         {
[0m[1mlayer.c:1193:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1193 |       if (cy < cv->c_ys) cy = cv->c_ys;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                         {
[0m[1mlayer.c:1194:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1194 |       if (cx > cv->c_xe) cx = cv->c_xe;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                         {
[0m[1mlayer.c:1195:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1195 |       if (cy > cv->c_ye) cy = cv->c_ye;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                         {
[0m[1mlayer.c:1201:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1201 |   for (line = layer->l_pause.top; line <= layer->l_pause.bottom; line++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1202 |     layer->l_pause.left[line] = layer->l_pause.right[line] = -1;[0m
      | [0;1;32m                                                                
[0m[1mlayer.c:1207:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1207 |   if (!layer->l_pause.d)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1208 |     return;[0m
      | [0;1;32m           
[0m[1mlayer.c:1209:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1209 |   if (ys < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1210 |     ys = 0;[0m
      | [0;1;32m           
[0m[1mlayer.c:1211:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1211 |   if (ye >= layer->l_height)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1212 |     ye = layer->l_height - 1;[0m
      | [0;1;32m                             
[0m[1mlayer.c:1213:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1213 |   if (xe >= layer->l_width)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1214 |     xe = layer->l_width - 1;[0m
      | [0;1;32m                            
[0m[1mlayer.c:1216:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1216 |   if (layer->l_pause.top == -1 || layer->l_pause.top > ys)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1217 |     layer->l_pause.top = ys;[0m
      | [0;1;32m                            
[0m[1mlayer.c:1233:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1233 |     if (layer->l_pause.left[ys] == -1 || layer->l_pause.left[ys] > xs)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1234 |     layer->l_pause.left[ys] = xs;[0m
      | [0;1;32m                                 
[0m[1mlayer.c:1235:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1235 |       if (layer->l_pause.right[ys] < xe)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1236 |     layer->l_pause.right[ys] = xe;[0m
      | [0;1;32m                                  
[0m[1mlayer.c:1243:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1243 |   if (layer->l_pause.left)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1244 |     free(layer->l_pause.left);[0m
      | [0;1;32m                              
[0m[1mlayer.c:1245:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1245 |   if (layer->l_pause.right)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1246 |     free(layer->l_pause.right);[0m
      | [0;1;32m                               
[0m90 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[38/38][302.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tidy-fixes/tmpjsuv3jhc.yaml -p=/itch/common/crepos/cu-to-rtu/c/screen-4.9.0 /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/display.c
[1mdisplay.c:146:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  146 | DefProcess(bufp, lenp)[0m
      | [0;1;32m^
[0m[1mdisplay.c:155:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  155 | DefRedisplayLine(y, xs, xe, isblank)[0m
      | [0;1;32m^
[0m[1mdisplay.c:158:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |   if (isblank == 0 && y >= 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  159 |     DefClearLine(y, xs, xe, 0);[0m
      | [0;1;32m                               
[0m[1mdisplay.c:163:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  163 | DefClearLine(y, xs, xe, bce)[0m
      | [0;1;32m^
[0m[1mdisplay.c:171:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  171 | DefRewrite(y, xs, xe, rend, doit)[0m
      | [0;1;32m^
[0m[1mdisplay.c:180:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  180 | DefResize(wi, he)[0m
      | [0;1;32m^
[0m[1mdisplay.c:217:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  217 | BlankResize(wi, he)[0m
      | [0;1;32m^
[0m[1mdisplay.c:233:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  233 | MakeDisplay(uname, utty, term, fd, pid, Mode)[0m
      | [0;1;32m^
[0m[1mdisplay.c:241:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |   if (!*(u = FindUserPtr(uname)) && UserAdd(uname, (char *)0, u))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  242 |     return 0;   /* could not find or add user */[0m
      | [0;1;32m                                                
[0m[1mdisplay.c:245:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |   if ((display = (struct display *)calloc(1, sizeof(*display))) == 0)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  246 |     return 0;[0m
      | [0;1;32m             
[0m[1mdisplay.c:307:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |   if ((b = lookup_baud((int)cfgetospeed(&D_OldMode.tio))))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  308 |     D_dospeed = b->idx;[0m
      | [0;1;32m                       
[0m[1mdisplay.c:319:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  319 |   strncpy(D_usertty, utty, sizeof(D_usertty) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mdisplay.c:319:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  319 |   strncpy(D_usertty, utty, sizeof(D_usertty) - 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mdisplay.c:321:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  321 |   strncpy(D_termname, term, MAXTERMLEN);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mdisplay.c:321:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  321 |   strncpy(D_termname, term, MAXTERMLEN);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mdisplay.c:347:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |       if (!display)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  348 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:353:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |   if (D_tentry)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  354 |     free(D_tentry);[0m
      | [0;1;32m                   
[0m[1mdisplay.c:356:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |   if (D_processinputdata)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  357 |     free(D_processinputdata);[0m
      | [0;1;32m                             
[0m[1mdisplay.c:391:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |   for (dp = &displays; (d = *dp) ; dp = &d->d_next)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  392 |     if (d == display)[0m
  393 |       break;[0m
      | [0;1;32m            
[0m[1mdisplay.c:392:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  392 |     if (d == display)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  393 |       break;[0m
      | [0;1;32m            
[0m[1mdisplay.c:395:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |   if (D_status_lastmsg)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  396 |     free(D_status_lastmsg);[0m
      | [0;1;32m                           
[0m[1mdisplay.c:397:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |   if (D_obuf)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  398 |     free(D_obuf);[0m
      | [0;1;32m                 
[0m[1mdisplay.c:406:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |   while (D_canvas.c_slperp)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  407 |     FreeCanvas(D_canvas.c_slperp);[0m
      | [0;1;32m                                  
[0m[1mdisplay.c:412:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |       if (p->w_pdisplay == display)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  413 |         p->w_pdisplay = 0;[0m
      | [0;1;32m                          
[0m[1mdisplay.c:414:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |       if (p->w_lastdisp == display)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  415 |         p->w_lastdisp = 0;[0m
      | [0;1;32m                          
[0m[1mdisplay.c:416:84: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  416 |       if (p->w_readev.condneg == &D_status || p->w_readev.condneg == &D_obuflenmax)[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m  417 |         p->w_readev.condpos = p->w_readev.condneg = 0;[0m
      | [0;1;32m                                                      
[0m[1mdisplay.c:420:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |   for (p = windows; p; p = p->w_next)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  421 |     if (p->w_zdisplay == display)[0m
  422 |       zmodem_abort(p, 0);[0m
      | [0;1;32m                         
[0m[1mdisplay.c:421:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |     if (p->w_zdisplay == display)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  422 |       zmodem_abort(p, 0);[0m
      | [0;1;32m                         
[0m[1mdisplay.c:440:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  440 | InitTerm(adapt)[0m
      | [0;1;32m^
[0m[1mdisplay.c:449:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |   if (D_IM && strcmp(D_IM, D_EI))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  450 |     AddCStr(D_EI);[0m
      | [0;1;32m                  
[0m[1mdisplay.c:469:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |   if (adapt == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  470 |     ResizeDisplay(D_defwidth, D_defheight);[0m
      | [0;1;32m                                           
[0m[1mdisplay.c:496:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |       if (D_mousetrack)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  497 |         D_mousetrack = 0;[0m
      | [0;1;32m                         
[0m[1mdisplay.c:506:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |       if (D_hstatus)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  507 |         ShowHStatus((char *)0);[0m
      | [0;1;32m                               
[0m[1mdisplay.c:522:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  522 | INSERTCHAR(c)[0m
      | [0;1;32m^
[0m[1mdisplay.c:530:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |           if (D_IC)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  531 |             AddCStr(D_IC);[0m
  532 |           else[0m
      | [0;32m          } 
[0m[1mdisplay.c:532:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  533 |             AddCStr2(D_CIC, 1);[0m
      | [0;1;32m                               
[0m[1mdisplay.c:548:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  548 | PUTCHAR(c)[0m
      | [0;1;32m^
[0m[1mdisplay.c:552:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |   if (D_insert && D_x < D_width - 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  553 |     InsertMode(0);[0m
      | [0;1;32m                  
[0m[1mdisplay.c:558:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  558 | PUTCHARLP(c)[0m
      | [0;1;32m^
[0m[1mdisplay.c:563:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |       if (D_insert)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  564 |         InsertMode(0);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:572:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |       if (D_AM && !D_CLP)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  573 |         GotoPos(D_width - 1, y);[0m
      | [0;1;32m                                
[0m[1mdisplay.c:598:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  598 | RAW_PUTCHAR(c)[0m
      | [0;1;32m^
[0m[1mdisplay.c:612:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |           if (D_x == D_width)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  613 |             D_x += D_AM ? 1 : -1;[0m
      | [0;1;32m                                 
[0m[1mdisplay.c:632:130: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |           if (D_xtable && D_xtable[(int)(unsigned char)D_rend.font] && D_xtable[(int)(unsigned char)D_rend.font][(int)(unsigned char)c])[0m
      | [0;1;32m                                                                                                                                        ^
[0m      | [0;32m                                                                                                                                         {
[0m  633 |             AddStr(D_xtable[(int)(unsigned char)D_rend.font][(int)(unsigned char)c]);[0m
  634 |           else[0m
      | [0;32m          } 
[0m[1mdisplay.c:634:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  635 |             AddChar(c);[0m
      | [0;1;32m                       
[0m[1mdisplay.c:637:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  637 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  638 |         AddUtf8(c);[0m
      | [0;1;32m                   
[0m[1mdisplay.c:653:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |       if (D_x == D_width - 1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  654 |         D_x += D_AM ? 1 : -1;[0m
      | [0;1;32m                             
[0m[1mdisplay.c:660:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  660 |   if (D_encoding)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  661 |     c = PrepareEncodedChar(c);[0m
      | [0;1;32m                              
[0m[1mdisplay.c:666:129: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  666 |   if (D_xtable && D_xtable[(int)(unsigned char)D_rend.font] && D_xtable[(int)(unsigned char)D_rend.font][(int)(unsigned char)c])[0m
      | [0;1;32m                                                                                                                                ^
[0m      | [0;32m                                                                                                                                 {
[0m  667 |     AddStr(D_xtable[(int)(unsigned char)D_rend.font][(int)(unsigned char)c]);[0m
  668 |   else[0m
      | [0;32m  } 
[0m[1mdisplay.c:668:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  668 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  669 |     AddChar(D_rend.font != '0' ? c : D_c0_tab[(int)(unsigned char)c]);[0m
      | [0;1;32m                                                                      
[0m[1mdisplay.c:679:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |       if (D_AM == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  680 |         D_x = D_width - 1;[0m
  681 |       else if (!D_CLP || D_x > D_width)[0m
      | [0;32m      } 
[0m[1mdisplay.c:684:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |           if (D_y < D_height-1 && D_y != D_bot)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  685 |             D_y++;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:699:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  699 | DoAddChar(c)[0m
      | [0;1;32m^
[0m[1mdisplay.c:708:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  708 | AddCStr(s)[0m
      | [0;1;32m^
[0m[1mdisplay.c:719:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  719 | AddCStr2(s, c)[0m
      | [0;1;32m^
[0m[1mdisplay.c:734:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  734 | InsertMode(on)[0m
      | [0;1;32m^
[0m[1mdisplay.c:740:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  740 |       if (on)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  741 |         AddCStr(D_IM);[0m
  742 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:742:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  743 |         AddCStr(D_EI);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:750:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  750 | KeypadMode(on)[0m
      | [0;1;32m^
[0m[1mdisplay.c:754:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  754 |   if (display)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  755 |     D_keypad = on;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:769:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  769 | CursorkeysMode(on)[0m
      | [0;1;32m^
[0m[1mdisplay.c:773:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  773 |   if (display)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  774 |     D_cursorkeys = on;[0m
      | [0;1;32m                      
[0m[1mdisplay.c:788:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  788 | ReverseVideo(on)[0m
      | [0;1;32m^
[0m[1mdisplay.c:794:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |       if (D_revvid)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  795 |         AddCStr(D_CVR);[0m
  796 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:796:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  796 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  797 |         AddCStr(D_CVN);[0m
      | [0;1;32m                       
[0m[1mdisplay.c:802:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  802 | CursorVisibility(v)[0m
      | [0;1;32m^
[0m[1mdisplay.c:807:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |       if (D_curvis)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  808 |         AddCStr(D_VE);          /* do this always, just to be safe */[0m
      | [0;1;32m                                                                     
[0m[1mdisplay.c:810:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |       if (v == -1 && D_VI)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  811 |         AddCStr(D_VI);[0m
  812 |       else if (v == 1 && D_VS)[0m
      | [0;32m      } 
[0m[1mdisplay.c:812:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |       else if (v == 1 && D_VS)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  813 |         AddCStr(D_VS);[0m
  814 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:814:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  815 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:821:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  821 | MouseMode(mode)[0m
      | [0;1;32m^
[0m[1mdisplay.c:824:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  825 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:827:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  827 |   if (mode < D_mousetrack)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  828 |     mode = D_mousetrack;[0m
      | [0;1;32m                        
[0m[1mdisplay.c:833:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |       if (!D_CXT)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  834 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:837:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  837 |           sprintf(mousebuf, "\033[?%dl", D_mouse);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdisplay.c:837:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  837 |           sprintf(mousebuf, "\033[?%dl", D_mouse);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdisplay.c:842:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  842 |           sprintf(mousebuf, "\033[?%dh", mode);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdisplay.c:842:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  842 |           sprintf(mousebuf, "\033[?%dh", mode);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdisplay.c:851:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  851 | ExtMouseMode(mode)[0m
      | [0;1;32m^
[0m[1mdisplay.c:857:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  857 |       if (!D_CXT)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  858 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:861:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  861 |           sprintf(mousebuf, "\033[?%dl", D_extmouse);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdisplay.c:861:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  861 |           sprintf(mousebuf, "\033[?%dl", D_extmouse);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdisplay.c:866:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  866 |           sprintf(mousebuf, "\033[?%dh", mode);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdisplay.c:866:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  866 |           sprintf(mousebuf, "\033[?%dh", mode);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdisplay.c:878:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  878 | CountChars(c)[0m
      | [0;1;32m^
[0m[1mdisplay.c:886:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  886 | CalcCost(s)[0m
      | [0;1;32m^
[0m[1mdisplay.c:897:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  897 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  898 |     return EXPENSIVE;[0m
      | [0;1;32m                     
[0m[1mdisplay.c:902:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  902 | CallRewrite(y, xs, xe, doit)[0m
      | [0;1;32m^
[0m[1mdisplay.c:917:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  917 |       if (y < cv->c_ys || y > cv->c_ye || xe < cv->c_xs || xs > cv->c_xe)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  918 |         continue;[0m
      | [0;1;32m                 
[0m[1mdisplay.c:919:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  919 |       for (vp = cv->c_vplist; vp; vp = vp->v_next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  920 |         if (y >= vp->v_ys && y <= vp->v_ye && xe >= vp->v_xs && xs <= vp->v_xe)[0m
  921 |           break;[0m
      | [0;1;32m                
[0m[1mdisplay.c:920:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  920 |         if (y >= vp->v_ys && y <= vp->v_ye && xe >= vp->v_xs && xs <= vp->v_xe)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  921 |           break;[0m
      | [0;1;32m                
[0m[1mdisplay.c:922:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  922 |       if (vp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  923 |         break;[0m
      | [0;1;32m              
[0m[1mdisplay.c:939:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |   if (cv == 0 || cv->c_layer == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  940 |     return EXPENSIVE;   /* not found or nothing on it */[0m
      | [0;1;32m                                                        
[0m[1mdisplay.c:941:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  941 |   if (xs < vp->v_xs || xe > vp->v_xe)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  942 |     return EXPENSIVE;   /* crosses viewport boundaries */[0m
      | [0;1;32m                                                         
[0m[1mdisplay.c:943:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  943 |   if (y - vp->v_yoff < 0 || y - vp->v_yoff >= cv->c_layer->l_height)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  944 |     return EXPENSIVE;   /* line not on layer */[0m
      | [0;1;32m                                               
[0m[1mdisplay.c:945:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |   if (xs - vp->v_xoff < 0 || xe - vp->v_xoff >= cv->c_layer->l_width)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  946 |     return EXPENSIVE;   /* line not on layer */[0m
      | [0;1;32m                                               
[0m[1mdisplay.c:948:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  948 |   if (D_encoding == UTF8)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  949 |     D_rend.font = 0;[0m
      | [0;1;32m                    
[0m[1mdisplay.c:956:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  956 |   if (D_insert)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  957 |     cost += D_EIcost + D_IMcost;[0m
      | [0;1;32m                                
[0m[1mdisplay.c:963:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  963 | GotoPos(x2, y2)[0m
      | [0;1;32m^
[0m[1mdisplay.c:973:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  973 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  974 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:981:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  981 |       if (D_CLP && D_AM)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  982 |         x1 = -1;        /* don't know how the terminal treats this */[0m
  983 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:983:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  984 |         x1--;[0m
      | [0;1;32m             
[0m[1mdisplay.c:986:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  986 |   if (x2 == D_width)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  987 |     x2--;[0m
      | [0;1;32m         
[0m[1mdisplay.c:990:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  990 |   if (dy == 0 && dx == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  991 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:994:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  994 |   if (!D_MS)            /* Safe to move ? */[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  995 |     SetRendition(&mchar_null);[0m
      | [0;1;32m                              
[0m[1mdisplay.c:1001:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1001 |       if (D_HO && !x2 && !y2)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1002 |         AddCStr(D_HO);[0m
 1003 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:1003:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1003 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1004 |         AddCStr(tgoto(D_CM, x2, y2));[0m
      | [0;1;32m                                     
[0m[1mdisplay.c:1013:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1013 |   if ((y1 > D_bot && y2 > y1) || (y1 < D_top && y2 < y1))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1014 |     goto DoCM;[0m
      | [0;1;32m              
[0m[1mdisplay.c:1017:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1017 |   if (D_HO && !x2 && !y2)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1018 |     s = D_HO;[0m
 1019 |   else[0m
      | [0;32m  } 
[0m[1mdisplay.c:1019:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1019 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1020 |     s = tgoto(D_CM, x2, y2);[0m
      | [0;1;32m                            
[0m[1mdisplay.c:1059:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1059 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1060 |         costx = 0;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:1070:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |   if (costx >= CMcost)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1071 |     goto DoCM;[0m
      | [0;1;32m              
[0m[1mdisplay.c:1101:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1101 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1102 |     costy = 0;[0m
      | [0;1;32m              
[0m[1mdisplay.c:1105:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1105 |   if (costx + costy >= CMcost)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1106 |     goto DoCM;[0m
      | [0;1;32m              
[0m[1mdisplay.c:1111:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1111 |       while (dx++ < 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1112 |         AddCStr(D_BC);[0m
 1113 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1111:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1111 |       while (dx++ < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1112 |         AddCStr(D_BC);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1115:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1115 |       AddCStr2(D_CLE, -dx);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1116 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1118:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1118 |       while (dx-- > 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1119 |         AddCStr(D_ND);[0m
 1120 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1118:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1118 |       while (dx-- > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1119 |         AddCStr(D_ND);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1122:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1122 |       AddCStr2(D_CRI, dx);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1123 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1125:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1125 |       AddCStr(D_CR);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1126 |       D_x = 0;[0m
 1127 |       x1 = 0;[0m
      | [0;1;32m            
[0m      | [0;32m            ;} 
[0m[1mdisplay.c:1130:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1130 |       if (x1 < x2)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1131 |         (void) CallRewrite(y1, x1, x2 - 1, 1);[0m
 1132 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1130:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1130 |       if (x1 < x2)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1131 |         (void) CallRewrite(y1, x1, x2 - 1, 1);[0m
      | [0;1;32m                                              
[0m[1mdisplay.c:1134:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1134 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mdisplay.c:1140:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1140 |       while (dy++ < 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1141 |         AddCStr(D_UP);[0m
 1142 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1140:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1140 |       while (dy++ < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1141 |         AddCStr(D_UP);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1144:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1144 |       AddCStr2(D_CUP, -dy);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1145 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1147:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1147 |       s =  (x2 == 0) ? D_NL : D_DO;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1148 |       while (dy-- > 0)[0m
 1149 |         AddCStr(s);[0m
 1150 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1148:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1148 |       while (dy-- > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1149 |         AddCStr(s);[0m
      | [0;1;32m                   
[0m[1mdisplay.c:1152:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1152 |       AddCStr2(D_CDO, dy);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1153 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdisplay.c:1155:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1155 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mdisplay.c:1169:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1169 | ClearArea(x1, y1, xs, xe, x2, y2, bce, uselayfn)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1181:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1181 |   if (x1 == D_width)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1182 |     x1--;[0m
      | [0;1;32m         
[0m[1mdisplay.c:1183:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1183 |   if (x2 == D_width)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1184 |     x2--;[0m
      | [0;1;32m         
[0m[1mdisplay.c:1185:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1185 |   if (xs == -1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1186 |     xs = x1;[0m
      | [0;1;32m            
[0m[1mdisplay.c:1187:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1187 |   if (xe == -1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1188 |     xe = x2;[0m
      | [0;1;32m            
[0m[1mdisplay.c:1189:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1189 |   if (D_UT)     /* Safe to erase ? */[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1190 |     SetRendition(&mchar_null);[0m
      | [0;1;32m                              
[0m[1mdisplay.c:1192:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1192 |   if (D_BE)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1193 |     SetBackColor(bce);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1197:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1197 |       if (y2 > D_bot || (y2 == D_bot && x2 >= D_width - 1))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1198 |         D_lp_missing = 0;[0m
      | [0;1;32m                         
[0m[1mdisplay.c:1203:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1203 |       if (x1 == 0 && y1 == 0 && D_auto_nuke)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1204 |         NukePending();[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1232:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1232 |       if (y == y2)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1233 |         xxe = x2;[0m
      | [0;1;32m                 
[0m[1mdisplay.c:1251:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1251 |               if (y < cv->c_ys || y > cv->c_ye || xxe < cv->c_xs || x1 > cv->c_xe)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 1252 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdisplay.c:1253:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1253 |               for (vp = cv->c_vplist; vp; vp = vp->v_next)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1254 |                 if (y >= vp->v_ys && y <= vp->v_ye && xxe >= vp->v_xs && x1 <= vp->v_xe)[0m
 1255 |                   break;[0m
      | [0;1;32m                        
[0m[1mdisplay.c:1254:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1254 |                 if (y >= vp->v_ys && y <= vp->v_ye && xxe >= vp->v_xs && x1 <= vp->v_xe)[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m 1255 |                   break;[0m
      | [0;1;32m                        
[0m[1mdisplay.c:1256:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1256 |               if (vp)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1257 |                 break;[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1287:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1287 | Redisplay(cur_only)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1307:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1307 |   if (cur_only > 0 && D_fore)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1308 |     RefreshArea(0, D_fore->w_y, D_width - 1, D_fore->w_y, 1);[0m
 1309 |   else[0m
      | [0;32m  } 
[0m[1mdisplay.c:1309:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1309 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1310 |     RefreshAll(1);[0m
      | [0;1;32m                  
[0m[1mdisplay.c:1316:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1316 | RedisplayDisplays(cur_only)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1320:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1320 |   for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1321 |     Redisplay(cur_only);[0m
      | [0;1;32m                        
[0m[1mdisplay.c:1328:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1328 | ScrollH(y, xs, xe, n, bce, oml)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1334:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1334 |   if (n == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1335 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1343:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1343 |   if (D_UT)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1344 |     SetRendition(&mchar_null);[0m
      | [0;1;32m                              
[0m[1mdisplay.c:1346:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1346 |   if (D_BE)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1347 |     SetBackColor(bce);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1351:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1351 |       if (n >= xe - xs + 1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1352 |         n = xe - xs + 1;[0m
      | [0;1;32m                        
[0m[1mdisplay.c:1353:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1353 |       if (D_CDC && !(n == 1 && D_DC))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1354 |         AddCStr2(D_CDC, n);[0m
 1355 |       else if (D_DC)[0m
      | [0;32m      } 
[0m[1mdisplay.c:1357:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |           for (i = n; i--; )[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1358 |             AddCStr(D_DC);[0m
      | [0;1;32m                          
[0m[1mdisplay.c:1369:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1369 |       if (-n >= xe - xs + 1)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1370 |         n = -(xe - xs + 1);[0m
      | [0;1;32m                           
[0m[1mdisplay.c:1373:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1373 |           if (D_CIC && !(n == -1 && D_IC))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1374 |             AddCStr2(D_CIC, -n);[0m
 1375 |           else if (D_IC)[0m
      | [0;32m          } 
[0m[1mdisplay.c:1377:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1377 |               for (i = -n; i--; )[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1378 |                 AddCStr(D_IC);[0m
      | [0;1;32m                              
[0m[1mdisplay.c:1387:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1387 |               for (i = -n; i--; )[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1388 |                 INSERTCHAR(' ');[0m
      | [0;1;32m                                
[0m[1mdisplay.c:1404:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1404 |           for (i = -n; i--; )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1405 |             INSERTCHAR(' ');[0m
      | [0;1;32m                            
[0m[1mdisplay.c:1411:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1411 |       if (n > 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1412 |         ClearLine((struct mline *)0, y, xe - n + 1, xe, bce);[0m
 1413 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:1413:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1413 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1414 |         ClearLine((struct mline *)0, y, xs, xs - n - 1, bce);[0m
      | [0;1;32m                                                             
[0m[1mdisplay.c:1418:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1418 |       if (n > 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1419 |         WriteLP(D_width - 1 - n, y);[0m
      | [0;1;32m                                    
[0m[1mdisplay.c:1425:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1425 | ScrollV(xs, ys, xe, ye, n, bce)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1435:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1435 |   if (n == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1436 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1450:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1450 |       if (D_bot > ye || D_bot < ys)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1451 |         missy = D_bot;[0m
 1452 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:1455:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1455 |           if (missy > ye || missy < ys)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1456 |             D_lp_missing = 0;[0m
      | [0;1;32m                             
[0m[1mdisplay.c:1466:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1466 |   if (n >= ye - ys + 1)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1467 |     n = ye - ys + 1;[0m
      | [0;1;32m                    
[0m[1mdisplay.c:1470:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1470 |   if (ys < D_top || D_bot != ye)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1471 |     ChangeScrollRegion(ys, ye);[0m
      | [0;1;32m                               
[0m[1mdisplay.c:1474:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1474 |   if (D_top != ys && !(alok && dlok))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1475 |     ChangeScrollRegion(ys, ye);[0m
      | [0;1;32m                               
[0m[1mdisplay.c:1489:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1489 |               if (bce && !D_BE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1490 |                 ClearLine((struct mline *)0, ye, xs, xe, bce);[0m
      | [0;1;32m                                                              
[0m[1mdisplay.c:1496:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1496 |   if (D_UT)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1497 |     SetRendition(&mchar_null);[0m
      | [0;1;32m                              
[0m[1mdisplay.c:1499:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1499 |   if (D_BE)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1500 |     SetBackColor(bce);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1510:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1510 |           for(i = n; i-- > 0; )[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1511 |             AddCStr(D_NL);              /* was SF, I think NL is faster */[0m
      | [0;1;32m                                                                          
[0m[1mdisplay.c:1516:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1516 |           for(i = n; i-- > 0; )[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1517 |             AddCStr(D_SR);[0m
      | [0;1;32m                          
[0m[1mdisplay.c:1525:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1525 |           if (D_CDL && !(n == 1 && D_DL))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1526 |             AddCStr2(D_CDL, n);[0m
 1527 |           else[0m
      | [0;32m          } 
[0m[1mdisplay.c:1527:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1527 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1528 |             for(i = n; i--; )[0m
 1529 |               AddCStr(D_DL);[0m
      | [0;1;32m                            
[0m[1mdisplay.c:1528:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1528 |             for(i = n; i--; )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1529 |               AddCStr(D_DL);[0m
      | [0;1;32m                            
[0m[1mdisplay.c:1534:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1534 |           if (D_CAL && !(n == 1 && D_AL))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1535 |             AddCStr2(D_CAL, n);[0m
 1536 |           else[0m
      | [0;32m          } 
[0m[1mdisplay.c:1536:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1536 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1537 |             for(i = n; i--; )[0m
 1538 |               AddCStr(D_AL);[0m
      | [0;1;32m                            
[0m[1mdisplay.c:1537:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1537 |             for(i = n; i--; )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1538 |               AddCStr(D_AL);[0m
      | [0;1;32m                            
[0m[1mdisplay.c:1548:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1548 |       if (up)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1549 |         ClearArea(xs, ye - n + 1, xs, xe, xe, ye, bce, 0);[0m
 1550 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:1550:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1550 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1551 |         ClearArea(xs, ys, xs, xe, xe, ys + n - 1, bce, 0);[0m
      | [0;1;32m                                                          
[0m[1mdisplay.c:1553:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1553 |   if (D_lp_missing && missy != D_bot)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1554 |     WriteLP(D_width - 1, missy);[0m
      | [0;1;32m                                
[0m[1mdisplay.c:1563:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1563 | SetAttr(new)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1568:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1568 |   if (!display || (old = D_rend.attr) == new)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1569 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1573:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1573 |   if (old == new)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1574 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1598:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1598 |       if ((typ & ATYP_U))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1599 |         AddCStr(D_UE);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1600:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1600 |       if ((typ & ATYP_S))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1601 |         AddCStr(D_SE);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1607:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1607 |           if (D_hascolor)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1608 |             rend_setdefault(&D_rend);[0m
      | [0;1;32m                                     
[0m[1mdisplay.c:1627:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1627 |       if ((old & j) == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1628 |         continue;[0m
      | [0;1;32m                 
[0m[1mdisplay.c:1641:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1641 | SetFont(new)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1645:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1645 |   if (!display || old == new)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1646 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1649:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1649 |   if (D_encoding && CanEncodeFont(D_encoding, new))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1650 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1651:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1651 |   if (new == D_realfont)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1652 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1665:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1665 |       if (old == new)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1666 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:1669:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1669 |   if (new == ASCII)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1670 |     AddCStr(D_CE0);[0m
 1671 | #ifdef DW_CHARS[0m
 1672 |   else if (new < ' ')[0m
      | [0;32m  } 
[0m[1mdisplay.c:1675:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1675 |       if (new > 2)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1676 |         AddChar('(');[0m
      | [0;1;32m                     
[0m[1mdisplay.c:1680:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1680 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1681 |     AddCStr2(D_CS0, new);[0m
      | [0;1;32m                         
[0m[1mdisplay.c:1688:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1688 | color256to16(jj)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1707:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1707 |       if (min == max)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1708 |         jj = ((max + 1) & 2) << 2 | ((max + 1) & 4 ? 7 : 0);[0m
 1709 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:1709:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1709 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1710 |         jj = (b - min) / (max - min) << 2 | (g - min) / (max - min) << 1 | (r - [0m
 1711 | min) / (max - min) | (max > 3 ? 8 : 0);[0m
      | [0;1;32m                                       
[0m[1mdisplay.c:1738:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1738 | SetColor(f, b)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1744:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1744 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1745 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1752:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1752 |   if (f == 0x100)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1753 |     f = 0;[0m
      | [0;1;32m          
[0m[1mdisplay.c:1754:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1754 |   if (b == 0x100)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1755 |     b = 0;[0m
      | [0;1;32m          
[0m[1mdisplay.c:1764:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1764 |       if (D_OP)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1765 |         AddCStr(D_OP);[0m
 1766 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:1792:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1792 |   if (!D_hascolor)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1793 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1816:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1816 |       if (f == -1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1817 |         AddCStr("\033[39m");    /* works because AX is set */[0m
 1818 |       else if (D_CAF)[0m
      | [0;32m      } 
[0m[1mdisplay.c:1818:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1818 |       else if (D_CAF)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1819 |         AddCStr2(D_CAF, f & 7);[0m
 1820 |       else if (D_CSF)[0m
      | [0;32m      } 
[0m[1mdisplay.c:1820:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1820 |       else if (D_CSF)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1821 |         AddCStr2(D_CSF, sftrans[f & 7]);[0m
      | [0;1;32m                                        
[0m[1mdisplay.c:1825:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1825 |       if (b == -1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1826 |         AddCStr("\033[49m");    /* works because AX is set */[0m
 1827 |       else if (D_CAB)[0m
      | [0;32m      } 
[0m[1mdisplay.c:1827:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1827 |       else if (D_CAB)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1828 |         AddCStr2(D_CAB, b & 7);[0m
 1829 |       else if (D_CSB)[0m
      | [0;32m      } 
[0m[1mdisplay.c:1829:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1829 |       else if (D_CSB)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1830 |         AddCStr2(D_CSB, sftrans[b & 7]);[0m
      | [0;1;32m                                        
[0m[1mdisplay.c:1853:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1853 | SetBackColor(new)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1856:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1856 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1857 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1863:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1863 | SetRendition(mc)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1866:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1866 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1867 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1874:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1874 |       for (i = 0; i < 8; i++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1875 |         if (attr2color[i] && (mc->attr & (1 << i)) != 0)[0m
 1876 |           {[0m
 1877 |             if (mc->color == 0 && attr2color[i][3])[0m
 1878 |               ApplyAttrColor(attr2color[i][3], &mmc);[0m
 1879 |             else if ((mc->color & 0x0f) == 0 && attr2color[i][2])[0m
 1880 |               ApplyAttrColor(attr2color[i][2], &mmc);[0m
 1881 |             else if ((mc->color & 0xf0) == 0 && attr2color[i][1])[0m
 1882 |               ApplyAttrColor(attr2color[i][1], &mmc);[0m
 1883 |             else[0m
 1884 |               ApplyAttrColor(attr2color[i][0], &mmc);[0m
 1885 |           }[0m
      | [0;1;32m           
[0m[1mdisplay.c:1877:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1877 |             if (mc->color == 0 && attr2color[i][3])[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1878 |               ApplyAttrColor(attr2color[i][3], &mmc);[0m
 1879 |             else if ((mc->color & 0x0f) == 0 && attr2color[i][2])[0m
      | [0;32m            } 
[0m[1mdisplay.c:1879:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1879 |             else if ((mc->color & 0x0f) == 0 && attr2color[i][2])[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1880 |               ApplyAttrColor(attr2color[i][2], &mmc);[0m
 1881 |             else if ((mc->color & 0xf0) == 0 && attr2color[i][1])[0m
      | [0;32m            } 
[0m[1mdisplay.c:1881:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1881 |             else if ((mc->color & 0xf0) == 0 && attr2color[i][1])[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1882 |               ApplyAttrColor(attr2color[i][1], &mmc);[0m
 1883 |             else[0m
      | [0;32m            } 
[0m[1mdisplay.c:1883:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1883 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1884 |               ApplyAttrColor(attr2color[i][0], &mmc);[0m
      | [0;1;32m                                                     
[0m[1mdisplay.c:1893:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1893 |       if ((mc->attr & A_BFG) && D_MD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1894 |         a |= A_BD;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:1895:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1895 |       if ((mc->attr & A_BBG) && D_MB)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1896 |         a |= A_BL;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:1897:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1897 |       if (D_rend.attr != a)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1898 |         SetAttr(a);[0m
      | [0;1;32m                   
[0m[1mdisplay.c:1903:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1903 |     if (D_rend.attr != mc->attr)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1904 |     SetAttr(mc->attr);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1918:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1918 |   if (D_rend.font != mc->font)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1919 |     SetFont(mc->font);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:1921:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1921 |   if (D_encoding == UTF8)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1922 |     D_rend.fontx = mc->fontx;[0m
      | [0;1;32m                             
[0m[1mdisplay.c:1928:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1928 | SetRenditionMline(ml, x)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1932:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1932 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1933 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1946:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1946 |       if ((ml->attr[x] & A_BFG) && D_MD)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1947 |         a |= A_BD;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:1948:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1948 |       if ((ml->attr[x] & A_BBG) && D_MB)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1949 |         a |= A_BL;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:1950:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1950 |       if (D_rend.attr != a)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1951 |         SetAttr(a);[0m
      | [0;1;32m                   
[0m[1mdisplay.c:1956:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1956 |     if (D_rend.attr != ml->attr[x])[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1957 |     SetAttr(ml->attr[x]);[0m
      | [0;1;32m                         
[0m[1mdisplay.c:1974:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1974 |   if (D_rend.font != ml->font[x])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1975 |     SetFont(ml->font[x]);[0m
      | [0;1;32m                         
[0m[1mdisplay.c:1977:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1977 |   if (D_encoding == UTF8)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1978 |     D_rend.fontx = ml->fontx[x];[0m
      | [0;1;32m                                
[0m[1mdisplay.c:1984:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1984 | MakeStatus(msg)[0m
      | [0;1;32m^
[0m[1mdisplay.c:1990:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1990 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1991 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1993:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1993 |   if (D_blocked)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1994 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:1998:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1998 |       if (D_processinputdata)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1999 |         return;         /* XXX: better */[0m
      | [0;1;32m                                         
[0m[1mdisplay.c:2008:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2008 |       if (D_CLP == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2009 |         max--;[0m
      | [0;1;32m              
[0m[1mdisplay.c:2011:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2011 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2012 |     max = D_WS > 0 ? D_WS : (D_width - !D_CLP);[0m
      | [0;1;32m                                               
[0m[1mdisplay.c:2019:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2019 |           if (!D_status_obufpos)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2020 |             SetTimeout(&D_statusev, MsgWait);[0m
      | [0;1;32m                                             
[0m[1mdisplay.c:2025:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2025 |   for (s = t = msg; *s && t - msg < max; ++s)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2026 |     if (*s == BELL)[0m
 2027 |       AddCStr(D_BL);[0m
 2028 |     else if ((unsigned char)*s >= ' ' && *s != 0177)[0m
 2029 |       *t++ = *s;[0m
      | [0;1;32m                
[0m[1mdisplay.c:2026:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2026 |     if (*s == BELL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2027 |       AddCStr(D_BL);[0m
 2028 |     else if ((unsigned char)*s >= ' ' && *s != 0177)[0m
      | [0;32m    } 
[0m[1mdisplay.c:2028:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2028 |     else if ((unsigned char)*s >= ' ' && *s != 0177)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2029 |       *t++ = *s;[0m
      | [0;1;32m                
[0m[1mdisplay.c:2031:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2031 |   if (t == msg)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2032 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:2036:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2036 |       if (D_status_lastmsg)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2037 |         buf = realloc(D_status_lastmsg, t - msg + 1);[0m
 2038 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:2038:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2038 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2039 |         buf = malloc(t - msg + 1);[0m
      | [0;1;32m                                  
[0m[1mdisplay.c:2046:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2046 |   if (t - msg < D_status_buflen)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2047 |     strcpy(D_status_lastmsg, msg);[0m
      | [0;1;32m                                  
[0m[1mdisplay.c:2047:5: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 2047 |     strcpy(D_status_lastmsg, msg);[0m
      | [0;1;32m    ^
[0m[1mdisplay.c:1990:7: [0m[0;1;36mnote: [0mAssuming 'display' is non-null[0m
 1990 |   if (!display)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mdisplay.c:1990:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1990 |   if (!display)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:1993:7: [0m[0;1;36mnote: [0mAssuming field 'd_blocked' is 0[0m
 1993 |   if (D_blocked)[0m
      | [0;1;32m      ^
[0m[1m./display.h:305:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_blocked'[0m
  305 | #define D_blocked       DISPLAY(d_blocked)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mdisplay.c:1993:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1993 |   if (D_blocked)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:1995:7: [0m[0;1;36mnote: [0mAssuming field 'd_tcinited' is not equal to 0[0m
 1995 |   if (!D_tcinited)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mdisplay.c:1995:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1995 |   if (!D_tcinited)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2005:7: [0m[0;1;36mnote: [0mAssuming 'use_hardstatus' is 0[0m
 2005 |   if (!use_hardstatus || !D_HS)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mdisplay.c:2005:23: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2005 |   if (!use_hardstatus || !D_HS)[0m
      | [0;1;32m                      ^
[0m[1mdisplay.c:2008:11: [0m[0;1;36mnote: [0mAssuming field 'flg' is not equal to 0[0m
 2008 |       if (D_CLP == 0)[0m
      | [0;1;32m          ^
[0m[1m./term.h:198:15: [0m[0;1;36mnote: [0mexpanded from macro 'D_CLP'[0m
  198 | #define D_CLP (D_tcs[87].flg)[0m
      | [0;1;32m              ^
[0m[1mdisplay.c:2008:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2008 |       if (D_CLP == 0)[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2013:7: [0m[0;1;36mnote: [0mAssuming field 'd_status' is 0[0m
 2013 |   if (D_status)[0m
      | [0;1;32m      ^
[0m[1m./display.h:244:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_status'[0m
  244 | #define D_status        DISPLAY(d_status)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mdisplay.c:2013:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2013 |   if (D_status)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2025:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2025 |   for (s = t = msg; *s && t - msg < max; ++s)[0m
      | [0;1;32m                    ^~
[0m[1mdisplay.c:2025:21: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mdisplay.c:2025:27: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2025 |   for (s = t = msg; *s && t - msg < max; ++s)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~
[0m[1mdisplay.c:2025:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2025 |   for (s = t = msg; *s && t - msg < max; ++s)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2026:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2026 |     if (*s == BELL)[0m
      | [0;1;32m        ^~~~~~~~~~
[0m[1mdisplay.c:2026:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 2026 |     if (*s == BELL)[0m
      | [0;1;32m    ^
[0m[1mdisplay.c:2028:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2028 |     else if ((unsigned char)*s >= ' ' && *s != 0177)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2028:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mdisplay.c:2028:42: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2028 |     else if ((unsigned char)*s >= ' ' && *s != 0177)[0m
      | [0;1;32m                                         ^~~~~~~~~~
[0m[1mdisplay.c:2028:10: [0m[0;1;36mnote: [0mTaking true branch[0m
 2028 |     else if ((unsigned char)*s >= ' ' && *s != 0177)[0m
      | [0;1;32m         ^
[0m[1mdisplay.c:2025:21: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2025 |   for (s = t = msg; *s && t - msg < max; ++s)[0m
      | [0;1;32m                    ^~
[0m[1mdisplay.c:2025:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2025 |   for (s = t = msg; *s && t - msg < max; ++s)[0m
      | [0;1;32m                       ^
[0m[1mdisplay.c:2031:7: [0m[0;1;36mnote: [0m't' is not equal to 'msg'[0m
 2031 |   if (t == msg)[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2031:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2031 |   if (t == msg)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2033:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2033 |   if (t - msg >= D_status_buflen)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2033:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2033 |   if (t - msg >= D_status_buflen)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2036:11: [0m[0;1;36mnote: [0mAssuming field 'd_status_lastmsg' is null[0m
 2036 |       if (D_status_lastmsg)[0m
      | [0;1;32m          ^
[0m[1m./display.h:248:26: [0m[0;1;36mnote: [0mexpanded from macro 'D_status_lastmsg'[0m
  248 | #define D_status_lastmsg        DISPLAY(d_status_lastmsg)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mdisplay.c:2036:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2036 |       if (D_status_lastmsg)[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2040:11: [0m[0;1;36mnote: [0mAssuming 'buf' is null[0m
 2040 |       if (buf)[0m
      | [0;1;32m          ^~~
[0m[1mdisplay.c:2040:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2040 |       if (buf)[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2046:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2046 |   if (t - msg < D_status_buflen)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2046:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2046 |   if (t - msg < D_status_buflen)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2047:5: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 2047 |     strcpy(D_status_lastmsg, msg);[0m
      | [0;1;32m    ^
[0m[1mdisplay.c:2047:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2047 |     strcpy(D_status_lastmsg, msg);[0m
      | [0;1;32m    ^~~~~~
[0m[1mdisplay.c:2047:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2047 |     strcpy(D_status_lastmsg, msg);[0m
      | [0;1;32m    ^~~~~~
[0m[1mdisplay.c:2095:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2095 |       if (flayer)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2096 |         LaySetCursor();[0m
      | [0;1;32m                       
[0m[1mdisplay.c:2110:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2110 |   if (!display)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2111 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:2112:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2112 |   if (!(where = D_status))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2113 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:2137:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2137 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2138 |     RefreshHStatus();[0m
      | [0;1;32m                     
[0m[1mdisplay.c:2140:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2140 |   if (flayer)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2141 |     LaySetCursor();[0m
      | [0;1;32m                   
[0m[1mdisplay.c:2157:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2157 |       if (ti < MsgMinWait)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2158 |         DisplaySleep1000(MsgMinWait - ti, 0);[0m
      | [0;1;32m                                             
[0m[1mdisplay.c:2168:10: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the string literal [clang-analyzer-security.ArrayBound][0m
 2168 |   while (*c && (!end || c < end))[0m
      | [0;1;32m         ^
[0m[1mdisplay.c:3786:7: [0m[0;1;36mnote: [0mAssuming field 'd_status' is not equal to STATUS_ON_HS[0m
 3786 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m      ^
[0m[1m./display.h:244:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_status'[0m
  244 | #define D_status        DISPLAY(d_status)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:3786:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 3786 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:3792:3: [0m[0;1;36mnote: [0mCalling 'RefreshHStatus'[0m
 3792 |   RefreshHStatus();[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2323:7: [0m[0;1;36mnote: [0mAssuming field 'd_status' is not equal to STATUS_ON_HS[0m
 2323 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m      ^
[0m[1m./display.h:244:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_status'[0m
  244 | #define D_status        DISPLAY(d_status)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:2323:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2323 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2325:51: [0m[0;1;36mnote: [0mAssuming field 'flg' is 0[0m
 2325 |   buf = MakeWinMsgEv(hstatusstring, D_fore, '%', (D_HS && D_has_hstatus == HSTATUS_HS && D_WS > 0) ? D_WS : D_width - !D_CLP + extrabytes, &D_hstatusev, 0);[0m
      | [0;1;32m                                                  ^
[0m[1m./term.h:174:14: [0m[0;1;36mnote: [0mexpanded from macro 'D_HS'[0m
  174 | #define D_HS (D_tcs[75].flg)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~
[0m[1mdisplay.c:2325:56: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2325 |   buf = MakeWinMsgEv(hstatusstring, D_fore, '%', (D_HS && D_has_hstatus == HSTATUS_HS && D_WS > 0) ? D_WS : D_width - !D_CLP + extrabytes, &D_hstatusev, 0);[0m
      | [0;1;32m                                                       ^
[0m[1mdisplay.c:2325:119: [0m[0;1;36mnote: [0mAssuming field 'flg' is not equal to 0[0m
 2325 |   buf = MakeWinMsgEv(hstatusstring, D_fore, '%', (D_HS && D_has_hstatus == HSTATUS_HS && D_WS > 0) ? D_WS : D_width - !D_CLP + extrabytes, &D_hstatusev, 0);[0m
      | [0;1;32m                                                                                                                      ^~~~~~
[0m[1mdisplay.c:2326:7: [0m[0;1;36mnote: [0mAssuming 'buf' is null[0m
 2326 |   if (buf && *buf)[0m
      | [0;1;32m      ^~~
[0m[1mdisplay.c:2326:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2326 |   if (buf && *buf)[0m
      | [0;1;32m          ^
[0m[1mdisplay.c:2333:5: [0m[0;1;36mnote: [0mCalling 'ShowHStatus'[0m
 2333 |     ShowHStatus((char *)0);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2232:7: [0m[0;1;36mnote: [0mAssuming field 'd_status' is not equal to STATUS_ON_WIN[0m
 2232 |   if (D_status == STATUS_ON_WIN && D_has_hstatus == HSTATUS_LASTLINE && STATLINE == D_height-1)[0m
      | [0;1;32m      ^
[0m[1m./display.h:244:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_status'[0m
  244 | #define D_status        DISPLAY(d_status)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:2232:33: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2232 |   if (D_status == STATUS_ON_WIN && D_has_hstatus == HSTATUS_LASTLINE && STATLINE == D_height-1)[0m
      | [0;1;32m                                ^
[0m[1mdisplay.c:2234:7: [0m[0;1;36mnote: [0mAssuming field 'd_blocked' is 0[0m
 2234 |   if (D_blocked)[0m
      | [0;1;32m      ^
[0m[1m./display.h:305:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_blocked'[0m
  305 | #define D_blocked       DISPLAY(d_blocked)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mdisplay.c:2234:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2234 |   if (D_blocked)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2237:7: [0m[0;1;36mnote: [0mAssuming field 'flg' is 0[0m
 2237 |   if (D_HS && D_has_hstatus == HSTATUS_HS)[0m
      | [0;1;32m      ^
[0m[1m./term.h:174:14: [0m[0;1;36mnote: [0mexpanded from macro 'D_HS'[0m
  174 | #define D_HS (D_tcs[75].flg)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~
[0m[1mdisplay.c:2237:12: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2237 |   if (D_HS && D_has_hstatus == HSTATUS_HS)[0m
      | [0;1;32m           ^
[0m[1mdisplay.c:2258:12: [0m[0;1;36mnote: [0mAssuming field 'd_has_hstatus' is equal to HSTATUS_LASTLINE[0m
 2258 |   else if (D_has_hstatus == HSTATUS_LASTLINE)[0m
      | [0;1;32m           ^
[0m[1m./display.h:235:23: [0m[0;1;36mnote: [0mexpanded from macro 'D_has_hstatus'[0m
  235 | #define D_has_hstatus   DISPLAY(d_has_hstatus)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:2258:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 2258 |   else if (D_has_hstatus == HSTATUS_LASTLINE)[0m
      | [0;1;32m       ^
[0m[1mdisplay.c:2260:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2260 |       debug("ShowHStatus: using last line\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mdisplay.c:2263:13: [0m[0;1;36mnote: [0m'str' is null[0m
 2263 |       str = str ? str : "";[0m
      | [0;1;32m            ^~~
[0m[1mdisplay.c:2263:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdisplay.c:2265:11: [0m[0;1;36mnote: [0mAssuming 'l' is > field 'd_width'[0m
 2265 |       if (l > D_width)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mdisplay.c:2265:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2265 |       if (l > D_width)[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2268:20: [0m[0;1;36mnote: [0mAssuming 'captionalways' is not equal to 0[0m
 2268 |       SetRendition(captionalways || D_cvlist == 0 || D_cvlist->c_next ? &mchar_null: &mchar_so);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~
[0m[1mdisplay.c:2268:34: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2268 |       SetRendition(captionalways || D_cvlist == 0 || D_cvlist->c_next ? &mchar_null: &mchar_so);[0m
      | [0;1;32m                                 ^
[0m[1mdisplay.c:2269:11: [0m[0;1;36mnote: [0mCalling 'PrePutWinMsg'[0m
 2269 |       l = PrePutWinMsg(str, 0, l);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2197:7: [0m[0;1;36mnote: [0mAssuming field 'd_encoding' is equal to UTF8[0m
 2197 |   if (D_encoding == UTF8)[0m
      | [0;1;32m      ^
[0m[1m./display.h:227:20: [0m[0;1;36mnote: [0mexpanded from macro 'D_encoding'[0m
  227 | #define D_encoding      DISPLAY(d_encoding)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:2197:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2197 |   if (D_encoding == UTF8)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2199:19: [0m[0;1;36mnote: [0mCalling 'strlen_onscreen'[0m
 2199 |       int chars = strlen_onscreen((unsigned char *)(s + start), (unsigned char *)(s + max));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2168:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2168 |   while (*c && (!end || c < end))[0m
      | [0;1;32m         ^~
[0m[1mdisplay.c:2168:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mdisplay.c:2168:17: [0m[0;1;36mnote: [0mAssuming 'end' is null[0m
 2168 |   while (*c && (!end || c < end))[0m
      | [0;1;32m                ^~~~
[0m[1mdisplay.c:2168:22: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2168 |   while (*c && (!end || c < end))[0m
      | [0;1;32m                     ^
[0m[1mdisplay.c:2174:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2174 |           if (v == -2)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdisplay.c:2174:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 2174 |           if (v == -2)[0m
      | [0;1;32m          ^
[0m[1mdisplay.c:2177:14: [0m[0;1;36mnote: [0mAssuming 'v' is >= 0[0m
 2177 |       while (v < 0 && (!end || c < end));[0m
      | [0;1;32m             ^~~~~
[0m[1mdisplay.c:2177:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2177 |       while (v < 0 && (!end || c < end));[0m
      | [0;1;32m                   ^
[0m[1mdisplay.c:2171:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2171 |       do[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2178:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2178 |       if (!utf8_iscomb(v))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mdisplay.c:2178:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2178 |       if (!utf8_iscomb(v))[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2168:10: [0m[0;1;36mnote: [0mAccess of the string literal at index 1, while it holds only a single 'unsigned char' element[0m
 2168 |   while (*c && (!end || c < end))[0m
      | [0;1;32m         ^~
[0m[1mdisplay.c:2173:17: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the string literal [clang-analyzer-security.ArrayBound][0m
 2173 |           v = FromUtf8(*c++, &dec);[0m
      | [0;1;32m                       ^
[0m[1mdisplay.c:3786:7: [0m[0;1;36mnote: [0mAssuming field 'd_status' is not equal to STATUS_ON_HS[0m
 3786 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m      ^
[0m[1m./display.h:244:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_status'[0m
  244 | #define D_status        DISPLAY(d_status)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:3786:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 3786 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:3792:3: [0m[0;1;36mnote: [0mCalling 'RefreshHStatus'[0m
 3792 |   RefreshHStatus();[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2323:7: [0m[0;1;36mnote: [0mAssuming field 'd_status' is not equal to STATUS_ON_HS[0m
 2323 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m      ^
[0m[1m./display.h:244:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_status'[0m
  244 | #define D_status        DISPLAY(d_status)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:2323:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2323 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2325:51: [0m[0;1;36mnote: [0mAssuming field 'flg' is 0[0m
 2325 |   buf = MakeWinMsgEv(hstatusstring, D_fore, '%', (D_HS && D_has_hstatus == HSTATUS_HS && D_WS > 0) ? D_WS : D_width - !D_CLP + extrabytes, &D_hstatusev, 0);[0m
      | [0;1;32m                                                  ^
[0m[1m./term.h:174:14: [0m[0;1;36mnote: [0mexpanded from macro 'D_HS'[0m
  174 | #define D_HS (D_tcs[75].flg)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~
[0m[1mdisplay.c:2325:56: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2325 |   buf = MakeWinMsgEv(hstatusstring, D_fore, '%', (D_HS && D_has_hstatus == HSTATUS_HS && D_WS > 0) ? D_WS : D_width - !D_CLP + extrabytes, &D_hstatusev, 0);[0m
      | [0;1;32m                                                       ^
[0m[1mdisplay.c:2325:119: [0m[0;1;36mnote: [0mAssuming field 'flg' is not equal to 0[0m
 2325 |   buf = MakeWinMsgEv(hstatusstring, D_fore, '%', (D_HS && D_has_hstatus == HSTATUS_HS && D_WS > 0) ? D_WS : D_width - !D_CLP + extrabytes, &D_hstatusev, 0);[0m
      | [0;1;32m                                                                                                                      ^~~~~~
[0m[1mdisplay.c:2326:7: [0m[0;1;36mnote: [0mAssuming 'buf' is null[0m
 2326 |   if (buf && *buf)[0m
      | [0;1;32m      ^~~
[0m[1mdisplay.c:2326:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2326 |   if (buf && *buf)[0m
      | [0;1;32m          ^
[0m[1mdisplay.c:2333:5: [0m[0;1;36mnote: [0mCalling 'ShowHStatus'[0m
 2333 |     ShowHStatus((char *)0);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2232:7: [0m[0;1;36mnote: [0mAssuming field 'd_status' is not equal to STATUS_ON_WIN[0m
 2232 |   if (D_status == STATUS_ON_WIN && D_has_hstatus == HSTATUS_LASTLINE && STATLINE == D_height-1)[0m
      | [0;1;32m      ^
[0m[1m./display.h:244:18: [0m[0;1;36mnote: [0mexpanded from macro 'D_status'[0m
  244 | #define D_status        DISPLAY(d_status)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:2232:33: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2232 |   if (D_status == STATUS_ON_WIN && D_has_hstatus == HSTATUS_LASTLINE && STATLINE == D_height-1)[0m
      | [0;1;32m                                ^
[0m[1mdisplay.c:2234:7: [0m[0;1;36mnote: [0mAssuming field 'd_blocked' is 0[0m
 2234 |   if (D_blocked)[0m
      | [0;1;32m      ^
[0m[1m./display.h:305:19: [0m[0;1;36mnote: [0mexpanded from macro 'D_blocked'[0m
  305 | #define D_blocked       DISPLAY(d_blocked)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mdisplay.c:2234:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2234 |   if (D_blocked)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2237:7: [0m[0;1;36mnote: [0mAssuming field 'flg' is 0[0m
 2237 |   if (D_HS && D_has_hstatus == HSTATUS_HS)[0m
      | [0;1;32m      ^
[0m[1m./term.h:174:14: [0m[0;1;36mnote: [0mexpanded from macro 'D_HS'[0m
  174 | #define D_HS (D_tcs[75].flg)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~
[0m[1mdisplay.c:2237:12: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2237 |   if (D_HS && D_has_hstatus == HSTATUS_HS)[0m
      | [0;1;32m           ^
[0m[1mdisplay.c:2258:12: [0m[0;1;36mnote: [0mAssuming field 'd_has_hstatus' is equal to HSTATUS_LASTLINE[0m
 2258 |   else if (D_has_hstatus == HSTATUS_LASTLINE)[0m
      | [0;1;32m           ^
[0m[1m./display.h:235:23: [0m[0;1;36mnote: [0mexpanded from macro 'D_has_hstatus'[0m
  235 | #define D_has_hstatus   DISPLAY(d_has_hstatus)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:2258:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 2258 |   else if (D_has_hstatus == HSTATUS_LASTLINE)[0m
      | [0;1;32m       ^
[0m[1mdisplay.c:2260:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2260 |       debug("ShowHStatus: using last line\n");[0m
      | [0;1;32m      ^
[0m[1m./screen.h:69:26: [0m[0;1;36mnote: [0mexpanded from macro 'debug'[0m
   69 | # define debug(x)        debugf(x)[0m
      | [0;1;32m                         ^
[0m[1m./screen.h:68:26: [0m[0;1;36mnote: [0mexpanded from macro 'debugf'[0m
   68 | # define debugf(a)       do {} while (0)[0m
      | [0;1;32m                         ^
[0m[1mdisplay.c:2263:13: [0m[0;1;36mnote: [0m'str' is null[0m
 2263 |       str = str ? str : "";[0m
      | [0;1;32m            ^~~
[0m[1mdisplay.c:2263:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdisplay.c:2265:11: [0m[0;1;36mnote: [0mAssuming 'l' is > field 'd_width'[0m
 2265 |       if (l > D_width)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mdisplay.c:2265:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2265 |       if (l > D_width)[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2268:20: [0m[0;1;36mnote: [0mAssuming 'captionalways' is not equal to 0[0m
 2268 |       SetRendition(captionalways || D_cvlist == 0 || D_cvlist->c_next ? &mchar_null: &mchar_so);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~
[0m[1mdisplay.c:2268:34: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2268 |       SetRendition(captionalways || D_cvlist == 0 || D_cvlist->c_next ? &mchar_null: &mchar_so);[0m
      | [0;1;32m                                 ^
[0m[1mdisplay.c:2269:11: [0m[0;1;36mnote: [0mCalling 'PrePutWinMsg'[0m
 2269 |       l = PrePutWinMsg(str, 0, l);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2197:7: [0m[0;1;36mnote: [0mAssuming field 'd_encoding' is equal to UTF8[0m
 2197 |   if (D_encoding == UTF8)[0m
      | [0;1;32m      ^
[0m[1m./display.h:227:20: [0m[0;1;36mnote: [0mexpanded from macro 'D_encoding'[0m
  227 | #define D_encoding      DISPLAY(d_encoding)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1mdisplay.c:2197:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2197 |   if (D_encoding == UTF8)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2199:19: [0m[0;1;36mnote: [0mCalling 'strlen_onscreen'[0m
 2199 |       int chars = strlen_onscreen((unsigned char *)(s + start), (unsigned char *)(s + max));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdisplay.c:2168:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2168 |   while (*c && (!end || c < end))[0m
      | [0;1;32m         ^~
[0m[1mdisplay.c:2168:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mdisplay.c:2168:17: [0m[0;1;36mnote: [0mAssuming 'end' is null[0m
 2168 |   while (*c && (!end || c < end))[0m
      | [0;1;32m                ^~~~
[0m[1mdisplay.c:2168:22: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2168 |   while (*c && (!end || c < end))[0m
      | [0;1;32m                     ^
[0m[1mdisplay.c:2174:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2174 |           if (v == -2)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdisplay.c:2174:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 2174 |           if (v == -2)[0m
      | [0;1;32m          ^
[0m[1mdisplay.c:2177:14: [0m[0;1;36mnote: [0mAssuming 'v' is < 0[0m
 2177 |       while (v < 0 && (!end || c < end));[0m
      | [0;1;32m             ^~~~~
[0m[1mdisplay.c:2177:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mdisplay.c:2177:25: [0m[0;1;36mnote: [0m'end' is null[0m
 2177 |       while (v < 0 && (!end || c < end));[0m
      | [0;1;32m                        ^~~
[0m[1mdisplay.c:2177:29: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2177 |       while (v < 0 && (!end || c < end));[0m
      | [0;1;32m                            ^
[0m[1mdisplay.c:2171:7: [0m[0;1;36mnote: [0mLoop condition is true. Execution continues on line 2173[0m
 2171 |       do[0m
      | [0;1;32m      ^
[0m[1mdisplay.c:2173:17: [0m[0;1;36mnote: [0mAccess of the string literal at index 1, while it holds only a single 'unsigned char' element[0m
 2173 |           v = FromUtf8(*c++, &dec);[0m
      | [0;1;32m                       ^~~~
[0m[1mdisplay.c:2174:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2174 |           if (v == -2)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2175 |             c--;[0m
      | [0;1;32m                
[0m[1mdisplay.c:2180:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2180 |           if (utf8_isdouble(v))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2181 |             len++;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:2190:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2190 | PrePutWinMsg(s, start, max)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2227:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2227 | ShowHStatus(str)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2232:96: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2232 |   if (D_status == STATUS_ON_WIN && D_has_hstatus == HSTATUS_LASTLINE && STATLINE == D_height-1)[0m
      | [0;1;32m                                                                                               ^
[0m      | [0;32m                                                                                                {
[0m 2233 |     return;     /* sorry, in use */[0m
      | [0;1;32m                                   
[0m[1mdisplay.c:2234:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2234 |   if (D_blocked)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2235 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:2239:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2239 |       if (!D_hstatus && (str == 0 || *str == 0))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2240 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:2244:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2244 |       if (D_hstatus)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2245 |         AddCStr(D_DS);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:2247:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2247 |       if (str == 0 || *str == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2248 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:2251:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2251 |       if ((int)strlen(str) > max)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2252 |         AddStrn(str, max);[0m
 2253 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:2253:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2253 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2254 |         AddStr(str);[0m
      | [0;1;32m                    
[0m[1mdisplay.c:2265:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2265 |       if (l > D_width)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2266 |         l = D_width;[0m
      | [0;1;32m                    
[0m[1mdisplay.c:2270:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2270 |       if (!captionalways && D_cvlist && !D_cvlist->c_next)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2271 |         while (l++ < D_width)[0m
 2272 |           PUTCHARLP(' ');[0m
      | [0;1;32m                         
[0m[1mdisplay.c:2271:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2271 |         while (l++ < D_width)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2272 |           PUTCHARLP(' ');[0m
      | [0;1;32m                         
[0m[1mdisplay.c:2273:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2273 |       if (l < D_width)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2274 |         ClearArea(l, D_height - 1, l, D_width - 1, D_width - 1, D_height - 1, 0, 0);[0m
      | [0;1;32m                                                                                    
[0m[1mdisplay.c:2275:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2275 |       if (ox != -1 && oy != -1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2276 |         GotoPos(ox, oy);[0m
      | [0;1;32m                        
[0m[1mdisplay.c:2287:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2287 |       if (l > D_width)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2288 |         l = D_width;[0m
      | [0;1;32m                    
[0m[1mdisplay.c:2292:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2292 |       if (!captionalways || (D_cvlist && !D_cvlist->c_next))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2293 |         while (l++ < D_width)[0m
 2294 |           PUTCHARLP(' ');[0m
      | [0;1;32m                         
[0m[1mdisplay.c:2293:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2293 |         while (l++ < D_width)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2294 |           PUTCHARLP(' ');[0m
      | [0;1;32m                         
[0m[1mdisplay.c:2295:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2295 |       if (l < D_width)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2296 |         ClearArea(l, 0, l, D_width - 1, D_width - 1, 0, 0, 0);[0m
      | [0;1;32m                                                              
[0m[1mdisplay.c:2297:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2297 |       if (ox != -1 && oy != -1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2298 |         GotoPos(ox, oy);[0m
      | [0;1;32m                        
[0m[1mdisplay.c:2323:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2323 |   if (D_status == STATUS_ON_HS)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2324 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:2329:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2329 |       if (D_has_hstatus != HSTATUS_IGNORE && D_hstatusev.timeout.tv_sec)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 2330 |         evenq(&D_hstatusev);[0m
      | [0;1;32m                            
[0m[1mdisplay.c:2332:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2332 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2333 |     ShowHStatus((char *)0);[0m
      | [0;1;32m                           
[0m[1mdisplay.c:2342:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2342 | RefreshAll(isblank)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2358:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2358 | RefreshArea(xs, ys, xe, ye, isblank)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2370:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2370 |   for (y = ys; y <= ye; y++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2371 |     RefreshLine(y, xs, xe, isblank);[0m
      | [0;1;32m                                    
[0m[1mdisplay.c:2375:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2375 | RefreshLine(y, from, to, isblank)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2392:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2392 |       if (to >= D_status_len)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2393 |         D_status_len = to + 1;[0m
      | [0;1;32m                              
[0m[1mdisplay.c:2400:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2400 |       if (D_UT || D_BE)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2401 |         SetRendition(&mchar_null);[0m
      | [0;1;32m                                  
[0m[1mdisplay.c:2427:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2427 |               if (cv->c_captev.timeout.tv_sec)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2428 |                 evenq(&cv->c_captev);[0m
      | [0;1;32m                                     
[0m[1mdisplay.c:2433:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2433 |               if (l > xx - cv->c_xs + 1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2434 |                 l = xx - cv->c_xs + 1;[0m
      | [0;1;32m                                      
[0m[1mdisplay.c:2437:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2437 |               for (; from <= xx; from++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2438 |                 PUTCHARLP(' ');[0m
      | [0;1;32m                               
[0m[1mdisplay.c:2449:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2449 |           if (y < cv->c_ys || y > cv->c_ye || to < cv->c_xs || from > cv->c_xe)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 2450 |             continue;[0m
      | [0;1;32m                     
[0m[1mdisplay.c:2465:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2465 |       if (cv)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2466 |         continue;       /* we advanced from */[0m
      | [0;1;32m                                              
[0m[1mdisplay.c:2467:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2467 |       if (lvp == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2468 |         break;[0m
      | [0;1;32m              
[0m[1mdisplay.c:2471:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2471 |           if (!isblank)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2472 |             DisplayLine(&mline_null, &mline_blank, y, from, lvp->v_xs - 1);[0m
      | [0;1;32m                                                                           
[0m[1mdisplay.c:2496:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2496 |           if (from >= lvp->v_xe + 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2497 |             continue;[0m
      | [0;1;32m                     
[0m[1mdisplay.c:2501:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2501 |           if (!isblank)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2502 |             DisplayLine(&mline_null, &mline_blank, y, from, lvp->v_xe);[0m
      | [0;1;32m                                                                       
[0m[1mdisplay.c:2507:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2507 |       if (xx - lvp->v_xoff >= lcv->c_layer->l_width)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2508 |         xx = lcv->c_layer->l_width + lvp->v_xoff - 1;[0m
      | [0;1;32m                                                     
[0m[1mdisplay.c:2522:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2522 |   if (!isblank && from <= to)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2523 |     DisplayLine(&mline_null, &mline_blank, y, from, to);[0m
      | [0;1;32m                                                        
[0m[1mdisplay.c:2532:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2532 | WriteLP(x2, y2)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2544:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2544 |       if (x2 > 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2545 |         x2--;[0m
 2546 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:2546:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2546 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2547 |         D_lpchar = mchar_blank;[0m
      | [0;1;32m                               
[0m[1mdisplay.c:2555:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2555 |   if (D_lpchar.mbcs)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2556 |     PUTCHAR(D_lpchar.mbcs);[0m
      | [0;1;32m                           
[0m[1mdisplay.c:2563:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2563 | ClearLine(oml, y, from, to, bce)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2573:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2573 |   if (D_UT)     /* Safe to erase ? */[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 2574 |     SetRendition(&mchar_null);[0m
      | [0;1;32m                              
[0m[1mdisplay.c:2576:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2576 |   if (D_BE)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 2577 |     SetBackColor(bce);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:2591:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2591 |   if (oml == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2592 |     oml = &mline_null;[0m
      | [0;1;32m                      
[0m[1mdisplay.c:2601:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2601 |   for (x = from; x <= to; x++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2602 |     copy_mchar2mline(&bcechar, &mline_old, x);[0m
      | [0;1;32m                                              
[0m[1mdisplay.c:2610:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2610 | DisplayLine(oml, ml, y, from, to)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2660:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2660 |           if (ml != NULL && (x < to || x != D_width - 1 || ml->image[x + 1]))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2661 |             if (cmp_mline(oml, ml, x))[0m
 2662 |               continue;[0m
      | [0;1;32m                       
[0m[1mdisplay.c:2661:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2661 |             if (cmp_mline(oml, ml, x))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2662 |               continue;[0m
      | [0;1;32m                       
[0m[1mdisplay.c:2666:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'font' results in a dereference of a null pointer (loaded from variable 'ml') [clang-analyzer-core.NullDereference][0m
 2666 |       if (dw_right(ml, x, D_encoding))[0m
      | [0;1;32m          ^
[0m[1m./ansi.h:161:17: [0m[0;1;36mnote: [0mexpanded from macro 'dw_right'[0m
  161 |         (unsigned char)(ml)->font[x] == 0xff && (unsigned char)(ml)->image[x] == 0xff : \[0m
      | [0;1;32m                       ^~~
[0m[1mdisplay.c:2617:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2617 |   ASSERT(display);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mdisplay.c:2618:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2618 |   ASSERT(y >= 0 && y < D_height);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mdisplay.c:2619:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2619 |   ASSERT(from >= 0 && from < D_width);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mdisplay.c:2620:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2620 |   ASSERT(to >= 0 && to < D_width);[0m
      | [0;1;32m  ^
[0m[1m./screen.h:86:28: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT'[0m
   86 | # define ASSERT(lousy_cpp) do {} while (0)[0m
      | [0;1;32m                           ^
[0m[1mdisplay.c:2621:7: [0m[0;1;36mnote: [0mAssuming field 'flg' is not equal to 0[0m
 2621 |   if (!D_CLP && y == D_bot && to == D_width - 1)[0m
      | [0;1;32m      ^~~~~~
[0m[1mdisplay.c:2621:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2621 |   if (!D_CLP && y == D_bot && to == D_width - 1)[0m
      | [0;1;32m             ^
[0m[1mdisplay.c:2645:7: [0m[0;1;36mnote: [0mAssuming field 'd_mbcs' is 0[0m
 2645 |   if (D_mbcs)[0m
      | [0;1;32m      ^
[0m[1m./display.h:226:17: [0m[0;1;36mnote: [0mexpanded from macro 'D_mbcs'[0m
  226 | #define D_mbcs          DISPLAY(d_mbcs)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mdisplay.c:2645:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2645 |   if (D_mbcs)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2654:18: [0m[0;1;36mnote: [0mAssuming 'x' is <= 'to'[0m
 2654 |   for (x = from; x <= to; x++)[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mdisplay.c:2654:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2654 |   for (x = from; x <= to; x++)[0m
      | [0;1;32m  ^
[0m[1mdisplay.c:2660:8: [0m[0;1;36mnote: [0mAssuming 'ml' is equal to NULL[0m
 2660 |           if (ml != NULL && (x < to || x != D_width - 1 || ml->image[x + 1]))[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mdisplay.c:2660:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2660 |           if (ml != NULL && (x < to || x != D_width - 1 || ml->image[x + 1]))[0m
      | [0;1;32m                         ^
[0m[1mdisplay.c:2666:27: [0m[0;1;36mnote: [0mAssuming field 'd_encoding' is equal to 8[0m
 2666 |       if (dw_right(ml, x, D_encoding))[0m
      | [0;1;32m                          ^
[0m[1m./display.h:227:20: [0m[0;1;36mnote: [0mexpanded from macro 'D_encoding'[0m
  227 | #define D_encoding      DISPLAY(d_encoding)[0m
      | [0;1;32m                        ^
[0m[1m./display.h:193:21: [0m[0;1;36mnote: [0mexpanded from macro 'DISPLAY'[0m
  193 | # define DISPLAY(x) display->x[0m
      | [0;1;32m                    ^
[0m[1m./ansi.h:160:34: [0m[0;1;36mnote: [0mexpanded from macro 'dw_right'[0m
  160 | #  define dw_right(ml, x, enc) ((enc == UTF8) ? \[0m
      | [0;1;32m                                 ^~~~~~~~~~~
[0m[1mdisplay.c:2666:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2666 |       if (dw_right(ml, x, D_encoding))[0m
      | [0;1;32m          ^
[0m[1m./ansi.h:160:33: [0m[0;1;36mnote: [0mexpanded from macro 'dw_right'[0m
  160 | #  define dw_right(ml, x, enc) ((enc == UTF8) ? \[0m
      | [0;1;32m                                ^
[0m[1mdisplay.c:2666:11: [0m[0;1;36mnote: [0mAccess to field 'font' results in a dereference of a null pointer (loaded from variable 'ml')[0m
 2666 |       if (dw_right(ml, x, D_encoding))[0m
      | [0;1;32m          ^
[0m[1m./ansi.h:161:17: [0m[0;1;36mnote: [0mexpanded from macro 'dw_right'[0m
  161 |         (unsigned char)(ml)->font[x] == 0xff && (unsigned char)(ml)->image[x] == 0xff : \[0m
      | [0;1;32m                       ^~~
[0m[1mdisplay.c:2672:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2672 |       if (x == to && dw_left(ml, x, D_encoding))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2673 |         break;  /* don't start new kanji */[0m
      | [0;1;32m                                           
[0m[1mdisplay.c:2678:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2678 |       if (dw_left(ml, x, D_encoding))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2679 |         PUTCHAR(ml->image[++x]);[0m
      | [0;1;32m                                
[0m[1mdisplay.c:2698:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2698 |       if (D_UT)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2699 |         SetRendition(&mchar_null);[0m
      | [0;1;32m                                  
[0m[1mdisplay.c:2700:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2700 |       if (D_DC)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2701 |         AddCStr(D_DC);[0m
 2702 |       else if (D_CDC)[0m
      | [0;32m      } 
[0m[1mdisplay.c:2702:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2702 |       else if (D_CDC)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2703 |         AddCStr2(D_CDC, 1);[0m
 2704 |       else if (D_CE)[0m
      | [0;32m      } 
[0m[1mdisplay.c:2704:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2704 |       else if (D_CE)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2705 |         AddCStr(D_CE);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:2710:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2710 | PutChar(c, x, y)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2721:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2721 |       if (D_encoding == UTF8)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2722 |         D_rend.font = 0;[0m
      | [0;1;32m                        
[0m[1mdisplay.c:2730:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2730 | InsChar(c, x, xe, y, oml)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2744:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2744 |       if (xe == D_width - 1)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2745 |         D_lp_missing = 0;[0m
      | [0;1;32m                         
[0m[1mdisplay.c:2764:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2764 |       if (c->mbcs && D_IC)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2765 |         AddCStr(D_IC);[0m
      | [0;1;32m                      
[0m[1mdisplay.c:2766:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2766 |       if (D_IC)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2767 |         AddCStr(D_IC);[0m
 2768 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:2768:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2768 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2769 |         AddCStr2(D_CIC, c->mbcs ? 2 : 1);[0m
      | [0;1;32m                                         
[0m[1mdisplay.c:2783:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2783 |       if (D_encoding == UTF8)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2784 |         D_rend.font = 0;[0m
      | [0;1;32m                        
[0m[1mdisplay.c:2786:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2786 |       if (D_x == D_width - 1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2787 |         PUTCHARLP(c->mbcs);[0m
 2788 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:2788:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2788 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2789 |         RAW_PUTCHAR(c->mbcs);[0m
      | [0;1;32m                             
[0m[1mdisplay.c:2795:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2795 | WrapChar(c, x, y, xs, ys, xe, ye, ins)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2815:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2815 |       if (y == ye)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2816 |         ScrollV(xs, ys, xe, ye, 1, bce);[0m
 2817 |       else if (y < D_height - 1)[0m
      | [0;32m      } 
[0m[1mdisplay.c:2817:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2817 |       else if (y < D_height - 1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2818 |         y++;[0m
      | [0;1;32m            
[0m[1mdisplay.c:2819:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2819 |       if (ins)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2820 |         InsChar(c, xs, xe, y, 0);[0m
 2821 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:2821:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2821 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2822 |         PutChar(c, xs, y);[0m
      | [0;1;32m                          
[0m[1mdisplay.c:2836:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2836 |   else if (y == D_bot)  /* remove unusable region? */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2837 |     ChangeScrollRegion(0, D_height - 1);[0m
      | [0;1;32m                                        
[0m[1mdisplay.c:2840:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2840 |       if (D_CLP && y >= 0)              /* don't even try if !LP */[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2841 |         RefreshLine(y, D_width - 1, D_width - 1, 0);[0m
      | [0;1;32m                                                    
[0m[1mdisplay.c:2845:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2845 |           if (y == ye)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2846 |             ScrollV(xs, ys, xe, ye, 1, bce);[0m
      | [0;1;32m                                            
[0m[1mdisplay.c:2851:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2851 |   if (y != ye && y < D_height - 1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2852 |     y++;[0m
      | [0;1;32m        
[0m[1mdisplay.c:2853:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2853 |   if (ins != D_insert)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2854 |     InsertMode(ins);[0m
      | [0;1;32m                    
[0m[1mdisplay.c:2869:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2869 |       if (D_encoding == UTF8)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2870 |         D_rend.font = 0;[0m
      | [0;1;32m                        
[0m[1mdisplay.c:2879:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2879 | ResizeDisplay(wi, he)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2907:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2907 | ChangeScrollRegion(newtop, newbot)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2910:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2910 |   if (display == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2911 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:2912:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2912 |   if (newtop == newbot)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2913 |     return;                     /* xterm etc can't do it */[0m
      | [0;1;32m                                                           
[0m[1mdisplay.c:2914:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2914 |   if (newtop == -1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2915 |     newtop = 0;[0m
      | [0;1;32m               
[0m[1mdisplay.c:2916:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2916 |   if (newbot == -1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2917 |     newbot = D_height - 1;[0m
      | [0;1;32m                          
[0m[1mdisplay.c:2924:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2924 |   if (D_top == newtop && D_bot == newbot)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2925 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:2985:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2985 | AddStr(str)[0m
      | [0;1;32m^
[0m[1mdisplay.c:2995:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2995 |       while ((c = *str++))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2996 |         AddUtf8((unsigned char)c);[0m
      | [0;1;32m                                  
[0m[1mdisplay.c:3000:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3000 |   while ((c = *str++))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3001 |     AddChar(c);[0m
      | [0;1;32m               
[0m[1mdisplay.c:3005:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3005 | AddStrn(str, n)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3015:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3015 |       while ((c = *str++) && n-- > 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3016 |         AddUtf8((unsigned char)c);[0m
      | [0;1;32m                                  
[0m[1mdisplay.c:3018:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3018 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3019 | #endif[0m
 3020 |   while ((c = *str++) && n-- > 0)[0m
 3021 |     AddChar(c);[0m
      | [0;1;32m               
[0m[1mdisplay.c:3020:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3020 |   while ((c = *str++) && n-- > 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3021 |     AddChar(c);[0m
      | [0;1;32m               
[0m[1mdisplay.c:3022:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3022 |   while (n-- > 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3023 |     AddChar(' ');[0m
      | [0;1;32m                 
[0m[1mdisplay.c:3027:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3027 | Flush(progress)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3037:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3037 |   if (l == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3038 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:3049:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3049 |       if (fcntl(D_userfd, F_SETFL, 0))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3050 |         debug1("Warning: BLOCK fcntl failed: %d\n", errno);[0m
      | [0;1;32m                                                           
[0m[1mdisplay.c:3065:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3065 |               if (errno == EINTR)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3066 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdisplay.c:3080:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3080 |           if (errno == EINTR)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3081 |             continue;[0m
      | [0;1;32m                     
[0m[1mdisplay.c:3089:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3089 |   if (l)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 3090 |     debug1("Warning: Flush could not write %d bytes\n", l);[0m
      | [0;1;32m                                                           
[0m[1mdisplay.c:3095:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3095 |       if (fcntl(D_userfd, F_SETFL, FNBLOCK))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3096 |         debug1("Warning: NBLOCK fcntl failed: %d\n", errno);[0m
      | [0;1;32m                                                            
[0m[1mdisplay.c:3098:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3098 |   if (D_blocked == 1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3099 |     D_blocked = 0;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:3106:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3106 |   if (D_userfd >= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3107 |     close(D_userfd);[0m
      | [0;1;32m                    
[0m[1mdisplay.c:3112:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3112 |   if (D_obuf)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3113 |     free(D_obuf);[0m
      | [0;1;32m                 
[0m[1mdisplay.c:3136:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3136 |       if (--D_obuffree > 0)     /* redo AddChar decrement */[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3137 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:3153:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3153 |   if (!D_obuf)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3154 |     Panic(0, "Out of memory");[0m
      | [0;1;32m                              
[0m[1mdisplay.c:3161:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3161 | DisplaySleep1000(n, eat)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3169:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3169 |   if (n <= 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3170 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:3184:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3184 |       if (eat)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3185 |         read(D_userfd, &buf, 1);[0m
      | [0;1;32m                                
[0m[1mdisplay.c:3221:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3221 |   if (D_ME)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 3222 |     AddCStr(D_ME);[0m
 3223 |   else[0m
      | [0;32m  } 
[0m[1mdisplay.c:3226:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3226 |       if (D_hascolor)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3227 |         AddStr("\033[m");       /* why is D_ME not set? */[0m
      | [0;1;32m                                                          
[0m[1mdisplay.c:3233:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3233 |   if (D_IM && strcmp(D_IM, D_EI))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3234 |     AddCStr(D_EI);[0m
      | [0;1;32m                  
[0m[1mdisplay.c:3238:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3238 |   if (D_KS && strcmp(D_KS, D_KE))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3239 |     AddCStr(D_KS);[0m
      | [0;1;32m                  
[0m[1mdisplay.c:3240:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3240 |   if (D_CCS && strcmp(D_CCS, D_CCE))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3241 |     AddCStr(D_CCS);[0m
      | [0;1;32m                   
[0m[1mdisplay.c:3282:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3282 | disp_writeev_eagain(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3295:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3295 | disp_writeev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3303:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3303 |   if (len < size)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3304 |     size = len;[0m
      | [0;1;32m               
[0m[1mdisplay.c:3305:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3305 |   if (D_status_obufpos && size > D_status_obufpos)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 3306 |     size = D_status_obufpos;[0m
      | [0;1;32m                            
[0m[1mdisplay.c:3314:4: [0m[0;1;35mwarning: [0m[1mThe bcopy() function is obsoleted by memcpy() or memmove() [clang-analyzer-security.insecureAPI.bcopy][0m
 3314 |           bcopy(D_obuf + size, D_obuf, len);[0m
      | [0;1;32m          ^~~~~
[0m[1mdisplay.c:3314:4: [0m[0;1;36mnote: [0mThe bcopy() function is obsoleted by memcpy() or memmove()[0m
 3314 |           bcopy(D_obuf + size, D_obuf, len);[0m
      | [0;1;32m          ^~~~~
[0m[1mdisplay.c:3346:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3346 |           if (D_blocked_fuzz < 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3347 |             D_blocked_fuzz = 0;[0m
      | [0;1;32m                               
[0m[1mdisplay.c:3384:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3384 |       if (errno != EINTR && errno != EAGAIN)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3385 | #if defined(EWOULDBLOCK) && (EWOULDBLOCK != EAGAIN)[0m
 3386 |         if (errno != EWOULDBLOCK)[0m
 3387 | #endif[0m
 3388 |           Msg(errno, "Error writing output to display");[0m
      | [0;1;32m                                                        
[0m[1mdisplay.c:3396:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3396 | disp_readev_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3415:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3415 |   if (D_forecv)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 3416 |     for (cv = D_forecv->c_layer->l_cvlist; cv; cv = cv->c_lnext)[0m
 3417 |       {[0m
 3418 |         display = cv->c_display;[0m
 3419 |         if (D_status == STATUS_ON_WIN)[0m
 3420 |           RemoveStatus();[0m
 3421 |       }[0m
      | [0;1;32m       
[0m[1mdisplay.c:3419:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3419 |         if (D_status == STATUS_ON_WIN)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3420 |           RemoveStatus();[0m
      | [0;1;32m                         
[0m[1mdisplay.c:3424:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3424 |   if (D_fore == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3425 |     size = IOSIZE;[0m
 3426 |   else[0m
      | [0;32m  } 
[0m[1mdisplay.c:3429:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3429 |       if (W_UWP(D_fore))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3430 |         size = sizeof(D_fore->w_pwin->p_inbuf) - D_fore->w_pwin->p_inlen;[0m
 3431 |       else[0m
      | [0;32m      } 
[0m[1mdisplay.c:3431:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3431 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3432 | #endif[0m
 3433 |         size = sizeof(D_fore->w_inbuf) - D_fore->w_inlen;[0m
      | [0;1;32m                                                         
[0m[1mdisplay.c:3436:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3436 |   if (size > IOSIZE)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3437 |     size = IOSIZE;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:3438:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3438 |   if (size <= 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3439 |     size = 1;     /* Always allow one char for command keys */[0m
      | [0;1;32m                                                              
[0m[1mdisplay.c:3444:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3444 |       if (errno == EINTR || errno == EAGAIN)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3445 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:3479:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3479 |       for (p = windows; p ; p = p->w_next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3480 |         if (p->w_zdisplay == display)[0m
 3481 |           {[0m
 3482 |             flayer = &p->w_layer;[0m
 3483 |             bufp = (char *)buf;[0m
 3484 |             while (size > 0)[0m
 3485 |               LayProcess(&bufp, &size);[0m
 3486 |             return;[0m
 3487 |           }[0m
      | [0;1;32m           
[0m[1mdisplay.c:3484:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3484 |             while (size > 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3485 |               LayProcess(&bufp, &size);[0m
      | [0;1;32m                                       
[0m[1mdisplay.c:3492:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3492 |   if (idletimo > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3493 |     ResetIdle();[0m
      | [0;1;32m                
[0m[1mdisplay.c:3494:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3494 |   if (D_fore)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3495 |     D_fore->w_lastdisp = display;[0m
      | [0;1;32m                                 
[0m[1mdisplay.c:3538:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3538 |           *(--buf) = '[';[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3539 |           ++size;[0m
      | [0;1;32m                
[0m      | [0;32m                ;} 
[0m[1mdisplay.c:3546:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3546 |           *(--buf) = '\033';[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3547 |           ++size;[0m
 3548 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdisplay.c:3551:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3551 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdisplay.c:3561:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3561 |               if (c == '\033')[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 3562 |                 {[0m
 3563 |                   /* potential escape sequence */[0m
 3564 |                   mark = bp-1;[0m
 3565 |                   D_mouse_parse.state = CSI_ESC_SEEN;[0m
 3566 |                 }[0m
 3567 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdisplay.c:3570:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3570 |               if (c == '[')[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 3571 |                 {[0m
 3572 |                   /* continue buffering an escape sequence */[0m
 3573 |                   D_mouse_parse.state = CSI_BEGIN;[0m
 3574 |                 }[0m
 3575 |               else[0m
 3576 |                   D_mouse_parse.state = CSI_INACTIVE;[0m
 3577 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdisplay.c:3575:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3575 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3576 |                   D_mouse_parse.state = CSI_INACTIVE;[0m
      | [0;1;32m                                                     
[0m[1mdisplay.c:3580:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3580 |               if (c == 'M')[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 3581 |                 {[0m
 3582 |                   /* VT200 mouse sequence */[0m
 3583 |                   D_mouse_parse.state = CSI_PB;[0m
 3584 |                   D_mouse_parse.sgrmode = 0;[0m
 3585 |                 }[0m
 3586 |               else if (c == '<')[0m
 3587 |                 {[0m
 3588 |                   /* SGR mouse sequence */[0m
 3589 |                   D_mouse_parse.state = CSI_PB;[0m
 3590 |                   D_mouse_parse.params[D_mouse_parse.state] = 0;[0m
 3591 |                   D_mouse_parse.sgrmode = 1;[0m
 3592 |                 }[0m
 3593 |               else[0m
 3594 |                   D_mouse_parse.state = CSI_INACTIVE;[0m
 3595 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdisplay.c:3593:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3593 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3594 |                   D_mouse_parse.state = CSI_INACTIVE;[0m
      | [0;1;32m                                                     
[0m[1mdisplay.c:3610:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3610 |                       if (c == 'M' || c == 'm')[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3611 |                         D_mouse_parse.state = CSI_DONE;[0m
 3612 |                       else[0m
      | [0;32m                      } 
[0m[1mdisplay.c:3612:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3612 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3613 |                         D_mouse_parse.state = CSI_INVALID;[0m
      | [0;1;32m                                                          
[0m[1mdisplay.c:3620:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3620 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3621 |                     D_mouse_parse.state = CSI_INVALID;[0m
      | [0;1;32m                                                      
[0m[1mdisplay.c:3628:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3628 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mdisplay.c:3631:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3631 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mdisplay.c:3637:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3637 |               if (buf < mark)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3638 |                 disp_processinput(display, buf, mark-buf);[0m
      | [0;1;32m                                                          
[0m[1mdisplay.c:3647:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3647 |               if (buf < mark)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3648 |                 disp_processinput(display, buf, mark-buf);[0m
      | [0;1;32m                                                          
[0m[1mdisplay.c:3678:35: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3678 |                               n = snprintf([0m
      | [0;1;32m                                  ^~~~~~~~
[0m[1mdisplay.c:3678:35: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 3678 |                               n = snprintf([0m
      | [0;1;32m                                  ^~~~~~~~
[0m[1mdisplay.c:3684:35: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3684 |                               n = snprintf([0m
      | [0;1;32m                                  ^~~~~~~~
[0m[1mdisplay.c:3684:35: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 3684 |                               n = snprintf([0m
      | [0;1;32m                                  ^~~~~~~~
[0m[1mdisplay.c:3689:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3689 |                           if (n > MAX_MOUSE_SEQUENCE)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3690 |                                 n = MAX_MOUSE_SEQUENCE;[0m
      | [0;1;32m                                                       
[0m[1mdisplay.c:3695:27: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3695 |                           memcpy(buf, tmp, n);[0m
      | [0;1;32m                          ^~~~~~
[0m[1mdisplay.c:3695:27: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3695 |                           memcpy(buf, tmp, n);[0m
      | [0;1;32m                          ^~~~~~
[0m[1mdisplay.c:3703:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3703 |                   if (D_mouse_parse.sgrmode)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3704 |                     focus = (c == 'm');[0m
 3705 |                   else[0m
      | [0;32m                  } 
[0m[1mdisplay.c:3705:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3705 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3706 |                     focus = (D_mouse_parse.params[CSI_PB] == '#');[0m
      | [0;1;32m                                                                  
[0m[1mdisplay.c:3727:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3727 |   if (size > 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 3728 |     disp_processinput(display, buf, size);[0m
      | [0;1;32m                                          
[0m[1mdisplay.c:3732:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3732 | disp_processinput(display, buf, size)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3747:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3747 |           if (c == -2)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3748 |             i--;        /* try char again */[0m
      | [0;1;32m                                            
[0m[1mdisplay.c:3749:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3749 |           if (c < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3750 |             continue;[0m
      | [0;1;32m                     
[0m[1mdisplay.c:3757:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3757 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3758 |             j += EncodeChar(buf2 + j, c, enc, 0);[0m
      | [0;1;32m                                                 
[0m[1mdisplay.c:3759:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3759 |           if (j > (int)sizeof(buf2) - 10)       /* just in case... */[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3760 |             break;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:3770:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3770 | disp_status_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3776:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3776 |   if (D_status)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 3777 |     RemoveStatus();[0m
      | [0;1;32m                   
[0m[1mdisplay.c:3781:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3781 | disp_hstatus_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3796:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3796 | disp_blocked_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3809:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3809 |       for (p = windows; p; p = p->w_next)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3810 |         if (p->w_readev.condneg == &D_obuflenmax)[0m
 3811 |           {[0m
 3812 |             debug1("freeing window #%d\n", p->w_number);[0m
 3813 |             p->w_readev.condpos = p->w_readev.condneg = 0;[0m
 3814 |           }[0m
      | [0;1;32m           
[0m[1mdisplay.c:3820:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3820 | disp_map_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3829:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3829 |   if (!(l = D_seql))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3830 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:3841:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3841 |       if (StuffKey(i))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3842 |         ProcessInput2((char *)q + 3, q[2]);[0m
      | [0;1;32m                                           
[0m[1mdisplay.c:3843:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3843 |       if (display == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3844 |         return;[0m
      | [0;1;32m               
[0m[1mdisplay.c:3848:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3848 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3849 |     D_dontmap = 1;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:3855:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3855 | disp_idle_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3862:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3862 |   if (idletimo <= 0 || idleaction.nr == RC_ILLEGAL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3863 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:3868:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3868 |   if (idleaction.nr == RC_BLANKER)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3869 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:3870:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3870 |   for (display = displays; display; display = display->d_next)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 3871 |     if (olddisplay == display)[0m
 3872 |       break;[0m
      | [0;1;32m            
[0m[1mdisplay.c:3871:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3871 |     if (olddisplay == display)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3872 |       break;[0m
      | [0;1;32m            
[0m[1mdisplay.c:3873:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3873 |   if (display)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3874 |     ResetIdle();[0m
      | [0;1;32m                
[0m[1mdisplay.c:3883:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3883 |       if (!D_idleev.queued)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3884 |         evenq(&D_idleev);[0m
      | [0;1;32m                         
[0m[1mdisplay.c:3886:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3886 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3887 |     evdeq(&D_idleev);[0m
      | [0;1;32m                     
[0m[1mdisplay.c:3894:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3894 | disp_blanker_fn(ev, data)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3910:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3910 |   for (b = buf; size; size--)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3911 |     AddChar(*b++);[0m
      | [0;1;32m                  
[0m[1mdisplay.c:3920:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3920 |   if (D_blankerev.fd == -1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3921 |     return;[0m
      | [0;1;32m           
[0m[1mdisplay.c:3922:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3922 |   if (D_blocked == 4)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3923 |     D_blocked = 0;[0m
      | [0;1;32m                  
[0m[1mdisplay.c:3938:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3938 |       if (D_hascolor)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3939 |         AddStr("\033[m\033[m"); /* why is D_ME not set? */[0m
      | [0;1;32m                                                          
[0m[1mdisplay.c:3956:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 3956 | RunBlanker(cmdv)[0m
      | [0;1;32m^
[0m[1mdisplay.c:3970:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3970 |   strncpy(termname + 5, D_termname, MAXTERMLEN - 6);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mdisplay.c:3970:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 3970 |   strncpy(termname + 5, D_termname, MAXTERMLEN - 6);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mdisplay.c:3994:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3994 |       Msg(errno, "fork");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3995 |       close(D_blankerev.fd);[0m
 3996 |       D_blankerev.fd = -1;[0m
 3997 |       close(slave);[0m
 3998 |       return;[0m
      | [0;1;32m            
[0m      | [0;32m            ;} 
[0m[1mdisplay.c:4000:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4000 |       displays = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mdisplay.c:4005:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4005 |       if (setgid(real_gid) || setuid(real_uid))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 4006 |         Panic(errno, "setuid/setgid");[0m
      | [0;1;32m                                      
[0m[1mdisplay.c:4023:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4023 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4024 |         closeallfiles(D_blankerev.fd);[0m
      | [0;1;32m                                      
[0m[1mdisplay.c:4041:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4041 |       if (open(m, O_RDWR))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 4042 |         Panic(errno, "Cannot open %s", m);[0m
      | [0;1;32m                                          
[0m[1mdisplay.c:4046:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4046 |       if (slave != -1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4047 |         close(slave);[0m
      | [0;1;32m                     
[0m[1mdisplay.c:4071:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4071 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m457 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

Could not open /itch/common/crepos/cu-to-rtu/c/screen-4.9.0/tty.c for writing


Process exited with return code 0
