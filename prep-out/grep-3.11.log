Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/grep-3.11
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 122 files out of 122 in compilation database ...
[  1/122][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmptvnat_by.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/test-localcharset.c
[  2/122][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpiwh2nkjg.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/sockets.c
[  3/122][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpvi1uwes7.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/fd-safer-flag.c
[  4/122][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpsrana9jc.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/xsize.c
[  5/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmprp78zqpd.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/dirfd.c
[1mdirfd.c:92:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |   if (fd == -1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   93 | # ifndef __KLIBC__[0m
   94 |     errno = ENOTSUP;[0m
      | [0;1;32m                    
[0m1 warning generated.

[  6/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpjq5ywaom.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/unistr/u8-mbtoucr.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  7/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpe1l7p5cd.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/ialloc.c
5 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  8/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp678egxhl.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbiter.c
10 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  9/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp37g7p0a7.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbrlen.c
[1mmbrlen.c:29:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   29 |   if (ps == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   30 |     ps = &internal_state;[0m
      | [0;1;32m                         
[0m1 warning generated.

[ 10/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp8eevn727.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/xstriconv.c
[1mxstriconv.c:37:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |   if (retval < 0 && errno == ENOMEM)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   38 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxstriconv.c:47:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   if (result == NULL && errno == ENOMEM)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   48 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxstriconv.c:59:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (result == NULL && errno == ENOMEM)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   60 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 11/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmph623x5j8.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbchar.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 12/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp01jjlld_.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/close-stream.c
[1mclose-stream.c:71:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |       if (! fclose_fail)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   72 |         errno = 0;[0m
      | [0;1;32m                  
[0m1 warning generated.

[ 13/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp0eat4m62.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/strtoll.c
18 warnings generated.
Suppressed 18 warnings (18 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 14/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpmotqv8tx.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/xalloc-die.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 15/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpt_gccq68.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/i-ring.c
[1mi-ring.c:31:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   for (i = 0; i < I_RING_SIZE; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   32 |     ir->ir_data[i] = default_val;[0m
      | [0;1;32m                                 
[0m[1mi-ring.c:49:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (dest_idx == ir->ir_back)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   50 |     ir->ir_back = (ir->ir_back + !ir->ir_empty) % I_RING_SIZE;[0m
      | [0;1;32m                                                              
[0m[1mi-ring.c:59:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (i_ring_empty (ir))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   60 |     abort ();[0m
      | [0;1;32m             
[0m[1mi-ring.c:63:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |   if (ir->ir_front == ir->ir_back)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   64 |     ir->ir_empty = true;[0m
   65 |   else[0m
      | [0;32m  } 
[0m[1mi-ring.c:65:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   66 |     ir->ir_front = ((ir->ir_front + I_RING_SIZE - 1) % I_RING_SIZE);[0m
      | [0;1;32m                                                                    
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 16/122][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpb1df2y2d.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/sigsegv.c
[1msigsegv.c:936:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  936 |   if (sigsegv_get_vma ((uintptr_t) some_variable_on_stack, &vma) >= 0)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  937 |     stack_top = vma.end - 1;[0m
      | [0;1;32m                            
[0m[1msigsegv.c:1299:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1299 |   if (stk_user_handler)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1300 |     action.sa_flags |= SA_ONSTACK;[0m
      | [0;1;32m                                  
[0m[1msigsegv.c:1362:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1362 |       if (!stack_top)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1363 |         return -1;[0m
      | [0;1;32m                  
[0m[1msigsegv.c:1380:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1380 |     if (sigaltstack (&ss, (stack_t*)0) < 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1381 |       return -1;[0m
      | [0;1;32m                
[0m[1msigsegv.c:1414:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1414 |     if (sigaltstack (&ss, (stack_t *) 0) < 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1415 |       perror ("gnulib sigsegv (stackoverflow_deinstall_handler)");[0m
      | [0;1;32m                                                                  
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 17/122][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpbop9aczo.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/openat-proc.c
[1mopenat-proc.c:83:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |         if (proc_self_fd < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   84 |           proc_status = -1;[0m
   85 |         else[0m
      | [0;32m        } 
[0m[1mopenat-proc.c:93:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   93 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:93:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   93 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:99:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |     if (proc_status < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  100 |       return NULL;[0m
  101 |     else[0m
      | [0;32m    } 
[0m[1mopenat-proc.c:107:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |             if (! result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  108 |               return NULL;[0m
      | [0;1;32m                          
[0m[1mopenat-proc.c:111:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  111 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:111:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  111 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:152:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  152 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mopenat-proc.c:152:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  152 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 18/122][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmph1yjutsm.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/pipe-safer.c
[ 19/122][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmprrmjli21.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/cloexec.c
[1mcloexec.c:50:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   51 |         return 0;[0m
      | [0;1;32m                 
[0m1 warning generated.

[ 20/122][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpfl8yvqid.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/safe-read.c
[1msafe-read.c:62:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       if (0 <= result)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   63 |         return result;[0m
   64 |       else if (IS_EINTR (errno))[0m
      | [0;32m      } 
[0m[1msafe-read.c:64:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       else if (IS_EINTR (errno))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   65 |         continue;[0m
   66 |       else if (errno == EINVAL && SYS_BUFSIZE_MAX < count)[0m
      | [0;32m      } 
[0m[1msafe-read.c:66:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       else if (errno == EINVAL && SYS_BUFSIZE_MAX < count)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m   67 |         count = SYS_BUFSIZE_MAX;[0m
   68 |       else[0m
      | [0;32m      } 
[0m[1msafe-read.c:68:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   69 |         return result;[0m
      | [0;1;32m                      
[0m4 warnings generated.

[ 21/122][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp7gmk62hv.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/malloc/dynarray_resize.c
[1mmalloc/dynarray_resize.c:56:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:59:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   60 |     new_array = realloc (list->array, new_size_bytes);[0m
      | [0;1;32m                                                      
[0m[1mmalloc/dynarray_resize.c:61:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   62 |     return false;[0m
      | [0;1;32m                 
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 22/122][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpt5kxow1k.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/nanosleep.c
[1mnanosleep.c:74:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |             if (remaining_delay)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   75 |               remaining_delay->tv_sec += seconds;[0m
      | [0;1;32m                                                 
[0m1 warning generated.

[ 23/122][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp958dj6r2.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/exitfail.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 24/122][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpgsvlldbt.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/offtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 25/122][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp94zgwsw9.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/openat-safer.c
[ 26/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp21rb4j29.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/xstrtol-error.c
[1mxstrtol-error.c:60:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mxstrtol-error.c:63:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |       msgid = N_("invalid %s%s argument '%s'");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   64 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mxstrtol-error.c:69:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mxstrtol-error.c:72:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |       msgid = N_("%s%s argument '%s' too large");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   73 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mxstrtol-error.c:83:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   84 |     option = long_options[opt_idx].name;[0m
      | [0;1;32m                                        
[0m19 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 27/122][2.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpx8dxhae3.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/chdir-long.c
[1mchdir-long.c:76:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   77 |     return -1;[0m
      | [0;1;32m              
[0m[1mchdir-long.c:112:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   if (e == 0 || errno != ENAMETOOLONG)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  113 |     return e;[0m
      | [0;1;32m             
[0m[1mchdir-long.c:150:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  151 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:156:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |         if (cdb_advance_fd (&cdb, "/") != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  157 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:181:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  182 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:189:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |         if (cdb_advance_fd (&cdb, dir) != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  190 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:193:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |     if (cdb_fchdir (&cdb) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  194 |       goto Fail;[0m
      | [0;1;32m                
[0m9 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 28/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpzlhg63h7.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/closeout.c
[1mcloseout.c:122:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |       if (file_name)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  123 |         error (0, errno, "%s: %s", quotearg_colon (file_name),[0m
  124 |                write_error);[0m
  125 |       else[0m
      | [0;32m      } 
[0m[1mcloseout.c:125:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  126 |         error (0, errno, "%s", write_error);[0m
      | [0;1;32m                                            
[0m[1mcloseout.c:133:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |   if (!SANITIZE_ADDRESS && close_stream (stderr) != 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  134 |     _exit (exit_failure);[0m
      | [0;1;32m                         
[0m17 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 29/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpf5a7w_co.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/openat-die.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 30/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpm0d0w_bf.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/xbinary-io.c
15 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 31/122][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp2nqukos_.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/fcntl.c
[1mfcntl.c:329:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:426:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:430:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  430 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  431 |               void *p = va_arg (arg, void *);[0m
  432 |               result = fcntl (fd, action, p);[0m
  433 |             }[0m
  434 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mfcntl.c:524:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |           if (result >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  525 |             have_dupfd_cloexec = -1;[0m
      | [0;1;32m                                    
[0m[1mfcntl.c:528:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  529 | # endif[0m
  530 |     result = rpl_fcntl_DUPFD (fd, target);[0m
      | [0;1;32m                                          
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 32/122][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp4f4d6i7m.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/binary-io.c
[ 33/122][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpadvtzahz.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/save-cwd.c
[1msave-cwd.c:66:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   67 |     cwd->desc = fd_safer_flag (cwd->desc, O_CLOEXEC);[0m
      | [0;1;32m                                                     
[0m[1msave-cwd.c:70:19: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   70 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:66:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   66 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:68:7: [0m[0;1;36mnote: [0mAssuming field 'desc' is < 0[0m
   68 |   if (cwd->desc < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1msave-cwd.c:68:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   68 |   if (cwd->desc < 0)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:70:19: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
   70 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:84:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |   if (0 <= cwd->desc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   85 |     return fchdir (cwd->desc);[0m
   86 |   else[0m
      | [0;32m  } 
[0m[1msave-cwd.c:86:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   87 |     return chdir_long (cwd->name);[0m
      | [0;1;32m                                  
[0m[1msave-cwd.c:93:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   if (cwd->desc >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   94 |     close (cwd->desc);[0m
      | [0;1;32m                      
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 34/122][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpsrqaac0u.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/c-stack.c
[1mc-stack.c:121:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |   if (! signo)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  122 |     _exit (exit_failure);[0m
      | [0;1;32m                         
[0m[1mc-stack.c:158:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |   if (!serious)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  159 |     return 0;[0m
      | [0;1;32m             
[0m16 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 35/122][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpweqhq8hs.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/localcharset.c
[1mlocalcharset.c:911:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |   if (codeset == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  912 |     /* The canonical name cannot be determined.  */[0m
  913 |     codeset = "";[0m
      | [0;1;32m                 
[0m[1mlocalcharset.c:1070:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |         if (codeset[0] == '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1071 |           codeset = "ASCII";[0m
      | [0;1;32m                            
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 36/122][3.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpbbo09bwf.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/fopen.c
[1mfopen.c:80:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   80 |             open_direction = O_RDONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   81 | #if GNULIB_FOPEN_GNU[0m
   82 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   83 |               *q++ = *p;[0m
   84 | #endif[0m
   85 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:82:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   83 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:87:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   87 |             open_direction = O_WRONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   88 |             open_flags |= O_CREAT | O_TRUNC;[0m
   89 | #if GNULIB_FOPEN_GNU[0m
   90 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   91 |               *q++ = *p;[0m
   92 | #endif[0m
   93 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:90:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   91 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:95:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |             open_direction = O_WRONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   96 |             open_flags |= O_CREAT | O_APPEND;[0m
   97 | #if GNULIB_FOPEN_GNU[0m
   98 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   99 |               *q++ = *p;[0m
  100 | #endif[0m
  101 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:98:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   99 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:106:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  106 |             open_flags |= O_BINARY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  107 | #if GNULIB_FOPEN_GNU[0m
  108 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
  109 |               *q++ = *p;[0m
  110 | #endif[0m
  111 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:108:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  109 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:113:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |             open_direction = O_RDWR;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  114 | #if GNULIB_FOPEN_GNU[0m
  115 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
  116 |               *q++ = *p;[0m
  117 | #endif[0m
  118 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:115:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  116 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:121:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  121 |             open_flags |= O_EXCL;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  122 |             open_flags_gnu = true;[0m
  123 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:125:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |             open_flags |= O_CLOEXEC;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  126 |             open_flags_gnu = true;[0m
  127 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:130:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  130 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfopen.c:137:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |           if (len > fdopen_mode_buf + BUF_SIZE - q)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  138 |             len = fdopen_mode_buf + BUF_SIZE - q;[0m
      | [0;1;32m                                                 
[0m[1mfopen.c:139:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  139 |           memcpy (q, p, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mfopen.c:139:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  139 |           memcpy (q, p, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mfopen.c:214:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |       if (fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  215 |         return NULL;[0m
      | [0;1;32m                    
[0m16 warnings generated.

[ 37/122][2.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpk5jem7fp.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/malloc/dynarray_emplace_enlarge.c
[1mmalloc/dynarray_emplace_enlarge.c:38:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |       if (element_size < 4)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   39 |         new_allocated = 16;[0m
   40 |       else if (element_size < 8)[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:40:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       else if (element_size < 8)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   41 |         new_allocated = 8;[0m
   42 |       else[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:42:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   43 |         new_allocated = 4;[0m
      | [0;1;32m                          
[0m[1mmalloc/dynarray_emplace_enlarge.c:59:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (INT_MULTIPLY_WRAPV (new_allocated, element_size, &new_size))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   60 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_emplace_enlarge.c:66:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:69:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   70 |     new_array = realloc (list->array, new_size);[0m
      | [0;1;32m                                                
[0m[1mmalloc/dynarray_emplace_enlarge.c:71:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   72 |     return false;[0m
      | [0;1;32m                 
[0m10 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 38/122][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp1mwtm0ld.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbsrtowcs.c
17 warnings generated.
Suppressed 17 warnings (17 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 39/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpmttki591.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/version-etc-fsf.c
[ 40/122][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp_hqa2vu4.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/stripslash.c
[1mstripslash.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |     base = file;[0m
      | [0;1;32m                
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 41/122][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp4vl2man1.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/ioctl.c
[ 42/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpe8pou10o.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/strnlen1.c
[1mstrnlen1.c:31:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (end != NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   32 |     return end - string + 1;[0m
   33 |   else[0m
      | [0;32m  } 
[0m[1mstrnlen1.c:33:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   34 |     return maxlen;[0m
      | [0;1;32m                  
[0m2 warnings generated.

[ 43/122][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmphr47sg2i.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/strerror_r.c
[1mstrerror_r.c:130:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:130:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:144:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |       if (buflen)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  145 |         *buf = '\0';[0m
      | [0;1;32m                    
[0m[1mstrerror_r.c:154:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |     if (msg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  155 |       return safe_copy (buf, buflen, msg);[0m
      | [0;1;32m                                          
[0m[1mstrerror_r.c:165:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'ret' is never read [clang-analyzer-deadcode.DeadStores][0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:165:7: [0m[0;1;36mnote: [0mValue stored to 'ret' is never read[0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:447:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  447 |         snprintf (buf, buflen, "Unknown error %d", errnum);[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mstrerror_r.c:447:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  447 |         snprintf (buf, buflen, "Unknown error %d", errnum);[0m
      | [0;1;32m        ^~~~~~~~
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 44/122][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpqws3qgep.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/imaxtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 45/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpbn0pazdu.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/uinttostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 46/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmptsm72nv6.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/malloca.c
[1mmalloca.c:63:37: [0m[0;1;35mwarning: [0m[1mThe left operand of '&' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m[1mmalloca.c:53:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m1 is not equal to 0[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m9223372036854775807 is < -1[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^~~~~~~~~~~
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m'?' condition is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:8: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   33 |        < (n)))[0m
      | [0;1;32m       ~~~~~
[0m[1mmalloca.c:53:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m  ^
[0m[1mmalloca.c:57:11: [0m[0;1;36mnote: [0mAssuming 'mem' is not equal to NULL[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mmalloca.c:57:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:59:44: [0m[0;1;36mnote: [0m'umemplus' declared without an initial value[0m
   59 |           uintptr_t umem = (uintptr_t)mem, umemplus;[0m
      | [0;1;32m                                           ^~~~~~~~
[0m[1mmalloca.c:62:11: [0m[0;1;36mnote: [0mAssuming overflow[0m
   62 |           ckd_add (&umemplus, umem, sizeof (small_t) + sa_alignment_max - 1);[0m
      | [0;1;32m          ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/stdckdint.h:37:26: [0m[0;1;36mnote: [0mexpanded from macro 'ckd_add'[0m
   37 | #define ckd_add(R, A, B) __builtin_add_overflow((A), (B), (R))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:63:37: [0m[0;1;36mnote: [0mThe left operand of '&' is a garbage value[0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 47/122][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpun9g07fq.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/filenamecat-lgpl.c
[1mfilenamecat-lgpl.c:58:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (! ISSLASH (dir[dirlen - 1]) && ! ISSLASH (*base))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   59 |         sep = '/';[0m
      | [0;1;32m                  
[0m[1mfilenamecat-lgpl.c:72:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (p_concat == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   73 |     return NULL;[0m
      | [0;1;32m                
[0m[1mfilenamecat-lgpl.c:82:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |     if (base_in_result)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   83 |       *base_in_result = p;[0m
      | [0;1;32m                          
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 48/122][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpi3o_j3n6.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/time.c
[1mtime.c:33:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (gettimeofday (&tv, NULL) < 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   34 |     abort ();[0m
      | [0;1;32m             
[0m[1mtime.c:37:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |   if (tp)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   38 |     *tp = tt;[0m
      | [0;1;32m             
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 49/122][5.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp8rpa12b2.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/xmalloc.c
[1mxmalloc.c:35:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:67:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (!r && (!p || s))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   68 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:85:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (!r && (!p || (n && s)))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   86 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:199:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |       if (ckd_add (&n, n, (n >> 1) + 1))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  200 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mxmalloc.c:240:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |   if (ckd_add (&n, n0, n0 >> 1))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  241 |     n = IDX_MAX;[0m
      | [0;1;32m                
[0m[1mxmalloc.c:242:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |   if (0 <= n_max && n_max < n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  243 |     n = n_max;[0m
      | [0;1;32m              
[0m[1mxmalloc.c:264:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |   if (! pa)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  265 |     *pn = 0;[0m
      | [0;1;32m            
[0m[1mxmalloc.c:269:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |           || ckd_mul (&nbytes, n, s)))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  270 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:314:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  314 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:314:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  314 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:320:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  320 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:320:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  320 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:331:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  331 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:331:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  331 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m16 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 50/122][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpo8btx0u_.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/dup-safer-flag.c
[ 51/122][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpmo1oudsk.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/stat-time.c
[ 52/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpzg556k0v.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbsrtowcs-state.c
[ 53/122][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpamq9a4se.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/unistr/u8-uctomb-aux.c
[1munistr/u8-uctomb-aux.c:30:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   30 |   if (uc < 0x80)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   31 |     /* The case n >= 1 is already handled by the caller.  */[0m
   32 |     return -2;[0m
   33 |   else if (uc < 0x800)[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:33:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else if (uc < 0x800)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   34 |     count = 2;[0m
   35 |   else if (uc < 0x10000)[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:37:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |       if (uc < 0xd800 || uc >= 0xe000)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   38 |         count = 3;[0m
   39 |       else[0m
      | [0;32m      } 
[0m[1munistr/u8-uctomb-aux.c:39:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   40 |         return -1;[0m
      | [0;1;32m                  
[0m[1munistr/u8-uctomb-aux.c:42:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   else if (uc < 0x110000)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   43 |     count = 4;[0m
   44 |   else[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:44:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   45 |     return -1;[0m
      | [0;1;32m              
[0m[1munistr/u8-uctomb-aux.c:47:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   if (n < count)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   48 |     return -2;[0m
      | [0;1;32m              
[0m[1munistr/u8-uctomb-aux.c:52:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   52 |     case 4: s[3] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0x10000;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   53 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1munistr/u8-uctomb-aux.c:54:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |     case 3: s[2] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0x800;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   55 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1munistr/u8-uctomb-aux.c:56:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   56 |     case 2: s[1] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0xc0;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   57 |   /*case 1:*/ s[0] = uc;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m13 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 54/122][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp1gbmvna7.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/version-etc.c
[1mversion-etc.c:66:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (command_name)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
   68 |   else[0m
      | [0;32m  } 
[0m[1mversion-etc.c:67:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:67:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:68:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m                                                  
[0m[1mversion-etc.c:69:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:69:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:83:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   83 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:83:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   83 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:88:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:88:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   88 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:102:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  102 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mversion-etc.c:105:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:105:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:105:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  106 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:109:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:109:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:109:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  110 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:113:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:113:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:113:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  114 |                authors[0], authors[1], authors[2]);[0m
  115 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:120:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:120:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:120:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  121 |                authors[0], authors[1], authors[2], authors[3]);[0m
  122 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:127:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:127:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:127:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  128 |                authors[0], authors[1], authors[2], authors[3], authors[4]);[0m
  129 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:134:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:134:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:134:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  135 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  136 |                authors[5]);[0m
  137 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:142:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:142:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:142:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  143 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  144 |                authors[5], authors[6]);[0m
  145 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:150:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:150:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:150:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  151 | Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"),[0m
  152 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  153 |                 authors[5], authors[6], authors[7]);[0m
  154 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:159:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:159:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:159:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  160 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"),[0m
  161 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  162 |                authors[5], authors[6], authors[7], authors[8]);[0m
  163 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:170:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:170:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:170:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  171 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"),[0m
  172 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  173 |                 authors[5], authors[6], authors[7], authors[8]);[0m
  174 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:189:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   for (n_authors = 0; authors[n_authors]; n_authors++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  190 |     ;[0m
      | [0;1;32m     
[0m[1mversion-etc.c:209:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |        n_authors++)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  210 |     ;[0m
      | [0;1;32m     
[0m43 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 55/122][3.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp9ohg73k3.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/argmatch.c
[1margmatch.c:95:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |           if (strlen (arglist[i]) == arglen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   96 |             /* Exact match found.  */[0m
   97 |             return i;[0m
   98 |           else if (matchind == -1)[0m
      | [0;32m          } 
[0m[1margmatch.c:98:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |           else if (matchind == -1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   99 |             /* First nonexact match found.  */[0m
  100 |             matchind = i;[0m
  101 |           else[0m
      | [0;32m          } 
[0m[1margmatch.c:115:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |   if (ambiguous)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  116 |     return -2;[0m
  117 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:117:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  118 |     return matchind;[0m
      | [0;1;32m                    
[0m[1margmatch.c:129:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |       if (!strcmp (arglist[i], arg))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  130 |         return i;[0m
      | [0;1;32m                 
[0m[1margmatch.c:166:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  167 |     if ((i == 0)[0m
  168 |         || memcmp (last_val, (char const *) vallist + valsize * i, valsize))[0m
  169 |       {[0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
  171 |         last_val = (char const *) vallist + valsize * i;[0m
  172 |       }[0m
  173 |     else[0m
  174 |       {[0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
  176 |       }[0m
      | [0;1;32m       
[0m[1margmatch.c:170:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:170:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:175:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:175:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:195:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (allow_abbreviation)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  196 |     res = argmatch (arg, arglist, vallist, valsize);[0m
  197 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:197:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  198 |     res = argmatch_exact (arg, arglist);[0m
      | [0;1;32m                                        
[0m[1margmatch.c:200:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |   if (res >= 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  201 |     /* Success. */[0m
  202 |     return res;[0m
      | [0;1;32m               
[0m[1margmatch.c:221:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  222 |     if (!memcmp (value, (char const *) vallist + valsize * i, valsize))[0m
  223 |       return arglist[i];[0m
      | [0;1;32m                        
[0m[1margmatch.c:222:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |     if (!memcmp (value, (char const *) vallist + valsize * i, valsize))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  223 |       return arglist[i];[0m
      | [0;1;32m                        
[0m27 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 56/122][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpugmi5tw2.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/malloc/dynarray_finalize.c
[1mmalloc/dynarray_finalize.c:32:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (__dynarray_error (list))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   33 |     /* The caller will reported the deferred error.  */[0m
   34 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_finalize.c:43:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   44 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:54:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |       if (list->array != NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m                                                          
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:56:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   57 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:62:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   63 |     /* The caller will perform the freeing operation.  */[0m
   64 |     return false;[0m
      | [0;1;32m                 
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 57/122][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmptwy5x5ak.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/c-ctype.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 58/122][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp53gh1zal.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbrtowc.c
[1mmbrtowc.c:97:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (! pwc)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   98 |     pwc = &wc;[0m
      | [0;1;32m              
[0m1 warning generated.

[ 59/122][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp7uh_oxap.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbuiter.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 60/122][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpyrrpy89z.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/dup-safer.c
[ 61/122][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpbyg6j60p.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/fd-safer.c
[ 62/122][2.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp09uu3af1.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/btowc.c
[1mbtowc.c:38:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   38 |       memset (&state, 0, sizeof (mbstate_t));[0m
      | [0;1;32m      ^~~~~~
[0m[1mbtowc.c:38:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   38 |       memset (&state, 0, sizeof (mbstate_t));[0m
      | [0;1;32m      ^~~~~~
[0m[1mbtowc.c:40:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (!(ret == (size_t)(-1) || ret == (size_t)(-2)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m   41 | #else[0m
   42 |       if (mbtowc (&wc, buf, 1) >= 0)[0m
   43 | #endif[0m
   44 |         return wc;[0m
      | [0;1;32m                  
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 63/122][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp4zzuckwg.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/wctype-h.c
[ 64/122][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpk1ogi2hk.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/dirname-lgpl.c
[1mdirname-lgpl.c:49:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |        prefix_length < length; length--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   50 |     if (! ISSLASH (file[length - 1]))[0m
   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:50:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |     if (! ISSLASH (file[length - 1]))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:79:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   if (!dir)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   80 |     return NULL;[0m
      | [0;1;32m                
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:82:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   if (append_dot)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   83 |     dir[length++] = '.';[0m
      | [0;1;32m                        
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 65/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpnjt8u58o.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/creat-safer.c
[ 66/122][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp_unhiswq.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/unistd.c
[ 67/122][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpb1xvaorq.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/localename-table.c
[ 68/122][4.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpzlx6629q.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/obstack.c
[1mobstack.c:85:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (h->use_extra_arg)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   86 |     return h->chunkfun.extra (h->extra_arg, size);[0m
   87 |   else[0m
      | [0;32m  } 
[0m[1mobstack.c:87:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   88 |     return h->chunkfun.plain (size);[0m
      | [0;1;32m                                    
[0m[1mobstack.c:94:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |   if (h->use_extra_arg)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   95 |     h->freefun.extra (h->extra_arg, old_chunk);[0m
   96 |   else[0m
      | [0;32m  } 
[0m[1mobstack.c:96:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   97 |     h->freefun.plain (old_chunk);[0m
      | [0;1;32m                                 
[0m[1mobstack.c:113:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |   if (alignment == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  114 |     alignment = DEFAULT_ALIGNMENT;[0m
      | [0;1;32m                                  
[0m[1mobstack.c:136:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |   if (!chunk)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  137 |     (*obstack_alloc_failed_handler) ();[0m
      | [0;1;32m                                       
[0m[1mobstack.c:192:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |   if (new_size < sum2)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  193 |     new_size = sum2;[0m
      | [0;1;32m                    
[0m[1mobstack.c:194:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |   if (new_size < h->chunk_size)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  195 |     new_size = h->chunk_size;[0m
      | [0;1;32m                             
[0m[1mobstack.c:198:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |   if (obj_size <= sum1 && sum1 <= sum2)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  199 |     new_chunk = call_chunkfun (h, new_size);[0m
      | [0;1;32m                                            
[0m[1mobstack.c:200:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |   if (!new_chunk)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  201 |     (*obstack_alloc_failed_handler)();[0m
      | [0;1;32m                                      
[0m[1mobstack.c:211:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  211 |   memcpy (object_base, h->object_base, obj_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mobstack.c:211:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  211 |   memcpy (object_base, h->object_base, obj_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mobstack.c:285:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |   else if (obj != 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  286 |     /* obj is not in any of the chunks! */[0m
  287 |     abort ();[0m
      | [0;1;32m             
[0m[1mobstack.c:339:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  339 |   fprintf (stderr, "%s\n", _("memory exhausted"));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mobstack.c:339:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  339 |   fprintf (stderr, "%s\n", _("memory exhausted"));[0m
      | [0;1;32m  ^~~~~~~
[0m27 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 69/122][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpahc9_8a5.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/glthread/thread.c
[1mglthread/thread.c:213:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |   if (ret != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  214 |     abort ();[0m
      | [0;1;32m             
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 70/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp2aw58vh0.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/getprogname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 71/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpbl9u8rr3.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/glthread/threadlib.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 72/122][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpraz1udhj.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/basename-lgpl.c
[1mbasename-lgpl.c:35:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   36 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:40:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   41 |         last_was_slash = true;[0m
   42 |       else if (last_was_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:58:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   59 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:62:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   63 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:66:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   67 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m5 warnings generated.

[ 73/122][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpne4wb3rl.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/hash-pjw.c
[1mhash-pjw.c:36:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   for (s = x; *s; s++)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   37 |     h = *s + ((h << 9) | (h >> (SIZE_BITS - 9)));[0m
      | [0;1;32m                                                 
[0m1 warning generated.

[ 74/122][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp413ra0aj.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/xstrtoul.c
28 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 75/122][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp6_javh6s.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/sys_socket.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 76/122][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmphba_3wty.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/fd-hook.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 77/122][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpgwepvha1.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/strtoull.c
17 warnings generated.
Suppressed 17 warnings (17 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 78/122][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp0cffs4ju.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/malloc/dynarray_at_failure.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 79/122][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpb82ftpon.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/bitrotate.c
[ 80/122][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpxurxikmt.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/unistr/u8-uctomb.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 81/122][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpjd8z6qq7.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/inttostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 82/122][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpyo3_aseh.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/asnprintf.c
[ 83/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp430rmm0t.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/umaxtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 84/122][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpz5ppvp2f.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/malloc/dynarray_resize_clear.c
[1mmalloc/dynarray_resize_clear.c:31:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (!__libc_dynarray_resize (list, size, scratch, element_size))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   32 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m2 warnings generated.

[ 85/122][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp7z2231ws.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/open-safer.c
[ 86/122][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpsr7roj4m.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/hard-locale.c
[1mhard-locale.c:32:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (setlocale_null_r (category, locale, sizeof (locale)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   33 |     return false;[0m
      | [0;1;32m                 
[0m[1mhard-locale.c:35:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!(strcmp (locale, "C") == 0 || strcmp (locale, "POSIX") == 0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m   36 |     return true;[0m
      | [0;1;32m                
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 87/122][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmphs5l9q7s.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/opendirat.c
[1mopendirat.c:42:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   43 |     return NULL;[0m
      | [0;1;32m                
[0m[1mopendirat.c:45:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |   if (dirp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   46 |     *pnew_fd = new_fd;[0m
   47 |   else[0m
      | [0;32m  } 
[0m2 warnings generated.

[ 88/122][2.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp0cerr_dp.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/xstrtoimax.c
28 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 89/122][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpt4nrj85d.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/setlocale_null.c
[1msetlocale_null.c:145:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (bufsize > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  146 |         /* Return an empty string in BUF.[0m
  147 |            This is a convenience for callers that don't want to write explicit[0m
  148 |            code for handling EINVAL.  */[0m
  149 |         buf[0] = '\0';[0m
      | [0;1;32m                      
[0m[1msetlocale_null.c:157:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:157:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 90/122][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpsjdz26t7.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/cycle-check.c
[1mcycle-check.c:64:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |   if (state->chdir_counter && SAME_INODE (*sb, state->dev_ino))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m   65 |     return true;[0m
      | [0;1;32m                
[0m[1mcycle-check.c:76:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |       if (state->chdir_counter == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   77 |         return true;[0m
      | [0;1;32m                    
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 91/122][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpg_symzmc.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/glthread/lock.c
[1mglthread/lock.c:269:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  270 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:277:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |   if (err == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  278 |     err = pthread_rwlock_init(lock, &attributes);[0m
      | [0;1;32m                                                 
[0m[1mglthread/lock.c:539:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  540 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:554:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  555 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:717:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  718 |     return 0;[0m
      | [0;1;32m             
[0m[1mglthread/lock.c:732:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |       if (glthread_once_singlethreaded (once_control))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  733 |         init_function ();[0m
      | [0;1;32m                         
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 92/122][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp88wqky_5.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/colorize.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 93/122][6.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp92a2dfpx.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/localename.c
[1mlocalename.c:2650:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2650 |   for (; *s; s++)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2651 |     h = *s + ((h << 9) | (h >> (SIZE_BITS - 9)));[0m
      | [0;1;32m                                                 
[0m[1mlocalename.c:2684:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2684 |   for (p = struniq_hash_table[slot]; p != NULL; p = p->next)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2685 |     if (strcmp (p->contents, string) == 0)[0m
 2686 |       return p->contents;[0m
      | [0;1;32m                         
[0m[1mlocalename.c:2685:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2685 |     if (strcmp (p->contents, string) == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2686 |       return p->contents;[0m
      | [0;1;32m                         
[0m[1mlocalename.c:2691:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2691 |   if (new_node == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2692 |     /* Out of memory.  Return a statically allocated string.  */[0m
 2693 |     return "C";[0m
      | [0;1;32m               
[0m[1mlocalename.c:2694:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2694 |   memcpy (new_node->contents, string, size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mlocalename.c:2694:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2694 |   memcpy (new_node->contents, string, size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mlocalename.c:2698:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2698 |     if (mt) gl_lock_lock (struniq_lock);[0m
      | [0;1;32m           ^                            
[0m      | [0;32m            {
[0m[1mlocalename.c:2701:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2701 |     for (p = struniq_hash_table[slot]; p != NULL; p = p->next)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2702 |       if (strcmp (p->contents, string) == 0)[0m
 2703 |         {[0m
 2704 |           free (new_node);[0m
 2705 |           new_node = p;[0m
 2706 |           goto done;[0m
 2707 |         }[0m
      | [0;1;32m         
[0m[1mlocalename.c:2714:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2714 |     if (mt) gl_lock_unlock (struniq_lock);[0m
      | [0;1;32m           ^                              
[0m      | [0;32m            {
[0m[1mlocalename.c:3119:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3119 |         if (name[0] == '\0')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3120 |           /* Fallback code for glibc < 2.4, which did not implement[0m
 3121 |              nl_langinfo (_NL_LOCALE_NAME (category)).  */[0m
 3122 |           name = thread_locale->__names[category];[0m
      | [0;1;32m                                                  
[0m[1mlocalename.c:3287:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3287 |   if (name != NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3288 |     return struniq (name);[0m
      | [0;1;32m                          
[0m[1mlocalename.c:3378:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3378 |   if (retval != NULL && retval[0] != '\0')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3379 |     return retval;[0m
      | [0;1;32m                  
[0m[1mlocalename.c:3382:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3382 |   if (retval != NULL && retval[0] != '\0')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3383 |     return retval;[0m
      | [0;1;32m                  
[0m[1mlocalename.c:3513:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3513 |   if (retval != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3514 |     return retval;[0m
      | [0;1;32m                  
[0m[1mlocalename.c:3517:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3517 |   if (retval != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3518 |     return retval;[0m
      | [0;1;32m                  
[0m16 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 94/122][12.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpsxik7eym.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/striconv.c
[1mstriconv.c:78:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |             if (errno == E2BIG)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   79 |               ;[0m
   80 |             else if (errno == EINVAL)[0m
      | [0;32m            } 
[0m[1mstriconv.c:80:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |             else if (errno == EINVAL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   81 |               break;[0m
   82 |             else[0m
      | [0;32m            } 
[0m[1mstriconv.c:82:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   83 |               return -1;[0m
      | [0;1;32m                        
[0m[1mstriconv.c:107:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |       if (res == (size_t)(-1))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  108 |         return -1;[0m
      | [0;1;32m                  
[0m[1mstriconv.c:121:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |   if (*resultp != NULL && *lengthp >= length)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  122 |     result = *resultp;[0m
  123 |   else[0m
      | [0;32m  } 
[0m[1mstriconv.c:156:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |             if (errno == EINVAL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  157 |               break;[0m
  158 |             else[0m
      | [0;32m            } 
[0m[1mstriconv.c:158:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  159 |               goto fail;[0m
      | [0;1;32m                        
[0m[1mstriconv.c:180:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |       if (res == (size_t)(-1))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  181 |         goto fail;[0m
      | [0;1;32m                  
[0m[1mstriconv.c:184:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |     if (outsize != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  185 |       abort ();[0m
      | [0;1;32m               
[0m[1mstriconv.c:195:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |     if (result != *resultp)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  196 |       free (result);[0m
      | [0;1;32m                    
[0m[1mstriconv.c:260:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |     if (result_size <= approx_sqrt_SIZE_MAX / MB_LEN_MAX)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  261 |       result_size *= MB_LEN_MAX;[0m
      | [0;1;32m                                
[0m[1mstriconv.c:295:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |             if (errno == EINVAL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  296 |               break;[0m
  297 |             else if (errno == E2BIG)[0m
      | [0;32m            } 
[0m[1mstriconv.c:319:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  320 |               goto failed;[0m
      | [0;1;32m                          
[0m[1mstriconv.c:322:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  323 |           break;[0m
      | [0;1;32m                
[0m[1mstriconv.c:358:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  359 |               goto failed;[0m
      | [0;1;32m                          
[0m[1mstriconv.c:361:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  362 |           break;[0m
      | [0;1;32m                
[0m[1mstriconv.c:377:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |       if (smaller_result != NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  378 |         result = smaller_result;[0m
      | [0;1;32m                                
[0m[1mstriconv.c:399:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |       if (result == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  400 |         errno = ENOMEM;[0m
      | [0;1;32m                       
[0m[1mstriconv.c:420:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |       if (cd == (iconv_t) -1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  421 |         return NULL;[0m
      | [0;1;32m                    
[0m21 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 95/122][2.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpyjg_uxz7.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/memchr2.c
[1mmemchr2.c:57:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |   if (c1 == c2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   58 |     return memchr (s, c1, n);[0m
      | [0;1;32m                             
[0m[1mmemchr2.c:67:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |       if (*char_ptr == c1 || *char_ptr == c2)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   68 |         return (void *) void_ptr;[0m
      | [0;1;32m                                 
[0m[1mmemchr2.c:147:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |            & (repeated_one << 7)) != 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  148 |         break;[0m
      | [0;1;32m              
[0m[1mmemchr2.c:164:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |       if (*char_ptr == c1 || *char_ptr == c2)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  165 |         return (void *) char_ptr;[0m
      | [0;1;32m                                 
[0m4 warnings generated.

[ 96/122][3.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp8gmdl9ld.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/uniwidth/width.c
[1muniwidth/width.c:64:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       if (ind >= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   65 |         if ((nonspacing_table_data[64*ind + ((uc >> 3) & 63)] >> (uc & 7)) & 1)[0m
   66 |           {[0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
   68 |               return -1;[0m
   69 |             else[0m
   70 |               return 0;[0m
   71 |           }[0m
      | [0;1;32m           
[0m[1muniwidth/width.c:67:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   68 |               return -1;[0m
   69 |             else[0m
      | [0;32m            } 
[0m[1muniwidth/width.c:69:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   70 |               return 0;[0m
      | [0;1;32m                       
[0m[1muniwidth/width.c:77:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |           if (uc <= 0xe01ef)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   78 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:82:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |           if (uc >= 0xe0020 ? uc <= 0xe007f : uc == 0xe0001)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m   83 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:87:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   if (bitmap_lookup (&u_width2, uc))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   88 |     return 2;[0m
      | [0;1;32m             
[0m[1muniwidth/width.c:92:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |       && is_cjk_encoding (encoding))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   93 |     return 2;[0m
      | [0;1;32m             
[0m35 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 97/122][5.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp8w1ise1d.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbslen.c
[1mmbslen.c:37:12: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m           ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbslen.c:37:12: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m           ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbslen.c:37:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m   38 |         count++;[0m
      | [0;1;32m                
[0m[1mmbslen.c:42:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   43 |     return strlen (string);[0m
      | [0;1;32m                           
[0m15 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 98/122][6.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpbpqj6a6e.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/src/searchutils.c
[1msearchutils.c:39:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   for (int i = 0; i < NCHAR; i++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   40 |     sbwordchar[i] = wordchar (localeinfo.sbctowc[i]);[0m
      | [0;1;32m                                                     
[0m[1msearchutils.c:54:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |       for (int i = 0; i < NCHAR; i++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   55 |         trans[i] = toupper (i);[0m
      | [0;1;32m                               
[0m[1msearchutils.c:97:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (cur <= p)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   98 |     return cur - p;[0m
      | [0;1;32m                   
[0m[1msearchutils.c:106:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |       if ((*cur & 0xc0) == 0x80)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m[1msearchutils.c:107:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |         for (int i = 1; i <= 3; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m[1msearchutils.c:144:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  144 |               memset (&mbs, 0, sizeof mbs);[0m
      | [0;1;32m              ^~~~~~
[0m[1msearchutils.c:144:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  144 |               memset (&mbs, 0, sizeof mbs);[0m
      | [0;1;32m              ^~~~~~
[0m[1msearchutils.c:151:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |       if (mbclen)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  152 |         *mbclen = clen;[0m
      | [0;1;32m                       
[0m[1msearchutils.c:170:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |       if (sbwordchar[b])[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  171 |         n++;[0m
  172 |       else if (localeinfo.sbclen[b] != -2)[0m
      | [0;32m      } 
[0m[1msearchutils.c:172:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |       else if (localeinfo.sbclen[b] != -2)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  173 |         break;[0m
  174 |       else[0m
      | [0;32m      } 
[0m[1msearchutils.c:178:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  178 |           if (!wordchar (wc))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  179 |             break;[0m
      | [0;1;32m                  
[0m[1msearchutils.c:182:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |       if (!countall)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  183 |         break;[0m
      | [0;1;32m              
[0m[1msearchutils.c:211:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |   if (buf == cur)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  212 |     return 0;[0m
      | [0;1;32m             
[0m[1msearchutils.c:214:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   if (! localeinfo.multibyte || localeinfo.using_utf8 & ~(b >> 7))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  215 |     return sbwordchar[b];[0m
      | [0;1;32m                         
[0m28 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 99/122][11.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmplt0lsbkt.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbscasecmp.c
[1mmbscasecmp.c:39:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (s1 == s2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   40 |     return 0;[0m
      | [0;1;32m             
[0m[1mmbscasecmp.c:50:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   50 |       mbui_init (iter1, s1);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasecmp.c:50:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   50 |       mbui_init (iter1, s1);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   51 |       mbui_init (iter2, s2);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasecmp.c:51:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   51 |       mbui_init (iter2, s2);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasecmp.c:57:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |           if (cmp != 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   58 |             return cmp;[0m
      | [0;1;32m                       
[0m[1mmbscasecmp.c:63:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |       if (mbui_avail (iter1))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   64 |         /* s2 terminated before s1.  */[0m
   65 |         return 1;[0m
      | [0;1;32m                 
[0m[1mmbscasecmp.c:66:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (mbui_avail (iter2))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   67 |         /* s1 terminated before s2.  */[0m
   68 |         return -1;[0m
      | [0;1;32m                  
[0m[1mmbscasecmp.c:82:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |           if (c1 == '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   83 |             break;[0m
      | [0;1;32m                  
[0m[1mmbscasecmp.c:90:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |       if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   91 |         return c1 - c2;[0m
   92 |       else[0m
      | [0;32m      } 
[0m[1mmbscasecmp.c:92:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   93 |         /* On machines where 'char' and 'int' are types of the same size, the[0m
   94 |            difference of two 'unsigned char' values - including the sign bit -[0m
   95 |            doesn't fit in an 'int'.  */[0m
   96 |         return _GL_CMP (c1, c2);[0m
      | [0;1;32m                                
[0m21 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[100/122][13.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpbublzsky.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/xstrtol.c
[1mxstrtol.c:69:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |   while (power--)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   70 |     err |= bkm_scale (x, base);[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:95:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |       while (isspace (ch))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   96 |         ch = *++q;[0m
      | [0;1;32m                  
[0m[1mxstrtol.c:97:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |       if (ch == '-')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   98 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:107:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |       if (valid_suffixes && **p && strchr (valid_suffixes, **p))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  108 |         tmp = 1;[0m
  109 |       else[0m
      | [0;32m      } 
[0m[1mxstrtol.c:109:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  110 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:114:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       if (errno != ERANGE)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  115 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:152:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |           if (strchr (valid_suffixes, '0'))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  153 |             switch (p[0][1])[0m
  154 |               {[0m
  155 |               case 'i':[0m
  156 |                 if (p[0][2] == 'B')[0m
  157 |                   suffixes += 2;[0m
  158 |                 break;[0m
  159 | [0m
  160 |               case 'B':[0m
  161 |               case 'D': /* 'D' is obsolescent */[0m
  162 |                 base = 1000;[0m
  163 |                 suffixes++;[0m
  164 |                 break;[0m
  165 |               }[0m
      | [0;1;32m               
[0m[1mxstrtol.c:156:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |                 if (p[0][2] == 'B')[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  157 |                   suffixes += 2;[0m
  158 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mxstrtol.c:156:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |                 if (p[0][2] == 'B')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  157 |                   suffixes += 2;[0m
      | [0;1;32m                                
[0m[1mxstrtol.c:163:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  163 |                 suffixes++;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  164 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mxstrtol.c:171:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |           overflow = bkm_scale (&tmp, 512);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  172 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:178:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  178 |           overflow = bkm_scale (&tmp, 1024);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  179 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:182:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  182 |           overflow = LONGINT_OK;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  183 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:186:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  186 |           overflow = bkm_scale_by_power (&tmp, base, 6);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  187 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:192:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  192 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:197:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  197 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:202:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  202 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:205:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  205 |           overflow = bkm_scale_by_power (&tmp, base, 5);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  206 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:209:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  209 |           overflow = bkm_scale_by_power (&tmp, base, 10);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  210 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:213:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  213 |           overflow = bkm_scale_by_power (&tmp, base, 9);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  214 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:219:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  219 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:222:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  222 |           overflow = bkm_scale (&tmp, 2);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  223 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:226:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  226 |           overflow = bkm_scale_by_power (&tmp, base, 8);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  227 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:230:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  230 |           overflow = bkm_scale_by_power (&tmp, base, 7);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  231 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:234:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  234 |           *val = tmp;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  235 |           return err | LONGINT_INVALID_SUFFIX_CHAR;[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1mxstrtol.c:240:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |       if (**p)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  241 |         err |= LONGINT_INVALID_SUFFIX_CHAR;[0m
      | [0;1;32m                                           
[0m28 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[101/122][20.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpjryvdhk5.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/c-strncasecmp.c
[1mc-strncasecmp.c:33:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2 || n == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strncasecmp.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (--n == 0 || c1 == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strncasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strncasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[102/122][20.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpypddhon8.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/localeinfo.c
[1mlocaleinfo.c:68:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   if (!native_c_charset || multibyte)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   69 |     return false;[0m
      | [0;1;32m                 
[0m[1mlocaleinfo.c:77:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |   for (int i = 0; i < UCHAR_MAX; i++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   78 |     if (0 <= strcoll (((char []) {i, 0}), ((char []) {i + 1, 0})))[0m
   79 |       return false;[0m
      | [0;1;32m                   
[0m[1mlocaleinfo.c:78:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |     if (0 <= strcoll (((char []) {i, 0}), ((char []) {i + 1, 0})))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   79 |       return false;[0m
      | [0;1;32m                   
[0m[1mlocaleinfo.c:138:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |   if (uc != c)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  139 |     folded[n++] = uc;[0m
      | [0;1;32m                     
[0m[1mlocaleinfo.c:140:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  140 |   if (lc != uc && lc != c && towupper (lc) == uc)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  141 |     folded[n++] = lc;[0m
      | [0;1;32m                     
[0m[1mlocaleinfo.c:145:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (li != lc && li != uc && li != c && towupper (li) == uc)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  146 |         folded[n++] = li;[0m
      | [0;1;32m                         
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[103/122][19.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp9un_tbcp.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/trim.c
[1mtrim.c:40:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |   if (!d)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   41 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mtrim.c:50:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   50 |           mbi_init (i, d, strlen (d));[0m
      | [0;1;32m          ^
[0m[1m./mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mtrim.c:50:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   50 |           mbi_init (i, d, strlen (d));[0m
      | [0;1;32m          ^
[0m[1m./mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mtrim.c:52:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |           for (; mbi_avail (i) && mb_isspace (mbi_cur (i)); mbi_advance (i))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m   53 |             ;[0m
      | [0;1;32m             
[0m[1mtrim.c:55:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   55 |           memmove (d, mbi_cur_ptr (i), strlen (mbi_cur_ptr (i)) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtrim.c:55:11: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
   55 |           memmove (d, mbi_cur_ptr (i), strlen (mbi_cur_ptr (i)) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtrim.c:63:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   63 |           mbi_init (i, d, strlen (d));[0m
      | [0;1;32m          ^
[0m[1m./mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mtrim.c:63:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   63 |           mbi_init (i, d, strlen (d));[0m
      | [0;1;32m          ^
[0m[1m./mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mtrim.c:65:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |           for (; mbi_avail (i); mbi_advance (i))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   66 |             if (mb_isspace (mbi_cur (i)))[0m
   67 |               {[0m
   68 |                 if (start_of_spaces == NULL)[0m
   69 |                   start_of_spaces = (char *) mbi_cur_ptr (i);[0m
   70 |               }[0m
   71 |             else[0m
   72 |               start_of_spaces = NULL;[0m
      | [0;1;32m                                     
[0m[1mtrim.c:68:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |                 if (start_of_spaces == NULL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   69 |                   start_of_spaces = (char *) mbi_cur_ptr (i);[0m
      | [0;1;32m                                                             
[0m[1mtrim.c:71:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   72 |               start_of_spaces = NULL;[0m
      | [0;1;32m                                     
[0m[1mtrim.c:74:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |           if (start_of_spaces != NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   75 |             *start_of_spaces = '\0';[0m
      | [0;1;32m                                    
[0m[1mtrim.c:85:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |           for (p = d; *p && isspace ((unsigned char) *p); p++)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m   86 |             ;[0m
      | [0;1;32m             
[0m[1mtrim.c:88:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |           memmove (d, p, strlen (p) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtrim.c:88:11: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
   88 |           memmove (d, p, strlen (p) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtrim.c:95:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |                p >= d && isspace ((unsigned char) *p); p--)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   96 |             *p = '\0';[0m
      | [0;1;32m                      
[0m24 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[104/122][15.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp74qek1sk.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/c-strcasecmp.c
[1mc-strcasecmp.c:33:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strcasecmp.c:41:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (c1 == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strcasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strcasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[105/122][25.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp_rxp8vdv.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/printf-args.c
[1mprintf-args.c:44:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:48:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   48 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   49 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:51:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   52 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:54:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   55 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:57:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   58 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:60:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   61 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:66:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:69:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   70 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:72:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   73 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:75:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   75 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   76 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:79:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   79 |         ap->a.a_int8_t = va_arg (args, /* int8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   80 |         #else[0m
   81 |         ap->a.a_int8_t = va_arg (args, int8_t);[0m
   82 |         #endif[0m
   83 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:86:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   86 |         ap->a.a_uint8_t = va_arg (args, /* uint8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   87 |         #else[0m
   88 |         ap->a.a_uint8_t = va_arg (args, uint8_t);[0m
   89 |         #endif[0m
   90 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:93:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   93 |         ap->a.a_int16_t = va_arg (args, /* int16_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   94 |         #else[0m
   95 |         ap->a.a_int16_t = va_arg (args, int16_t);[0m
   96 |         #endif[0m
   97 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:100:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  100 |         ap->a.a_uint16_t = va_arg (args, /* uint16_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  101 |         #else[0m
  102 |         ap->a.a_uint16_t = va_arg (args, uint16_t);[0m
  103 |         #endif[0m
  104 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:109:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |         ap->a.a_int32_t = va_arg (args, int32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  110 |         #endif[0m
  111 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:116:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  116 |         ap->a.a_uint32_t = va_arg (args, uint32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  117 |         #endif[0m
  118 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:120:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |         ap->a.a_int64_t = va_arg (args, int64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  121 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:123:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  123 |         ap->a.a_uint64_t = va_arg (args, uint64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  124 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:127:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |         ap->a.a_int_fast8_t = va_arg (args, /* int_fast8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  128 |         #else[0m
  129 |         ap->a.a_int_fast8_t = va_arg (args, int_fast8_t);[0m
  130 |         #endif[0m
  131 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:134:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |         ap->a.a_uint_fast8_t = va_arg (args, /* uint_fast8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  135 |         #else[0m
  136 |         ap->a.a_uint_fast8_t = va_arg (args, uint_fast8_t);[0m
  137 |         #endif[0m
  138 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:143:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |         ap->a.a_int_fast16_t = va_arg (args, int_fast16_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  144 |         #endif[0m
  145 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:150:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |         ap->a.a_uint_fast16_t = va_arg (args, uint_fast16_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  151 |         #endif[0m
  152 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:157:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |         ap->a.a_int_fast32_t = va_arg (args, int_fast32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  158 |         #endif[0m
  159 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:164:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |         ap->a.a_uint_fast32_t = va_arg (args, uint_fast32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  165 |         #endif[0m
  166 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:168:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  168 |         ap->a.a_int_fast64_t = va_arg (args, int_fast64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  169 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:171:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |         ap->a.a_uint_fast64_t = va_arg (args, uint_fast64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  172 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:174:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  174 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  175 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:177:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  177 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  178 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:180:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  180 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  181 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:187:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  187 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  188 |           (sizeof (wint_t) < sizeof (int)[0m
  189 |            ? (wint_t) va_arg (args, int)[0m
  190 |            : va_arg (args, wint_t));[0m
  191 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:194:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  194 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  195 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
  196 |            it occurs quite frequently in printf statements that produce[0m
  197 |            debug output.  Use a fallback in this case.  */[0m
  198 |         if (ap->a.a_string == NULL)[0m
  199 |           ap->a.a_string = "(NULL)";[0m
  200 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:198:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  199 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:203:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  203 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  204 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  205 |            it occurs quite frequently in printf statements that produce[0m
  206 |            debug output.  Use a fallback in this case.  */[0m
  207 |         if (ap->a.a_wide_string == NULL)[0m
  208 |           {[0m
  209 |             static const wchar_t wide_null_string[] =[0m
  210 |               {[0m
  211 |                 (wchar_t)'(',[0m
  212 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  213 |                 (wchar_t)')',[0m
  214 |                 (wchar_t)0[0m
  215 |               };[0m
  216 |             ap->a.a_wide_string = wide_null_string;[0m
  217 |           }[0m
  218 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:221:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  221 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  222 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:224:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  224 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  225 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:227:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  227 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  228 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:230:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  230 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  231 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:233:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  233 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  234 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:236:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  236 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  237 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:239:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |         ap->a.a_count_int8_t_pointer = va_arg (args, int8_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  240 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:242:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |         ap->a.a_count_int16_t_pointer = va_arg (args, int16_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  243 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:245:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  245 |         ap->a.a_count_int32_t_pointer = va_arg (args, int32_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  246 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:248:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  248 |         ap->a.a_count_int64_t_pointer = va_arg (args, int64_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  249 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:251:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  251 |         ap->a.a_count_int_fast8_t_pointer = va_arg (args, int_fast8_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  252 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:254:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  254 |         ap->a.a_count_int_fast16_t_pointer = va_arg (args, int_fast16_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  255 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:257:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  257 |         ap->a.a_count_int_fast32_t_pointer = va_arg (args, int_fast32_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  258 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:260:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  260 |         ap->a.a_count_int_fast64_t_pointer = va_arg (args, int_fast64_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  261 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:303:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  303 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m49 warnings generated.

[106/122][66.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpcd89f77t.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/src/kwsearch.c
[1mkwsearch.c:66:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |           if (eolbyte == '\n' && pattern < p)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   67 |             p--;[0m
   68 |           else[0m
      | [0;32m          } 
[0m[1mkwsearch.c:77:15: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
   77 |               memcpy (buf + 1, p, len);[0m
      | [0;1;32m              ^       ~~~~~~~
[0m[1mkwsearch.c:53:3: [0m[0;1;36mnote: [0m'buf' initialized to a null pointer value[0m
   53 |   char *buf = NULL;[0m
      | [0;1;32m  ^~~~~~~~~
[0m[1mkwsearch.c:64:11: [0m[0;1;36mnote: [0mAssuming 'match_lines' is true[0m
   64 |       if (match_lines)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mkwsearch.c:64:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   64 |       if (match_lines)[0m
      | [0;1;32m      ^
[0m[1mkwsearch.c:66:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   66 |           if (eolbyte == '\n' && pattern < p)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mkwsearch.c:66:31: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   66 |           if (eolbyte == '\n' && pattern < p)[0m
      | [0;1;32m                              ^
[0m[1mkwsearch.c:70:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   70 |               if (bufalloc < len + 2)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~
[0m[1mkwsearch.c:70:15: [0m[0;1;36mnote: [0mTaking false branch[0m
   70 |               if (bufalloc < len + 2)[0m
      | [0;1;32m              ^
[0m[1mkwsearch.c:77:15: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
   77 |               memcpy (buf + 1, p, len);[0m
      | [0;1;32m              ^       ~~~~~~~
[0m[1mkwsearch.c:77:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   77 |               memcpy (buf + 1, p, len);[0m
      | [0;1;32m              ^~~~~~
[0m[1mkwsearch.c:77:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   77 |               memcpy (buf + 1, p, len);[0m
      | [0;1;32m              ^~~~~~
[0m[1mkwsearch.c:125:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |       if (offset < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  126 |         break;[0m
      | [0;1;32m              
[0m[1mkwsearch.c:150:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |       if (!!start_ptr & !match_words)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  151 |         goto success_in_beg_and_len;[0m
      | [0;1;32m                                    
[0m[1mkwsearch.c:157:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |       if (! match_words)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  158 |         goto success;[0m
      | [0;1;32m                     
[0m[1mkwsearch.c:165:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |           if (nl)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  166 |             mb_start = nl + 1;[0m
      | [0;1;32m                              
[0m[1mkwsearch.c:174:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |           : ! wordchar_prev (mb_start, beg, buf + size))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m[1mkwsearch.c:179:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |                 if (start_ptr)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  180 |                   goto success_in_beg_and_len;[0m
  181 |                 else[0m
      | [0;32m                } 
[0m[1mkwsearch.c:181:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  182 |                   goto success;[0m
      | [0;1;32m                               
[0m[1mkwsearch.c:198:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  199 |                   end = buf + size;[0m
      | [0;1;32m                                   
[0m[1mkwsearch.c:202:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |                                     match_size, NULL))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  203 |                   goto success_match_words;[0m
      | [0;1;32m                                           
[0m[1mkwsearch.c:207:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |             if (!len)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  208 |               break;[0m
      | [0;1;32m                    
[0m[1mkwsearch.c:211:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |             if (kwsexec (kwset, beg, --len, &shorter_match, true) != 0)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  212 |               break;[0m
      | [0;1;32m                    
[0m[1mkwsearch.c:231:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  232 |     end = buf + size;[0m
      | [0;1;32m                     
[0m30 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[107/122][83.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpr2m4p1qv.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/locale.c
[1mlocale.c:44:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   if (value[0] != '\0' && defaulted_getenv ("LC_ALL")[0] == '\0')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m   45 |     /* The variable is set in the environment and not overridden by LC_ALL.  */[0m
   46 |     printf ("%s=%s\n", variable, value);[0m
   47 |   else[0m
      | [0;32m  } 
[0m[1mlocale.c:47:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   48 |     printf ("%s=\"%s\"\n", variable, setlocale (category, NULL));[0m
      | [0;1;32m                                                                 
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[108/122][82.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpcv87khcu.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/quotearg.c
[1mquotearg.c:163:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  164 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:174:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  175 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:177:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |   if (!left_quote || !right_quote)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  178 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:188:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |   if (style == custom_quoting_style)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  189 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:204:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |   if (translation != msgid)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  205 |     return translation;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:226:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |   if (STRCASEEQ (locale_code, "UTF-8", 'U','T','F','-','8',0,0,0,0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  227 |     return msgid[0] == '`' ? "\xe2\x80\x98": "\xe2\x80\x99";[0m
      | [0;1;32m                                                            
[0m[1mquotearg.c:228:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |   if (STRCASEEQ (locale_code, "GB18030", 'G','B','1','8','0','3','0',0,0))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  229 |     return msgid[0] == '`' ? "\xa1\ae": "\xa1\xaf";[0m
      | [0;1;32m                                                   
[0m[1mquotearg.c:311:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  311 |       quoting_style = c_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  312 |       elide_outer_quotes = true;[0m
  313 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:315:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  315 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  316 |         STORE ('"');[0m
  317 |       backslash_escapes = true;[0m
  318 |       quote_string = "\"";[0m
  319 |       quote_string_len = 1;[0m
  320 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:315:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  316 |         STORE ('"');[0m
      | [0;1;32m                    
[0m[1mquotearg.c:323:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  323 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  324 |       elide_outer_quotes = false;[0m
  325 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:357:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |         if (!elide_outer_quotes)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  358 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
  359 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:358:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  359 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:364:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  364 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mquotearg.c:367:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  367 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  368 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:370:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  370 |       elide_outer_quotes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  371 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:373:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  373 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  374 |         backslash_escapes = true;[0m
  375 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:373:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  374 |         backslash_escapes = true;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:377:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  377 |       quoting_style = shell_always_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  378 |       if (!elide_outer_quotes)[0m
  379 |         STORE ('\'');[0m
  380 |       quote_string = "'";[0m
  381 |       quote_string_len = 1;[0m
  382 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:378:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  379 |         STORE ('\'');[0m
      | [0;1;32m                     
[0m[1mquotearg.c:385:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  385 |       elide_outer_quotes = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  386 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:389:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mquotearg.c:411:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |           if (elide_outer_quotes)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  412 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:420:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  420 |           if (backslash_escapes)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:441:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |           else if (flags & QA_ELIDE_NULL_BYTES)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  442 |             continue;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:446:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  446 |           switch (quoting_style)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:449:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  449 |               if (elide_outer_quotes)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  450 |                 goto force_outer_quoting_style;[0m
  451 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mquotearg.c:449:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  450 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:454:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  454 |               if ((flags & QA_SPLIT_TRIGRAPHS)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mquotearg.c:455:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |                   && i + 2 < argsize && arg[i + 1] == '?')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mquotearg.c:463:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                     if (elide_outer_quotes)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  464 |                       goto force_outer_quoting_style;[0m
      | [0;1;32m                                                     
[0m[1mquotearg.c:465:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  465 |                     c = arg[i + 2];[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  466 |                     i += 2;[0m
  467 |                     STORE ('?');[0m
  468 |                     STORE ('"');[0m
  469 |                     STORE ('"');[0m
  470 |                     STORE ('?');[0m
  471 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mquotearg.c:474:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  474 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mquotearg.c:479:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mquotearg.c:483:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  483 |         case '\a': esc = 'a'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:484:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  484 |         case '\b': esc = 'b'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:485:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  485 |         case '\f': esc = 'f'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:486:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |         case '\n': esc = 'n'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:487:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |         case '\r': esc = 'r'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:488:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |         case '\t': esc = 't'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:489:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  489 |         case '\v': esc = 'v'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:490:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |         case '\\': esc = c;[0m
      | [0;1;32m                   ^
[0m      | [0;32m                   {
[0m[1mquotearg.c:494:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  495 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:501:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |           if (backslash_escapes && elide_outer_quotes && quote_string_len)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  502 |             goto store_c;[0m
      | [0;1;32m                         
[0m[1mquotearg.c:506:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  507 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:518:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |           if (! (argsize == SIZE_MAX ? arg[1] == '\0' : argsize == 1))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  519 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:520:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2337:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2337 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mquotearg.c:522:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |           if (i != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  523 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:524:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2337:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2337 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mquotearg.c:526:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  526 |           c_and_shell_quote_compat = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  527 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mquotearg.c:541:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  542 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:543:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  543 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:546:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |           encountered_single_quote = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:550:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  551 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:592:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  592 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:614:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  614 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:614:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  614 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:618:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |                 if (argsize == SIZE_MAX)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  619 |                   argsize = strlen (arg);[0m
      | [0;1;32m                                         
[0m[1mquotearg.c:626:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |                     if (bytes == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  627 |                       break;[0m
  628 |                     else if (bytes == (size_t) -1)[0m
      | [0;32m                    } 
[0m[1mquotearg.c:636:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |                         while (i + m < argsize && arg[i + m])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  637 |                           m++;[0m
      | [0;1;32m                              
[0m[1mquotearg.c:650:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |                             for (j = 1; j < bytes; j++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  651 |                               switch (arg[i + m + j])[0m
  652 |                                 {[0m
  653 |                                 case '[': case '\\': case '^':[0m
  654 |                                 case '`': case '|':[0m
  655 |                                   goto force_outer_quoting_style;[0m
  656 | [0m
  657 |                                 default:[0m
  658 |                                   break;[0m
  659 |                                 }[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:658:35: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |                                   break;[0m
      | [0;1;32m                                  ^    
[0m      | [0;32m                                  {    ;} 
[0m[1mquotearg.c:662:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |                         if (! iswprint (w))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  663 |                           printable = false;[0m
      | [0;1;32m                                            
[0m[1mquotearg.c:692:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |                     if (ilim <= i + 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  693 |                       break;[0m
      | [0;1;32m                            
[0m[1mquotearg.c:708:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |           && !is_right_quote)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  709 |         goto store_c;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:718:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |       if (! c_and_shell_quote_compat)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  719 |         all_c_and_shell_quote_compat = false;[0m
      | [0;1;32m                                             
[0m[1mquotearg.c:723:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  723 |       && elide_outer_quotes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  724 |     goto force_outer_quoting_style;[0m
      | [0;1;32m                                   
[0m[1mquotearg.c:733:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |       if (all_c_and_shell_quote_compat)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  734 |         return quotearg_buffer_restyled (buffer, orig_buffersize, arg, argsize,[0m
  735 |                                          c_quoting_style,[0m
  736 |                                          flags, quote_these_too,[0m
  737 |                                          left_quote, right_quote);[0m
  738 |       else if (! buffersize && orig_buffersize)[0m
      | [0;32m      } 
[0m[1mquotearg.c:747:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |   if (quote_string && !elide_outer_quotes)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  748 |     for (; *quote_string; quote_string++)[0m
  749 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:748:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |     for (; *quote_string; quote_string++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  749 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:751:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |   if (len < buffersize)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  752 |     buffer[len] = '\0';[0m
      | [0;1;32m                       
[0m[1mquotearg.c:758:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |   if (quoting_style == shell_always_quoting_style && backslash_escapes)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  759 |     quoting_style = shell_escape_always_quoting_style;[0m
      | [0;1;32m                                                      
[0m[1mquotearg.c:819:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |   if (size)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  820 |     *size = bufsize - 1;[0m
      | [0;1;32m                        
[0m[1mquotearg.c:843:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  843 |   for (i = 1; i < nslots; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  844 |     free (sv[i].val);[0m
      | [0;1;32m                     
[0m[1mquotearg.c:877:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |   if (! (0 <= n && n < nslots_max))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  878 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:887:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |       if (preallocated)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  888 |         *sv = slotvec0;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:889:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  889 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:889:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  889 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:907:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  907 |         if (val != slot0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  908 |           free (val);[0m
      | [0;1;32m                     
[0m132 warnings generated.
Suppressed 55 warnings (55 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[109/122][83.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp_2ood49j.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/printf-parse.c
[1mprintf-parse.c:149:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  150 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:155:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  156 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:157:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  158 |                     /* Positional argument 0.  */[0m
  159 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:160:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  161 |                     /* n too large, would lead to out of memory later.  */[0m
  162 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:208:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  209 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:218:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  219 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:226:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  227 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:232:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  233 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:234:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  235 |                         /* Positional argument 0.  */[0m
  236 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:237:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  238 |                         /* n too large, would lead to out of memory later.  */[0m
  239 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:247:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  248 |                     /* arg_posn wrapped around.  */[0m
  249 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:251:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:251:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:258:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  259 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:262:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  263 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:275:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  276 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:283:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  284 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:289:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  290 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:291:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  292 |                             /* Positional argument 0.  */[0m
  293 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:294:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |                             /* n too large, would lead to out of memory[0m
  296 |                                later.  */[0m
  297 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:305:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  306 |                         /* arg_posn wrapped around.  */[0m
  307 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:309:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:309:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:316:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  317 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:320:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  321 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:568:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  568 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:575:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  575 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:579:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  579 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:581:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  581 |                 if (signed_type == TYPE_LONGINT[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  582 |                     /* For backward compatibility only.  */[0m
  583 |                     || signed_type == TYPE_LONGLONGINT)[0m
  584 | #if HAVE_WINT_T[0m
  585 |                   type = TYPE_WIDE_CHAR;[0m
  586 | #else[0m
  587 |                   goto error;[0m
  588 | #endif[0m
  589 |                 else[0m
  590 |                   type = TYPE_CHAR;[0m
  591 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:583:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |                     || signed_type == TYPE_LONGLONGINT)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  584 | #if HAVE_WINT_T[0m
  585 |                   type = TYPE_WIDE_CHAR;[0m
  586 | #else[0m
  587 |                   goto error;[0m
  588 | #endif[0m
  589 |                 else[0m
      | [0;32m                } 
[0m[1mprintf-parse.c:589:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  590 |                   type = TYPE_CHAR;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:594:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  594 |                 type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  595 |                 c = 'c';[0m
  596 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:599:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  599 |                 if (signed_type == TYPE_LONGINT[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  600 |                     /* For backward compatibility only.  */[0m
  601 |                     || signed_type == TYPE_LONGLONGINT)[0m
  602 | #if HAVE_WCHAR_T[0m
  603 |                   type = TYPE_WIDE_STRING;[0m
  604 | #else[0m
  605 |                   goto error;[0m
  606 | #endif[0m
  607 |                 else[0m
  608 |                   type = TYPE_STRING;[0m
  609 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:601:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |                     || signed_type == TYPE_LONGLONGINT)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  602 | #if HAVE_WCHAR_T[0m
  603 |                   type = TYPE_WIDE_STRING;[0m
  604 | #else[0m
  605 |                   goto error;[0m
  606 | #endif[0m
  607 |                 else[0m
      | [0;32m                } 
[0m[1mprintf-parse.c:607:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  608 |                   type = TYPE_STRING;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:612:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |                 type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  613 |                 c = 's';[0m
  614 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:617:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  617 |                 type = TYPE_POINTER;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  618 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:620:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  620 |                 type = pointer_type;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  621 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:634:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  634 |                 type = TYPE_NONE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  635 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:638:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  638 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mprintf-parse.c:647:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  648 |                       /* arg_posn wrapped around.  */[0m
  649 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:651:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  651 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:651:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  651 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:665:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  666 |                 /* Overflow, would lead to out of memory.  */[0m
  667 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:671:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  672 |                 /* Out of memory.  */[0m
  673 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:674:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:675:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:675:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:694:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  694 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  695 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:696:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  697 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:702:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  703 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:704:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  705 |     free (d->dir);[0m
      | [0;1;32m                  
[0m50 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[110/122][83.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpsq4n8csy.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/c-strcasestr.c
[1mc-strcasestr.c:52:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |   while (*haystack && *needle)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   53 |     ok &= (c_tolower ((unsigned char) *haystack++)[0m
   54 |            == c_tolower ((unsigned char) *needle++));[0m
      | [0;1;32m                                                     
[0m[1mc-strcasestr.c:55:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |   if (*needle)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   56 |     return NULL;[0m
      | [0;1;32m                
[0m[1mc-strcasestr.c:57:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |   if (ok)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   58 |     return (char *) haystack_start;[0m
      | [0;1;32m                                   
[0m[1mc-strcasestr.c:66:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (needle_len < LONG_NEEDLE_THRESHOLD)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   67 |     return two_way_short_needle ((const unsigned char *) haystack,[0m
   68 |                                  haystack_len,[0m
   69 |                                  (const unsigned char *) needle_start,[0m
   70 |                                  needle_len);[0m
      | [0;1;32m                                             
[0m37 warnings generated.
Suppressed 33 warnings (33 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[111/122][97.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp67o39ypy.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/stackvma.c
[1mstackvma.c:163:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  164 |     return -1;[0m
      | [0;1;32m              
[0m[1mstackvma.c:180:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |           if (n < 0 && errno == EINTR)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  181 |             goto retry;[0m
      | [0;1;32m                       
[0m[1mstackvma.c:186:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |               if (n <= 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  187 |                 /* Empty file.  */[0m
  188 |                 goto fail1;[0m
      | [0;1;32m                           
[0m[1mstackvma.c:199:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |                       if (n < 0 && errno == EINTR)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  200 |                         goto retry;[0m
      | [0;1;32m                                   
[0m[1mstackvma.c:201:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |                       if (n < 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  202 |                         /* Some error.  */[0m
  203 |                         goto fail1;[0m
      | [0;1;32m                                   
[0m[1mstackvma.c:204:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |                       if (n + MIN_LEFTOVER > size - rof->filled)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  205 |                         /* Allocate a larger buffer.  */[0m
  206 |                         break;[0m
      | [0;1;32m                              
[0m[1mstackvma.c:227:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |           while (size <= MIN_LEFTOVER)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  228 |             size = 2 * size;[0m
      | [0;1;32m                            
[0m[1mstackvma.c:233:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |           if (size == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  234 |             /* Wraparound.  */[0m
  235 |             goto fail1;[0m
      | [0;1;32m                       
[0m[1mstackvma.c:236:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |           if (rof->auxmap != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  237 |             munmap (rof->auxmap, rof->auxmap_length);[0m
      | [0;1;32m                                                     
[0m[1mstackvma.c:256:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  256 |           if (fd < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  257 |             goto fail2;[0m
      | [0;1;32m                       
[0m[1mstackvma.c:263:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (rof->auxmap != NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  264 |     munmap (rof->auxmap, rof->auxmap_length);[0m
      | [0;1;32m                                             
[0m[1mstackvma.c:286:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |   if (c >= 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  287 |     rof->position++;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:300:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |       if (c >= '0' && c <= '9')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  301 |         value = (value << 4) + (c - '0');[0m
  302 |       else if (c >= 'A' && c <= 'F')[0m
      | [0;32m      } 
[0m[1mstackvma.c:302:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |       else if (c >= 'A' && c <= 'F')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  303 |         value = (value << 4) + (c - 'A' + 10);[0m
  304 |       else if (c >= 'a' && c <= 'f')[0m
      | [0;32m      } 
[0m[1mstackvma.c:304:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |       else if (c >= 'a' && c <= 'f')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  305 |         value = (value << 4) + (c - 'a' + 10);[0m
  306 |       else[0m
      | [0;32m      } 
[0m[1mstackvma.c:306:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  307 |         break;[0m
      | [0;1;32m              
[0m[1mstackvma.c:311:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |   if (numdigits == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  312 |     return -1;[0m
      | [0;1;32m              
[0m[1mstackvma.c:321:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |   if (rof->auxmap != NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  322 |     munmap (rof->auxmap, rof->auxmap_length);[0m
      | [0;1;32m                                             
[0m[1mstackvma.c:366:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |                 && rof_scanf_lx (&rof, &end) >= 0))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  367 |             break;[0m
      | [0;1;32m                  
[0m[1mstackvma.c:368:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |           while (c = rof_getchar (&rof), c != -1 && c != '\n')[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  369 |             ;[0m
      | [0;1;32m             
[0m[1mstackvma.c:375:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |               if (start < auxmap_start)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  376 |                 if (callback (locals, start, auxmap_start))[0m
  377 |                   break;[0m
      | [0;1;32m                        
[0m[1mstackvma.c:376:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |                 if (callback (locals, start, auxmap_start))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  377 |                   break;[0m
      | [0;1;32m                        
[0m[1mstackvma.c:378:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |               if (auxmap_end - 1 < end - 1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  379 |                 if (callback (locals, auxmap_end, end))[0m
  380 |                   break;[0m
      | [0;1;32m                        
[0m[1mstackvma.c:379:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |                 if (callback (locals, auxmap_end, end))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  380 |                   break;[0m
      | [0;1;32m                        
[0m[1mstackvma.c:384:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |               if (callback (locals, start, end))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  385 |                 break;[0m
      | [0;1;32m                      
[0m[1mstackvma.c:571:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |   if (retval == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  572 |       return 0;[0m
      | [0;1;32m               
[0m[1mstackvma.c:661:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  661 |       if (addr == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  662 |         return addr;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:665:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |       if (stepsize > max_remaining)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  666 |         stepsize = max_remaining;[0m
      | [0;1;32m                                 
[0m[1mstackvma.c:668:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  668 |                    stepsize * pagesize, vec) < 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  669 |         /* Time to search in smaller steps.  */[0m
  670 |         break;[0m
      | [0;1;32m              
[0m[1mstackvma.c:679:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |       if (stepsize == 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  680 |         return addr;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:688:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |                    halfstepsize1 * pagesize, vec) < 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  689 |         stepsize = halfstepsize1;[0m
  690 |       else[0m
      | [0;32m      } 
[0m[1mstackvma.c:714:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |       if (addr == 0) /* wrapped around? */[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  715 |         return addr;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:718:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |       if (stepsize > max_remaining)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  719 |         stepsize = max_remaining;[0m
      | [0;1;32m                                 
[0m[1mstackvma.c:720:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  720 |       if (mincore ((MINCORE_ADDR_T) addr, stepsize * pagesize, vec) < 0)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  721 |         /* Time to search in smaller steps.  */[0m
  722 |         break;[0m
      | [0;1;32m              
[0m[1mstackvma.c:731:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |       if (stepsize == 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  732 |         return addr;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:739:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |       if (mincore ((MINCORE_ADDR_T) addr, halfstepsize1 * pagesize, vec) < 0)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  740 |         stepsize = halfstepsize1;[0m
  741 |       else[0m
      | [0;32m      } 
[0m[1mstackvma.c:774:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   for (stepsize = 1; stepsize < count; )[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  775 |     stepsize = 2 * stepsize;[0m
      | [0;1;32m                            
[0m[1mstackvma.c:783:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  783 |       if (stepsize == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  784 |         break;[0m
      | [0;1;32m              
[0m[1mstackvma.c:788:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |            i += 2 * stepsize, addr += 2 * addr_stepsize)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  789 |         /* Here addr = addr1 + i * pagesize.  */[0m
  790 |         if (is_mapped (addr))[0m
  791 |           return 0;[0m
      | [0;1;32m                   
[0m[1mstackvma.c:790:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |         if (is_mapped (addr))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  791 |           return 0;[0m
      | [0;1;32m                   
[0m[1mstackvma.c:812:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |   if (testaddr > addr) /* overflow? */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  813 |     return 0;[0m
      | [0;1;32m             
[0m[1mstackvma.c:846:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |   if (pagesize == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  847 |     init_pagesize ();[0m
      | [0;1;32m                     
[0m44 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[112/122][94.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpgi2c2kem.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/propername.c
[1mpropername.c:62:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       if (tsub_in_string == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   63 |         break;[0m
   64 |       else[0m
      | [0;32m      } 
[0m[1mpropername.c:72:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   72 |               mbui_init (string_iter, string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:72:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   72 |               mbui_init (string_iter, string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:79:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |                       if (!mbui_avail (string_iter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   80 |                         abort ();[0m
      | [0;1;32m                                 
[0m[1mpropername.c:85:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |                   if (mb_isalnum (last_char_before_tsub))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   86 |                     word_boundary_before = false;[0m
      | [0;1;32m                                                 
[0m[1mpropername.c:89:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   89 |               mbui_init (string_iter, tsub_in_string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:89:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   89 |               mbui_init (string_iter, tsub_in_string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:93:22: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   93 |                 for (mbui_init (tsub_iter, tsub);[0m
      | [0;1;32m                     ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:93:22: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   93 |                 for (mbui_init (tsub_iter, tsub);[0m
      | [0;1;32m                     ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:97:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |                     if (!mbui_avail (string_iter))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m   98 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mpropername.c:106:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |                   if (mb_isalnum (first_char_after_tsub))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  107 |                     word_boundary_after = false;[0m
      | [0;1;32m                                                
[0m[1mpropername.c:116:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  116 |               mbui_init (string_iter, tsub_in_string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:116:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  116 |               mbui_init (string_iter, tsub_in_string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:117:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |               if (!mbui_avail (string_iter))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  118 |                 break;[0m
      | [0;1;32m                      
[0m[1mpropername.c:128:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |               if (string < tsub_in_string)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  129 |                 if (isalnum ((unsigned char) tsub_in_string[-1]))[0m
  130 |                   word_boundary_before = false;[0m
      | [0;1;32m                                               
[0m[1mpropername.c:129:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |                 if (isalnum ((unsigned char) tsub_in_string[-1]))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  130 |                   word_boundary_before = false;[0m
      | [0;1;32m                                               
[0m[1mpropername.c:134:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |               if (*p != '\0')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  135 |                 if (isalnum ((unsigned char) *p))[0m
  136 |                   word_boundary_after = false;[0m
      | [0;1;32m                                              
[0m[1mpropername.c:135:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |                 if (isalnum ((unsigned char) *p))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  136 |                   word_boundary_after = false;[0m
      | [0;1;32m                                              
[0m[1mpropername.c:144:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |               if (*tsub_in_string == '\0')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  145 |                 break;[0m
      | [0;1;32m                      
[0m[1mpropername.c:165:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |       if (mbsstr_trimmed_wordbounded (translation, name))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  166 |         return translation;[0m
  167 |       else[0m
      | [0;32m      } 
[0m[1mpropername.c:173:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  173 |           sprintf (result, "%s (%s)", translation, name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpropername.c:173:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  173 |           sprintf (result, "%s (%s)", translation, name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpropername.c:177:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  178 |     return name;[0m
      | [0;1;32m                
[0m[1mpropername.c:214:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  214 |         memcpy (locale_code_translit, locale_code, len);[0m
      | [0;1;32m        ^~~~~~
[0m[1mpropername.c:214:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  214 |         memcpy (locale_code_translit, locale_code, len);[0m
      | [0;1;32m        ^~~~~~
[0m[1mpropername.c:215:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  215 |         memcpy (locale_code_translit + len, "//TRANSLIT", 10 + 1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mpropername.c:215:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  215 |         memcpy (locale_code_translit + len, "//TRANSLIT", 10 + 1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mpropername.c:229:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |             if (strchr (converted_translit, '?') != NULL)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  230 |               free (converted_translit);[0m
  231 |             else[0m
      | [0;32m            } 
[0m[1mpropername.c:231:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  232 | #  endif[0m
  233 |               name_converted_translit = alloc_name_converted_translit =[0m
  234 |                 converted_translit;[0m
      | [0;1;32m                                   
[0m[1mpropername.c:263:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |           if (alloc_name_converted != NULL)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  264 |             free (alloc_name_converted);[0m
      | [0;1;32m                                        
[0m[1mpropername.c:265:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |           if (alloc_name_converted_translit != NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  266 |             free (alloc_name_converted_translit);[0m
      | [0;1;32m                                                 
[0m[1mpropername.c:275:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  275 |           sprintf (result, "%s (%s)", translation, name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpropername.c:275:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  275 |           sprintf (result, "%s (%s)", translation, name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpropername.c:277:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |           if (alloc_name_converted != NULL)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  278 |             free (alloc_name_converted);[0m
      | [0;1;32m                                        
[0m[1mpropername.c:279:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |           if (alloc_name_converted_translit != NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  280 |             free (alloc_name_converted_translit);[0m
      | [0;1;32m                                                 
[0m[1mpropername.c:286:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |       if (alloc_name_converted != NULL && alloc_name_converted != name)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  287 |         free (alloc_name_converted);[0m
      | [0;1;32m                                    
[0m[1mpropername.c:289:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |           && alloc_name_converted_translit != name)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  290 |         free (alloc_name_converted_translit);[0m
      | [0;1;32m                                             
[0m53 warnings generated.
Suppressed 24 warnings (24 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[113/122][98.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpj4q6yves.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/src/pcresearch.c
[1mpcresearch.c:76:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |   if (IDX_MAX < size)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   77 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mpcresearch.c:90:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |   if (sizeof buf <= pcre2_config (PCRE2_CONFIG_VERSION, buf))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   91 |     abort ();[0m
      | [0;1;32m             
[0m[1mpcresearch.c:121:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |           if (!pc->jit_stack)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  122 |             xalloc_die ();[0m
      | [0;1;32m                          
[0m[1mpcresearch.c:123:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |           if (!pc->mcontext)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  124 |             pc->mcontext = pcre2_match_context_create (pc->gcontext);[0m
      | [0;1;32m                                                                     
[0m[1mpcresearch.c:131:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |           if (ckd_mul (&lim, lim, 2))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  132 |             return e;[0m
      | [0;1;32m                     
[0m[1mpcresearch.c:133:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |           if (!pc->mcontext)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  134 |             pc->mcontext = pcre2_match_context_create (pc->gcontext);[0m
      | [0;1;32m                                                                     
[0m[1mpcresearch.c:137:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  138 |         return e;[0m
      | [0;1;32m                 
[0m[1mpcresearch.c:167:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  167 |       if (pcre2_config (PCRE2_CONFIG_UNICODE, &unicode) < 0 || !unicode)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  168 |         die (EXIT_TROUBLE, 0,[0m
  169 |              _("-P supports only unibyte locales on this platform"));[0m
      | [0;1;32m                                                                     
[0m[1mpcresearch.c:170:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |       if (! localeinfo.using_utf8)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  171 |         die (EXIT_TROUBLE, 0, _("-P supports only unibyte and UTF-8 locales"));[0m
      | [0;1;32m                                                                               
[0m[1mpcresearch.c:193:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |   if (rawmemchr (pattern, '\n') != patlim)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  194 |     die (EXIT_TROUBLE, 0, _("the -P option only supports a single pattern"));[0m
      | [0;1;32m                                                                             
[0m[1mpcresearch.c:227:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  227 |       memcpy (rez, wsuffix, sizeof wsuffix);[0m
      | [0;1;32m      ^~~~~~
[0m[1mpcresearch.c:227:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  227 |       memcpy (rez, wsuffix, sizeof wsuffix);[0m
      | [0;1;32m      ^~~~~~
[0m[1mpcresearch.c:232:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |   if (!localeinfo.multibyte)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  233 |     pcre2_set_character_tables (ccontext, pcre2_maketables (gcontext));[0m
      | [0;1;32m                                                                       
[0m[1mpcresearch.c:289:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |       if (PCRE2_SIZE_MAX < line_end - p)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  290 |         die (EXIT_TROUBLE, 0, _("exceeded PCRE's line length limit"));[0m
      | [0;1;32m                                                                      
[0m[1mpcresearch.c:316:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |           if (!bol)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  317 |             options |= PCRE2_NOTBOL;[0m
      | [0;1;32m                                    
[0m[1mpcresearch.c:321:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |           if (MATCH_INVALID_UTF || !bad_utf8_from_pcre2 (e))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  322 |             break;[0m
      | [0;1;32m                  
[0m[1mpcresearch.c:338:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  339 |                 e = jit_exec (pc, subject, valid_bytes, search_offset,[0m
  340 |                               options | PCRE2_NO_UTF_CHECK | PCRE2_NOTEOL);[0m
      | [0;1;32m                                                                           
[0m[1mpcresearch.c:342:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |               if (e != PCRE2_ERROR_NOMATCH)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  343 |                 break;[0m
      | [0;1;32m                      
[0m[1mpcresearch.c:353:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |       if (e != PCRE2_ERROR_NOMATCH)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  354 |         break;[0m
      | [0;1;32m              
[0m[1mpcresearch.c:365:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  365 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mpcresearch.c:368:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  368 |           die (EXIT_TROUBLE, 0, _("%s: memory exhausted"), input_filename ());[0m
      | [0;1;32m          ^                                                                  
[0m      | [0;32m          {                                                                  ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mpcresearch.c:371:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  371 |           die (EXIT_TROUBLE, 0, _("%s: exhausted PCRE JIT stack"),[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  372 |                input_filename ());[0m
      | [0;1;32m                                 
[0m      | [0;32m                                 ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mpcresearch.c:375:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  375 |           die (EXIT_TROUBLE, 0, _("%s: exceeded PCRE's backtracking limit"),[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  376 |                input_filename ());[0m
      | [0;1;32m                                 
[0m      | [0;32m                                 ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mpcresearch.c:379:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  379 |           die (EXIT_TROUBLE, 0,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  380 |                _("%s: exceeded PCRE's nested backtracking limit"),[0m
  381 |                input_filename ());[0m
      | [0;1;32m                                 
[0m      | [0;32m                                 ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mpcresearch.c:384:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  384 |           die (EXIT_TROUBLE, 0, _("%s: PCRE detected recurse loop"),[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  385 |                input_filename ());[0m
      | [0;1;32m                                 
[0m      | [0;32m                                 ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mpcresearch.c:389:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |           die (EXIT_TROUBLE, 0, _("%s: exceeded PCRE's heap limit"),[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  390 |                input_filename ());[0m
      | [0;1;32m                                 
[0m      | [0;32m                                 ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mpcresearch.c:398:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  398 |           die (EXIT_TROUBLE, 0, _("%s: internal PCRE error: %d"),[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  399 |                input_filename (), e);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m41 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[114/122][110.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp4a8umt53.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/gnulib-tests/vasnprintf.c
[1mvasnprintf.c:2194:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2195 |     /* errno is already set.  */[0m
 2196 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:2205:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2206 |     goto fail_1_with_EINVAL;[0m
      | [0;1;32m                            
[0m[1mvasnprintf.c:2234:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2234 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2235 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:2237:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2237 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2238 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:2284:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2290:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2290 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2290:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2290 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2295:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2295 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2296 |                   result[length++] = *cp++;[0m
 2297 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:2300:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2301 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:2308:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2309 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2311:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2312:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2312 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2194:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:154:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  154 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2205:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:2205:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2225:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2225:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 2243 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:2277:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2277 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2279:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2279:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2259:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2259:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2261:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2261 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2262:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2262:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2264:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2264:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2268:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2268:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2288:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2288 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2304:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2304 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2304:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2304 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2308:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2308:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2310:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 2310 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:2310:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 2310 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2312:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 2312 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2317:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2317 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2318 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2325:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2325 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2326 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2328:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2328 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2329 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2331:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2331 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2332 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2334:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2334 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2335 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2337:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2337 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2338 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2340:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2340 |                     *a.arg[dp->arg_index].a.a_count_int8_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2341 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2343:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2343 |                     *a.arg[dp->arg_index].a.a_count_int16_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2344 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2346:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2346 |                     *a.arg[dp->arg_index].a.a_count_int32_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2347 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2349:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2349 |                     *a.arg[dp->arg_index].a.a_count_int64_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2350 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2352:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2352 |                     *a.arg[dp->arg_index].a.a_count_int_fast8_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2353 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2355:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2355 |                     *a.arg[dp->arg_index].a.a_count_int_fast16_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2356 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2358:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2358 |                     *a.arg[dp->arg_index].a.a_count_int_fast32_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2359 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2361:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2361 |                     *a.arg[dp->arg_index].a.a_count_int_fast64_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2362 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2364:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2364 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:5786:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5786 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5787 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:5789:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5789 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 5790 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5791:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5791 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5792 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5793:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5793 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5794 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5795:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5795 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5796 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5798:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5798 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5799 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5803:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5803 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5804 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5812:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5812 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5812:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5812 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5818:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5818 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5819 |                               *fbp++ = *mp++;[0m
 5820 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5833:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5833 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5833:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5833 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5839:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5839 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5840 |                               *fbp++ = *mp++;[0m
 5841 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5906:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5906 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                    {           ;} 
[0m[1m../lib/attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2337:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2337 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mvasnprintf.c:5964:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5964 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5966:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5966 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 5967 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:5969:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5969 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:6060:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6060 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 6061 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:6066:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6066 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 6067 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:6080:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6080 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6080:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6080 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6099:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6099 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 6100 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:6147:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6147 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6148 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 6149 |                           SNPRINTF_BUF (arg);[0m
 6150 |                         }[0m
 6151 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6149:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6149 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6149:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6149 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6153:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6153 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6154 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 6155 |                           SNPRINTF_BUF (arg);[0m
 6156 |                         }[0m
 6157 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6155:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6155 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6155:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6155 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6159:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6159 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6160 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 6161 |                           SNPRINTF_BUF (arg);[0m
 6162 |                         }[0m
 6163 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6161:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6161 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6161:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6161 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6165:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6165 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6166 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 6167 |                           SNPRINTF_BUF (arg);[0m
 6168 |                         }[0m
 6169 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6167:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6167 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6167:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6167 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6171:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6171 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6172 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 6173 |                           SNPRINTF_BUF (arg);[0m
 6174 |                         }[0m
 6175 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6173:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6173 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6173:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6173 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6177:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6177 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6178 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 6179 |                           SNPRINTF_BUF (arg);[0m
 6180 |                         }[0m
 6181 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6179:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6179 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6179:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6179 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6183:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6183 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6184 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 6185 |                           SNPRINTF_BUF (arg);[0m
 6186 |                         }[0m
 6187 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6185:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6185 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6185:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6185 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6189:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6189 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6190 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 6191 |                           SNPRINTF_BUF (arg);[0m
 6192 |                         }[0m
 6193 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6191:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6191 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6191:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6191 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6195:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6195 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6196 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 6197 |                           SNPRINTF_BUF (arg);[0m
 6198 |                         }[0m
 6199 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6197:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6197 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6197:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6197 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6201:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6201 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6202 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 6203 |                           SNPRINTF_BUF (arg);[0m
 6204 |                         }[0m
 6205 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6203:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6203 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6203:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6203 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6207:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6207 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6208 |                           int8_t arg = a.arg[dp->arg_index].a.a_int8_t;[0m
 6209 |                           SNPRINTF_BUF (arg);[0m
 6210 |                         }[0m
 6211 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6209:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6209 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6209:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6209 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6213:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6213 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6214 |                           uint8_t arg = a.arg[dp->arg_index].a.a_uint8_t;[0m
 6215 |                           SNPRINTF_BUF (arg);[0m
 6216 |                         }[0m
 6217 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6215:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6215 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6215:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6215 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6219:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6219 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6220 |                           int16_t arg = a.arg[dp->arg_index].a.a_int16_t;[0m
 6221 |                           SNPRINTF_BUF (arg);[0m
 6222 |                         }[0m
 6223 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6221:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6221 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6221:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6221 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6225:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6225 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6226 |                           uint16_t arg = a.arg[dp->arg_index].a.a_uint16_t;[0m
 6227 |                           SNPRINTF_BUF (arg);[0m
 6228 |                         }[0m
 6229 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6227:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6227 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6227:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6227 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6231:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6231 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6232 |                           int32_t arg = a.arg[dp->arg_index].a.a_int32_t;[0m
 6233 |                           SNPRINTF_BUF (arg);[0m
 6234 |                         }[0m
 6235 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6233:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6233 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6233:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6233 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6237:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6237 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6238 |                           uint32_t arg = a.arg[dp->arg_index].a.a_uint32_t;[0m
 6239 |                           SNPRINTF_BUF (arg);[0m
 6240 |                         }[0m
 6241 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6239:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6239 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6239:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6239 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6243:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6243 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6244 |                           int64_t arg = a.arg[dp->arg_index].a.a_int64_t;[0m
 6245 |                           SNPRINTF_BUF (arg);[0m
 6246 |                         }[0m
 6247 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6245:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6245 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6245:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6245 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6249:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6249 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6250 |                           uint64_t arg = a.arg[dp->arg_index].a.a_uint64_t;[0m
 6251 |                           SNPRINTF_BUF (arg);[0m
 6252 |                         }[0m
 6253 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6251:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6251 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6251:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6251 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6255:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6255 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6256 |                           int_fast8_t arg = a.arg[dp->arg_index].a.a_int_fast8_t;[0m
 6257 |                           SNPRINTF_BUF (arg);[0m
 6258 |                         }[0m
 6259 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6257:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6257 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6257:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6257 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6261:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6261 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6262 |                           uint_fast8_t arg = a.arg[dp->arg_index].a.a_uint_fast8_t;[0m
 6263 |                           SNPRINTF_BUF (arg);[0m
 6264 |                         }[0m
 6265 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6263:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6263 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6263:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6263 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6267:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6267 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6268 |                           int_fast16_t arg = a.arg[dp->arg_index].a.a_int_fast16_t;[0m
 6269 |                           SNPRINTF_BUF (arg);[0m
 6270 |                         }[0m
 6271 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6269:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6269 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6269:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6269 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6273:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6273 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6274 |                           uint_fast16_t arg = a.arg[dp->arg_index].a.a_uint_fast16_t;[0m
 6275 |                           SNPRINTF_BUF (arg);[0m
 6276 |                         }[0m
 6277 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6275:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6275 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6275:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6275 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6279:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6279 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6280 |                           int_fast32_t arg = a.arg[dp->arg_index].a.a_int_fast32_t;[0m
 6281 |                           SNPRINTF_BUF (arg);[0m
 6282 |                         }[0m
 6283 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6281:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6281 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6281:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6281 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6285:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6285 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6286 |                           uint_fast32_t arg = a.arg[dp->arg_index].a.a_uint_fast32_t;[0m
 6287 |                           SNPRINTF_BUF (arg);[0m
 6288 |                         }[0m
 6289 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6287:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6287 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6287:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6287 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6291:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6291 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6292 |                           int_fast64_t arg = a.arg[dp->arg_index].a.a_int_fast64_t;[0m
 6293 |                           SNPRINTF_BUF (arg);[0m
 6294 |                         }[0m
 6295 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6293:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6293 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6293:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6293 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6297:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6297 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6298 |                           uint_fast64_t arg = a.arg[dp->arg_index].a.a_uint_fast64_t;[0m
 6299 |                           SNPRINTF_BUF (arg);[0m
 6300 |                         }[0m
 6301 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6299:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6299 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6299:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6299 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6303:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6303 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6304 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 6305 |                           SNPRINTF_BUF (arg);[0m
 6306 |                         }[0m
 6307 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6305:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6305 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6305:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6305 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6309:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6309 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6310 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 6311 |                           SNPRINTF_BUF (arg);[0m
 6312 |                         }[0m
 6313 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6311:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6311 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6311:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6311 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6315:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6315 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6316 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 6317 |                           SNPRINTF_BUF (arg);[0m
 6318 |                         }[0m
 6319 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6317:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6317 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6317:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6317 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6322:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6322 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6323 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 6324 |                           SNPRINTF_BUF (arg);[0m
 6325 |                         }[0m
 6326 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6324:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6324 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6324:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6324 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6329:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6329 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6330 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 6331 |                           SNPRINTF_BUF (arg);[0m
 6332 |                         }[0m
 6333 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6331:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6331 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6331:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6331 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6336:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6336 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6337 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 6338 |                           SNPRINTF_BUF (arg);[0m
 6339 |                         }[0m
 6340 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6338:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6338 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6338:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6338 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6343:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6343 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6344 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 6345 |                           SNPRINTF_BUF (arg);[0m
 6346 |                         }[0m
 6347 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6345:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6345 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6345:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6345 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6349:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6349 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:6362:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6362 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 6363 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:6365:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6365 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 6366 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:6449:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6449 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 6450 |                               errno = EILSEQ;[0m
 6451 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:6451:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6451 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 6452 |                               errno = EINVAL;[0m
      | [0;1;32m                                             
[0m[1mvasnprintf.c:6469:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6469 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 6470 |                           goto overflow;[0m
 6471 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:6489:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6489 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6489:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6489 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6858:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6858:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6859:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 6859 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2194:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:154:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  154 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2205:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:2205:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2225:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2225:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 2243 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:2277:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2277 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2279:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2279:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2259:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2259:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2261:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2261 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2262:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2262:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2264:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2264:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2268:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2268:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2288:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2288 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2301:11: [0m[0;1;36mnote: [0m Execution continues on line 6858[0m
 2301 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:6858:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2275:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:2253:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:6858:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2275:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:2253:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:6858:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:6858:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:6859:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 6859 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:6867:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6867 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 6868 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:6871:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6871 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6872 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:6898:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6898 |     if (result != resultbuf)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 6899 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:6900:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6900 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6901 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m192 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[115/122][133.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpfad_6wub.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/hash.c
[1mhash.c:172:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  173 |             bucket_length++;[0m
      | [0;1;32m                            
[0m[1mhash.c:175:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |           if (bucket_length > max_bucket_length)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  176 |             max_bucket_length = bucket_length;[0m
      | [0;1;32m                                              
[0m[1mhash.c:201:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  202 |             n_entries++;[0m
      | [0;1;32m                        
[0m[1mhash.c:206:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |   if (n_buckets_used == table->n_buckets_used && n_entries == table->n_entries)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  207 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:220:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:220:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:235:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (! (n < table->n_buckets))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  236 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:246:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  247 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:249:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |   for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:250:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:263:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (table->n_entries == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  264 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:266:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |   for (bucket = table->bucket; ; bucket++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  267 |     if (! (bucket < table->bucket_limit))[0m
  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:267:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |     if (! (bucket < table->bucket_limit))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
      | [0;32m    } 
[0m[1mhash.c:269:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |     else if (bucket->data)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:283:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |       if (cursor->data == entry && cursor->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  284 |         return cursor->next->data;[0m
      | [0;1;32m                                  
[0m[1mhash.c:290:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |   while (++bucket < table->bucket_limit)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  291 |     if (bucket->data)[0m
  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:291:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |     if (bucket->data)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:312:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |               if (counter >= buffer_size)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  313 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:336:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |               if (! processor (cursor->data, processor_data))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  337 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:385:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |   for (; (ch = *string); string++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  386 |     value = (value * 31 + ch) % n_buckets;[0m
      | [0;1;32m                                          
[0m[1mhash.c:418:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   if (candidate < 10)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  419 |     candidate = 10;[0m
      | [0;1;32m                   
[0m[1mhash.c:424:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |   while (SIZE_MAX != candidate && !is_prime (candidate))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  425 |     candidate += 2;[0m
      | [0;1;32m                   
[0m[1mhash.c:468:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if (tuning == &default_tuning)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  469 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:484:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |       && tuning->shrink_threshold + epsilon < tuning->growth_threshold)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  485 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:501:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if ((float) SIZE_MAX <= new_candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  502 |         return 0;[0m
      | [0;1;32m                 
[0m[1mhash.c:506:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (xalloc_oversized (candidate, sizeof (struct hash_entry *)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  507 |     return 0;[0m
      | [0;1;32m             
[0m[1mhash.c:518:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |   if (hasher == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  519 |     hasher = raw_hasher;[0m
      | [0;1;32m                        
[0m[1mhash.c:520:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (comparator == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  521 |     comparator = raw_comparator;[0m
      | [0;1;32m                                
[0m[1mhash.c:524:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |   if (table == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  525 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:527:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |   if (!tuning)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  528 |     tuning = &default_tuning;[0m
      | [0;1;32m                             
[0m[1mhash.c:541:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |   if (!table->n_buckets)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  542 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:545:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (table->bucket == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  546 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:581:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |               if (table->data_freer)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  582 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:593:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |           if (table->data_freer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  594 |             table->data_freer (bucket->data);[0m
      | [0;1;32m                                             
[0m[1mhash.c:618:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |               for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  619 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:708:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  709 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:774:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   for (bucket = src->bucket; bucket < src->bucket_limit; bucket++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m[1mhash.c:814:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |         if (safe)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  815 |           continue;[0m
      | [0;1;32m                   
[0m[1mhash.c:824:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |             if (new_entry == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  825 |               return false;[0m
      | [0;1;32m                           
[0m[1mhash.c:850:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |   if (!new_size)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  851 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:852:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (new_size == table->n_buckets)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  853 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:856:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (new_table->bucket == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  857 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:915:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  915 |          && transfer_entries (table, new_table, false)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  916 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:932:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  932 |   if (! entry)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  933 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:938:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  938 |       if (matched_ent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  939 |         *matched_ent = data;[0m
      | [0;1;32m                            
[0m[1mhash.c:964:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |           if ((float) SIZE_MAX <= candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  965 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:968:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |           if (!hash_rehash (table, candidate))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  969 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:972:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |           if (hash_find_entry (table, entry, &bucket, false) != NULL)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  973 |             abort ();[0m
      | [0;1;32m                     
[0m[1mhash.c:983:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |       if (new_entry == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  984 |         return -1;[0m
      | [0;1;32m                  
[0m[1mhash.c:1021:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |   if (!data)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1022 |     return NULL;[0m
      | [0;1;32m                
[0m54 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[116/122][139.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpuz0ef9wl.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/mbsstr.c
[1mmbsstr.c:50:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |   if (memory == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   51 |     return false;[0m
      | [0;1;32m                 
[0m[1mmbsstr.c:62:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   62 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m         ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:62:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   62 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m         ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:62:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m   63 |       mb_copy (&needle_mbchars[j], &mbui_cur (iter));[0m
      | [0;1;32m                                                     
[0m[1mmbsstr.c:141:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  141 |     mbui_init (rhaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:141:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  141 |     mbui_init (rhaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:142:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |     mbui_init (phaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:142:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  142 |     mbui_init (phaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:144:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |     while (mbui_avail (phaystack))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m[1mmbsstr.c:163:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |               if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  164 |                 abort ();[0m
      | [0;1;32m                         
[0m[1mmbsstr.c:171:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |           if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  172 |             abort ();[0m
      | [0;1;32m                     
[0m[1mmbsstr.c:196:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  196 |       mbui_init (iter_needle, needle);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:196:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  196 |       mbui_init (iter_needle, needle);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:221:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |           mbui_init (iter_needle_last_ccount, needle);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:221:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  221 |           mbui_init (iter_needle_last_ccount, needle);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:222:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |           mbui_init (iter_haystack, haystack);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:222:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  222 |           mbui_init (iter_haystack, haystack);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:225:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |               if (!mbui_avail (iter_haystack))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  226 |                 /* No match.  */[0m
  227 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mmbsstr.c:240:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |                        count--)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  241 |                     mbui_advance (iter_needle_last_ccount);[0m
      | [0;1;32m                                                           
[0m[1mmbsstr.c:250:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |                       if (success)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  251 |                         return (char *) result;[0m
      | [0;1;32m                                               
[0m[1mmbsstr.c:264:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  264 |                   memcpy (&rhaystack, &iter_haystack, sizeof (mbui_iterator_t));[0m
      | [0;1;32m                  ^~~~~~
[0m[1mmbsstr.c:264:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  264 |                   memcpy (&rhaystack, &iter_haystack, sizeof (mbui_iterator_t));[0m
      | [0;1;32m                  ^~~~~~
[0m[1mmbsstr.c:267:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  267 |                   mbui_init (rneedle, needle);[0m
      | [0;1;32m                  ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:267:19: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  267 |                   mbui_init (rneedle, needle);[0m
      | [0;1;32m                  ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:268:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |                   if (!mbui_avail (rneedle))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  269 |                     abort ();[0m
      | [0;1;32m                             
[0m[1mmbsstr.c:274:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |                       if (!mbui_avail (rneedle))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  275 |                         /* Found a match.  */[0m
  276 |                         return (char *) mbui_cur_ptr (iter_haystack);[0m
      | [0;1;32m                                                                     
[0m[1mmbsstr.c:277:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |                       if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  278 |                         /* No match.  */[0m
  279 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mmbsstr.c:281:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |                       if (!mb_equal (mbui_cur (rhaystack), mbui_cur (rneedle)))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  282 |                         /* Nothing in this round.  */[0m
  283 |                         break;[0m
      | [0;1;32m                              
[0m[1mmbsstr.c:288:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  289 |         return (char *) haystack;[0m
      | [0;1;32m                                 
[0m[1mmbsstr.c:321:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |               if (*haystack == '\0')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  322 |                 /* No match.  */[0m
  323 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mmbsstr.c:338:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |                       if (*needle_last_ccount == '\0')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  339 |                         needle_last_ccount = NULL;[0m
      | [0;1;32m                                                  
[0m[1mmbsstr.c:351:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |                       if (success)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  352 |                         return (char *) result;[0m
      | [0;1;32m                                               
[0m[1mmbsstr.c:367:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |                       if (*rneedle == '\0')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  368 |                         /* Found a match.  */[0m
  369 |                         return (char *) haystack;[0m
      | [0;1;32m                                                 
[0m[1mmbsstr.c:370:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |                       if (*rhaystack == '\0')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  371 |                         /* No match.  */[0m
  372 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mmbsstr.c:374:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |                       if (*rhaystack != *rneedle)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  375 |                         /* Nothing in this round.  */[0m
  376 |                         break;[0m
      | [0;1;32m                              
[0m[1mmbsstr.c:381:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  382 |         return (char *) haystack;[0m
      | [0;1;32m                                 
[0m42 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[117/122][149.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmplj85whrj.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/src/dfasearch.c
[1mdfasearch.c:70:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |   if (!dm)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   71 |     return;[0m
      | [0;1;32m           
[0m[1mdfasearch.c:86:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   86 |       memcpy (mp, dm->must, old_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:86:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   86 |       memcpy (mp, dm->must, old_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:87:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |       if (dm->endline)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   88 |         mp[old_len] = eolbyte;[0m
      | [0;1;32m                              
[0m[1mdfasearch.c:129:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |           if ('1' <= p[1] && p[1] <= '9')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  130 |             return true;[0m
      | [0;1;32m                        
[0m[1mdfasearch.c:134:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |               if (p == lim)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  135 |                 break;[0m
      | [0;1;32m                      
[0m[1mdfasearch.c:158:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |   if (syntax_only)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  159 |     re_set_syntax (syntax_bits | RE_NO_SUB);[0m
  160 |   else[0m
      | [0;32m  } 
[0m[1mdfasearch.c:160:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  161 |     re_set_syntax (syntax_bits);[0m
      | [0;1;32m                                
[0m[1mdfasearch.c:166:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |       if (syntax_only)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  167 |         regfree (&pat);[0m
  168 |       else[0m
      | [0;32m      } 
[0m[1mdfasearch.c:168:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  169 |         dc->patterns[pcount] = pat;[0m
      | [0;1;32m                                   
[0m[1mdfasearch.c:181:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |   if (*pat_filename == '\0')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  182 |     error (0, 0, "%s", err);[0m
  183 |   else[0m
      | [0;32m  } 
[0m[1mdfasearch.c:205:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |   if (match_icase)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  206 |     syntax_bits |= RE_ICASE;[0m
      | [0;1;32m                            
[0m[1mdfasearch.c:247:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |           if (0 < bufshortage)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  248 |             buf = xpalloc (buf, &bufalloc, bufshortage, -1, 1);[0m
      | [0;1;32m                                                               
[0m[1mdfasearch.c:249:11: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  249 |           memcpy (buf + buflen, prev, prevlen);[0m
      | [0;1;32m          ^       ~~~~~~~~~~~~
[0m[1mdfasearch.c:205:7: [0m[0;1;36mnote: [0mAssuming 'match_icase' is true[0m
  205 |   if (match_icase)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mdfasearch.c:205:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  205 |   if (match_icase)[0m
      | [0;1;32m  ^
[0m[1mdfasearch.c:209:21: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  209 |                  | (syntax_bits & RE_CONTEXT_INDEP_OPS ? DFA_STAR_WARN : 0)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfasearch.c:209:21: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdfasearch.c:210:21: [0m[0;1;36mnote: [0mAssuming 'eolbyte' is not equal to 0[0m
  210 |                  | (eolbyte ? 0 : DFA_EOL_NUL));[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mdfasearch.c:210:21: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mdfasearch.c:212:18: [0m[0;1;36mnote: [0mAssuming field 'multibyte' is false[0m
  212 |   bool bs_safe = !localeinfo.multibyte | localeinfo.using_utf8;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mdfasearch.c:230:3: [0m[0;1;36mnote: [0m'buf' initialized to a null pointer value[0m
  230 |   char *buf = NULL;[0m
      | [0;1;32m  ^~~~~~~~~
[0m[1mdfasearch.c:243:11: [0m[0;1;36mnote: [0m'backref' is false[0m
  243 |       if (backref && prev < p)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdfasearch.c:243:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  243 |       if (backref && prev < p)[0m
      | [0;1;32m                  ^
[0m[1mdfasearch.c:257:15: [0m[0;1;36mnote: [0m'shortage' is > 0[0m
  257 |       if (0 < shortage)[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mdfasearch.c:257:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  257 |       if (0 < shortage)[0m
      | [0;1;32m      ^
[0m[1mdfasearch.c:264:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  264 |       if (!regex_compile (dc, p, len, dc->pcount, lineno, syntax_bits,[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  265 |                           !backref))[0m
      | [0;1;32m                          ~~~~~~~~~
[0m[1mdfasearch.c:264:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  264 |       if (!regex_compile (dc, p, len, dc->pcount, lineno, syntax_bits,[0m
      | [0;1;32m      ^
[0m[1mdfasearch.c:271:11: [0m[0;1;36mnote: [0m'backref' is false[0m
  271 |       if (backref)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdfasearch.c:271:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  271 |       if (backref)[0m
      | [0;1;32m      ^
[0m[1mdfasearch.c:236:3: [0m[0;1;36mnote: [0mLoop condition is true. Execution continues on line 238[0m
  236 |   do[0m
      | [0;1;32m  ^
[0m[1mdfasearch.c:243:11: [0m[0;1;36mnote: [0mAssuming 'backref' is true[0m
  243 |       if (backref && prev < p)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdfasearch.c:243:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mdfasearch.c:243:22: [0m[0;1;36mnote: [0mAssuming 'prev' is < 'p'[0m
  243 |       if (backref && prev < p)[0m
      | [0;1;32m                     ^~~~~~~~
[0m[1mdfasearch.c:243:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  243 |       if (backref && prev < p)[0m
      | [0;1;32m      ^
[0m[1mdfasearch.c:247:15: [0m[0;1;36mnote: [0mAssuming 'bufshortage' is <= 0[0m
  247 |           if (0 < bufshortage)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mdfasearch.c:247:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  247 |           if (0 < bufshortage)[0m
      | [0;1;32m          ^
[0m[1mdfasearch.c:249:11: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
  249 |           memcpy (buf + buflen, prev, prevlen);[0m
      | [0;1;32m          ^       ~~~~~~~~~~~~
[0m[1mdfasearch.c:249:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  249 |           memcpy (buf + buflen, prev, prevlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mdfasearch.c:249:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  249 |           memcpy (buf + buflen, prev, prevlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mdfasearch.c:265:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |                           !backref))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  266 |         compilation_failed = true;[0m
      | [0;1;32m                                  
[0m[1mdfasearch.c:279:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |   if (compilation_failed)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  280 |     exit (EXIT_TROUBLE);[0m
      | [0;1;32m                        
[0m[1mdfasearch.c:282:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |   if (patlim < prev)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  283 |     buflen--;[0m
  284 |   else if (pattern < prev)[0m
      | [0;32m  } 
[0m[1mdfasearch.c:288:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  288 |       memcpy (buf + buflen, prev, prevlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:288:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  288 |       memcpy (buf + buflen, prev, prevlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:315:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  315 |       strcpy (n, match_lines ? (bk ? line_beg_bk : line_beg_no_bk)[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:315:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  315 |       strcpy (n, match_lines ? (bk ? line_beg_bk : line_beg_no_bk)[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:318:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  318 |       memcpy (n + total, pattern, size);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:318:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  318 |       memcpy (n + total, pattern, size);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:320:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  320 |       strcpy (n + total, match_lines ? (bk ? line_end_bk : line_end_no_bk)[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:320:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  320 |       strcpy (n + total, match_lines ? (bk ? line_end_bk : line_end_no_bk)[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfasearch.c:326:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  327 |     motif = NULL;[0m
      | [0;1;32m                 
[0m[1mdfasearch.c:340:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |           if (!regex_compile (dc, buf, buflen, 0, -1, syntax_bits, false))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  341 |             abort ();[0m
      | [0;1;32m                     
[0m[1mdfasearch.c:344:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |       if (buf != pattern)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  345 |         free (buf);[0m
      | [0;1;32m                   
[0m[1mdfasearch.c:390:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |               if (offset < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  391 |                 return offset;[0m
      | [0;1;32m                              
[0m[1mdfasearch.c:418:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  419 |                 end = buflim;[0m
      | [0;1;32m                             
[0m[1mdfasearch.c:423:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |                   if (!localeinfo.multibyte | localeinfo.using_utf8)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  424 |                     goto success;[0m
      | [0;1;32m                                 
[0m[1mdfasearch.c:425:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  425 |                   if (mb_start < beg)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  426 |                     mb_start = beg;[0m
      | [0;1;32m                                   
[0m[1mdfasearch.c:427:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  427 |                   if (mb_goback (&mb_start, NULL, match, buflim) == 0)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  428 |                     goto success;[0m
      | [0;1;32m                                 
[0m[1mdfasearch.c:444:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |               if (next_beg == NULL || next_beg == end)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  445 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdfasearch.c:466:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |           if (next_beg == NULL || next_beg == end)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  467 |             continue;[0m
      | [0;1;32m                     
[0m[1mdfasearch.c:479:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |           if (!backref)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  480 |             goto success;[0m
      | [0;1;32m                         
[0m[1mdfasearch.c:492:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |       if (TYPE_MAXIMUM (regoff_t) < end - beg - 1)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  493 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mdfasearch.c:504:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |           if (start < -1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  505 |             xalloc_die ();[0m
  506 |           else if (0 <= start)[0m
      | [0;32m          } 
[0m[1mdfasearch.c:510:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  510 |               if (match > best_match)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  511 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdfasearch.c:512:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |               if (start_ptr && !match_words)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  513 |                 goto assess_pattern_match;[0m
      | [0;1;32m                                          
[0m[1mdfasearch.c:528:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |               if (!match_lines && match_words)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m[1mdfasearch.c:533:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |                         && ! wordchar_prev (beg, match, end - 1))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  534 |                       goto assess_pattern_match;[0m
      | [0;1;32m                                                
[0m[1mdfasearch.c:543:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |                         if (shorter_len < -1)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  544 |                           xalloc_die ();[0m
      | [0;1;32m                                        
[0m[1mdfasearch.c:546:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |                     if (0 < shorter_len)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  547 |                       len = shorter_len;[0m
  548 |                     else[0m
      | [0;32m                    } 
[0m[1mdfasearch.c:551:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |                         if (match == end - 1)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  552 |                           break;[0m
      | [0;1;32m                                
[0m[1mdfasearch.c:560:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |                             if (start < -1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  561 |                               xalloc_die ();[0m
      | [0;1;32m                                            
[0m57 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[118/122][156.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp722w2va3.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/exclude.c
[1mexclude.c:151:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |           if (options & EXCLUDE_REGEX)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  152 |             return true;[0m
      | [0;1;32m                        
[0m[1mexclude.c:153:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  153 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mexclude.c:156:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |           if (options & EXCLUDE_REGEX)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  157 |             continue;[0m
  158 |           else[0m
  159 |             str += ! (options & FNM_NOESCAPE) && *str;[0m
  160 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mexclude.c:156:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |           if (options & EXCLUDE_REGEX)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  157 |             continue;[0m
  158 |           else[0m
      | [0;32m          } 
[0m[1mexclude.c:158:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  159 |             str += ! (options & FNM_NOESCAPE) && *str;[0m
      | [0;1;32m                                                      
[0m[1mexclude.c:163:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |           if (options & FNM_EXTMATCH && *str == '(')[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  164 |             return true;[0m
      | [0;1;32m                        
[0m[1mexclude.c:165:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  165 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mexclude.c:171:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |           return false;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1mexclude.c:180:5: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |   do[0m
      | [0;1;32m    ^
[0m      | [0;32m     {
[0m  181 |     q += *q == '\\' && q[1];[0m
  182 |   while ((*str++ = *q++));[0m
      | [0;32m  } 
[0m[1mexclude.c:209:8: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  209 |   for (mbui_init (iter, p); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m       ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mexclude.c:209:8: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  209 |   for (mbui_init (iter, p); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m       ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mexclude.c:214:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |       if (m.wc_valid)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  215 |         wc = towlower (m.wc);[0m
  216 |       else[0m
      | [0;32m      } 
[0m[1mexclude.c:216:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  217 |         wc = *m.ptr;[0m
      | [0;1;32m                    
[0m[1mexclude.c:260:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  260 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mexclude.c:263:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  263 |       sp->v.table = hash_initialize (0, NULL,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  264 |                                      (options & FNM_CASEFOLD) ?[0m
  265 |                                        string_hasher_ci[0m
  266 |                                        : string_hasher,[0m
  267 |                                      (options & FNM_CASEFOLD) ?[0m
  268 |                                        string_compare_ci[0m
  269 |                                        : string_compare,[0m
  270 |                                      string_free);[0m
  271 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mexclude.c:284:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  284 |       for (idx_t i = 0; i < seg->v.pat.exclude_count; i++)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  285 |         {[0m
  286 |           if (seg->v.pat.exclude[i].options & EXCLUDE_REGEX)[0m
  287 |             regfree (&seg->v.pat.exclude[i].v.re);[0m
  288 |         }[0m
  289 |       free (seg->v.pat.exclude);[0m
  290 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mexclude.c:286:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |           if (seg->v.pat.exclude[i].options & EXCLUDE_REGEX)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  287 |             regfree (&seg->v.pat.exclude[i].v.re);[0m
      | [0;1;32m                                                  
[0m[1mexclude.c:293:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  293 |       hash_free (seg->v.table);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  294 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mexclude.c:330:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |   if (! (options & FNM_LEADING_DIR))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  331 |     return ((options & FNM_CASEFOLD)[0m
  332 |             ? mbscasecmp (pattern, f)[0m
  333 |             : strcmp (pattern, f));[0m
  334 |   else if (! (options & FNM_CASEFOLD))[0m
      | [0;32m  } 
[0m[1mexclude.c:341:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |           if (r == '/')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  342 |             r = 0;[0m
      | [0;1;32m                  
[0m[1mexclude.c:361:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |           if (p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  362 |             *p = '\0';[0m
      | [0;1;32m                      
[0m[1mexclude.c:364:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |           if (!p || r <= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  365 |             break;[0m
      | [0;1;32m                  
[0m[1mexclude.c:382:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |   if (! (options & EXCLUDE_ANCHORED))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  383 |     for (p = f; *p && ! matched; p++)[0m
  384 |       if (*p == '/' && p[1] != '/')[0m
  385 |         matched = ((*matcher) (pattern, p + 1, options) == 0);[0m
      | [0;1;32m                                                              
[0m[1mexclude.c:383:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |     for (p = f; *p && ! matched; p++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  384 |       if (*p == '/' && p[1] != '/')[0m
  385 |         matched = ((*matcher) (pattern, p + 1, options) == 0);[0m
      | [0;1;32m                                                              
[0m[1mexclude.c:384:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |       if (*p == '/' && p[1] != '/')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  385 |         matched = ((*matcher) (pattern, p + 1, options) == 0);[0m
      | [0;1;32m                                                              
[0m[1mexclude.c:410:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |       if (exclude_patopts (exclude + i, f))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  411 |         return true;[0m
      | [0;1;32m                    
[0m[1mexclude.c:429:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  429 |       strcpy (buffer, f);[0m
      | [0;1;32m      ^~~~~~
[0m[1mexclude.c:429:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  429 |       strcpy (buffer, f);[0m
      | [0;1;32m      ^~~~~~
[0m[1mexclude.c:433:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |           if (hash_lookup (table, buffer))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  434 |             return true;[0m
      | [0;1;32m                        
[0m[1mexclude.c:450:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |           if (f)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  451 |             f++;[0m
      | [0;1;32m                
[0m[1mexclude.c:453:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  454 |         break;[0m
      | [0;1;32m              
[0m[1mexclude.c:471:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |   if (!ex->head)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  472 |     return false;[0m
      | [0;1;32m                 
[0m[1mexclude.c:481:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |           if (!filename)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  482 |             filename = xmalloc (strlen (f) + 1);[0m
      | [0;1;32m                                                
[0m[1mexclude.c:483:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  483 |           if (file_name_matches (seg, f, filename))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  484 |             break;[0m
      | [0;1;32m                  
[0m[1mexclude.c:488:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |           if (file_pattern_matches (seg, f))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  489 |             break;[0m
      | [0;1;32m                  
[0m[1mexclude.c:523:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |                  == (options & EXCLUDE_INCLUDE))))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  524 |         new_exclude_segment (ex, exclude_pattern, options);[0m
      | [0;1;32m                                                           
[0m[1mexclude.c:529:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |       if (pat->exclude_count == pat->exclude_alloc)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  530 |         pat->exclude = xpalloc (pat->exclude, &pat->exclude_alloc, 1, -1,[0m
  531 |                                 sizeof *pat->exclude);[0m
      | [0;1;32m                                                      
[0m[1mexclude.c:546:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |               while (len > 0 && ISSLASH (pattern[len-1]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  547 |                 --len;[0m
      | [0;1;32m                      
[0m[1mexclude.c:549:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |               if (len == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  550 |                 rc = 1;[0m
  551 |               else[0m
      | [0;32m              } 
[0m[1mexclude.c:554:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  554 |                   memcpy (tmp, pattern, len);[0m
      | [0;1;32m                  ^~~~~~
[0m[1mexclude.c:554:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  554 |                   memcpy (tmp, pattern, len);[0m
      | [0;1;32m                  ^~~~~~
[0m[1mexclude.c:555:19: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  555 |                   strcpy (tmp + len, "(/.*)?");[0m
      | [0;1;32m                  ^~~~~~
[0m[1mexclude.c:555:19: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  555 |                   strcpy (tmp + len, "(/.*)?");[0m
      | [0;1;32m                  ^~~~~~
[0m[1mexclude.c:560:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  561 |             rc = regcomp (&patopts->v.re, pattern, cflags);[0m
      | [0;1;32m                                                           
[0m[1mexclude.c:586:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  586 |                  == (options & exclude_hash_flags))))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  587 |         new_exclude_segment (ex, exclude_hash, options);[0m
      | [0;1;32m                                                        
[0m[1mexclude.c:591:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |       if ((options & (EXCLUDE_WILDCARDS | FNM_NOESCAPE)) == EXCLUDE_WILDCARDS)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  592 |         unescape_pattern (str);[0m
      | [0;1;32m                               
[0m[1mexclude.c:594:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |       if (p != str)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  595 |         free (str);[0m
      | [0;1;32m                   
[0m[1mexclude.c:621:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |       if (buf_count == buf_alloc)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  622 |         buf = xpalloc (buf, &buf_alloc, 1, -1, 1);[0m
      | [0;1;32m                                                  
[0m[1mexclude.c:626:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |   if (ferror (fp))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  627 |     e = errno;[0m
      | [0;1;32m              
[0m[1mexclude.c:637:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  637 |   for (p = buf; p < lim; p++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m[1mexclude.c:644:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |             for (; ; pattern_end--)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  645 |               if (pattern_end == pattern)[0m
  646 |                 goto next_pattern;[0m
  647 |               else if (! isspace ((unsigned char) pattern_end[-1]))[0m
  648 |                 break;[0m
      | [0;1;32m                      
[0m[1mexclude.c:645:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |               if (pattern_end == pattern)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  646 |                 goto next_pattern;[0m
  647 |               else if (! isspace ((unsigned char) pattern_end[-1]))[0m
      | [0;32m              } 
[0m[1mexclude.c:647:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |               else if (! isspace ((unsigned char) pattern_end[-1]))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  648 |                 break;[0m
      | [0;1;32m                      
[0m[1mexclude.c:674:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |   if (strcmp (file_name, "-") == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  675 |     return add_exclude_fp (call_addfn, ex, stdin, options, line_end, &add_func);[0m
      | [0;1;32m                                                                                
[0m[1mexclude.c:678:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  678 |   if (!in)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  679 |     return -1;[0m
      | [0;1;32m              
[0m[1mexclude.c:682:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |   if (fclose (in) != 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  683 |     return -1;[0m
      | [0;1;32m              
[0m64 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[119/122][182.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp47kiskrn.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/src/kwset.c
[1mkwset.c:166:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |   if (reverse)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  167 |     text += len;[0m
      | [0;1;32m                
[0m[1mkwset.c:189:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |           if (label < cur->label)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  190 |             dirs[depth++] = L, cur = cur->llink;[0m
  191 |           else[0m
      | [0;32m          } 
[0m[1mkwset.c:191:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  192 |             dirs[depth++] = R, cur = cur->rlink;[0m
      | [0;1;32m                                                
[0m[1mkwset.c:215:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |           if (dirs[--depth] == L)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  216 |             links[depth]->llink = cur;[0m
  217 |           else[0m
      | [0;32m          } 
[0m[1mkwset.c:217:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  218 |             links[depth]->rlink = cur;[0m
      | [0;1;32m                                      
[0m[1mkwset.c:223:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |               if (dirs[depth] == L)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  224 |                 --links[depth]->balance;[0m
  225 |               else[0m
      | [0;32m              } 
[0m[1mkwset.c:225:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  226 |                 ++links[depth]->balance;[0m
      | [0;1;32m                                        
[0m[1mkwset.c:239:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |                   switch (dirs[depth + 1])[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m[1mkwset.c:242:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |                       r = links[depth], t = r->llink, rl = t->rlink;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  243 |                       t->rlink = r, r->llink = rl;[0m
  244 |                       t->balance = r->balance = 0;[0m
  245 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mkwset.c:247:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  247 |                       r = links[depth], l = r->llink, t = l->rlink;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  248 |                       rl = t->rlink, lr = t->llink;[0m
  249 |                       t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;[0m
  250 |                       l->balance = t->balance != 1 ? 0 : -1;[0m
  251 |                       r->balance = t->balance != (char) -1 ? 0 : 1;[0m
  252 |                       t->balance = 0;[0m
  253 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mkwset.c:255:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  255 |                       abort ();[0m
      | [0;1;32m                      ^       
[0m      | [0;32m                      {       ;} 
[0m[1mkwset.c:259:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  259 |                   switch (dirs[depth + 1])[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m[1mkwset.c:262:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  262 |                       l = links[depth], t = l->rlink, lr = t->llink;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  263 |                       t->llink = l, l->rlink = lr;[0m
  264 |                       t->balance = l->balance = 0;[0m
  265 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mkwset.c:267:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  267 |                       l = links[depth], r = l->rlink, t = r->llink;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  268 |                       lr = t->llink, rl = t->rlink;[0m
  269 |                       t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;[0m
  270 |                       l->balance = t->balance != 1 ? 0 : -1;[0m
  271 |                       r->balance = t->balance != (char) -1 ? 0 : 1;[0m
  272 |                       t->balance = 0;[0m
  273 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mkwset.c:275:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  275 |                       abort ();[0m
      | [0;1;32m                      ^       
[0m      | [0;32m                      {       ;} 
[0m[1mkwset.c:279:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  279 |                   abort ();[0m
      | [0;1;32m                  ^       
[0m      | [0;32m                  {       ;} 
[0m[1mkwset.c:282:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |               if (dirs[depth - 1] == L)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  283 |                 links[depth - 1]->llink = t;[0m
  284 |               else[0m
      | [0;32m              } 
[0m[1mkwset.c:284:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  285 |                 links[depth - 1]->rlink = t;[0m
      | [0;1;32m                                            
[0m[1mkwset.c:294:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |   if (!trie->accepting)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  295 |     trie->accepting = 2 * kwset->words + 1;[0m
      | [0;1;32m                                           
[0m[1mkwset.c:299:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |   if (trie->depth < kwset->mind)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  300 |     kwset->mind = trie->depth;[0m
      | [0;1;32m                              
[0m[1mkwset.c:314:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |   if (!tree)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  315 |     return;[0m
      | [0;1;32m           
[0m[1mkwset.c:330:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |   if (!tree)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  331 |     return;[0m
      | [0;1;32m           
[0m[1mkwset.c:341:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |       while (cur && tree->label != cur->label)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  342 |         if (tree->label < cur->label)[0m
  343 |           cur = cur->llink;[0m
  344 |         else[0m
  345 |           cur = cur->rlink;[0m
      | [0;1;32m                           
[0m[1mkwset.c:342:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |         if (tree->label < cur->label)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  343 |           cur = cur->llink;[0m
  344 |         else[0m
      | [0;32m        } 
[0m[1mkwset.c:344:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  345 |           cur = cur->rlink;[0m
      | [0;1;32m                           
[0m[1mkwset.c:349:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |           if (!reverse && cur->trie->accepting && !tree->trie->accepting)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  350 |             tree->trie->accepting = -1;[0m
      | [0;1;32m                                       
[0m[1mkwset.c:364:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |   if (!tree)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  365 |     return;[0m
      | [0;1;32m           
[0m[1mkwset.c:368:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |   if (depth < delta[tree->label])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  369 |     delta[tree->label] = depth;[0m
      | [0;1;32m                               
[0m[1mkwset.c:376:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |   if (!b)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  377 |     return true;[0m
      | [0;1;32m                
[0m[1mkwset.c:378:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |   if (!hasevery (a, b->llink))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  379 |     return false;[0m
      | [0;1;32m                 
[0m[1mkwset.c:380:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |   if (!hasevery (a, b->rlink))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  381 |     return false;[0m
      | [0;1;32m                 
[0m[1mkwset.c:382:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |   while (a && b->label != a->label)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  383 |     if (b->label < a->label)[0m
  384 |       a = a->llink;[0m
  385 |     else[0m
  386 |       a = a->rlink;[0m
      | [0;1;32m                   
[0m[1mkwset.c:383:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |     if (b->label < a->label)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  384 |       a = a->llink;[0m
  385 |     else[0m
      | [0;32m    } 
[0m[1mkwset.c:385:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  386 |       a = a->rlink;[0m
      | [0;1;32m                   
[0m[1mkwset.c:395:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |   if (!tree)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  396 |     return;[0m
      | [0;1;32m           
[0m[1mkwset.c:419:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |       for (curr = last = kwset->trie; curr; curr = curr->next)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  420 |         enqueue (curr->links, &last);[0m
      | [0;1;32m                                     
[0m[1mkwset.c:427:30: [0m[0;1;35mwarning: [0m[1mAccess to field 'links' results in a dereference of a null pointer (loaded from variable 'curr') [clang-analyzer-core.NullDereference][0m
  427 |           kwset->target[i] = curr->links->label;[0m
      | [0;1;32m                             ^~~~
[0m[1mkwset.c:408:26: [0m[0;1;36mnote: [0mAssuming 'trans' is null[0m
  408 |   unsigned char *delta = trans ? deltabuf : kwset->delta;[0m
      | [0;1;32m                         ^~~~~
[0m[1mkwset.c:408:26: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mkwset.c:412:18: [0m[0;1;36mnote: [0mAssuming field 'words' is equal to 1[0m
  412 |   bool reverse = kwset->words == 1;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mkwset.c:414:7: [0m[0;1;36mnote: [0m'reverse' is true[0m
  414 |   if (reverse)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mkwset.c:414:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  414 |   if (reverse)[0m
      | [0;1;32m  ^
[0m[1mkwset.c:419:39: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  419 |       for (curr = last = kwset->trie; curr; curr = curr->next)[0m
      | [0;1;32m                                      ^~~~
[0m[1mkwset.c:419:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 423[0m
  419 |       for (curr = last = kwset->trie; curr; curr = curr->next)[0m
      | [0;1;32m      ^
[0m[1mkwset.c:423:23: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  423 |       kwset->target = obstack_alloc (&kwset->obstack, kwset->mind);[0m
      | [0;1;32m                      ^
[0m[1m../lib/obstack.h:402:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_alloc'[0m
  402 |        obstack_blank (__h, (length));                                         \[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m../lib/obstack.h:395:12: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_blank'[0m
  395 |        if (obstack_room (__o) < __len)                                        \[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m../lib/obstack.h:309:3: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_room'[0m
  309 |   __extension__                                                               \[0m
      | [0;1;32m  ^
[0m[1mkwset.c:423:23: [0m[0;1;36mnote: [0mTaking false branch[0m
  423 |       kwset->target = obstack_alloc (&kwset->obstack, kwset->mind);[0m
      | [0;1;32m                      ^
[0m[1m../lib/obstack.h:402:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_alloc'[0m
  402 |        obstack_blank (__h, (length));                                         \[0m
      | [0;1;32m       ^
[0m[1m../lib/obstack.h:395:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_blank'[0m
  395 |        if (obstack_room (__o) < __len)                                        \[0m
      | [0;1;32m       ^
[0m[1mkwset.c:423:23: [0m[0;1;36mnote: [0mAssuming '__value' is not equal to field 'next_free'[0m
  423 |       kwset->target = obstack_alloc (&kwset->obstack, kwset->mind);[0m
      | [0;1;32m                      ^
[0m[1m../lib/obstack.h:403:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_alloc'[0m
  403 |        obstack_finish (__h); })[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~
[0m[1m../lib/obstack.h:423:12: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_finish'[0m
  423 |        if (__o1->next_free == __value)                                        \[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mkwset.c:423:23: [0m[0;1;36mnote: [0mTaking false branch[0m
  423 |       kwset->target = obstack_alloc (&kwset->obstack, kwset->mind);[0m
      | [0;1;32m                      ^
[0m[1m../lib/obstack.h:403:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_alloc'[0m
  403 |        obstack_finish (__h); })[0m
      | [0;1;32m       ^
[0m[1m../lib/obstack.h:423:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_finish'[0m
  423 |        if (__o1->next_free == __value)                                        \[0m
      | [0;1;32m       ^
[0m[1mkwset.c:423:23: [0m[0;1;36mnote: [0m'?' condition is false[0m
  423 |       kwset->target = obstack_alloc (&kwset->obstack, kwset->mind);[0m
      | [0;1;32m                      ^
[0m[1m../lib/obstack.h:403:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_alloc'[0m
  403 |        obstack_finish (__h); })[0m
      | [0;1;32m       ^
[0m[1m../lib/obstack.h:426:12: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_finish'[0m
  426 |          = __PTR_ALIGN (__o1->object_base, __o1->next_free,                   \[0m
      | [0;1;32m           ^
[0m[1m../lib/obstack.h:151:17: [0m[0;1;36mnote: [0mexpanded from macro '__PTR_ALIGN'[0m
  151 |   __BPTR_ALIGN (sizeof (ptrdiff_t) < sizeof (void *) ? (B) : (char *) 0,      \[0m
      | [0;1;32m                ^
[0m[1mkwset.c:423:23: [0m[0;1;36mnote: [0m'?' condition is false[0m
  423 |       kwset->target = obstack_alloc (&kwset->obstack, kwset->mind);[0m
      | [0;1;32m                      ^
[0m[1m../lib/obstack.h:403:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_alloc'[0m
  403 |        obstack_finish (__h); })[0m
      | [0;1;32m       ^
[0m[1m../lib/obstack.h:426:12: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_finish'[0m
  426 |          = __PTR_ALIGN (__o1->object_base, __o1->next_free,                   \[0m
      | [0;1;32m           ^
[0m[1m../lib/obstack.h:151:17: [0m[0;1;36mnote: [0mexpanded from macro '__PTR_ALIGN'[0m
  151 |   __BPTR_ALIGN (sizeof (ptrdiff_t) < sizeof (void *) ? (B) : (char *) 0,      \[0m
      | [0;1;32m                ^
[0m[1mkwset.c:423:23: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  423 |       kwset->target = obstack_alloc (&kwset->obstack, kwset->mind);[0m
      | [0;1;32m                      ^
[0m[1m../lib/obstack.h:403:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_alloc'[0m
  403 |        obstack_finish (__h); })[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~
[0m[1m../lib/obstack.h:428:12: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_finish'[0m
  428 |        if ((size_t) (__o1->next_free - (char *) __o1->chunk)                  \[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  429 |            > (size_t) (__o1->chunk_limit - (char *) __o1->chunk))             \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mkwset.c:423:23: [0m[0;1;36mnote: [0mTaking false branch[0m
  423 |       kwset->target = obstack_alloc (&kwset->obstack, kwset->mind);[0m
      | [0;1;32m                      ^
[0m[1m../lib/obstack.h:403:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_alloc'[0m
  403 |        obstack_finish (__h); })[0m
      | [0;1;32m       ^
[0m[1m../lib/obstack.h:428:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_finish'[0m
  428 |        if ((size_t) (__o1->next_free - (char *) __o1->chunk)                  \[0m
      | [0;1;32m       ^
[0m[1mkwset.c:424:7: [0m[0;1;36mnote: [0mNull pointer value stored to 'curr'[0m
  424 |       curr = kwset->trie;[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mkwset.c:425:25: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'mind'[0m
  425 |       for (idx_t i = 0; i < kwset->mind; i++)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1mkwset.c:425:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  425 |       for (idx_t i = 0; i < kwset->mind; i++)[0m
      | [0;1;32m      ^
[0m[1mkwset.c:427:30: [0m[0;1;36mnote: [0mAccess to field 'links' results in a dereference of a null pointer (loaded from variable 'curr')[0m
  427 |           kwset->target[i] = curr->links->label;[0m
      | [0;1;32m                             ^~~~
[0m[1mkwset.c:442:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  442 |   memset (delta, MIN (kwset->mind, UCHAR_MAX), sizeof deltabuf);[0m
      | [0;1;32m  ^~~~~~
[0m[1mkwset.c:442:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  442 |   memset (delta, MIN (kwset->mind, UCHAR_MAX), sizeof deltabuf);[0m
      | [0;1;32m  ^~~~~~
[0m[1mkwset.c:470:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |               if (!hasevery (fail->links, curr->links))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  471 |                 if (curr->depth - fail->depth < fail->shift)[0m
  472 |                   fail->shift = curr->depth - fail->depth;[0m
      | [0;1;32m                                                          
[0m[1mkwset.c:471:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |                 if (curr->depth - fail->depth < fail->shift)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  472 |                   fail->shift = curr->depth - fail->depth;[0m
      | [0;1;32m                                                          
[0m[1mkwset.c:477:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |               if (curr->accepting && fail->maxshift > curr->depth - fail->depth)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  478 |                 fail->maxshift = curr->depth - fail->depth;[0m
      | [0;1;32m                                                           
[0m[1mkwset.c:489:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  489 |           if (curr->maxshift > curr->parent->maxshift)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  490 |             curr->maxshift = curr->parent->maxshift;[0m
      | [0;1;32m                                                    
[0m[1mkwset.c:491:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |           if (curr->shift > curr->maxshift)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  492 |             curr->shift = curr->maxshift;[0m
      | [0;1;32m                                         
[0m[1mkwset.c:500:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  500 |   memset (next, 0, sizeof nextbuf);[0m
      | [0;1;32m  ^~~~~~
[0m[1mkwset.c:500:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  500 |   memset (next, 0, sizeof nextbuf);[0m
      | [0;1;32m  ^~~~~~
[0m[1mkwset.c:501:13: [0m[0;1;35mwarning: [0m[1mAccess to field 'links' results in a dereference of a null pointer (loaded from field 'trie') [clang-analyzer-core.NullDereference][0m
  501 |   treenext (kwset->trie->links, next);[0m
      | [0;1;32m            ^      ~~~~
[0m[1mkwset.c:408:26: [0m[0;1;36mnote: [0mAssuming 'trans' is non-null[0m
  408 |   unsigned char *delta = trans ? deltabuf : kwset->delta;[0m
      | [0;1;32m                         ^~~~~
[0m[1mkwset.c:408:26: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mkwset.c:412:18: [0m[0;1;36mnote: [0mAssuming field 'words' is not equal to 1[0m
  412 |   bool reverse = kwset->words == 1;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mkwset.c:414:7: [0m[0;1;36mnote: [0m'reverse' is false[0m
  414 |   if (reverse)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mkwset.c:414:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  414 |   if (reverse)[0m
      | [0;1;32m  ^
[0m[1mkwset.c:442:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  442 |   memset (delta, MIN (kwset->mind, UCHAR_MAX), sizeof deltabuf);[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/param.h:102:20: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
  102 | #define MIN(a,b) (((a)<(b))?(a):(b))[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mkwset.c:442:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  442 |   memset (delta, MIN (kwset->mind, UCHAR_MAX), sizeof deltabuf);[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/param.h:102:19: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
  102 | #define MIN(a,b) (((a)<(b))?(a):(b))[0m
      | [0;1;32m                  ^
[0m[1mkwset.c:446:35: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  446 |   for (curr = last = kwset->trie; curr; curr = curr->next)[0m
      | [0;1;32m                                  ^~~~
[0m[1mkwset.c:446:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 483[0m
  446 |   for (curr = last = kwset->trie; curr; curr = curr->next)[0m
      | [0;1;32m  ^
[0m[1mkwset.c:483:7: [0m[0;1;36mnote: [0m'reverse' is false[0m
  483 |   if (reverse)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mkwset.c:483:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  483 |   if (reverse)[0m
      | [0;1;32m  ^
[0m[1mkwset.c:499:24: [0m[0;1;36mnote: [0m'trans' is non-null[0m
  499 |   struct trie **next = trans ? nextbuf : kwset->next;[0m
      | [0;1;32m                       ^~~~~
[0m[1mkwset.c:499:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mkwset.c:501:13: [0m[0;1;36mnote: [0mAccess to field 'links' results in a dereference of a null pointer (loaded from field 'trie')[0m
  501 |   treenext (kwset->trie->links, next);[0m
      | [0;1;32m            ^      ~~~~
[0m[1mkwset.c:519:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  519 |           else if (gc1 == ti)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  520 |             gc1help = gc1help == ti ? i : -1;[0m
  521 |           else if (i == ti && gc1 == gc1help)[0m
      | [0;32m          } 
[0m[1mkwset.c:521:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  521 |           else if (i == ti && gc1 == gc1help)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  522 |             gc1help = i;[0m
  523 |           else[0m
      | [0;32m          } 
[0m[1mkwset.c:523:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  524 |             gc1 = -1;[0m
      | [0;1;32m                     
[0m[1mkwset.c:561:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |   if (trans)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  562 |     for (int i = 0; i < NCHAR; ++i)[0m
  563 |       kwset->delta[i] = delta[U(trans[i])];[0m
      | [0;1;32m                                           
[0m[1mkwset.c:562:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  562 |     for (int i = 0; i < NCHAR; ++i)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  563 |       kwset->delta[i] = delta[U(trans[i])];[0m
      | [0;1;32m                                           
[0m[1mkwset.c:588:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  588 |           while (++i <= d)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  589 |             if (tr (trans, tp[-i]) != tr (trans, sp[-i]))[0m
  590 |               break;[0m
      | [0;1;32m                    
[0m[1mkwset.c:589:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |             if (tr (trans, tp[-i]) != tr (trans, sp[-i]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  590 |               break;[0m
      | [0;1;32m                    
[0m[1mkwset.c:593:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |               for (i = d + skip + 1; i <= len; ++i)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  594 |                 if (tr (trans, tp[-i]) != tr (trans, sp[-i]))[0m
  595 |                   break;[0m
      | [0;1;32m                        
[0m[1mkwset.c:594:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |                 if (tr (trans, tp[-i]) != tr (trans, sp[-i]))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  595 |                   break;[0m
      | [0;1;32m                        
[0m[1mkwset.c:605:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |       if (tp > ep)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  606 |         break;[0m
      | [0;1;32m              
[0m[1mkwset.c:609:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |           if (d1)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  610 |             tp += d1[U(tp[-1])];[0m
      | [0;1;32m                                
[0m[1mkwset.c:629:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  629 |       for (; s < slim; s++)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  630 |         if (kwset->next[U(*s)])[0m
  631 |           return s;[0m
      | [0;1;32m                   
[0m[1mkwset.c:630:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  630 |         if (kwset->next[U(*s)])[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  631 |           return s;[0m
      | [0;1;32m                   
[0m[1mkwset.c:639:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  639 |           if (kwset->next[U(*s)])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  640 |             return s;[0m
      | [0;1;32m                     
[0m[1mkwset.c:642:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |           if ((uintptr_t) s % small_bytes == 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  643 |             return memchr2 (s, kwset->gc1, kwset->gc1help, slim - s);[0m
      | [0;1;32m                                                                     
[0m[1mkwset.c:660:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  660 |   if (len == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  661 |     return 0;[0m
      | [0;1;32m             
[0m[1mkwset.c:662:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |   if (len > size)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  663 |     return -1;[0m
      | [0;1;32m              
[0m[1mkwset.c:678:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  678 |   if (!ckd_mul (&len12, len, 12) && len12 < size)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m[1mkwset.c:703:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  703 |                     if (advance_heuristic <= tp - tp0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  704 |                       continue;[0m
      | [0;1;32m                               
[0m[1mkwset.c:707:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |                     if (! tp)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  708 |                       return -1;[0m
      | [0;1;32m                                
[0m[1mkwset.c:710:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  710 |                     if (ep <= tp)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  711 |                       break;[0m
      | [0;1;32m                            
[0m[1mkwset.c:715:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |         if (bm_delta2_search (&tp, ep, sp, len, trans, gc1, gc2, d1, kwset))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  716 |           return tp - text;[0m
      | [0;1;32m                           
[0m[1mkwset.c:726:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  726 |       if (d != 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  727 |         continue;[0m
      | [0;1;32m                 
[0m[1mkwset.c:728:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  728 |       if (bm_delta2_search (&tp, ep, sp, len, trans, gc1, gc2, NULL, kwset))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  729 |         return tp - text;[0m
      | [0;1;32m                         
[0m[1mkwset.c:764:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  764 |   if (len < kwset->mind)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  765 |     return -1;[0m
      | [0;1;32m              
[0m[1mkwset.c:780:44: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'c' is used in the enclosing expression, the value is never actually read from 'c' [clang-analyzer-deadcode.DeadStores][0m
  780 |               while (! (trie = kwset->next[c = tr (trans, *tp++)]))[0m
      | [0;1;32m                                           ^   ~~~~~~~~~~~~~~~~~
[0m[1mkwset.c:780:44: [0m[0;1;36mnote: [0mAlthough the value stored to 'c' is used in the enclosing expression, the value is never actually read from 'c'[0m
  780 |               while (! (trie = kwset->next[c = tr (trans, *tp++)]))[0m
      | [0;1;32m                                           ^   ~~~~~~~~~~~~~~~~~
[0m[1mkwset.c:780:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |               while (! (trie = kwset->next[c = tr (trans, *tp++)]))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  781 |                 if (tp >= lim)[0m
  782 |                   return -1;[0m
      | [0;1;32m                            
[0m[1mkwset.c:781:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |                 if (tp >= lim)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  782 |                   return -1;[0m
      | [0;1;32m                            
[0m[1mkwset.c:787:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  787 |               if (!tp)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  788 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mkwset.c:795:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  795 |               if (trie->accepting)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  796 |                 goto match;[0m
      | [0;1;32m                           
[0m[1mkwset.c:797:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |               if (tp >= lim)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  798 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mkwset.c:810:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |                           if (trie)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  811 |                             goto have_trie;[0m
      | [0;1;32m                                           
[0m[1mkwset.c:812:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |                           if (tp >= lim)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  813 |                             return -1;[0m
      | [0;1;32m                                      
[0m[1mkwset.c:833:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |   while (accept->accepting < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  834 |     accept = accept->fail;[0m
      | [0;1;32m                          
[0m[1mkwset.c:849:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  849 |               while (tree && c != tree->label)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  850 |                 tree = c < tree->label ? tree->llink : tree->rlink;[0m
      | [0;1;32m                                                                   
[0m[1mkwset.c:854:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |           if (!tree)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  855 |             break;[0m
      | [0;1;32m                  
[0m[1mkwset.c:860:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  860 |               while (accept1->accepting < 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  861 |                 accept1 = accept1->fail;[0m
      | [0;1;32m                                        
[0m96 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[120/122][192.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp3jzu3i2a.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/src/grep.c
[1mgrep.c:140:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  140 |   for ( ; *s != '\n'; s++)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  141 |     h = h * 33 ^ *s;[0m
      | [0;1;32m                    
[0m[1mgrep.c:151:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |   for (; *p == *q; p++, q++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  152 |     if (*p == '\n')[0m
  153 |       return true;[0m
      | [0;1;32m                  
[0m[1mgrep.c:152:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |     if (*p == '\n')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  153 |       return true;[0m
      | [0;1;32m                  
[0m[1mgrep.c:177:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  177 |       memmove (dst, src, patsize);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mgrep.c:177:7: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  177 |       memmove (dst, src, patsize);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mgrep.c:184:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |           if (inserted < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  185 |             xalloc_die ();[0m
      | [0;1;32m                          
[0m[1mgrep.c:192:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |               if (patlocs_used == patlocs_allocated)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  193 |                 patloc = xpalloc (patloc, &patlocs_allocated, 1, -1,[0m
  194 |                                   sizeof *patloc);[0m
      | [0;1;32m                                                  
[0m[1mgrep.c:219:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |   for (i = 1; i < patlocs_used; i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  220 |     if (lineno < patloc[i].lineno)[0m
  221 |       break;[0m
      | [0;1;32m            
[0m[1mgrep.c:220:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |     if (lineno < patloc[i].lineno)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  221 |       break;[0m
      | [0;1;32m            
[0m[1mgrep.c:374:7: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 's') [clang-analyzer-core.NullDereference][0m
  374 |   if (*s)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1371:7: [0m[0;1;36mnote: [0mAssuming 'out_quiet' is false[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mgrep.c:1371:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1371:21: [0m[0;1;36mnote: [0mAssuming 'pending' is > 0[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m                    ^~~~~~~~~~~
[0m[1mgrep.c:1371:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1372:5: [0m[0;1;36mnote: [0mCalling 'prpending'[0m
 1372 |     prpending (beg);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~
[0m[1mgrep.c:1355:7: [0m[0;1;36mnote: [0mAssuming 'lastout' is non-null[0m
 1355 |   if (!lastout)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mgrep.c:1355:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1355 |   if (!lastout)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1357:14: [0m[0;1;36mnote: [0m'pending' is > 0[0m
 1357 |   for (; 0 < pending && lastout < lim; pending--)[0m
      | [0;1;32m             ^~~~~~~
[0m[1mgrep.c:1357:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1357 |   for (; 0 < pending && lastout < lim; pending--)[0m
      | [0;1;32m         ^
[0m[1mgrep.c:1357:25: [0m[0;1;36mnote: [0mAssuming 'lastout' is < 'lim'[0m
 1357 |   for (; 0 < pending && lastout < lim; pending--)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~
[0m[1mgrep.c:1357:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1357 |   for (; 0 < pending && lastout < lim; pending--)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1360:7: [0m[0;1;36mnote: [0mCalling 'prline'[0m
 1360 |       prline (lastout, nl + 1, SEP_CHAR_REJECTED);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1303:7: [0m[0;1;36mnote: [0mAssuming 'only_matching' is true[0m
 1303 |   if (!only_matching)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mgrep.c:1303:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1303 |   if (!only_matching)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1309:7: [0m[0;1;36mnote: [0mAssuming 'color_option' is 0[0m
 1309 |   if (color_option)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mgrep.c:1309:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1309 |   if (color_option)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1318:5: [0m[0;1;36mnote: [0mNull pointer value stored to 'line_color'[0m
 1318 |     line_color = match_color = NULL; /* Shouldn't be used.  */[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1320:8: [0m[0;1;36mnote: [0m'only_matching' is true[0m
 1320 |   if ((only_matching && matching)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mgrep.c:1320:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1320:25: [0m[0;1;36mnote: [0mAssuming 'matching' is true[0m
 1320 |   if ((only_matching && matching)[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mgrep.c:1321:7: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1321 |       || (color_option && (*line_color || *match_color)))[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1324:11: [0m[0;1;36mnote: [0m'matching' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mgrep.c:1324:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1324:24: [0m[0;1;36mnote: [0m'only_matching' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m                       ^~~~~~~~~~~~~
[0m[1mgrep.c:1324:38: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m                                     ^
[0m[1mgrep.c:1326:46: [0m[0;1;36mnote: [0mPassing null pointer value via 3rd parameter 'line_color'[0m
 1326 |           beg = print_line_middle (beg, lim, line_color, match_color);[0m
      | [0;1;32m                                             ^~~~~~~~~~
[0m[1mgrep.c:1326:17: [0m[0;1;36mnote: [0mCalling 'print_line_middle'[0m
 1326 |           beg = print_line_middle (beg, lim, line_color, match_color);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1218:9: [0m[0;1;36mnote: [0mAssuming 'cur' is < 'lim'[0m
 1218 |        (cur < lim[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mgrep.c:1218:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1219:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1219 |         && 0 <= (match_offset = execute (compiled_pattern, beg, lim - beg,[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1220 |                                          &match_size, cur)));[0m
      | [0;1;32m                                         ~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1217:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1217 |   for (cur = beg;[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1226:11: [0m[0;1;36mnote: [0mAssuming 'b' is not equal to 'lim'[0m
 1226 |       if (b == lim)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mgrep.c:1226:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1226 |       if (b == lim)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1230:11: [0m[0;1;36mnote: [0mAssuming 'match_size' is not equal to 0[0m
 1230 |       if (match_size == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mgrep.c:1230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1230 |       if (match_size == 0)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1242:15: [0m[0;1;36mnote: [0mAssuming 'only_matching' is false[0m
 1242 |           if (only_matching)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1mgrep.c:1242:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1242 |           if (only_matching)[0m
      | [0;1;32m          ^
[0m[1mgrep.c:1250:29: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 's'[0m
 1250 |               pr_sgr_start (line_color);[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mgrep.c:1250:15: [0m[0;1;36mnote: [0mCalling 'pr_sgr_start'[0m
 1250 |               pr_sgr_start (line_color);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:374:7: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 's')[0m
  374 |   if (*s)[0m
      | [0;1;32m      ^~
[0m[1mgrep.c:374:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |   if (*s)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  375 |     print_start_colorize (sgr_start, s);[0m
      | [0;1;32m                                        
[0m[1mgrep.c:380:7: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 's') [clang-analyzer-core.NullDereference][0m
  380 |   if (*s)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1371:7: [0m[0;1;36mnote: [0mAssuming 'out_quiet' is false[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mgrep.c:1371:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1371:21: [0m[0;1;36mnote: [0mAssuming 'pending' is <= 0[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m                    ^~~~~~~~~~~
[0m[1mgrep.c:1371:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1376:8: [0m[0;1;36mnote: [0m'out_quiet' is false[0m
 1376 |   if (!out_quiet)[0m
      | [0;1;32m       ^~~~~~~~~
[0m[1mgrep.c:1376:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1376 |   if (!out_quiet)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1379:24: [0m[0;1;36mnote: [0mAssuming 'lastout' is null[0m
 1379 |       char const *bp = lastout ? lastout : bufbeg;[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mgrep.c:1379:24: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mgrep.c:1381:19: [0m[0;1;36mnote: [0mAssuming 'i' is < 'out_before'[0m
 1381 |       for (i = 0; i < out_before; ++i)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~
[0m[1mgrep.c:1381:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1381 |       for (i = 0; i < out_before; ++i)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1382:13: [0m[0;1;36mnote: [0mAssuming 'p' is > 'bp'[0m
 1382 |         if (p > bp)[0m
      | [0;1;32m            ^~~~~~
[0m[1mgrep.c:1382:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1382 |         if (p > bp)[0m
      | [0;1;32m        ^
[0m[1mgrep.c:1385:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1385 |           while (p[-1] != eol);[0m
      | [0;1;32m                 ^~~~~~~~~~~~
[0m[1mgrep.c:1383:11: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1383 |           do[0m
      | [0;1;32m          ^
[0m[1mgrep.c:1381:19: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'out_before'[0m
 1381 |       for (i = 0; i < out_before; ++i)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~
[0m[1mgrep.c:1381:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1389[0m
 1381 |       for (i = 0; i < out_before; ++i)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1389:17: [0m[0;1;36mnote: [0m'out_before' is >= 0[0m
 1389 |       if ((0 <= out_before || 0 <= out_after) && used[0m
      | [0;1;32m                ^~~~~~~~~~
[0m[1mgrep.c:1389:28: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1389 |       if ((0 <= out_before || 0 <= out_after) && used[0m
      | [0;1;32m                           ^
[0m[1mgrep.c:1389:50: [0m[0;1;36mnote: [0m'used' is false[0m
 1389 |       if ((0 <= out_before || 0 <= out_after) && used[0m
      | [0;1;32m                                                 ^~~~
[0m[1mgrep.c:1390:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1390 |           && p != lastout && group_separator)[0m
      | [0;1;32m          ^
[0m[1mgrep.c:1398:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1398 |       while (p < beg)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1402:11: [0m[0;1;36mnote: [0mCalling 'prline'[0m
 1402 |           prline (p, nl, SEP_CHAR_REJECTED);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1303:7: [0m[0;1;36mnote: [0mAssuming 'only_matching' is true[0m
 1303 |   if (!only_matching)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mgrep.c:1303:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1303 |   if (!only_matching)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1309:7: [0m[0;1;36mnote: [0mAssuming 'color_option' is 0[0m
 1309 |   if (color_option)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mgrep.c:1309:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1309 |   if (color_option)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1318:18: [0m[0;1;36mnote: [0mNull pointer value stored to 'match_color'[0m
 1318 |     line_color = match_color = NULL; /* Shouldn't be used.  */[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1320:8: [0m[0;1;36mnote: [0m'only_matching' is true[0m
 1320 |   if ((only_matching && matching)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mgrep.c:1320:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1320:25: [0m[0;1;36mnote: [0mAssuming 'matching' is true[0m
 1320 |   if ((only_matching && matching)[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mgrep.c:1321:7: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1321 |       || (color_option && (*line_color || *match_color)))[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1324:11: [0m[0;1;36mnote: [0m'matching' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mgrep.c:1324:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1324:24: [0m[0;1;36mnote: [0m'only_matching' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m                       ^~~~~~~~~~~~~
[0m[1mgrep.c:1324:38: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m                                     ^
[0m[1mgrep.c:1326:58: [0m[0;1;36mnote: [0mPassing null pointer value via 4th parameter 'match_color'[0m
 1326 |           beg = print_line_middle (beg, lim, line_color, match_color);[0m
      | [0;1;32m                                                         ^~~~~~~~~~~
[0m[1mgrep.c:1326:17: [0m[0;1;36mnote: [0mCalling 'print_line_middle'[0m
 1326 |           beg = print_line_middle (beg, lim, line_color, match_color);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1218:9: [0m[0;1;36mnote: [0mAssuming 'cur' is < 'lim'[0m
 1218 |        (cur < lim[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mgrep.c:1218:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1219:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1219 |         && 0 <= (match_offset = execute (compiled_pattern, beg, lim - beg,[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1220 |                                          &match_size, cur)));[0m
      | [0;1;32m                                         ~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1217:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1217 |   for (cur = beg;[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1226:11: [0m[0;1;36mnote: [0mAssuming 'b' is not equal to 'lim'[0m
 1226 |       if (b == lim)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mgrep.c:1226:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1226 |       if (b == lim)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1230:11: [0m[0;1;36mnote: [0mAssuming 'match_size' is not equal to 0[0m
 1230 |       if (match_size == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mgrep.c:1230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1230 |       if (match_size == 0)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1242:15: [0m[0;1;36mnote: [0mAssuming 'only_matching' is true[0m
 1242 |           if (only_matching)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1mgrep.c:1242:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1242 |           if (only_matching)[0m
      | [0;1;32m          ^
[0m[1mgrep.c:1244:26: [0m[0;1;36mnote: [0mAssuming 'out_invert' is false[0m
 1244 |               char sep = out_invert ? SEP_CHAR_REJECTED : SEP_CHAR_SELECTED;[0m
      | [0;1;32m                         ^~~~~~~~~~
[0m[1mgrep.c:1244:26: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mgrep.c:1245:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1245 |               if (! print_line_head (b, match_size, lim, sep))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1245:15: [0m[0;1;36mnote: [0mTaking false branch[0m
 1245 |               if (! print_line_head (b, match_size, lim, sep))[0m
      | [0;1;32m              ^
[0m[1mgrep.c:1261:26: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 's'[0m
 1261 |           pr_sgr_end_if (match_color);[0m
      | [0;1;32m                         ^~~~~~~~~~~
[0m[1mgrep.c:1261:11: [0m[0;1;36mnote: [0mCalling 'pr_sgr_end_if'[0m
 1261 |           pr_sgr_end_if (match_color);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:392:7: [0m[0;1;36mnote: [0mAssuming 'color_option' is not equal to 0[0m
  392 |   if (color_option)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mgrep.c:392:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  392 |   if (color_option)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:393:17: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 's'[0m
  393 |     pr_sgr_end (s);[0m
      | [0;1;32m                ^
[0m[1mgrep.c:393:5: [0m[0;1;36mnote: [0mCalling 'pr_sgr_end'[0m
  393 |     pr_sgr_end (s);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mgrep.c:380:7: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 's')[0m
  380 |   if (*s)[0m
      | [0;1;32m      ^~
[0m[1mgrep.c:380:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |   if (*s)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  381 |     print_end_colorize (sgr_end);[0m
      | [0;1;32m                                 
[0m[1mgrep.c:386:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |   if (color_option)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  387 |     pr_sgr_start (s);[0m
      | [0;1;32m                     
[0m[1mgrep.c:392:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  392 |   if (color_option)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  393 |     pr_sgr_end (s);[0m
      | [0;1;32m                   
[0m[1mgrep.c:447:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |   if (putchar (c) < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  448 |     stdout_errno = errno;[0m
      | [0;1;32m                         
[0m[1mgrep.c:454:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |   if (fputs (s, stdout) < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  455 |     stdout_errno = errno;[0m
      | [0;1;32m                         
[0m[1mgrep.c:463:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |   if (vfprintf (stdout, format, ap) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  464 |     stdout_errno = errno;[0m
      | [0;1;32m                         
[0m[1mgrep.c:471:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |   if (fwrite (ptr, size, nmemb, stdout) != nmemb)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  472 |     stdout_errno = errno;[0m
      | [0;1;32m                         
[0m[1mgrep.c:478:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  478 |   if (fflush (stdout) != 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  479 |     stdout_errno = errno;[0m
      | [0;1;32m                         
[0m[1mgrep.c:655:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  655 |   if (!filename)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  656 |     filename = _("(standard input)");[0m
      | [0;1;32m                                     
[0m[1mgrep.c:664:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  664 |   if (! suppress_errors)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  665 |     error (0, errnum, "%s", input_filename ());[0m
      | [0;1;32m                                               
[0m[1mgrep.c:674:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |   if (! stdout_errno)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  675 |     close_stdout ();[0m
      | [0;1;32m                    
[0m[1mgrep.c:719:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  719 |   for (int i = 1; i <= UCHAR_MAX; i++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  720 |     if ((localeinfo.sbclen[i] != 1) & ! (mask & i))[0m
  721 |       {[0m
  722 |         while (ms1b * 2 <= i)[0m
  723 |           ms1b *= 2;[0m
  724 |         mask |= ms1b;[0m
  725 |       }[0m
      | [0;1;32m       
[0m[1mgrep.c:722:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  722 |         while (ms1b * 2 <= i)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  723 |           ms1b *= 2;[0m
      | [0;1;32m                    
[0m[1mgrep.c:745:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  745 |   for (p = buf; (uintptr_t) p % uword_size != 0; p++)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  746 |     if (to_uchar (*p) & unibyte_mask)[0m
  747 |       return p;[0m
      | [0;1;32m               
[0m[1mgrep.c:746:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  746 |     if (to_uchar (*p) & unibyte_mask)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  747 |       return p;[0m
      | [0;1;32m               
[0m[1mgrep.c:748:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |   for (s = CAST_ALIGNED (uword const *, p); ! (*s & unibyte_mask); s++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  749 |     continue;[0m
      | [0;1;32m             
[0m[1mgrep.c:750:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |   for (p = (char const *) s; ! (to_uchar (*p) & unibyte_mask); p++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  751 |     continue;[0m
      | [0;1;32m             
[0m[1mgrep.c:761:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  761 |   if (! unibyte_mask)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  762 |     return false;[0m
      | [0;1;32m                 
[0m[1mgrep.c:771:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  771 |       if (clen < 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  772 |         return true;[0m
      | [0;1;32m                    
[0m[1mgrep.c:803:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  803 |           if (cur < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  804 |             return false;[0m
      | [0;1;32m                         
[0m[1mgrep.c:811:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  811 |           if (lseek (fd, cur, SEEK_SET) < 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  812 |             suppressible_error (errno);[0m
      | [0;1;32m                                       
[0m[1mgrep.c:813:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  813 |           if (hole_start < st->st_size)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  814 |             return true;[0m
      | [0;1;32m                        
[0m[1mgrep.c:832:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  832 |       if (0 <= *out)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  833 |         break;[0m
      | [0;1;32m              
[0m[1mgrep.c:834:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  834 |       FALLTHROUGH;[0m
      | [0;1;32m      ^          
[0m      | [0;32m      {          ;} 
[0m[1m./system.h:112:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  112 | #  define FALLTHROUGH ((void) 0)[0m
      | [0;1;32m                      ^
[0m[1mgrep.c:836:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  836 |       die (EXIT_TROUBLE, 0, "%s: %s", str,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  837 |            _("invalid context length argument"));[0m
      | [0;1;32m                                                
[0m      | [0;32m                                                ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mgrep.c:856:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (! is_dir)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  857 |     pats = excluded_patterns;[0m
  858 |   else if (directories == SKIP_DIRECTORIES)[0m
      | [0;32m  } 
[0m[1mgrep.c:858:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  858 |   else if (directories == SKIP_DIRECTORIES)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  859 |     return true;[0m
  860 |   else if (command_line && omit_dot_slash)[0m
      | [0;32m  } 
[0m[1mgrep.c:860:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  860 |   else if (command_line && omit_dot_slash)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  861 |     return false;[0m
  862 |   else[0m
      | [0;32m  } 
[0m[1mgrep.c:862:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  862 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  863 |     pats = excluded_directory_patterns;[0m
      | [0;1;32m                                       
[0m[1mgrep.c:901:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  901 |   if (ckd_add (&sum, a, b))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  902 |     die (EXIT_TROUBLE, 0, _("input is too large to count"));[0m
      | [0;1;32m                                                            
[0m[1mgrep.c:910:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  910 |   for (char const *p = buf; p < buf + size; p++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  911 |     if (*p)[0m
  912 |       return false;[0m
      | [0;1;32m                   
[0m[1mgrep.c:911:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |     if (*p)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  912 |       return false;[0m
      | [0;1;32m                   
[0m[1mgrep.c:955:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  955 |   if (min_after_buflim <= buffer + bufalloc - buflim)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  956 |     readbuf = buflim;[0m
  957 |   else[0m
      | [0;32m  } 
[0m[1mgrep.c:970:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  970 |       if (incr_min <= 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  971 |         newbuf = buffer;[0m
  972 |       else[0m
      | [0;32m      } 
[0m[1mgrep.c:985:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  985 |                   && !ckd_add (&a, to_be_read, save + min_after_buflim))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  986 |                 alloc_max = MAX (a, bufalloc + incr_min);[0m
      | [0;1;32m                                                         
[0m[1mgrep.c:994:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  994 |       memmove (readbuf - moved, buflim - moved, moved);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mgrep.c:994:7: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  994 |       memmove (readbuf - moved, buflim - moved, moved);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mgrep.c:1022:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1022 |       if (((fillsize == 0) | !skip_nuls) || !all_zeros (readbuf, fillsize))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 1023 |         break;[0m
      | [0;1;32m              
[0m[1mgrep.c:1031:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1031 |               && usable_st_size (st) && bufoffset < st->st_size)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1032 |             data_start = lseek (bufdesc, 0, SEEK_END);[0m
      | [0;1;32m                                                      
[0m[1mgrep.c:1034:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1034 |           if (data_start < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1035 |             seek_data_failed = true;[0m
 1036 |           else[0m
      | [0;32m          } 
[0m[1mgrep.c:1049:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1049 |   memset (buflim, 0, uword_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mgrep.c:1049:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1049 |   memset (buflim, 0, uword_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mgrep.c:1114:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1114 |       if (!beg)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1115 |         break;[0m
      | [0;1;32m              
[0m[1mgrep.c:1176:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1176 |       if (filename_mask)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1177 |         print_sep (sep);[0m
 1178 |       else[0m
      | [0;32m      } 
[0m[1mgrep.c:1178:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1178 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1179 |         putchar_errno (0);[0m
      | [0;1;32m                          
[0m[1mgrep.c:1201:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1201 |   if (align_tabs && (out_file | out_line | out_byte) && len != 0)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1202 |     putchar_errno ('\t');[0m
      | [0;1;32m                         
[0m[1mgrep.c:1226:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1226 |       if (b == lim)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1227 |         break;[0m
      | [0;1;32m              
[0m[1mgrep.c:1235:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1235 |           if (!mid)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1236 |             mid = cur;[0m
      | [0;1;32m                      
[0m[1mgrep.c:1245:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1245 |               if (! print_line_head (b, match_size, lim, sep))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1246 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mgrep.c:1262:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1262 |           if (only_matching)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1263 |             putchar_errno (eolbyte);[0m
      | [0;1;32m                                    
[0m[1mgrep.c:1267:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1267 |   if (only_matching)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1268 |     cur = lim;[0m
 1269 |   else if (mid)[0m
      | [0;32m  } 
[0m[1mgrep.c:1269:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1269 |   else if (mid)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1270 |     cur = mid;[0m
      | [0;1;32m              
[0m[1mgrep.c:1303:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1303 |   if (!only_matching)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1304 |     if (! print_line_head (beg, lim - beg - 1, lim, sep))[0m
 1305 |       return;[0m
      | [0;1;32m             
[0m[1mgrep.c:1304:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1304 |     if (! print_line_head (beg, lim - beg - 1, lim, sep))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1305 |       return;[0m
      | [0;1;32m             
[0m[1mgrep.c:1317:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1317 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1318 |     line_color = match_color = NULL; /* Shouldn't be used.  */[0m
      | [0;1;32m                                                              
[0m[1mgrep.c:1327:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1327 |           if (! beg)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1328 |             return;[0m
      | [0;1;32m                   
[0m[1mgrep.c:1331:29: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'line_color') [clang-analyzer-core.NullDereference][0m
 1331 |       if (!only_matching && *line_color)[0m
      | [0;1;32m                            ^
[0m[1mgrep.c:1371:7: [0m[0;1;36mnote: [0mAssuming 'out_quiet' is false[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mgrep.c:1371:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1371:21: [0m[0;1;36mnote: [0mAssuming 'pending' is <= 0[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m                    ^~~~~~~~~~~
[0m[1mgrep.c:1371:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1376:8: [0m[0;1;36mnote: [0m'out_quiet' is false[0m
 1376 |   if (!out_quiet)[0m
      | [0;1;32m       ^~~~~~~~~
[0m[1mgrep.c:1376:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1376 |   if (!out_quiet)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1379:24: [0m[0;1;36mnote: [0mAssuming 'lastout' is non-null[0m
 1379 |       char const *bp = lastout ? lastout : bufbeg;[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mgrep.c:1379:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mgrep.c:1381:19: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'out_before'[0m
 1381 |       for (i = 0; i < out_before; ++i)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~
[0m[1mgrep.c:1381:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1389[0m
 1381 |       for (i = 0; i < out_before; ++i)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1389:12: [0m[0;1;36mnote: [0mAssuming 'out_before' is < 0[0m
 1389 |       if ((0 <= out_before || 0 <= out_after) && used[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mgrep.c:1389:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mgrep.c:1389:31: [0m[0;1;36mnote: [0mAssuming 'out_after' is < 0[0m
 1389 |       if ((0 <= out_before || 0 <= out_after) && used[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mgrep.c:1389:47: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1389 |       if ((0 <= out_before || 0 <= out_after) && used[0m
      | [0;1;32m                                              ^
[0m[1mgrep.c:1398:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1407[0m
 1398 |       while (p < beg)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1408:7: [0m[0;1;36mnote: [0mAssuming 'out_invert' is false[0m
 1408 |   if (out_invert)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mgrep.c:1408:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1408 |   if (out_invert)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1423:12: [0m[0;1;36mnote: [0m'out_quiet' is false[0m
 1423 |       if (!out_quiet)[0m
      | [0;1;32m           ^~~~~~~~~
[0m[1mgrep.c:1423:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1423 |       if (!out_quiet)[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1424:9: [0m[0;1;36mnote: [0mCalling 'prline'[0m
 1424 |         prline (beg, lim, SEP_CHAR_SELECTED);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1303:7: [0m[0;1;36mnote: [0mAssuming 'only_matching' is true[0m
 1303 |   if (!only_matching)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mgrep.c:1303:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1303 |   if (!only_matching)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1309:7: [0m[0;1;36mnote: [0mAssuming 'color_option' is 0[0m
 1309 |   if (color_option)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mgrep.c:1309:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1309 |   if (color_option)[0m
      | [0;1;32m  ^
[0m[1mgrep.c:1318:5: [0m[0;1;36mnote: [0mNull pointer value stored to 'line_color'[0m
 1318 |     line_color = match_color = NULL; /* Shouldn't be used.  */[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mgrep.c:1320:8: [0m[0;1;36mnote: [0m'only_matching' is true[0m
 1320 |   if ((only_matching && matching)[0m
      | [0;1;32m       ^~~~~~~~~~~~~
[0m[1mgrep.c:1320:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1320:25: [0m[0;1;36mnote: [0m'matching' is true[0m
 1320 |   if ((only_matching && matching)[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mgrep.c:1321:7: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1321 |       || (color_option && (*line_color || *match_color)))[0m
      | [0;1;32m      ^
[0m[1mgrep.c:1324:11: [0m[0;1;36mnote: [0m'matching' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mgrep.c:1324:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1324:24: [0m[0;1;36mnote: [0m'only_matching' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m                       ^~~~~~~~~~~~~
[0m[1mgrep.c:1324:38: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1324 |       if (matching && (only_matching || *match_color))[0m
      | [0;1;32m                                     ^
[0m[1mgrep.c:1327:15: [0m[0;1;36mnote: [0mAssuming 'beg' is non-null[0m
 1327 |           if (! beg)[0m
      | [0;1;32m              ^~~~~
[0m[1mgrep.c:1327:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1327 |           if (! beg)[0m
      | [0;1;32m          ^
[0m[1mgrep.c:1331:11: [0m[0;1;36mnote: [0mAssuming 'only_matching' is false[0m
 1331 |       if (!only_matching && *line_color)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1mgrep.c:1331:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mgrep.c:1331:29: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'line_color')[0m
 1331 |       if (!only_matching && *line_color)[0m
      | [0;1;32m                            ^~~~~~~~~~~
[0m[1mgrep.c:1339:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1339 |   if (!only_matching && lim > beg)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1340 |     fwrite_errno (beg, 1, lim - beg);[0m
      | [0;1;32m                                     
[0m[1mgrep.c:1342:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1342 |   if (line_buffered)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1343 |     fflush_errno ();[0m
      | [0;1;32m                    
[0m[1mgrep.c:1345:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1345 |   if (stdout_errno)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1346 |     die (EXIT_TROUBLE, stdout_errno, _("write error"));[0m
      | [0;1;32m                                                       
[0m[1mgrep.c:1355:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1355 |   if (!lastout)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1356 |     lastout = bufbeg;[0m
      | [0;1;32m                     
[0m[1mgrep.c:1371:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1371 |   if (!out_quiet && pending > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1372 |     prpending (beg);[0m
      | [0;1;32m                    
[0m[1mgrep.c:1381:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1381 |       for (i = 0; i < out_before; ++i)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1382 |         if (p > bp)[0m
 1383 |           do[0m
 1384 |             --p;[0m
 1385 |           while (p[-1] != eol);[0m
      | [0;1;32m                               
[0m[1mgrep.c:1382:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1382 |         if (p > bp)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1383 |           do[0m
 1384 |             --p;[0m
 1385 |           while (p[-1] != eol);[0m
      | [0;1;32m                               
[0m[1mgrep.c:1383:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1383 |           do[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1384 |             --p;[0m
 1385 |           while (p[-1] != eol);[0m
      | [0;32m          } 
[0m[1mgrep.c:1415:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1415 |           if (!out_quiet)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1416 |             prline (p, nl, SEP_CHAR_SELECTED);[0m
      | [0;1;32m                                              
[0m[1mgrep.c:1423:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1423 |       if (!out_quiet)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1424 |         prline (beg, lim, SEP_CHAR_SELECTED);[0m
      | [0;1;32m                                             
[0m[1mgrep.c:1442:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1442 |   if (eol)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1443 |     while (true)[0m
 1444 |       {[0m
 1445 |         *lim = '\0';[0m
 1446 |         p += strlen (p);[0m
 1447 |         *lim = eol;[0m
 1448 |         if (p == lim)[0m
 1449 |           break;[0m
 1450 |         do[0m
 1451 |           *p++ = eol;[0m
 1452 |         while (!*p);[0m
 1453 |       }[0m
      | [0;1;32m       
[0m[1mgrep.c:1448:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1448 |         if (p == lim)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1449 |           break;[0m
      | [0;1;32m                
[0m[1mgrep.c:1450:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1450 |         do[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1451 |           *p++ = eol;[0m
 1452 |         while (!*p);[0m
      | [0;32m        } 
[0m[1mgrep.c:1472:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1472 |           if (!out_invert)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1473 |             break;[0m
      | [0;1;32m                  
[0m[1mgrep.c:1480:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1480 |       if (!out_invert && b == lim)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1481 |         break;[0m
      | [0;1;32m              
[0m[1mgrep.c:1489:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1489 |               if (exit_on_match)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1490 |                 exit (errseen ? exit_failure : EXIT_SUCCESS);[0m
      | [0;1;32m                                                             
[0m[1mgrep.c:1519:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1519 |   if (! reset (fd, st))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1520 |     return 0;[0m
      | [0;1;32m             
[0m[1mgrep.c:1547:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1547 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1548 |         offset_width++;[0m
 1549 |       while ((num /= 10) != 0);[0m
      | [0;32m      } 
[0m[1mgrep.c:1558:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1558 |           if (binary_files == WITHOUT_MATCH_BINARY_FILES)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1559 |             return 0;[0m
      | [0;1;32m                     
[0m[1mgrep.c:1560:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1560 |           if (!count_matches)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1561 |             done_on_match = out_quiet = true;[0m
      | [0;1;32m                                             
[0m[1mgrep.c:1568:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1568 |       if (lastout)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1569 |         lastout = bufbeg;[0m
      | [0;1;32m                         
[0m[1mgrep.c:1591:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1591 |       if (lim == beg)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1592 |         lim = beg - residue;[0m
      | [0;1;32m                            
[0m[1mgrep.c:1598:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1598 |           if (outleft)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1599 |             nlines += grepbuf (beg, lim);[0m
      | [0;1;32m                                         
[0m[1mgrep.c:1600:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1600 |           if (pending)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1601 |             prpending (lim);[0m
      | [0;1;32m                            
[0m[1mgrep.c:1603:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1603 |               || (done_on_match && MAX (0, nlines_first_null) < nlines))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1604 |             goto finish_grep;[0m
      | [0;1;32m                             
[0m[1mgrep.c:1615:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1615 |           do[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1616 |             --beg;[0m
 1617 |           while (beg[-1] != eol);[0m
      | [0;32m          } 
[0m[1mgrep.c:1621:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1621 |       if (beg != lastout)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1622 |         lastout = 0;[0m
      | [0;1;32m                    
[0m[1mgrep.c:1626:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1626 |       if (out_byte)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1627 |         totalcc = add_count (totalcc, buflim - bufbeg - save);[0m
      | [0;1;32m                                                              
[0m[1mgrep.c:1628:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1628 |       if (out_line)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1629 |         nlscan (beg);[0m
      | [0;1;32m                     
[0m[1mgrep.c:1639:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1639 |       if (outleft)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1640 |         nlines += grepbuf (bufbeg + save - residue, buflim);[0m
      | [0;1;32m                                                            
[0m[1mgrep.c:1641:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1641 |       if (pending)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1642 |         prpending (buflim);[0m
      | [0;1;32m                           
[0m[1mgrep.c:1650:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1650 |           || (0 <= nlines_first_null && nlines_first_null < nlines)))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1651 |     error (0, 0, _("%s: binary file matches"), input_filename ());[0m
      | [0;1;32m                                                                  
[0m[1mgrep.c:1661:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1661 |   if (ent->fts_info == FTS_DP)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1662 |     return true;[0m
      | [0;1;32m                
[0m[1mgrep.c:1674:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1674 |   if (omit_dot_slash && filename[1])[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1675 |     filename += 2;[0m
      | [0;1;32m                  
[0m[1mgrep.c:1682:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1682 |       if (directories == RECURSE_DIRECTORIES)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1683 |         return true;[0m
 1684 |       fts_set (fts, ent, FTS_SKIP);[0m
 1685 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mgrep.c:1682:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1682 |       if (directories == RECURSE_DIRECTORIES)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1683 |         return true;[0m
      | [0;1;32m                    
[0m[1mgrep.c:1688:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1688 |       if (!suppress_errors)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1689 |         error (0, 0, _("%s: warning: recursive directory loop"), filename);[0m
 1690 |       return true;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mgrep.c:1688:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1688 |       if (!suppress_errors)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1689 |         error (0, 0, _("%s: warning: recursive directory loop"), filename);[0m
      | [0;1;32m                                                                           
[0m[1mgrep.c:1696:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1696 |       return true;[0m
      | [0;1;32m      ^          
[0m      | [0;32m      {          ;} 
[0m[1mgrep.c:1717:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1717 |           if (is_device_mode (st->st_mode))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1718 |             return true;[0m
      | [0;1;32m                        
[0m[1mgrep.c:1720:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1720 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mgrep.c:1731:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1731 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mgrep.c:1742:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1742 |   if (err == ELOOP || err == EMLINK)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1743 |     return true;[0m
      | [0;1;32m                
[0m[1mgrep.c:1762:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1762 |       if (follow || ! open_symlink_nofollow_error (errno))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1763 |         suppressible_error (errno);[0m
      | [0;1;32m                                   
[0m[1mgrep.c:1783:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1783 |           while (0 < nbytes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1784 |             nbytes = splice (fd, NULL, STDOUT_FILENO, NULL,[0m
 1785 |                              INITIAL_BUFSIZE, SPLICE_F_MOVE);[0m
      | [0;1;32m                                                             
[0m[1mgrep.c:1790:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1790 |   while ((nbytes = safe_read (fd, buffer, bufalloc)))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1791 |     if (nbytes == SAFE_READ_ERROR)[0m
 1792 |       return false;[0m
      | [0;1;32m                   
[0m[1mgrep.c:1791:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1791 |     if (nbytes == SAFE_READ_ERROR)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1792 |       return false;[0m
      | [0;1;32m                   
[0m[1mgrep.c:1813:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1813 |              && lseek (fd, after_last_match, SEEK_SET) < 0)))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1814 |     suppressible_error (errno);[0m
      | [0;1;32m                               
[0m[1mgrep.c:1838:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1838 |       && is_device_mode (st.st_mode))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1839 |     goto closeout;[0m
      | [0;1;32m                  
[0m[1mgrep.c:1842:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1842 |       && skipped_file (filename, true, S_ISDIR (st.st_mode) != 0))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1843 |     goto closeout;[0m
      | [0;1;32m                  
[0m[1mgrep.c:1846:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1846 |   if (out_file < 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1847 |     out_file = !!S_ISDIR (st.st_mode);[0m
      | [0;1;32m                                      
[0m[1mgrep.c:1863:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1863 |       if (close (desc) != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1864 |         suppressible_error (errno);[0m
      | [0;1;32m                                   
[0m[1mgrep.c:1870:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1870 |       if (!fts)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1871 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mgrep.c:1872:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1872 |       while ((ent = fts_read (fts)))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1873 |         status &= grepdirent (fts, ent, command_line);[0m
      | [0;1;32m                                                      
[0m[1mgrep.c:1874:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1874 |       if (errno)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1875 |         suppressible_error (errno);[0m
      | [0;1;32m                                   
[0m[1mgrep.c:1876:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1876 |       if (fts_close (fts) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1877 |         suppressible_error (errno);[0m
      | [0;1;32m                                   
[0m[1mgrep.c:1884:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1884 |               && is_device_mode (st.st_mode))))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1885 |     goto closeout;[0m
      | [0;1;32m                  
[0m[1mgrep.c:1908:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1908 |       if (! suppress_errors)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1909 |         error (0, 0, _("%s: input file is also the output"), input_filename ());[0m
      | [0;1;32m                                                                                
[0m[1mgrep.c:1920:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1920 |           if (filename_mask)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1921 |             print_sep (SEP_CHAR_SELECTED);[0m
 1922 |           else[0m
      | [0;32m          } 
[0m[1mgrep.c:1922:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1922 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1923 |             putchar_errno (0);[0m
      | [0;1;32m                              
[0m[1mgrep.c:1926:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1926 |       if (line_buffered)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1927 |         fflush_errno ();[0m
      | [0;1;32m                        
[0m[1mgrep.c:1932:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1932 |   if (list_files == LISTFILES_NONE)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1933 |     finalize_input (desc, &st, ineof);[0m
 1934 |   else if (list_files == (status ? LISTFILES_NONMATCHING : LISTFILES_MATCHING))[0m
      | [0;32m  } 
[0m[1mgrep.c:1938:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1938 |       if (line_buffered)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1939 |         fflush_errno ();[0m
      | [0;1;32m                        
[0m[1mgrep.c:1943:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1943 |   if (desc != STDIN_FILENO && close (desc) != 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1944 |     suppressible_error (errno);[0m
      | [0;1;32m                               
[0m[1mgrep.c:1954:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1954 |       if (binary)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1955 |         xset_binary_mode (STDIN_FILENO, O_BINARY);[0m
      | [0;1;32m                                                  
[0m[1mgrep.c:1971:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1971 |       fprintf (stderr, _("Usage: %s [OPTION]... PATTERNS [FILE]...\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mgrep.c:1971:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1971 |       fprintf (stderr, _("Usage: %s [OPTION]... PATTERNS [FILE]...\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mgrep.c:1973:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1973 |       fprintf (stderr, _("Try '%s --help' for more information.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mgrep.c:1973:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1973 |       fprintf (stderr, _("Try '%s --help' for more information.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mgrep.c:2100:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2100 |   for (int i = 0; i < sizeof matchers / sizeof *matchers; i++)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2101 |     if (STREQ (m, matchers[i].name))[0m
 2102 |       {[0m
 2103 |         if (0 <= matcher && matcher != i)[0m
 2104 |           die (EXIT_TROUBLE, 0, _("conflicting matchers specified"));[0m
 2105 |         return i;[0m
 2106 |       }[0m
      | [0;1;32m       
[0m[1mgrep.c:2103:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2103 |         if (0 <= matcher && matcher != i)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2104 |           die (EXIT_TROUBLE, 0, _("conflicting matchers specified"));[0m
      | [0;1;32m                                                                     
[0m[1mgrep.c:2136:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2136 |       if (! c_isdigit (opt))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2137 |         break;[0m
      | [0;1;32m              
[0m[1mgrep.c:2156:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2156 |           strcpy (p, "...");[0m
      | [0;1;32m          ^~~~~~
[0m[1mgrep.c:2156:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2156 |           strcpy (p, "...");[0m
      | [0;1;32m          ^~~~~~
[0m[1mgrep.c:2188:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2188 |   if (p == NULL || *p == '\0')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2189 |     return;[0m
      | [0;1;32m           
[0m[1mgrep.c:2197:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2197 |   for (;;)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m[1mgrep.c:2206:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2206 |         for (cap = color_dict; cap->name; cap++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2207 |           if (STREQ (cap->name, name))[0m
 2208 |             break;[0m
      | [0;1;32m                  
[0m[1mgrep.c:2207:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2207 |           if (STREQ (cap->name, name))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2208 |             break;[0m
      | [0;1;32m                  
[0m[1mgrep.c:2210:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2210 |         if (cap->var && val)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2211 |           *(cap->var) = val;[0m
      | [0;1;32m                            
[0m[1mgrep.c:2212:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2212 |         if (cap->fct)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2213 |           cap->fct ();[0m
      | [0;1;32m                      
[0m[1mgrep.c:2214:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2214 |         if (c == '\0')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2215 |           return;[0m
      | [0;1;32m                 
[0m[1mgrep.c:2221:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2221 |         if (q == name || val)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2222 |           return;[0m
      | [0;1;32m                 
[0m[1mgrep.c:2226:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2226 |     else if (val == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2227 |       q++; /* Accumulate name.  */[0m
 2228 |     else if (*q == ';' || c_isdigit (*q))[0m
      | [0;32m    } 
[0m[1mgrep.c:2228:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2228 |     else if (*q == ';' || c_isdigit (*q))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2229 |       q++; /* Accumulate val.  Protect the terminal from being sent crap.  */[0m
 2230 |     else[0m
      | [0;32m    } 
[0m[1mgrep.c:2230:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2230 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 2231 |       return;[0m
      | [0;1;32m             
[0m[1mgrep.c:2244:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2244 |       if (charlen < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2245 |         return true;[0m
      | [0;1;32m                    
[0m[1mgrep.c:2260:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2260 |       if (wi == WEOF)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2261 |         continue;[0m
      | [0;1;32m                 
[0m[1mgrep.c:2291:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2291 |   if (localeinfo.sbctowc[pat0] != WEOF)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2292 |     return ok_fold[pat0];[0m
      | [0;1;32m                         
[0m[1mgrep.c:2298:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2298 |   if (MB_LEN_MAX < wn)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2299 |     return -1;[0m
      | [0;1;32m              
[0m[1mgrep.c:2305:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2305 |   if (case_folded_counterparts (wc, folded))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2306 |     return -1;[0m
      | [0;1;32m              
[0m[1mgrep.c:2310:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2310 |       if (toupper (c) != c)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2311 |         return -1;[0m
      | [0;1;32m                  
[0m[1mgrep.c:2329:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2329 |       if (n < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2330 |         return false;[0m
      | [0;1;32m                     
[0m[1mgrep.c:2354:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2354 |           n = len;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2355 |           FALLTHROUGH;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mgrep.c:2357:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2357 |           p = mempcpy (p, keys, n);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2358 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mgrep.c:2361:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2361 |           memset (&mb_state, 0, sizeof mb_state);[0m
      | [0;1;32m          ^~~~~~
[0m[1mgrep.c:2361:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2361 |           memset (&mb_state, 0, sizeof mb_state);[0m
      | [0;1;32m          ^~~~~~
[0m[1mgrep.c:2361:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2361 |           memset (&mb_state, 0, sizeof mb_state);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2362 |           n = 1;[0m
 2363 |           FALLTHROUGH;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mgrep.c:2365:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2365 |           switch (*keys)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2366 |             {[0m
 2367 |             case '$': case '*': case '.': case '[': case '\\': case '^':[0m
 2368 |               *p++ = '\\'; break;[0m
 2369 |             }[0m
 2370 |           *p++ = *keys;[0m
 2371 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mgrep.c:2368:28: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2368 |               *p++ = '\\'; break;[0m
      | [0;1;32m                           ^    
[0m      | [0;32m                           {    ;} 
[0m[1mgrep.c:2408:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2408 |           if (matcher != G_MATCHER_INDEX)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2409 |             goto fail;[0m
      | [0;1;32m                      
[0m[1mgrep.c:2410:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2410 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mgrep.c:2413:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2413 |           if (1 < len)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mgrep.c:2413:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2413 |           if (1 < len)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m[1mgrep.c:2428:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2428 |                 if (matcher == G_MATCHER_INDEX)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2429 |                   goto fail;[0m
      | [0;1;32m                            
[0m[1mgrep.c:2430:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2430 |                 FALLTHROUGH;[0m
      | [0;1;32m                ^          
[0m      | [0;32m                {          ;} 
[0m[1m./system.h:112:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  112 | #  define FALLTHROUGH ((void) 0)[0m
      | [0;1;32m                      ^
[0m[1mgrep.c:2432:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2432 |                 q++, len--;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2433 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mgrep.c:2441:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2441 |       if (clen < 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2442 |         goto fail;[0m
      | [0;1;32m                  
[0m[1mgrep.c:2507:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2507 |   if (!pattern_table)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2508 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mgrep.c:2511:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2511 |          (opt = get_nondigit_option (argc, argv, &default_context)) != -1)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m[1mgrep.c:2515:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2515 |         context_length_arg (optarg, &out_after);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2516 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2519:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2519 |         context_length_arg (optarg, &out_before);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2520 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2525:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2525 |         context_length_arg (optarg, &default_context);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2526 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2529:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2529 |         if (STREQ (optarg, "read"))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2530 |           devices = READ_DEVICES;[0m
 2531 |         else if (STREQ (optarg, "skip"))[0m
 2532 |           devices = SKIP_DEVICES;[0m
 2533 |         else[0m
 2534 |           die (EXIT_TROUBLE, 0, _("unknown devices method"));[0m
 2535 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2529:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2529 |         if (STREQ (optarg, "read"))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2530 |           devices = READ_DEVICES;[0m
 2531 |         else if (STREQ (optarg, "skip"))[0m
      | [0;32m        } 
[0m[1mgrep.c:2531:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2531 |         else if (STREQ (optarg, "skip"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2532 |           devices = SKIP_DEVICES;[0m
 2533 |         else[0m
      | [0;32m        } 
[0m[1mgrep.c:2533:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2533 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2534 |           die (EXIT_TROUBLE, 0, _("unknown devices method"));[0m
      | [0;1;32m                                                             
[0m[1mgrep.c:2538:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2538 |         matcher = setmatcher ("egrep", matcher);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2539 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2542:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2542 |         matcher = setmatcher ("fgrep", matcher);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2543 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2546:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2546 |         matcher = setmatcher ("perl", matcher);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2547 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2550:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2550 |         matcher = setmatcher ("grep", matcher);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2551 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2554:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2554 |         matcher = setmatcher (optarg, matcher);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2555 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2558:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2558 |         filename_option = 1;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2559 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2562:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2562 |         binary_files = WITHOUT_MATCH_BINARY_FILES;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2563 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2566:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2566 |         align_tabs = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2567 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2570:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2570 |         if (O_BINARY)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2571 |           binary = true;[0m
 2572 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2570:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2570 |         if (O_BINARY)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2571 |           binary = true;[0m
      | [0;1;32m                        
[0m[1mgrep.c:2576:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2576 |         error (0, 0, _("warning: --unix-byte-offsets (-u) is obsolete"));[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2577 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2580:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2580 |         show_version = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2581 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2584:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2584 |         binary_files = TEXT_BINARY_FILES;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2585 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2588:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2588 |         out_byte = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2589 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2592:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2592 |         count_matches = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2593 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2596:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2596 |         directories = XARGMATCH ("--directories", optarg,[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2597 |                                  directories_args, directories_types);[0m
 2598 |         if (directories == RECURSE_DIRECTORIES)[0m
 2599 |           last_recursive = prev_optind;[0m
 2600 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2598:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2598 |         if (directories == RECURSE_DIRECTORIES)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2599 |           last_recursive = prev_optind;[0m
      | [0;1;32m                                       
[0m[1mgrep.c:2603:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2603 |         {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2604 |           idx_t cc = strlen (optarg);[0m
 2605 |           ptrdiff_t shortage = keycc - keyalloc + cc + 1;[0m
 2606 |           if (0 < shortage)[0m
 2607 |             pattern_array = keys = xpalloc (keys, &keyalloc, shortage, -1, 1);[0m
 2608 |           char *keyend = mempcpy (keys + keycc, optarg, cc);[0m
 2609 |           *keyend = '\n';[0m
 2610 |           keycc = update_patterns (keys, keycc, keycc + cc + 1, "");[0m
 2611 |         }[0m
 2612 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2606:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2606 |           if (0 < shortage)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2607 |             pattern_array = keys = xpalloc (keys, &keyalloc, shortage, -1, 1);[0m
      | [0;1;32m                                                                              
[0m[1mgrep.c:2615:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2615 |         {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mgrep.c:2618:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2618 |               if (binary)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2619 |                 xset_binary_mode (STDIN_FILENO, O_BINARY);[0m
      | [0;1;32m                                                          
[0m[1mgrep.c:2625:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2625 |               if (!fp)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2626 |                 die (EXIT_TROUBLE, errno, "%s", optarg);[0m
      | [0;1;32m                                                        
[0m[1mgrep.c:2632:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2632 |               if (0 < shortage)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2633 |                 pattern_array = keys = xpalloc (keys, &keyalloc,[0m
 2634 |                                                 shortage, -1, 1);[0m
      | [0;1;32m                                                                 
[0m[1mgrep.c:2636:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2636 |               if (cc == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2637 |                 break;[0m
      | [0;1;32m                      
[0m[1mgrep.c:2643:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2643 |               if (fp == stdin)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2644 |                 clearerr (fp);[0m
 2645 |               else if (fclose (fp) != 0)[0m
      | [0;32m              } 
[0m[1mgrep.c:2645:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2645 |               else if (fclose (fp) != 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2646 |                 err = errno;[0m
      | [0;1;32m                            
[0m[1mgrep.c:2648:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2648 |           if (err)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2649 |             die (EXIT_TROUBLE, err, "%s", optarg);[0m
      | [0;1;32m                                                  
[0m[1mgrep.c:2651:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2651 |           if (newkeycc != keycc && keys[newkeycc - 1] != '\n')[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2652 |             keys[newkeycc++] = '\n';[0m
      | [0;1;32m                                    
[0m[1mgrep.c:2658:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2658 |         filename_option = -1;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2659 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2664:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2664 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mgrep.c:2667:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2667 |         match_icase = false;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2668 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2673:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2673 |         list_files = LISTFILES_NONMATCHING;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2674 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2677:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2677 |         list_files = LISTFILES_MATCHING;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2678 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2681:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2681 |         switch (xstrtoimax (optarg, 0, 10, &max_count, ""))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2682 |           {[0m
 2683 |           case LONGINT_OK:[0m
 2684 |           case LONGINT_OVERFLOW:[0m
 2685 |             break;[0m
 2686 | [0m
 2687 |           default:[0m
 2688 |             die (EXIT_TROUBLE, 0, _("invalid max count"));[0m
 2689 |           }[0m
 2690 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2688:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2688 |             die (EXIT_TROUBLE, 0, _("invalid max count"));[0m
      | [0;1;32m            ^                                            
[0m      | [0;32m            {                                            ;} 
[0m[1m./die.h:28:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   28 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../lib/verify.h:319:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  319 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mgrep.c:2693:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2693 |         out_line = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2694 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2697:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2697 |         only_matching = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2698 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2701:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2701 |         exit_on_match = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2702 |         exit_failure = 0;[0m
 2703 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2706:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2706 |         fts_options = basic_fts_options | FTS_LOGICAL;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2707 |         FALLTHROUGH;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mgrep.c:2709:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2709 |         directories = RECURSE_DIRECTORIES;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2710 |         last_recursive = prev_optind;[0m
 2711 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2714:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2714 |         suppress_errors = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2715 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2718:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2718 |         out_invert = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2719 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2722:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2722 |         wordinit ();[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2723 |         match_words = true;[0m
 2724 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2727:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2727 |         match_lines = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2728 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2731:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2731 |         filename_mask = 0;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2732 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2735:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2735 |         eolbyte = '\0';[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2736 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2739:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2739 |         if (STREQ (optarg, "binary"))[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2740 |           binary_files = BINARY_BINARY_FILES;[0m
 2741 |         else if (STREQ (optarg, "text"))[0m
 2742 |           binary_files = TEXT_BINARY_FILES;[0m
 2743 |         else if (STREQ (optarg, "without-match"))[0m
 2744 |           binary_files = WITHOUT_MATCH_BINARY_FILES;[0m
 2745 |         else[0m
 2746 |           die (EXIT_TROUBLE, 0, _("unknown binary-files type"));[0m
 2747 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2739:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2739 |         if (STREQ (optarg, "binary"))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2740 |           binary_files = BINARY_BINARY_FILES;[0m
 2741 |         else if (STREQ (optarg, "text"))[0m
      | [0;32m        } 
[0m[1mgrep.c:2741:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2741 |         else if (STREQ (optarg, "text"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2742 |           binary_files = TEXT_BINARY_FILES;[0m
 2743 |         else if (STREQ (optarg, "without-match"))[0m
      | [0;32m        } 
[0m[1mgrep.c:2743:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2743 |         else if (STREQ (optarg, "without-match"))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2744 |           binary_files = WITHOUT_MATCH_BINARY_FILES;[0m
 2745 |         else[0m
      | [0;32m        } 
[0m[1mgrep.c:2745:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2745 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2746 |           die (EXIT_TROUBLE, 0, _("unknown binary-files type"));[0m
      | [0;1;32m                                                                
[0m[1mgrep.c:2750:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2750 |         if (optarg)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mgrep.c:2754:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2754 |                 || !c_strcasecmp (optarg, "force"))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2755 |               color_option = 1;[0m
 2756 |             else if (!c_strcasecmp (optarg, "never")[0m
      | [0;32m            } 
[0m[1mgrep.c:2758:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2758 |                      || !c_strcasecmp (optarg, "none"))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2759 |               color_option = 0;[0m
 2760 |             else if (!c_strcasecmp (optarg, "auto")[0m
      | [0;32m            } 
[0m[1mgrep.c:2762:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2762 |                      || !c_strcasecmp (optarg, "if-tty"))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2763 |               color_option = 2;[0m
 2764 |             else[0m
      | [0;32m            } 
[0m[1mgrep.c:2764:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2764 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2765 |               show_help = 1;[0m
      | [0;1;32m                            
[0m[1mgrep.c:2767:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2767 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2768 |           color_option = 2;[0m
      | [0;1;32m                           
[0m[1mgrep.c:2775:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2775 |             if (!excluded_patterns[cmd])[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2776 |               excluded_patterns[cmd] = new_exclude ();[0m
      | [0;1;32m                                                      
[0m[1mgrep.c:2781:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2781 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mgrep.c:2783:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2783 |         for (int cmd = 0; cmd < 2; cmd++)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2784 |           {[0m
 2785 |             if (!excluded_patterns[cmd])[0m
 2786 |               excluded_patterns[cmd] = new_exclude ();[0m
 2787 |             if (add_exclude_file (add_exclude, excluded_patterns[cmd],[0m
 2788 |                                   optarg, exclude_options (cmd), '\n')[0m
 2789 |                 != 0)[0m
 2790 |               die (EXIT_TROUBLE, errno, "%s", optarg);[0m
 2791 |           }[0m
 2792 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2785:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2785 |             if (!excluded_patterns[cmd])[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2786 |               excluded_patterns[cmd] = new_exclude ();[0m
      | [0;1;32m                                                      
[0m[1mgrep.c:2789:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2789 |                 != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2790 |               die (EXIT_TROUBLE, errno, "%s", optarg);[0m
      | [0;1;32m                                                      
[0m[1mgrep.c:2795:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2795 |         strip_trailing_slashes (optarg);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2796 |         for (int cmd = 0; cmd < 2; cmd++)[0m
 2797 |           {[0m
 2798 |             if (!excluded_directory_patterns[cmd])[0m
 2799 |               excluded_directory_patterns[cmd] = new_exclude ();[0m
 2800 |             add_exclude (excluded_directory_patterns[cmd], optarg,[0m
 2801 |                          exclude_options (cmd));[0m
 2802 |           }[0m
 2803 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2798:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2798 |             if (!excluded_directory_patterns[cmd])[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2799 |               excluded_directory_patterns[cmd] = new_exclude ();[0m
      | [0;1;32m                                                                
[0m[1mgrep.c:2806:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2806 |         group_separator = optarg;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2807 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2810:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2810 |         line_buffered = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2811 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2814:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2814 |         label = optarg;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2815 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2819:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2819 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mgrep.c:2822:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2822 |         usage (EXIT_TROUBLE);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2823 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mgrep.c:2839:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2839 |   if (show_help)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2840 |     usage (EXIT_SUCCESS);[0m
      | [0;1;32m                         
[0m[1mgrep.c:2868:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2868 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2869 |     usage (EXIT_TROUBLE);[0m
      | [0;1;32m                         
[0m[1mgrep.c:2880:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2880 |       if (S_ISREG (tmp_stat.st_mode))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2881 |         out_stat = tmp_stat;[0m
 2882 |       else if (S_ISCHR (tmp_stat.st_mode))[0m
      | [0;32m      } 
[0m[1mgrep.c:2886:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2886 |               && SAME_INODE (tmp_stat, null_stat))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2887 |             dev_null_output = true;[0m
 2888 |           else[0m
      | [0;32m          } 
[0m[1mgrep.c:2888:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2888 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2889 |             possibly_tty = true;[0m
      | [0;1;32m                                
[0m[1mgrep.c:2895:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2895 |   if (exit_on_match | dev_null_output)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2896 |     list_files = LISTFILES_NONE;[0m
      | [0;1;32m                                
[0m[1mgrep.c:2904:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2904 |   if (out_after < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2905 |     out_after = default_context;[0m
      | [0;1;32m                                
[0m[1mgrep.c:2906:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2906 |   if (out_before < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2907 |     out_before = default_context;[0m
      | [0;1;32m                                 
[0m[1mgrep.c:2913:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2913 |       && list_files != LISTFILES_NONMATCHING)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2914 |     return EXIT_FAILURE;[0m
      | [0;1;32m                        
[0m[1mgrep.c:2916:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2916 |   if (color_option == 2)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2917 |     color_option = possibly_tty && should_colorize () && isatty (STDOUT_FILENO);[0m
      | [0;1;32m                                                                                
[0m[1mgrep.c:2924:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2924 |       if (userval != NULL && *userval != '\0')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2925 |         for (char *q = userval; *q == ';' || c_isdigit (*q); q++)[0m
 2926 |           if (!q[1])[0m
 2927 |             {[0m
 2928 |               selected_match_color = context_match_color = userval;[0m
 2929 |               break;[0m
 2930 |             }[0m
      | [0;1;32m             
[0m[1mgrep.c:2925:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2925 |         for (char *q = userval; *q == ';' || c_isdigit (*q); q++)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2926 |           if (!q[1])[0m
 2927 |             {[0m
 2928 |               selected_match_color = context_match_color = userval;[0m
 2929 |               break;[0m
 2930 |             }[0m
      | [0;1;32m             
[0m[1mgrep.c:2936:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2936 |       if (selected_match_color == userval || context_match_color == userval)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2937 |         error (0, 0, _("warning: GREP_COLOR='%s' is deprecated;"[0m
 2938 |                        " use GREP_COLORS='mt=%s'"),[0m
 2939 |                userval, userval);[0m
      | [0;1;32m                                 
[0m[1mgrep.c:2944:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2944 |   if (matcher < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2945 |     matcher = G_MATCHER_INDEX;[0m
      | [0;1;32m                              
[0m[1mgrep.c:2950:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2950 |       if (match_icase)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2951 |         setup_ok_fold ();[0m
      | [0;1;32m                         
[0m[1mgrep.c:2972:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2972 |       else if (1 < n_patterns)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2973 |         matcher = try_fgrep_pattern (matcher, keys, &keycc);[0m
      | [0;1;32m                                                            
[0m[1mgrep.c:2992:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2992 |   if (binary)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2993 |     xset_binary_mode (STDOUT_FILENO, O_BINARY);[0m
      | [0;1;32m                                               
[0m[1mgrep.c:3001:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3001 |   if (! (0 < psize && psize <= (IDX_MAX - uword_size) / 2))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 3002 |     abort ();[0m
      | [0;1;32m             
[0m[1mgrep.c:3007:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3007 |   if (fts_options & FTS_LOGICAL && devices == READ_COMMAND_LINE_DEVICES)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 3008 |     devices = READ_DEVICES;[0m
      | [0;1;32m                           
[0m[1mgrep.c:3028:5: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3028 |   do[0m
      | [0;1;32m    ^
[0m      | [0;32m     {
[0m 3029 |     status &= grep_command_line_arg (*files++);[0m
 3030 |   while (*files != NULL);[0m
      | [0;32m  } 
[0m297 warnings generated.
Suppressed 30 warnings (30 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[121/122][218.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmpw6ejugc0.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/fts.c
[1mfts.c:284:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |       if (0 <= fd)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  285 |         close (fd);[0m
      | [0;1;32m                   
[0m[1mfts.c:319:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |       if (0 <= prev_fd_in_slot)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  320 |         close (prev_fd_in_slot); /* ignore any close failure */[0m
      | [0;1;32m                                                               
[0m[1mfts.c:324:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |       if (0 <= old)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  325 |         close (old); /* ignore any close failure */[0m
      | [0;1;32m                                                   
[0m[1mfts.c:388:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |         if (sp == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  389 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:442:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |           if (! fts_palloc(sp, MAX(maxarglen, MAXPATHLEN)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  443 |                   goto mem1;[0m
      | [0;1;32m                            
[0m[1mfts.c:448:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |                 if ((parent = fts_alloc(sp, "", 0)) == NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  449 |                         goto mem2;[0m
      | [0;1;32m                                  
[0m[1mfts.c:476:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |                     if (2 < len && v[len - 1] == '/')[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  477 |                       while (1 < len && v[len - 2] == '/')[0m
  478 |                         --len;[0m
      | [0;1;32m                              
[0m[1mfts.c:477:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |                       while (1 < len && v[len - 2] == '/')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  478 |                         --len;[0m
      | [0;1;32m                              
[0m[1mfts.c:481:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |                 if ((p = fts_alloc(sp, *argv, len)) == NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  482 |                         goto mem3;[0m
      | [0;1;32m                                  
[0m[1mfts.c:505:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  505 |                         if (root == NULL)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  506 |                                 tmp = root = p;[0m
  507 |                         else {[0m
      | [0;32m                        } 
[0m[1mfts.c:513:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |         if (compar && nitems > 1)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  514 |                 root = fts_sort(sp, root, nitems);[0m
      | [0;1;32m                                                  
[0m[1mfts.c:521:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  521 |         if ((sp->fts_cur = fts_alloc(sp, "", 0)) == NULL)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  522 |                 goto mem3;[0m
      | [0;1;32m                          
[0m[1mfts.c:526:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |         if (! setup_dir (sp))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  527 |                 goto mem3;[0m
      | [0;1;32m                          
[0m[1mfts.c:537:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |             && (sp->fts_rfd = diropen (sp, ".")) < 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  538 |                 SET(FTS_NOCHDIR);[0m
      | [0;1;32m                                 
[0m[1mfts.c:565:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  565 |         memmove(sp->fts_path, p->fts_name, len + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfts.c:565:9: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  565 |         memmove(sp->fts_path, p->fts_name, len + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfts.c:568:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  568 |                 memmove(p->fts_name, cp, len + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfts.c:568:17: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  568 |                 memmove(p->fts_name, cp, len + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfts.c:595:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |         if (sp->fts_child)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  596 |                 fts_lfree(sp->fts_child);[0m
      | [0;1;32m                                         
[0m[1mfts.c:602:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  602 |             if (0 <= sp->fts_cwd_fd)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  603 |               if (close (sp->fts_cwd_fd))[0m
  604 |                 saved_errno = errno;[0m
      | [0;1;32m                                    
[0m[1mfts.c:603:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |               if (close (sp->fts_cwd_fd))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  604 |                 saved_errno = errno;[0m
      | [0;1;32m                                    
[0m[1mfts.c:609:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |             if (fchdir(sp->fts_rfd))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  610 |               saved_errno = errno;[0m
      | [0;1;32m                                  
[0m[1mfts.c:614:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |             if (close (sp->fts_rfd))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  615 |               if (saved_errno == 0)[0m
  616 |                 saved_errno = errno;[0m
      | [0;1;32m                                    
[0m[1mfts.c:615:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  615 |               if (saved_errno == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  616 |                 saved_errno = errno;[0m
      | [0;1;32m                                    
[0m[1mfts.c:621:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |         if (sp->fts_leaf_optimization_works_ht)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  622 |           hash_free (sp->fts_leaf_optimization_works_ht);[0m
      | [0;1;32m                                                         
[0m[1mfts.c:713:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |   if (!ISSET (FTS_CWDFD))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  714 |     return 0;[0m
      | [0;1;32m             
[0m[1mfts.c:716:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  716 |   if (! h)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  717 |     h = sp->fts_leaf_optimization_works_ht[0m
  718 |       = hash_initialize (DEV_TYPE_HT_INITIAL_SIZE, NULL, dev_type_hash,[0m
  719 |                          dev_type_compare, free);[0m
      | [0;1;32m                                                 
[0m[1mfts.c:725:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |       if (ent)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  726 |         return ent->f_type;[0m
      | [0;1;32m                           
[0m[1mfts.c:730:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  730 |   if (fd < 0 || fstatfs (fd, &fs_buf) != 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  731 |     return 0;[0m
      | [0;1;32m             
[0m[1mfts.c:742:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |           if (ent)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  743 |             fts_assert (ent == t2);[0m
  744 |           else[0m
      | [0;32m          } 
[0m[1mfts.c:744:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  745 |             free (t2);[0m
      | [0;1;32m                      
[0m[1mfts.c:775:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  775 |       return true;[0m
      | [0;1;32m      ^          
[0m      | [0;32m      {          ;} 
[0m[1mfts.c:791:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  791 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2337:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2337 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mfts.c:795:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  795 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2337:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2337 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mfts.c:799:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  799 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2337:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2337 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mfts.c:805:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  805 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2337:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2337 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mfts.c:809:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  809 |       return NO_LEAF_OPTIMIZATION;[0m
      | [0;1;32m      ^                          
[0m      | [0;32m      {                          ;} 
[0m[1mfts.c:812:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  812 |       return OK_LEAF_OPTIMIZATION;[0m
      | [0;1;32m      ^                          
[0m      | [0;32m      {                          ;} 
[0m[1mfts.c:846:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |         if (sp->fts_cur == NULL || ISSET(FTS_STOP))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  847 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:877:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  878 |                                 p->fts_flags |= FTS_SYMFOLLOW;[0m
      | [0;1;32m                                                              
[0m[1mfts.c:888:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  888 |                         if (p->fts_flags & FTS_SYMFOLLOW)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  889 |                                 (void)close(p->fts_symfd);[0m
      | [0;1;32m                                                          
[0m[1mfts.c:923:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  923 |                                      p = p->fts_link)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  924 |                                         p->fts_accpath =[0m
  925 |                                             p->fts_parent->fts_accpath;[0m
      | [0;1;32m                                                                       
[0m[1mfts.c:928:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  928 |                         if (ISSET(FTS_STOP))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  929 |                                 return (NULL);[0m
      | [0;1;32m                                              
[0m[1mfts.c:933:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  933 |                         if (p->fts_errno && p->fts_info != FTS_DNR)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  934 |                                 p->fts_info = FTS_ERR;[0m
      | [0;1;32m                                                      
[0m[1mfts.c:957:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  957 |                 if (ISSET(FTS_STOP))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  958 |                   return NULL;[0m
      | [0;1;32m                              
[0m[1mfts.c:995:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  995 |                 if (p->fts_instr == FTS_SKIP)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  996 |                         goto next;[0m
      | [0;1;32m                                  
[0m[1mfts.c:1003:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1003 |                                 } else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1004 |                                         p->fts_flags |= FTS_SYMFOLLOW;[0m
      | [0;1;32m                                                                      
[0m[1mfts.c:1011:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1011 |                 memmove(t, p->fts_name, p->fts_namelen + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfts.c:1011:17: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1011 |                 memmove(t, p->fts_name, p->fts_namelen + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfts.c:1016:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1016 |                     if (p->fts_statp->st_size == FTS_STAT_REQUIRED)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1017 |                       p->fts_info = fts_stat(sp, p, false);[0m
 1018 |                     else[0m
      | [0;32m                    } 
[0m[1mfts.c:1018:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1018 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1019 |                       fts_assert (p->fts_statp->st_size == FTS_NO_STAT_REQUIRED);[0m
      | [0;1;32m                                                                                 
[0m[1mfts.c:1027:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |                     if (p->fts_level == FTS_ROOTLEVEL)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1028 |                       sp->fts_dev = p->fts_statp->st_dev;[0m
      | [0;1;32m                                                         
[0m[1mfts.c:1088:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1088 |                 if (p->fts_errno == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1089 |                         LEAVE_DIR (sp, p, "3");[0m
      | [0;1;32m                                               
[0m[1mfts.c:1134:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1134 |         if (ISSET(FTS_STOP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1135 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:1138:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |         if (p->fts_info == FTS_INIT)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1139 |                 return (p->fts_link);[0m
      | [0;1;32m                                     
[0m[1mfts.c:1146:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1146 |         if (p->fts_info != FTS_D /* && p->fts_info != FTS_DNR */)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1147 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:1150:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1150 |         if (sp->fts_child != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1151 |                 fts_lfree(sp->fts_child);[0m
      | [0;1;32m                                         
[0m[1mfts.c:1156:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1156 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1157 |                 instr = BCHILD;[0m
      | [0;1;32m                               
[0m[1mfts.c:1167:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1167 |             ISSET(FTS_NOCHDIR))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1168 |                 return (sp->fts_child = fts_build(sp, instr));[0m
      | [0;1;32m                                                              
[0m[1mfts.c:1170:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1170 |         if ((fd = diropen (sp, ".")) < 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1171 |                 return (sp->fts_child = NULL);[0m
      | [0;1;32m                                              
[0m[1mfts.c:1211:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1211 |       type = S_IFBLK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1212 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1214:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1214 |       type = S_IFCHR;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1215 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1217:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1217 |       type = S_IFDIR;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1218 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1220:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1220 |       type = S_IFIFO;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1221 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1223:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1223 |       type = S_IFLNK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1224 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1226:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1226 |       type = S_IFREG;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1227 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1229:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1229 |       type = S_IFSOCK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1230 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1232:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1232 |       type = 0;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mfts.c:1333:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1333 |                 if (!stat_optimization)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1334 |                   LEAVE_DIR (sp, cur, "4");[0m
      | [0;1;32m                                           
[0m[1mfts.c:1347:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1347 |                 if (stat_optimization)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1348 |                   cur->fts_info = FTS_D;[0m
 1349 |                 else if (! enter_dir (sp, cur))[0m
      | [0;32m                } 
[0m[1mfts.c:1400:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1400 |                 if (ISSET(FTS_CWDFD))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1401 |                   dir_fd = fcntl (dir_fd, F_DUPFD_CLOEXEC, STDERR_FILENO + 1);[0m
      | [0;1;32m                                                                              
[0m[1mfts.c:1403:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1403 |                         if (descend && type == BREAD)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1404 |                                 cur->fts_errno = errno;[0m
      | [0;1;32m                                                       
[0m[1mfts.c:1408:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1408 |                         if (ISSET(FTS_CWDFD) && 0 <= dir_fd)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1409 |                                 close (dir_fd);[0m
      | [0;1;32m                                               
[0m[1mfts.c:1411:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1411 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1412 |                         descend = true;[0m
      | [0;1;32m                                       
[0m[1mfts.c:1459:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1459 |                 if (!ISSET(FTS_SEEDOT) && ISDOT(dp->d_name))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1460 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mfts.c:1464:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1464 |                 if (!p)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1465 |                         goto mem1;[0m
      | [0;1;32m                                  
[0m[1mfts.c:1487:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1487 |                                 if (ISSET(FTS_NOCHDIR))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1488 |                                         cp = sp->fts_path + len;[0m
      | [0;1;32m                                                                
[0m[1mfts.c:1520:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1520 |                         memmove(cp, p->fts_name, p->fts_namelen + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfts.c:1520:25: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1520 |                         memmove(cp, p->fts_name, p->fts_namelen + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfts.c:1521:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1521 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1522 |                         p->fts_accpath = p->fts_name;[0m
      | [0;1;32m                                                     
[0m[1mfts.c:1553:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1553 |                 if (head == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1554 |                         head = tail = p;[0m
 1555 |                 else {[0m
      | [0;32m                } 
[0m[1mfts.c:1569:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1569 |                     && !sp->fts_compar)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1570 |                   sort_by_inode = dirent_inode_sort_may_be_useful (cur, dir_fd);[0m
      | [0;1;32m                                                                                
[0m[1mfts.c:1585:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1585 |         if (doadjust)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1586 |                 fts_padjust(sp, head);[0m
      | [0;1;32m                                      
[0m[1mfts.c:1593:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1593 |                 if (len == sp->fts_pathlen || nitems == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1594 |                         --cp;[0m
      | [0;1;32m                             
[0m[1mfts.c:1618:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1618 |                     && cur->fts_info != FTS_DNR && cur->fts_info != FTS_ERR)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1619 |                         cur->fts_info = FTS_DP;[0m
      | [0;1;32m                                               
[0m[1mfts.c:1631:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1631 |         if (sp->fts_compar && nitems > 1)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1632 |                 head = fts_sort(sp, head, nitems);[0m
      | [0;1;32m                                                  
[0m[1mfts.c:1802:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1802 |             || (ISSET (FTS_COMFOLLOW) && p->fts_level == FTS_ROOTLEVEL))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1803 |                 follow = true;[0m
      | [0;1;32m                              
[0m[1mfts.c:1822:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1822 |             memset (sbp, 0, sizeof *sbp);[0m
      | [0;1;32m            ^~~~~~
[0m[1mfts.c:1822:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1822 |             memset (sbp, 0, sizeof *sbp);[0m
      | [0;1;32m            ^~~~~~
[0m[1mfts.c:1834:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1834 |         if (S_ISLNK(sbp->st_mode))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1835 |                 return (FTS_SL);[0m
      | [0;1;32m                                
[0m[1mfts.c:1836:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1836 |         if (S_ISREG(sbp->st_mode))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1837 |                 return (FTS_F);[0m
      | [0;1;32m                               
[0m[1mfts.c:1895:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1895 |         for (ap = sp->fts_array, p = head; p; p = p->fts_link)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1896 |                 *ap++ = p;[0m
      | [0;1;32m                          
[0m[1mfts.c:1898:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1898 |         for (head = *(ap = sp->fts_array); --nitems; ++ap)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1899 |                 ap[0]->fts_link = ap[1];[0m
      | [0;1;32m                                        
[0m[1mfts.c:1916:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1916 |         if ((p = malloc(len)) == NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1917 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:1920:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1920 |         memcpy(p->fts_name, name, namelen);[0m
      | [0;1;32m        ^~~~~~
[0m[1mfts.c:1920:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1920 |         memcpy(p->fts_name, name, namelen);[0m
      | [0;1;32m        ^~~~~~
[0m[1mfts.c:1944:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1944 |                 if (p->fts_dirp)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1945 |                         closedir (p->fts_dirp);[0m
      | [0;1;32m                                               
[0m[1mfts.c:2008:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2008 |         for (p = sp->fts_child; p; p = p->fts_link)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2009 |                 ADJUST(p);[0m
      | [0;1;32m                          
[0m[1mfts.c:2024:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2024 |         for (max = 0; *argv; ++argv)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2025 |                 if ((len = strlen(*argv)) > max)[0m
 2026 |                         max = len;[0m
      | [0;1;32m                                  
[0m[1mfts.c:2025:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2025 |                 if ((len = strlen(*argv)) > max)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2026 |                         max = len;[0m
      | [0;1;32m                                  
[0m[1mfts.c:2053:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2053 |             if (ISSET (FTS_CWDFD) && 0 <= fd)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2054 |               close (fd);[0m
      | [0;1;32m                         
[0m[1mfts.c:2079:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2079 |         if (fd < 0 && (newfd = diropen (sp, dir)) < 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2080 |           return -1;[0m
      | [0;1;32m                    
[0m106 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[122/122][275.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/grep-3.11/tidy-fixes/tmp1ckea9nq.yaml -p=/itch/common/crepos/cu-to-rtu/c/grep-3.11 /itch/common/crepos/cu-to-rtu/c/grep-3.11/lib/dfa.c
[1mdfa.c:650:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  650 |       memset (&d->mbs, 0, sizeof d->mbs);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:650:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  650 |       memset (&d->mbs, 0, sizeof d->mbs);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:749:3: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of 'ccl.w' [clang-analyzer-security.ArrayBound][0m
  749 |   c->w[b / CHARCLASS_WORD_BITS] |= one << b % CHARCLASS_WORD_BITS;[0m
      | [0;1;32m  ^
[0m[1mdfa.c:959:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  959 |   bool invert = c == '^';[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mdfa.c:960:7: [0m[0;1;36mnote: [0m'invert' is false[0m
  960 |   if (invert)[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:960:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  960 |   if (invert)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:968:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  968 |   colon_warning_state = (c == ':');[0m
      | [0;1;32m                         ^~~~~~~~
[0m[1mdfa.c:978:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  978 |       if (c == '[')[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mdfa.c:978:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  978 |       if (c == '[')[0m
      | [0;1;32m      ^
[0m[1mdfa.c:1042:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1042 |       if (c == '\\'[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mdfa.c:1042:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mdfa.c:1043:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1043 |           && (dfa->syntax.syntax_bits & RE_BACKSLASH_ESCAPE_IN_LISTS))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:1042:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1042 |       if (c == '\\'[0m
      | [0;1;32m      ^
[0m[1mdfa.c:1049:11: [0m[0;1;36mnote: [0m'c1' is equal to NOTCHAR[0m
 1049 |       if (c1 == NOTCHAR)[0m
      | [0;1;32m          ^~
[0m[1mdfa.c:1049:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1049 |       if (c1 == NOTCHAR)[0m
      | [0;1;32m      ^
[0m[1mdfa.c:1055:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1055 |       if (c1 == '-')[0m
      | [0;1;32m      ^
[0m[1mdfa.c:1110:30: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1110 |       colon_warning_state |= (c == ':') ? 2 : 4;[0m
      | [0;1;32m                             ^
[0m[1mdfa.c:1112:11: [0m[0;1;36mnote: [0mAssuming field 'multibyte' is false[0m
 1112 |       if (!dfa->localeinfo.multibyte)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:1112:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1112 |       if (!dfa->localeinfo.multibyte)[0m
      | [0;1;32m      ^
[0m[1mdfa.c:1114:15: [0m[0;1;36mnote: [0mAssuming field 'case_fold' is false[0m
 1114 |           if (dfa->syntax.case_fold && isalpha (c))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:1114:37: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1114 |           if (dfa->syntax.case_fold && isalpha (c))[0m
      | [0;1;32m                                    ^
[0m[1mdfa.c:1117:13: [0m[0;1;36mnote: [0mCalling 'setbit'[0m
 1117 |             setbit (c, &ccl);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~
[0m[1mdfa.c:749:3: [0m[0;1;36mnote: [0mAccess of 'ccl.w' at index 67108863, while it holds only 4 'unsigned long' elements[0m
  749 |   c->w[b / CHARCLASS_WORD_BITS] |= one << b % CHARCLASS_WORD_BITS;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:762:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  762 |   memset (s, 0, sizeof *s);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdfa.c:762:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  762 |   memset (s, 0, sizeof *s);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdfa.c:768:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  768 |   for (int i = 0; i < CHARCLASS_WORDS; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  769 |     s->w[i] = CHARCLASS_WORD_MASK;[0m
      | [0;1;32m                                  
[0m[1mdfa.c:775:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  775 |   for (int i = 0; i < CHARCLASS_WORDS; ++i)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  776 |     s->w[i] = CHARCLASS_WORD_MASK & ~s->w[i];[0m
      | [0;1;32m                                             
[0m[1mdfa.c:783:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  783 |   for (int i = 0; i < CHARCLASS_WORDS; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  784 |     w |= s1->w[i] ^ s2->w[i];[0m
      | [0;1;32m                             
[0m[1mdfa.c:792:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  792 |   for (int i = 0; i < CHARCLASS_WORDS; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  793 |     w |= s->w[i];[0m
      | [0;1;32m                 
[0m[1mdfa.c:810:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |   if (i < *nitems)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  811 |     return pa;[0m
      | [0;1;32m              
[0m[1mdfa.c:821:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  821 |   for (i = 0; i < d->cindex; ++i)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  822 |     if (equal (s, &d->charclasses[i]))[0m
  823 |       return i;[0m
      | [0;1;32m               
[0m[1mdfa.c:822:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  822 |     if (equal (s, &d->charclasses[i]))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  823 |       return i;[0m
      | [0;1;32m               
[0m[1mdfa.c:840:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  840 |   if (c == dfa->syntax.eolbyte && !(dfa->syntax.dfaopts & DFA_ANCHOR))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  841 |     return CTX_NEWLINE;[0m
      | [0;1;32m                       
[0m[1mdfa.c:842:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |   if (unibyte_word_constituent (dfa, c))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  843 |     return CTX_LETTER;[0m
      | [0;1;32m                      
[0m[1mdfa.c:856:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (b < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  857 |     return false;[0m
      | [0;1;32m                 
[0m[1mdfa.c:869:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  869 |   for (int i = 0; i < NOTCHAR; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  870 |     if (toupper (i) == ub)[0m
  871 |       setbit (i, c);[0m
      | [0;1;32m                    
[0m[1mdfa.c:870:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |     if (toupper (i) == ub)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  871 |       setbit (i, c);[0m
      | [0;1;32m                    
[0m[1mdfa.c:896:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |   if (! dfa->lex.left)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  897 |     dfaerror (_("unbalanced ["));[0m
      | [0;1;32m                                 
[0m[1mdfa.c:933:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  933 |   for (int i = 0; prednames[i].name; i++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  934 |     if (str_eq (str, prednames[i].name))[0m
  935 |       return &prednames[i];[0m
      | [0;1;32m                           
[0m[1mdfa.c:934:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  934 |     if (str_eq (str, prednames[i].name))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  935 |       return &prednames[i];[0m
      | [0;1;32m                           
[0m[1mdfa.c:993:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  993 |                       || (c == c1 && dfa->lex.ptr[0] == ']'))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  994 |                     break;[0m
      | [0;1;32m                          
[0m[1mdfa.c:995:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  995 |                   if (len < MAX_BRACKET_STRING_LEN)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  996 |                     str[len++] = c;[0m
  997 |                   else[0m
      | [0;32m                  } 
[0m[1mdfa.c:997:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  997 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  998 |                     /* This is in any case an invalid class name.  */[0m
  999 |                     str[0] = '\0';[0m
      | [0;1;32m                                  
[0m[1mdfa.c:1004:15: [0m[0;1;35mwarning: [0m[1mValue stored to 'c' is never read [clang-analyzer-deadcode.DeadStores][0m
 1004 |               c = bracket_fetch_wc (dfa);[0m
      | [0;1;32m              ^   ~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:1004:15: [0m[0;1;36mnote: [0mValue stored to 'c' is never read[0m
 1004 |               c = bracket_fetch_wc (dfa);[0m
      | [0;1;32m              ^   ~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:1005:15: [0m[0;1;35mwarning: [0m[1mValue stored to 'wc' is never read [clang-analyzer-deadcode.DeadStores][0m
 1005 |               wc = dfa->lex.wctok;[0m
      | [0;1;32m              ^    ~~~~~~~~~~~~~~
[0m[1mdfa.c:1005:15: [0m[0;1;36mnote: [0mValue stored to 'wc' is never read[0m
 1005 |               wc = dfa->lex.wctok;[0m
      | [0;1;32m              ^    ~~~~~~~~~~~~~~
[0m[1mdfa.c:1017:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1017 |                   if (!pred)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1018 |                     dfaerror (_("invalid character class"));[0m
      | [0;1;32m                                                            
[0m[1mdfa.c:1020:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1020 |                   if (dfa->localeinfo.multibyte && !pred->single_byte_only)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 1021 |                     known_bracket_exp = false;[0m
 1022 |                   else[0m
      | [0;32m                  } 
[0m[1mdfa.c:1022:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1022 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1023 |                     for (int c2 = 0; c2 < NOTCHAR; ++c2)[0m
 1024 |                       if (pred->func (c2))[0m
 1025 |                         setbit (c2, &ccl);[0m
      | [0;1;32m                                          
[0m[1mdfa.c:1023:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |                     for (int c2 = 0; c2 < NOTCHAR; ++c2)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1024 |                       if (pred->func (c2))[0m
 1025 |                         setbit (c2, &ccl);[0m
      | [0;1;32m                                          
[0m[1mdfa.c:1024:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1024 |                       if (pred->func (c2))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1025 |                         setbit (c2, &ccl);[0m
      | [0;1;32m                                          
[0m[1mdfa.c:1027:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1028 |                 known_bracket_exp = false;[0m
      | [0;1;32m                                          
[0m[1mdfa.c:1096:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |                       for (int ci = c; ci <= c2; ci++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1097 |                         if (dfa->syntax.case_fold && isalpha (ci))[0m
 1098 |                           setbit_case_fold_c (ci, &ccl);[0m
 1099 |                         else[0m
 1100 |                           setbit (ci, &ccl);[0m
      | [0;1;32m                                            
[0m[1mdfa.c:1097:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1097 |                         if (dfa->syntax.case_fold && isalpha (ci))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1098 |                           setbit_case_fold_c (ci, &ccl);[0m
 1099 |                         else[0m
      | [0;32m                        } 
[0m[1mdfa.c:1099:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1099 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1100 |                           setbit (ci, &ccl);[0m
      | [0;1;32m                                            
[0m[1mdfa.c:1102:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1103 |                     known_bracket_exp = false;[0m
      | [0;1;32m                                              
[0m[1mdfa.c:1114:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1114 |           if (dfa->syntax.case_fold && isalpha (c))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1115 |             setbit_case_fold_c (c, &ccl);[0m
 1116 |           else[0m
      | [0;32m          } 
[0m[1mdfa.c:1116:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1116 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1117 |             setbit (c, &ccl);[0m
      | [0;1;32m                             
[0m[1mdfa.c:1121:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |       if (wc == WEOF)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1122 |         known_bracket_exp = false;[0m
 1123 |       else[0m
      | [0;32m      } 
[0m[1mdfa.c:1130:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1130 |           for (int i = 0; i < n; i++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1131 |             if (!setbit_wc (folded[i], &ccl))[0m
 1132 |               {[0m
 1133 |                 dfa->lex.brack.chars[0m
 1134 |                   = maybe_realloc (dfa->lex.brack.chars, dfa->lex.brack.nchars,[0m
 1135 |                                    &dfa->lex.brack.nchars_alloc, -1,[0m
 1136 |                                    sizeof *dfa->lex.brack.chars);[0m
 1137 |                 dfa->lex.brack.chars[dfa->lex.brack.nchars++] = folded[i];[0m
 1138 |               }[0m
      | [0;1;32m               
[0m[1mdfa.c:1147:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1147 |       if (dfa->syntax.dfaopts & DFA_CONFUSING_BRACKETS_ERROR)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1148 |         dfaerror (msg);[0m
 1149 |       else[0m
      | [0;32m      } 
[0m[1mdfa.c:1149:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1149 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1150 |         dfawarn (msg);[0m
      | [0;1;32m                      
[0m[1mdfa.c:1153:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1153 |   if (! known_bracket_exp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1154 |     return BACKREF;[0m
      | [0;1;32m                   
[0m[1mdfa.c:1166:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1166 |       if (dfa->syntax.syntax_bits & RE_HAT_LISTS_NOT_NEWLINE)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1167 |         clrbit ('\n', &ccl);[0m
      | [0;1;32m                            
[0m[1mdfa.c:1209:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1209 |       if (2 <= i)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1210 |         abort ();[0m
      | [0;1;32m                 
[0m[1mdfa.c:1212:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1212 |       if (! dfa->lex.left)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1213 |         return dfa->lex.lasttok = END;[0m
      | [0;1;32m                                      
[0m[1mdfa.c:1219:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1219 |           if (backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1220 |             goto normal_char;[0m
 1221 |           if (dfa->lex.left == 0)[0m
 1222 |             dfaerror (_("unfinished \\ escape"));[0m
 1223 |           backslash = true;[0m
 1224 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:1219:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1219 |           if (backslash)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1220 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1221:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1221 |           if (dfa->lex.left == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1222 |             dfaerror (_("unfinished \\ escape"));[0m
      | [0;1;32m                                                 
[0m[1mdfa.c:1227:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1227 |           if (backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1228 |             goto normal_char;[0m
 1229 |           if (dfa->syntax.syntax_bits & RE_CONTEXT_INDEP_ANCHORS[0m
 1230 |               || dfa->lex.lasttok == END || dfa->lex.lasttok == LPAREN[0m
 1231 |               || dfa->lex.lasttok == OR)[0m
 1232 |             return dfa->lex.lasttok = BEGLINE;[0m
 1233 |           goto normal_char;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mdfa.c:1227:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1227 |           if (backslash)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1228 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1231:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1231 |               || dfa->lex.lasttok == OR)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1232 |             return dfa->lex.lasttok = BEGLINE;[0m
      | [0;1;32m                                              
[0m[1mdfa.c:1236:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1236 |           if (backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:1236:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1236 |           if (backslash)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1237 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1251:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1251 |                   && dfa->lex.left > 0 && dfa->lex.ptr[0] == '\n'))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1252 |             return dfa->lex.lasttok = ENDLINE;[0m
      | [0;1;32m                                              
[0m[1mdfa.c:1264:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1264 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1265 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1266:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1266 |           if (dfa->syntax.syntax_bits & RE_NO_BK_REFS)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1267 |             goto stray_backslash;[0m
 1268 | [0m
 1269 |           dfa->lex.laststart = false;[0m
 1270 |           return dfa->lex.lasttok = BACKREF;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdfa.c:1266:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1266 |           if (dfa->syntax.syntax_bits & RE_NO_BK_REFS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1267 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1273:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1273 |           if (!backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1274 |             goto normal_char;[0m
 1275 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
 1276 |             goto stray_backslash;[0m
 1277 | [0m
 1278 |           /* FIXME: should be beginning of string */[0m
 1279 |           return dfa->lex.lasttok = BEGLINE;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdfa.c:1273:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1273 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1274 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1275:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1275 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1276 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1282:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1282 |           if (!backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1283 |             goto normal_char;[0m
 1284 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
 1285 |             goto stray_backslash;[0m
 1286 | [0m
 1287 |           /* FIXME: should be end of string */[0m
 1288 |           return dfa->lex.lasttok = ENDLINE;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdfa.c:1282:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1282 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1283 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1284:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1284 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1285 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1291:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1291 |           if (!backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1292 |             goto normal_char;[0m
 1293 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
 1294 |             goto stray_backslash;[0m
 1295 | [0m
 1296 |           return dfa->lex.lasttok = BEGWORD;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdfa.c:1291:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1291 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1292 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1293:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1294 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1299:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1299 |           if (!backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1300 |             goto normal_char;[0m
 1301 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
 1302 |             goto stray_backslash;[0m
 1303 | [0m
 1304 |           return dfa->lex.lasttok = ENDWORD;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdfa.c:1299:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1299 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1300 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1301:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1301 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1302 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1307:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1307 |           if (!backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1308 |             goto normal_char;[0m
 1309 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
 1310 |             goto stray_backslash;[0m
 1311 | [0m
 1312 |           return dfa->lex.lasttok = LIMWORD;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mdfa.c:1307:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1307 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1308 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1309:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1309 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1310 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1315:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1315 |           if (!backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1316 |             goto normal_char;[0m
 1317 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
 1318 |             goto stray_backslash;[0m
 1319 | [0m
 1320 |           return dfa->lex.lasttok = NOTLIMWORD;[0m
      | [0;1;32m                                              
[0m      | [0;32m                                              ;} 
[0m[1mdfa.c:1315:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1315 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1316 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1317:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1317 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1318 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1323:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1323 |           if (dfa->syntax.syntax_bits & RE_LIMITED_OPS)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1324 |             goto default_case;[0m
 1325 |           if (backslash != ((dfa->syntax.syntax_bits & RE_BK_PLUS_QM) != 0))[0m
 1326 |             goto normal_char;[0m
 1327 |           if (dfa->lex.laststart)[0m
 1328 |             {[0m
 1329 |               if (!(dfa->syntax.syntax_bits & RE_CONTEXT_INDEP_OPS))[0m
 1330 |                 goto default_case;[0m
 1331 |               if (dfa->syntax.dfaopts & DFA_PLUS_WARN)[0m
 1332 |                 dfawarn (_("? at start of expression"));[0m
 1333 |             }[0m
 1334 |           return dfa->lex.lasttok = QMARK;[0m
      | [0;1;32m                                         
[0m      | [0;32m                                         ;} 
[0m[1mdfa.c:1323:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1323 |           if (dfa->syntax.syntax_bits & RE_LIMITED_OPS)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1324 |             goto default_case;[0m
      | [0;1;32m                              
[0m[1mdfa.c:1325:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1325 |           if (backslash != ((dfa->syntax.syntax_bits & RE_BK_PLUS_QM) != 0))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1326 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1329:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1329 |               if (!(dfa->syntax.syntax_bits & RE_CONTEXT_INDEP_OPS))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1330 |                 goto default_case;[0m
      | [0;1;32m                                  
[0m[1mdfa.c:1331:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1331 |               if (dfa->syntax.dfaopts & DFA_PLUS_WARN)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1332 |                 dfawarn (_("? at start of expression"));[0m
      | [0;1;32m                                                        
[0m[1mdfa.c:1337:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1337 |           if (backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1338 |             goto normal_char;[0m
 1339 |           if (dfa->lex.laststart)[0m
 1340 |             {[0m
 1341 |               if (!(dfa->syntax.syntax_bits & RE_CONTEXT_INDEP_OPS))[0m
 1342 |                 goto default_case;[0m
 1343 |               if (dfa->syntax.dfaopts & DFA_STAR_WARN)[0m
 1344 |                 dfawarn (_("* at start of expression"));[0m
 1345 |             }[0m
 1346 |           return dfa->lex.lasttok = STAR;[0m
      | [0;1;32m                                        
[0m      | [0;32m                                        ;} 
[0m[1mdfa.c:1337:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1337 |           if (backslash)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1338 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1341:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1341 |               if (!(dfa->syntax.syntax_bits & RE_CONTEXT_INDEP_OPS))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1342 |                 goto default_case;[0m
      | [0;1;32m                                  
[0m[1mdfa.c:1343:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1343 |               if (dfa->syntax.dfaopts & DFA_STAR_WARN)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1344 |                 dfawarn (_("* at start of expression"));[0m
      | [0;1;32m                                                        
[0m[1mdfa.c:1349:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1349 |           if (dfa->syntax.syntax_bits & RE_LIMITED_OPS)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1350 |             goto default_case;[0m
 1351 |           if (backslash != ((dfa->syntax.syntax_bits & RE_BK_PLUS_QM) != 0))[0m
 1352 |             goto normal_char;[0m
 1353 |           if (dfa->lex.laststart)[0m
 1354 |             {[0m
 1355 |               if (!(dfa->syntax.syntax_bits & RE_CONTEXT_INDEP_OPS))[0m
 1356 |                 goto default_case;[0m
 1357 |               if (dfa->syntax.dfaopts & DFA_PLUS_WARN)[0m
 1358 |                 dfawarn (_("+ at start of expression"));[0m
 1359 |             }[0m
 1360 |           return dfa->lex.lasttok = PLUS;[0m
      | [0;1;32m                                        
[0m      | [0;32m                                        ;} 
[0m[1mdfa.c:1349:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1349 |           if (dfa->syntax.syntax_bits & RE_LIMITED_OPS)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1350 |             goto default_case;[0m
      | [0;1;32m                              
[0m[1mdfa.c:1351:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1351 |           if (backslash != ((dfa->syntax.syntax_bits & RE_BK_PLUS_QM) != 0))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1352 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1355:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1355 |               if (!(dfa->syntax.syntax_bits & RE_CONTEXT_INDEP_OPS))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1356 |                 goto default_case;[0m
      | [0;1;32m                                  
[0m[1mdfa.c:1357:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |               if (dfa->syntax.dfaopts & DFA_PLUS_WARN)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1358 |                 dfawarn (_("+ at start of expression"));[0m
      | [0;1;32m                                                        
[0m[1mdfa.c:1363:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1363 |           if (!(dfa->syntax.syntax_bits & RE_INTERVALS))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:1363:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1363 |           if (!(dfa->syntax.syntax_bits & RE_INTERVALS))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1364 |             goto default_case;[0m
      | [0;1;32m                              
[0m[1mdfa.c:1365:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1365 |           if (backslash != ((dfa->syntax.syntax_bits & RE_NO_BK_BRACES) == 0))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1366 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1378:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1378 |             for (; p != lim && c_isdigit (*p); p++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1379 |               dfa->lex.minrep = (dfa->lex.minrep < 0[0m
 1380 |                                  ? *p - '0'[0m
 1381 |                                  : MIN (RE_DUP_MAX + 1,[0m
 1382 |                                         dfa->lex.minrep * 10 + *p - '0'));[0m
      | [0;1;32m                                                                          
[0m[1mdfa.c:1385:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1385 |                 if (*p != ',')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1386 |                   dfa->lex.maxrep = dfa->lex.minrep;[0m
 1387 |                 else[0m
      | [0;32m                } 
[0m[1mdfa.c:1389:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1389 |                     if (dfa->lex.minrep < 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1390 |                       dfa->lex.minrep = 0;[0m
      | [0;1;32m                                          
[0m[1mdfa.c:1391:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1391 |                     while (++p != lim && c_isdigit (*p))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1392 |                       dfa->lex.maxrep[0m
 1393 |                         = (dfa->lex.maxrep < 0[0m
 1394 |                            ? *p - '0'[0m
 1395 |                            : MIN (RE_DUP_MAX + 1,[0m
 1396 |                                   dfa->lex.maxrep * 10 + *p - '0'));[0m
      | [0;1;32m                                                                    
[0m[1mdfa.c:1406:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1406 |                 && (dfa->syntax.syntax_bits & RE_INVALID_INTERVAL_ORD))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1407 |               goto normal_char;[0m
      | [0;1;32m                               
[0m[1mdfa.c:1410:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1410 |                 if (!(dfa->syntax.syntax_bits & RE_CONTEXT_INDEP_OPS))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1411 |                   goto default_case;[0m
      | [0;1;32m                                    
[0m[1mdfa.c:1412:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1412 |                 if (dfa->syntax.dfaopts & DFA_PLUS_WARN)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1413 |                   dfawarn (_("{...} at start of expression"));[0m
      | [0;1;32m                                                              
[0m[1mdfa.c:1415:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1415 |             if (invalid_content)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1416 |               dfaerror (_("invalid content of \\{\\}"));[0m
      | [0;1;32m                                                        
[0m[1mdfa.c:1417:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1417 |             if (RE_DUP_MAX < dfa->lex.maxrep)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1418 |               dfaerror (_("regular expression too big"));[0m
      | [0;1;32m                                                         
[0m[1mdfa.c:1426:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1426 |           if (dfa->syntax.syntax_bits & RE_LIMITED_OPS)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1427 |             goto default_case;[0m
 1428 |           if (backslash != ((dfa->syntax.syntax_bits & RE_NO_BK_VBAR) == 0))[0m
 1429 |             goto normal_char;[0m
 1430 |           dfa->lex.laststart = true;[0m
 1431 |           return dfa->lex.lasttok = OR;[0m
      | [0;1;32m                                      
[0m      | [0;32m                                      ;} 
[0m[1mdfa.c:1426:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1426 |           if (dfa->syntax.syntax_bits & RE_LIMITED_OPS)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1427 |             goto default_case;[0m
      | [0;1;32m                              
[0m[1mdfa.c:1428:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1428 |           if (backslash != ((dfa->syntax.syntax_bits & RE_NO_BK_VBAR) == 0))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1429 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1434:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1434 |           if (!(dfa->syntax.syntax_bits & RE_NEWLINE_ALT))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1435 |             goto default_case;[0m
 1436 |           if (backslash)[0m
 1437 |             goto normal_char;[0m
 1438 |           dfa->lex.laststart = true;[0m
 1439 |           return dfa->lex.lasttok = OR;[0m
      | [0;1;32m                                      
[0m      | [0;32m                                      ;} 
[0m[1mdfa.c:1434:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1434 |           if (!(dfa->syntax.syntax_bits & RE_NEWLINE_ALT))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1435 |             goto default_case;[0m
      | [0;1;32m                              
[0m[1mdfa.c:1436:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1436 |           if (backslash)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1437 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1442:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1442 |           if (backslash != ((dfa->syntax.syntax_bits & RE_NO_BK_PARENS) == 0))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1443 |             goto normal_char;[0m
 1444 |           dfa->lex.parens++;[0m
 1445 |           dfa->lex.laststart = true;[0m
 1446 |           return dfa->lex.lasttok = LPAREN;[0m
      | [0;1;32m                                          
[0m      | [0;32m                                          ;} 
[0m[1mdfa.c:1442:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1442 |           if (backslash != ((dfa->syntax.syntax_bits & RE_NO_BK_PARENS) == 0))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1443 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1449:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1449 |           if (backslash != ((dfa->syntax.syntax_bits & RE_NO_BK_PARENS) == 0))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1450 |             goto normal_char;[0m
 1451 |           if (dfa->lex.parens == 0[0m
 1452 |               && dfa->syntax.syntax_bits & RE_UNMATCHED_RIGHT_PAREN_ORD)[0m
 1453 |             goto normal_char;[0m
 1454 |           dfa->lex.parens--;[0m
 1455 |           dfa->lex.laststart = false;[0m
 1456 |           return dfa->lex.lasttok = RPAREN;[0m
      | [0;1;32m                                          
[0m      | [0;32m                                          ;} 
[0m[1mdfa.c:1449:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1449 |           if (backslash != ((dfa->syntax.syntax_bits & RE_NO_BK_PARENS) == 0))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1450 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1452:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1452 |               && dfa->syntax.syntax_bits & RE_UNMATCHED_RIGHT_PAREN_ORD)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1453 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1459:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1459 |           if (backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:1459:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1459 |           if (backslash)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1460 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1465:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1465 |               if (!(dfa->syntax.syntax_bits & RE_DOT_NEWLINE))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1466 |                 clrbit ('\n', &ccl);[0m
      | [0;1;32m                                    
[0m[1mdfa.c:1467:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1467 |               if (dfa->syntax.syntax_bits & RE_DOT_NOT_NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1468 |                 clrbit ('\0', &ccl);[0m
      | [0;1;32m                                    
[0m[1mdfa.c:1469:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1469 |               if (dfa->localeinfo.multibyte)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1470 |                 for (int c2 = 0; c2 < NOTCHAR; c2++)[0m
 1471 |                   if (dfa->localeinfo.sbctowc[c2] == WEOF)[0m
 1472 |                     clrbit (c2, &ccl);[0m
      | [0;1;32m                                      
[0m[1mdfa.c:1470:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1470 |                 for (int c2 = 0; c2 < NOTCHAR; c2++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1471 |                   if (dfa->localeinfo.sbctowc[c2] == WEOF)[0m
 1472 |                     clrbit (c2, &ccl);[0m
      | [0;1;32m                                      
[0m[1mdfa.c:1471:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1471 |                   if (dfa->localeinfo.sbctowc[c2] == WEOF)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1472 |                     clrbit (c2, &ccl);[0m
      | [0;1;32m                                      
[0m[1mdfa.c:1482:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1482 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1483 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1484:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1484 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:1484:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1484 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1485 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1491:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1491 |               for (int c2 = 0; c2 < NOTCHAR; ++c2)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1492 |                 if (isspace (c2))[0m
 1493 |                   setbit (c2, &ccl);[0m
      | [0;1;32m                                    
[0m[1mdfa.c:1492:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1492 |                 if (isspace (c2))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1493 |                   setbit (c2, &ccl);[0m
      | [0;1;32m                                    
[0m[1mdfa.c:1494:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |               if (c == 'S')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1495 |                 notset (&ccl);[0m
      | [0;1;32m                              
[0m[1mdfa.c:1518:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1518 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1519 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1520:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1520 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:1520:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1520 |           if (dfa->syntax.syntax_bits & RE_NO_GNU_OPS)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1521 |             goto stray_backslash;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:1527:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1527 |               for (int c2 = 0; c2 < NOTCHAR; ++c2)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1528 |                 if (dfa->syntax.sbit[c2] == CTX_LETTER)[0m
 1529 |                   setbit (c2, &ccl);[0m
      | [0;1;32m                                    
[0m[1mdfa.c:1528:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1528 |                 if (dfa->syntax.sbit[c2] == CTX_LETTER)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1529 |                   setbit (c2, &ccl);[0m
      | [0;1;32m                                    
[0m[1mdfa.c:1530:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1530 |               if (c == 'W')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1531 |                 notset (&ccl);[0m
      | [0;1;32m                              
[0m[1mdfa.c:1553:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1553 |           if (backslash)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1554 |             goto normal_char;[0m
 1555 |           dfa->lex.laststart = false;[0m
 1556 |           return dfa->lex.lasttok = parse_bracket_exp (dfa);[0m
      | [0;1;32m                                                           
[0m      | [0;32m                                                           ;} 
[0m[1mdfa.c:1553:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1553 |           if (backslash)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1554 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1559:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1559 |         default_case:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mdfa.c:1560:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1560 |           if (!backslash)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1561 |             goto normal_char;[0m
      | [0;1;32m                             
[0m[1mdfa.c:1567:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1567 |               if (!iswprint (dfa->lex.wctok))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1568 |                 msg = _("stray \\ before unprintable character");[0m
 1569 |               else if (iswspace (dfa->lex.wctok))[0m
      | [0;32m              } 
[0m[1mdfa.c:1569:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1569 |               else if (iswspace (dfa->lex.wctok))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1570 |                 msg = _("stray \\ before white space");[0m
 1571 |               else[0m
      | [0;32m              } 
[0m[1mdfa.c:1573:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1573 |                   int n = snprintf (msgbuf, sizeof msgbuf,[0m
      | [0;1;32m                          ^~~~~~~~
[0m[1mdfa.c:1573:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1573 |                   int n = snprintf (msgbuf, sizeof msgbuf,[0m
      | [0;1;32m                          ^~~~~~~~
[0m[1mdfa.c:1585:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1585 |           if (dfa->localeinfo.multibyte)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1586 |             return dfa->lex.lasttok = WCHAR;[0m
 1587 | [0m
 1588 |           if (dfa->syntax.case_fold && isalpha (c))[0m
 1589 |             {[0m
 1590 |               charclass ccl;[0m
 1591 |               zeroset (&ccl);[0m
 1592 |               setbit_case_fold_c (c, &ccl);[0m
 1593 |               return dfa->lex.lasttok = CSET + charclass_index (dfa, &ccl);[0m
 1594 |             }[0m
 1595 | [0m
 1596 |           return dfa->lex.lasttok = c;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mdfa.c:1585:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1585 |           if (dfa->localeinfo.multibyte)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1586 |             return dfa->lex.lasttok = WCHAR;[0m
      | [0;1;32m                                            
[0m[1mdfa.c:1608:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1608 |       if (dfa->localeinfo.multibyte)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1609 |         dfa->multibyte_prop = xreallocarray (dfa->multibyte_prop, dfa->talloc,[0m
 1610 |                                              sizeof *dfa->multibyte_prop);[0m
      | [0;1;32m                                                                          
[0m[1mdfa.c:1612:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1612 |   if (dfa->localeinfo.multibyte)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1613 |     dfa->multibyte_prop[dfa->tindex] = mbprop;[0m
      | [0;1;32m                                              
[0m[1mdfa.c:1626:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1626 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mdfa.c:1629:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1629 |       dfa->epsilon = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1630 |       goto increment_depth;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mdfa.c:1633:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1633 |       dfa->fast = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1634 |       goto increment_nleaves;[0m
      | [0;1;32m                            
[0m      | [0;32m                            ;} 
[0m[1mdfa.c:1643:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1643 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1mdfa.c:74:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
   74 | #  define FALLTHROUGH __attribute__ ((__fallthrough__))[0m
      | [0;1;32m                      ^
[0m[1mdfa.c:1645:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1645 |     increment_nleaves:[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1646 |       dfa->nleaves++;[0m
 1647 |     increment_depth:[0m
 1648 |       dfa->parse.depth++;[0m
 1649 |       if (dfa->depth < dfa->parse.depth)[0m
 1650 |         dfa->depth = dfa->parse.depth;[0m
 1651 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdfa.c:1649:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1649 |       if (dfa->depth < dfa->parse.depth)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1650 |         dfa->depth = dfa->parse.depth;[0m
      | [0;1;32m                                      
[0m[1mdfa.c:1671:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1671 |           if (need_or)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1672 |             addtok (dfa, OR);[0m
      | [0;1;32m                             
[0m[1mdfa.c:1682:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1682 |           if (need_or)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1683 |             addtok (dfa, OR);[0m
      | [0;1;32m                             
[0m[1mdfa.c:1706:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1706 |   if (stored_bytes != (size_t) -1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1707 |     buflen = stored_bytes;[0m
 1708 |   else[0m
      | [0;32m  } 
[0m[1mdfa.c:1794:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1794 |       if (! (dfa->syntax.syntax_bits & RE_DOT_NEWLINE))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1795 |         clrbit ('\n', &c);[0m
      | [0;1;32m                          
[0m[1mdfa.c:1796:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1796 |       if (dfa->syntax.syntax_bits & RE_DOT_NOT_NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1797 |         clrbit ('\0', &c);[0m
      | [0;1;32m                          
[0m[1mdfa.c:1800:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1800 |       for (int i = 1; i < sizeof utf8_classes / sizeof *utf8_classes; i++)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1801 |         dfa->utf8_anychar_classes[i][0m
 1802 |           = CSET + charclass_index (dfa, &utf8_classes[i]);[0m
      | [0;1;32m                                                           
[0m[1mdfa.c:1894:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1894 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1895 |         addtok (dfa, dfa->parse.tok);[0m
      | [0;1;32m                                     
[0m[1mdfa.c:1900:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1900 |       if (dfa->lex.wctok == WEOF)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1901 |         addtok (dfa, BACKREF);[0m
 1902 |       else[0m
      | [0;32m      } 
[0m[1mdfa.c:1924:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1924 |       if (dfa->parse.tok != RPAREN)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1925 |         dfaerror (_("unbalanced ("));[0m
      | [0;1;32m                                     
[0m[1mdfa.c:1928:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1928 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1929 |     addtok (dfa, EMPTY);[0m
      | [0;1;32m                        
[0m[1mdfa.c:1939:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1939 |       return 1;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mdfa.c:1957:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1957 |   if (dfa->localeinfo.multibyte)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1958 |     for (idx_t i = 0; i < ntokens; i++)[0m
 1959 |       addtok_mb (dfa, dfa->tokens[tindex + i],[0m
 1960 |                  dfa->multibyte_prop[tindex + i]);[0m
 1961 |   else[0m
      | [0;32m  } 
[0m[1mdfa.c:1958:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1958 |     for (idx_t i = 0; i < ntokens; i++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1959 |       addtok_mb (dfa, dfa->tokens[tindex + i],[0m
 1960 |                  dfa->multibyte_prop[tindex + i]);[0m
      | [0;1;32m                                                  
[0m[1mdfa.c:1961:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1961 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1962 |     for (idx_t i = 0; i < ntokens; i++)[0m
 1963 |       addtok_mb (dfa, dfa->tokens[tindex + i], 3);[0m
      | [0;1;32m                                                  
[0m[1mdfa.c:1962:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1962 |     for (idx_t i = 0; i < ntokens; i++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1963 |       addtok_mb (dfa, dfa->tokens[tindex + i], 3);[0m
      | [0;1;32m                                                  
[0m[1mdfa.c:1971:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1971 |          || dfa->parse.tok == PLUS || dfa->parse.tok == REPMN)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m[1mdfa.c:1976:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1976 |         if (dfa->lex.maxrep < 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1977 |           addtok (dfa, PLUS);[0m
      | [0;1;32m                             
[0m[1mdfa.c:1978:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1978 |         if (dfa->lex.minrep == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1979 |           addtok (dfa, QMARK);[0m
      | [0;1;32m                              
[0m[1mdfa.c:2041:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2041 |   if (!d->syntax.syntax_bits_set)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2042 |     dfaerror (_("no syntax specified"));[0m
      | [0;1;32m                                        
[0m[1mdfa.c:2044:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2044 |   if (!d->nregexps)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2045 |     addtok (d, BEG);[0m
      | [0;1;32m                    
[0m[1mdfa.c:2052:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2052 |   if (d->parse.tok != END)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2053 |     dfaerror (_("unbalanced )"));[0m
      | [0;1;32m                                 
[0m[1mdfa.c:2058:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2058 |   if (d->nregexps)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2059 |     addtok (d, OR);[0m
      | [0;1;32m                   
[0m[1mdfa.c:2077:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2077 |   if (src->nelem != 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2078 |     memcpy (dst->elems, src->elems, src->nelem * sizeof *dst->elems);[0m
      | [0;1;32m                                                                     
[0m[1mdfa.c:2078:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2078 |     memcpy (dst->elems, src->elems, src->nelem * sizeof *dst->elems);[0m
      | [0;1;32m    ^~~~~~
[0m[1mdfa.c:2078:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2078 |     memcpy (dst->elems, src->elems, src->nelem * sizeof *dst->elems);[0m
      | [0;1;32m    ^~~~~~
[0m[1mdfa.c:2101:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2101 |       if (s->elems[mid].index < p.index)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2102 |         lo = mid + 1;[0m
 2103 |       else if (s->elems[mid].index == p.index)[0m
      | [0;32m      } 
[0m[1mdfa.c:2108:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2108 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2109 |         hi = mid;[0m
      | [0;1;32m                 
[0m[1mdfa.c:2113:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2113 |   for (idx_t i = count; i > lo; i--)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2114 |     s->elems[i] = s->elems[i - 1];[0m
      | [0;1;32m                                  
[0m[1mdfa.c:2143:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2143 |   while (i < s1->nelem || j < s2->nelem)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m[1mdfa.c:2180:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2180 |       for (idx_t i = 0; i < src->nelem; i++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2181 |         insert (src->elems[i], dst);[0m
      | [0;1;32m                                    
[0m[1mdfa.c:2200:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2200 |       if (s->elems[mid].index < del)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2201 |         lo = mid + 1;[0m
 2202 |       else if (s->elems[mid].index == del)[0m
      | [0;32m      } 
[0m[1mdfa.c:2206:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2206 |           for (i = mid; i + 1 < count; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2207 |             s->elems[i] = s->elems[i + 1];[0m
      | [0;1;32m                                          
[0m[1mdfa.c:2211:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2211 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2212 |         hi = mid;[0m
      | [0;1;32m                 
[0m[1mdfa.c:2251:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2251 |           || context != d->states[i].context)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2252 |         continue;[0m
      | [0;1;32m                 
[0m[1mdfa.c:2254:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2254 |       for (j = 0; j < s->nelem; ++j)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2255 |         if (s->elems[j].constraint != d->states[i].elems.elems[j].constraint[0m
 2256 |             || s->elems[j].index != d->states[i].elems.elems[j].index)[0m
 2257 |           break;[0m
      | [0;1;32m                
[0m[1mdfa.c:2256:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2256 |             || s->elems[j].index != d->states[i].elems.elems[j].index)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2257 |           break;[0m
      | [0;1;32m                
[0m[1mdfa.c:2258:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2258 |       if (j == s->nelem)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2259 |         return i;[0m
      | [0;1;32m                 
[0m[1mdfa.c:2290:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2290 |           if (succeeds_in_context (c, context, CTX_ANY))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2291 |             constraint |= c;[0m
      | [0;1;32m                            
[0m[1mdfa.c:2293:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2293 |       else if (d->tokens[s->elems[j].index] == BACKREF)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2294 |         constraint = NO_CONSTRAINT;[0m
      | [0;1;32m                                   
[0m[1mdfa.c:2326:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2326 |   for (idx_t i = 0; i < d->tindex; i++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m[1mdfa.c:2333:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2333 |             continue;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1mdfa.c:2336:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2336 |             constraint = BEGLINE_CONSTRAINT;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2337 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mdfa.c:2339:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2339 |             constraint = ENDLINE_CONSTRAINT;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2340 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mdfa.c:2342:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2342 |             constraint = BEGWORD_CONSTRAINT;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2343 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mdfa.c:2345:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2345 |             constraint = ENDWORD_CONSTRAINT;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2346 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mdfa.c:2348:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2348 |             constraint = LIMWORD_CONSTRAINT;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2349 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mdfa.c:2351:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2351 |             constraint = NOTLIMWORD_CONSTRAINT;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2352 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mdfa.c:2354:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2354 |             constraint = NO_CONSTRAINT;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2355 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mdfa.c:2360:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2360 |         for (idx_t j = 0; j < backward[i].nelem; j++)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2361 |           replace (&d->follows[backward[i].elems[j].index], i, &d->follows[i],[0m
 2362 |                    constraint, &tmp);[0m
      | [0;1;32m                                     
[0m[1mdfa.c:2363:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2363 |         for (idx_t j = 0; j < d->follows[i].nelem; j++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2364 |           replace (&backward[d->follows[i].elems[j].index], i, &backward[i],[0m
 2365 |                    NO_CONSTRAINT, &tmp);[0m
      | [0;1;32m                                        
[0m[1mdfa.c:2380:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2380 |       if (c->w[j] & dfa->syntax.newline.w[j])[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2381 |         context |= CTX_NEWLINE;[0m
      | [0;1;32m                               
[0m[1mdfa.c:2382:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2382 |       if (c->w[j] & dfa->syntax.letters.w[j])[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2383 |         context |= CTX_LETTER;[0m
      | [0;1;32m                              
[0m[1mdfa.c:2384:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2384 |       if (c->w[j] & ~(dfa->syntax.letters.w[j] | dfa->syntax.newline.w[j]))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 2385 |         context |= CTX_NONE;[0m
      | [0;1;32m                            
[0m[1mdfa.c:2402:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2402 |   for (idx_t j = 0; j < s->nelem; j++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2403 |     separate_contexts |= d->separates[s->elems[j].index];[0m
      | [0;1;32m                                                         
[0m[1mdfa.c:2441:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2441 |       if (iconstraint == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2442 |         continue;[0m
      | [0;1;32m                 
[0m[1mdfa.c:2458:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2458 |               if (dindex == tindex)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2459 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdfa.c:2461:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2461 |               if (follows[tindex].elems[j].constraint != iconstraint)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 2462 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdfa.c:2464:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2464 |               if (flags[dindex] & (OPT_LPAREN | OPT_RPAREN))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2465 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdfa.c:2467:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2467 |               if (d->tokens[sindex] != d->tokens[dindex])[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2468 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdfa.c:2470:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2470 |               if ((flags[sindex] ^ flags[dindex]) & OPT_REPEAT)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2471 |                 continue;[0m
      | [0;1;32m                         
[0m[1mdfa.c:2473:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2473 |               if (flags[sindex] & OPT_REPEAT)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2474 |                 delete (sindex, &follows[sindex]);[0m
      | [0;1;32m                                                  
[0m[1mdfa.c:2481:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2481 |           if (j < nelem)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2482 |             continue;[0m
      | [0;1;32m                     
[0m[1mdfa.c:2505:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2505 |   for (idx_t i = 1; i < d->tindex; i++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2506 |     map[i] = -1;[0m
      | [0;1;32m                
[0m[1mdfa.c:2529:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2529 |       if (multibyte_prop != NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2530 |         multibyte_prop[map[i]] = d->multibyte_prop[i];[0m
      | [0;1;32m                                                      
[0m[1mdfa.c:2534:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2534 |           if (map[d->follows[i].elems[j].index] == -1)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2535 |             map[d->follows[i].elems[j].index] = nleaves++;[0m
      | [0;1;32m                                                          
[0m[1mdfa.c:2550:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2550 |       if (multibyte_prop != NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2551 |         d->multibyte_prop[i] = multibyte_prop[i];[0m
      | [0;1;32m                                                 
[0m[1mdfa.c:2572:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2572 |           if (d->follows[i].elems[j].index == i)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2573 |             flags[d->follows[i].elems[j].index] |= OPT_REPEAT;[0m
 2574 |           else if (d->follows[i].elems[j].index < i)[0m
      | [0;32m          } 
[0m[1mdfa.c:2574:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2574 |           else if (d->follows[i].elems[j].index < i)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2575 |             flags[d->follows[i].elems[j].index] |= OPT_LPAREN;[0m
 2576 |           else if (flags[d->follows[i].elems[j].index] &= OPT_WALKED)[0m
      | [0;32m          } 
[0m[1mdfa.c:2576:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2576 |           else if (flags[d->follows[i].elems[j].index] &= OPT_WALKED)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 2577 |             flags[d->follows[i].elems[j].index] |= OPT_RPAREN;[0m
 2578 |           else[0m
      | [0;32m          } 
[0m[1mdfa.c:2578:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2578 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2579 |             flags[d->follows[i].elems[j].index] |= OPT_WALKED;[0m
      | [0;1;32m                                                              
[0m[1mdfa.c:2591:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2591 |   for (idx_t i = 0; i < d->tindex; i++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2592 |     if (flags[i] & OPT_QUEUED)[0m
 2593 |       merge_nfa_state (d, i, flags, merged);[0m
      | [0;1;32m                                            
[0m[1mdfa.c:2592:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2592 |     if (flags[i] & OPT_QUEUED)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2593 |       merge_nfa_state (d, i, flags, merged);[0m
      | [0;1;32m                                            
[0m[1mdfa.c:2702:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2702 |           stk->nullable = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2703 | [0m
 2704 |           /* The firstpos and lastpos of the empty leaf are both empty.  */[0m
 2705 |           stk->nfirstpos = stk->nlastpos = 0;[0m
 2706 |           stk++;[0m
 2707 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:2718:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2718 |                    p < firstpos; p++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2719 |                 merge2 (&backward[p->index], &tmp, &merged);[0m
      | [0;1;32m                                                            
[0m[1mdfa.c:2724:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2724 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2725 |             tmp.elems = firstpos - stk[-1].nfirstpos;[0m
 2726 |             tmp.nelem = stk[-1].nfirstpos;[0m
 2727 |             for (position *p = lastpos - stk[-1].nlastpos; p < lastpos; p++)[0m
 2728 |               merge2 (&d->follows[p->index], &tmp, &merged);[0m
 2729 |           }[0m
 2730 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mdfa.c:2727:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2727 |             for (position *p = lastpos - stk[-1].nlastpos; p < lastpos; p++)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2728 |               merge2 (&d->follows[p->index], &tmp, &merged);[0m
      | [0;1;32m                                                            
[0m[1mdfa.c:2733:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2733 |           if (d->tokens[i] != PLUS)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2734 |             stk[-1].nullable = true;[0m
 2735 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:2733:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2733 |           if (d->tokens[i] != PLUS)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2734 |             stk[-1].nullable = true;[0m
      | [0;1;32m                                    
[0m[1mdfa.c:2741:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2741 |           if (backward)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:2746:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2746 |                    p < firstpos; p++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2747 |                 merge2 (&backward[p->index], &tmp, &merged);[0m
      | [0;1;32m                                                            
[0m[1mdfa.c:2757:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2757 |                  p < plim; p++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2758 |               merge2 (&d->follows[p->index], &tmp, &merged);[0m
      | [0;1;32m                                                            
[0m[1mdfa.c:2763:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2763 |           if (stk[-2].nullable)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2764 |             stk[-2].nfirstpos += stk[-1].nfirstpos;[0m
 2765 |           else[0m
      | [0;32m          } 
[0m[1mdfa.c:2765:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2765 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2766 |             firstpos -= stk[-1].nfirstpos;[0m
      | [0;1;32m                                          
[0m[1mdfa.c:2770:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2770 |           if (stk[-1].nullable)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2771 |             stk[-2].nlastpos += stk[-1].nlastpos;[0m
 2772 |           else[0m
      | [0;32m          } 
[0m[1mdfa.c:2775:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2775 |               for (idx_t j = 0; j < stk[-1].nlastpos; j++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2776 |                 p[j] = p[j + stk[-2].nlastpos];[0m
      | [0;1;32m                                               
[0m[1mdfa.c:2788:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2788 |           stk[-2].nfirstpos += stk[-1].nfirstpos;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2789 | [0m
 2790 |           /* The lastpos is the union of the lastpos of each argument.  */[0m
 2791 |           stk[-2].nlastpos += stk[-1].nlastpos;[0m
 2792 | [0m
 2793 |           /* An OR node is nullable if either argument is nullable.  */[0m
 2794 |           stk[-2].nullable |= stk[-1].nullable;[0m
 2795 |           stk--;[0m
 2796 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:2804:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2804 |           stk->nullable = d->tokens[i] == BACKREF;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2805 | [0m
 2806 |           /* This position is in its own firstpos and lastpos.  */[0m
 2807 |           stk->nfirstpos = stk->nlastpos = 1;[0m
 2808 |           stk++;[0m
 2809 | [0m
 2810 |           firstpos->index = lastpos->index = i;[0m
 2811 |           firstpos->constraint = lastpos->constraint = NO_CONSTRAINT;[0m
 2812 |           firstpos++, lastpos++;[0m
 2813 | [0m
 2814 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:2845:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2845 |       for (idx_t i = 0; i < tindex; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2846 |         free (backward[i].elems);[0m
      | [0;1;32m                                 
[0m[1mdfa.c:2881:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2881 |       if (prev_newline_dependent (d->constraints[i]))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2882 |         d->separates[i] |= CTX_NEWLINE;[0m
      | [0;1;32m                                       
[0m[1mdfa.c:2883:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2883 |       if (prev_letter_dependent (d->constraints[i]))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2884 |         d->separates[i] |= CTX_LETTER;[0m
      | [0;1;32m                                      
[0m[1mdfa.c:2888:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2888 |           if (prev_newline_dependent (d->follows[i].elems[j].constraint))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 2889 |             d->separates[i] |= CTX_NEWLINE;[0m
      | [0;1;32m                                           
[0m[1mdfa.c:2890:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2890 |           if (prev_letter_dependent (d->follows[i].elems[j].constraint))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 2891 |             d->separates[i] |= CTX_LETTER;[0m
      | [0;1;32m                                          
[0m[1mdfa.c:2899:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2899 |   if (separate_contexts & CTX_NEWLINE)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2900 |     state_index (d, &tmp, CTX_NEWLINE);[0m
      | [0;1;32m                                       
[0m[1mdfa.c:2903:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2903 |   if (separate_contexts & CTX_LETTER)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2904 |     d->min_trcount = state_index (d, &tmp, CTX_LETTER);[0m
      | [0;1;32m                                                       
[0m[1mdfa.c:2935:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2935 |           if (oldalloc == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2936 |             realtrans[0] = realtrans[1] = NULL;[0m
      | [0;1;32m                                               
[0m[1mdfa.c:2943:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2943 |           if (d->localeinfo.multibyte)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2944 |             d->mb_trans[oldalloc] = NULL;[0m
      | [0;1;32m                                         
[0m[1mdfa.c:3023:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3023 |       for (int i = 0; i < NOTCHAR; i++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3024 |         trans[i] = -2;[0m
      | [0;1;32m                      
[0m[1mdfa.c:3029:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3029 |   if (accepts_in_context (d->states[s].context, CTX_NEWLINE, s, d))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 3030 |     d->success[s] |= CTX_NEWLINE;[0m
      | [0;1;32m                                 
[0m[1mdfa.c:3031:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3031 |   if (accepts_in_context (d->states[s].context, CTX_LETTER, s, d))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 3032 |     d->success[s] |= CTX_LETTER;[0m
      | [0;1;32m                                
[0m[1mdfa.c:3033:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3033 |   if (accepts_in_context (d->states[s].context, CTX_NONE, s, d))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 3034 |     d->success[s] |= CTX_NONE;[0m
      | [0;1;32m                              
[0m[1mdfa.c:3040:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3040 |   for (idx_t j = 0; j < d->states[s].elems.nelem; j++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3041 |     for (idx_t k = 0;[0m
 3042 |          k < d->follows[d->states[s].elems.elems[j].index].nelem; ++k)[0m
 3043 |       insert (d->follows[d->states[s].elems.elems[j].index].elems[k],[0m
 3044 |               &follows);[0m
      | [0;1;32m                        
[0m[1mdfa.c:3042:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3042 |          k < d->follows[d->states[s].elems.elems[j].index].nelem; ++k)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 3043 |       insert (d->follows[d->states[s].elems.elems[j].index].elems[k],[0m
 3044 |               &follows);[0m
      | [0;1;32m                        
[0m[1mdfa.c:3062:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3062 |           if (d->tokens[pos.index] == uc)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3063 |             matched = true;[0m
      | [0;1;32m                           
[0m[1mdfa.c:3068:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3068 |           if (tstbit (uc, &matches))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3069 |             matched = true;[0m
      | [0;1;32m                           
[0m[1mdfa.c:3074:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3074 |           if (tstbit (uc, &matches))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3075 |             matched = true;[0m
      | [0;1;32m                           
[0m[1mdfa.c:3086:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3086 |               if (d->states[s].mbps.nelem == 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3087 |                 alloc_position_set (&d->states[s].mbps, 1);[0m
      | [0;1;32m                                                           
[0m[1mdfa.c:3091:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3091 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3092 |         continue;[0m
      | [0;1;32m                 
[0m[1mdfa.c:3099:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3099 |                                     d->states[s].context, CTX_NEWLINE))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 3100 |             for (int j = 0; j < CHARCLASS_WORDS; j++)[0m
 3101 |               matches.w[j] &= ~d->syntax.newline.w[j];[0m
      | [0;1;32m                                                      
[0m[1mdfa.c:3100:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3100 |             for (int j = 0; j < CHARCLASS_WORDS; j++)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3101 |               matches.w[j] &= ~d->syntax.newline.w[j];[0m
      | [0;1;32m                                                      
[0m[1mdfa.c:3103:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3103 |                                     d->states[s].context, CTX_LETTER))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 3104 |             for (int j = 0; j < CHARCLASS_WORDS; ++j)[0m
 3105 |               matches.w[j] &= ~d->syntax.letters.w[j];[0m
      | [0;1;32m                                                      
[0m[1mdfa.c:3104:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3104 |             for (int j = 0; j < CHARCLASS_WORDS; ++j)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3105 |               matches.w[j] &= ~d->syntax.letters.w[j];[0m
      | [0;1;32m                                                      
[0m[1mdfa.c:3107:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3107 |                                     d->states[s].context, CTX_NONE))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 3108 |             for (int j = 0; j < CHARCLASS_WORDS; ++j)[0m
 3109 |               matches.w[j] &= d->syntax.letters.w[j] | d->syntax.newline.w[j];[0m
      | [0;1;32m                                                                              
[0m[1mdfa.c:3108:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3108 |             for (int j = 0; j < CHARCLASS_WORDS; ++j)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3109 |               matches.w[j] &= d->syntax.letters.w[j] | d->syntax.newline.w[j];[0m
      | [0;1;32m                                                                              
[0m[1mdfa.c:3112:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3112 |           if (emptyset (&matches))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3113 |             continue;[0m
      | [0;1;32m                     
[0m[1mdfa.c:3118:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3118 |           if (!tstbit (uc, &matches))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3119 |             matched = false;[0m
      | [0;1;32m                            
[0m[1mdfa.c:3134:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3134 |           for (int k = 0; k < CHARCLASS_WORDS; ++k)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3135 |             label.w[k] &= matches.w[k];[0m
      | [0;1;32m                                       
[0m[1mdfa.c:3140:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3140 |           for (int k = 0; k < CHARCLASS_WORDS; ++k)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3141 |             label.w[k] &= ~matches.w[k];[0m
      | [0;1;32m                                        
[0m[1mdfa.c:3174:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3174 |               for (idx_t j = 0; mergeit && j < group.nelem; j++)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 3175 |                 mergeit &= d->multibyte_prop[group.elems[j].index];[0m
      | [0;1;32m                                                                   
[0m[1mdfa.c:3177:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3177 |           if (mergeit)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3178 |             merge2 (&group, &d->states[0].elems, &tmp);[0m
      | [0;1;32m                                                       
[0m[1mdfa.c:3188:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3188 |       if (possible_contexts & ~separate_contexts)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 3189 |         state = state_index (d, &group, separate_contexts ^ CTX_ANY);[0m
 3190 |       else[0m
      | [0;32m      } 
[0m[1mdfa.c:3190:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3190 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3191 |         state = -1;[0m
      | [0;1;32m                   
[0m[1mdfa.c:3192:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3192 |       if (separate_contexts & possible_contexts & CTX_NEWLINE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 3193 |         state_newline = state_index (d, &group, CTX_NEWLINE);[0m
 3194 |       else[0m
      | [0;32m      } 
[0m[1mdfa.c:3194:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3194 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3195 |         state_newline = state;[0m
      | [0;1;32m                              
[0m[1mdfa.c:3196:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3196 |       if (separate_contexts & possible_contexts & CTX_LETTER)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 3197 |         state_letter = state_index (d, &group, CTX_LETTER);[0m
 3198 |       else[0m
      | [0;32m      } 
[0m[1mdfa.c:3198:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3198 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3199 |         state_letter = state;[0m
      | [0;1;32m                             
[0m[1mdfa.c:3222:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3222 |   for (int i = 0; i < NOTCHAR; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3223 |     if (tstbit (i, &label))[0m
 3224 |       switch (d->syntax.sbit[i])[0m
 3225 |         {[0m
 3226 |         case CTX_NEWLINE:[0m
 3227 |           trans[i] = state_newline;[0m
 3228 |           break;[0m
 3229 |         case CTX_LETTER:[0m
 3230 |           trans[i] = state_letter;[0m
 3231 |           break;[0m
 3232 |         default:[0m
 3233 |           trans[i] = state;[0m
 3234 |           break;[0m
 3235 |         }[0m
      | [0;1;32m         
[0m[1mdfa.c:3223:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3223 |     if (tstbit (i, &label))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3224 |       switch (d->syntax.sbit[i])[0m
 3225 |         {[0m
 3226 |         case CTX_NEWLINE:[0m
 3227 |           trans[i] = state_newline;[0m
 3228 |           break;[0m
 3229 |         case CTX_LETTER:[0m
 3230 |           trans[i] = state_letter;[0m
 3231 |           break;[0m
 3232 |         default:[0m
 3233 |           trans[i] = state;[0m
 3234 |           break;[0m
 3235 |         }[0m
      | [0;1;32m         
[0m[1mdfa.c:3227:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3227 |           trans[i] = state_newline;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3228 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:3230:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3230 |           trans[i] = state_letter;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3231 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:3233:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3233 |           trans[i] = state;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3234 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:3274:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3274 |   if (d->trans[s])[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3275 |     t = d->trans[s];[0m
 3276 |   else if (d->fails[s])[0m
      | [0;32m  } 
[0m[1mdfa.c:3276:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3276 |   else if (d->fails[s])[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3277 |     t = d->fails[s];[0m
 3278 |   else[0m
      | [0;32m  } 
[0m[1mdfa.c:3281:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3281 |       if (d->trans[s])[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3282 |         t = d->trans[s];[0m
 3283 |       else[0m
      | [0;32m      } 
[0m[1mdfa.c:3290:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3290 |   if (t[**pp] == -2)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3291 |     build_state (s, d, **pp);[0m
      | [0;1;32m                             
[0m[1mdfa.c:3314:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3314 |   for (mbci = 0; mbci < mbclen && (mbci == 0 || d->min_trcount <= s); mbci++)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 3315 |     s = transit_state_singlebyte (d, s, pp);[0m
      | [0;1;32m                                            
[0m[1mdfa.c:3338:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3338 |           for (state_num i = 0; i < d->sindex; i++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3339 |             d->states[i].mb_trindex = -1;[0m
      | [0;1;32m                                         
[0m[1mdfa.c:3350:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3350 |       for (int i = 0; i < MAX_TRCOUNT; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3351 |         d->mb_trans[s][i] = -1;[0m
      | [0;1;32m                               
[0m[1mdfa.c:3353:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3353 |   else if (d->mb_trans[s][d->states[s1].mb_trindex] >= 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3354 |     return d->mb_trans[s][d->states[s1].mb_trindex];[0m
      | [0;1;32m                                                    
[0m[1mdfa.c:3356:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3356 |   if (s == -1)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3357 |     copy (&d->states[s1].mbps, &d->mb_follows);[0m
 3358 |   else[0m
      | [0;32m  } 
[0m[1mdfa.c:3358:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3358 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3359 |     merge (&d->states[s1].mbps, &d->states[s].elems, &d->mb_follows);[0m
      | [0;1;32m                                                                     
[0m[1mdfa.c:3365:44: [0m[0;1;35mwarning: [0m[1mArray access results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
 3365 |   d->mb_trans[s][d->states[s1].mb_trindex] = s2;[0m
      | [0;1;32m  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
[0m[1mdfa.c:3314:18: [0m[0;1;36mnote: [0m'mbci' is < 'mbclen'[0m
 3314 |   for (mbci = 0; mbci < mbclen && (mbci == 0 || d->min_trcount <= s); mbci++)[0m
      | [0;1;32m                 ^~~~
[0m[1mdfa.c:3314:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mdfa.c:3314:36: [0m[0;1;36mnote: [0m'mbci' is equal to 0[0m
 3314 |   for (mbci = 0; mbci < mbclen && (mbci == 0 || d->min_trcount <= s); mbci++)[0m
      | [0;1;32m                                   ^~~~
[0m[1mdfa.c:3314:46: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 3314 |   for (mbci = 0; mbci < mbclen && (mbci == 0 || d->min_trcount <= s); mbci++)[0m
      | [0;1;32m                                             ^
[0m[1mdfa.c:3315:5: [0m[0;1;36mnote: [0mValue assigned to 's'[0m
 3315 |     s = transit_state_singlebyte (d, s, pp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:3314:18: [0m[0;1;36mnote: [0m'mbci' is >= 'mbclen'[0m
 3314 |   for (mbci = 0; mbci < mbclen && (mbci == 0 || d->min_trcount <= s); mbci++)[0m
      | [0;1;32m                 ^~~~
[0m[1mdfa.c:3314:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 3314 |   for (mbci = 0; mbci < mbclen && (mbci == 0 || d->min_trcount <= s); mbci++)[0m
      | [0;1;32m                               ^
[0m[1mdfa.c:3318:7: [0m[0;1;36mnote: [0m'wc' is not equal to WEOF[0m
 3318 |   if (wc == WEOF)[0m
      | [0;1;32m      ^~
[0m[1mdfa.c:3318:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 3318 |   if (wc == WEOF)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:3327:7: [0m[0;1;36mnote: [0mAssuming field 'mb_trindex' is >= 0[0m
 3327 |   if (d->states[s1].mb_trindex < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:3327:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 3327 |   if (d->states[s1].mb_trindex < 0)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:3345:9: [0m[0;1;36mnote: [0mAssuming index is less than the number of 'state_num *' elements in the region[0m
 3345 |   if (! d->mb_trans[s])[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mdfa.c:3345:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 3345 |   if (! d->mb_trans[s])[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mdfa.c:3345:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 3345 |   if (! d->mb_trans[s])[0m
      | [0;1;32m  ^
[0m[1mdfa.c:3353:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 3353 |   else if (d->mb_trans[s][d->states[s1].mb_trindex] >= 0)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:3353:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 3353 |   else if (d->mb_trans[s][d->states[s1].mb_trindex] >= 0)[0m
      | [0;1;32m       ^
[0m[1mdfa.c:3356:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 3356 |   if (s == -1)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mdfa.c:3356:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 3356 |   if (s == -1)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:3363:3: [0m[0;1;36mnote: [0mCalling 'realloc_trans_if_necessary'[0m
 3363 |   realloc_trans_if_necessary (d);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:2919:7: [0m[0;1;36mnote: [0mAssuming 'oldalloc' is < field 'sindex'[0m
 2919 |   if (oldalloc < d->sindex)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:2919:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2919 |   if (oldalloc < d->sindex)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:2921:31: [0m[0;1;36mnote: [0mAssuming field 'trans' is null[0m
 2921 |       state_num **realtrans = d->trans ? d->trans - 2 : NULL;[0m
      | [0;1;32m                              ^~~~~~~~
[0m[1mdfa.c:2921:31: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdfa.c:2922:25: [0m[0;1;36mnote: [0m'realtrans' is null[0m
 2922 |       idx_t newalloc1 = realtrans ? d->tralloc + 2 : 0;[0m
      | [0;1;32m                        ^~~~~~~~~
[0m[1mdfa.c:2922:25: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdfa.c:2931:11: [0m[0;1;36mnote: [0mAssuming field 'multibyte' is true[0m
 2931 |       if (d->localeinfo.multibyte)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:2931:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2931 |       if (d->localeinfo.multibyte)[0m
      | [0;1;32m      ^
[0m[1mdfa.c:2933:23: [0m[0;1;36mnote: [0mAssuming field 'mb_trans' is null[0m
 2933 |           realtrans = d->mb_trans ? d->mb_trans - 2 : NULL;[0m
      | [0;1;32m                      ^~~~~~~~~~~
[0m[1mdfa.c:2933:23: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdfa.c:2935:15: [0m[0;1;36mnote: [0mAssuming 'oldalloc' is equal to 0[0m
 2935 |           if (oldalloc == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1mdfa.c:2935:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 2935 |           if (oldalloc == 0)[0m
      | [0;1;32m          ^
[0m[1mdfa.c:2936:28: [0m[0;1;36mnote: [0mStoring null pointer value[0m
 2936 |             realtrans[0] = realtrans[1] = NULL;[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:2939:14: [0m[0;1;36mnote: [0mAssuming 'oldalloc' is >= 'newalloc'[0m
 2939 |       for (; oldalloc < newalloc; oldalloc++)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:2939:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 3363[0m
 2939 |       for (; oldalloc < newalloc; oldalloc++)[0m
      | [0;1;32m      ^
[0m[1mdfa.c:3363:3: [0m[0;1;36mnote: [0mReturning from 'realloc_trans_if_necessary'[0m
 3363 |   realloc_trans_if_necessary (d);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:3365:44: [0m[0;1;36mnote: [0mArray access results in a null pointer dereference[0m
 3365 |   d->mb_trans[s][d->states[s1].mb_trindex] = s2;[0m
      | [0;1;32m  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
[0m[1mdfa.c:3389:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3389 |   if (d->syntax.never_trail[*p])[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3390 |     return p;[0m
      | [0;1;32m             
[0m[1mdfa.c:3451:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3451 |           for (state_num s = 0; s < d->min_trcount; s++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 3452 |             d->states[s].mb_trindex = -1;[0m
      | [0;1;32m                                         
[0m[1mdfa.c:3457:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3457 |   if (!d->tralloc)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3458 |     realloc_trans_if_necessary (d);[0m
      | [0;1;32m                                   
[0m[1mdfa.c:3475:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3475 |       memset (&d->mbs, 0, sizeof d->mbs);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:3475:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3475 |       memset (&d->mbs, 0, sizeof d->mbs);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:3476:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3476 |       if (d->mb_follows.alloc == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3477 |         alloc_position_set (&d->mb_follows, d->nleaves);[0m
      | [0;1;32m                                                        
[0m[1mdfa.c:3484:19: [0m[0;1;35mwarning: [0m[1mArray access (from variable 'trans') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
 3484 |       while ((t = trans[s]) != NULL)[0m
      | [0;1;32m                  ^
[0m[1mdfa.c:3614:10: [0m[0;1;36mnote: [0mCalling 'dfaexec_main'[0m
 3614 |   return dfaexec_main (d, begin, end, allow_nl, count, false);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:3424:7: [0m[0;1;36mnote: [0mAssuming MAX_TRCOUNT is <= field 'sindex'[0m
 3424 |   if (MAX_TRCOUNT <= d->sindex)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:3424:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 3424 |   if (MAX_TRCOUNT <= d->sindex)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:3426:42: [0m[0;1;36mnote: [0mAssuming 's' is >= field 'sindex'[0m
 3426 |       for (state_num s = d->min_trcount; s < d->sindex; s++)[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~
[0m[1mdfa.c:3426:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 3431[0m
 3426 |       for (state_num s = d->min_trcount; s < d->sindex; s++)[0m
      | [0;1;32m      ^
[0m[1mdfa.c:3433:11: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 3433 |       if (d->trans)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mdfa.c:3433:11: [0m[0;1;36mnote: [0mAssuming field 'trans' is null[0m
 3433 |       if (d->trans)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mdfa.c:3433:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 3433 |       if (d->trans)[0m
      | [0;1;32m      ^
[0m[1mdfa.c:3444:11: [0m[0;1;36mnote: [0mAssuming field 'multibyte' is false[0m
 3444 |       if (d->localeinfo.multibyte && d->mb_trans)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdfa.c:3444:35: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 3444 |       if (d->localeinfo.multibyte && d->mb_trans)[0m
      | [0;1;32m                                  ^
[0m[1mdfa.c:3457:7: [0m[0;1;36mnote: [0mAssuming field 'tralloc' is not equal to 0[0m
 3457 |   if (!d->tralloc)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mdfa.c:3457:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 3457 |   if (!d->tralloc)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:3468:3: [0m[0;1;36mnote: [0m'trans' initialized to a null pointer value[0m
 3468 |   state_num **trans = d->trans;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~
[0m[1mdfa.c:3473:7: [0m[0;1;36mnote: [0m'multibyte' is false[0m
 3473 |   if (multibyte)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdfa.c:3473:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 3473 |   if (multibyte)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:3481:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 3481 |   for (;;)[0m
      | [0;1;32m  ^
[0m[1mdfa.c:3484:19: [0m[0;1;36mnote: [0mArray access (from variable 'trans') results in a null pointer dereference[0m
 3484 |       while ((t = trans[s]) != NULL)[0m
      | [0;1;32m                  ^~~~~
[0m[1mdfa.c:3490:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3490 |                   while (t[*p] == s)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3491 |                     p++;[0m
      | [0;1;32m                        
[0m[1mdfa.c:3493:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3493 |               if (multibyte)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3494 |                 p = mbp = skip_remains_mb (d, p, mbp, end);[0m
      | [0;1;32m                                                           
[0m[1mdfa.c:3528:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3528 |                   while (t[*p] == s1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3529 |                     p++;[0m
      | [0;1;32m                        
[0m[1mdfa.c:3565:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3565 |                                          d)))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3566 |             goto done;[0m
      | [0;1;32m                      
[0m[1mdfa.c:3568:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3568 |           if (multibyte && s < d->min_trcount)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3569 |             p = mbp = skip_remains_mb (d, p, mbp, end);[0m
      | [0;1;32m                                                       
[0m[1mdfa.c:3594:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3594 |   if (count)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3595 |     *count += nlcount;[0m
      | [0;1;32m                      
[0m[1mdfa.c:3660:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3660 |       for (s = -1; s < d->tralloc; s++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3661 |         free (d->mb_trans[s]);[0m
      | [0;1;32m                              
[0m[1mdfa.c:3678:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3678 |           if (!d->localeinfo.multibyte)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3679 |             continue;[0m
      | [0;1;32m                     
[0m[1mdfa.c:3680:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3680 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1mdfa.c:74:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
   74 | #  define FALLTHROUGH __attribute__ ((__fallthrough__))[0m
      | [0;1;32m                      ^
[0m[1mdfa.c:3694:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3694 |   if (!d->localeinfo.using_utf8)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3695 |     return;[0m
      | [0;1;32m           
[0m[1mdfa.c:3704:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3704 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mdfa.c:3706:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3706 |           have_backref = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3707 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:3710:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3710 |           return;[0m
      | [0;1;32m          ^     
[0m      | [0;32m          {     ;} 
[0m[1mdfa.c:3712:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3712 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdfa.c:3754:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3754 |       memcpy (sup->charclasses, d->charclasses,[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:3754:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3754 |       memcpy (sup->charclasses, d->charclasses,[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:3777:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3777 |                 || d->tokens[i + 1] == PLUS)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3778 |               i++;[0m
      | [0;1;32m                  
[0m[1mdfa.c:3781:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3781 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdfa.c:3793:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3793 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1mdfa.c:74:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
   74 | #  define FALLTHROUGH __attribute__ ((__fallthrough__))[0m
      | [0;1;32m                      ^
[0m[1mdfa.c:3795:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3795 |           sup->tokens[j++] = d->tokens[i];[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3796 |           if ((0 <= d->tokens[i] && d->tokens[i] < NOTCHAR)[0m
 3797 |               || d->tokens[i] >= CSET)[0m
 3798 |             have_nchar = true;[0m
 3799 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:3797:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3797 |               || d->tokens[i] >= CSET)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3798 |             have_nchar = true;[0m
      | [0;1;32m                              
[0m[1mdfa.c:3804:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3804 |   if (have_nchar && (have_achar || d->localeinfo.multibyte))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 3805 |     d->superset = sup;[0m
 3806 |   else[0m
      | [0;32m  } 
[0m[1mdfa.c:3819:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3819 |   if (s != NULL)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3820 |     dfaparse (s, len, d);[0m
      | [0;1;32m                         
[0m[1mdfa.c:3848:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3848 |   if (d->localeinfo.multibyte)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3849 |     free_mbdata (d);[0m
      | [0;1;32m                    
[0m[1mdfa.c:3863:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3863 |       for (idx_t i = 0; i < d->tindex; i++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3864 |         free (d->follows[i].elems);[0m
      | [0;1;32m                                   
[0m[1mdfa.c:3975:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3975 |   if (newsize == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3976 |     return old;[0m
      | [0;1;32m               
[0m[1mdfa.c:3979:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3979 |   memcpy (result + oldsize, new, newsize + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdfa.c:3979:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3979 |   memcpy (result + oldsize, new, newsize + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdfa.c:3986:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3986 |   while (*cpp)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3987 |     free (*cpp++);[0m
      | [0;1;32m                  
[0m[1mdfa.c:3995:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3995 |   for (i = 0; cpp[i] != NULL; i++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3996 |     if (strstr (cpp[i], new) != NULL)[0m
 3997 |       {[0m
 3998 |         free (new);[0m
 3999 |         return cpp;[0m
 4000 |       }[0m
      | [0;1;32m       
[0m[1mdfa.c:4002:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4002 |   for (idx_t j = 0; cpp[j] != NULL; )[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 4003 |     if (strstr (new, cpp[j]) == NULL)[0m
 4004 |       ++j;[0m
 4005 |     else[0m
 4006 |       {[0m
 4007 |         free (cpp[j]);[0m
 4008 |         if (--i == j)[0m
 4009 |           break;[0m
 4010 |         cpp[j] = cpp[i];[0m
 4011 |         cpp[i] = NULL;[0m
 4012 |       }[0m
      | [0;1;32m       
[0m[1mdfa.c:4003:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4003 |     if (strstr (new, cpp[j]) == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 4004 |       ++j;[0m
 4005 |     else[0m
      | [0;32m    } 
[0m[1mdfa.c:4008:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4008 |         if (--i == j)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 4009 |           break;[0m
      | [0;1;32m                
[0m[1mdfa.c:4040:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4040 |           for (i = 1; lcp[i] != '\0' && lcp[i] == rcp[i]; ++i)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 4041 |             continue;[0m
      | [0;1;32m                     
[0m[1mdfa.c:4042:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4042 |           if (i > len)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4043 |             len = i;[0m
      | [0;1;32m                    
[0m[1mdfa.c:4046:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4046 |       if (len != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 4047 |         cpp = enlist (cpp, lcp, len);[0m
      | [0;1;32m                                     
[0m[1mdfa.c:4055:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4055 |   for (; *new; new++)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 4056 |     old = enlistnew (old, xstrdup (*new));[0m
      | [0;1;32m                                          
[0m[1mdfa.c:4146:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4146 |           mp = allocmust (mp, 2);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4147 |           mp->begline = true;[0m
 4148 |           need_begline = true;[0m
 4149 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:4151:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4151 |           mp = allocmust (mp, 2);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4152 |           mp->endline = true;[0m
 4153 |           need_endline = true;[0m
 4154 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:4168:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4168 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdfa.c:4173:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4173 |           resetmust (mp);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4174 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:4177:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4177 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:4199:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4199 |             while (lmp->left[i] != '\0' && lmp->left[i] == rmp->left[i])[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 4200 |               ++i;[0m
      | [0;1;32m                  
[0m[1mdfa.c:4206:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4206 |             if (n > rn)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 4207 |               n = rn;[0m
      | [0;1;32m                     
[0m[1mdfa.c:4208:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4208 |             for (i = 0; i < n; ++i)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 4209 |               if (lmp->right[ln - i - 1] != rmp->right[rn - i - 1])[0m
 4210 |                 break;[0m
      | [0;1;32m                      
[0m[1mdfa.c:4209:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4209 |               if (lmp->right[ln - i - 1] != rmp->right[rn - i - 1])[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 4210 |                 break;[0m
      | [0;1;32m                      
[0m[1mdfa.c:4211:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4211 |             for (j = 0; j < i; ++j)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 4212 |               lmp->right[j] = lmp->right[(ln - i) + j];[0m
      | [0;1;32m                                                       
[0m[1mdfa.c:4223:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4223 |           assume_nonnull (mp);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4224 |           mp->is[0] = '\0';[0m
 4225 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:44:27: [0m[0;1;36mnote: [0mexpanded from macro 'assume_nonnull'[0m
   44 | #define assume_nonnull(x) assume ((x) != NULL)[0m
      | [0;1;32m                          ^
[0m[1m./verify.h:357:20: [0m[0;1;36mnote: [0mexpanded from macro 'assume'[0m
  357 | # define assume(R) ((R) ? (void) 0 : __builtin_unreachable ())[0m
      | [0;1;32m                   ^
[0m[1mdfa.c:4228:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4228 |           assume_nonnull (mp);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4229 |           assert (!mp->prev);[0m
 4230 |           for (idx_t i = 0; mp->in[i] != NULL; i++)[0m
 4231 |             if (strlen (mp->in[i]) > strlen (result))[0m
 4232 |               result = mp->in[i];[0m
 4233 |           if (str_eq (result, mp->is))[0m
 4234 |             {[0m
 4235 |               if ((!need_begline || mp->begline) && (!need_endline[0m
 4236 |                                                      || mp->endline))[0m
 4237 |                 exact = true;[0m
 4238 |               begline = mp->begline;[0m
 4239 |               endline = mp->endline;[0m
 4240 |             }[0m
 4241 |           goto done;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdfa.c:44:27: [0m[0;1;36mnote: [0mexpanded from macro 'assume_nonnull'[0m
   44 | #define assume_nonnull(x) assume ((x) != NULL)[0m
      | [0;1;32m                          ^
[0m[1m./verify.h:357:20: [0m[0;1;36mnote: [0mexpanded from macro 'assume'[0m
  357 | # define assume(R) ((R) ? (void) 0 : __builtin_unreachable ())[0m
      | [0;1;32m                   ^
[0m[1mdfa.c:4230:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4230 |           for (idx_t i = 0; mp->in[i] != NULL; i++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 4231 |             if (strlen (mp->in[i]) > strlen (result))[0m
 4232 |               result = mp->in[i];[0m
      | [0;1;32m                                 
[0m[1mdfa.c:4231:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4231 |             if (strlen (mp->in[i]) > strlen (result))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 4232 |               result = mp->in[i];[0m
      | [0;1;32m                                 
[0m[1mdfa.c:4236:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4236 |                                                      || mp->endline))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 4237 |                 exact = true;[0m
      | [0;1;32m                             
[0m[1mdfa.c:4244:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4244 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:4259:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4259 |                 memcpy (tp + lrlen, rmp->left, rllen + 1);[0m
      | [0;1;32m                ^~~~~~
[0m[1mdfa.c:4259:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 4259 |                 memcpy (tp + lrlen, rmp->left, rllen + 1);[0m
      | [0;1;32m                ^~~~~~
[0m[1mdfa.c:4260:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4260 |                 memcpy (tp, lmp->right, lrlen);[0m
      | [0;1;32m                ^~~~~~
[0m[1mdfa.c:4260:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 4260 |                 memcpy (tp, lmp->right, lrlen);[0m
      | [0;1;32m                ^~~~~~
[0m[1mdfa.c:4264:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4264 |             if (lmp->is[0] != '\0')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 4265 |               lmp->left = icatalloc (lmp->left, rmp->left);[0m
      | [0;1;32m                                                           
[0m[1mdfa.c:4267:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4267 |             if (rmp->is[0] == '\0')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 4268 |               lmp->right[0] = '\0';[0m
      | [0;1;32m                                   
[0m[1mdfa.c:4289:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4289 |           goto done;[0m
      | [0;1;32m          ^        
[0m      | [0;32m          {        ;} 
[0m[1mdfa.c:4292:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4292 |           if (CSET <= t)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdfa.c:4300:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4300 |               for (j = 0; j < NOTCHAR; j++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 4301 |                 if (tstbit (j, ccl))[0m
 4302 |                   break;[0m
      | [0;1;32m                        
[0m[1mdfa.c:4301:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4301 |                 if (tstbit (j, ccl))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 4302 |                   break;[0m
      | [0;1;32m                        
[0m[1mdfa.c:4309:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4309 |               while (++j < NOTCHAR)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 4310 |                 if (tstbit (j, ccl)[0m
 4311 |                     && ! (case_fold_unibyte[0m
 4312 |                           && toupper (j) == toupper (t)))[0m
 4313 |                   break;[0m
      | [0;1;32m                        
[0m[1mdfa.c:4312:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4312 |                           && toupper (j) == toupper (t)))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 4313 |                   break;[0m
      | [0;1;32m                        
[0m[1mdfa.c:4328:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4328 |                       || d->tokens[rj + 1] != CAT)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 4329 |                     break;[0m
      | [0;1;32m                          
[0m[1mdfa.c:4358:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 4358 |       strcpy (dm->must, result);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:4358:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 4358 |       strcpy (dm->must, result);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdfa.c:4388:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4388 |   memset (dfa, 0, offsetof (struct dfa, dfaexec));[0m
      | [0;1;32m  ^~~~~~
[0m[1mdfa.c:4388:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 4388 |   memset (dfa, 0, offsetof (struct dfa, dfaexec));[0m
      | [0;1;32m  ^~~~~~
[0m[1mdfa.c:4409:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4409 |           setbit (uc, &dfa->syntax.letters);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4410 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:4412:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4412 |           setbit (uc, &dfa->syntax.newline);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 4413 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdfa.c:4428:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4428 |   memset (to, 0, offsetof (struct dfa, syntax));[0m
      | [0;1;32m  ^~~~~~
[0m[1mdfa.c:4428:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 4428 |   memset (to, 0, offsetof (struct dfa, syntax));[0m
      | [0;1;32m  ^~~~~~
[0m373 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
