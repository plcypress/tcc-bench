Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/twemproxy
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 54 files out of 54 in compilation database ...
[ 1/54][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp1hlmvmlv.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/event/nc_evport.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 2/54][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpd28fpmu8.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_crc16.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 3/54][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp5m3m4tm9.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/run-loader.c
[1mrun-loader.c:51:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |             if (!done) count ++;[0m
      | [0;1;32m                      ^         
[0m      | [0;32m                       {
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 4/54][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpee1qlxi6.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/event/nc_kqueue.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 5/54][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpt1wxd3_j.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/example-reformatter-alt.c
[1mexample-reformatter-alt.c:22:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   22 |     memset(&parser, 0, sizeof(parser));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter-alt.c:22:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   22 |     memset(&parser, 0, sizeof(parser));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter-alt.c:23:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   23 |     memset(&emitter, 0, sizeof(emitter));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter-alt.c:23:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   23 |     memset(&emitter, 0, sizeof(emitter));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter-alt.c:24:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   24 |     memset(&document, 0, sizeof(document));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter-alt.c:24:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   24 |     memset(&document, 0, sizeof(document));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter-alt.c:46:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   46 |             fprintf(stderr, "Unrecognized option: %s\n"[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:46:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   46 |             fprintf(stderr, "Unrecognized option: %s\n"[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:68:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |     if (!yaml_parser_initialize(&parser))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   69 |         goto parser_error;[0m
      | [0;1;32m                          
[0m[1mexample-reformatter-alt.c:71:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |     if (!yaml_emitter_initialize(&emitter))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m   72 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-reformatter-alt.c:91:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |         if (!yaml_parser_load(&parser, &document))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m   92 |             goto parser_error;[0m
      | [0;1;32m                              
[0m[1mexample-reformatter-alt.c:102:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |         if (!yaml_emitter_dump(&emitter, &document))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  103 |             goto emitter_error;[0m
      | [0;1;32m                               
[0m[1mexample-reformatter-alt.c:118:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  118 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:118:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  118 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:118:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  118 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  119 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:122:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  122 |             if (parser.problem_value != -1) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  123 |                 fprintf(stderr, "Reader error: %s: #%X at %zd\n", parser.problem,[0m
  124 |                         parser.problem_value, parser.problem_offset);[0m
  125 |             }[0m
  126 |             else {[0m
  127 |                 fprintf(stderr, "Reader error: %s at %lu\n", parser.problem,[0m
  128 |                         parser.problem_offset);[0m
  129 |             }[0m
  130 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:123:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  123 |                 fprintf(stderr, "Reader error: %s: #%X at %zd\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:123:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  123 |                 fprintf(stderr, "Reader error: %s: #%X at %zd\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:127:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  127 |                 fprintf(stderr, "Reader error: %s at %lu\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:127:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  127 |                 fprintf(stderr, "Reader error: %s at %lu\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:133:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  133 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  134 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n"[0m
  135 |                         "%s at line %lu, column %lu\n", parser.context,[0m
  136 |                         parser.context_mark.line+1, parser.context_mark.column+1,[0m
  137 |                         parser.problem, parser.problem_mark.line+1,[0m
  138 |                         parser.problem_mark.column+1);[0m
  139 |             }[0m
  140 |             else {[0m
  141 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n",[0m
  142 |                         parser.problem, parser.problem_mark.line+1,[0m
  143 |                         parser.problem_mark.column+1);[0m
  144 |             }[0m
  145 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:134:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  134 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:134:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  134 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:141:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  141 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:141:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  141 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:148:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  148 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  149 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n"[0m
  150 |                         "%s at line %lu, column %lu\n", parser.context,[0m
  151 |                         parser.context_mark.line+1, parser.context_mark.column+1,[0m
  152 |                         parser.problem, parser.problem_mark.line+1,[0m
  153 |                         parser.problem_mark.column+1);[0m
  154 |             }[0m
  155 |             else {[0m
  156 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n",[0m
  157 |                         parser.problem, parser.problem_mark.line+1,[0m
  158 |                         parser.problem_mark.column+1);[0m
  159 |             }[0m
  160 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:149:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  149 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:149:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  149 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:156:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  156 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:156:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  156 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:163:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  163 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  164 |                 fprintf(stderr, "Composer error: %s at line %lu, column %lu\n"[0m
  165 |                         "%s at line %lu, column %lu\n", parser.context,[0m
  166 |                         parser.context_mark.line+1, parser.context_mark.column+1,[0m
  167 |                         parser.problem, parser.problem_mark.line+1,[0m
  168 |                         parser.problem_mark.column+1);[0m
  169 |             }[0m
  170 |             else {[0m
  171 |                 fprintf(stderr, "Composer error: %s at line %lu, column %lu\n",[0m
  172 |                         parser.problem, parser.problem_mark.line+1,[0m
  173 |                         parser.problem_mark.column+1);[0m
  174 |             }[0m
  175 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:164:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  164 |                 fprintf(stderr, "Composer error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:164:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  164 |                 fprintf(stderr, "Composer error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:171:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  171 |                 fprintf(stderr, "Composer error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:171:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  171 |                 fprintf(stderr, "Composer error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter-alt.c:179:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  179 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:179:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  179 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:179:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  179 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  180 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:195:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  195 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:195:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  195 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:195:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  195 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  196 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:199:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  199 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:199:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  199 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:199:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  199 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  200 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:203:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  203 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:203:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  203 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:203:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  203 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  204 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter-alt.c:208:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  208 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:208:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  208 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter-alt.c:208:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  208 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  209 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m34 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 6/54][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpdnsm498b.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_log.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 7/54][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp24g2jags.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_fnv.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 8/54][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpjust_qnx.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_murmur.c
[1mnc_murmur.c:76:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   76 |         h ^= ((uint32_t)data[2]) << 16;[0m
      | [0;1;32m        ^                             
[0m      | [0;32m        {                             ;} 
[0m[1mnc_murmur.c:79:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   79 |         h ^= ((uint32_t)data[1]) << 8;[0m
      | [0;1;32m        ^                            
[0m      | [0;32m        {                            ;} 
[0m[1mnc_murmur.c:82:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   82 |         h ^= data[0];[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   83 |         h *= m;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mnc_murmur.c:86:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   86 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 9/54][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpy_4ymsfy.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_random.c
[1mnc_random.c:35:14: [0m[0;1;35mwarning: [0m[1mvariable 'points_per_server' set but not used [clang-diagnostic-unused-but-set-variable][0m
   35 |     uint32_t points_per_server;   /* points per server */[0m
      | [0;1;32m             ^
[0m[1mnc_random.c:37:14: [0m[0;1;35mwarning: [0m[1mvariable 'continuum_addition' set but not used [clang-diagnostic-unused-but-set-variable][0m
   37 |     uint32_t continuum_addition;  /* extra space in the continuum */[0m
      | [0;1;32m             ^
[0m[1mnc_random.c:81:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'continuum_addition' is never read [clang-analyzer-deadcode.DeadStores][0m
   81 |     continuum_addition = RANDOM_CONTINUUM_ADDITION;[0m
      | [0;1;32m    ^
[0m[1mnc_random.c:81:5: [0m[0;1;36mnote: [0mValue stored to 'continuum_addition' is never read[0m
[1mnc_random.c:82:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'points_per_server' is never read [clang-analyzer-deadcode.DeadStores][0m
   82 |     points_per_server = RANDOM_POINTS_PER_SERVER;[0m
      | [0;1;32m    ^
[0m[1mnc_random.c:82:5: [0m[0;1;36mnote: [0mValue stored to 'points_per_server' is never read[0m
8 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[10/54][2.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpn_h8y0wp.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_signal.c
[1mnc_signal.c:45:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   45 |         memset(&sa, 0, sizeof(sa));[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_signal.c:45:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   45 |         memset(&sa, 0, sizeof(sa));[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_signal.c:87:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   87 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_signal.c:90:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   90 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_signal.c:93:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   93 |         actionstr = ", up logging level";[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   94 |         action = log_level_up;[0m
   95 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_signal.c:98:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   98 |         actionstr = ", down logging level";[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   99 |         action = log_level_down;[0m
  100 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_signal.c:103:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  103 |         actionstr = ", reopening log file";[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  104 |         action = log_reopen;[0m
  105 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_signal.c:108:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  108 |         done = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  109 |         actionstr = ", exiting";[0m
  110 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_signal.c:113:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |         log_stacktrace();[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  114 |         actionstr = ", core dumping";[0m
  115 |         raise(SIGSEGV);[0m
  116 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_signal.c:119:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  119 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {;} 
[0m14 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[11/54][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpbe06ogco.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/run-scanner.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[12/54][2.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpqitme878.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_array.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[13/54][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpa4lyn07g.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/run-parser.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[14/54][4.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp4d5rgsz0.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_connection.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[15/54][2.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpl02f7af6.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_hsieh.c
[1mnc_hsieh.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         hash += get16bits (key);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         hash ^= hash << 16;[0m
   65 |         hash ^= (uint32_t)key[sizeof (uint16_t)] << 18;[0m
   66 |         hash += hash >> 11;[0m
   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_hsieh.c:70:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   70 |         hash += get16bits (key);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   71 |         hash ^= hash << 11;[0m
   72 |         hash += hash >> 17;[0m
   73 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_hsieh.c:76:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   76 |         hash += (unsigned char)(*key);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   77 |         hash ^= hash << 10;[0m
   78 |         hash += hash >> 1;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_hsieh.c:81:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   81 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[16/54][5.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp_0rv7w1r.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_modula.c
[1mnc_modula.c:35:14: [0m[0;1;35mwarning: [0m[1mvariable 'points_per_server' set but not used [clang-diagnostic-unused-but-set-variable][0m
   35 |     uint32_t points_per_server;   /* points per server */[0m
      | [0;1;32m             ^
[0m[1mnc_modula.c:37:14: [0m[0;1;35mwarning: [0m[1mvariable 'continuum_addition' set but not used [clang-diagnostic-unused-but-set-variable][0m
   37 |     uint32_t continuum_addition;  /* extra space in the continuum */[0m
      | [0;1;32m             ^
[0m[1mnc_modula.c:91:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'continuum_addition' is never read [clang-analyzer-deadcode.DeadStores][0m
   91 |     continuum_addition = MODULA_CONTINUUM_ADDITION;[0m
      | [0;1;32m    ^
[0m[1mnc_modula.c:91:5: [0m[0;1;36mnote: [0mValue stored to 'continuum_addition' is never read[0m
[1mnc_modula.c:92:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'points_per_server' is never read [clang-analyzer-deadcode.DeadStores][0m
   92 |     points_per_server = MODULA_POINTS_PER_SERVER;[0m
      | [0;1;32m    ^
[0m[1mnc_modula.c:92:5: [0m[0;1;36mnote: [0mValue stored to 'points_per_server' is never read[0m
8 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[17/54][2.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpehzasqws.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_one_at_a_time.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[18/54][4.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp7c96g7rb.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/example-reformatter.c
[1mexample-reformatter.c:22:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   22 |     memset(&parser, 0, sizeof(parser));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter.c:22:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   22 |     memset(&parser, 0, sizeof(parser));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter.c:23:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   23 |     memset(&emitter, 0, sizeof(emitter));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter.c:23:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   23 |     memset(&emitter, 0, sizeof(emitter));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter.c:24:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   24 |     memset(&event, 0, sizeof(event));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter.c:24:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   24 |     memset(&event, 0, sizeof(event));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-reformatter.c:46:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   46 |             fprintf(stderr, "Unrecognized option: %s\n"[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:46:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   46 |             fprintf(stderr, "Unrecognized option: %s\n"[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:68:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |     if (!yaml_parser_initialize(&parser))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   69 |         goto parser_error;[0m
      | [0;1;32m                          
[0m[1mexample-reformatter.c:71:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |     if (!yaml_emitter_initialize(&emitter))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m   72 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-reformatter.c:91:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |         if (!yaml_parser_parse(&parser, &event))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   92 |             goto parser_error;[0m
      | [0;1;32m                              
[0m[1mexample-reformatter.c:102:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |         if (!yaml_emitter_emit(&emitter, &event))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  103 |             goto emitter_error;[0m
      | [0;1;32m                               
[0m[1mexample-reformatter.c:118:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  118 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:118:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  118 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:118:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  118 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  119 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter.c:122:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  122 |             if (parser.problem_value != -1) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  123 |                 fprintf(stderr, "Reader error: %s: #%X at %ld\n", parser.problem,[0m
  124 |                         parser.problem_value, (long)parser.problem_offset);[0m
  125 |             }[0m
  126 |             else {[0m
  127 |                 fprintf(stderr, "Reader error: %s at %ld\n", parser.problem,[0m
  128 |                         (long)parser.problem_offset);[0m
  129 |             }[0m
  130 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter.c:123:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  123 |                 fprintf(stderr, "Reader error: %s: #%X at %ld\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:123:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  123 |                 fprintf(stderr, "Reader error: %s: #%X at %ld\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:127:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  127 |                 fprintf(stderr, "Reader error: %s at %ld\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:127:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  127 |                 fprintf(stderr, "Reader error: %s at %ld\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:133:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  133 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  134 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n"[0m
  135 |                         "%s at line %d, column %d\n", parser.context,[0m
  136 |                         (int)parser.context_mark.line+1, (int)parser.context_mark.column+1,[0m
  137 |                         parser.problem, (int)parser.problem_mark.line+1,[0m
  138 |                         (int)parser.problem_mark.column+1);[0m
  139 |             }[0m
  140 |             else {[0m
  141 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n",[0m
  142 |                         parser.problem, (int)parser.problem_mark.line+1,[0m
  143 |                         (int)parser.problem_mark.column+1);[0m
  144 |             }[0m
  145 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter.c:134:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  134 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:134:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  134 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:141:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  141 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:141:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  141 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:148:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  148 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  149 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n"[0m
  150 |                         "%s at line %d, column %d\n", parser.context,[0m
  151 |                         (int)parser.context_mark.line+1, (int)parser.context_mark.column+1,[0m
  152 |                         parser.problem, (int)parser.problem_mark.line+1,[0m
  153 |                         (int)parser.problem_mark.column+1);[0m
  154 |             }[0m
  155 |             else {[0m
  156 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n",[0m
  157 |                         parser.problem, (int)parser.problem_mark.line+1,[0m
  158 |                         (int)parser.problem_mark.column+1);[0m
  159 |             }[0m
  160 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter.c:149:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  149 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:149:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  149 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:156:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  156 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:156:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  156 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-reformatter.c:164:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  164 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:164:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  164 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:164:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  165 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter.c:180:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  180 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:180:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  180 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:180:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  180 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  181 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter.c:184:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  184 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:184:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  184 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:184:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  184 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  185 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter.c:188:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  188 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:188:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  188 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:188:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  188 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  189 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-reformatter.c:193:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  193 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:193:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  193 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-reformatter.c:193:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  193 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  194 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m31 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[19/54][4.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpqp6yhjx5.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_mbuf.c
[1mnc_mbuf.c:218:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  218 |     nc_memcpy(mbuf->last, pos, n);[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_mbuf.c:218:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  218 |     nc_memcpy(mbuf->last, pos, n);[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[20/54][5.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpgvit9w0e.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_util.c
[1mnc_util.c:262:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  262 |         memset(p, 0, size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_util.c:262:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  262 |         memset(p, 0, size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_util.c:350:9: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  350 |     n = vsnprintf(buf, size, fmt, args);[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mnc_util.c:350:9: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
  350 |     n = vsnprintf(buf, size, fmt, args);[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mnc_util.c:489:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  489 |     memset(&hints, 0, sizeof(hints));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:489:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  489 |     memset(&hints, 0, sizeof(hints));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:511:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  511 |     nc_snprintf(service, NC_UINTMAX_MAXLEN, "%d", port);[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_util.c:511:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  511 |     nc_snprintf(service, NC_UINTMAX_MAXLEN, "%d", port);[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_util.c:538:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  538 |         nc_memcpy(&si->addr, cai->ai_addr, si->addrlen);[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:538:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  538 |         nc_memcpy(&si->addr, cai->ai_addr, si->addrlen);[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:560:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  560 |     nc_memcpy(un->sun_path, name->data, name->len);[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:560:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  560 |     nc_memcpy(un->sun_path, name->data, name->len);[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:606:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  606 |     nc_snprintf(unresolve, sizeof(unresolve), "%s:%s", host, service);[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_util.c:606:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  606 |     nc_snprintf(unresolve, sizeof(unresolve), "%s:%s", host, service);[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_util.c:625:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  625 |     memset(&si, 0, sizeof(si));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:625:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  625 |     memset(&si, 0, sizeof(si));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:651:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  651 |     memset(&si, 0, sizeof(si));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_util.c:651:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  651 |     memset(&si, 0, sizeof(si));[0m
      | [0;1;32m    ^~~~~~
[0m13 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[21/54][11.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpqpl97hr3.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_jenkins.c
[1mnc_jenkins.c:113:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |     case 12: c+=k[2]; b+=k[1]; a+=k[0]; break;[0m
      | [0;1;32m             ^                               
[0m      | [0;32m             {                               ;} 
[0m[1mnc_jenkins.c:114:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  114 |     case 11: c+=k[2]&0xffffff; b+=k[1]; a+=k[0]; break;[0m
      | [0;1;32m             ^                                        
[0m      | [0;32m             {                                        ;} 
[0m[1mnc_jenkins.c:115:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  115 |     case 10: c+=k[2]&0xffff; b+=k[1]; a+=k[0]; break;[0m
      | [0;1;32m             ^                                      
[0m      | [0;32m             {                                      ;} 
[0m[1mnc_jenkins.c:116:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  116 |     case 9 : c+=k[2]&0xff; b+=k[1]; a+=k[0]; break;[0m
      | [0;1;32m             ^                                    
[0m      | [0;32m             {                                    ;} 
[0m[1mnc_jenkins.c:117:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  117 |     case 8 : b+=k[1]; a+=k[0]; break;[0m
      | [0;1;32m             ^                      
[0m      | [0;32m             {                      ;} 
[0m[1mnc_jenkins.c:118:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  118 |     case 7 : b+=k[1]&0xffffff; a+=k[0]; break;[0m
      | [0;1;32m             ^                               
[0m      | [0;32m             {                               ;} 
[0m[1mnc_jenkins.c:119:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  119 |     case 6 : b+=k[1]&0xffff; a+=k[0]; break;[0m
      | [0;1;32m             ^                             
[0m      | [0;32m             {                             ;} 
[0m[1mnc_jenkins.c:120:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |     case 5 : b+=k[1]&0xff; a+=k[0]; break;[0m
      | [0;1;32m             ^                           
[0m      | [0;32m             {                           ;} 
[0m[1mnc_jenkins.c:121:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  121 |     case 4 : a+=k[0]; break;[0m
      | [0;1;32m             ^             
[0m      | [0;32m             {             ;} 
[0m[1mnc_jenkins.c:122:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  122 |     case 3 : a+=k[0]&0xffffff; break;[0m
      | [0;1;32m             ^                      
[0m      | [0;32m             {                      ;} 
[0m[1mnc_jenkins.c:123:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  123 |     case 2 : a+=k[0]&0xffff; break;[0m
      | [0;1;32m             ^                    
[0m      | [0;32m             {                    ;} 
[0m[1mnc_jenkins.c:124:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  124 |     case 1 : a+=k[0]&0xff; break;[0m
      | [0;1;32m             ^                  
[0m      | [0;32m             {                  ;} 
[0m[1mnc_jenkins.c:125:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |     case 0 : return c;              /* zero length strings require no mixing */[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mnc_jenkins.c:126:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  126 |     default: return c;[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mnc_jenkins.c:150:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |     case 12: c+=k[4]+(((uint32_t)k[5])<<16);[0m
      | [0;1;32m             ^
[0m      | [0;32m             {
[0m  151 |              b+=k[2]+(((uint32_t)k[3])<<16);[0m
  152 |              a+=k[0]+(((uint32_t)k[1])<<16);[0m
  153 |              break;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mnc_jenkins.c:154:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  154 |     case 11: c+=((uint32_t)k8[10])<<16;     /* fall through */[0m
      | [0;1;32m             ^                        
[0m      | [0;32m             {                        ;} 
[0m[1mnc_jenkins.c:155:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  155 |     case 10: c+=k[4];[0m
      | [0;1;32m             ^
[0m      | [0;32m             {
[0m  156 |              b+=k[2]+(((uint32_t)k[3])<<16);[0m
  157 |              a+=k[0]+(((uint32_t)k[1])<<16);[0m
  158 |              break;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mnc_jenkins.c:159:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  159 |     case 9 : c+=k8[8];                      /* fall through */[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mnc_jenkins.c:160:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  160 |     case 8 : b+=k[2]+(((uint32_t)k[3])<<16);[0m
      | [0;1;32m             ^
[0m      | [0;32m             {
[0m  161 |              a+=k[0]+(((uint32_t)k[1])<<16);[0m
  162 |              break;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mnc_jenkins.c:163:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  163 |     case 7 : b+=((uint32_t)k8[6])<<16;      /* fall through */[0m
      | [0;1;32m             ^                       
[0m      | [0;32m             {                       ;} 
[0m[1mnc_jenkins.c:164:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |     case 6 : b+=k[2];[0m
      | [0;1;32m             ^
[0m      | [0;32m             {
[0m  165 |              a+=k[0]+(((uint32_t)k[1])<<16);[0m
  166 |              break;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mnc_jenkins.c:167:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  167 |     case 5 : b+=k8[4];                      /* fall through */[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mnc_jenkins.c:168:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  168 |     case 4 : a+=k[0]+(((uint32_t)k[1])<<16);[0m
      | [0;1;32m             ^
[0m      | [0;32m             {
[0m  169 |              break;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mnc_jenkins.c:170:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  170 |     case 3 : a+=((uint32_t)k8[2])<<16;      /* fall through */[0m
      | [0;1;32m             ^                       
[0m      | [0;32m             {                       ;} 
[0m[1mnc_jenkins.c:171:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |     case 2 : a+=k[0];[0m
      | [0;1;32m             ^
[0m      | [0;32m             {
[0m  172 |              break;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mnc_jenkins.c:173:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  173 |     case 1 : a+=k8[0];[0m
      | [0;1;32m             ^
[0m      | [0;32m             {
[0m  174 |              break;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mnc_jenkins.c:175:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  175 |     case 0 : return c;                     /* zero length requires no mixing */[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mnc_jenkins.c:176:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  176 |     default: return c;[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mnc_jenkins.c:208:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  208 |     case 12: c+=((uint32_t)k[11])<<24;[0m
      | [0;1;32m             ^                       
[0m      | [0;32m             {                       ;} 
[0m[1mnc_jenkins.c:209:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  209 |     case 11: c+=((uint32_t)k[10])<<16;[0m
      | [0;1;32m             ^                       
[0m      | [0;32m             {                       ;} 
[0m[1mnc_jenkins.c:210:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  210 |     case 10: c+=((uint32_t)k[9])<<8;[0m
      | [0;1;32m             ^                     
[0m      | [0;32m             {                     ;} 
[0m[1mnc_jenkins.c:211:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  211 |     case 9 : c+=k[8];[0m
      | [0;1;32m             ^      
[0m      | [0;32m             {      ;} 
[0m[1mnc_jenkins.c:212:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  212 |     case 8 : b+=((uint32_t)k[7])<<24;[0m
      | [0;1;32m             ^                      
[0m      | [0;32m             {                      ;} 
[0m[1mnc_jenkins.c:213:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  213 |     case 7 : b+=((uint32_t)k[6])<<16;[0m
      | [0;1;32m             ^                      
[0m      | [0;32m             {                      ;} 
[0m[1mnc_jenkins.c:214:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  214 |     case 6 : b+=((uint32_t)k[5])<<8;[0m
      | [0;1;32m             ^                     
[0m      | [0;32m             {                     ;} 
[0m[1mnc_jenkins.c:215:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  215 |     case 5 : b+=k[4];[0m
      | [0;1;32m             ^      
[0m      | [0;32m             {      ;} 
[0m[1mnc_jenkins.c:216:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  216 |     case 4 : a+=((uint32_t)k[3])<<24;[0m
      | [0;1;32m             ^                      
[0m      | [0;32m             {                      ;} 
[0m[1mnc_jenkins.c:217:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  217 |     case 3 : a+=((uint32_t)k[2])<<16;[0m
      | [0;1;32m             ^                      
[0m      | [0;32m             {                      ;} 
[0m[1mnc_jenkins.c:218:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  218 |     case 2 : a+=((uint32_t)k[1])<<8;[0m
      | [0;1;32m             ^                     
[0m      | [0;32m             {                     ;} 
[0m[1mnc_jenkins.c:219:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  219 |     case 1 : a+=k[0];[0m
      | [0;1;32m             ^
[0m      | [0;32m             {
[0m  220 |              break;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mnc_jenkins.c:221:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  221 |     case 0 : return c;[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mnc_jenkins.c:222:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  222 |     default : return c;[0m
      | [0;1;32m              ^       
[0m      | [0;32m              {       ;} 
[0m44 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[22/54][11.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpchpjsqiu.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_core.c
[1mnc_core.c:224:17: [0m[0;1;35mwarning: [0m[1mvariable 'addrstr' set but not used [clang-diagnostic-unused-but-set-variable][0m
  224 |     const char *addrstr;[0m
      | [0;1;32m                ^
[0m[1mnc_core.c:230:9: [0m[0;1;35mwarning: [0m[1mValue stored to 'addrstr' is never read [clang-analyzer-deadcode.DeadStores][0m
  230 |         addrstr = nc_unresolve_peer_desc(conn->sd);[0m
      | [0;1;32m        ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_core.c:230:9: [0m[0;1;36mnote: [0mValue stored to 'addrstr' is never read[0m
  230 |         addrstr = nc_unresolve_peer_desc(conn->sd);[0m
      | [0;1;32m        ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_core.c:233:9: [0m[0;1;35mwarning: [0m[1mValue stored to 'addrstr' is never read [clang-analyzer-deadcode.DeadStores][0m
  233 |         addrstr = nc_unresolve_addr(conn->addr, conn->addrlen);[0m
      | [0;1;32m        ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_core.c:233:9: [0m[0;1;36mnote: [0mValue stored to 'addrstr' is never read[0m
  233 |         addrstr = nc_unresolve_addr(conn->addr, conn->addrlen);[0m
      | [0;1;32m        ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m7 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[23/54][2.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp6o0u4jld.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_crc32.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[24/54][15.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp9rezads4.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_client.c
[1mnc_client.c:118:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  118 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[25/54][5.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpgca8nxom.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_response.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[26/54][18.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpnpnrn16v.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/src/writer.c
2 warnings generated.
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[27/54][14.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp9pqsh6zf.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_proxy.c
[1mnc_proxy.c:102:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  102 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_proxy.c:110:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  110 |         un = (struct sockaddr_un *) p->addr;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  111 |         unlink(un->sun_path);[0m
  112 |         status = NC_OK;[0m
  113 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_proxy.c:116:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  116 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {
[0m  117 |         status = NC_ERROR;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[28/54][14.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpep2oufxm.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/event/nc_epoll.c
[1mnc_epoll.c:341:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'ep' is never read [clang-analyzer-deadcode.DeadStores][0m
  341 |     ep = -1;[0m
      | [0;1;32m    ^    ~~
[0m[1mnc_epoll.c:341:5: [0m[0;1;36mnote: [0mValue stored to 'ep' is never read[0m
  341 |     ep = -1;[0m
      | [0;1;32m    ^    ~~
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[29/54][22.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpfe2o420s.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_ketama.c
[1mnc_ketama.c:178:23: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  178 |             hostlen = snprintf(host, KETAMA_MAX_HOSTLEN, "%.*s-%u",[0m
      | [0;1;32m                      ^~~~~~~~
[0m[1mnc_ketama.c:178:23: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  178 |             hostlen = snprintf(host, KETAMA_MAX_HOSTLEN, "%.*s-%u",[0m
      | [0;1;32m                      ^~~~~~~~
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[30/54][26.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpmj9arzf3.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/hashkit/nc_md5.c
[1mnc_md5.c:226:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  226 |             memcpy(&ctx->buffer[used], data, size);[0m
      | [0;1;32m            ^~~~~~
[0m[1mnc_md5.c:226:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  226 |             memcpy(&ctx->buffer[used], data, size);[0m
      | [0;1;32m            ^~~~~~
[0m[1mnc_md5.c:230:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  230 |         memcpy(&ctx->buffer[used], data, free);[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_md5.c:230:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  230 |         memcpy(&ctx->buffer[used], data, free);[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_md5.c:241:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  241 |     memcpy(ctx->buffer, data, size);[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_md5.c:241:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  241 |     memcpy(ctx->buffer, data, size);[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_md5.c:256:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  256 |         memset(&ctx->buffer[used], 0, free);[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_md5.c:256:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  256 |         memset(&ctx->buffer[used], 0, free);[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_md5.c:262:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  262 |     memset(&ctx->buffer[used], 0, free - 8);[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_md5.c:262:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  262 |     memset(&ctx->buffer[used], 0, free - 8);[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_md5.c:293:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  293 |     memset(ctx, 0, sizeof(*ctx));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_md5.c:293:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  293 |     memset(ctx, 0, sizeof(*ctx));[0m
      | [0;1;32m    ^~~~~~
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[31/54][81.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpxymdofhv.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/example-deconstructor-alt.c
[1mexample-deconstructor-alt.c:25:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   25 |     memset(&parser, 0, sizeof(parser));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor-alt.c:25:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   25 |     memset(&parser, 0, sizeof(parser));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor-alt.c:26:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   26 |     memset(&emitter, 0, sizeof(emitter));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor-alt.c:26:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   26 |     memset(&emitter, 0, sizeof(emitter));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor-alt.c:27:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   27 |     memset(&input_event, 0, sizeof(input_event));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor-alt.c:27:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   27 |     memset(&input_event, 0, sizeof(input_event));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor-alt.c:28:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   28 |     memset(&output_document, 0, sizeof(output_document));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor-alt.c:28:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   28 |     memset(&output_document, 0, sizeof(output_document));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor-alt.c:50:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   50 |             fprintf(stderr, "Unrecognized option: %s\n"[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:50:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   50 |             fprintf(stderr, "Unrecognized option: %s\n"[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:73:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   73 |         fprintf(stderr, "Could not initialize the parser object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mexample-deconstructor-alt.c:73:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   73 |         fprintf(stderr, "Could not initialize the parser object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mexample-deconstructor-alt.c:79:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   79 |         fprintf(stderr, "Could not inialize the emitter object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mexample-deconstructor-alt.c:79:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   79 |         fprintf(stderr, "Could not inialize the emitter object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mexample-deconstructor-alt.c:96:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |     if (!yaml_emitter_open(&emitter))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   97 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor-alt.c:101:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |     if (!yaml_document_initialize(&output_document, NULL, NULL, NULL, 0, 0))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  102 |         goto document_error;[0m
      | [0;1;32m                            
[0m[1mexample-deconstructor-alt.c:108:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |     if (!root) goto document_error;[0m
      | [0;1;32m              ^                    
[0m      | [0;32m               {
[0m[1mexample-deconstructor-alt.c:118:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |         if (!yaml_parser_parse(&parser, &input_event))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  119 |             goto parser_error;[0m
      | [0;1;32m                              
[0m[1mexample-deconstructor-alt.c:131:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |         if (!properties) goto document_error;[0m
      | [0;1;32m                        ^                    
[0m      | [0;32m                         {
[0m[1mexample-deconstructor-alt.c:133:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |                     root, properties)) goto document_error;[0m
      | [0;1;32m                                      ^                    
[0m      | [0;32m                                       {
[0m[1mexample-deconstructor-alt.c:143:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor-alt.c:145:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:148:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:150:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:161:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:167:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  167 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:169:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:178:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  178 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  179 |                     (yaml_char_t *)"type", -1, YAML_PLAIN_SCALAR_STYLE);[0m
  180 |                 if (!key) goto document_error;[0m
  181 |                 value = yaml_document_add_scalar(&output_document, NULL,[0m
  182 |                     (yaml_char_t *)"STREAM-END", -1, YAML_PLAIN_SCALAR_STYLE);[0m
  183 |                 if (!value) goto document_error;[0m
  184 |                 if (!yaml_document_append_mapping_pair(&output_document,[0m
  185 |                             properties, key, value)) goto document_error;[0m
  186 | [0m
  187 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mexample-deconstructor-alt.c:180:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:183:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  183 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:185:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:193:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  193 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor-alt.c:195:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:198:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:200:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:214:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:217:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |                     if (!map) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:219:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |                                 properties, key, map)) goto document_error;[0m
      | [0;1;32m                                                      ^                    
[0m      | [0;32m                                                       {
[0m[1mexample-deconstructor-alt.c:225:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:226:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  226 |                     sprintf(number, "%d", version->major);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mexample-deconstructor-alt.c:226:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  226 |                     sprintf(number, "%d", version->major);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mexample-deconstructor-alt.c:229:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:231:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |                                 map, key, value)) goto document_error;[0m
      | [0;1;32m                                                 ^                    
[0m      | [0;32m                                                  {
[0m[1mexample-deconstructor-alt.c:237:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:238:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  238 |                     sprintf(number, "%d", version->minor);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mexample-deconstructor-alt.c:238:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  238 |                     sprintf(number, "%d", version->minor);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mexample-deconstructor-alt.c:241:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:243:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |                                 map, key, value)) goto document_error;[0m
      | [0;1;32m                                                 ^                    
[0m      | [0;32m                                                  {
[0m[1mexample-deconstructor-alt.c:257:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:260:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |                     if (!seq) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:262:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |                                 properties, key, seq)) goto document_error;[0m
      | [0;1;32m                                                      ^                    
[0m      | [0;32m                                                       {
[0m[1mexample-deconstructor-alt.c:272:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |                         if (!map) goto document_error;[0m
      | [0;1;32m                                 ^                    
[0m      | [0;32m                                  {
[0m[1mexample-deconstructor-alt.c:274:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |                                     seq, map)) goto document_error;[0m
      | [0;1;32m                                              ^                    
[0m      | [0;32m                                               {
[0m[1mexample-deconstructor-alt.c:280:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |                         if (!key) goto document_error;[0m
      | [0;1;32m                                 ^                    
[0m      | [0;32m                                  {
[0m[1mexample-deconstructor-alt.c:283:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                         if (!value) goto document_error;[0m
      | [0;1;32m                                   ^                    
[0m      | [0;32m                                    {
[0m[1mexample-deconstructor-alt.c:285:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |                                     map, key, value)) goto document_error;[0m
      | [0;1;32m                                                     ^                    
[0m      | [0;32m                                                      {
[0m[1mexample-deconstructor-alt.c:291:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                         if (!key) goto document_error;[0m
      | [0;1;32m                                 ^                    
[0m      | [0;32m                                  {
[0m[1mexample-deconstructor-alt.c:294:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                         if (!value) goto document_error;[0m
      | [0;1;32m                                   ^                    
[0m      | [0;32m                                    {
[0m[1mexample-deconstructor-alt.c:296:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |                                     map, key, value)) goto document_error;[0m
      | [0;1;32m                                                     ^                    
[0m      | [0;32m                                                      {
[0m[1mexample-deconstructor-alt.c:304:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:308:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:310:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  310 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:318:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  318 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor-alt.c:320:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:323:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:325:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:331:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:335:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:337:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:345:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  345 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor-alt.c:347:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:350:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:352:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:358:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:362:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:364:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:372:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  372 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor-alt.c:374:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:377:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:379:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:387:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:391:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:393:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:402:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:406:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:408:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:415:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  415 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:420:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:422:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:430:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:433:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |                 if (!map) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:435:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |                             properties, key, map)) goto document_error;[0m
      | [0;1;32m                                                  ^                    
[0m      | [0;32m                                                   {
[0m[1mexample-deconstructor-alt.c:441:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:445:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  445 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:447:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |                             map, key, value)) goto document_error;[0m
      | [0;1;32m                                             ^                    
[0m      | [0;32m                                              {
[0m[1mexample-deconstructor-alt.c:453:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:457:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:459:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |                             map, key, value)) goto document_error;[0m
      | [0;1;32m                                             ^                    
[0m      | [0;32m                                              {
[0m[1mexample-deconstructor-alt.c:471:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:481:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:483:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  483 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:492:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  492 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor-alt.c:494:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:497:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  497 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:499:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:507:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:511:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:513:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:522:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:526:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:528:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:535:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:539:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:541:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:554:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:559:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:561:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:570:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  570 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  571 |                     (yaml_char_t *)"type", -1, YAML_PLAIN_SCALAR_STYLE);[0m
  572 |                 if (!key) goto document_error;[0m
  573 |                 value = yaml_document_add_scalar(&output_document, NULL,[0m
  574 |                     (yaml_char_t *)"SEQUENCE-END", -1, YAML_PLAIN_SCALAR_STYLE);[0m
  575 |                 if (!value) goto document_error;[0m
  576 |                 if (!yaml_document_append_mapping_pair(&output_document,[0m
  577 |                             properties, key, value)) goto document_error;[0m
  578 | [0m
  579 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mexample-deconstructor-alt.c:572:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:575:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:577:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:585:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  585 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor-alt.c:587:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  587 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:590:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:592:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  592 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:600:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:604:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  604 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:606:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:615:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  615 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:619:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  619 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:621:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:628:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:632:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:634:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:647:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |                     if (!key) goto document_error;[0m
      | [0;1;32m                             ^                    
[0m      | [0;32m                              {
[0m[1mexample-deconstructor-alt.c:652:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |                     if (!value) goto document_error;[0m
      | [0;1;32m                               ^                    
[0m      | [0;32m                                {
[0m[1mexample-deconstructor-alt.c:654:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  654 |                                 properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                        ^                    
[0m      | [0;32m                                                         {
[0m[1mexample-deconstructor-alt.c:663:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  663 |                 key = yaml_document_add_scalar(&output_document, NULL,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  664 |                     (yaml_char_t *)"type", -1, YAML_PLAIN_SCALAR_STYLE);[0m
  665 |                 if (!key) goto document_error;[0m
  666 |                 value = yaml_document_add_scalar(&output_document, NULL,[0m
  667 |                     (yaml_char_t *)"MAPPING-END", -1, YAML_PLAIN_SCALAR_STYLE);[0m
  668 |                 if (!value) goto document_error;[0m
  669 |                 if (!yaml_document_append_mapping_pair(&output_document,[0m
  670 |                             properties, key, value)) goto document_error;[0m
  671 | [0m
  672 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mexample-deconstructor-alt.c:665:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |                 if (!key) goto document_error;[0m
      | [0;1;32m                         ^                    
[0m      | [0;32m                          {
[0m[1mexample-deconstructor-alt.c:668:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  668 |                 if (!value) goto document_error;[0m
      | [0;1;32m                           ^                    
[0m      | [0;32m                            {
[0m[1mexample-deconstructor-alt.c:670:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  670 |                             properties, key, value)) goto document_error;[0m
      | [0;1;32m                                                    ^                    
[0m      | [0;32m                                                     {
[0m[1mexample-deconstructor-alt.c:676:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  676 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mexample-deconstructor-alt.c:684:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |     if (!yaml_emitter_dump(&emitter, &output_document))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  685 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor-alt.c:686:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  686 |     if (!yaml_emitter_close(&emitter))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  687 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor-alt.c:701:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  701 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:701:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  701 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:701:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  701 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  702 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:705:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  705 |             if (parser.problem_value != -1) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  706 |                 fprintf(stderr, "Reader error: %s: #%X at %zd\n", parser.problem,[0m
  707 |                         parser.problem_value, parser.problem_offset);[0m
  708 |             }[0m
  709 |             else {[0m
  710 |                 fprintf(stderr, "Reader error: %s at %zd\n", parser.problem,[0m
  711 |                         parser.problem_offset);[0m
  712 |             }[0m
  713 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:706:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  706 |                 fprintf(stderr, "Reader error: %s: #%X at %zd\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:706:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  706 |                 fprintf(stderr, "Reader error: %s: #%X at %zd\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:710:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  710 |                 fprintf(stderr, "Reader error: %s at %zd\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:710:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  710 |                 fprintf(stderr, "Reader error: %s at %zd\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:716:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  716 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  717 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n"[0m
  718 |                         "%s at line %lu, column %lu\n", parser.context,[0m
  719 |                         parser.context_mark.line+1, parser.context_mark.column+1,[0m
  720 |                         parser.problem, parser.problem_mark.line+1,[0m
  721 |                         parser.problem_mark.column+1);[0m
  722 |             }[0m
  723 |             else {[0m
  724 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n",[0m
  725 |                         parser.problem, parser.problem_mark.line+1,[0m
  726 |                         parser.problem_mark.column+1);[0m
  727 |             }[0m
  728 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:717:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  717 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:717:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  717 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:724:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  724 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:724:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  724 |                 fprintf(stderr, "Scanner error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:731:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  731 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  732 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n"[0m
  733 |                         "%s at line %lu, column %lu\n", parser.context,[0m
  734 |                         parser.context_mark.line+1, parser.context_mark.column+1,[0m
  735 |                         parser.problem, parser.problem_mark.line+1,[0m
  736 |                         parser.problem_mark.column+1);[0m
  737 |             }[0m
  738 |             else {[0m
  739 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n",[0m
  740 |                         parser.problem, parser.problem_mark.line+1,[0m
  741 |                         parser.problem_mark.column+1);[0m
  742 |             }[0m
  743 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:732:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  732 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:732:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  732 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:739:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  739 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:739:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  739 |                 fprintf(stderr, "Parser error: %s at line %lu, column %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor-alt.c:747:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  747 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:747:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  747 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:747:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  747 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  748 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:765:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  765 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:765:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  765 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:765:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  765 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  766 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:769:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  769 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:769:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  769 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:769:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  769 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  770 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:773:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  773 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:773:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  773 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:773:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  773 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  774 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:778:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  778 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:778:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  778 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor-alt.c:778:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  778 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  779 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor-alt.c:791:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  791 |     fprintf(stderr, "Memory error: Not enough memory for creating a document\n");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mexample-deconstructor-alt.c:791:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  791 |     fprintf(stderr, "Memory error: Not enough memory for creating a document\n");[0m
      | [0;1;32m    ^~~~~~~
[0m159 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[32/54][85.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp33aacc5q.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_string.c
[1mnc_string.c:137:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |         for (ix = 0; ix < 16; ++ix)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  138 |             buf[-ix] = '0';[0m
      | [0;1;32m                           
[0m[1mnc_string.c:155:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  155 |             case '0': *buf = 'f'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:156:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |             case '1': *buf = 'e'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:157:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |             case '2': *buf = 'd'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:158:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  158 |             case '3': *buf = 'c'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:159:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  159 |             case '4': *buf = 'b'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:160:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  160 |             case '5': *buf = 'a'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:161:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  161 |             case '6': *buf = '9'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:162:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  162 |             case '7': *buf = '8'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:163:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  163 |             case '8': *buf = '7'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:164:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |             case '9': *buf = '6'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:165:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  165 |             case 'a': *buf = '5'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:166:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  166 |             case 'b': *buf = '4'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:167:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  167 |             case 'c': *buf = '3'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:168:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  168 |             case 'd': *buf = '2'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:169:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  169 |             case 'e': *buf = '1'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:170:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  170 |             case 'f': *buf = '0'; break;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                      {                ;} 
[0m[1mnc_string.c:221:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |                 if (*format == 'p')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  222 |                     have_longlong = (sizeof(void *) == sizeof(uint64_t));[0m
      | [0;1;32m                                                                         
[0m22 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[33/54][74.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp4y8goxzv.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/example-deconstructor.c
[1mexample-deconstructor.c:23:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   23 |     memset(&parser, 0, sizeof(parser));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor.c:23:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   23 |     memset(&parser, 0, sizeof(parser));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor.c:24:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   24 |     memset(&emitter, 0, sizeof(emitter));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor.c:24:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   24 |     memset(&emitter, 0, sizeof(emitter));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor.c:25:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   25 |     memset(&input_event, 0, sizeof(input_event));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor.c:25:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   25 |     memset(&input_event, 0, sizeof(input_event));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor.c:26:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   26 |     memset(&output_event, 0, sizeof(output_event));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor.c:26:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   26 |     memset(&output_event, 0, sizeof(output_event));[0m
      | [0;1;32m    ^~~~~~
[0m[1mexample-deconstructor.c:48:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   48 |             fprintf(stderr, "Unrecognized option: %s\n"[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:48:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   48 |             fprintf(stderr, "Unrecognized option: %s\n"[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:71:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   71 |         fprintf(stderr, "Could not initialize the parser object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mexample-deconstructor.c:71:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   71 |         fprintf(stderr, "Could not initialize the parser object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mexample-deconstructor.c:77:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   77 |         fprintf(stderr, "Could not inialize the emitter object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mexample-deconstructor.c:77:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   77 |         fprintf(stderr, "Could not inialize the emitter object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mexample-deconstructor.c:94:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |     if (!yaml_stream_start_event_initialize(&output_event, YAML_UTF8_ENCODING))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m   95 |         goto event_error;[0m
      | [0;1;32m                         
[0m[1mexample-deconstructor.c:96:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   97 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor.c:102:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |                 NULL, NULL, NULL, 0))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  103 |         goto event_error;[0m
      | [0;1;32m                         
[0m[1mexample-deconstructor.c:104:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  105 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor.c:111:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |                 YAML_BLOCK_SEQUENCE_STYLE))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  112 |         goto event_error;[0m
      | [0;1;32m                         
[0m[1mexample-deconstructor.c:113:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  114 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor.c:122:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |         if (!yaml_parser_parse(&parser, &input_event))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  123 |             goto parser_error;[0m
      | [0;1;32m                              
[0m[1mexample-deconstructor.c:135:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |                     YAML_BLOCK_MAPPING_STYLE))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  136 |             goto event_error;[0m
      | [0;1;32m                             
[0m[1mexample-deconstructor.c:137:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |         if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  138 |             goto emitter_error;[0m
      | [0;1;32m                               
[0m[1mexample-deconstructor.c:148:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  148 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:150:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  151 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:152:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  153 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:159:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  160 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:161:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  162 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:175:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  176 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:177:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  178 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:188:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  189 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:190:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  191 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:200:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  200 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:202:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  203 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:204:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  205 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:211:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  212 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:213:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  214 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:222:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  222 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:224:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  225 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:226:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  227 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:233:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  234 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:235:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  236 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:250:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  251 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:252:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  253 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:259:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  259 |                                 YAML_FLOW_MAPPING_STYLE))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  260 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:261:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  261 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  262 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:268:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  269 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:270:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  271 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:275:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  275 |                     sprintf(number, "%d", version->major);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mexample-deconstructor.c:275:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  275 |                     sprintf(number, "%d", version->major);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mexample-deconstructor.c:278:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  279 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:280:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  281 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:287:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  288 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:289:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  290 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:294:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  294 |                     sprintf(number, "%d", version->minor);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mexample-deconstructor.c:294:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  294 |                     sprintf(number, "%d", version->minor);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mexample-deconstructor.c:297:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  298 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:299:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  300 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:304:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |                     if (!yaml_mapping_end_event_initialize(&output_event))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  305 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:306:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  307 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:321:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  322 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:323:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  324 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:330:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |                                 YAML_BLOCK_SEQUENCE_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  331 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:332:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  333 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:343:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |                                     YAML_FLOW_MAPPING_STYLE))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  344 |                             goto event_error;[0m
      | [0;1;32m                                             
[0m[1mexample-deconstructor.c:345:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |                         if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  346 |                             goto emitter_error;[0m
      | [0;1;32m                                               
[0m[1mexample-deconstructor.c:352:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |                                     1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  353 |                             goto event_error;[0m
      | [0;1;32m                                             
[0m[1mexample-deconstructor.c:354:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |                         if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  355 |                             goto emitter_error;[0m
      | [0;1;32m                                               
[0m[1mexample-deconstructor.c:362:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |                                     0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  363 |                             goto event_error;[0m
      | [0;1;32m                                             
[0m[1mexample-deconstructor.c:364:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |                         if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  365 |                             goto emitter_error;[0m
      | [0;1;32m                                               
[0m[1mexample-deconstructor.c:371:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |                                     1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  372 |                             goto event_error;[0m
      | [0;1;32m                                             
[0m[1mexample-deconstructor.c:373:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |                         if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  374 |                             goto emitter_error;[0m
      | [0;1;32m                                               
[0m[1mexample-deconstructor.c:381:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |                                     0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  382 |                             goto event_error;[0m
      | [0;1;32m                                             
[0m[1mexample-deconstructor.c:383:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |                         if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  384 |                             goto emitter_error;[0m
      | [0;1;32m                                               
[0m[1mexample-deconstructor.c:388:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |                         if (!yaml_mapping_end_event_initialize(&output_event))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  389 |                             goto event_error;[0m
      | [0;1;32m                                             
[0m[1mexample-deconstructor.c:390:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |                         if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  391 |                             goto emitter_error;[0m
      | [0;1;32m                                               
[0m[1mexample-deconstructor.c:396:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |                     if (!yaml_sequence_end_event_initialize(&output_event))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  397 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:398:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  399 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:406:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  407 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:408:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  409 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:417:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  417 |                             1, 0, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  418 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:419:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  420 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:428:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  428 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:430:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  431 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:432:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  433 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:439:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  439 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  440 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:441:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  442 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:448:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  449 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:450:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  451 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:459:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |                             1, 0, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  460 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:461:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  461 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  462 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:470:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  470 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:472:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  473 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:474:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  475 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:481:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  482 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:483:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  483 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  484 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:490:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  490 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  491 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:492:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  493 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:500:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |                             0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  501 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:502:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  503 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:511:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  511 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:513:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  514 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:515:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  516 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:522:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  523 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:524:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  525 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:535:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  536 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:537:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  538 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:545:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |                                 0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  546 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:547:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  547 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  548 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:559:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  560 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:561:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  562 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:569:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  569 |                                 0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  570 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:571:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  572 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:581:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  582 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:583:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  584 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:592:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  592 |                             0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  593 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:594:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  595 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:603:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  604 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:605:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  606 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:612:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |                             YAML_FLOW_MAPPING_STYLE))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  613 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:614:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  615 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:621:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  622 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:623:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  624 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:632:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |                             1, 0, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  633 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:634:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  635 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:641:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  642 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:643:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  643 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  644 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:652:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |                             1, 0, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  653 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:654:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  654 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  655 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:659:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  659 |                 if (!yaml_mapping_end_event_initialize(&output_event))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  660 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:661:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  661 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  662 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:674:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  675 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:676:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  676 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  677 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:691:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  691 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  692 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:693:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  694 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:703:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  703 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:705:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  705 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  706 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:707:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  708 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:714:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  715 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:716:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  716 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  717 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:727:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  727 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  728 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:729:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  729 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  730 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:737:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  737 |                                 0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  738 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:739:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  740 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:751:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  752 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:753:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  754 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:761:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  761 |                                 0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  762 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:763:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  763 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  764 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:771:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  771 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  772 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:773:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  773 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  774 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:782:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  782 |                             1, 0, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  783 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:784:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  785 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:798:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  799 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:800:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  801 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:810:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  811 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:812:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  813 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:822:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  822 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:824:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  825 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:826:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  827 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:833:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  834 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:835:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  835 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  836 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:844:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  844 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:846:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  847 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:848:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  848 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  849 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:855:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  855 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  856 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:857:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  857 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  858 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:868:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  868 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  869 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:870:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  871 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:878:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  878 |                                 0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  879 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:880:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  880 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  881 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:892:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  892 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  893 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:894:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  895 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:902:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  902 |                                 0, 1, YAML_DOUBLE_QUOTED_SCALAR_STYLE))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  903 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:904:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  904 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  905 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:912:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  912 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  913 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:914:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  914 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  915 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:923:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  923 |                             1, 0, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  924 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:925:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  925 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  926 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:939:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  940 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:941:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  941 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  942 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:951:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  951 |                                 1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  952 |                         goto event_error;[0m
      | [0;1;32m                                         
[0m[1mexample-deconstructor.c:953:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  953 |                     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  954 |                         goto emitter_error;[0m
      | [0;1;32m                                           
[0m[1mexample-deconstructor.c:963:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  963 |                 if (!yaml_scalar_event_initialize(&output_event,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mexample-deconstructor.c:965:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  965 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  966 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:967:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  967 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  968 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:974:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  974 |                             1, 1, YAML_PLAIN_SCALAR_STYLE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  975 |                     goto event_error;[0m
      | [0;1;32m                                     
[0m[1mexample-deconstructor.c:976:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  976 |                 if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  977 |                     goto emitter_error;[0m
      | [0;1;32m                                       
[0m[1mexample-deconstructor.c:983:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  983 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mexample-deconstructor.c:992:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  992 |         if (!yaml_mapping_end_event_initialize(&output_event))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  993 |             goto event_error;[0m
      | [0;1;32m                             
[0m[1mexample-deconstructor.c:994:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  994 |         if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  995 |             goto emitter_error;[0m
      | [0;1;32m                               
[0m[1mexample-deconstructor.c:1000:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1000 |     if (!yaml_sequence_end_event_initialize(&output_event))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1001 |         goto event_error;[0m
      | [0;1;32m                         
[0m[1mexample-deconstructor.c:1002:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1002 |     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1003 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor.c:1007:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1007 |     if (!yaml_document_end_event_initialize(&output_event, 0))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1008 |         goto event_error;[0m
      | [0;1;32m                         
[0m[1mexample-deconstructor.c:1009:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1009 |     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1010 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor.c:1014:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1014 |     if (!yaml_stream_end_event_initialize(&output_event))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1015 |         goto event_error;[0m
      | [0;1;32m                         
[0m[1mexample-deconstructor.c:1016:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1016 |     if (!yaml_emitter_emit(&emitter, &output_event))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1017 |         goto emitter_error;[0m
      | [0;1;32m                           
[0m[1mexample-deconstructor.c:1031:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1031 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1031:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1031 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1031:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1031 |             fprintf(stderr, "Memory error: Not enough memory for parsing\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1032 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1035:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1035 |             if (parser.problem_value != -1) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1036 |                 fprintf(stderr, "Reader error: %s: #%X at %ld\n", parser.problem,[0m
 1037 |                         parser.problem_value, (long)parser.problem_offset);[0m
 1038 |             }[0m
 1039 |             else {[0m
 1040 |                 fprintf(stderr, "Reader error: %s at %ld\n", parser.problem,[0m
 1041 |                         (long)parser.problem_offset);[0m
 1042 |             }[0m
 1043 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1036:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1036 |                 fprintf(stderr, "Reader error: %s: #%X at %ld\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1036:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1036 |                 fprintf(stderr, "Reader error: %s: #%X at %ld\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1040:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1040 |                 fprintf(stderr, "Reader error: %s at %ld\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1040:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1040 |                 fprintf(stderr, "Reader error: %s at %ld\n", parser.problem,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1046:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1046 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1047 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n"[0m
 1048 |                         "%s at line %d, column %d\n", parser.context,[0m
 1049 |                         (int)parser.context_mark.line+1, (int)parser.context_mark.column+1,[0m
 1050 |                         parser.problem, (int)parser.problem_mark.line+1,[0m
 1051 |                         (int)parser.problem_mark.column+1);[0m
 1052 |             }[0m
 1053 |             else {[0m
 1054 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n",[0m
 1055 |                         parser.problem, (int)parser.problem_mark.line+1,[0m
 1056 |                         (int)parser.problem_mark.column+1);[0m
 1057 |             }[0m
 1058 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1047:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1047 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1047:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1047 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1054:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1054 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1054:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1054 |                 fprintf(stderr, "Scanner error: %s at line %d, column %d\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1061:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1061 |             if (parser.context) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1062 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n"[0m
 1063 |                         "%s at line %d, column %d\n", parser.context,[0m
 1064 |                         (int)parser.context_mark.line+1, (int)parser.context_mark.column+1,[0m
 1065 |                         parser.problem, (int)parser.problem_mark.line+1,[0m
 1066 |                         (int)parser.problem_mark.column+1);[0m
 1067 |             }[0m
 1068 |             else {[0m
 1069 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n",[0m
 1070 |                         parser.problem, (int)parser.problem_mark.line+1,[0m
 1071 |                         (int)parser.problem_mark.column+1);[0m
 1072 |             }[0m
 1073 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1062:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1062 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1062:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1062 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n"[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1069:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1069 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1069:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1069 |                 fprintf(stderr, "Parser error: %s at line %d, column %d\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mexample-deconstructor.c:1077:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1077 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1077:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1077 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1077:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1077 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1078 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1094:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1094 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1094:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1094 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1094:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1094 |             fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1095 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1098:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1098 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1098:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1098 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1098:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1098 |             fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1099 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1102:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1102 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1102:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1102 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1102:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1102 |             fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1103 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1107:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1107 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1107:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1107 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mexample-deconstructor.c:1107:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1107 |             fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1108 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mexample-deconstructor.c:1119:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1119 |     fprintf(stderr, "Memory error: Not enough memory for creating an event\n");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mexample-deconstructor.c:1119:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1119 |     fprintf(stderr, "Memory error: Not enough memory for creating an event\n");[0m
      | [0;1;32m    ^~~~~~~
[0m211 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[34/54][88.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpurgvhp69.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc.c
[1mnc.c:83:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   83 |         log_error("fork() failed: %s", strerror(errno));[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   84 |         return NC_ERROR;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1m./nc_log.h:101:24: [0m[0;1;36mnote: [0mexpanded from macro 'log_error'[0m
  101 | #define log_error(...) do {                                                 \[0m
      | [0;1;32m                       ^
[0m[1mnc.c:87:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   87 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc.c:91:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   91 |         _exit(0);[0m
      | [0;1;32m        ^       
[0m      | [0;32m        {       ;} 
[0m[1mnc.c:110:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  110 |         log_error("fork() failed: %s", strerror(errno));[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  111 |         return NC_ERROR;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1m./nc_log.h:101:24: [0m[0;1;36mnote: [0mexpanded from macro 'log_error'[0m
  101 | #define log_error(...) do {                                                 \[0m
      | [0;1;32m                       ^
[0m[1mnc.c:114:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  114 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc.c:118:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  118 |         _exit(0);[0m
      | [0;1;32m        ^       
[0m      | [0;32m        {       ;} 
[0m[1mnc.c:249:15: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  249 |     pid_len = nc_snprintf(pid, NC_UINTMAX_MAXLEN, "%d", nci->pid);[0m
      | [0;1;32m              ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc.c:249:15: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  249 |     pid_len = nc_snprintf(pid, NC_UINTMAX_MAXLEN, "%d", nci->pid);[0m
      | [0;1;32m              ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc.c:294:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  294 |         nc_snprintf(nci->hostname, NC_MAXHOSTNAMELEN, "unknown");[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc.c:294:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  294 |         nc_snprintf(nci->hostname, NC_MAXHOSTNAMELEN, "unknown");[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc.c:321:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  321 |             show_version = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  322 |             show_help = 1;[0m
  323 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:326:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  326 |             show_version = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  327 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:330:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  330 |             test_conf = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  331 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:334:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  334 |             daemonize = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  335 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:338:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  338 |             describe_stats = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  339 |             show_version = 1;[0m
  340 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:343:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  343 |             value = nc_atoi(optarg, strlen(optarg));[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  344 |             if (value < 0) {[0m
  345 |                 log_stderr("nutcracker: option -v requires a number");[0m
  346 |                 return NC_ERROR;[0m
  347 |             }[0m
  348 |             nci->log_level = value;[0m
  349 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:352:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  352 |             nci->log_filename = optarg;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  353 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:356:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  356 |             nci->conf_filename = optarg;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  357 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:360:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  360 |             value = nc_atoi(optarg, strlen(optarg));[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  361 |             if (value < 0) {[0m
  362 |                 log_stderr("nutcracker: option -s requires a number");[0m
  363 |                 return NC_ERROR;[0m
  364 |             }[0m
  365 |             if (!nc_valid_port(value)) {[0m
  366 |                 log_stderr("nutcracker: option -s value %d is not a valid "[0m
  367 |                            "port", value);[0m
  368 |                 return NC_ERROR;[0m
  369 |             }[0m
  370 | [0m
  371 |             nci->stats_port = (uint16_t)value;[0m
  372 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:375:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  375 |             value = nc_atoi(optarg, strlen(optarg));[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  376 |             if (value < 0) {[0m
  377 |                 log_stderr("nutcracker: option -i requires a number");[0m
  378 |                 return NC_ERROR;[0m
  379 |             }[0m
  380 | [0m
  381 |             nci->stats_interval = value;[0m
  382 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:385:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  385 |             nci->stats_addr = optarg;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  386 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:389:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |             nci->pid_filename = optarg;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  390 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:393:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  393 |             value = nc_atoi(optarg, strlen(optarg));[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  394 |             if (value <= 0) {[0m
  395 |                 log_stderr("nutcracker: option -m requires a non-zero number");[0m
  396 |                 return NC_ERROR;[0m
  397 |             }[0m
  398 | [0m
  399 |             if (value < NC_MBUF_MIN_SIZE || value > NC_MBUF_MAX_SIZE) {[0m
  400 |                 log_stderr("nutcracker: mbuf chunk size must be between %d and"[0m
  401 |                            " %d bytes", NC_MBUF_MIN_SIZE, NC_MBUF_MAX_SIZE);[0m
  402 |                 return NC_ERROR;[0m
  403 |             }[0m
  404 | [0m
  405 |             nci->mbuf_chunk_size = (size_t)value;[0m
  406 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc.c:409:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  409 |             switch (optopt) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc.c:415:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  415 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc.c:422:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  422 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc.c:425:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  425 |                 log_stderr("nutcracker: option -%c requires a string", optopt);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  426 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1m./nc_log.h:79:25: [0m[0;1;36mnote: [0mexpanded from macro 'log_stderr'[0m
   79 | #define log_stderr(...) do {                                                \[0m
      | [0;1;32m                        ^
[0m[1mnc.c:429:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  429 |                 log_stderr("nutcracker: invalid option -- '%c'", optopt);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  430 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1m./nc_log.h:79:25: [0m[0;1;36mnote: [0mexpanded from macro 'log_stderr'[0m
   79 | #define log_stderr(...) do {                                                \[0m
      | [0;1;32m                        ^
[0m[1mnc.c:435:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  435 |             log_stderr("nutcracker: invalid option -- '%c'", optopt);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  436 |             return NC_ERROR;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1m./nc_log.h:79:25: [0m[0;1;36mnote: [0mexpanded from macro 'log_stderr'[0m
   79 | #define log_stderr(...) do {                                                \[0m
      | [0;1;32m                        ^
[0m31 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[35/54][97.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp3n1gh7on.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/test_all.c
[1mtest_all.c:98:41: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'msg_type_t' (aka 'enum msg_type') to 'int' [clang-diagnostic-sign-conversion][0m
   98 |     expect_same_int(expected_type, req->type, "redis_parse_req: expected request type to be parsed");[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~                ~~~~~^~~~
[0m[1mtest_all.c:104:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  104 |         fprintf(stderr, "test_redis_parse_req_success_case failed for (%s)", data);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtest_all.c:104:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  104 |         fprintf(stderr, "test_redis_parse_req_success_case failed for (%s)", data);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtest_all.c:255:36: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'msg_type_t' (aka 'enum msg_type') to 'int' [clang-diagnostic-sign-conversion][0m
  255 |     expect_same_int(expected, rsp->type, "redis_parse_rsp: expected response type to be parsed");[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~           ~~~~~^~~~
[0m[1mtest_all.c:262:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  262 |         fprintf(stderr, "test_redis_parse_rsp_success_case failed for (%s)", data);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtest_all.c:262:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  262 |         fprintf(stderr, "test_redis_parse_rsp_success_case failed for (%s)", data);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtest_all.c:326:43: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'msg_parse_result_t' (aka 'enum msg_parse_result') to 'int' [clang-diagnostic-sign-conversion][0m
  326 |     expect_same_int(MSG_PARSE_ERROR, rsp->result, "redis_parse_rsp: expected MSG_PARSE_ERROR");[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~                  ~~~~~^~~~~~
[0m[1mtest_all.c:332:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  332 |         fprintf(stderr, "test_redis_parse_rsp_failure_case failed for (%s)", data);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtest_all.c:332:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  332 |         fprintf(stderr, "test_redis_parse_rsp_failure_case failed for (%s)", data);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtest_all.c:377:36: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'msg_type_t' (aka 'enum msg_type') to 'int' [clang-diagnostic-sign-conversion][0m
  377 |     expect_same_int(expected, rsp->type, "memcache_parse_rsp: expected response type to be parsed");[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~           ~~~~~^~~~
[0m[1mtest_all.c:431:29: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'msg_type_t' (aka 'enum msg_type') to 'int' [clang-diagnostic-sign-conversion][0m
  431 |     expect_same_int(0, rsp->type, "memcache_parse_rsp: expected response type to be parsed");[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~    ~~~~~^~~~
[0m[1mtest_all.c:432:43: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'msg_parse_result_t' (aka 'enum msg_parse_result') to 'int' [clang-diagnostic-sign-conversion][0m
  432 |     expect_same_int(MSG_PARSE_ERROR, rsp->result, "memcache_parse_rsp: expected MSG_PARSE_ERROR");[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~                  ~~~~~^~~~~~
[0m[1mtest_all.c:475:36: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'msg_type_t' (aka 'enum msg_type') to 'int' [clang-diagnostic-sign-conversion][0m
  475 |     expect_same_int(expected, req->type, "memcache_parse_req: expected response type to be parsed");[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~           ~~~~~^~~~
[0m[1mtest_all.c:546:43: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'msg_parse_result_t' (aka 'enum msg_parse_result') to 'int' [clang-diagnostic-sign-conversion][0m
  546 |     expect_same_int(MSG_PARSE_ERROR, req->result, "memcache_parse_rsp: expected MSG_PARSE_ERROR");[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~                  ~~~~~^~~~~~
[0m15 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[36/54][100.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpq0ygoyu7.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/run-parser-test-suite.c
[1mrun-parser-test-suite.c:20:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   20 |             if (i+1 == argc)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   21 |                 return usage(1);[0m
      | [0;1;32m                                
[0m[1mrun-parser-test-suite.c:21:24: [0m[0;1;35mwarning: [0m[1mOpened stream never closed. Potential resource leak [clang-analyzer-unix.Stream][0m
   21 |                 return usage(1);[0m
      | [0;1;32m                       ^~~~~
[0m[1mrun-parser-test-suite.c:18:17: [0m[0;1;36mnote: [0mAssuming 'i' is < 'argc'[0m
   18 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mrun-parser-test-suite.c:18:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   18 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m    ^
[0m[1mrun-parser-test-suite.c:19:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   19 |         if (strncmp(argv[i], "--flow", 6) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-parser-test-suite.c:19:9: [0m[0;1;36mnote: [0mTaking false branch[0m
   19 |         if (strncmp(argv[i], "--flow", 6) == 0) {[0m
      | [0;1;32m        ^
[0m[1mrun-parser-test-suite.c:32:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   32 |         else if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-parser-test-suite.c:32:14: [0m[0;1;36mnote: [0mTaking false branch[0m
   32 |         else if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m             ^
[0m[1mrun-parser-test-suite.c:34:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   34 |         else if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-parser-test-suite.c:34:14: [0m[0;1;36mnote: [0mTaking false branch[0m
   34 |         else if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;1;32m             ^
[0m[1mrun-parser-test-suite.c:36:19: [0m[0;1;36mnote: [0m'foundfile' is 0[0m
   36 |         else if (!foundfile) {[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mrun-parser-test-suite.c:36:14: [0m[0;1;36mnote: [0mTaking true branch[0m
   36 |         else if (!foundfile) {[0m
      | [0;1;32m             ^
[0m[1mrun-parser-test-suite.c:37:21: [0m[0;1;36mnote: [0mStream opened here[0m
   37 |             input = fopen(argv[i], "rb");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mrun-parser-test-suite.c:37:21: [0m[0;1;36mnote: [0mAssuming that 'fopen' is successful[0m
   37 |             input = fopen(argv[i], "rb");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mrun-parser-test-suite.c:18:17: [0m[0;1;36mnote: [0mAssuming 'i' is < 'argc'[0m
   18 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mrun-parser-test-suite.c:18:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   18 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m    ^
[0m[1mrun-parser-test-suite.c:19:9: [0m[0;1;36mnote: [0mTaking true branch[0m
   19 |         if (strncmp(argv[i], "--flow", 6) == 0) {[0m
      | [0;1;32m        ^
[0m[1mrun-parser-test-suite.c:20:17: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   20 |             if (i+1 == argc)[0m
      | [0;1;32m                ^~~~~~~~~~~
[0m[1mrun-parser-test-suite.c:20:13: [0m[0;1;36mnote: [0mTaking true branch[0m
   20 |             if (i+1 == argc)[0m
      | [0;1;32m            ^
[0m[1mrun-parser-test-suite.c:21:24: [0m[0;1;36mnote: [0mOpened stream never closed. Potential resource leak[0m
   21 |                 return usage(1);[0m
      | [0;1;32m                       ^~~~~
[0m[1mrun-parser-test-suite.c:23:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   23 |             if (strncmp(argv[i], "keep", 4) == 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   24 |                 flow = 0;[0m
   25 |             else if (strncmp(argv[i], "on", 2) == 0)[0m
      | [0;32m            } 
[0m[1mrun-parser-test-suite.c:25:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   25 |             else if (strncmp(argv[i], "on", 2) == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   26 |                 flow = 1;[0m
   27 |             else if (strncmp(argv[i], "off", 3) == 0)[0m
      | [0;32m            } 
[0m[1mrun-parser-test-suite.c:27:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   27 |             else if (strncmp(argv[i], "off", 3) == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m   28 |                 flow = -1;[0m
   29 |             else[0m
      | [0;32m            } 
[0m[1mrun-parser-test-suite.c:29:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   29 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   30 |                 return usage(1);[0m
      | [0;1;32m                                
[0m[1mrun-parser-test-suite.c:32:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |         else if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   33 |             return usage(0);[0m
   34 |         else if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:34:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   34 |         else if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   35 |             return usage(0);[0m
   36 |         else if (!foundfile) {[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:40:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   41 |             return usage(1);[0m
      | [0;1;32m                            
[0m[1mrun-parser-test-suite.c:49:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   49 |         fprintf(stderr, "Could not initialize the parser object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-parser-test-suite.c:49:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   49 |         fprintf(stderr, "Could not initialize the parser object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-parser-test-suite.c:58:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   58 |                 fprintf(stderr, "Parse error: %s\nLine: %lu Column: %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrun-parser-test-suite.c:58:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   58 |                 fprintf(stderr, "Parse error: %s\nLine: %lu Column: %lu\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrun-parser-test-suite.c:64:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   64 |                 fprintf(stderr, "Parse error: %s\n", parser.problem);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrun-parser-test-suite.c:64:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   64 |                 fprintf(stderr, "Parse error: %s\n", parser.problem);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrun-parser-test-suite.c:70:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |         if (type == YAML_NO_EVENT)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   71 |             printf("???\n");[0m
   72 |         else if (type == YAML_STREAM_START_EVENT)[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:72:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |         else if (type == YAML_STREAM_START_EVENT)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   73 |             printf("+STR\n");[0m
   74 |         else if (type == YAML_STREAM_END_EVENT)[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:74:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |         else if (type == YAML_STREAM_END_EVENT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   75 |             printf("-STR\n");[0m
   76 |         else if (type == YAML_DOCUMENT_START_EVENT) {[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:78:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |             if (!event.data.document_start.implicit)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   79 |                 printf(" ---");[0m
      | [0;1;32m                               
[0m[1mrun-parser-test-suite.c:84:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |             if (!event.data.document_end.implicit)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m   85 |                 printf(" ...");[0m
      | [0;1;32m                               
[0m[1mrun-parser-test-suite.c:90:88: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |             if (flow == 0 && event.data.mapping_start.style == YAML_FLOW_MAPPING_STYLE)[0m
      | [0;1;32m                                                                                       ^
[0m      | [0;32m                                                                                        {
[0m   91 |                 printf(" {}");[0m
   92 |             else if (flow == 1)[0m
      | [0;32m            } 
[0m[1mrun-parser-test-suite.c:92:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |             else if (flow == 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   93 |                 printf(" {}");[0m
      | [0;1;32m                              
[0m[1mrun-parser-test-suite.c:94:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |             if (event.data.mapping_start.anchor)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   95 |                 printf(" &%s", event.data.mapping_start.anchor);[0m
      | [0;1;32m                                                                
[0m[1mrun-parser-test-suite.c:96:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |             if (event.data.mapping_start.tag)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   97 |                 printf(" <%s>", event.data.mapping_start.tag);[0m
      | [0;1;32m                                                              
[0m[1mrun-parser-test-suite.c:100:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |         else if (type == YAML_MAPPING_END_EVENT)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  101 |             printf("-MAP\n");[0m
  102 |         else if (type == YAML_SEQUENCE_START_EVENT) {[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:104:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |             if (flow == 0 && event.data.sequence_start.style == YAML_FLOW_SEQUENCE_STYLE)[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m  105 |                 printf(" []");[0m
  106 |             else if (flow == 1)[0m
      | [0;32m            } 
[0m[1mrun-parser-test-suite.c:106:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |             else if (flow == 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  107 |                 printf(" []");[0m
      | [0;1;32m                              
[0m[1mrun-parser-test-suite.c:108:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |             if (event.data.sequence_start.anchor)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  109 |                 printf(" &%s", event.data.sequence_start.anchor);[0m
      | [0;1;32m                                                                 
[0m[1mrun-parser-test-suite.c:110:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |             if (event.data.sequence_start.tag)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  111 |                 printf(" <%s>", event.data.sequence_start.tag);[0m
      | [0;1;32m                                                               
[0m[1mrun-parser-test-suite.c:114:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |         else if (type == YAML_SEQUENCE_END_EVENT)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  115 |             printf("-SEQ\n");[0m
  116 |         else if (type == YAML_SCALAR_EVENT) {[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:118:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |             if (event.data.scalar.anchor)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  119 |                 printf(" &%s", event.data.scalar.anchor);[0m
      | [0;1;32m                                                         
[0m[1mrun-parser-test-suite.c:120:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |             if (event.data.scalar.tag)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  121 |                 printf(" <%s>", event.data.scalar.tag);[0m
      | [0;1;32m                                                       
[0m[1mrun-parser-test-suite.c:124:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  124 |                 printf(" :");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  125 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-parser-test-suite.c:127:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |                 printf(" '");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  128 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-parser-test-suite.c:130:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  130 |                 printf(" \"");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  131 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-parser-test-suite.c:133:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  133 |                 printf(" |");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  134 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-parser-test-suite.c:136:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  136 |                 printf(" >");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  137 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-parser-test-suite.c:139:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  139 |                 abort();[0m
      | [0;1;32m                ^      
[0m      | [0;32m                {      ;} 
[0m[1mrun-parser-test-suite.c:144:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |         else if (type == YAML_ALIAS_EVENT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  145 |             printf("=ALI *%s\n", event.data.alias.anchor);[0m
  146 |         else[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:146:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  146 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  147 |             abort();[0m
      | [0;1;32m                    
[0m[1mrun-parser-test-suite.c:151:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |         if (type == YAML_STREAM_END_EVENT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  152 |             break;[0m
      | [0;1;32m                  
[0m[1mrun-parser-test-suite.c:169:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |         if (c == '\\')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  170 |             printf("\\\\");[0m
  171 |         else if (c == '\0')[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:171:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |         else if (c == '\0')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  172 |             printf("\\0");[0m
  173 |         else if (c == '\b')[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:173:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |         else if (c == '\b')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  174 |             printf("\\b");[0m
  175 |         else if (c == '\n')[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:175:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |         else if (c == '\n')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  176 |             printf("\\n");[0m
  177 |         else if (c == '\r')[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:177:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |         else if (c == '\r')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  178 |             printf("\\r");[0m
  179 |         else if (c == '\t')[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:179:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |         else if (c == '\t')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  180 |             printf("\\t");[0m
  181 |         else[0m
      | [0;32m        } 
[0m[1mrun-parser-test-suite.c:181:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  182 |             printf("%c", c);[0m
      | [0;1;32m                            
[0m[1mrun-parser-test-suite.c:187:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  187 |     fprintf(stderr, "Usage: libyaml-parser [--flow (on|off|keep)] [<input-file>]\n");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mrun-parser-test-suite.c:187:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  187 |     fprintf(stderr, "Usage: libyaml-parser [--flow (on|off|keep)] [<input-file>]\n");[0m
      | [0;1;32m    ^~~~~~~
[0m48 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[37/54][97.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmplbf7tiyy.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/run-emitter-test-suite.c
[1mrun-emitter-test-suite.c:30:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   30 |         if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   31 |             return usage(0);[0m
      | [0;1;32m                            
[0m[1mrun-emitter-test-suite.c:31:20: [0m[0;1;35mwarning: [0m[1mOpened stream never closed. Potential resource leak [clang-analyzer-unix.Stream][0m
   31 |             return usage(0);[0m
      | [0;1;32m                   ^~~~~
[0m[1mrun-emitter-test-suite.c:29:17: [0m[0;1;36mnote: [0mAssuming 'i' is < 'argc'[0m
   29 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mrun-emitter-test-suite.c:29:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   29 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:30:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   30 |         if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:30:9: [0m[0;1;36mnote: [0mTaking false branch[0m
   30 |         if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m        ^
[0m[1mrun-emitter-test-suite.c:32:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   32 |         if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:32:9: [0m[0;1;36mnote: [0mTaking false branch[0m
   32 |         if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;1;32m        ^
[0m[1mrun-emitter-test-suite.c:34:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   34 |         if (strncmp(argv[i], "--flow", 6) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:34:9: [0m[0;1;36mnote: [0mTaking false branch[0m
   34 |         if (strncmp(argv[i], "--flow", 6) == 0) {[0m
      | [0;1;32m        ^
[0m[1mrun-emitter-test-suite.c:47:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   47 |         else if (strncmp(argv[i], "--directive", 11) == 0) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:47:14: [0m[0;1;36mnote: [0mTaking false branch[0m
   47 |         else if (strncmp(argv[i], "--directive", 11) == 0) {[0m
      | [0;1;32m             ^
[0m[1mrun-emitter-test-suite.c:58:19: [0m[0;1;36mnote: [0m'foundfile' is 0[0m
   58 |         else if (!foundfile) {[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mrun-emitter-test-suite.c:58:14: [0m[0;1;36mnote: [0mTaking true branch[0m
   58 |         else if (!foundfile) {[0m
      | [0;1;32m             ^
[0m[1mrun-emitter-test-suite.c:59:21: [0m[0;1;36mnote: [0mStream opened here[0m
   59 |             input = fopen(argv[i], "rb");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:59:21: [0m[0;1;36mnote: [0mAssuming that 'fopen' is successful[0m
   59 |             input = fopen(argv[i], "rb");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:29:17: [0m[0;1;36mnote: [0mAssuming 'i' is < 'argc'[0m
   29 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mrun-emitter-test-suite.c:29:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   29 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:30:9: [0m[0;1;36mnote: [0mTaking true branch[0m
   30 |         if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m        ^
[0m[1mrun-emitter-test-suite.c:31:20: [0m[0;1;36mnote: [0mOpened stream never closed. Potential resource leak[0m
   31 |             return usage(0);[0m
      | [0;1;32m                   ^~~~~
[0m[1mrun-emitter-test-suite.c:32:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |         if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m   33 |             return usage(0);[0m
      | [0;1;32m                            
[0m[1mrun-emitter-test-suite.c:35:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |             if (i+1 == argc)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   36 |                 return usage(1);[0m
      | [0;1;32m                                
[0m[1mrun-emitter-test-suite.c:38:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |             if (strncmp(argv[i], "keep", 4) == 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   39 |                 flow = 0;[0m
   40 |             else if (strncmp(argv[i], "on", 2) == 0)[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:40:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |             else if (strncmp(argv[i], "on", 2) == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   41 |                 flow = 1;[0m
   42 |             else if (strncmp(argv[i], "off", 3) == 0)[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:42:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |             else if (strncmp(argv[i], "off", 3) == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m   43 |                 flow = -1;[0m
   44 |             else[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:44:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   45 |                 return usage(1);[0m
      | [0;1;32m                                
[0m[1mrun-emitter-test-suite.c:48:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   48 |             if (i+1 == argc)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   49 |                 return usage(1);[0m
      | [0;1;32m                                
[0m[1mrun-emitter-test-suite.c:51:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |             if (strncmp(argv[i], "1.1", 3) == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   52 |                 minor = 1;[0m
   53 |             else if (strncmp(argv[i], "1.2", 3) == 0)[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:53:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |             else if (strncmp(argv[i], "1.2", 3) == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m   54 |                 minor = 2;[0m
   55 |             else[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:55:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   56 |                 return usage(1);[0m
      | [0;1;32m                                
[0m[1mrun-emitter-test-suite.c:69:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |     if (!foundfile)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   70 |         input = stdin;[0m
      | [0;1;32m                      
[0m[1mrun-emitter-test-suite.c:75:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   75 |         fprintf(stderr, "Could not initalize the emitter object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:75:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   75 |         fprintf(stderr, "Could not initalize the emitter object\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:106:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |             if (flow == 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  107 |                 style = YAML_FLOW_MAPPING_STYLE;[0m
  108 |             else if (flow == 0 && strncmp(line+5, "{}", 2) == 0)[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:108:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |             else if (flow == 0 && strncmp(line+5, "{}", 2) == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  109 |                 style = YAML_FLOW_MAPPING_STYLE;[0m
      | [0;1;32m                                                
[0m[1mrun-emitter-test-suite.c:119:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |             if (flow == 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  120 |                 style = YAML_FLOW_MAPPING_STYLE;[0m
  121 |             else if (flow == 0 && strncmp(line+5, "[]", 2) == 0)[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:121:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |             else if (flow == 0 && strncmp(line+5, "[]", 2) == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  122 |                 style = YAML_FLOW_SEQUENCE_STYLE;[0m
      | [0;1;32m                                                 
[0m[1mrun-emitter-test-suite.c:146:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  146 |             fprintf(stderr, "Unknown event: '%s'\n", line);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mrun-emitter-test-suite.c:146:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  146 |             fprintf(stderr, "Unknown event: '%s'\n", line);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mrun-emitter-test-suite.c:151:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |         if (!ok)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  152 |             goto event_error;[0m
      | [0;1;32m                             
[0m[1mrun-emitter-test-suite.c:153:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |         if (!yaml_emitter_emit(&emitter, &event))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  154 |             goto emitter_error;[0m
      | [0;1;32m                               
[0m[1mrun-emitter-test-suite.c:166:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  166 |         fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:166:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  166 |         fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:166:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  166 |         fprintf(stderr, "Memory error: Not enough memory for emitting\n");[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  167 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mrun-emitter-test-suite.c:169:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  169 |         fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:169:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  169 |         fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:169:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  169 |         fprintf(stderr, "Writer error: %s\n", emitter.problem);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  170 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mrun-emitter-test-suite.c:172:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  172 |         fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:172:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  172 |         fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:172:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  172 |         fprintf(stderr, "Emitter error: %s\n", emitter.problem);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  173 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mrun-emitter-test-suite.c:178:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  178 |         fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:178:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  178 |         fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:178:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  178 |         fprintf(stderr, "Internal error\n");[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  179 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mrun-emitter-test-suite.c:185:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  185 |     fprintf(stderr, "Memory error: Not enough memory for creating an event\n");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mrun-emitter-test-suite.c:185:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  185 |     fprintf(stderr, "Memory error: Not enough memory for creating an event\n");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mrun-emitter-test-suite.c:194:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |     if (!fgets(line, 1024 - 1, input))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  195 |         return 0;[0m
      | [0;1;32m                 
[0m[1mrun-emitter-test-suite.c:198:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  198 |         fprintf(stderr, "Line too long: '%s'", line);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:198:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  198 |         fprintf(stderr, "Line too long: '%s'", line);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrun-emitter-test-suite.c:210:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |     if ((start = strchr(line, sigil)) == NULL)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  211 |         return NULL;[0m
      | [0;1;32m                    
[0m[1mrun-emitter-test-suite.c:213:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |     if ((end = strchr(start, ' ')) == NULL)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  214 |         end = line + strlen(line);[0m
      | [0;1;32m                                  
[0m[1mrun-emitter-test-suite.c:215:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  215 |     memcpy(anchor, start, end - start);[0m
      | [0;1;32m    ^~~~~~
[0m[1mrun-emitter-test-suite.c:215:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  215 |     memcpy(anchor, start, end - start);[0m
      | [0;1;32m    ^~~~~~
[0m[1mrun-emitter-test-suite.c:224:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |     if ((start = strchr(line, '<')) == NULL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  225 |         return NULL;[0m
      | [0;1;32m                    
[0m[1mrun-emitter-test-suite.c:226:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |     if ((end = strchr(line, '>')) == NULL)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  227 |         return NULL;[0m
      | [0;1;32m                    
[0m[1mrun-emitter-test-suite.c:228:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  228 |     memcpy(tag, start + 1, end - start - 1);[0m
      | [0;1;32m    ^~~~~~
[0m[1mrun-emitter-test-suite.c:228:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  228 |     memcpy(tag, start + 1, end - start - 1);[0m
      | [0;1;32m    ^~~~~~
[0m[1mrun-emitter-test-suite.c:229:5: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to 'tag' with tainted index [clang-analyzer-security.ArrayBound][0m
  229 |     tag[end - start - 1] = '\0';[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:29:17: [0m[0;1;36mnote: [0mAssuming 'i' is < 'argc'[0m
   29 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mrun-emitter-test-suite.c:29:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   29 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:30:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   30 |         if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:30:9: [0m[0;1;36mnote: [0mTaking false branch[0m
   30 |         if (strncmp(argv[i], "--help", 6) == 0)[0m
      | [0;1;32m        ^
[0m[1mrun-emitter-test-suite.c:32:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   32 |         if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:32:9: [0m[0;1;36mnote: [0mTaking false branch[0m
   32 |         if (strncmp(argv[i], "-h", 2) == 0)[0m
      | [0;1;32m        ^
[0m[1mrun-emitter-test-suite.c:34:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   34 |         if (strncmp(argv[i], "--flow", 6) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:34:9: [0m[0;1;36mnote: [0mTaking false branch[0m
   34 |         if (strncmp(argv[i], "--flow", 6) == 0) {[0m
      | [0;1;32m        ^
[0m[1mrun-emitter-test-suite.c:47:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   47 |         else if (strncmp(argv[i], "--directive", 11) == 0) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:47:14: [0m[0;1;36mnote: [0mTaking false branch[0m
   47 |         else if (strncmp(argv[i], "--directive", 11) == 0) {[0m
      | [0;1;32m             ^
[0m[1mrun-emitter-test-suite.c:58:19: [0m[0;1;36mnote: [0m'foundfile' is 0[0m
   58 |         else if (!foundfile) {[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mrun-emitter-test-suite.c:58:14: [0m[0;1;36mnote: [0mTaking true branch[0m
   58 |         else if (!foundfile) {[0m
      | [0;1;32m             ^
[0m[1mrun-emitter-test-suite.c:59:21: [0m[0;1;36mnote: [0mTaint originated here[0m
   59 |             input = fopen(argv[i], "rb");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:59:21: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
   59 |             input = fopen(argv[i], "rb");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:59:21: [0m[0;1;36mnote: [0mAssuming that 'fopen' is successful[0m
   59 |             input = fopen(argv[i], "rb");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:29:17: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'argc'[0m
   29 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mrun-emitter-test-suite.c:29:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 64[0m
   29 |     for (i = 1; i < argc; i++) {[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:64:9: [0m[0;1;36mnote: [0m'minor' is 0[0m
   64 |     if (minor) {[0m
      | [0;1;32m        ^~~~~
[0m[1mrun-emitter-test-suite.c:64:5: [0m[0;1;36mnote: [0mTaking false branch[0m
   64 |     if (minor) {[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:69:10: [0m[0;1;36mnote: [0m'foundfile' is 1[0m
   69 |     if (!foundfile)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mrun-emitter-test-suite.c:69:5: [0m[0;1;36mnote: [0mTaking false branch[0m
   69 |     if (!foundfile)[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:72:12: [0m[0;1;36mnote: [0m'input' is non-null[0m
   72 |     assert(input);[0m
      | [0;1;32m           ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mrun-emitter-test-suite.c:72:5: [0m[0;1;36mnote: [0mTaking true branch[0m
   72 |     assert(input);[0m
      | [0;1;32m    ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mrun-emitter-test-suite.c:74:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   74 |     if (!yaml_emitter_initialize(&emitter)) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:74:5: [0m[0;1;36mnote: [0mTaking false branch[0m
   74 |     if (!yaml_emitter_initialize(&emitter)) {[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:83:12: [0m[0;1;36mnote: [0mCalling 'get_line'[0m
   83 |     while (get_line(input, line)) {[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:194:10: [0m[0;1;36mnote: [0mTaint propagated to the 1st argument[0m
  194 |     if (!fgets(line, 1024 - 1, input))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:194:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  194 |     if (!fgets(line, 1024 - 1, input))[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:197:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |     if ((newline = strchr(line, '\n')) == NULL) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:197:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  197 |     if ((newline = strchr(line, '\n')) == NULL) {[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:83:12: [0m[0;1;36mnote: [0mReturning from 'get_line'[0m
   83 |     while (get_line(input, line)) {[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:83:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   83 |     while (get_line(input, line)) {[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:90:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   90 |         if (strncmp(line, "+STR", 4) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:90:9: [0m[0;1;36mnote: [0mTaking false branch[0m
   90 |         if (strncmp(line, "+STR", 4) == 0) {[0m
      | [0;1;32m        ^
[0m[1mrun-emitter-test-suite.c:93:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   93 |         else if (strncmp(line, "-STR", 4) == 0) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:93:14: [0m[0;1;36mnote: [0mTaking false branch[0m
   93 |         else if (strncmp(line, "-STR", 4) == 0) {[0m
      | [0;1;32m             ^
[0m[1mrun-emitter-test-suite.c:96:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   96 |         else if (strncmp(line, "+DOC", 4) == 0) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:96:14: [0m[0;1;36mnote: [0mTaking false branch[0m
   96 |         else if (strncmp(line, "+DOC", 4) == 0) {[0m
      | [0;1;32m             ^
[0m[1mrun-emitter-test-suite.c:100:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  100 |         else if (strncmp(line, "-DOC", 4) == 0) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:100:14: [0m[0;1;36mnote: [0mTaking false branch[0m
  100 |         else if (strncmp(line, "-DOC", 4) == 0) {[0m
      | [0;1;32m             ^
[0m[1mrun-emitter-test-suite.c:104:18: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  104 |         else if (strncmp(line, "+MAP", 4) == 0) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:104:14: [0m[0;1;36mnote: [0mTaking true branch[0m
  104 |         else if (strncmp(line, "+MAP", 4) == 0) {[0m
      | [0;1;32m             ^
[0m[1mrun-emitter-test-suite.c:106:17: [0m[0;1;36mnote: [0m'flow' is not equal to 1[0m
  106 |             if (flow == 1)[0m
      | [0;1;32m                ^~~~
[0m[1mrun-emitter-test-suite.c:106:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  106 |             if (flow == 1)[0m
      | [0;1;32m            ^
[0m[1mrun-emitter-test-suite.c:108:22: [0m[0;1;36mnote: [0m'flow' is not equal to 0[0m
  108 |             else if (flow == 0 && strncmp(line+5, "{}", 2) == 0)[0m
      | [0;1;32m                     ^~~~
[0m[1mrun-emitter-test-suite.c:108:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  108 |             else if (flow == 0 && strncmp(line+5, "{}", 2) == 0)[0m
      | [0;1;32m                               ^
[0m[1mrun-emitter-test-suite.c:112:54: [0m[0;1;36mnote: [0mCalling 'get_tag'[0m
  112 |                                                      get_tag(line, tag), 0, style);[0m
      | [0;1;32m                                                     ^~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:224:18: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  224 |     if ((start = strchr(line, '<')) == NULL)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:224:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  224 |     if ((start = strchr(line, '<')) == NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:224:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  224 |     if ((start = strchr(line, '<')) == NULL)[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:226:16: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  226 |     if ((end = strchr(line, '>')) == NULL)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:226:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  226 |     if ((end = strchr(line, '>')) == NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:226:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  226 |     if ((end = strchr(line, '>')) == NULL)[0m
      | [0;1;32m    ^
[0m[1mrun-emitter-test-suite.c:229:5: [0m[0;1;36mnote: [0mAccess of 'tag' with a tainted index that may be negative or too large[0m
  229 |     tag[end - start - 1] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mrun-emitter-test-suite.c:243:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |             if (*start == ':')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  244 |                 *style = YAML_PLAIN_SCALAR_STYLE;[0m
  245 |             else if (*start == '\'')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:245:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |             else if (*start == '\'')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  246 |                 *style = YAML_SINGLE_QUOTED_SCALAR_STYLE;[0m
  247 |             else if (*start == '"')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:247:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |             else if (*start == '"')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  248 |                 *style = YAML_DOUBLE_QUOTED_SCALAR_STYLE;[0m
  249 |             else if (*start == '|')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:249:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |             else if (*start == '|')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  250 |                 *style = YAML_LITERAL_SCALAR_STYLE;[0m
  251 |             else if (*start == '>')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:251:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |             else if (*start == '>')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  252 |                 *style = YAML_FOLDED_SCALAR_STYLE;[0m
  253 |             else {[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:261:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  261 |     if (!start)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  262 |         abort();[0m
      | [0;1;32m                
[0m[1mrun-emitter-test-suite.c:266:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |             if (*++c == '\\')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  267 |                 value[i++] = '\\';[0m
  268 |             else if (*c == '0')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:268:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |             else if (*c == '0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  269 |                 value[i++] = '\0';[0m
  270 |             else if (*c == 'b')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:270:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |             else if (*c == 'b')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  271 |                 value[i++] = '\b';[0m
  272 |             else if (*c == 'n')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:272:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |             else if (*c == 'n')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  273 |                 value[i++] = '\n';[0m
  274 |             else if (*c == 'r')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:274:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |             else if (*c == 'r')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  275 |                 value[i++] = '\r';[0m
  276 |             else if (*c == 't')[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:276:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |             else if (*c == 't')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  277 |                 value[i++] = '\t';[0m
  278 |             else[0m
      | [0;32m            } 
[0m[1mrun-emitter-test-suite.c:278:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  279 |                 abort();[0m
      | [0;1;32m                        
[0m[1mrun-emitter-test-suite.c:281:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  282 |             value[i++] = *c;[0m
      | [0;1;32m                            
[0m[1mrun-emitter-test-suite.c:288:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  288 |     fprintf(stderr, "Usage: run-emitter-test-suite [--directive (1.1|1.2)] [--flow (on|off|keep)] [<input-file>]\n");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mrun-emitter-test-suite.c:288:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  288 |     fprintf(stderr, "Usage: run-emitter-test-suite [--directive (1.1|1.2)] [--flow (on|off|keep)] [<input-file>]\n");[0m
      | [0;1;32m    ^~~~~~~
[0m56 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[38/54][104.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpc2w3ls91.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/run-emitter.c
[1mrun-emitter.c:20:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   20 |             return yaml_stream_start_event_initialize(event_to,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   21 |                     event_from->data.stream_start.encoding);[0m
      | [0;1;32m                                                           
[0m      | [0;32m                                                           ;} 
[0m[1mrun-emitter.c:24:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   24 |             return yaml_stream_end_event_initialize(event_to);[0m
      | [0;1;32m            ^                                                
[0m      | [0;32m            {                                                ;} 
[0m[1mrun-emitter.c:27:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   27 |             return yaml_document_start_event_initialize(event_to,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   28 |                     event_from->data.document_start.version_directive,[0m
   29 |                     event_from->data.document_start.tag_directives.start,[0m
   30 |                     event_from->data.document_start.tag_directives.end,[0m
   31 |                     event_from->data.document_start.implicit);[0m
      | [0;1;32m                                                             
[0m      | [0;32m                                                             ;} 
[0m[1mrun-emitter.c:34:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   34 |             return yaml_document_end_event_initialize(event_to,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   35 |                     event_from->data.document_end.implicit);[0m
      | [0;1;32m                                                           
[0m      | [0;32m                                                           ;} 
[0m[1mrun-emitter.c:38:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   38 |             return yaml_alias_event_initialize(event_to,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   39 |                     event_from->data.alias.anchor);[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1mrun-emitter.c:42:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   42 |             return yaml_scalar_event_initialize(event_to,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   43 |                     event_from->data.scalar.anchor,[0m
   44 |                     event_from->data.scalar.tag,[0m
   45 |                     event_from->data.scalar.value,[0m
   46 |                     event_from->data.scalar.length,[0m
   47 |                     event_from->data.scalar.plain_implicit,[0m
   48 |                     event_from->data.scalar.quoted_implicit,[0m
   49 |                     event_from->data.scalar.style);[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1mrun-emitter.c:52:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   52 |             return yaml_sequence_start_event_initialize(event_to,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   53 |                     event_from->data.sequence_start.anchor,[0m
   54 |                     event_from->data.sequence_start.tag,[0m
   55 |                     event_from->data.sequence_start.implicit,[0m
   56 |                     event_from->data.sequence_start.style);[0m
      | [0;1;32m                                                          
[0m      | [0;32m                                                          ;} 
[0m[1mrun-emitter.c:59:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   59 |             return yaml_sequence_end_event_initialize(event_to);[0m
      | [0;1;32m            ^                                                  
[0m      | [0;32m            {                                                  ;} 
[0m[1mrun-emitter.c:62:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   62 |             return yaml_mapping_start_event_initialize(event_to,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   63 |                     event_from->data.mapping_start.anchor,[0m
   64 |                     event_from->data.mapping_start.tag,[0m
   65 |                     event_from->data.mapping_start.implicit,[0m
   66 |                     event_from->data.mapping_start.style);[0m
      | [0;1;32m                                                         
[0m      | [0;32m                                                         ;} 
[0m[1mrun-emitter.c:69:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |             return yaml_mapping_end_event_initialize(event_to);[0m
      | [0;1;32m            ^                                                 
[0m      | [0;32m            {                                                 ;} 
[0m[1mrun-emitter.c:82:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |     if (event1->type != event2->type)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   83 |         return 0;[0m
      | [0;1;32m                 
[0m[1mrun-emitter.c:88:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   88 |             return 1;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1mrun-emitter.c:93:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   93 |             if ((event1->data.document_start.version_directive && !event2->data.document_start.version_directive)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mrun-emitter.c:97:143: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |                             || event1->data.document_start.version_directive->minor != event2->data.document_start.version_directive->minor)))[0m
      | [0;1;32m                                                                                                                                              ^
[0m      | [0;32m                                                                                                                                               {
[0m   98 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:100:121: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |                     (event2->data.document_start.tag_directives.end - event2->data.document_start.tag_directives.start))[0m
      | [0;1;32m                                                                                                                        ^
[0m      | [0;32m                                                                                                                         {
[0m  101 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:106:103: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |                             (char *)event2->data.document_start.tag_directives.start[k].prefix) != 0))[0m
      | [0;1;32m                                                                                                      ^
[0m      | [0;32m                                                                                                       {
[0m  107 |                     return 0;[0m
      | [0;1;32m                             
[0m[1mrun-emitter.c:114:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  114 |             return 1;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1mrun-emitter.c:119:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  119 |             return (strcmp((char *)event1->data.alias.anchor,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  120 |                         (char *)event2->data.alias.anchor) == 0);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mrun-emitter.c:123:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  123 |             if ((event1->data.scalar.anchor && !event2->data.scalar.anchor)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mrun-emitter.c:127:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |                             (char *)event2->data.scalar.anchor) != 0))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  128 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:135:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |                             (char *)event2->data.scalar.tag) != 0))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  136 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:139:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |                         event1->data.scalar.length) != 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  140 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:143:87: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |                     /* || (event2->data.scalar.style != event2->data.scalar.style) */)[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m  144 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:148:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  148 |             if ((event1->data.sequence_start.anchor && !event2->data.sequence_start.anchor)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  149 |                     || (!event1->data.sequence_start.anchor && event2->data.sequence_start.anchor)[0m
  150 |                     || (event1->data.sequence_start.anchor && event2->data.sequence_start.anchor[0m
  151 |                         && strcmp((char *)event1->data.sequence_start.anchor,[0m
  152 |                             (char *)event2->data.sequence_start.anchor) != 0))[0m
  153 |                 return 0;[0m
  154 |             if ((event1->data.sequence_start.tag && !event2->data.sequence_start.tag)[0m
  155 |                     || (!event1->data.sequence_start.tag && event2->data.sequence_start.tag)[0m
  156 |                     || (event1->data.sequence_start.tag && event2->data.sequence_start.tag[0m
  157 |                         && strcmp((char *)event1->data.sequence_start.tag,[0m
  158 |                             (char *)event2->data.sequence_start.tag) != 0))[0m
  159 |                 return 0;[0m
  160 |             if ((event1->data.sequence_start.implicit != event2->data.sequence_start.implicit)[0m
  161 |                     /* || (event2->data.sequence_start.style != event2->data.sequence_start.style) */)[0m
  162 |                 return 0;[0m
  163 |             return 1;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mrun-emitter.c:152:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |                             (char *)event2->data.sequence_start.anchor) != 0))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  153 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:158:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |                             (char *)event2->data.sequence_start.tag) != 0))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  159 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:161:103: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |                     /* || (event2->data.sequence_start.style != event2->data.sequence_start.style) */)[0m
      | [0;1;32m                                                                                                      ^
[0m      | [0;32m                                                                                                       {
[0m  162 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:166:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  166 |             if ((event1->data.mapping_start.anchor && !event2->data.mapping_start.anchor)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  167 |                     || (!event1->data.mapping_start.anchor && event2->data.mapping_start.anchor)[0m
  168 |                     || (event1->data.mapping_start.anchor && event2->data.mapping_start.anchor[0m
  169 |                         && strcmp((char *)event1->data.mapping_start.anchor,[0m
  170 |                             (char *)event2->data.mapping_start.anchor) != 0))[0m
  171 |                 return 0;[0m
  172 |             if ((event1->data.mapping_start.tag && !event2->data.mapping_start.tag)[0m
  173 |                     || (!event1->data.mapping_start.tag && event2->data.mapping_start.tag)[0m
  174 |                     || (event1->data.mapping_start.tag && event2->data.mapping_start.tag[0m
  175 |                         && strcmp((char *)event1->data.mapping_start.tag,[0m
  176 |                             (char *)event2->data.mapping_start.tag) != 0))[0m
  177 |                 return 0;[0m
  178 |             if ((event1->data.mapping_start.implicit != event2->data.mapping_start.implicit)[0m
  179 |                     /* || (event2->data.mapping_start.style != event2->data.mapping_start.style) */)[0m
  180 |                 return 0;[0m
  181 |             return 1;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mrun-emitter.c:170:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |                             (char *)event2->data.mapping_start.anchor) != 0))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  171 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:176:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |                             (char *)event2->data.mapping_start.tag) != 0))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  177 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:179:101: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |                     /* || (event2->data.mapping_start.style != event2->data.mapping_start.style) */)[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m  180 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-emitter.c:184:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  184 |             return 1;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1mrun-emitter.c:202:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |         if (!data_size) break;[0m
      | [0;1;32m                       ^      
[0m      | [0;32m                        {
[0m[1mrun-emitter.c:205:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |         if (feof(file)) break;[0m
      | [0;1;32m                       ^      
[0m      | [0;32m                        {
[0m[1mrun-emitter.c:234:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  234 |                 memmove(argv+number, argv+number+1, (argc-number-1)*sizeof(char *));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrun-emitter.c:234:17: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  234 |                 memmove(argv+number, argv+number+1, (argc-number-1)*sizeof(char *));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrun-emitter.c:262:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  262 |         memset(buffer, 0, BUFFER_SIZE+1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mrun-emitter.c:262:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  262 |         memset(buffer, 0, BUFFER_SIZE+1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mrun-emitter.c:263:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  263 |         memset(events, 0, MAX_EVENTS*sizeof(yaml_event_t));[0m
      | [0;1;32m        ^~~~~~
[0m[1mrun-emitter.c:263:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  263 |         memset(events, 0, MAX_EVENTS*sizeof(yaml_event_t));[0m
      | [0;1;32m        ^~~~~~
[0m40 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[39/54][105.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp_wt3pndl.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_request.c
[1mnc_request.c:39:13: [0m[0;1;35mwarning: [0m[1mvariable 'req_time' set but not used [clang-diagnostic-unused-but-set-variable][0m
   39 |     int64_t req_time;          /* time cost for this request */[0m
      | [0;1;32m            ^
[0m[1mnc_request.c:40:17: [0m[0;1;35mwarning: [0m[1mvariable 'peer_str' set but not used [clang-diagnostic-unused-but-set-variable][0m
   40 |     const char *peer_str;      /* peer client ip:port */[0m
      | [0;1;32m                ^
[0m[1mnc_request.c:41:14: [0m[0;1;35mwarning: [0m[1mvariable 'req_len' set but not used [clang-diagnostic-unused-but-set-variable][0m
   41 |     uint32_t req_len, rsp_len; /* request and response length */[0m
      | [0;1;32m             ^
[0m[1mnc_request.c:41:23: [0m[0;1;35mwarning: [0m[1mvariable 'rsp_len' set but not used [clang-diagnostic-unused-but-set-variable][0m
   41 |     uint32_t req_len, rsp_len; /* request and response length */[0m
      | [0;1;32m                      ^
[0m[1mnc_request.c:42:26: [0m[0;1;35mwarning: [0m[1mvariable 'req_type' set but not used [clang-diagnostic-unused-but-set-variable][0m
   42 |     const struct string *req_type; /* request type string */[0m
      | [0;1;32m                         ^
[0m[1mnc_request.c:43:26: [0m[0;1;35mwarning: [0m[1mvariable 'kpos' set but not used [clang-diagnostic-unused-but-set-variable][0m
   43 |     const struct keypos *kpos;[0m
      | [0;1;32m                         ^
[0m[1mnc_request.c:67:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'req_time' is never read [clang-analyzer-deadcode.DeadStores][0m
   67 |     req_time = nc_usec_now() - req->start_ts;[0m
      | [0;1;32m    ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:67:5: [0m[0;1;36mnote: [0mValue stored to 'req_time' is never read[0m
   67 |     req_time = nc_usec_now() - req->start_ts;[0m
      | [0;1;32m    ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:70:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'req_len' is never read [clang-analyzer-deadcode.DeadStores][0m
   70 |     req_len = req->mlen;[0m
      | [0;1;32m    ^         ~~~~~~~~~
[0m[1mnc_request.c:70:5: [0m[0;1;36mnote: [0mValue stored to 'req_len' is never read[0m
   70 |     req_len = req->mlen;[0m
      | [0;1;32m    ^         ~~~~~~~~~
[0m[1mnc_request.c:71:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'rsp_len' is never read [clang-analyzer-deadcode.DeadStores][0m
   71 |     rsp_len = (rsp != NULL) ? rsp->mlen : 0;[0m
      | [0;1;32m    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:71:5: [0m[0;1;36mnote: [0mValue stored to 'rsp_len' is never read[0m
   71 |     rsp_len = (rsp != NULL) ? rsp->mlen : 0;[0m
      | [0;1;32m    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:77:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'kpos' is never read [clang-analyzer-deadcode.DeadStores][0m
   77 |     kpos = array_get(req->keys, 0);[0m
      | [0;1;32m    ^      ~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:77:5: [0m[0;1;36mnote: [0mValue stored to 'kpos' is never read[0m
   77 |     kpos = array_get(req->keys, 0);[0m
      | [0;1;32m    ^      ~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:84:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'peer_str' is never read [clang-analyzer-deadcode.DeadStores][0m
   84 |     peer_str = nc_unresolve_peer_desc(req->owner->sd);[0m
      | [0;1;32m    ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:84:5: [0m[0;1;36mnote: [0mValue stored to 'peer_str' is never read[0m
   84 |     peer_str = nc_unresolve_peer_desc(req->owner->sd);[0m
      | [0;1;32m    ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:86:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'req_type' is never read [clang-analyzer-deadcode.DeadStores][0m
   86 |     req_type = msg_type_string(req->type);[0m
      | [0;1;32m    ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:86:5: [0m[0;1;36mnote: [0mValue stored to 'req_type' is never read[0m
   86 |     req_type = msg_type_string(req->type);[0m
      | [0;1;32m    ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_request.c:133:14: [0m[0;1;35mwarning: [0m[1mvariable 'nfragment' set but not used [clang-diagnostic-unused-but-set-variable][0m
  133 |     uint32_t nfragment;      /* # fragment */[0m
      | [0;1;32m             ^
[0m[1mnc_request.c:224:14: [0m[0;1;35mwarning: [0m[1mvariable 'nfragment' set but not used [clang-diagnostic-unused-but-set-variable][0m
  224 |     uint32_t nfragment;[0m
      | [0;1;32m             ^
[0m16 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[40/54][110.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpcg9vinc3.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/tests/run-dumper.c
[1mrun-dumper.c:24:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   24 |                 document_from->start_implicit, document_from->end_implicit))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m   25 |         return 0;[0m
      | [0;1;32m                 
[0m[1mrun-dumper.c:31:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   31 |                 if (!yaml_document_add_scalar(document_to, node->tag,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m   32 |                             node->data.scalar.value, node->data.scalar.length,[0m
   33 |                             node->data.scalar.style)) goto error;[0m
   34 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-dumper.c:33:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |                             node->data.scalar.style)) goto error;[0m
      | [0;1;32m                                                     ^           
[0m      | [0;32m                                                      {
[0m[1mrun-dumper.c:36:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   36 |                 if (!yaml_document_add_sequence(document_to, node->tag,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m   37 |                             node->data.sequence.style)) goto error;[0m
   38 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-dumper.c:37:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |                             node->data.sequence.style)) goto error;[0m
      | [0;1;32m                                                       ^           
[0m      | [0;32m                                                        {
[0m[1mrun-dumper.c:40:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   40 |                 if (!yaml_document_add_mapping(document_to, node->tag,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m   41 |                             node->data.mapping.style)) goto error;[0m
   42 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-dumper.c:41:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |                             node->data.mapping.style)) goto error;[0m
      | [0;1;32m                                                      ^           
[0m      | [0;32m                                                       {
[0m[1mrun-dumper.c:53:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   53 |                 for (item = node->data.sequence.items.start;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m   54 |                         item < node->data.sequence.items.top; item ++) {[0m
   55 |                     if (!yaml_document_append_sequence_item(document_to,[0m
   56 |                                 node - document_from->nodes.start + 1,[0m
   57 |                                 *item)) goto error;[0m
   58 |                 }[0m
   59 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-dumper.c:57:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |                                 *item)) goto error;[0m
      | [0;1;32m                                       ^           
[0m      | [0;32m                                        {
[0m[1mrun-dumper.c:61:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   61 |                 for (pair = node->data.mapping.pairs.start;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m   62 |                         pair < node->data.mapping.pairs.top; pair ++) {[0m
   63 |                     if (!yaml_document_append_mapping_pair(document_to,[0m
   64 |                                 node - document_from->nodes.start + 1,[0m
   65 |                                 pair->key, pair->value)) goto error;[0m
   66 |                 }[0m
   67 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mrun-dumper.c:65:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |                                 pair->key, pair->value)) goto error;[0m
      | [0;1;32m                                                        ^           
[0m      | [0;32m                                                         {
[0m[1mrun-dumper.c:69:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mrun-dumper.c:85:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |     if (level++ > 1000) return 0;[0m
      | [0;1;32m                       ^         
[0m      | [0;32m                        {
[0m[1mrun-dumper.c:92:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |     if (node1->type != node2->type)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   93 |         return 0;[0m
      | [0;1;32m                 
[0m[1mrun-dumper.c:95:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |     if (strcmp((char *)node1->tag, (char *)node2->tag) != 0) return 0;[0m
      | [0;1;32m                                                            ^         
[0m      | [0;32m                                                             {
[0m[1mrun-dumper.c:99:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   99 |             if (node1->data.scalar.length != node2->data.scalar.length)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  100 |                 return 0;[0m
  101 |             if (strncmp((char *)node1->data.scalar.value, (char *)node2->data.scalar.value,[0m
  102 |                         node1->data.scalar.length) != 0) return 0;[0m
  103 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mrun-dumper.c:99:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |             if (node1->data.scalar.length != node2->data.scalar.length)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  100 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-dumper.c:102:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |                         node1->data.scalar.length) != 0) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1mrun-dumper.c:105:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  105 |             if ((node1->data.sequence.items.top - node1->data.sequence.items.start) !=[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  106 |                     (node2->data.sequence.items.top - node2->data.sequence.items.start))[0m
  107 |                 return 0;[0m
  108 |             for (k = 0; k < (node1->data.sequence.items.top - node1->data.sequence.items.start); k ++) {[0m
  109 |                 if (!compare_nodes(document1, node1->data.sequence.items.start[k],[0m
  110 |                             document2, node2->data.sequence.items.start[k], level)) return 0;[0m
  111 |             }[0m
  112 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mrun-dumper.c:106:89: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |                     (node2->data.sequence.items.top - node2->data.sequence.items.start))[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m  107 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-dumper.c:110:84: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |                             document2, node2->data.sequence.items.start[k], level)) return 0;[0m
      | [0;1;32m                                                                                   ^         
[0m      | [0;32m                                                                                    {
[0m[1mrun-dumper.c:114:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  114 |             if ((node1->data.mapping.pairs.top - node1->data.mapping.pairs.start) !=[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  115 |                     (node2->data.mapping.pairs.top - node2->data.mapping.pairs.start))[0m
  116 |                 return 0;[0m
  117 |             for (k = 0; k < (node1->data.mapping.pairs.top - node1->data.mapping.pairs.start); k ++) {[0m
  118 |                 if (!compare_nodes(document1, node1->data.mapping.pairs.start[k].key,[0m
  119 |                             document2, node2->data.mapping.pairs.start[k].key, level)) return 0;[0m
  120 |                 if (!compare_nodes(document1, node1->data.mapping.pairs.start[k].value,[0m
  121 |                             document2, node2->data.mapping.pairs.start[k].value, level)) return 0;[0m
  122 |             }[0m
  123 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mrun-dumper.c:115:87: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |                     (node2->data.mapping.pairs.top - node2->data.mapping.pairs.start))[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m  116 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mrun-dumper.c:119:87: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |                             document2, node2->data.mapping.pairs.start[k].key, level)) return 0;[0m
      | [0;1;32m                                                                                      ^         
[0m      | [0;32m                                                                                       {
[0m[1mrun-dumper.c:121:89: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |                             document2, node2->data.mapping.pairs.start[k].value, level)) return 0;[0m
      | [0;1;32m                                                                                        ^         
[0m      | [0;32m                                                                                         {
[0m[1mrun-dumper.c:139:101: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |                     || document1->version_directive->minor != document2->version_directive->minor)))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m  140 |         return 0;[0m
      | [0;1;32m                 
[0m[1mrun-dumper.c:143:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |             (document2->tag_directives.end - document2->tag_directives.start))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  144 |         return 0;[0m
      | [0;1;32m                 
[0m[1mrun-dumper.c:149:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |                     (char *)document2->tag_directives.start[k].prefix) != 0))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  150 |             return 0;[0m
      | [0;1;32m                     
[0m[1mrun-dumper.c:154:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |             (document2->nodes.top - document2->nodes.start))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  155 |         return 0;[0m
      | [0;1;32m                 
[0m[1mrun-dumper.c:158:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |         if (!compare_nodes(document1, 1, document2, 1, 0))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  159 |             return 0;[0m
      | [0;1;32m                     
[0m[1mrun-dumper.c:179:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |         if (!data_size) break;[0m
      | [0;1;32m                       ^      
[0m      | [0;32m                        {
[0m[1mrun-dumper.c:182:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |         if (feof(file)) break;[0m
      | [0;1;32m                       ^      
[0m      | [0;32m                        {
[0m[1mrun-dumper.c:211:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  211 |                 memmove(argv+number, argv+number+1, (argc-number-1)*sizeof(char *));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrun-dumper.c:211:17: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  211 |                 memmove(argv+number, argv+number+1, (argc-number-1)*sizeof(char *));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrun-dumper.c:240:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  240 |         memset(buffer, 0, BUFFER_SIZE+1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mrun-dumper.c:240:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  240 |         memset(buffer, 0, BUFFER_SIZE+1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mrun-dumper.c:241:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  241 |         memset(documents, 0, MAX_DOCUMENTS*sizeof(yaml_document_t));[0m
      | [0;1;32m        ^~~~~~
[0m[1mrun-dumper.c:241:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  241 |         memset(documents, 0, MAX_DOCUMENTS*sizeof(yaml_document_t));[0m
      | [0;1;32m        ^~~~~~
[0m39 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[41/54][111.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpw3hnoadk.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_conf.c
[1mnc_conf.c:132:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  132 |     memset(&cs->info, 0, sizeof(cs->info));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_conf.c:132:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  132 |     memset(&cs->info, 0, sizeof(cs->info));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_conf.c:170:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |     nc_memcpy(&s->info, &cs->info, sizeof(cs->info));[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_conf.c:170:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  170 |     nc_memcpy(&s->info, &cs->info, sizeof(cs->info));[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_conf.c:194:21: [0m[0;1;35mwarning: [0m[1mDereference of null pointer [clang-analyzer-core.NullDereference][0m
  194 |     cp->listen.port = 0;[0m
      | [0;1;32m                    ^
[0m[1mnc_conf.c:1376:9: [0m[0;1;36mnote: [0m'cf' is not equal to NULL[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m        ^~
[0m[1mnc_conf.c:1376:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1381:14: [0m[0;1;36mnote: [0mCalling 'conf_pre_validate'[0m
 1381 |     status = conf_pre_validate(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1128:14: [0m[0;1;36mnote: [0mCalling 'conf_validate_document'[0m
 1128 |     status = conf_validate_document(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:820:14: [0m[0;1;36mnote: [0mCalling 'conf_yaml_init'[0m
  820 |     status = conf_yaml_init(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:383:9: [0m[0;1;36mnote: [0m'rv' is >= 0[0m
  383 |     if (rv < 0) {[0m
      | [0;1;32m        ^~
[0m[1mnc_conf.c:383:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  383 |     if (rv < 0) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:390:9: [0m[0;1;36mnote: [0mAssuming 'rv' is not equal to 0[0m
  390 |     if (!rv) {[0m
      | [0;1;32m        ^~~
[0m[1mnc_conf.c:390:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  390 |     if (!rv) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:820:14: [0m[0;1;36mnote: [0mReturning from 'conf_yaml_init'[0m
  820 |     status = conf_yaml_init(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:821:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  821 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:821:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  821 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:833:13: [0m[0;1;36mnote: [0mAssuming 'rv' is not equal to 0[0m
  833 |         if (!rv) {[0m
      | [0;1;32m            ^~~
[0m[1mnc_conf.c:833:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  833 |         if (!rv) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:841:13: [0m[0;1;36mnote: [0mAssuming 'node' is not equal to NULL[0m
  841 |         if (node == NULL) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnc_conf.c:841:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  841 |         if (node == NULL) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:827:5: [0m[0;1;36mnote: [0mLoop condition is true. Execution continues on line 828[0m
  827 |     do {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:833:13: [0m[0;1;36mnote: [0mAssuming 'rv' is not equal to 0[0m
  833 |         if (!rv) {[0m
      | [0;1;32m            ^~~
[0m[1mnc_conf.c:833:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  833 |         if (!rv) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:841:13: [0m[0;1;36mnote: [0mAssuming 'node' is equal to NULL[0m
  841 |         if (node == NULL) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnc_conf.c:841:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  841 |         if (node == NULL) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:827:5: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  827 |     do {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:850:5: [0m[0;1;36mnote: [0mCalling 'conf_yaml_deinit'[0m
  850 |     conf_yaml_deinit(cf);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:405:9: [0m[0;1;36mnote: [0mAssuming field 'valid_parser' is 0[0m
  405 |     if (cf->valid_parser) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:405:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  405 |     if (cf->valid_parser) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:409:1: [0m[0;1;36mnote: [0mReturning without writing to 'cf->event.type', which participates in a condition later[0m
  409 | }[0m
      | [0;1;32m^
[0m[1mnc_conf.c:409:1: [0m[0;1;36mnote: [0mReturning without writing to 'cf->seq', which participates in a condition later[0m
[1mnc_conf.c:850:5: [0m[0;1;36mnote: [0mReturning from 'conf_yaml_deinit'[0m
  850 |     conf_yaml_deinit(cf);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:852:9: [0m[0;1;36mnote: [0m'count' is equal to 1[0m
  852 |     if (count != 1) {[0m
      | [0;1;32m        ^~~~~
[0m[1mnc_conf.c:852:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  852 |     if (count != 1) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1128:14: [0m[0;1;36mnote: [0mReturning from 'conf_validate_document'[0m
 1128 |     status = conf_validate_document(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1129:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1129 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1129:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1129 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1134:9: [0m[0;1;36mnote: [0mAssuming 'status' is equal to NC_OK[0m
 1134 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1134:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1134 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1138:14: [0m[0;1;36mnote: [0mCalling 'conf_validate_structure'[0m
 1138 |     status = conf_validate_structure(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:990:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  990 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:990:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  990 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:998:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  998 |     for (i = 0; i < CONF_MAX_DEPTH + 1; i++) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:998:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mnc_conf.c:998:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mnc_conf.c:998:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1025[0m
[1mnc_conf.c:1026:13: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1026 |         if (status != NC_OK) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mnc_conf.c:1026:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1026 |         if (status != NC_OK) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:1034:9: [0m[0;1;36mnote: [0mControl jumps to 'case YAML_STREAM_END_EVENT:'  at line 1042[0m
 1034 |         switch (type) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:1044:13: [0m[0;1;36mnote: [0m Execution continues on line 1115[0m
 1044 |             break;[0m
      | [0;1;32m            ^
[0m[1mnc_conf.c:1116:15: [0m[0;1;36mnote: [0m'done' is true[0m
 1116 |     } while (!done && !error);[0m
      | [0;1;32m              ^~~~
[0m[1mnc_conf.c:1116:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1116 |     } while (!done && !error);[0m
      | [0;1;32m                   ^
[0m[1mnc_conf.c:1024:5: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1024 |     do {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1118:5: [0m[0;1;36mnote: [0mCalling 'conf_yaml_deinit'[0m
 1118 |     conf_yaml_deinit(cf);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:405:9: [0m[0;1;36mnote: [0mAssuming field 'valid_parser' is 0[0m
  405 |     if (cf->valid_parser) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:405:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  405 |     if (cf->valid_parser) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:409:1: [0m[0;1;36mnote: [0mReturning without writing to 'cf->event.type', which participates in a condition later[0m
  409 | }[0m
      | [0;1;32m^
[0m[1mnc_conf.c:409:1: [0m[0;1;36mnote: [0mReturning without writing to 'cf->seq', which participates in a condition later[0m
[1mnc_conf.c:1118:5: [0m[0;1;36mnote: [0mReturning from 'conf_yaml_deinit'[0m
 1118 |     conf_yaml_deinit(cf);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1120:13: [0m[0;1;36mnote: [0m'error' is false[0m
 1120 |     return !error ? NC_OK : NC_ERROR;[0m
      | [0;1;32m            ^~~~~
[0m[1mnc_conf.c:1120:12: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1120 |     return !error ? NC_OK : NC_ERROR;[0m
      | [0;1;32m           ^
[0m[1mnc_conf.c:1138:14: [0m[0;1;36mnote: [0mReturning from 'conf_validate_structure'[0m
 1138 |     status = conf_validate_structure(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1139:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1139 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1139:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1139 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1381:14: [0m[0;1;36mnote: [0mReturning from 'conf_pre_validate'[0m
 1381 |     status = conf_pre_validate(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1382:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1382:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1387:14: [0m[0;1;36mnote: [0mCalling 'conf_parse'[0m
 1387 |     status = conf_parse(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~
[0m[1mnc_conf.c:742:9: [0m[0;1;36mnote: [0mAssuming 'status' is equal to NC_OK[0m
  742 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1mnc_conf.c:742:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  742 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:746:34: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'data'[0m
  746 |     status = conf_parse_core(cf, NULL);[0m
      | [0;1;32m                                 ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/__stddef_null.h:26:14: [0m[0;1;36mnote: [0mexpanded from macro 'NULL'[0m
   26 | #define NULL ((void*)0)[0m
      | [0;1;32m             ^~~~~~~~~~
[0m[1mnc_conf.c:746:14: [0m[0;1;36mnote: [0mCalling 'conf_parse_core'[0m
  746 |     status = conf_parse_core(cf, NULL);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:638:14: [0m[0;1;36mnote: [0mCalling 'conf_event_next'[0m
  638 |     status = conf_event_next(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:446:10: [0m[0;1;36mnote: [0mValue assigned to field 'type', which participates in a condition later[0m
  446 |     rv = yaml_parser_parse(&cf->parser, &cf->event);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:447:9: [0m[0;1;36mnote: [0mAssuming 'rv' is not equal to 0[0m
  447 |     if (!rv) {[0m
      | [0;1;32m        ^~~
[0m[1mnc_conf.c:447:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  447 |     if (!rv) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:638:14: [0m[0;1;36mnote: [0mReturning from 'conf_event_next'[0m
  638 |     status = conf_event_next(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:639:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  639 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:639:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  639 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:650:5: [0m[0;1;36mnote: [0mControl jumps to 'case YAML_SCALAR_EVENT:'  at line 673[0m
  650 |     switch (cf->event.type) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:674:18: [0m[0;1;36mnote: [0mCalling 'conf_push_scalar'[0m
  674 |         status = conf_push_scalar(cf);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:475:9: [0m[0;1;36mnote: [0mAssuming 'scalar_len' is not equal to 0[0m
  475 |     if (scalar_len == 0) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1mnc_conf.c:475:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  475 |     if (scalar_len == 0) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:481:13: [0m[0;1;36mnote: [0mValue assigned to field 'seq', which participates in a condition later[0m
  481 |     value = array_push(&cf->arg);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:482:9: [0m[0;1;36mnote: [0mAssuming 'value' is not equal to NULL[0m
  482 |     if (value == NULL) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~
[0m[1mnc_conf.c:482:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  482 |     if (value == NULL) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:488:9: [0m[0;1;36mnote: [0mAssuming 'status' is equal to NC_OK[0m
  488 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1mnc_conf.c:488:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  488 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:674:18: [0m[0;1;36mnote: [0mReturning from 'conf_push_scalar'[0m
  674 |         status = conf_push_scalar(cf);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:675:13: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  675 |         if (status != NC_OK) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mnc_conf.c:675:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  675 |         if (status != NC_OK) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:680:13: [0m[0;1;36mnote: [0mAssuming field 'seq' is not equal to 0[0m
  680 |         if (cf->seq) {[0m
      | [0;1;32m            ^~~~~~~
[0m[1mnc_conf.c:680:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  680 |         if (cf->seq) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:697:9: [0m[0;1;36mnote: [0m Execution continues on line 704[0m
  697 |         break;[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:706:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  706 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:706:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  706 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:710:9: [0m[0;1;36mnote: [0m'done' is false[0m
  710 |     if (done) {[0m
      | [0;1;32m        ^~~~
[0m[1mnc_conf.c:710:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  710 |     if (done) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:715:9: [0m[0;1;36mnote: [0m'leaf' is true[0m
  715 |     if (leaf || new_pool) {[0m
      | [0;1;32m        ^~~~
[0m[1mnc_conf.c:715:14: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  715 |     if (leaf || new_pool) {[0m
      | [0;1;32m             ^
[0m[1mnc_conf.c:716:35: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'data'[0m
  716 |         status = conf_handler(cf, data);[0m
      | [0;1;32m                                  ^~~~
[0m[1mnc_conf.c:716:18: [0m[0;1;36mnote: [0mCalling 'conf_handler'[0m
  716 |         status = conf_handler(cf, data);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:513:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  513 |     if (array_n(&cf->arg) == 1) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:513:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  513 |     if (array_n(&cf->arg) == 1) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:516:31: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 'cp'[0m
  516 |         return conf_pool_init(data, value);[0m
      | [0;1;32m                              ^~~~
[0m[1mnc_conf.c:516:16: [0m[0;1;36mnote: [0mCalling 'conf_pool_init'[0m
  516 |         return conf_pool_init(data, value);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:194:21: [0m[0;1;36mnote: [0mDereference of null pointer[0m
  194 |     cp->listen.port = 0;[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~^~~
[0m[1mnc_conf.c:195:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  195 |     memset(&cp->listen.info, 0, sizeof(cp->listen.info));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_conf.c:195:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  195 |     memset(&cp->listen.info, 0, sizeof(cp->listen.info));[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_conf.c:198:16: [0m[0;1;35mwarning: [0m[1mThe value '-1' provided to the cast expression is not in the valid range of values for 'hash_type' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
  198 |     cp->hash = CONF_UNSET_HASH;[0m
      | [0;1;32m               ^
[0m[1m./nc_conf.h:41:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_HASH'[0m
   41 | #define CONF_UNSET_HASH (hash_type_t) -1[0m
      | [0;1;32m                        ^
[0m[1m./hashkit/nc_hashkit.h:44:14: [0m[0;1;36mnote: [0menum declared here[0m
   44 | typedef enum hash_type {[0m
      | [0;1;32m        ~~~~~^~~~~~~~~~~
[0m   45 |     HASH_CODEC( DEFINE_ACTION )[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   46 |     HASH_SENTINEL[0m
      | [0;1;32m    ~~~~~~~~~~~~~
[0m   47 | } hash_type_t;[0m
      | [0;1;32m~
[0m[1mnc_conf.c:1376:9: [0m[0;1;36mnote: [0m'cf' is not equal to NULL[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m        ^~
[0m[1mnc_conf.c:1376:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1382:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1382:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1387:14: [0m[0;1;36mnote: [0mCalling 'conf_parse'[0m
 1387 |     status = conf_parse(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~
[0m[1mnc_conf.c:742:9: [0m[0;1;36mnote: [0mAssuming 'status' is equal to NC_OK[0m
  742 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1mnc_conf.c:742:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  742 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:746:14: [0m[0;1;36mnote: [0mCalling 'conf_parse_core'[0m
  746 |     status = conf_parse_core(cf, NULL);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:639:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  639 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:639:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  639 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:650:5: [0m[0;1;36mnote: [0mControl jumps to 'case YAML_SCALAR_EVENT:'  at line 673[0m
  650 |     switch (cf->event.type) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:675:13: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  675 |         if (status != NC_OK) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mnc_conf.c:675:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  675 |         if (status != NC_OK) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:680:13: [0m[0;1;36mnote: [0mAssuming field 'seq' is 0[0m
  680 |         if (cf->seq) {[0m
      | [0;1;32m            ^~~~~~~
[0m[1mnc_conf.c:680:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  680 |         if (cf->seq) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:684:20: [0m[0;1;36mnote: [0mAssuming field 'depth' is equal to CONF_ROOT_DEPTH[0m
  684 |         } else if (cf->depth == CONF_ROOT_DEPTH) {[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:684:16: [0m[0;1;36mnote: [0mTaking true branch[0m
  684 |         } else if (cf->depth == CONF_ROOT_DEPTH) {[0m
      | [0;1;32m               ^
[0m[1mnc_conf.c:687:17: [0m[0;1;36mnote: [0mAssuming 'data' is not equal to NULL[0m
  687 |             if (data == NULL) {[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mnc_conf.c:687:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  687 |             if (data == NULL) {[0m
      | [0;1;32m            ^
[0m[1mnc_conf.c:697:9: [0m[0;1;36mnote: [0m Execution continues on line 704[0m
  697 |         break;[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:706:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  706 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:706:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  706 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:710:9: [0m[0;1;36mnote: [0m'done' is false[0m
  710 |     if (done) {[0m
      | [0;1;32m        ^~~~
[0m[1mnc_conf.c:710:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  710 |     if (done) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:715:9: [0m[0;1;36mnote: [0m'leaf' is false[0m
  715 |     if (leaf || new_pool) {[0m
      | [0;1;32m        ^~~~
[0m[1mnc_conf.c:715:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mnc_conf.c:715:17: [0m[0;1;36mnote: [0m'new_pool' is true[0m
  715 |     if (leaf || new_pool) {[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mnc_conf.c:715:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  715 |     if (leaf || new_pool) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:716:18: [0m[0;1;36mnote: [0mCalling 'conf_handler'[0m
  716 |         status = conf_handler(cf, data);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:513:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  513 |     if (array_n(&cf->arg) == 1) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:513:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  513 |     if (array_n(&cf->arg) == 1) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:516:16: [0m[0;1;36mnote: [0mCalling 'conf_pool_init'[0m
  516 |         return conf_pool_init(data, value);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:198:16: [0m[0;1;36mnote: [0mThe value '-1' provided to the cast expression is not in the valid range of values for 'hash_type'[0m
  198 |     cp->hash = CONF_UNSET_HASH;[0m
      | [0;1;32m               ^
[0m[1m./nc_conf.h:41:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_HASH'[0m
   41 | #define CONF_UNSET_HASH (hash_type_t) -1[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:200:24: [0m[0;1;35mwarning: [0m[1mThe value '-1' provided to the cast expression is not in the valid range of values for 'dist_type' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
  200 |     cp->distribution = CONF_UNSET_DIST;[0m
      | [0;1;32m                       ^
[0m[1m./nc_conf.h:42:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_DIST'[0m
   42 | #define CONF_UNSET_DIST (dist_type_t) -1[0m
      | [0;1;32m                        ^
[0m[1m./hashkit/nc_hashkit.h:51:14: [0m[0;1;36mnote: [0menum declared here[0m
   51 | typedef enum dist_type {[0m
      | [0;1;32m        ~~~~~^~~~~~~~~~~
[0m   52 |     DIST_CODEC( DEFINE_ACTION )[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   53 |     DIST_SENTINEL[0m
      | [0;1;32m    ~~~~~~~~~~~~~
[0m   54 | } dist_type_t;[0m
      | [0;1;32m~
[0m[1mnc_conf.c:1376:9: [0m[0;1;36mnote: [0m'cf' is not equal to NULL[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m        ^~
[0m[1mnc_conf.c:1376:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1382:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1382:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1387:14: [0m[0;1;36mnote: [0mCalling 'conf_parse'[0m
 1387 |     status = conf_parse(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~
[0m[1mnc_conf.c:742:9: [0m[0;1;36mnote: [0mAssuming 'status' is equal to NC_OK[0m
  742 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1mnc_conf.c:742:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  742 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:746:14: [0m[0;1;36mnote: [0mCalling 'conf_parse_core'[0m
  746 |     status = conf_parse_core(cf, NULL);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:639:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  639 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:639:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  639 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:650:5: [0m[0;1;36mnote: [0mControl jumps to 'case YAML_SCALAR_EVENT:'  at line 673[0m
  650 |     switch (cf->event.type) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:675:13: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  675 |         if (status != NC_OK) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mnc_conf.c:675:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  675 |         if (status != NC_OK) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:680:13: [0m[0;1;36mnote: [0mAssuming field 'seq' is 0[0m
  680 |         if (cf->seq) {[0m
      | [0;1;32m            ^~~~~~~
[0m[1mnc_conf.c:680:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  680 |         if (cf->seq) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:684:20: [0m[0;1;36mnote: [0mAssuming field 'depth' is equal to CONF_ROOT_DEPTH[0m
  684 |         } else if (cf->depth == CONF_ROOT_DEPTH) {[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:684:16: [0m[0;1;36mnote: [0mTaking true branch[0m
  684 |         } else if (cf->depth == CONF_ROOT_DEPTH) {[0m
      | [0;1;32m               ^
[0m[1mnc_conf.c:687:17: [0m[0;1;36mnote: [0mAssuming 'data' is not equal to NULL[0m
  687 |             if (data == NULL) {[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mnc_conf.c:687:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  687 |             if (data == NULL) {[0m
      | [0;1;32m            ^
[0m[1mnc_conf.c:697:9: [0m[0;1;36mnote: [0m Execution continues on line 704[0m
  697 |         break;[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:706:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  706 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:706:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  706 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:710:9: [0m[0;1;36mnote: [0m'done' is false[0m
  710 |     if (done) {[0m
      | [0;1;32m        ^~~~
[0m[1mnc_conf.c:710:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  710 |     if (done) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:715:9: [0m[0;1;36mnote: [0m'leaf' is false[0m
  715 |     if (leaf || new_pool) {[0m
      | [0;1;32m        ^~~~
[0m[1mnc_conf.c:715:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mnc_conf.c:715:17: [0m[0;1;36mnote: [0m'new_pool' is true[0m
  715 |     if (leaf || new_pool) {[0m
      | [0;1;32m                ^~~~~~~~
[0m[1mnc_conf.c:715:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  715 |     if (leaf || new_pool) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:716:18: [0m[0;1;36mnote: [0mCalling 'conf_handler'[0m
  716 |         status = conf_handler(cf, data);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:513:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  513 |     if (array_n(&cf->arg) == 1) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:513:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  513 |     if (array_n(&cf->arg) == 1) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:516:16: [0m[0;1;36mnote: [0mCalling 'conf_pool_init'[0m
  516 |         return conf_pool_init(data, value);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:200:24: [0m[0;1;36mnote: [0mThe value '-1' provided to the cast expression is not in the valid range of values for 'dist_type'[0m
  200 |     cp->distribution = CONF_UNSET_DIST;[0m
      | [0;1;32m                       ^
[0m[1m./nc_conf.h:42:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_DIST'[0m
   42 | #define CONF_UNSET_DIST (dist_type_t) -1[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:289:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  289 |     nc_memcpy(&sp->info, &cp->listen.info, sizeof(cp->listen.info));[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_conf.c:289:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  289 |     nc_memcpy(&sp->info, &cp->listen.info, sizeof(cp->listen.info));[0m
      | [0;1;32m    ^
[0m[1m./nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_conf.c:292:29: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'hash_type_t' (aka 'enum hash_type') to 'int' [clang-diagnostic-sign-conversion][0m
  292 |     sp->key_hash_type = cp->hash;[0m
      | [0;1;32m                      ~ ~~~~^~~~
[0m[1mnc_conf.c:294:25: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'dist_type_t' (aka 'enum dist_type') to 'int' [clang-diagnostic-sign-conversion][0m
  294 |     sp->dist_type = cp->distribution;[0m
      | [0;1;32m                  ~ ~~~~^~~~~~~~~~~~
[0m[1mnc_conf.c:331:20: [0m[0;1;35mwarning: [0m[1mvariable 's' set but not used [clang-diagnostic-unused-but-set-variable][0m
  331 |     struct string *s;[0m
      | [0;1;32m                   ^
[0m[1mnc_conf.c:369:13: [0m[0;1;35mwarning: [0m[1mValue stored to 's' is never read [clang-analyzer-deadcode.DeadStores][0m
  369 |             s = array_get(&cp->server, j);[0m
      | [0;1;32m            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:369:13: [0m[0;1;36mnote: [0mValue stored to 's' is never read[0m
  369 |             s = array_get(&cp->server, j);[0m
      | [0;1;32m            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:520:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'value' is never read [clang-analyzer-deadcode.DeadStores][0m
  520 |     value = array_get(&cf->arg, narg - 1);[0m
      | [0;1;32m    ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:520:5: [0m[0;1;36mnote: [0mValue stored to 'value' is never read[0m
  520 |     value = array_get(&cf->arg, narg - 1);[0m
      | [0;1;32m    ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:576:47: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  576 |             ASSERT(cf->depth < CONF_MAX_DEPTH);[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                              {
[0m  577 |             cf->depth++;[0m
  578 |             done = true;[0m
  579 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:582:26: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  582 |             NOT_REACHED();[0m
      | [0;1;32m                         ^
[0m      | [0;32m                         {;} 
[0m[1mnc_conf.c:612:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |             done = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  613 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:616:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  616 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mnc_conf.c:619:26: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  619 |             NOT_REACHED();[0m
      | [0;1;32m                         ^
[0m      | [0;32m                         {;} 
[0m[1mnc_conf.c:652:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  652 |         cf->depth--;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  653 |         if (cf->depth == 1) {[0m
  654 |             conf_pop_scalar(cf);[0m
  655 |         } else if (cf->depth == 0) {[0m
  656 |             done = true;[0m
  657 |         }[0m
  658 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_conf.c:661:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  661 |         cf->depth++;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  662 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_conf.c:665:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  665 |         cf->seq = 1;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  666 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_conf.c:669:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  669 |         conf_pop_scalar(cf);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  670 |         cf->seq = 0;[0m
  671 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_conf.c:674:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  674 |         status = conf_push_scalar(cf);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mnc_conf.c:700:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  700 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {
[0m  701 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_conf.c:880:26: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'yaml_token_type_t' (aka 'enum yaml_token_type_e') to 'int' [clang-diagnostic-sign-conversion][0m
  880 |         type = cf->token.type;[0m
      | [0;1;32m             ~ ~~~~~~~~~~^~~~
[0m[1mnc_conf.c:884:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  884 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  885 |             log_error("conf: no token (%d) is disallowed", type);[0m
  886 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:889:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  889 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  890 |             log_error("conf: version directive token (%d) is disallowed", type);[0m
  891 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:894:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  894 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  895 |             log_error("conf: tag directive token (%d) is disallowed", type);[0m
  896 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:899:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  899 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  900 |             log_error("conf: document start token (%d) is disallowed", type);[0m
  901 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:904:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  904 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  905 |             log_error("conf: document end token (%d) is disallowed", type);[0m
  906 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:909:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  909 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  910 |             log_error("conf: flow sequence start token (%d) is disallowed", type);[0m
  911 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:914:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  914 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  915 |             log_error("conf: flow sequence end token (%d) is disallowed", type);[0m
  916 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:919:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  919 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  920 |             log_error("conf: flow mapping start token (%d) is disallowed", type);[0m
  921 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:924:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  924 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  925 |             log_error("conf: flow mapping end token (%d) is disallowed", type);[0m
  926 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:929:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  929 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  930 |             log_error("conf: flow entry token (%d) is disallowed", type);[0m
  931 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:934:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  934 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  935 |             log_error("conf: alias token (%d) is disallowed", type);[0m
  936 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:939:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  939 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  940 |             log_error("conf: anchor token (%d) is disallowed", type);[0m
  941 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:944:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  944 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  945 |             log_error("conf: tag token (%d) is disallowed", type);[0m
  946 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:960:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  960 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mnc_conf.c:963:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  963 |             done = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  964 |             log_debug(LOG_VVERB, "conf '%s' has valid tokens", cf->fname);[0m
  965 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:968:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  968 |             error = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  969 |             log_error("conf: unknown token (%d) is disallowed", type);[0m
  970 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1030:26: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'yaml_event_type_t' (aka 'enum yaml_event_type_e') to 'int' [clang-diagnostic-sign-conversion][0m
 1030 |         type = cf->event.type;[0m
      | [0;1;32m             ~ ~~~~~~~~~~^~~~
[0m[1mnc_conf.c:1040:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1040 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mnc_conf.c:1043:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1043 |             done = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1044 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1047:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1047 |             if (depth == CONF_ROOT_DEPTH && count[depth] != 1) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1048 |                 error = true;[0m
 1049 |                 log_error("conf: '%s' has more than one \"key:value\" at depth"[0m
 1050 |                           " %d", cf->fname, depth);[0m
 1051 |             } else if (depth >= CONF_MAX_DEPTH) {[0m
 1052 |                 error = true;[0m
 1053 |                 log_error("conf: '%s' has a depth greater than %d", cf->fname,[0m
 1054 |                           CONF_MAX_DEPTH);[0m
 1055 |             }[0m
 1056 |             depth++;[0m
 1057 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1060:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1060 |             if (depth == CONF_MAX_DEPTH) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1061 |                 if (seq) {[0m
 1062 |                     seq = false;[0m
 1063 |                 } else {[0m
 1064 |                     error = true;[0m
 1065 |                     log_error("conf: '%s' missing sequence directive at depth "[0m
 1066 |                               "%d", cf->fname, depth);[0m
 1067 |                 }[0m
 1068 |             }[0m
 1069 |             depth--;[0m
 1070 |             count[depth] = 0;[0m
 1071 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1070:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding 'count' [clang-analyzer-security.ArrayBound][0m
 1070 |             count[depth] = 0;[0m
      | [0;1;32m            ^
[0m[1mnc_conf.c:1376:9: [0m[0;1;36mnote: [0m'cf' is not equal to NULL[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m        ^~
[0m[1mnc_conf.c:1376:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1381:14: [0m[0;1;36mnote: [0mCalling 'conf_pre_validate'[0m
 1381 |     status = conf_pre_validate(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1129:9: [0m[0;1;36mnote: [0mAssuming 'status' is equal to NC_OK[0m
 1129 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1129:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1129 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1134:9: [0m[0;1;36mnote: [0mAssuming 'status' is equal to NC_OK[0m
 1134 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1134:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1134 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1138:14: [0m[0;1;36mnote: [0mCalling 'conf_validate_structure'[0m
 1138 |     status = conf_validate_structure(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:990:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
  990 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:990:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  990 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:998:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  998 |     for (i = 0; i < CONF_MAX_DEPTH + 1; i++) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:998:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mnc_conf.c:998:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mnc_conf.c:998:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1025[0m
[1mnc_conf.c:1026:13: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1026 |         if (status != NC_OK) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mnc_conf.c:1026:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1026 |         if (status != NC_OK) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:1034:9: [0m[0;1;36mnote: [0mControl jumps to 'case YAML_MAPPING_END_EVENT:'  at line 1059[0m
 1034 |         switch (type) {[0m
      | [0;1;32m        ^
[0m[1mnc_conf.c:1060:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1060 |             if (depth == CONF_MAX_DEPTH) {[0m
      | [0;1;32m            ^
[0m[1mnc_conf.c:1070:13: [0m[0;1;36mnote: [0mAccess of 'count' at negative byte offset -4[0m
 1070 |             count[depth] = 0;[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mnc_conf.c:1074:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1074 |             if (seq) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1075 |                 error = true;[0m
 1076 |                 log_error("conf: '%s' has more than one sequence directive",[0m
 1077 |                           cf->fname);[0m
 1078 |             } else if (depth != CONF_MAX_DEPTH) {[0m
 1079 |                 error = true;[0m
 1080 |                 log_error("conf: '%s' has sequence at depth %d instead of %d",[0m
 1081 |                           cf->fname, depth, CONF_MAX_DEPTH);[0m
 1082 |             } else if (count[depth] != 1) {[0m
 1083 |                 error = true;[0m
 1084 |                 log_error("conf: '%s' has invalid \"key:value\" at depth %d",[0m
 1085 |                           cf->fname, depth);[0m
 1086 |             }[0m
 1087 |             seq = true;[0m
 1088 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1091:44: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1091 |             ASSERT(depth == CONF_MAX_DEPTH);[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                           {
[0m 1092 |             count[depth] = 0;[0m
 1093 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1096:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1096 |             if (depth == 0) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1097 |                 error = true;[0m
 1098 |                 log_error("conf: '%s' has invalid empty \"key:\" at depth %d",[0m
 1099 |                           cf->fname, depth);[0m
 1100 |             } else if (depth == CONF_ROOT_DEPTH && count[depth] != 0) {[0m
 1101 |                 error = true;[0m
 1102 |                 log_error("conf: '%s' has invalid mapping \"key:\" at depth %d",[0m
 1103 |                           cf->fname, depth);[0m
 1104 |             } else if (depth == CONF_MAX_DEPTH && count[depth] == 2) {[0m
 1105 |                 /* found a "key: value", resetting! */[0m
 1106 |                 count[depth] = 0;[0m
 1107 |             }[0m
 1108 |             count[depth]++;[0m
 1109 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1112:26: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1112 |             NOT_REACHED();[0m
      | [0;1;32m                         ^
[0m      | [0;32m                         {;} 
[0m[1mnc_conf.c:1228:29: [0m[0;1;35mwarning: [0m[1mThe value '-1' provided to the cast expression is not in the valid range of values for 'dist_type' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
 1228 |     if (cp->distribution == CONF_UNSET_DIST) {[0m
      | [0;1;32m                            ^
[0m[1m./nc_conf.h:42:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_DIST'[0m
   42 | #define CONF_UNSET_DIST (dist_type_t) -1[0m
      | [0;1;32m                        ^
[0m[1m./hashkit/nc_hashkit.h:51:14: [0m[0;1;36mnote: [0menum declared here[0m
   51 | typedef enum dist_type {[0m
      | [0;1;32m        ~~~~~^~~~~~~~~~~
[0m   52 |     DIST_CODEC( DEFINE_ACTION )[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   53 |     DIST_SENTINEL[0m
      | [0;1;32m    ~~~~~~~~~~~~~
[0m   54 | } dist_type_t;[0m
      | [0;1;32m~
[0m[1mnc_conf.c:1376:9: [0m[0;1;36mnote: [0m'cf' is not equal to NULL[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m        ^~
[0m[1mnc_conf.c:1376:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1382:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1382:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1388:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1388 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1388:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1388 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1393:14: [0m[0;1;36mnote: [0mCalling 'conf_post_validate'[0m
 1393 |     status = conf_post_validate(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1311:9: [0m[0;1;36mnote: [0mAssuming 'npool' is not equal to 0[0m
 1311 |     if (npool == 0) {[0m
      | [0;1;32m        ^~~~~~~~~~
[0m[1mnc_conf.c:1311:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1311 |     if (npool == 0) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1317:17: [0m[0;1;36mnote: [0m'i' is < 'npool'[0m
 1317 |     for (i = 0; i < npool; i++) {[0m
      | [0;1;32m                ^
[0m[1mnc_conf.c:1317:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1317 |     for (i = 0; i < npool; i++) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1320:18: [0m[0;1;36mnote: [0mCalling 'conf_validate_pool'[0m
 1320 |         status = conf_validate_pool(cf, cp);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1221:9: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1221 |     if (!cp->listen.valid) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1221:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1221 |     if (!cp->listen.valid) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1228:29: [0m[0;1;36mnote: [0mThe value '-1' provided to the cast expression is not in the valid range of values for 'dist_type'[0m
 1228 |     if (cp->distribution == CONF_UNSET_DIST) {[0m
      | [0;1;32m                            ^
[0m[1m./nc_conf.h:42:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_DIST'[0m
   42 | #define CONF_UNSET_DIST (dist_type_t) -1[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1232:21: [0m[0;1;35mwarning: [0m[1mThe value '-1' provided to the cast expression is not in the valid range of values for 'hash_type' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
 1232 |     if (cp->hash == CONF_UNSET_HASH) {[0m
      | [0;1;32m                    ^
[0m[1m./nc_conf.h:41:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_HASH'[0m
   41 | #define CONF_UNSET_HASH (hash_type_t) -1[0m
      | [0;1;32m                        ^
[0m[1m./hashkit/nc_hashkit.h:44:14: [0m[0;1;36mnote: [0menum declared here[0m
   44 | typedef enum hash_type {[0m
      | [0;1;32m        ~~~~~^~~~~~~~~~~
[0m   45 |     HASH_CODEC( DEFINE_ACTION )[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   46 |     HASH_SENTINEL[0m
      | [0;1;32m    ~~~~~~~~~~~~~
[0m   47 | } hash_type_t;[0m
      | [0;1;32m~
[0m[1mnc_conf.c:1376:9: [0m[0;1;36mnote: [0m'cf' is not equal to NULL[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m        ^~
[0m[1mnc_conf.c:1376:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1376 |     if (cf == NULL) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1382:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1382:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1382 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1388:9: [0m[0;1;36mnote: [0m'status' is equal to NC_OK[0m
 1388 |     if (status != NC_OK) {[0m
      | [0;1;32m        ^~~~~~
[0m[1mnc_conf.c:1388:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1388 |     if (status != NC_OK) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1393:14: [0m[0;1;36mnote: [0mCalling 'conf_post_validate'[0m
 1393 |     status = conf_post_validate(cf);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1311:9: [0m[0;1;36mnote: [0mAssuming 'npool' is not equal to 0[0m
 1311 |     if (npool == 0) {[0m
      | [0;1;32m        ^~~~~~~~~~
[0m[1mnc_conf.c:1311:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1311 |     if (npool == 0) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1317:17: [0m[0;1;36mnote: [0m'i' is < 'npool'[0m
 1317 |     for (i = 0; i < npool; i++) {[0m
      | [0;1;32m                ^
[0m[1mnc_conf.c:1317:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1317 |     for (i = 0; i < npool; i++) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1320:18: [0m[0;1;36mnote: [0mCalling 'conf_validate_pool'[0m
 1320 |         status = conf_validate_pool(cf, cp);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1221:9: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1221 |     if (!cp->listen.valid) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1221:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1221 |     if (!cp->listen.valid) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1228:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1228 |     if (cp->distribution == CONF_UNSET_DIST) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1228:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1228 |     if (cp->distribution == CONF_UNSET_DIST) {[0m
      | [0;1;32m    ^
[0m[1mnc_conf.c:1232:21: [0m[0;1;36mnote: [0mThe value '-1' provided to the cast expression is not in the valid range of values for 'hash_type'[0m
 1232 |     if (cp->hash == CONF_UNSET_HASH) {[0m
      | [0;1;32m                    ^
[0m[1m./nc_conf.h:41:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_HASH'[0m
   41 | #define CONF_UNSET_HASH (hash_type_t) -1[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1572:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'addrlen' is never read [clang-analyzer-deadcode.DeadStores][0m
 1572 |     addrlen = 0;[0m
      | [0;1;32m    ^         ~
[0m[1mnc_conf.c:1572:5: [0m[0;1;36mnote: [0mValue stored to 'addrlen' is never read[0m
 1572 |     addrlen = 0;[0m
      | [0;1;32m    ^         ~
[0m[1mnc_conf.c:1597:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1597 |             name = q + 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1598 |             namelen = (uint32_t)(p - name + 1);[0m
 1599 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1602:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1602 |             weight = q + 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1603 |             weightlen = (uint32_t)(p - weight + 1);[0m
 1604 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1607:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1607 |             port = q + 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1608 |             portlen = (uint32_t)(p - port + 1);[0m
 1609 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_conf.c:1612:26: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1612 |             NOT_REACHED();[0m
      | [0;1;32m                         ^
[0m      | [0;32m                         {;} 
[0m[1mnc_conf.c:1747:16: [0m[0;1;35mwarning: [0m[1mThe value '-1' provided to the cast expression is not in the valid range of values for 'hash_type' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
 1747 |     if (*hp != CONF_UNSET_HASH) {[0m
      | [0;1;32m               ^
[0m[1m./nc_conf.h:41:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_HASH'[0m
   41 | #define CONF_UNSET_HASH (hash_type_t) -1[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m[1m./hashkit/nc_hashkit.h:44:14: [0m[0;1;36mnote: [0menum declared here[0m
   44 | typedef enum hash_type {[0m
      | [0;1;32m        ~~~~~^~~~~~~~~~~
[0m   45 |     HASH_CODEC( DEFINE_ACTION )[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   46 |     HASH_SENTINEL[0m
      | [0;1;32m    ~~~~~~~~~~~~~
[0m   47 | } hash_type_t;[0m
      | [0;1;32m~
[0m[1mnc_conf.c:1747:16: [0m[0;1;36mnote: [0mThe value '-1' provided to the cast expression is not in the valid range of values for 'hash_type'[0m
 1747 |     if (*hp != CONF_UNSET_HASH) {[0m
      | [0;1;32m               ^
[0m[1m./nc_conf.h:41:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_HASH'[0m
   41 | #define CONF_UNSET_HASH (hash_type_t) -1[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m[1mnc_conf.c:1776:16: [0m[0;1;35mwarning: [0m[1mThe value '-1' provided to the cast expression is not in the valid range of values for 'dist_type' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
 1776 |     if (*dp != CONF_UNSET_DIST) {[0m
      | [0;1;32m               ^
[0m[1m./nc_conf.h:42:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_DIST'[0m
   42 | #define CONF_UNSET_DIST (dist_type_t) -1[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m[1m./hashkit/nc_hashkit.h:51:14: [0m[0;1;36mnote: [0menum declared here[0m
   51 | typedef enum dist_type {[0m
      | [0;1;32m        ~~~~~^~~~~~~~~~~
[0m   52 |     DIST_CODEC( DEFINE_ACTION )[0m
      | [0;1;32m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   53 |     DIST_SENTINEL[0m
      | [0;1;32m    ~~~~~~~~~~~~~
[0m   54 | } dist_type_t;[0m
      | [0;1;32m~
[0m[1mnc_conf.c:1776:16: [0m[0;1;36mnote: [0mThe value '-1' provided to the cast expression is not in the valid range of values for 'dist_type'[0m
 1776 |     if (*dp != CONF_UNSET_DIST) {[0m
      | [0;1;32m               ^
[0m[1m./nc_conf.h:42:25: [0m[0;1;36mnote: [0mexpanded from macro 'CONF_UNSET_DIST'[0m
   42 | #define CONF_UNSET_DIST (dist_type_t) -1[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~
[0m63 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[42/54][111.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp1pj3edru.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_server.c
[1mnc_server.c:178:24: [0m[0;1;35mwarning: [0m[1mvariable 's' set but not used [clang-diagnostic-unused-but-set-variable][0m
  178 |         struct server *s;[0m
      | [0;1;32m                       ^
[0m[1mnc_server.c:180:9: [0m[0;1;35mwarning: [0m[1mValue stored to 's' is never read [clang-analyzer-deadcode.DeadStores][0m
  180 |         s = array_pop(server);[0m
      | [0;1;32m        ^   ~~~~~~~~~~~~~~~~~
[0m[1mnc_server.c:180:9: [0m[0;1;36mnote: [0mValue stored to 's' is never read[0m
  180 |         s = array_pop(server);[0m
      | [0;1;32m        ^   ~~~~~~~~~~~~~~~~~
[0m[1mnc_server.c:327:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  327 |         stats_server_incr(ctx, server, server_timedout);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  328 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1m./nc_stats.h:155:49: [0m[0;1;36mnote: [0mexpanded from macro 'stats_server_incr'[0m
  155 | #define stats_server_incr(_ctx, _server, _name) do {                    \[0m
      | [0;1;32m                                                ^
[0m[1mnc_server.c:340:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  340 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_server.c:589:14: [0m[0;1;35mwarning: [0m[1mvariable 'pnlive_server' set but not used [clang-diagnostic-unused-but-set-variable][0m
  589 |     uint32_t pnlive_server; /* prev # live server */[0m
      | [0;1;32m             ^
[0m[1mnc_server.c:612:5: [0m[0;1;35mwarning: [0m[1mValue stored to 'pnlive_server' is never read [clang-analyzer-deadcode.DeadStores][0m
  612 |     pnlive_server = pool->nlive_server;[0m
      | [0;1;32m    ^               ~~~~~~~~~~~~~~~~~~
[0m[1mnc_server.c:612:5: [0m[0;1;36mnote: [0mValue stored to 'pnlive_server' is never read[0m
  612 |     pnlive_server = pool->nlive_server;[0m
      | [0;1;32m    ^               ~~~~~~~~~~~~~~~~~~
[0m[1mnc_server.c:681:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  681 |         hash = server_pool_hash(pool, key, keylen);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  682 |         idx = ketama_dispatch(pool->continuum, pool->ncontinuum, hash);[0m
  683 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_server.c:686:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  686 |         hash = server_pool_hash(pool, key, keylen);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  687 |         idx = modula_dispatch(pool->continuum, pool->ncontinuum, hash);[0m
  688 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_server.c:691:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  691 |         idx = random_dispatch(pool->continuum, pool->ncontinuum, 0);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  692 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_server.c:695:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  695 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {
[0m  696 |         return 0;[0m
      | [0;1;32m                
[0m      | [0;32m                ;} 
[0m[1mnc_server.c:832:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  832 |         return ketama_update(pool);[0m
      | [0;1;32m        ^                         
[0m      | [0;32m        {                         ;} 
[0m[1mnc_server.c:835:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  835 |         return modula_update(pool);[0m
      | [0;1;32m        ^                         
[0m      | [0;32m        {                         ;} 
[0m[1mnc_server.c:838:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  838 |         return random_update(pool);[0m
      | [0;1;32m        ^                         
[0m      | [0;32m        {                         ;} 
[0m[1mnc_server.c:841:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  841 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {
[0m  842 |         return NC_ERROR;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m18 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[43/54][138.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpfzvnf98y.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/src/reader.c
[1mreader.c:101:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |             && parser->raw_buffer.last == parser->raw_buffer.end)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  102 |         return 1;[0m
      | [0;1;32m                 
[0m[1mreader.c:106:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |     if (parser->eof) return 1;[0m
      | [0;1;32m                    ^         
[0m      | [0;32m                     {
[0m[1mreader.c:112:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  112 |         memmove(parser->raw_buffer.start, parser->raw_buffer.pointer,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mreader.c:112:9: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  112 |         memmove(parser->raw_buffer.start, parser->raw_buffer.pointer,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mreader.c:150:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |     if (parser->eof && parser->raw_buffer.pointer == parser->raw_buffer.last)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  151 |         return 1;[0m
      | [0;1;32m                 
[0m[1mreader.c:155:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |     if (parser->unread >= length)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  156 |         return 1;[0m
      | [0;1;32m                 
[0m[1mreader.c:161:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |         if (!yaml_parser_determine_encoding(parser))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  162 |             return 0;[0m
      | [0;1;32m                     
[0m[1mreader.c:170:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |         memmove(parser->buffer.start, parser->buffer.pointer, size);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mreader.c:170:9: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  170 |         memmove(parser->buffer.start, parser->buffer.pointer, size);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mreader.c:186:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |             if (!yaml_parser_update_raw_buffer(parser)) return 0;[0m
      | [0;1;32m                                                       ^         
[0m      | [0;32m                                                        {
[0m[1mreader.c:230:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  230 |                     octet = parser->raw_buffer.pointer[0];[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m[1mreader.c:238:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |                     if (!width)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  239 |                         return yaml_parser_set_reader_error(parser,[0m
  240 |                                 "invalid leading UTF-8 octet",[0m
  241 |                                 parser->offset, octet);[0m
      | [0;1;32m                                                       
[0m[1mreader.c:270:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |                         if ((octet & 0xC0) != 0x80)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  271 |                             return yaml_parser_set_reader_error(parser,[0m
  272 |                                     "invalid trailing UTF-8 octet",[0m
  273 |                                     parser->offset+k, octet);[0m
      | [0;1;32m                                                             
[0m[1mreader.c:285:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |                             (width == 4 && value >= 0x10000)))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  286 |                         return yaml_parser_set_reader_error(parser,[0m
  287 |                                 "invalid length of a UTF-8 sequence",[0m
  288 |                                 parser->offset, -1);[0m
      | [0;1;32m                                                    
[0m[1mreader.c:292:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |                     if ((value >= 0xD800 && value <= 0xDFFF) || value > 0x10FFFF)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  293 |                         return yaml_parser_set_reader_error(parser,[0m
  294 |                                 "invalid Unicode character",[0m
  295 |                                 parser->offset, value);[0m
      | [0;1;32m                                                       
[0m[1mreader.c:303:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  303 |                     high = (parser->encoding == YAML_UTF16LE_ENCODING ? 1 : 0);[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m[1mreader.c:350:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |                     if ((value & 0xFC00) == 0xDC00)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  351 |                         return yaml_parser_set_reader_error(parser,[0m
  352 |                                 "unexpected low surrogate area",[0m
  353 |                                 parser->offset, value);[0m
      | [0;1;32m                                                       
[0m[1mreader.c:380:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |                         if ((value2 & 0xFC00) != 0xDC00)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  381 |                             return yaml_parser_set_reader_error(parser,[0m
  382 |                                     "expected low surrogate area",[0m
  383 |                                     parser->offset+2, value2);[0m
      | [0;1;32m                                                              
[0m[1mreader.c:402:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |             if (incomplete) break;[0m
      | [0;1;32m                           ^      
[0m      | [0;32m                            {
[0m[1mreader.c:415:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  415 |                         || (value >= 0x10000 && value <= 0x10FFFF)))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  416 |                 return yaml_parser_set_reader_error(parser,[0m
  417 |                         "control characters are not allowed",[0m
  418 |                         parser->offset, value);[0m
      | [0;1;32m                                               
[0m21 warnings generated.
42 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[44/54][138.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpns9chvli.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/proto/nc_memcache.c
[1mnc_memcache.c:52:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   52 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_memcache.c:85:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   85 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_memcache.c:116:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  116 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_memcache.c:135:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  135 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_memcache.c:220:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  220 |             if (ch == ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  221 |                 break;[0m
  222 |             }[0m
  223 | [0m
  224 |             if (!islower(ch)) {[0m
  225 |                 goto error;[0m
  226 |             }[0m
  227 | [0m
  228 |             /* req_start <- p; type_start <- p */[0m
  229 |             r->token = p;[0m
  230 |             state = SW_REQ_TYPE;[0m
  231 | [0m
  232 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:235:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  235 |             if (ch == ' ' || ch == CR) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:245:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  245 |                     if (str4cmp(m, 'g', 'e', 't', ' ')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m[1mnc_memcache.c:268:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  268 |                     if (str4cmp(m, 'g', 'e', 't', 's')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m[1mnc_memcache.c:292:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  292 |                     if (str5cmp(m, 't', 'o', 'u', 'c', 'h')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  293 |                       r->type = MSG_REQ_MC_TOUCH;[0m
  294 |                       break;[0m
  295 |                     }[0m
  296 | [0m
  297 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:300:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  300 |                     if (str6cmp(m, 'a', 'p', 'p', 'e', 'n', 'd')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  301 |                         r->type = MSG_REQ_MC_APPEND;[0m
  302 |                         break;[0m
  303 |                     }[0m
  304 | [0m
  305 |                     if (str6cmp(m, 'd', 'e', 'l', 'e', 't', 'e')) {[0m
  306 |                         r->type = MSG_REQ_MC_DELETE;[0m
  307 |                         break;[0m
  308 |                     }[0m
  309 | [0m
  310 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:313:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  313 |                     if (str7cmp(m, 'p', 'r', 'e', 'p', 'e', 'n', 'd')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m[1mnc_memcache.c:350:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  350 |                     state = SW_SPACES_BEFORE_KEY;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  351 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:356:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  356 |                     state = SW_CRLF;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  357 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:360:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  360 |                     goto error;[0m
      | [0;1;32m                    ^         
[0m      | [0;32m                    {         ;} 
[0m[1mnc_memcache.c:363:34: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  363 |                     NOT_REACHED();[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                 {;} 
[0m[1mnc_memcache.c:373:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  373 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  374 |                 p = p - 1; /* go back by 1 byte */[0m
  375 |                 r->token = NULL;[0m
  376 |                 state = SW_KEY;[0m
  377 |             }[0m
  378 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:381:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  381 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:432:42: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  432 |             ASSERT(memcache_retrieval(r));[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                         {
[0m  433 |             switch (ch) {[0m
  434 |             case ' ':[0m
  435 |                 break;[0m
  436 | [0m
  437 |             case CR:[0m
  438 |                 state = SW_ALMOST_DONE;[0m
  439 |                 break;[0m
  440 | [0m
  441 |             default:[0m
  442 |                 r->token = NULL;[0m
  443 |                 p = p - 1; /* go back by 1 byte */[0m
  444 |                 state = SW_KEY;[0m
  445 |             }[0m
  446 | [0m
  447 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:435:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  435 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc_memcache.c:438:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  438 |                 state = SW_ALMOST_DONE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  439 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:442:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  442 |                 r->token = NULL;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  443 |                 p = p - 1; /* go back by 1 byte */[0m
  444 |                 state = SW_KEY;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnc_memcache.c:450:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  450 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  451 |                 if (!isdigit(ch)) {[0m
  452 |                     goto error;[0m
  453 |                 }[0m
  454 |                 /* flags_start <- p; flags <- ch - '0' */[0m
  455 |                 r->token = p;[0m
  456 |                 state = SW_FLAGS;[0m
  457 |             }[0m
  458 | [0m
  459 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:462:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  462 |             if (isdigit(ch)) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  463 |                 /* flags <- flags * 10 + (ch - '0') */[0m
  464 |                 ;[0m
  465 |             } else if (ch == ' ') {[0m
  466 |                 /* flags_end <- p - 1 */[0m
  467 |                 r->token = NULL;[0m
  468 |                 state = SW_SPACES_BEFORE_EXPIRY;[0m
  469 |             } else {[0m
  470 |                 goto error;[0m
  471 |             }[0m
  472 | [0m
  473 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:476:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  476 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  477 |                 if (!isdigit(ch)) {[0m
  478 |                     goto error;[0m
  479 |                 }[0m
  480 |                 /* expiry_start <- p; expiry <- ch - '0' */[0m
  481 |                 r->token = p;[0m
  482 |                 state = SW_EXPIRY;[0m
  483 |             }[0m
  484 | [0m
  485 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:488:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |             if (isdigit(ch)) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  489 |                 /* expiry <- expiry * 10 + (ch - '0') */[0m
  490 |                 ;[0m
  491 |             } else if (ch == ' ') {[0m
  492 |                 /* expiry_end <- p - 1 */[0m
  493 |                 r->token = NULL;[0m
  494 |                 state = SW_SPACES_BEFORE_VLEN;[0m
  495 |             } else {[0m
  496 |                 goto error;[0m
  497 |             }[0m
  498 | [0m
  499 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:502:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  502 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  503 |                 if (!isdigit(ch)) {[0m
  504 |                     goto error;[0m
  505 |                 }[0m
  506 |                 /* vlen_start <- p */[0m
  507 |                 r->vlen = (uint32_t)(ch - '0');[0m
  508 |                 state = SW_VLEN;[0m
  509 |             }[0m
  510 | [0m
  511 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:514:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  514 |             if (isdigit(ch)) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:536:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  536 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  537 |                 if (!isdigit(ch)) {[0m
  538 |                     goto error;[0m
  539 |                 }[0m
  540 |                 /* cas_start <- p; cas <- ch - '0' */[0m
  541 |                 r->token = p;[0m
  542 |                 state = SW_CAS;[0m
  543 |             }[0m
  544 | [0m
  545 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:548:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  548 |             if (isdigit(ch)) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  549 |                 /* cas <- cas * 10 + (ch - '0') */[0m
  550 |                 ;[0m
  551 |             } else if (ch == ' ' || ch == CR) {[0m
  552 |                 /* cas_end <- p - 1 */[0m
  553 |                 p = p - 1; /* go back by 1 byte */[0m
  554 |                 r->token = NULL;[0m
  555 |                 state = SW_RUNTO_CRLF;[0m
  556 |             } else {[0m
  557 |                 goto error;[0m
  558 |             }[0m
  559 | [0m
  560 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:564:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  564 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  565 |             case LF:[0m
  566 |                 /* val_start <- p + 1 */[0m
  567 |                 state = SW_VAL;[0m
  568 |                 break;[0m
  569 | [0m
  570 |             default:[0m
  571 |                 goto error;[0m
  572 |             }[0m
  573 | [0m
  574 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:567:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  567 |                 state = SW_VAL;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  568 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:571:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  571 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:577:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  577 |             m = p + r->vlen;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:588:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  588 |                 p = m; /* move forward by vlen bytes */[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  589 |                 state = SW_ALMOST_DONE;[0m
  590 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:593:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  593 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:599:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  599 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  600 |                 if (!(isdigit(ch) || ch == '-')) {[0m
  601 |                     goto error;[0m
  602 |                 }[0m
  603 |                 /* num_start <- p; num <- ch - '0'  */[0m
  604 |                 r->token = p;[0m
  605 |                 state = SW_NUM;[0m
  606 |             }[0m
  607 | [0m
  608 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:611:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  611 |             if (isdigit(ch)) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  612 |                 /* num <- num * 10 + (ch - '0') */[0m
  613 |                 ;[0m
  614 |             } else if (ch == ' ' || ch == CR) {[0m
  615 |                 r->token = NULL;[0m
  616 |                 /* num_end <- p - 1 */[0m
  617 |                 p = p - 1; /* go back by 1 byte */[0m
  618 |                 state = SW_RUNTO_CRLF;[0m
  619 |             } else {[0m
  620 |                 goto error;[0m
  621 |             }[0m
  622 | [0m
  623 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:626:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  626 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:628:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  628 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc_memcache.c:631:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  631 |                 if (memcache_storage(r) || memcache_arithmetic(r) || memcache_delete(r) || memcache_touch(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  632 |                     /* noreply_start <- p */[0m
  633 |                     r->token = p;[0m
  634 |                     state = SW_NOREPLY;[0m
  635 |                 } else {[0m
  636 |                     goto error;[0m
  637 |                 }[0m
  638 | [0m
  639 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:642:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  642 |                 if (memcache_storage(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  643 |                     state = SW_RUNTO_VAL;[0m
  644 |                 } else {[0m
  645 |                     state = SW_ALMOST_DONE;[0m
  646 |                 }[0m
  647 | [0m
  648 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:651:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  651 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:657:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  657 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:661:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  661 |                 if (((p - m) == 7) && str7cmp(m, 'n', 'o', 'r', 'e', 'p', 'l', 'y')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  662 |                     ASSERT(memcache_storage(r) || memcache_arithmetic(r) || memcache_delete(r) || memcache_touch(r));[0m
  663 |                     r->token = NULL;[0m
  664 |                     /* noreply_end <- p - 1 */[0m
  665 |                     r->noreply = 1;[0m
  666 |                     state = SW_AFTER_NOREPLY;[0m
  667 |                     p = p - 1; /* go back by 1 byte */[0m
  668 |                 } else {[0m
  669 |                     goto error;[0m
  670 |                 }[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:676:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  676 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:678:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  678 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc_memcache.c:681:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  681 |                 if (memcache_storage(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  682 |                     state = SW_RUNTO_VAL;[0m
  683 |                 } else {[0m
  684 |                     state = SW_ALMOST_DONE;[0m
  685 |                 }[0m
  686 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:689:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  689 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:695:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  695 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  696 |             case ' ':[0m
  697 |                 break;[0m
  698 | [0m
  699 |             case CR:[0m
  700 |                 state = SW_ALMOST_DONE;[0m
  701 |                 break;[0m
  702 | [0m
  703 |             default:[0m
  704 |                 goto error;[0m
  705 |             }[0m
  706 | [0m
  707 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:697:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  697 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc_memcache.c:700:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  700 |                 state = SW_ALMOST_DONE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  701 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:704:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  704 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:710:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  710 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  711 |             case LF:[0m
  712 |                 /* req_end <- p */[0m
  713 |                 goto done;[0m
  714 | [0m
  715 |             default:[0m
  716 |                 goto error;[0m
  717 |             }[0m
  718 | [0m
  719 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:713:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  713 |                 goto done;[0m
      | [0;1;32m                ^        
[0m      | [0;32m                {        ;} 
[0m[1mnc_memcache.c:716:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  716 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:724:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  724 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mnc_memcache.c:834:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  834 |             if (isdigit(ch)) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  835 |                 state = SW_RSP_NUM;[0m
  836 |             } else {[0m
  837 |                 state = SW_RSP_STR;[0m
  838 |             }[0m
  839 |             p = p - 1; /* go back by 1 byte */[0m
  840 | [0m
  841 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:844:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  844 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:865:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  865 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:878:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  878 |                     if (str4cmp(m, 'E', 'N', 'D', '\r')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  879 |                         r->type = MSG_RSP_MC_END;[0m
  880 |                         /* end_start <- m; end_end <- p - 1 */[0m
  881 |                         r->end = m;[0m
  882 |                         break;[0m
  883 |                     }[0m
  884 | [0m
  885 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:888:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  888 |                     if (str5cmp(m, 'V', 'A', 'L', 'U', 'E')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  889 |                         /*[0m
  890 |                          * Encompasses responses for 'get', 'gets' and[0m
  891 |                          * 'cas' command.[0m
  892 |                          */[0m
  893 |                         r->type = MSG_RSP_MC_VALUE;[0m
  894 |                         break;[0m
  895 |                     }[0m
  896 | [0m
  897 |                     if (str5cmp(m, 'E', 'R', 'R', 'O', 'R')) {[0m
  898 |                         r->type = MSG_RSP_MC_ERROR;[0m
  899 |                         break;[0m
  900 |                     }[0m
  901 | [0m
  902 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:905:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  905 |                     if (str6cmp(m, 'S', 'T', 'O', 'R', 'E', 'D')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  906 |                         r->type = MSG_RSP_MC_STORED;[0m
  907 |                         break;[0m
  908 |                     }[0m
  909 | [0m
  910 |                     if (str6cmp(m, 'E', 'X', 'I', 'S', 'T', 'S')) {[0m
  911 |                         r->type = MSG_RSP_MC_EXISTS;[0m
  912 |                         break;[0m
  913 |                     }[0m
  914 | [0m
  915 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:918:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  918 |                     if (str7cmp(m, 'D', 'E', 'L', 'E', 'T', 'E', 'D')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  919 |                         r->type = MSG_RSP_MC_DELETED;[0m
  920 |                         break;[0m
  921 |                     }[0m
  922 | [0m
  923 |                     if (str7cmp(m, 'T', 'O', 'U', 'C', 'H', 'E', 'D')) {[0m
  924 |                         r->type = MSG_RSP_MC_TOUCHED;[0m
  925 |                         break;[0m
  926 |                     }[0m
  927 | [0m
  928 |                     if (str7cmp(m, 'V', 'E', 'R', 'S', 'I', 'O', 'N')) {[0m
  929 |                         r->type = MSG_RSP_MC_VERSION;[0m
  930 |                         break;[0m
  931 |                     }[0m
  932 | [0m
  933 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:936:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  936 |                     if (str9cmp(m, 'N', 'O', 'T', '_', 'F', 'O', 'U', 'N', 'D')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  937 |                         r->type = MSG_RSP_MC_NOT_FOUND;[0m
  938 |                         break;[0m
  939 |                     }[0m
  940 | [0m
  941 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:944:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  944 |                     if (str10cmp(m, 'N', 'O', 'T', '_', 'S', 'T', 'O', 'R', 'E', 'D')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  945 |                         r->type = MSG_RSP_MC_NOT_STORED;[0m
  946 |                         break;[0m
  947 |                     }[0m
  948 | [0m
  949 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:952:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  952 |                     if (str12cmp(m, 'C', 'L', 'I', 'E', 'N', 'T', '_', 'E', 'R', 'R', 'O', 'R')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  953 |                         r->type = MSG_RSP_MC_CLIENT_ERROR;[0m
  954 |                         break;[0m
  955 |                     }[0m
  956 | [0m
  957 |                     if (str12cmp(m, 'S', 'E', 'R', 'V', 'E', 'R', '_', 'E', 'R', 'R', 'O', 'R')) {[0m
  958 |                         r->type = MSG_RSP_MC_SERVER_ERROR;[0m
  959 |                         break;[0m
  960 |                     }[0m
  961 | [0m
  962 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:967:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  967 |                     goto error;[0m
      | [0;1;32m                    ^         
[0m      | [0;32m                    {         ;} 
[0m[1mnc_memcache.c:976:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  976 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mnc_memcache.c:979:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  979 |                     state = SW_CRLF;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  980 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:983:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  983 |                     state = SW_SPACES_BEFORE_KEY;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  984 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:987:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  987 |                     state = SW_CRLF;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  988 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:994:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  994 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mnc_memcache.c:997:34: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  997 |                     NOT_REACHED();[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                 {;} 
[0m[1mnc_memcache.c:1006:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1006 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1007 |                 state = SW_KEY;[0m
 1008 |                 p = p - 1; /* go back by 1 byte */[0m
 1009 |             }[0m
 1010 | [0m
 1011 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1014:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1014 |             if (ch == ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1015 |                 /* r->token = NULL; */[0m
 1016 |                 state = SW_SPACES_BEFORE_FLAGS;[0m
 1017 |             }[0m
 1018 | [0m
 1019 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1022:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1022 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1023 |                 if (!isdigit(ch)) {[0m
 1024 |                     goto error;[0m
 1025 |                 }[0m
 1026 |                 state = SW_FLAGS;[0m
 1027 |                 p = p - 1; /* go back by 1 byte */[0m
 1028 |             }[0m
 1029 | [0m
 1030 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1033:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1033 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:1052:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1052 |             if (ch != ' ') {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1053 |                 if (!isdigit(ch)) {[0m
 1054 |                     goto error;[0m
 1055 |                 }[0m
 1056 |                 p = p - 1; /* go back by 1 byte */[0m
 1057 |                 state = SW_VLEN;[0m
 1058 |                 r->vlen = 0;[0m
 1059 |             }[0m
 1060 | [0m
 1061 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1064:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1064 |             if (isdigit(ch)) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1065 |                 r->vlen = r->vlen * 10 + (uint32_t)(ch - '0');[0m
 1066 |             } else if (ch == ' ' || ch == CR) {[0m
 1067 |                 /* vlen_end <- p - 1 */[0m
 1068 |                 p = p - 1; /* go back by 1 byte */[0m
 1069 |                 /* r->token = NULL; */[0m
 1070 |                 state = SW_RUNTO_CRLF;[0m
 1071 |             } else {[0m
 1072 |                 goto error;[0m
 1073 |             }[0m
 1074 | [0m
 1075 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1078:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1078 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1079 |             case LF:[0m
 1080 |                 /* val_start <- p + 1 */[0m
 1081 |                 state = SW_VAL;[0m
 1082 |                 r->token = NULL;[0m
 1083 |                 break;[0m
 1084 | [0m
 1085 |             default:[0m
 1086 |                 goto error;[0m
 1087 |             }[0m
 1088 | [0m
 1089 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1081:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1081 |                 state = SW_VAL;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1082 |                 r->token = NULL;[0m
 1083 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:1086:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1086 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:1092:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1092 |             m = p + r->vlen;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:1103:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1103 |                 p = m; /* move forward by vlen bytes */[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1104 |                 state = SW_VAL_LF;[0m
 1105 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:1108:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1108 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:1114:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1114 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1115 |             case LF:[0m
 1116 |                 /* state = SW_END; */[0m
 1117 |                 state = SW_RSP_STR;[0m
 1118 |                 break;[0m
 1119 | [0m
 1120 |             default:[0m
 1121 |                 goto error;[0m
 1122 |             }[0m
 1123 | [0m
 1124 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1117:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1117 |                 state = SW_RSP_STR;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1118 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:1121:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1121 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:1127:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1127 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_memcache.c:1140:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1140 |                     if (str4cmp(m, 'E', 'N', 'D', '\r')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1141 |                         r->end = m;[0m
 1142 |                         state = SW_ALMOST_DONE;[0m
 1143 |                     }[0m
 1144 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_memcache.c:1147:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1147 |                     goto error;[0m
      | [0;1;32m                    ^         
[0m      | [0;32m                    {         ;} 
[0m[1mnc_memcache.c:1154:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1154 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1155 |             case CR:[0m
 1156 |                 if (r->type == MSG_RSP_MC_VALUE) {[0m
 1157 |                     state = SW_RUNTO_VAL;[0m
 1158 |                 } else {[0m
 1159 |                     state = SW_ALMOST_DONE;[0m
 1160 |                 }[0m
 1161 | [0m
 1162 |                 break;[0m
 1163 | [0m
 1164 |             default:[0m
 1165 |                 break;[0m
 1166 |             }[0m
 1167 | [0m
 1168 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1156:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1156 |                 if (r->type == MSG_RSP_MC_VALUE) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1157 |                     state = SW_RUNTO_VAL;[0m
 1158 |                 } else {[0m
 1159 |                     state = SW_ALMOST_DONE;[0m
 1160 |                 }[0m
 1161 | [0m
 1162 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:1165:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1165 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc_memcache.c:1171:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1171 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1172 |             case ' ':[0m
 1173 |                 break;[0m
 1174 | [0m
 1175 |             case CR:[0m
 1176 |                 state = SW_ALMOST_DONE;[0m
 1177 |                 break;[0m
 1178 | [0m
 1179 |             default:[0m
 1180 |                 goto error;[0m
 1181 |             }[0m
 1182 | [0m
 1183 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1173:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1173 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc_memcache.c:1176:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1176 |                 state = SW_ALMOST_DONE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1177 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_memcache.c:1180:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1180 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:1186:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1186 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1187 |             case LF:[0m
 1188 |                 /* rsp_end <- p */[0m
 1189 |                 goto done;[0m
 1190 | [0m
 1191 |             default:[0m
 1192 |                 goto error;[0m
 1193 |             }[0m
 1194 | [0m
 1195 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_memcache.c:1189:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1189 |                 goto done;[0m
      | [0;1;32m                ^        
[0m      | [0;32m                {        ;} 
[0m[1mnc_memcache.c:1192:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1192 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_memcache.c:1200:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1200 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mnc_memcache.c:1427:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1427 |         for (;;) {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1mnc_memcache.c:1459:9: [0m[0;1;35mwarning: [0m[1mValue stored to 'mbuf' is never read [clang-analyzer-deadcode.DeadStores][0m
 1459 |         mbuf = STAILQ_FIRST(&r->mhdr);[0m
      | [0;1;32m        ^
[0m[1mnc_memcache.c:1459:9: [0m[0;1;36mnote: [0mValue stored to 'mbuf' is never read[0m
[1mnc_memcache.c:1459:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1459 |         mbuf = STAILQ_FIRST(&r->mhdr);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1460 |         log_hexdump(LOG_ERR, mbuf->pos, mbuf_length(mbuf), "rsp fragment "[0m
 1461 |                     "with unknown type %d", r->type);[0m
 1462 |         pr->error = 1;[0m
 1463 |         pr->err = EINVAL;[0m
 1464 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m107 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[45/54][152.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp5qy5vfl7.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_message.c
[1mnc_message.c:556:9: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  556 |     n = nc_vsnprintf(mbuf->last, size, fmt, args);[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:101:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_vsnprintf'[0m
  101 |     vsnprintf((char *)(_s), (size_t)(_n), _f, _a)[0m
      | [0;1;32m    ^~~~~~~~~
[0m[1mnc_message.c:556:9: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
  556 |     n = nc_vsnprintf(mbuf->last, size, fmt, args);[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:101:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_vsnprintf'[0m
  101 |     vsnprintf((char *)(_s), (size_t)(_n), _f, _a)[0m
      | [0;1;32m    ^~~~~~~~~
[0m[1mnc_message.c:646:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  646 |         status = msg_parsed(ctx, conn, msg);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  647 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_message.c:650:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  650 |         status = msg_repair(ctx, conn, msg);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  651 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_message.c:654:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  654 |         status = NC_OK;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  655 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_message.c:658:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |         status = NC_ERROR;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  659 |         conn->err = errno;[0m
  660 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[46/54][154.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp1m5eqso5.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/src/dumper.c
[1mdumper.c:70:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   70 |     STREAM_START_EVENT_INIT(event, YAML_ANY_ENCODING, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:552:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_START_EVENT_INIT'[0m
  552 |     (EVENT_INIT((event),YAML_STREAM_START_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:70:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   70 |     STREAM_START_EVENT_INIT(event, YAML_ANY_ENCODING, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:552:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_START_EVENT_INIT'[0m
  552 |     (EVENT_INIT((event),YAML_STREAM_START_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:94:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |     if (emitter->closed) return 1;[0m
      | [0;1;32m                        ^         
[0m      | [0;32m                         {
[0m[1mdumper.c:96:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   96 |     STREAM_END_EVENT_INIT(event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:556:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_END_EVENT_INIT'[0m
  556 |     (EVENT_INIT((event),YAML_STREAM_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:96:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   96 |     STREAM_END_EVENT_INIT(event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:556:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_END_EVENT_INIT'[0m
  556 |     (EVENT_INIT((event),YAML_STREAM_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:123:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |         if (!yaml_emitter_open(emitter)) goto error;[0m
      | [0;1;32m                                        ^           
[0m      | [0;32m                                         {
[0m[1mdumper.c:127:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |         if (!yaml_emitter_close(emitter)) goto error;[0m
      | [0;1;32m                                         ^           
[0m      | [0;32m                                          {
[0m[1mdumper.c:136:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |     if (!emitter->anchors) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mdumper.c:137:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  137 |     memset(emitter->anchors, 0, sizeof(*(emitter->anchors))[0m
      | [0;1;32m    ^~~~~~
[0m[1mdumper.c:137:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  137 |     memset(emitter->anchors, 0, sizeof(*(emitter->anchors))[0m
      | [0;1;32m    ^~~~~~
[0m[1mdumper.c:140:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  140 |     DOCUMENT_START_EVENT_INIT(event, document->version_directive,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:560:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_START_EVENT_INIT'[0m
  560 |     (EVENT_INIT((event),YAML_DOCUMENT_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:140:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  140 |     DOCUMENT_START_EVENT_INIT(event, document->version_directive,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:560:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_START_EVENT_INIT'[0m
  560 |     (EVENT_INIT((event),YAML_DOCUMENT_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:143:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |     if (!yaml_emitter_emit(emitter, &event)) goto error;[0m
      | [0;1;32m                                            ^           
[0m      | [0;32m                                             {
[0m[1mdumper.c:146:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  146 |     if (!yaml_emitter_dump_node(emitter, 1)) goto error;[0m
      | [0;1;32m                                            ^           
[0m      | [0;32m                                             {
[0m[1mdumper.c:148:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  148 |     DOCUMENT_END_EVENT_INIT(event, document->end_implicit, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:567:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_END_EVENT_INIT'[0m
  567 |     (EVENT_INIT((event),YAML_DOCUMENT_END_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:148:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  148 |     DOCUMENT_END_EVENT_INIT(event, document->end_implicit, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:567:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_END_EVENT_INIT'[0m
  567 |     (EVENT_INIT((event),YAML_DOCUMENT_END_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:149:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |     if (!yaml_emitter_emit(emitter, &event)) goto error;[0m
      | [0;1;32m                                            ^           
[0m      | [0;32m                                             {
[0m[1mdumper.c:218:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  218 |                 for (item = node->data.sequence.items.start;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  219 |                         item < node->data.sequence.items.top; item ++) {[0m
  220 |                     yaml_emitter_anchor_node(emitter, *item);[0m
  221 |                 }[0m
  222 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mdumper.c:224:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  224 |                 for (pair = node->data.mapping.pairs.start;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  225 |                         pair < node->data.mapping.pairs.top; pair ++) {[0m
  226 |                     yaml_emitter_anchor_node(emitter, pair->key);[0m
  227 |                     yaml_emitter_anchor_node(emitter, pair->value);[0m
  228 |                 }[0m
  229 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mdumper.c:231:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  231 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mdumper.c:252:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |     if (!anchor) return NULL;[0m
      | [0;1;32m                ^            
[0m      | [0;32m                 {
[0m[1mdumper.c:254:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  254 |     sprintf((char *)anchor, ANCHOR_TEMPLATE, anchor_id);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mdumper.c:254:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  254 |     sprintf((char *)anchor, ANCHOR_TEMPLATE, anchor_id);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mdumper.c:272:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |         if (!anchor) return 0;[0m
      | [0;1;32m                    ^         
[0m      | [0;32m                     {
[0m[1mdumper.c:283:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  283 |             return yaml_emitter_dump_scalar(emitter, node, anchor);[0m
      | [0;1;32m            ^                                                     
[0m      | [0;32m            {                                                     ;} 
[0m[1mdumper.c:285:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  285 |             return yaml_emitter_dump_sequence(emitter, node, anchor);[0m
      | [0;1;32m            ^                                                       
[0m      | [0;32m            {                                                       ;} 
[0m[1mdumper.c:287:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  287 |             return yaml_emitter_dump_mapping(emitter, node, anchor);[0m
      | [0;1;32m            ^                                                      
[0m      | [0;32m            {                                                      ;} 
[0m[1mdumper.c:306:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  306 |     ALIAS_EVENT_INIT(event, anchor, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:571:6: [0m[0;1;36mnote: [0mexpanded from macro 'ALIAS_EVENT_INIT'[0m
  571 |     (EVENT_INIT((event),YAML_ALIAS_EVENT,(start_mark),(end_mark)),              \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:306:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  306 |     ALIAS_EVENT_INIT(event, anchor, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:571:6: [0m[0;1;36mnote: [0mexpanded from macro 'ALIAS_EVENT_INIT'[0m
  571 |     (EVENT_INIT((event),YAML_ALIAS_EVENT,(start_mark),(end_mark)),              \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:327:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  327 |     SCALAR_EVENT_INIT(event, anchor, node->tag, node->data.scalar.value,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:327:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  327 |     SCALAR_EVENT_INIT(event, anchor, node->tag, node->data.scalar.value,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:349:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  349 |     SEQUENCE_START_EVENT_INIT(event, anchor, node->tag, implicit,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:349:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  349 |     SEQUENCE_START_EVENT_INIT(event, anchor, node->tag, implicit,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:351:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |     if (!yaml_emitter_emit(emitter, &event)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1mdumper.c:355:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |         if (!yaml_emitter_dump_node(emitter, *item)) return 0;[0m
      | [0;1;32m                                                    ^         
[0m      | [0;32m                                                     {
[0m[1mdumper.c:358:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  358 |     SEQUENCE_END_EVENT_INIT(event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:358:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  358 |     SEQUENCE_END_EVENT_INIT(event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:359:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |     if (!yaml_emitter_emit(emitter, &event)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1mdumper.c:379:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  379 |     MAPPING_START_EVENT_INIT(event, anchor, node->tag, implicit,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:379:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  379 |     MAPPING_START_EVENT_INIT(event, anchor, node->tag, implicit,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:381:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |     if (!yaml_emitter_emit(emitter, &event)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1mdumper.c:385:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |         if (!yaml_emitter_dump_node(emitter, pair->key)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1mdumper.c:386:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |         if (!yaml_emitter_dump_node(emitter, pair->value)) return 0;[0m
      | [0;1;32m                                                          ^         
[0m      | [0;32m                                                           {
[0m[1mdumper.c:389:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  389 |     MAPPING_END_EVENT_INIT(event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:389:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  389 |     MAPPING_END_EVENT_INIT(event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mdumper.c:390:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |     if (!yaml_emitter_emit(emitter, &event)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m37 warnings generated.
74 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[47/54][151.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp3ffsdf43.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/src/parser.c
[1mparser.c:177:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  177 |     memset(event, 0, sizeof(yaml_event_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mparser.c:177:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  177 |     memset(event, 0, sizeof(yaml_event_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mparser.c:231:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  231 |             return yaml_parser_parse_stream_start(parser, event);[0m
      | [0;1;32m            ^                                                   
[0m      | [0;32m            {                                                   ;} 
[0m[1mparser.c:234:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  234 |             return yaml_parser_parse_document_start(parser, event, 1);[0m
      | [0;1;32m            ^                                                        
[0m      | [0;32m            {                                                        ;} 
[0m[1mparser.c:237:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  237 |             return yaml_parser_parse_document_start(parser, event, 0);[0m
      | [0;1;32m            ^                                                        
[0m      | [0;32m            {                                                        ;} 
[0m[1mparser.c:240:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  240 |             return yaml_parser_parse_document_content(parser, event);[0m
      | [0;1;32m            ^                                                       
[0m      | [0;32m            {                                                       ;} 
[0m[1mparser.c:243:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  243 |             return yaml_parser_parse_document_end(parser, event);[0m
      | [0;1;32m            ^                                                   
[0m      | [0;32m            {                                                   ;} 
[0m[1mparser.c:246:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  246 |             return yaml_parser_parse_node(parser, event, 1, 0);[0m
      | [0;1;32m            ^                                                 
[0m      | [0;32m            {                                                 ;} 
[0m[1mparser.c:249:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  249 |             return yaml_parser_parse_node(parser, event, 1, 1);[0m
      | [0;1;32m            ^                                                 
[0m      | [0;32m            {                                                 ;} 
[0m[1mparser.c:252:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  252 |             return yaml_parser_parse_node(parser, event, 0, 0);[0m
      | [0;1;32m            ^                                                 
[0m      | [0;32m            {                                                 ;} 
[0m[1mparser.c:255:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  255 |             return yaml_parser_parse_block_sequence_entry(parser, event, 1);[0m
      | [0;1;32m            ^                                                              
[0m      | [0;32m            {                                                              ;} 
[0m[1mparser.c:258:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  258 |             return yaml_parser_parse_block_sequence_entry(parser, event, 0);[0m
      | [0;1;32m            ^                                                              
[0m      | [0;32m            {                                                              ;} 
[0m[1mparser.c:261:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  261 |             return yaml_parser_parse_indentless_sequence_entry(parser, event);[0m
      | [0;1;32m            ^                                                                
[0m      | [0;32m            {                                                                ;} 
[0m[1mparser.c:264:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  264 |             return yaml_parser_parse_block_mapping_key(parser, event, 1);[0m
      | [0;1;32m            ^                                                           
[0m      | [0;32m            {                                                           ;} 
[0m[1mparser.c:267:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  267 |             return yaml_parser_parse_block_mapping_key(parser, event, 0);[0m
      | [0;1;32m            ^                                                           
[0m      | [0;32m            {                                                           ;} 
[0m[1mparser.c:270:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  270 |             return yaml_parser_parse_block_mapping_value(parser, event);[0m
      | [0;1;32m            ^                                                          
[0m      | [0;32m            {                                                          ;} 
[0m[1mparser.c:273:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  273 |             return yaml_parser_parse_flow_sequence_entry(parser, event, 1);[0m
      | [0;1;32m            ^                                                             
[0m      | [0;32m            {                                                             ;} 
[0m[1mparser.c:276:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  276 |             return yaml_parser_parse_flow_sequence_entry(parser, event, 0);[0m
      | [0;1;32m            ^                                                             
[0m      | [0;32m            {                                                             ;} 
[0m[1mparser.c:279:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  279 |             return yaml_parser_parse_flow_sequence_entry_mapping_key(parser, event);[0m
      | [0;1;32m            ^                                                                      
[0m      | [0;32m            {                                                                      ;} 
[0m[1mparser.c:282:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  282 |             return yaml_parser_parse_flow_sequence_entry_mapping_value(parser, event);[0m
      | [0;1;32m            ^                                                                        
[0m      | [0;32m            {                                                                        ;} 
[0m[1mparser.c:285:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  285 |             return yaml_parser_parse_flow_sequence_entry_mapping_end(parser, event);[0m
      | [0;1;32m            ^                                                                      
[0m      | [0;32m            {                                                                      ;} 
[0m[1mparser.c:288:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  288 |             return yaml_parser_parse_flow_mapping_key(parser, event, 1);[0m
      | [0;1;32m            ^                                                          
[0m      | [0;32m            {                                                          ;} 
[0m[1mparser.c:291:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  291 |             return yaml_parser_parse_flow_mapping_key(parser, event, 0);[0m
      | [0;1;32m            ^                                                          
[0m      | [0;32m            {                                                          ;} 
[0m[1mparser.c:294:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  294 |             return yaml_parser_parse_flow_mapping_value(parser, event, 0);[0m
      | [0;1;32m            ^                                                            
[0m      | [0;32m            {                                                            ;} 
[0m[1mparser.c:297:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  297 |             return yaml_parser_parse_flow_mapping_value(parser, event, 1);[0m
      | [0;1;32m            ^                                                            
[0m      | [0;32m            {                                                            ;} 
[0m[1mparser.c:318:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:326:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  326 |     STREAM_START_EVENT_INIT(*event, token->data.stream_start.encoding,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:552:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_START_EVENT_INIT'[0m
  552 |     (EVENT_INIT((event),YAML_STREAM_START_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:326:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  326 |     STREAM_START_EVENT_INIT(*event, token->data.stream_start.encoding,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:552:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_START_EVENT_INIT'[0m
  552 |     (EVENT_INIT((event),YAML_STREAM_START_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:353:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:362:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |             if (!token) return 0;[0m
      | [0;1;32m                       ^         
[0m      | [0;32m                        {
[0m[1mparser.c:373:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |         if (!yaml_parser_process_directives(parser, NULL, NULL, NULL))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  374 |             return 0;[0m
      | [0;1;32m                     
[0m[1mparser.c:375:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |         if (!PUSH(parser, parser->states, YAML_PARSE_DOCUMENT_END_STATE))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  376 |             return 0;[0m
      | [0;1;32m                     
[0m[1mparser.c:378:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  378 |         DOCUMENT_START_EVENT_INIT(*event, NULL, NULL, NULL, 1,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:560:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_START_EVENT_INIT'[0m
  560 |     (EVENT_INIT((event),YAML_DOCUMENT_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:378:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  378 |         DOCUMENT_START_EVENT_INIT(*event, NULL, NULL, NULL, 1,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:560:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_START_EVENT_INIT'[0m
  560 |     (EVENT_INIT((event),YAML_DOCUMENT_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:390:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |                     &tag_directives.start, &tag_directives.end))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  391 |             return 0;[0m
      | [0;1;32m                     
[0m[1mparser.c:393:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |         if (!token) goto error;[0m
      | [0;1;32m                   ^           
[0m      | [0;32m                    {
[0m[1mparser.c:399:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |         if (!PUSH(parser, parser->states, YAML_PARSE_DOCUMENT_END_STATE))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  400 |             goto error;[0m
      | [0;1;32m                       
[0m[1mparser.c:403:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  403 |         DOCUMENT_START_EVENT_INIT(*event, version_directive,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:560:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_START_EVENT_INIT'[0m
  560 |     (EVENT_INIT((event),YAML_DOCUMENT_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:403:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  403 |         DOCUMENT_START_EVENT_INIT(*event, version_directive,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:560:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_START_EVENT_INIT'[0m
  560 |     (EVENT_INIT((event),YAML_DOCUMENT_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:417:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  417 |         STREAM_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:556:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_END_EVENT_INIT'[0m
  556 |     (EVENT_INIT((event),YAML_STREAM_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:417:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  417 |         STREAM_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:556:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_END_EVENT_INIT'[0m
  556 |     (EVENT_INIT((event),YAML_STREAM_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:445:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  445 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:477:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:494:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  494 |     DOCUMENT_END_EVENT_INIT(*event, implicit, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:567:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_END_EVENT_INIT'[0m
  567 |     (EVENT_INIT((event),YAML_DOCUMENT_END_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:494:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  494 |     DOCUMENT_END_EVENT_INIT(*event, implicit, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:567:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_END_EVENT_INIT'[0m
  567 |     (EVENT_INIT((event),YAML_DOCUMENT_END_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:541:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:546:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  546 |         ALIAS_EVENT_INIT(*event, token->data.alias.value,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:571:6: [0m[0;1;36mnote: [0mexpanded from macro 'ALIAS_EVENT_INIT'[0m
  571 |     (EVENT_INIT((event),YAML_ALIAS_EVENT,(start_mark),(end_mark)),              \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:546:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  546 |         ALIAS_EVENT_INIT(*event, token->data.alias.value,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:571:6: [0m[0;1;36mnote: [0mexpanded from macro 'ALIAS_EVENT_INIT'[0m
  571 |     (EVENT_INIT((event),YAML_ALIAS_EVENT,(start_mark),(end_mark)),              \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:563:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |             if (!token) goto error;[0m
      | [0;1;32m                       ^           
[0m      | [0;32m                        {
[0m[1mparser.c:572:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |                 if (!token) goto error;[0m
      | [0;1;32m                           ^           
[0m      | [0;32m                            {
[0m[1mparser.c:583:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |             if (!token) goto error;[0m
      | [0;1;32m                       ^           
[0m      | [0;32m                        {
[0m[1mparser.c:590:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |                 if (!token) goto error;[0m
      | [0;1;32m                           ^           
[0m      | [0;32m                            {
[0m[1mparser.c:613:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  613 |                         memcpy(tag, tag_directive->prefix, prefix_len);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mparser.c:613:25: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  613 |                         memcpy(tag, tag_directive->prefix, prefix_len);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mparser.c:614:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  614 |                         memcpy(tag+prefix_len, tag_suffix, suffix_len);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mparser.c:614:25: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  614 |                         memcpy(tag+prefix_len, tag_suffix, suffix_len);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mparser.c:635:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  635 |             SEQUENCE_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:635:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  635 |             SEQUENCE_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:652:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  652 |                 SCALAR_EVENT_INIT(*event, anchor, tag,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:652:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  652 |                 SCALAR_EVENT_INIT(*event, anchor, tag,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:662:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  662 |                 SEQUENCE_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:662:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  662 |                 SEQUENCE_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:669:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  669 |                 MAPPING_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:669:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  669 |                 MAPPING_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:676:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  676 |                 SEQUENCE_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:676:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  676 |                 SEQUENCE_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:683:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  683 |                 MAPPING_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:683:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  683 |                 MAPPING_START_EVENT_INIT(*event, anchor, tag, implicit,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:695:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  695 |                 SCALAR_EVENT_INIT(*event, anchor, tag, value, 0,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:695:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  695 |                 SCALAR_EVENT_INIT(*event, anchor, tag, value, 0,[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:733:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |         if (!PUSH(parser, parser->marks, token->start_mark))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  734 |             return 0;[0m
      | [0;1;32m                     
[0m[1mparser.c:739:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:746:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  746 |         if (!token) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mparser.c:750:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |                         YAML_PARSE_BLOCK_SEQUENCE_ENTRY_STATE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  751 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mparser.c:764:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  764 |         SEQUENCE_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:764:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  764 |         SEQUENCE_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:790:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:797:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |         if (!token) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mparser.c:803:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  803 |                         YAML_PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  804 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mparser.c:816:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  816 |         SEQUENCE_END_EVENT_INIT(*event, token->start_mark, token->start_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:816:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  816 |         SEQUENCE_END_EVENT_INIT(*event, token->start_mark, token->start_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:841:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  841 |         if (!PUSH(parser, parser->marks, token->start_mark))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  842 |             return 0;[0m
      | [0;1;32m                     
[0m[1mparser.c:847:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  847 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:854:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |         if (!token) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mparser.c:859:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  859 |                         YAML_PARSE_BLOCK_MAPPING_VALUE_STATE))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  860 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mparser.c:873:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  873 |         MAPPING_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:873:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  873 |         MAPPING_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:905:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  905 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:912:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  912 |         if (!token) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mparser.c:917:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  917 |                         YAML_PARSE_BLOCK_MAPPING_KEY_STATE))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  918 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mparser.c:956:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  956 |         if (!PUSH(parser, parser->marks, token->start_mark))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  957 |             return 0;[0m
      | [0;1;32m                     
[0m[1mparser.c:962:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  962 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:970:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  970 |                 if (!token) return 0;[0m
      | [0;1;32m                           ^         
[0m      | [0;32m                            {
[0m[1mparser.c:981:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  981 |             MAPPING_START_EVENT_INIT(*event, NULL, NULL,[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:981:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  981 |             MAPPING_START_EVENT_INIT(*event, NULL, NULL,[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:990:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  990 |                         YAML_PARSE_FLOW_SEQUENCE_ENTRY_STATE))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  991 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mparser.c:998:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  998 |     SEQUENCE_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:998:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  998 |     SEQUENCE_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:1016:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1016 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:1021:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |                     YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1022 |             return 0;[0m
      | [0;1;32m                     
[0m[1mparser.c:1046:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:1051:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1051 |         if (!token) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mparser.c:1055:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1055 |                         YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1056 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mparser.c:1077:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1077 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:1081:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1081 |     MAPPING_END_EVENT_INIT(*event, token->start_mark, token->start_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:1081:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1081 |     MAPPING_END_EVENT_INIT(*event, token->start_mark, token->start_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:1107:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1107 |         if (!PUSH(parser, parser->marks, token->start_mark))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1108 |             return 0;[0m
      | [0;1;32m                     
[0m[1mparser.c:1113:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1113 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:1121:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |                 if (!token) return 0;[0m
      | [0;1;32m                           ^         
[0m      | [0;32m                            {
[0m[1mparser.c:1133:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1133 |             if (!token) return 0;[0m
      | [0;1;32m                       ^         
[0m      | [0;32m                        {
[0m[1mparser.c:1138:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |                             YAML_PARSE_FLOW_MAPPING_VALUE_STATE))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1139 |                     return 0;[0m
      | [0;1;32m                             
[0m[1mparser.c:1150:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1150 |                         YAML_PARSE_FLOW_MAPPING_EMPTY_VALUE_STATE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1151 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mparser.c:1158:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1158 |     MAPPING_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:1158:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1158 |     MAPPING_END_EVENT_INIT(*event, token->start_mark, token->end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:1176:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1176 |     if (!token) return 0;[0m
      | [0;1;32m               ^         
[0m      | [0;32m                {
[0m[1mparser.c:1187:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1187 |         if (!token) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mparser.c:1191:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1191 |                         YAML_PARSE_FLOW_MAPPING_KEY_STATE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1192 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mparser.c:1218:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1218 |     SCALAR_EVENT_INIT(*event, NULL, NULL, value, 0,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:1218:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1218 |     SCALAR_EVENT_INIT(*event, NULL, NULL, value, 0,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mparser.c:1248:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1248 |     if (!STACK_INIT(parser, tag_directives, yaml_tag_directive_t*))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1249 |         goto error;[0m
      | [0;1;32m                   
[0m[1mparser.c:1252:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1252 |     if (!token) goto error;[0m
      | [0;1;32m               ^           
[0m      | [0;32m                {
[0m[1mparser.c:1287:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1287 |                         token->start_mark))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1288 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mparser.c:1289:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1289 |             if (!PUSH(parser, tag_directives, value))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1290 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mparser.c:1295:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1295 |         if (!token) goto error;[0m
      | [0;1;32m                   ^           
[0m      | [0;32m                    {
[0m[1mparser.c:1301:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1301 |                     token->start_mark))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1302 |             goto error;[0m
      | [0;1;32m                       
[0m[1mparser.c:1322:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1322 |     if (!version_directive_ref)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1323 |         yaml_free(version_directive);[0m
      | [0;1;32m                                     
[0m[1mparser.c:1351:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1351 |             if (allow_duplicates)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1352 |                 return 1;[0m
      | [0;1;32m                         
[0m[1mparser.c:1365:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1365 |     if (!PUSH(parser, parser->tag_directives, copy))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1366 |         goto error;[0m
      | [0;1;32m                   
[0m107 warnings generated.
214 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[48/54][153.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpxanmkpy9.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_rbtree.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[49/54][158.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp5ovocw6_.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/src/loader.c
[1mloader.c:94:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   94 |     memset(document, 0, sizeof(yaml_document_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mloader.c:94:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   94 |     memset(document, 0, sizeof(yaml_document_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mloader.c:95:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |     if (!STACK_INIT(parser, document->nodes, yaml_node_t*))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   96 |         goto error;[0m
      | [0;1;32m                   
[0m[1mloader.c:99:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |         if (!yaml_parser_parse(parser, &event)) goto error;[0m
      | [0;1;32m                                               ^           
[0m      | [0;32m                                                {
[0m[1mloader.c:108:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |     if (!yaml_parser_parse(parser, &event)) goto error;[0m
      | [0;1;32m                                           ^           
[0m      | [0;32m                                            {
[0m[1mloader.c:113:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |     if (!STACK_INIT(parser, parser->aliases, yaml_alias_data_t*))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  114 |         goto error;[0m
      | [0;1;32m                   
[0m[1mloader.c:118:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |     if (!yaml_parser_load_document(parser, &event)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mloader.c:202:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |     if (!STACK_INIT(parser, ctx, int*)) return 0;[0m
      | [0;1;32m                                       ^         
[0m      | [0;32m                                        {
[0m[1mloader.c:222:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |         if (!yaml_parser_parse(parser, &event)) return 0;[0m
      | [0;1;32m                                               ^         
[0m      | [0;32m                                                {
[0m[1mloader.c:226:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  226 |                 if (!yaml_parser_load_alias(parser, &event, ctx)) return 0;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  227 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mloader.c:226:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                 if (!yaml_parser_load_alias(parser, &event, ctx)) return 0;[0m
      | [0;1;32m                                                                 ^         
[0m      | [0;32m                                                                  {
[0m[1mloader.c:229:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  229 |                 if (!yaml_parser_load_scalar(parser, &event, ctx)) return 0;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  230 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mloader.c:229:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |                 if (!yaml_parser_load_scalar(parser, &event, ctx)) return 0;[0m
      | [0;1;32m                                                                  ^         
[0m      | [0;32m                                                                   {
[0m[1mloader.c:232:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  232 |                 if (!yaml_parser_load_sequence(parser, &event, ctx)) return 0;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  233 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mloader.c:232:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                 if (!yaml_parser_load_sequence(parser, &event, ctx)) return 0;[0m
      | [0;1;32m                                                                    ^         
[0m      | [0;32m                                                                     {
[0m[1mloader.c:235:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  235 |                 if (!yaml_parser_load_sequence_end(parser, &event, ctx))[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  236 |                     return 0;[0m
  237 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mloader.c:235:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |                 if (!yaml_parser_load_sequence_end(parser, &event, ctx))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  236 |                     return 0;[0m
      | [0;1;32m                             
[0m[1mloader.c:239:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |                 if (!yaml_parser_load_mapping(parser, &event, ctx)) return 0;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  240 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mloader.c:239:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |                 if (!yaml_parser_load_mapping(parser, &event, ctx)) return 0;[0m
      | [0;1;32m                                                                   ^         
[0m      | [0;32m                                                                    {
[0m[1mloader.c:242:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |                 if (!yaml_parser_load_mapping_end(parser, &event, ctx))[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  243 |                     return 0;[0m
  244 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mloader.c:242:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |                 if (!yaml_parser_load_mapping_end(parser, &event, ctx))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  243 |                     return 0;[0m
      | [0;1;32m                             
[0m[1mloader.c:249:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  249 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mloader.c:270:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |     if (!anchor) return 1;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                 {
[0m[1mloader.c:315:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  315 |             if (!STACK_LIMIT(parser, parent->data.sequence.items, INT_MAX-1))[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  316 |                 return 0;[0m
  317 |             if (!PUSH(parser, parent->data.sequence.items, index))[0m
  318 |                 return 0;[0m
  319 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mloader.c:315:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |             if (!STACK_LIMIT(parser, parent->data.sequence.items, INT_MAX-1))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  316 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mloader.c:317:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |             if (!PUSH(parser, parent->data.sequence.items, index))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  318 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mloader.c:332:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |             if (!STACK_LIMIT(parser, parent->data.mapping.pairs, INT_MAX-1))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  333 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mloader.c:334:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |             if (!PUSH(parser, parent->data.mapping.pairs, pair))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  335 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mloader.c:382:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |     if (!STACK_LIMIT(parser, parser->document->nodes, INT_MAX-1)) goto error;[0m
      | [0;1;32m                                                                 ^           
[0m      | [0;32m                                                                  {
[0m[1mloader.c:387:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |         if (!tag) goto error;[0m
      | [0;1;32m                 ^           
[0m      | [0;32m                  {
[0m[1mloader.c:390:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  390 |     SCALAR_NODE_INIT(node, tag, event->data.scalar.value,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:640:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_NODE_INIT'[0m
  640 |     (NODE_INIT((node),YAML_SCALAR_NODE,(node_tag),(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mloader.c:390:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  390 |     SCALAR_NODE_INIT(node, tag, event->data.scalar.value,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:640:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_NODE_INIT'[0m
  640 |     (NODE_INIT((node),YAML_SCALAR_NODE,(node_tag),(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mloader.c:394:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |     if (!PUSH(parser, parser->document->nodes, node)) goto error;[0m
      | [0;1;32m                                                     ^           
[0m      | [0;32m                                                      {
[0m[1mloader.c:399:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |                 event->data.scalar.anchor)) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1mloader.c:427:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  427 |     if (!STACK_LIMIT(parser, parser->document->nodes, INT_MAX-1)) goto error;[0m
      | [0;1;32m                                                                 ^           
[0m      | [0;32m                                                                  {
[0m[1mloader.c:432:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |         if (!tag) goto error;[0m
      | [0;1;32m                 ^           
[0m      | [0;32m                  {
[0m[1mloader.c:435:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |     if (!STACK_INIT(parser, items, yaml_node_item_t*)) goto error;[0m
      | [0;1;32m                                                      ^           
[0m      | [0;32m                                                       {
[0m[1mloader.c:437:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  437 |     SEQUENCE_NODE_INIT(node, tag, items.start, items.end,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:647:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_NODE_INIT'[0m
  647 |     (NODE_INIT((node),YAML_SEQUENCE_NODE,(node_tag),(start_mark),(end_mark)),   \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mloader.c:437:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  437 |     SEQUENCE_NODE_INIT(node, tag, items.start, items.end,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:647:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_NODE_INIT'[0m
  647 |     (NODE_INIT((node),YAML_SEQUENCE_NODE,(node_tag),(start_mark),(end_mark)),   \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mloader.c:441:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |     if (!PUSH(parser, parser->document->nodes, node)) goto error;[0m
      | [0;1;32m                                                     ^           
[0m      | [0;32m                                                      {
[0m[1mloader.c:446:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  446 |                 event->data.sequence_start.anchor)) return 0;[0m
      | [0;1;32m                                                   ^         
[0m      | [0;32m                                                    {
[0m[1mloader.c:448:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |     if (!yaml_parser_load_node_add(parser, ctx, index)) return 0;[0m
      | [0;1;32m                                                       ^         
[0m      | [0;32m                                                        {
[0m[1mloader.c:450:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |     if (!STACK_LIMIT(parser, *ctx, INT_MAX-1)) return 0;[0m
      | [0;1;32m                                              ^         
[0m      | [0;32m                                               {
[0m[1mloader.c:451:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |     if (!PUSH(parser, *ctx, index)) return 0;[0m
      | [0;1;32m                                   ^         
[0m      | [0;32m                                    {
[0m[1mloader.c:495:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  495 |     if (!STACK_LIMIT(parser, parser->document->nodes, INT_MAX-1)) goto error;[0m
      | [0;1;32m                                                                 ^           
[0m      | [0;32m                                                                  {
[0m[1mloader.c:500:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |         if (!tag) goto error;[0m
      | [0;1;32m                 ^           
[0m      | [0;32m                  {
[0m[1mloader.c:503:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |     if (!STACK_INIT(parser, pairs, yaml_node_pair_t*)) goto error;[0m
      | [0;1;32m                                                      ^           
[0m      | [0;32m                                                       {
[0m[1mloader.c:505:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  505 |     MAPPING_NODE_INIT(node, tag, pairs.start, pairs.end,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:655:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_NODE_INIT'[0m
  655 |     (NODE_INIT((node),YAML_MAPPING_NODE,(node_tag),(start_mark),(end_mark)),    \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mloader.c:505:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  505 |     MAPPING_NODE_INIT(node, tag, pairs.start, pairs.end,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:655:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_NODE_INIT'[0m
  655 |     (NODE_INIT((node),YAML_MAPPING_NODE,(node_tag),(start_mark),(end_mark)),    \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mloader.c:509:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |     if (!PUSH(parser, parser->document->nodes, node)) goto error;[0m
      | [0;1;32m                                                     ^           
[0m      | [0;32m                                                      {
[0m[1mloader.c:514:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  514 |                 event->data.mapping_start.anchor)) return 0;[0m
      | [0;1;32m                                                  ^         
[0m      | [0;32m                                                   {
[0m[1mloader.c:516:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |     if (!yaml_parser_load_node_add(parser, ctx, index)) return 0;[0m
      | [0;1;32m                                                       ^         
[0m      | [0;32m                                                        {
[0m[1mloader.c:518:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |     if (!STACK_LIMIT(parser, *ctx, INT_MAX-1)) return 0;[0m
      | [0;1;32m                                              ^         
[0m      | [0;32m                                               {
[0m[1mloader.c:519:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  519 |     if (!PUSH(parser, *ctx, index)) return 0;[0m
      | [0;1;32m                                   ^         
[0m      | [0;32m                                    {
[0m54 warnings generated.
108 warnings generated.
Suppressed 8 warnings (8 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[50/54][197.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpysfas30l.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/proto/nc_redis.c
[1mnc_redis.c:53:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   53 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:95:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:138:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  138 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:178:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  178 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:197:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  197 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:289:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  289 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:310:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  310 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:325:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  325 |         return true;[0m
      | [0;1;32m        ^          
[0m      | [0;32m        {          ;} 
[0m[1mnc_redis.c:328:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  328 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:349:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  349 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:360:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  360 |         return true;[0m
      | [0;1;32m        ^          
[0m      | [0;32m        {          ;} 
[0m[1mnc_redis.c:363:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  363 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:394:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  394 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:479:37: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |             ASSERT(r->token == NULL);[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                    {
[0m  480 |             if (ch != '*') {[0m
  481 |                 /* redis commands are always arrays */[0m
  482 |                 goto error;[0m
  483 |             }[0m
  484 |             r->token = p;[0m
  485 |             /* req_start <- p */[0m
  486 |             r->narg_start = p;[0m
  487 |             r->rnarg = 0;[0m
  488 |             state = SW_NARG;[0m
  489 | [0m
  490 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:494:37: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  494 |             ASSERT(r->token != NULL);[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                    {
[0m  495 |             if (isdigit(ch)) {[0m
  496 |                 r->rnarg = r->rnarg * 10 + (uint32_t)(ch - '0');[0m
  497 |             } else if (ch == CR) {[0m
  498 |                 if (r->rnarg == 0) {[0m
  499 |                     goto error;[0m
  500 |                 }[0m
  501 |                 r->narg = r->rnarg;[0m
  502 |                 r->narg_end = p;[0m
  503 |                 r->token = NULL;[0m
  504 |                 state = SW_NARG_LF;[0m
  505 |             } else {[0m
  506 |                 goto error;[0m
  507 |             }[0m
  508 | [0m
  509 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:512:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  513 |             case LF:[0m
  514 |                 state = SW_REQ_TYPE_LEN;[0m
  515 |                 break;[0m
  516 | [0m
  517 |             default:[0m
  518 |                 goto error;[0m
  519 |             }[0m
  520 | [0m
  521 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:514:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  514 |                 state = SW_REQ_TYPE_LEN;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  515 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:518:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  518 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:524:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:546:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  547 |             case LF:[0m
  548 |                 state = SW_REQ_TYPE;[0m
  549 |                 break;[0m
  550 | [0m
  551 |             default:[0m
  552 |                 goto error;[0m
  553 |             }[0m
  554 | [0m
  555 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:548:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  548 |                 state = SW_REQ_TYPE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  549 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:552:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  552 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:558:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  558 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:582:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  582 |                 if (str3icmp(m, 'g', 'e', 't')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:605:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  605 |                 if (str4icmp(m, 'p', 't', 't', 'l')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:756:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  756 |                 if (str5icmp(m, 'h', 'k', 'e', 'y', 's')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:869:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  869 |                 if (str6icmp(m, 'a', 'p', 'p', 'e', 'n', 'd')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1015:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1015 |                 if (str7icmp(m, 'p', 'e', 'r', 's', 'i', 's', 't')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1111:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1111 |                 if (str8icmp(m, 'e', 'x', 'p', 'i', 'r', 'e', 'a', 't')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1149:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1149 |                 if (str9icmp(m, 'p', 'e', 'x', 'p', 'i', 'r', 'e', 'a', 't')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1187:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1187 |                 if (str10icmp(m, 's', 'd', 'i', 'f', 'f', 's', 't', 'o', 'r', 'e')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1211:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1211 |                 if (str11icmp(m, 'i', 'n', 'c', 'r', 'b', 'y', 'f', 'l', 'o', 'a', 't')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1259:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1259 |                 if (str12icmp(m, 'h', 'i', 'n', 'c', 'r', 'b', 'y', 'f', 'l', 'o', 'a', 't')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1260 |                     r->type = MSG_REQ_REDIS_HINCRBYFLOAT;[0m
 1261 |                     break;[0m
 1262 |                 }[0m
 1263 | [0m
 1264 | [0m
 1265 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1268:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1268 |                 if (str13icmp(m, 'z', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 's', 'c', 'o', 'r', 'e')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1269 |                     r->type = MSG_REQ_REDIS_ZRANGEBYSCORE;[0m
 1270 |                     break;[0m
 1271 |                 }[0m
 1272 | [0m
 1273 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1276:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1276 |                 if (str14icmp(m, 'z', 'r', 'e', 'm', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 'l', 'e', 'x')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1277 |                     r->type = MSG_REQ_REDIS_ZREMRANGEBYLEX;[0m
 1278 |                     break;[0m
 1279 |                 }[0m
 1280 | [0m
 1281 |                 if (str14icmp(m, 'z', 'r', 'e', 'v', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 'l', 'e', 'x')) {[0m
 1282 |                     r->type = MSG_REQ_REDIS_ZREVRANGEBYLEX;[0m
 1283 |                     break;[0m
 1284 |                 }[0m
 1285 |                 if (str14icmp(m, 'g', 'e', 'o', 's', 'e', 'a', 'r', 'c', 'h', 's', 't', 'o', 'r', 'e')) {[0m
 1286 |                     r->type = MSG_REQ_REDIS_GEOSEARCHSTORE;[0m
 1287 |                     break;[0m
 1288 |                 }[0m
 1289 | [0m
 1290 | [0m
 1291 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1294:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1294 |                 if (str15icmp(m, 'z', 'r', 'e', 'm', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 'r', 'a', 'n', 'k')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1295 |                     r->type = MSG_REQ_REDIS_ZREMRANGEBYRANK;[0m
 1296 |                     break;[0m
 1297 |                 }[0m
 1298 | [0m
 1299 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1302:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1302 |                 if (str16icmp(m, 'z', 'r', 'e', 'm', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 's', 'c', 'o', 'r', 'e')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1303 |                     r->type = MSG_REQ_REDIS_ZREMRANGEBYSCORE;[0m
 1304 |                     break;[0m
 1305 |                 }[0m
 1306 | [0m
 1307 |                 if (str16icmp(m, 'z', 'r', 'e', 'v', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 's', 'c', 'o', 'r', 'e')) {[0m
 1308 |                     r->type = MSG_REQ_REDIS_ZREVRANGEBYSCORE;[0m
 1309 |                     break;[0m
 1310 |                 }[0m
 1311 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1314:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1314 |                 if (str17icmp(m, 'g', 'e', 'o', 'r', 'a', 'd', 'i', 'u', 's', 'b', 'y', 'm', 'e', 'm', 'b', 'e', 'r')) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1315 |                     r->type = MSG_REQ_REDIS_GEORADIUSBYMEMBER;[0m
 1316 |                     break;[0m
 1317 |                 }[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:1320:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1320 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc_redis.c:1334:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1334 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1336:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1336 |                 if (redis_argz(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1357:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1357 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1363:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1363 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1392:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1392 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1393 |             case LF:[0m
 1394 |                 state = SW_KEY;[0m
 1395 |                 break;[0m
 1396 | [0m
 1397 |             default:[0m
 1398 |                 goto error;[0m
 1399 |             }[0m
 1400 | [0m
 1401 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:1394:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1394 |                 state = SW_KEY;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1395 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1398:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1398 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1404:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1404 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1438:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1438 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1440:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1440 |                 if (redis_arg0(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1487:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1487 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1493:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1493 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1515:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1515 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1516 |             case LF:[0m
 1517 |                 state = SW_ARG1;[0m
 1518 |                 break;[0m
 1519 | [0m
 1520 |             default:[0m
 1521 |                 goto error;[0m
 1522 |             }[0m
 1523 | [0m
 1524 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:1517:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1517 |                 state = SW_ARG1;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1518 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1521:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1521 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1527:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1527 |             m = p + r->rlen;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1547:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1547 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1549:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1549 |                 if (redis_arg1(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1586:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1586 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1592:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1592 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1614:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1614 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1615 |             case LF:[0m
 1616 |                 state = SW_ARG2;[0m
 1617 |                 break;[0m
 1618 | [0m
 1619 |             default:[0m
 1620 |                 goto error;[0m
 1621 |             }[0m
 1622 | [0m
 1623 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:1616:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1616 |                 state = SW_ARG2;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1617 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1620:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1620 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1626:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1626 |             if (r->token == NULL && redis_argeval(r)) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1695:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1695 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1697:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1697 |                 if (redis_arg2(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mnc_redis.c:1724:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1724 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1730:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1730 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1752:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1752 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1753 |             case LF:[0m
 1754 |                 state = SW_ARG3;[0m
 1755 |                 break;[0m
 1756 | [0m
 1757 |             default:[0m
 1758 |                 goto error;[0m
 1759 |             }[0m
 1760 | [0m
 1761 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:1754:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1754 |                 state = SW_ARG3;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1755 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1758:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1758 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1764:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1764 |             m = p + r->rlen;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1783:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1783 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1785:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1785 |                 if (redis_arg3(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1786 |                     if (r->rnarg != 0) {[0m
 1787 |                         goto error;[0m
 1788 |                     }[0m
 1789 |                     goto done;[0m
 1790 |                 } else if (redis_argn(r)) {[0m
 1791 |                     if (r->rnarg == 0) {[0m
 1792 |                         goto done;[0m
 1793 |                     }[0m
 1794 |                     state = SW_ARGN_LEN;[0m
 1795 |                 } else {[0m
 1796 |                     goto error;[0m
 1797 |                 }[0m
 1798 | [0m
 1799 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1802:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1802 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1808:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1808 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1830:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1830 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1831 |             case LF:[0m
 1832 |                 state = SW_ARGN;[0m
 1833 |                 break;[0m
 1834 | [0m
 1835 |             default:[0m
 1836 |                 goto error;[0m
 1837 |             }[0m
 1838 | [0m
 1839 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:1832:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1832 |                 state = SW_ARGN;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1833 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1836:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1836 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1842:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1842 |             m = p + r->rlen;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1861:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1861 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:1863:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1863 |                 if (redis_argn(r) || redis_argeval(r) || redis_nokey(r)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1864 |                     if (r->rnarg == 0) {[0m
 1865 |                         goto done;[0m
 1866 |                     }[0m
 1867 |                     state = SW_ARGN_LEN;[0m
 1868 |                 } else {[0m
 1869 |                     goto error;[0m
 1870 |                 }[0m
 1871 | [0m
 1872 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:1875:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1875 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:1883:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1883 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mnc_redis.c:2009:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2009 |             r->type = MSG_UNKNOWN;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:2015:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2015 |                 p = p - 1; /* go back by 1 byte */[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2016 |                 r->type = MSG_RSP_REDIS_STATUS;[0m
 2017 |                 state = SW_STATUS;[0m
 2018 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2021:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2021 |                 r->type = MSG_RSP_REDIS_ERROR;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2022 |                 p = p - 1; /* go back by 1 byte */[0m
 2023 |                 state = SW_ERROR;[0m
 2024 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2027:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2027 |                 r->type = MSG_RSP_REDIS_INTEGER;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2028 |                 r->integer = 0;[0m
 2029 |                 state = SW_INTEGER_START;[0m
 2030 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2033:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2033 |                 r->type = MSG_RSP_REDIS_BULK;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2034 |                 p = p - 1; /* go back by 1 byte */[0m
 2035 |                 state = SW_BULK;[0m
 2036 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2039:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2039 |                 r->type = MSG_RSP_REDIS_MULTIBULK;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2040 |                 p = p - 1; /* go back by 1 byte */[0m
 2041 |                 state = SW_MULTIBULK;[0m
 2042 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2045:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2045 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:2052:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2052 |             state = SW_RUNTO_CRLF;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2053 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2056:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2056 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:2075:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2075 |                     if (str4cmp(m, '-', 'E', 'R', 'R')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2076 |                         r->type = MSG_RSP_REDIS_ERROR_ERR;[0m
 2077 |                         break;[0m
 2078 |                     }[0m
 2079 | [0m
 2080 |                     /* -OOM command not allowed when used memory > 'maxmemory'.\r\n */[0m
 2081 |                     if (str4cmp(m, '-', 'O', 'O', 'M')) {[0m
 2082 |                         r->type = MSG_RSP_REDIS_ERROR_OOM;[0m
 2083 |                         break;[0m
 2084 |                     }[0m
 2085 | [0m
 2086 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_redis.c:2090:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2090 |                     if (str5cmp(m, '-', 'B', 'U', 'S', 'Y')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2091 |                         r->type = MSG_RSP_REDIS_ERROR_BUSY;[0m
 2092 |                         break;[0m
 2093 |                     }[0m
 2094 | [0m
 2095 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_redis.c:2099:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2099 |                     if (str7cmp(m, '-', 'N', 'O', 'A', 'U', 'T', 'H')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2100 |                         r->type = MSG_RSP_REDIS_ERROR_NOAUTH;[0m
 2101 |                         break;[0m
 2102 |                     }[0m
 2103 | [0m
 2104 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_redis.c:2108:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2108 |                     if (str8cmp(m, '-', 'L', 'O', 'A', 'D', 'I', 'N', 'G')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m[1mnc_redis.c:2129:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2129 |                     if (str9cmp(m, '-', 'N', 'O', 'S', 'C', 'R', 'I', 'P', 'T')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2130 |                         r->type = MSG_RSP_REDIS_ERROR_NOSCRIPT;[0m
 2131 |                         break;[0m
 2132 |                     }[0m
 2133 | [0m
 2134 |                     /* -READONLY You can't write against a read only slave.\r\n */[0m
 2135 |                     if (str9cmp(m, '-', 'R', 'E', 'A', 'D', 'O', 'N', 'L', 'Y')) {[0m
 2136 |                         r->type = MSG_RSP_REDIS_ERROR_READONLY;[0m
 2137 |                         break;[0m
 2138 |                     }[0m
 2139 | [0m
 2140 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_redis.c:2144:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2144 |                     if (str10cmp(m, '-', 'W', 'R', 'O', 'N', 'G', 'T', 'Y', 'P', 'E')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2145 |                         r->type = MSG_RSP_REDIS_ERROR_WRONGTYPE;[0m
 2146 |                         break;[0m
 2147 |                     }[0m
 2148 | [0m
 2149 |                     /* -EXECABORT Transaction discarded because of previous errors.\r\n" */[0m
 2150 |                     if (str10cmp(m, '-', 'E', 'X', 'E', 'C', 'A', 'B', 'O', 'R', 'T')) {[0m
 2151 |                         r->type = MSG_RSP_REDIS_ERROR_EXECABORT;[0m
 2152 |                         break;[0m
 2153 |                     }[0m
 2154 | [0m
 2155 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_redis.c:2159:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2159 |                     if (str11cmp(m, '-', 'M', 'A', 'S', 'T', 'E', 'R', 'D', 'O', 'W', 'N')) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2160 |                         r->type = MSG_RSP_REDIS_ERROR_MASTERDOWN;[0m
 2161 |                         break;[0m
 2162 |                     }[0m
 2163 | [0m
 2164 |                     /* -NOREPLICAS Not enough good slaves to write.\r\n */[0m
 2165 |                     if (str11cmp(m, '-', 'N', 'O', 'R', 'E', 'P', 'L', 'I', 'C', 'A', 'S')) {[0m
 2166 |                         r->type = MSG_RSP_REDIS_ERROR_NOREPLICAS;[0m
 2167 |                         break;[0m
 2168 |                     }[0m
 2169 | [0m
 2170 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mnc_redis.c:2183:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2183 |             if (ch == CR) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2184 |                 ASSERT(r->rnarg > 0);[0m
 2185 |                 r->rnarg--;[0m
 2186 |                 state = SW_MULTIBULK_ARGN_LF;[0m
 2187 |             }[0m
 2188 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2191:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2191 |             if (ch == CR) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2192 |                 state = SW_ALMOST_DONE;[0m
 2193 |             } else if (ch == '-') {[0m
 2194 |                 ;[0m
 2195 |             } else if (isdigit(ch)) {[0m
 2196 |                 r->integer = r->integer * 10 + (uint32_t)(ch - '0');[0m
 2197 |             } else {[0m
 2198 |                 goto error;[0m
 2199 |             }[0m
 2200 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2203:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2203 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2204 |             case CR:[0m
 2205 |                 state = SW_ALMOST_DONE;[0m
 2206 |                 break;[0m
 2207 | [0m
 2208 |             default:[0m
 2209 |                 break;[0m
 2210 |             }[0m
 2211 | [0m
 2212 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2205:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2205 |                 state = SW_ALMOST_DONE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2206 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2209:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2209 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mnc_redis.c:2215:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2215 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2216 |             case LF:[0m
 2217 |                 /* rsp_end <- p */[0m
 2218 |                 goto done;[0m
 2219 | [0m
 2220 |             default:[0m
 2221 |                 goto error;[0m
 2222 |             }[0m
 2223 | [0m
 2224 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2218:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2218 |                 goto done;[0m
      | [0;1;32m                ^        
[0m      | [0;32m                {        ;} 
[0m[1mnc_redis.c:2221:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2221 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:2232:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2232 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:2257:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2257 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2258 |             case LF:[0m
 2259 |                 state = SW_BULK_ARG;[0m
 2260 |                 break;[0m
 2261 | [0m
 2262 |             default:[0m
 2263 |                 goto error;[0m
 2264 |             }[0m
 2265 | [0m
 2266 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2259:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2259 |                 state = SW_BULK_ARG;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2260 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2263:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2263 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:2269:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2269 |             m = p + r->rlen;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:2289:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2289 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2290 |             case LF:[0m
 2291 |                 goto done;[0m
 2292 | [0m
 2293 |             default:[0m
 2294 |                 goto error;[0m
 2295 |             }[0m
 2296 | [0m
 2297 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2291:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2291 |                 goto done;[0m
      | [0;1;32m                ^        
[0m      | [0;32m                {        ;} 
[0m[1mnc_redis.c:2294:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2294 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:2300:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2300 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:2348:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2348 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2349 |             case LF:[0m
 2350 |                 if (r->rnarg == 0) {[0m
 2351 |                     /* response is '*0\r\n' */[0m
 2352 |                     goto done;[0m
 2353 |                 }[0m
 2354 | [0m
 2355 |                 state = SW_MULTIBULK_ARGN_LEN;[0m
 2356 |                 break;[0m
 2357 | [0m
 2358 |             default:[0m
 2359 |                 goto error;[0m
 2360 |             }[0m
 2361 | [0m
 2362 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2350:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2350 |                 if (r->rnarg == 0) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2351 |                     /* response is '*0\r\n' */[0m
 2352 |                     goto done;[0m
 2353 |                 }[0m
 2354 | [0m
 2355 |                 state = SW_MULTIBULK_ARGN_LEN;[0m
 2356 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2359:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2359 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:2365:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2365 |             if (r->token == NULL) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:2434:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2434 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2435 |             case LF:[0m
 2436 |                 state = SW_MULTIBULK_ARGN;[0m
 2437 |                 break;[0m
 2438 | [0m
 2439 |             default:[0m
 2440 |                 goto error;[0m
 2441 |             }[0m
 2442 | [0m
 2443 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2436:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2436 |                 state = SW_MULTIBULK_ARGN;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2437 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2440:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2440 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:2446:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2446 |             m = p + r->rlen;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mnc_redis.c:2466:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2466 |             switch (ch) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 2467 |             case LF:[0m
 2468 |                 if (r->rnarg == 0) {[0m
 2469 |                     goto done;[0m
 2470 |                 }[0m
 2471 | [0m
 2472 |                 state = SW_MULTIBULK_ARGN_LEN;[0m
 2473 |                 break;[0m
 2474 | [0m
 2475 |             default:[0m
 2476 |                 goto error;[0m
 2477 |             }[0m
 2478 | [0m
 2479 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_redis.c:2468:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2468 |                 if (r->rnarg == 0) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 2469 |                     goto done;[0m
 2470 |                 }[0m
 2471 | [0m
 2472 |                 state = SW_MULTIBULK_ARGN_LEN;[0m
 2473 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnc_redis.c:2476:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2476 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mnc_redis.c:2484:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2484 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mnc_redis.c:2553:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2553 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mnc_redis.c:2593:9: [0m[0;1;35mwarning: [0m[1mValue stored to 'p' is never read [clang-analyzer-deadcode.DeadStores][0m
 2593 |         p = mbuf->pos + len;[0m
      | [0;1;32m        ^   ~~~~~~~~~~~~~~~
[0m[1mnc_redis.c:2593:9: [0m[0;1;36mnote: [0mValue stored to 'p' is never read[0m
 2593 |         p = mbuf->pos + len;[0m
      | [0;1;32m        ^   ~~~~~~~~~~~~~~~
[0m[1mnc_redis.c:2659:117: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2659 |         ASSERT(pr->type == MSG_REQ_REDIS_DEL || pr->type == MSG_REQ_REDIS_TOUCH || pr->type == MSG_REQ_REDIS_UNLINK);[0m
      | [0;1;32m                                                                                                                    ^
[0m      | [0;32m                                                                                                                    {
[0m[1mnc_redis.c:2680:47: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2680 |         ASSERT(pr->type == MSG_REQ_REDIS_MGET);[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                              {
[0m[1mnc_redis.c:2699:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2699 |         if (pr->type == MSG_REQ_REDIS_MSET) {       /* MSET segments */[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2700 |             mbuf = STAILQ_FIRST(&r->mhdr);[0m
 2701 |             r->mlen -= mbuf_length(mbuf);[0m
 2702 |             mbuf_rewind(mbuf);[0m
 2703 |         }[0m
 2704 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_redis.c:2712:9: [0m[0;1;35mwarning: [0m[1mValue stored to 'mbuf' is never read [clang-analyzer-deadcode.DeadStores][0m
 2712 |         mbuf = STAILQ_FIRST(&r->mhdr);[0m
      | [0;1;32m        ^
[0m[1mnc_redis.c:2712:9: [0m[0;1;36mnote: [0mValue stored to 'mbuf' is never read[0m
[1mnc_redis.c:2712:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2712 |         mbuf = STAILQ_FIRST(&r->mhdr);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2713 |         log_hexdump(LOG_ERR, mbuf->pos, mbuf_length(mbuf), "rsp fragment "[0m
 2714 |                     "with unknown type %d", r->type);[0m
 2715 |         pr->error = 1;[0m
 2716 |         pr->err = EINVAL;[0m
 2717 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_redis.c:2730:21: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2730 |     len = (uint32_t)nc_snprintf(printbuf, sizeof(printbuf), "$%d\r\n", keylen);[0m
      | [0;1;32m                    ^
[0m[1m../../src/nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_redis.c:2730:21: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2730 |     len = (uint32_t)nc_snprintf(printbuf, sizeof(printbuf), "$%d\r\n", keylen);[0m
      | [0;1;32m                    ^
[0m[1m../../src/nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_redis.c:2964:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2964 |         return redis_fragment_argx(r, nserver, frag_msgq, 2);[0m
      | [0;1;32m        ^                                                   
[0m      | [0;32m        {                                                   ;} 
[0m[1mnc_redis.c:2967:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2967 |         return NC_OK;[0m
      | [0;1;32m        ^           
[0m      | [0;32m        {           ;} 
[0m[1mnc_redis.c:2990:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2990 |         return msg_append(response, rsp_pong.data, rsp_pong.len);[0m
      | [0;1;32m        ^                                                       
[0m      | [0;32m        {                                                       ;} 
[0m[1mnc_redis.c:2993:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2993 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {
[0m 2994 |         return NC_ERROR;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mnc_redis.c:3065:17: [0m[0;1;35mwarning: [0m[1mValue stored to 'pr' during its initialization is never read [clang-analyzer-deadcode.DeadStores][0m
 3065 |     struct msg *pr = r->peer; /* peer response */[0m
      | [0;1;32m                ^~   ~~~~~~~
[0m[1mnc_redis.c:3065:17: [0m[0;1;36mnote: [0mValue stored to 'pr' during its initialization is never read[0m
 3065 |     struct msg *pr = r->peer; /* peer response */[0m
      | [0;1;32m                ^~   ~~~~~~~
[0m[1mnc_redis.c:3065:17: [0m[0;1;35mwarning: [0m[1munused variable 'pr' [clang-diagnostic-unused-variable][0m
 3065 |     struct msg *pr = r->peer; /* peer response */[0m
      | [0;1;32m                ^~
[0m[1mnc_redis.c:3076:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3076 |         return redis_post_coalesce_mget(r);[0m
      | [0;1;32m        ^                                 
[0m      | [0;32m        {                                 ;} 
[0m[1mnc_redis.c:3084:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3084 |         return redis_post_coalesce_mset(r);[0m
      | [0;1;32m        ^                                 
[0m      | [0;32m        {                                 ;} 
[0m[1mnc_redis.c:3087:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3087 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {;} 
[0m[1mnc_redis.c:3236:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3236 |         nc_memcpy(message, &rsp_buffer->start[1], copy_len);[0m
      | [0;1;32m        ^
[0m[1m../../src/nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m[1mnc_redis.c:3236:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3236 |         nc_memcpy(message, &rsp_buffer->start[1], copy_len);[0m
      | [0;1;32m        ^
[0m[1m../../src/nc_string.h:57:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_memcpy'[0m
   57 |     memcpy(_d, _c, (size_t)(_n))[0m
      | [0;1;32m    ^~~~~~
[0m148 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[51/54][203.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmp5ckb3i5c.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/src/nc_stats.c
[1mnc_stats.c:79:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   79 |         stm->value.counter = 0LL;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   80 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_stats.c:83:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   83 |         stm->value.counter = 0LL;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   84 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_stats.c:87:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   87 |         stm->value.timestamp = 0LL;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   88 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_stats.c:91:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   91 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {;} 
[0m[1mnc_stats.c:446:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  446 |     n = nc_snprintf(pos, room, "\"%.*s\":\"%.*s\", ", key->len, key->data,[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_stats.c:446:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  446 |     n = nc_snprintf(pos, room, "\"%.*s\":\"%.*s\", ", key->len, key->data,[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_stats.c:469:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  469 |     n = nc_snprintf(pos, room, "\"%.*s\":%"PRId64", ", key->len, key->data,[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_stats.c:469:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  469 |     n = nc_snprintf(pos, room, "\"%.*s\":%"PRId64", ", key->len, key->data,[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_stats.c:519:54: [0m[0;1;35mwarning: [0m[1mimplicit conversion changes signedness: 'uint64_t' (aka 'unsigned long') to 'int64_t' (aka 'long') [clang-diagnostic-sign-conversion][0m
  519 |     status = stats_add_num(st, &st->ntotal_conn_str, conn_ntotal_conn());[0m
      | [0;1;32m             ~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~
[0m[1mnc_stats.c:565:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  565 |     n = nc_snprintf(pos, room, "\"%.*s\": {", key->len, key->data);[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_stats.c:565:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  565 |     n = nc_snprintf(pos, room, "\"%.*s\": {", key->len, key->data);[0m
      | [0;1;32m        ^
[0m[1m./nc_string.h:95:5: [0m[0;1;36mnote: [0mexpanded from macro 'nc_snprintf'[0m
   95 |     snprintf((char *)(_s), (size_t)(_n), __VA_ARGS__)[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mnc_stats.c:589:30: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  589 |         ASSERT(pos[1] == ' ');[0m
      | [0;1;32m                             ^
[0m      | [0;32m                             {
[0m  590 |         pos[0] = '}';[0m
  591 |         pos[1] = ',';[0m
  592 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_stats.c:595:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  595 |         if (buf->len == buf->size) {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  596 |             return NC_ERROR;[0m
  597 |         }[0m
  598 |         /* overwrite the last byte and add a new byte */[0m
  599 |         ASSERT(pos[1] == ',');[0m
  600 |         pos[1] = '}';[0m
  601 |         pos[2] = ',';[0m
  602 |         buf->len += 1;[0m
  603 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mnc_stats.c:606:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  606 |         NOT_REACHED();[0m
      | [0;1;32m                     ^
[0m      | [0;32m                     {;} 
[0m[1mnc_stats.c:646:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  646 |             stm2->value.counter += stm1->value.counter;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  647 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_stats.c:650:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  650 |             stm2->value.counter += stm1->value.counter;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  651 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_stats.c:654:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  654 |             if (stm1->value.timestamp) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  655 |                 stm2->value.timestamp = stm1->value.timestamp;[0m
  656 |             }[0m
  657 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mnc_stats.c:660:26: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  660 |             NOT_REACHED();[0m
      | [0;1;32m                         ^
[0m      | [0;32m                         {;} 
[0m19 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[52/54][249.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpi7dnksm5.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/src/api.c
[1mapi.c:53:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |     if (ptr) free(ptr);[0m
      | [0;1;32m            ^          
[0m      | [0;32m             {
[0m[1mapi.c:63:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |     if (!str)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m   64 |         return NULL;[0m
      | [0;1;32m                    
[0m[1mapi.c:79:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |     if (!new_start) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mapi.c:81:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |     memset(new_start + (*end - *start), 0, *end - *start);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:81:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   81 |     memset(new_start + (*end - *start), 0, *end - *start);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:100:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |     if (*b_start == *b_pointer)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  101 |         return 1;[0m
      | [0;1;32m                 
[0m[1mapi.c:104:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |         if (!yaml_string_extend(a_start, a_pointer, a_end))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  105 |             return 0;[0m
      | [0;1;32m                     
[0m[1mapi.c:108:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  108 |     memcpy(*a_pointer, *b_start, *b_pointer - *b_start);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:108:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  108 |     memcpy(*a_pointer, *b_start, *b_pointer - *b_start);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:123:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |     if ((char *)*end - (char *)*start >= INT_MAX / 2)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  124 |         return 0;[0m
      | [0;1;32m                 
[0m[1mapi.c:128:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |     if (!new_start) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mapi.c:150:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |         if (!new_start) return 0;[0m
      | [0;1;32m                       ^         
[0m      | [0;32m                        {
[0m[1mapi.c:162:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  162 |             memmove(*start, *head, (char *)*tail - (char *)*head);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mapi.c:162:13: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  162 |             memmove(*start, *head, (char *)*tail - (char *)*head);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mapi.c:181:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  181 |     memset(parser, 0, sizeof(yaml_parser_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:181:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  181 |     memset(parser, 0, sizeof(yaml_parser_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:182:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |     if (!BUFFER_INIT(parser, parser->raw_buffer, INPUT_RAW_BUFFER_SIZE))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  183 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:184:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |     if (!BUFFER_INIT(parser, parser->buffer, INPUT_BUFFER_SIZE))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  185 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:186:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |     if (!QUEUE_INIT(parser, parser->tokens, INITIAL_QUEUE_SIZE, yaml_token_t*))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  187 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:188:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |     if (!STACK_INIT(parser, parser->indents, int*))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  189 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:190:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |     if (!STACK_INIT(parser, parser->simple_keys, yaml_simple_key_t*))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  191 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:192:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |     if (!STACK_INIT(parser, parser->states, yaml_parser_state_t*))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  193 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:194:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |     if (!STACK_INIT(parser, parser->marks, yaml_mark_t*))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  195 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:196:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |     if (!STACK_INIT(parser, parser->tag_directives, yaml_tag_directive_t*))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  197 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:241:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  241 |     memset(parser, 0, sizeof(yaml_parser_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:241:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  241 |     memset(parser, 0, sizeof(yaml_parser_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:264:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  264 |     memcpy(buffer, parser->input.string.current, size);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:264:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  264 |     memcpy(buffer, parser->input.string.current, size);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:359:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  359 |     memset(emitter, 0, sizeof(yaml_emitter_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:359:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  359 |     memset(emitter, 0, sizeof(yaml_emitter_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:360:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |     if (!BUFFER_INIT(emitter, emitter->buffer, OUTPUT_BUFFER_SIZE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  361 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:362:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |     if (!BUFFER_INIT(emitter, emitter->raw_buffer, OUTPUT_RAW_BUFFER_SIZE))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  363 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:364:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |     if (!STACK_INIT(emitter, emitter->states, yaml_emitter_state_t*))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  365 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:366:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |     if (!QUEUE_INIT(emitter, emitter->events, INITIAL_QUEUE_SIZE, yaml_event_t*))[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  367 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:368:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |     if (!STACK_INIT(emitter, emitter->indents, int*))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  369 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:370:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |     if (!STACK_INIT(emitter, emitter->tag_directives, yaml_tag_directive_t*))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  371 |         goto error;[0m
      | [0;1;32m                   
[0m[1mapi.c:412:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  412 |     memset(emitter, 0, sizeof(yaml_emitter_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:412:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  412 |     memset(emitter, 0, sizeof(yaml_emitter_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:426:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  426 |         memcpy(emitter->output.string.buffer[0m
      | [0;1;32m        ^~~~~~
[0m[1mapi.c:426:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  426 |         memcpy(emitter->output.string.buffer[0m
      | [0;1;32m        ^~~~~~
[0m[1mapi.c:435:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  435 |     memcpy(emitter->output.string.buffer[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:435:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  435 |     memcpy(emitter->output.string.buffer[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:591:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  591 |             yaml_free(token->data.tag_directive.handle);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  592 |             yaml_free(token->data.tag_directive.prefix);[0m
  593 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:596:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  596 |             yaml_free(token->data.alias.value);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  597 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:600:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  600 |             yaml_free(token->data.anchor.value);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  601 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:604:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  604 |             yaml_free(token->data.tag.handle);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  605 |             yaml_free(token->data.tag.suffix);[0m
  606 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:609:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  609 |             yaml_free(token->data.scalar.value);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  610 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:613:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  613 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mapi.c:616:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  616 |     memset(token, 0, sizeof(yaml_token_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:616:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  616 |     memset(token, 0, sizeof(yaml_token_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:646:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  646 |         if (!width) return 0;[0m
      | [0;1;32m                   ^         
[0m      | [0;32m                    {
[0m[1mapi.c:647:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |         if (pointer+width > end) return 0;[0m
      | [0;1;32m                                ^         
[0m      | [0;32m                                 {
[0m[1mapi.c:650:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |             if ((octet & 0xC0) != 0x80) return 0;[0m
      | [0;1;32m                                       ^         
[0m      | [0;32m                                        {
[0m[1mapi.c:656:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |             (width == 4 && value >= 0x10000))) return 0;[0m
      | [0;1;32m                                              ^         
[0m      | [0;32m                                               {
[0m[1mapi.c:676:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  676 |     STREAM_START_EVENT_INIT(*event, encoding, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:552:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_START_EVENT_INIT'[0m
  552 |     (EVENT_INIT((event),YAML_STREAM_START_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:676:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  676 |     STREAM_START_EVENT_INIT(*event, encoding, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:552:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_START_EVENT_INIT'[0m
  552 |     (EVENT_INIT((event),YAML_STREAM_START_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:692:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  692 |     STREAM_END_EVENT_INIT(*event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:556:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_END_EVENT_INIT'[0m
  556 |     (EVENT_INIT((event),YAML_STREAM_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:692:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  692 |     STREAM_END_EVENT_INIT(*event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:556:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_END_EVENT_INIT'[0m
  556 |     (EVENT_INIT((event),YAML_STREAM_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:727:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  727 |         if (!version_directive_copy) goto error;[0m
      | [0;1;32m                                    ^           
[0m      | [0;32m                                     {
[0m[1mapi.c:734:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  734 |         if (!STACK_INIT(&context, tag_directives_copy, yaml_tag_directive_t*))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  735 |             goto error;[0m
      | [0;1;32m                       
[0m[1mapi.c:741:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |                         strlen((char *)tag_directive->handle)))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  742 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mapi.c:744:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |                         strlen((char *)tag_directive->prefix)))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  745 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mapi.c:748:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |             if (!value.handle || !value.prefix) goto error;[0m
      | [0;1;32m                                               ^           
[0m      | [0;32m                                                {
[0m[1mapi.c:749:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |             if (!PUSH(&context, tag_directives_copy, value))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  750 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mapi.c:756:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  756 |     DOCUMENT_START_EVENT_INIT(*event, version_directive_copy,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:560:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_START_EVENT_INIT'[0m
  560 |     (EVENT_INIT((event),YAML_DOCUMENT_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:756:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  756 |     DOCUMENT_START_EVENT_INIT(*event, version_directive_copy,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:560:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_START_EVENT_INIT'[0m
  560 |     (EVENT_INIT((event),YAML_DOCUMENT_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:787:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  787 |     DOCUMENT_END_EVENT_INIT(*event, implicit, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:567:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_END_EVENT_INIT'[0m
  567 |     (EVENT_INIT((event),YAML_DOCUMENT_END_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:787:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  787 |     DOCUMENT_END_EVENT_INIT(*event, implicit, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:567:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_END_EVENT_INIT'[0m
  567 |     (EVENT_INIT((event),YAML_DOCUMENT_END_EVENT,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:805:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |     if (!yaml_check_utf8(anchor, strlen((char *)anchor))) return 0;[0m
      | [0;1;32m                                                         ^         
[0m      | [0;32m                                                          {
[0m[1mapi.c:808:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |     if (!anchor_copy)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  809 |         return 0;[0m
      | [0;1;32m                 
[0m[1mapi.c:811:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  811 |     ALIAS_EVENT_INIT(*event, anchor_copy, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:571:6: [0m[0;1;36mnote: [0mexpanded from macro 'ALIAS_EVENT_INIT'[0m
  571 |     (EVENT_INIT((event),YAML_ALIAS_EVENT,(start_mark),(end_mark)),              \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:811:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  811 |     ALIAS_EVENT_INIT(*event, anchor_copy, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:571:6: [0m[0;1;36mnote: [0mexpanded from macro 'ALIAS_EVENT_INIT'[0m
  571 |     (EVENT_INIT((event),YAML_ALIAS_EVENT,(start_mark),(end_mark)),              \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:836:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  836 |         if (!yaml_check_utf8(anchor, strlen((char *)anchor))) goto error;[0m
      | [0;1;32m                                                             ^           
[0m      | [0;32m                                                              {
[0m[1mapi.c:838:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  838 |         if (!anchor_copy) goto error;[0m
      | [0;1;32m                         ^           
[0m      | [0;32m                          {
[0m[1mapi.c:842:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |         if (!yaml_check_utf8(tag, strlen((char *)tag))) goto error;[0m
      | [0;1;32m                                                       ^           
[0m      | [0;32m                                                        {
[0m[1mapi.c:844:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |         if (!tag_copy) goto error;[0m
      | [0;1;32m                      ^           
[0m      | [0;32m                       {
[0m[1mapi.c:851:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  851 |     if (!yaml_check_utf8(value, length)) goto error;[0m
      | [0;1;32m                                        ^           
[0m      | [0;32m                                         {
[0m[1mapi.c:853:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  853 |     if (!value_copy) goto error;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                     {
[0m[1mapi.c:854:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  854 |     memcpy(value_copy, value, length);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:854:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  854 |     memcpy(value_copy, value, length);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:857:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  857 |     SCALAR_EVENT_INIT(*event, anchor_copy, tag_copy, value_copy, length,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:857:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  857 |     SCALAR_EVENT_INIT(*event, anchor_copy, tag_copy, value_copy, length,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:576:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_EVENT_INIT'[0m
  576 |     (EVENT_INIT((event),YAML_SCALAR_EVENT,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:886:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  886 |         if (!yaml_check_utf8(anchor, strlen((char *)anchor))) goto error;[0m
      | [0;1;32m                                                             ^           
[0m      | [0;32m                                                              {
[0m[1mapi.c:888:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  888 |         if (!anchor_copy) goto error;[0m
      | [0;1;32m                         ^           
[0m      | [0;32m                          {
[0m[1mapi.c:892:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  892 |         if (!yaml_check_utf8(tag, strlen((char *)tag))) goto error;[0m
      | [0;1;32m                                                       ^           
[0m      | [0;32m                                                        {
[0m[1mapi.c:894:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |         if (!tag_copy) goto error;[0m
      | [0;1;32m                      ^           
[0m      | [0;32m                       {
[0m[1mapi.c:897:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  897 |     SEQUENCE_START_EVENT_INIT(*event, anchor_copy, tag_copy,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:897:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  897 |     SEQUENCE_START_EVENT_INIT(*event, anchor_copy, tag_copy,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:587:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_START_EVENT_INIT'[0m
  587 |     (EVENT_INIT((event),YAML_SEQUENCE_START_EVENT,(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:920:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  920 |     SEQUENCE_END_EVENT_INIT(*event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:920:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  920 |     SEQUENCE_END_EVENT_INIT(*event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:594:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_END_EVENT_INIT'[0m
  594 |     (EVENT_INIT((event),YAML_SEQUENCE_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:941:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  941 |         if (!yaml_check_utf8(anchor, strlen((char *)anchor))) goto error;[0m
      | [0;1;32m                                                             ^           
[0m      | [0;32m                                                              {
[0m[1mapi.c:943:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  943 |         if (!anchor_copy) goto error;[0m
      | [0;1;32m                         ^           
[0m      | [0;32m                          {
[0m[1mapi.c:947:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  947 |         if (!yaml_check_utf8(tag, strlen((char *)tag))) goto error;[0m
      | [0;1;32m                                                       ^           
[0m      | [0;32m                                                        {
[0m[1mapi.c:949:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |         if (!tag_copy) goto error;[0m
      | [0;1;32m                      ^           
[0m      | [0;32m                       {
[0m[1mapi.c:952:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  952 |     MAPPING_START_EVENT_INIT(*event, anchor_copy, tag_copy,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:952:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  952 |     MAPPING_START_EVENT_INIT(*event, anchor_copy, tag_copy,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:598:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_START_EVENT_INIT'[0m
  598 |     (EVENT_INIT((event),YAML_MAPPING_START_EVENT,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:975:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  975 |     MAPPING_END_EVENT_INIT(*event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:975:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  975 |     MAPPING_END_EVENT_INIT(*event, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:605:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_END_EVENT_INIT'[0m
  605 |     (EVENT_INIT((event),YAML_MAPPING_END_EVENT,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:546:6: [0m[0;1;36mnote: [0mexpanded from macro 'EVENT_INIT'[0m
  546 |     (memset(&(event), 0, sizeof(yaml_event_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:994:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  994 |             yaml_free(event->data.document_start.version_directive);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  995 |             for (tag_directive = event->data.document_start.tag_directives.start;[0m
  996 |                     tag_directive != event->data.document_start.tag_directives.end;[0m
  997 |                     tag_directive++) {[0m
  998 |                 yaml_free(tag_directive->handle);[0m
  999 |                 yaml_free(tag_directive->prefix);[0m
 1000 |             }[0m
 1001 |             yaml_free(event->data.document_start.tag_directives.start);[0m
 1002 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:1005:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1005 |             yaml_free(event->data.alias.anchor);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1006 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:1009:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1009 |             yaml_free(event->data.scalar.anchor);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1010 |             yaml_free(event->data.scalar.tag);[0m
 1011 |             yaml_free(event->data.scalar.value);[0m
 1012 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:1015:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1015 |             yaml_free(event->data.sequence_start.anchor);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1016 |             yaml_free(event->data.sequence_start.tag);[0m
 1017 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:1020:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1020 |             yaml_free(event->data.mapping_start.anchor);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1021 |             yaml_free(event->data.mapping_start.tag);[0m
 1022 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mapi.c:1025:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1025 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mapi.c:1028:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1028 |     memset(event, 0, sizeof(yaml_event_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:1028:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1028 |     memset(event, 0, sizeof(yaml_event_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:1064:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1064 |     if (!STACK_INIT(&context, nodes, yaml_node_t*)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mapi.c:1068:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1068 |         if (!version_directive_copy) goto error;[0m
      | [0;1;32m                                    ^           
[0m      | [0;32m                                     {
[0m[1mapi.c:1075:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1075 |         if (!STACK_INIT(&context, tag_directives_copy, yaml_tag_directive_t*))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1076 |             goto error;[0m
      | [0;1;32m                       
[0m[1mapi.c:1082:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |                         strlen((char *)tag_directive->handle)))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1083 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mapi.c:1085:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1085 |                         strlen((char *)tag_directive->prefix)))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1086 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mapi.c:1089:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1089 |             if (!value.handle || !value.prefix) goto error;[0m
      | [0;1;32m                                               ^           
[0m      | [0;32m                                                {
[0m[1mapi.c:1090:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1090 |             if (!PUSH(&context, tag_directives_copy, value))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1091 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mapi.c:1097:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1097 |     DOCUMENT_INIT(*document, nodes.start, nodes.end, version_directive_copy,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:615:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_INIT'[0m
  615 |     (memset(&(document), 0, sizeof(yaml_document_t)),                           \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:1097:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1097 |     DOCUMENT_INIT(*document, nodes.start, nodes.end, version_directive_copy,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:615:6: [0m[0;1;36mnote: [0mexpanded from macro 'DOCUMENT_INIT'[0m
  615 |     (memset(&(document), 0, sizeof(yaml_document_t)),                           \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:1134:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1134 |                 yaml_free(node.data.scalar.value);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1135 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mapi.c:1137:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1137 |                 STACK_DEL(&context, node.data.sequence.items);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1138 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1m./yaml_private.h:432:5: [0m[0;1;36mnote: [0mexpanded from macro 'STACK_DEL'[0m
  432 |     (yaml_free((stack).start),                                                  \[0m
      | [0;1;32m    ^
[0m[1mapi.c:1140:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1140 |                 STACK_DEL(&context, node.data.mapping.pairs);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1141 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1m./yaml_private.h:432:5: [0m[0;1;36mnote: [0mexpanded from macro 'STACK_DEL'[0m
  432 |     (yaml_free((stack).start),                                                  \[0m
      | [0;1;32m    ^
[0m[1mapi.c:1157:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1157 |     memset(document, 0, sizeof(yaml_document_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:1157:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1157 |     memset(document, 0, sizeof(yaml_document_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:1214:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1214 |     if (!yaml_check_utf8(tag, strlen((char *)tag))) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mapi.c:1216:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1216 |     if (!tag_copy) goto error;[0m
      | [0;1;32m                  ^           
[0m      | [0;32m                   {
[0m[1mapi.c:1222:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1222 |     if (!yaml_check_utf8(value, length)) goto error;[0m
      | [0;1;32m                                        ^           
[0m      | [0;32m                                         {
[0m[1mapi.c:1224:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1224 |     if (!value_copy) goto error;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                     {
[0m[1mapi.c:1225:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1225 |     memcpy(value_copy, value, length);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:1225:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1225 |     memcpy(value_copy, value, length);[0m
      | [0;1;32m    ^~~~~~
[0m[1mapi.c:1228:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1228 |     SCALAR_NODE_INIT(node, tag_copy, value_copy, length, style, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:640:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_NODE_INIT'[0m
  640 |     (NODE_INIT((node),YAML_SCALAR_NODE,(node_tag),(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:1228:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1228 |     SCALAR_NODE_INIT(node, tag_copy, value_copy, length, style, mark, mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:640:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_NODE_INIT'[0m
  640 |     (NODE_INIT((node),YAML_SCALAR_NODE,(node_tag),(start_mark),(end_mark)),     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:1229:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1229 |     if (!PUSH(&context, document->nodes, node)) goto error;[0m
      | [0;1;32m                                               ^           
[0m      | [0;32m                                                {
[0m[1mapi.c:1266:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1266 |     if (!yaml_check_utf8(tag, strlen((char *)tag))) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mapi.c:1268:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1268 |     if (!tag_copy) goto error;[0m
      | [0;1;32m                  ^           
[0m      | [0;32m                   {
[0m[1mapi.c:1270:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1270 |     if (!STACK_INIT(&context, items, yaml_node_item_t*)) goto error;[0m
      | [0;1;32m                                                        ^           
[0m      | [0;32m                                                         {
[0m[1mapi.c:1272:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1272 |     SEQUENCE_NODE_INIT(node, tag_copy, items.start, items.end,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:647:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_NODE_INIT'[0m
  647 |     (NODE_INIT((node),YAML_SEQUENCE_NODE,(node_tag),(start_mark),(end_mark)),   \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:1272:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1272 |     SEQUENCE_NODE_INIT(node, tag_copy, items.start, items.end,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:647:6: [0m[0;1;36mnote: [0mexpanded from macro 'SEQUENCE_NODE_INIT'[0m
  647 |     (NODE_INIT((node),YAML_SEQUENCE_NODE,(node_tag),(start_mark),(end_mark)),   \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:1274:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1274 |     if (!PUSH(&context, document->nodes, node)) goto error;[0m
      | [0;1;32m                                               ^           
[0m      | [0;32m                                                {
[0m[1mapi.c:1311:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1311 |     if (!yaml_check_utf8(tag, strlen((char *)tag))) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mapi.c:1313:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1313 |     if (!tag_copy) goto error;[0m
      | [0;1;32m                  ^           
[0m      | [0;32m                   {
[0m[1mapi.c:1315:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1315 |     if (!STACK_INIT(&context, pairs, yaml_node_pair_t*)) goto error;[0m
      | [0;1;32m                                                        ^           
[0m      | [0;32m                                                         {
[0m[1mapi.c:1317:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1317 |     MAPPING_NODE_INIT(node, tag_copy, pairs.start, pairs.end,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:655:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_NODE_INIT'[0m
  655 |     (NODE_INIT((node),YAML_MAPPING_NODE,(node_tag),(start_mark),(end_mark)),    \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:1317:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1317 |     MAPPING_NODE_INIT(node, tag_copy, pairs.start, pairs.end,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:655:6: [0m[0;1;36mnote: [0mexpanded from macro 'MAPPING_NODE_INIT'[0m
  655 |     (NODE_INIT((node),YAML_MAPPING_NODE,(node_tag),(start_mark),(end_mark)),    \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:632:6: [0m[0;1;36mnote: [0mexpanded from macro 'NODE_INIT'[0m
  632 |     (memset(&(node), 0, sizeof(yaml_node_t)),                                   \[0m
      | [0;1;32m     ^~~~~~
[0m[1mapi.c:1319:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1319 |     if (!PUSH(&context, document->nodes, node)) goto error;[0m
      | [0;1;32m                                               ^           
[0m      | [0;32m                                                {
[0m[1mapi.c:1352:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1352 |                 document->nodes.start[sequence-1].data.sequence.items, item))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1353 |         return 0;[0m
      | [0;1;32m                 
[0m[1mapi.c:1387:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1387 |                 document->nodes.start[mapping-1].data.mapping.pairs, pair))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 1388 |         return 0;[0m
      | [0;1;32m                 
[0m117 warnings generated.
234 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[53/54][298.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpnr6xgi9a.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/src/emitter.c
[1memitter.c:289:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |         if (!yaml_emitter_analyze_event(emitter, emitter->events.head))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  290 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:291:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |         if (!yaml_emitter_state_machine(emitter, emitter->events.head))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  292 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:315:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |     if (QUEUE_EMPTY(emitter, emitter->events))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  316 |         return 1;[0m
      | [0;1;32m                 
[0m[1memitter.c:320:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  320 |             accumulate = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  321 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1memitter.c:323:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  323 |             accumulate = 2;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  324 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1memitter.c:326:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  326 |             accumulate = 3;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  327 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1memitter.c:329:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |             return 0;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1memitter.c:332:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |     if (emitter->events.tail - emitter->events.head > accumulate)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  333 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:342:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  342 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1memitter.c:348:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  348 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1memitter.c:350:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  350 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1memitter.c:352:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |         if (!level)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  353 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:373:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |             if (allow_duplicates)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  374 |                 return 1;[0m
      | [0;1;32m                         
[0m[1memitter.c:387:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |     if (!PUSH(emitter, emitter->tag_directives, copy))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  388 |         goto error;[0m
      | [0;1;32m                   
[0m[1memitter.c:406:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |     if (!PUSH(emitter, emitter->indents, emitter->indent))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  407 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:429:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  429 |             return yaml_emitter_emit_stream_start(emitter, event);[0m
      | [0;1;32m            ^                                                    
[0m      | [0;32m            {                                                    ;} 
[0m[1memitter.c:432:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  432 |             return yaml_emitter_emit_document_start(emitter, event, 1);[0m
      | [0;1;32m            ^                                                         
[0m      | [0;32m            {                                                         ;} 
[0m[1memitter.c:435:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  435 |             return yaml_emitter_emit_document_start(emitter, event, 0);[0m
      | [0;1;32m            ^                                                         
[0m      | [0;32m            {                                                         ;} 
[0m[1memitter.c:438:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  438 |             return yaml_emitter_emit_document_content(emitter, event);[0m
      | [0;1;32m            ^                                                        
[0m      | [0;32m            {                                                        ;} 
[0m[1memitter.c:441:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  441 |             return yaml_emitter_emit_document_end(emitter, event);[0m
      | [0;1;32m            ^                                                    
[0m      | [0;32m            {                                                    ;} 
[0m[1memitter.c:444:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  444 |             return yaml_emitter_emit_flow_sequence_item(emitter, event, 1);[0m
      | [0;1;32m            ^                                                             
[0m      | [0;32m            {                                                             ;} 
[0m[1memitter.c:447:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  447 |             return yaml_emitter_emit_flow_sequence_item(emitter, event, 0);[0m
      | [0;1;32m            ^                                                             
[0m      | [0;32m            {                                                             ;} 
[0m[1memitter.c:450:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  450 |             return yaml_emitter_emit_flow_mapping_key(emitter, event, 1);[0m
      | [0;1;32m            ^                                                           
[0m      | [0;32m            {                                                           ;} 
[0m[1memitter.c:453:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  453 |             return yaml_emitter_emit_flow_mapping_key(emitter, event, 0);[0m
      | [0;1;32m            ^                                                           
[0m      | [0;32m            {                                                           ;} 
[0m[1memitter.c:456:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  456 |             return yaml_emitter_emit_flow_mapping_value(emitter, event, 1);[0m
      | [0;1;32m            ^                                                             
[0m      | [0;32m            {                                                             ;} 
[0m[1memitter.c:459:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  459 |             return yaml_emitter_emit_flow_mapping_value(emitter, event, 0);[0m
      | [0;1;32m            ^                                                             
[0m      | [0;32m            {                                                             ;} 
[0m[1memitter.c:462:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  462 |             return yaml_emitter_emit_block_sequence_item(emitter, event, 1);[0m
      | [0;1;32m            ^                                                              
[0m      | [0;32m            {                                                              ;} 
[0m[1memitter.c:465:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  465 |             return yaml_emitter_emit_block_sequence_item(emitter, event, 0);[0m
      | [0;1;32m            ^                                                              
[0m      | [0;32m            {                                                              ;} 
[0m[1memitter.c:468:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  468 |             return yaml_emitter_emit_block_mapping_key(emitter, event, 1);[0m
      | [0;1;32m            ^                                                            
[0m      | [0;32m            {                                                            ;} 
[0m[1memitter.c:471:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  471 |             return yaml_emitter_emit_block_mapping_key(emitter, event, 0);[0m
      | [0;1;32m            ^                                                            
[0m      | [0;32m            {                                                            ;} 
[0m[1memitter.c:474:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  474 |             return yaml_emitter_emit_block_mapping_value(emitter, event, 1);[0m
      | [0;1;32m            ^                                                              
[0m      | [0;32m            {                                                              ;} 
[0m[1memitter.c:477:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  477 |             return yaml_emitter_emit_block_mapping_value(emitter, event, 0);[0m
      | [0;1;32m            ^                                                              
[0m      | [0;32m            {                                                              ;} 
[0m[1memitter.c:480:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  480 |             return yaml_emitter_set_emitter_error(emitter,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  481 |                     "expected nothing after STREAM-END");[0m
      | [0;1;32m                                                        
[0m      | [0;32m                                                        ;} 
[0m[1memitter.c:534:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  534 |             if (!yaml_emitter_write_bom(emitter))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  535 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:567:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |                         *event->data.document_start.version_directive))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  568 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:574:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  574 |             if (!yaml_emitter_analyze_tag_directive(emitter, *tag_directive))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  575 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:576:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  576 |             if (!yaml_emitter_append_tag_directive(emitter, *tag_directive, 0))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  577 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:582:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |             if (!yaml_emitter_append_tag_directive(emitter, *tag_directive, 1))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  583 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:596:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |             if (!yaml_emitter_write_indicator(emitter, "...", 1, 0, 0))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  597 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:598:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  598 |             if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  599 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:605:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |             if (!yaml_emitter_write_indicator(emitter, "%YAML", 1, 0, 0))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  606 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:608:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  608 |                 if (!yaml_emitter_write_indicator(emitter, "1.1", 1, 0, 0))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  609 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:612:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |                 if (!yaml_emitter_write_indicator(emitter, "1.2", 1, 0, 0))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  613 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:615:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  615 |             if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  616 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:625:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  625 |                 if (!yaml_emitter_write_indicator(emitter, "%TAG", 1, 0, 0))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  626 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:628:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |                             strlen((char *)tag_directive->handle)))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  629 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:631:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |                             strlen((char *)tag_directive->prefix), 1))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  632 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:633:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  633 |                 if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  634 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:643:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  643 |             if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  644 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:645:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |             if (!yaml_emitter_write_indicator(emitter, "---", 1, 0, 0))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  646 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:648:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |                 if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  649 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:668:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  668 |             if (!yaml_emitter_write_indicator(emitter, "...", 1, 0, 0))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  669 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:671:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |             if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  672 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:674:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |         if (!yaml_emitter_flush(emitter))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  675 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:694:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  694 |     if (!PUSH(emitter, emitter->states, YAML_EMIT_DOCUMENT_END_STATE))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  695 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:710:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  710 |         if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  711 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:713:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |             if (!yaml_emitter_write_indicator(emitter, "...", 1, 0, 0))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  714 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:716:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  716 |             if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  717 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:719:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  719 |         else if (!emitter->open_ended)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  720 |             emitter->open_ended = 1;[0m
      | [0;1;32m                                    
[0m[1memitter.c:721:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  721 |         if (!yaml_emitter_flush(emitter))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  722 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:751:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |         if (!yaml_emitter_write_indicator(emitter, "[", 1, 1, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  752 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:753:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |         if (!yaml_emitter_increase_indent(emitter, 1, 0))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  754 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:763:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  763 |             if (!yaml_emitter_write_indicator(emitter, ",", 0, 0, 0))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  764 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:765:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |             if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  766 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:768:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  768 |         if (!yaml_emitter_write_indicator(emitter, "]", 0, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  769 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:776:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  776 |         if (!yaml_emitter_write_indicator(emitter, ",", 0, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  777 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:781:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |         if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  782 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:784:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |     if (!PUSH(emitter, emitter->states, YAML_EMIT_FLOW_SEQUENCE_ITEM_STATE))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  785 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:800:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |         if (!yaml_emitter_write_indicator(emitter, "{", 1, 1, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  801 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:802:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  802 |         if (!yaml_emitter_increase_indent(emitter, 1, 0))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  803 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:812:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |             if (!yaml_emitter_write_indicator(emitter, ",", 0, 0, 0))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  813 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:814:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |             if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  815 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:817:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  817 |         if (!yaml_emitter_write_indicator(emitter, "}", 0, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  818 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:825:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  825 |         if (!yaml_emitter_write_indicator(emitter, ",", 0, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  826 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:829:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |         if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  830 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:836:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  836 |                     YAML_EMIT_FLOW_MAPPING_SIMPLE_VALUE_STATE))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  837 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:843:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  843 |         if (!yaml_emitter_write_indicator(emitter, "?", 1, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  844 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:846:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |                     YAML_EMIT_FLOW_MAPPING_VALUE_STATE))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  847 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:862:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  862 |         if (!yaml_emitter_write_indicator(emitter, ":", 0, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  863 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:867:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  867 |             if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  868 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:870:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |         if (!yaml_emitter_write_indicator(emitter, ":", 1, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  871 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:873:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  873 |     if (!PUSH(emitter, emitter->states, YAML_EMIT_FLOW_MAPPING_KEY_STATE))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  874 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:889:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  889 |                     (emitter->mapping_context && !emitter->indention)))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  890 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:901:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  901 |     if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  902 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:903:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  903 |     if (!yaml_emitter_write_indicator(emitter, "-", 1, 0, 1))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  904 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:906:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  906 |                 YAML_EMIT_BLOCK_SEQUENCE_ITEM_STATE))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  907 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:922:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  922 |         if (!yaml_emitter_increase_indent(emitter, 0, 0))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  923 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:934:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  934 |     if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  935 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:940:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |                     YAML_EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  941 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:947:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  947 |         if (!yaml_emitter_write_indicator(emitter, "?", 1, 0, 1))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  948 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:950:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  950 |                     YAML_EMIT_BLOCK_MAPPING_VALUE_STATE))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  951 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:966:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  966 |         if (!yaml_emitter_write_indicator(emitter, ":", 0, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  967 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:970:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  970 |         if (!yaml_emitter_write_indent(emitter))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  971 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:972:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |         if (!yaml_emitter_write_indicator(emitter, ":", 1, 0, 1))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  973 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:976:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  976 |                 YAML_EMIT_BLOCK_MAPPING_KEY_STATE))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  977 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:998:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  998 |             return yaml_emitter_emit_alias(emitter, event);[0m
      | [0;1;32m            ^                                             
[0m      | [0;32m            {                                             ;} 
[0m[1memitter.c:1001:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1001 |             return yaml_emitter_emit_scalar(emitter, event);[0m
      | [0;1;32m            ^                                              
[0m      | [0;32m            {                                              ;} 
[0m[1memitter.c:1004:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1004 |             return yaml_emitter_emit_sequence_start(emitter, event);[0m
      | [0;1;32m            ^                                                      
[0m      | [0;32m            {                                                      ;} 
[0m[1memitter.c:1007:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1007 |             return yaml_emitter_emit_mapping_start(emitter, event);[0m
      | [0;1;32m            ^                                                     
[0m      | [0;32m            {                                                     ;} 
[0m[1memitter.c:1010:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1010 |             return yaml_emitter_set_emitter_error(emitter,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1011 |                     "expected SCALAR, SEQUENCE-START, MAPPING-START, or ALIAS");[0m
      | [0;1;32m                                                                               
[0m      | [0;32m                                                                               ;} 
[0m[1memitter.c:1024:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1024 |     if (!yaml_emitter_process_anchor(emitter))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1025 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1026:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1026 |     if (emitter->simple_key_context)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1027 |         if (!PUT(emitter, ' ')) return 0;[0m
      | [0;1;32m                                         
[0m[1memitter.c:1027:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |         if (!PUT(emitter, ' ')) return 0;[0m
      | [0;1;32m                               ^         
[0m      | [0;32m                                {
[0m[1memitter.c:1040:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |     if (!yaml_emitter_select_scalar_style(emitter, event))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1041 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1042:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1042 |     if (!yaml_emitter_process_anchor(emitter))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1043 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1044:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1044 |     if (!yaml_emitter_process_tag(emitter))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1045 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1046:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |     if (!yaml_emitter_increase_indent(emitter, 1, 0))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1047 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1048:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1048 |     if (!yaml_emitter_process_scalar(emitter))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1049 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1063:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1063 |     if (!yaml_emitter_process_anchor(emitter))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1064 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1065:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1065 |     if (!yaml_emitter_process_tag(emitter))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1066 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1087:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1087 |     if (!yaml_emitter_process_anchor(emitter))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1088 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1089:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1089 |     if (!yaml_emitter_process_tag(emitter))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1090 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1121:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |     if (emitter->events.tail - emitter->events.head < 2)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1122 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1135:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1135 |     if (emitter->events.tail - emitter->events.head < 2)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1136 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1155:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1155 |             length += emitter->anchor_data.anchor_length;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1156 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1memitter.c:1159:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1159 |             if (emitter->scalar_data.multiline)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1160 |                 return 0;[0m
 1161 |             length += emitter->anchor_data.anchor_length[0m
 1162 |                 + emitter->tag_data.handle_length[0m
 1163 |                 + emitter->tag_data.suffix_length[0m
 1164 |                 + emitter->scalar_data.length;[0m
 1165 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1memitter.c:1159:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1159 |             if (emitter->scalar_data.multiline)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1160 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:1168:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1168 |             if (!yaml_emitter_check_empty_sequence(emitter))[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1169 |                 return 0;[0m
 1170 |             length += emitter->anchor_data.anchor_length[0m
 1171 |                 + emitter->tag_data.handle_length[0m
 1172 |                 + emitter->tag_data.suffix_length;[0m
 1173 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1memitter.c:1168:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1168 |             if (!yaml_emitter_check_empty_sequence(emitter))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1169 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:1176:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1176 |             if (!yaml_emitter_check_empty_mapping(emitter))[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1177 |                 return 0;[0m
 1178 |             length += emitter->anchor_data.anchor_length[0m
 1179 |                 + emitter->tag_data.handle_length[0m
 1180 |                 + emitter->tag_data.suffix_length;[0m
 1181 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1memitter.c:1176:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1176 |             if (!yaml_emitter_check_empty_mapping(emitter))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1177 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:1184:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1184 |             return 0;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1memitter.c:1187:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1187 |     if (length > 128)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1188 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1209:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1209 |     if (style == YAML_ANY_SCALAR_STYLE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1210 |         style = YAML_PLAIN_SCALAR_STYLE;[0m
      | [0;1;32m                                        
[0m[1memitter.c:1212:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1212 |     if (emitter->canonical)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1213 |         style = YAML_DOUBLE_QUOTED_SCALAR_STYLE;[0m
      | [0;1;32m                                                
[0m[1memitter.c:1215:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1215 |     if (emitter->simple_key_context && emitter->scalar_data.multiline)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1216 |         style = YAML_DOUBLE_QUOTED_SCALAR_STYLE;[0m
      | [0;1;32m                                                
[0m[1memitter.c:1221:88: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1221 |                 || (!emitter->flow_level && !emitter->scalar_data.block_plain_allowed))[0m
      | [0;1;32m                                                                                       ^
[0m      | [0;32m                                                                                        {
[0m 1222 |             style = YAML_SINGLE_QUOTED_SCALAR_STYLE;[0m
      | [0;1;32m                                                    
[0m[1memitter.c:1224:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1224 |                 && (emitter->flow_level || emitter->simple_key_context))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1225 |             style = YAML_SINGLE_QUOTED_SCALAR_STYLE;[0m
      | [0;1;32m                                                    
[0m[1memitter.c:1226:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1226 |         if (no_tag && !event->data.scalar.plain_implicit)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1227 |             style = YAML_SINGLE_QUOTED_SCALAR_STYLE;[0m
      | [0;1;32m                                                    
[0m[1memitter.c:1232:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1232 |         if (!emitter->scalar_data.single_quoted_allowed)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1233 |             style = YAML_DOUBLE_QUOTED_SCALAR_STYLE;[0m
      | [0;1;32m                                                    
[0m[1memitter.c:1239:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1239 |                 || emitter->flow_level || emitter->simple_key_context)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1240 |             style = YAML_DOUBLE_QUOTED_SCALAR_STYLE;[0m
      | [0;1;32m                                                    
[0m[1memitter.c:1262:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1262 |     if (!emitter->anchor_data.anchor)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1263 |         return 1;[0m
      | [0;1;32m                 
[0m[1memitter.c:1266:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1266 |                 (emitter->anchor_data.alias ? "*" : "&"), 1, 0, 0))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1267 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:1280:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1280 |     if (!emitter->tag_data.handle && !emitter->tag_data.suffix)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1281 |         return 1;[0m
      | [0;1;32m                 
[0m[1memitter.c:1286:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1286 |                     emitter->tag_data.handle_length))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1287 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:1290:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1290 |                         emitter->tag_data.suffix_length, 0))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1291 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:1296:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1296 |         if (!yaml_emitter_write_indicator(emitter, "!<", 1, 0, 0))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1297 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:1299:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1299 |                     emitter->tag_data.suffix_length, 0))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1300 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:1301:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1301 |         if (!yaml_emitter_write_indicator(emitter, ">", 0, 0, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1302 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:1318:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1318 |             return yaml_emitter_write_plain_scalar(emitter,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1319 |                     emitter->scalar_data.value, emitter->scalar_data.length,[0m
 1320 |                     !emitter->simple_key_context);[0m
      | [0;1;32m                                                 
[0m      | [0;32m                                                 ;} 
[0m[1memitter.c:1323:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1323 |             return yaml_emitter_write_single_quoted_scalar(emitter,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1324 |                     emitter->scalar_data.value, emitter->scalar_data.length,[0m
 1325 |                     !emitter->simple_key_context);[0m
      | [0;1;32m                                                 
[0m      | [0;32m                                                 ;} 
[0m[1memitter.c:1328:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1328 |             return yaml_emitter_write_double_quoted_scalar(emitter,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1329 |                     emitter->scalar_data.value, emitter->scalar_data.length,[0m
 1330 |                     !emitter->simple_key_context);[0m
      | [0;1;32m                                                 
[0m      | [0;32m                                                 ;} 
[0m[1memitter.c:1333:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1333 |             return yaml_emitter_write_literal_scalar(emitter,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1334 |                     emitter->scalar_data.value, emitter->scalar_data.length);[0m
      | [0;1;32m                                                                            
[0m      | [0;32m                                                                            ;} 
[0m[1memitter.c:1337:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1337 |             return yaml_emitter_write_folded_scalar(emitter,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1338 |                     emitter->scalar_data.value, emitter->scalar_data.length);[0m
      | [0;1;32m                                                                            
[0m      | [0;32m                                                                            ;} 
[0m[1memitter.c:1716:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1716 |             if (!yaml_emitter_analyze_anchor(emitter,[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1717 |                         event->data.alias.anchor, 1))[0m
 1718 |                 return 0;[0m
 1719 |             return 1;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1memitter.c:1717:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1717 |                         event->data.alias.anchor, 1))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1718 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:1722:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1722 |             if (event->data.scalar.anchor) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1723 |                 if (!yaml_emitter_analyze_anchor(emitter,[0m
 1724 |                             event->data.scalar.anchor, 0))[0m
 1725 |                     return 0;[0m
 1726 |             }[0m
 1727 |             if (event->data.scalar.tag && (emitter->canonical ||[0m
 1728 |                         (!event->data.scalar.plain_implicit[0m
 1729 |                          && !event->data.scalar.quoted_implicit))) {[0m
 1730 |                 if (!yaml_emitter_analyze_tag(emitter, event->data.scalar.tag))[0m
 1731 |                     return 0;[0m
 1732 |             }[0m
 1733 |             if (!yaml_emitter_analyze_scalar(emitter,[0m
 1734 |                         event->data.scalar.value, event->data.scalar.length))[0m
 1735 |                 return 0;[0m
 1736 |             return 1;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1memitter.c:1724:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1724 |                             event->data.scalar.anchor, 0))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1725 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:1730:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1730 |                 if (!yaml_emitter_analyze_tag(emitter, event->data.scalar.tag))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 1731 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:1734:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1734 |                         event->data.scalar.value, event->data.scalar.length))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1735 |                 return 0;[0m
      | [0;1;32m                         
[0m[1memitter.c:1739:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1739 |             if (event->data.sequence_start.anchor) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1740 |                 if (!yaml_emitter_analyze_anchor(emitter,[0m
 1741 |                             event->data.sequence_start.anchor, 0))[0m
 1742 |                     return 0;[0m
 1743 |             }[0m
 1744 |             if (event->data.sequence_start.tag && (emitter->canonical ||[0m
 1745 |                         !event->data.sequence_start.implicit)) {[0m
 1746 |                 if (!yaml_emitter_analyze_tag(emitter,[0m
 1747 |                             event->data.sequence_start.tag))[0m
 1748 |                     return 0;[0m
 1749 |             }[0m
 1750 |             return 1;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1memitter.c:1741:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1741 |                             event->data.sequence_start.anchor, 0))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1742 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:1747:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1747 |                             event->data.sequence_start.tag))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1748 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:1753:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1753 |             if (event->data.mapping_start.anchor) {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1754 |                 if (!yaml_emitter_analyze_anchor(emitter,[0m
 1755 |                             event->data.mapping_start.anchor, 0))[0m
 1756 |                     return 0;[0m
 1757 |             }[0m
 1758 |             if (event->data.mapping_start.tag && (emitter->canonical ||[0m
 1759 |                         !event->data.mapping_start.implicit)) {[0m
 1760 |                 if (!yaml_emitter_analyze_tag(emitter,[0m
 1761 |                             event->data.mapping_start.tag))[0m
 1762 |                     return 0;[0m
 1763 |             }[0m
 1764 |             return 1;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1memitter.c:1755:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1755 |                             event->data.mapping_start.anchor, 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1756 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:1761:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1761 |                             event->data.mapping_start.tag))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1762 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:1767:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1767 |             return 1;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1memitter.c:1778:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1778 |     if (!FLUSH(emitter)) return 0;[0m
      | [0;1;32m                        ^         
[0m      | [0;32m                         {
[0m[1memitter.c:1794:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1794 |         if (!PUT_BREAK(emitter)) return 0;[0m
      | [0;1;32m                                ^         
[0m      | [0;32m                                 {
[0m[1memitter.c:1798:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1798 |         if (!PUT(emitter, ' ')) return 0;[0m
      | [0;1;32m                               ^         
[0m      | [0;32m                                {
[0m[1memitter.c:1819:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1819 |         if (!PUT(emitter, ' ')) return 0;[0m
      | [0;1;32m                               ^         
[0m      | [0;32m                                {
[0m[1memitter.c:1823:14: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the string literal [clang-analyzer-security.ArrayBound][0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m             ^
[0m[1memitter.c:45:10: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   45 |      && (COPY(emitter->buffer,string),                                          \[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:398:7: [0m[0;1;36mnote: [0mexpanded from macro 'COPY'[0m
  398 |     ((*(string_b).pointer & 0x80) == 0x00 ?                                     \[0m
      | [0;1;32m      ^
[0m[1memitter.c:283:10: [0m[0;1;36mnote: [0mAssuming field 'tail' is equal to field 'end'[0m
  283 |     if (!ENQUEUE(emitter, emitter->events, *event)) {[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:472:7: [0m[0;1;36mnote: [0mexpanded from macro 'ENQUEUE'[0m
  472 |     (((queue).tail != (queue).end                                               \[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:283:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  283 |     if (!ENQUEUE(emitter, emitter->events, *event)) {[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:472:7: [0m[0;1;36mnote: [0mexpanded from macro 'ENQUEUE'[0m
  472 |     (((queue).tail != (queue).end                                               \[0m
      | [0;1;32m      ^
[0m[1memitter.c:283:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  283 |     if (!ENQUEUE(emitter, emitter->events, *event)) {[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:473:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENQUEUE'[0m
  473 |       || yaml_queue_extend((void **)&(queue).start, (void **)&(queue).head,     \[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  474 |             (void **)&(queue).tail, (void **)&(queue).end)) ?                   \[0m
      | [0;1;32m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:283:10: [0m[0;1;36mnote: [0m'?' condition is true[0m
  283 |     if (!ENQUEUE(emitter, emitter->events, *event)) {[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:472:6: [0m[0;1;36mnote: [0mexpanded from macro 'ENQUEUE'[0m
  472 |     (((queue).tail != (queue).end                                               \[0m
      | [0;1;32m     ^
[0m[1memitter.c:283:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  283 |     if (!ENQUEUE(emitter, emitter->events, *event)) {[0m
      | [0;1;32m    ^
[0m[1memitter.c:288:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  288 |     while (!yaml_emitter_need_more_events(emitter)) {[0m
      | [0;1;32m    ^
[0m[1memitter.c:289:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  289 |         if (!yaml_emitter_analyze_event(emitter, emitter->events.head))[0m
      | [0;1;32m        ^
[0m[1memitter.c:291:14: [0m[0;1;36mnote: [0mCalling 'yaml_emitter_state_machine'[0m
  291 |         if (!yaml_emitter_state_machine(emitter, emitter->events.head))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:426:5: [0m[0;1;36mnote: [0mControl jumps to 'case YAML_EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE:'  at line 473[0m
  426 |     switch (emitter->state)[0m
      | [0;1;32m    ^
[0m[1memitter.c:474:20: [0m[0;1;36mnote: [0mCalling 'yaml_emitter_emit_block_mapping_value'[0m
  474 |             return yaml_emitter_emit_block_mapping_value(emitter, event, 1);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:965:9: [0m[0;1;36mnote: [0m'simple' is 1[0m
  965 |     if (simple) {[0m
      | [0;1;32m        ^~~~~~
[0m[1memitter.c:965:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  965 |     if (simple) {[0m
      | [0;1;32m    ^
[0m[1memitter.c:966:14: [0m[0;1;36mnote: [0mCalling 'yaml_emitter_write_indicator'[0m
  966 |         if (!yaml_emitter_write_indicator(emitter, ":", 0, 0, 0))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:1818:9: [0m[0;1;36mnote: [0m'need_whitespace' is 0[0m
 1818 |     if (need_whitespace && !emitter->whitespace) {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1memitter.c:1818:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1818 |     if (need_whitespace && !emitter->whitespace) {[0m
      | [0;1;32m                        ^
[0m[1memitter.c:1822:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1822 |     while (string.pointer != string.end) {[0m
      | [0;1;32m    ^
[0m[1memitter.c:1823:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                   ^
[0m[1memitter.c:44:12: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   44 |     (FLUSH(emitter)                                                             \[0m
      | [0;1;32m     ~~~~~~^~~~~~~~
[0m[1memitter.c:9:7: [0m[0;1;36mnote: [0mexpanded from macro 'FLUSH'[0m
    9 |     ((emitter->buffer.pointer+5 < emitter->buffer.end)                          \[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:1823:14: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m             ^
[0m[1memitter.c:44:6: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   44 |     (FLUSH(emitter)                                                             \[0m
      | [0;1;32m     ^
[0m[1memitter.c:10:6: [0m[0;1;36mnote: [0mexpanded from macro 'FLUSH'[0m
   10 |      || yaml_emitter_flush(emitter))[0m
      | [0;1;32m     ^
[0m[1memitter.c:1823:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m             ^
[0m[1memitter.c:45:10: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   45 |      && (COPY(emitter->buffer,string),                                          \[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:398:6: [0m[0;1;36mnote: [0mexpanded from macro 'COPY'[0m
  398 |     ((*(string_b).pointer & 0x80) == 0x00 ?                                     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:1823:14: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m             ^
[0m[1memitter.c:45:10: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   45 |      && (COPY(emitter->buffer,string),                                          \[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:398:6: [0m[0;1;36mnote: [0mexpanded from macro 'COPY'[0m
  398 |     ((*(string_b).pointer & 0x80) == 0x00 ?                                     \[0m
      | [0;1;32m     ^
[0m[1memitter.c:1823:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m             ^
[0m[1memitter.c:45:10: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   45 |      && (COPY(emitter->buffer,string),                                          \[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:400:6: [0m[0;1;36mnote: [0mexpanded from macro 'COPY'[0m
  400 |      (*(string_b).pointer & 0xE0) == 0xC0 ?                                     \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:1823:14: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m             ^
[0m[1memitter.c:45:10: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   45 |      && (COPY(emitter->buffer,string),                                          \[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:400:6: [0m[0;1;36mnote: [0mexpanded from macro 'COPY'[0m
  400 |      (*(string_b).pointer & 0xE0) == 0xC0 ?                                     \[0m
      | [0;1;32m     ^
[0m[1memitter.c:1823:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m        ^
[0m[1memitter.c:1822:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1822 |     while (string.pointer != string.end) {[0m
      | [0;1;32m    ^
[0m[1memitter.c:1823:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                   ^
[0m[1memitter.c:44:12: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   44 |     (FLUSH(emitter)                                                             \[0m
      | [0;1;32m     ~~~~~~^~~~~~~~
[0m[1memitter.c:9:7: [0m[0;1;36mnote: [0mexpanded from macro 'FLUSH'[0m
    9 |     ((emitter->buffer.pointer+5 < emitter->buffer.end)                          \[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:1823:14: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m             ^
[0m[1memitter.c:44:6: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   44 |     (FLUSH(emitter)                                                             \[0m
      | [0;1;32m     ^
[0m[1memitter.c:10:6: [0m[0;1;36mnote: [0mexpanded from macro 'FLUSH'[0m
   10 |      || yaml_emitter_flush(emitter))[0m
      | [0;1;32m     ^
[0m[1memitter.c:1823:14: [0m[0;1;36mnote: [0mAccess of the string literal at index 2, while it holds only 2 'unsigned char' elements[0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m             ^
[0m[1memitter.c:45:10: [0m[0;1;36mnote: [0mexpanded from macro 'WRITE'[0m
   45 |      && (COPY(emitter->buffer,string),                                          \[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:398:7: [0m[0;1;36mnote: [0mexpanded from macro 'COPY'[0m
  398 |     ((*(string_b).pointer & 0x80) == 0x00 ?                                     \[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1memitter.c:1823:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1823 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                    ^         
[0m      | [0;32m                                     {
[0m[1memitter.c:1840:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1840 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                    ^         
[0m      | [0;32m                                     {
[0m[1memitter.c:1857:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1857 |         if (!PUT(emitter, ' ')) return 0;[0m
      | [0;1;32m                               ^         
[0m      | [0;32m                                {
[0m[1memitter.c:1861:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1861 |         if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                    ^         
[0m      | [0;32m                                     {
[0m[1memitter.c:1879:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1879 |         if (!PUT(emitter, ' ')) return 0;[0m
      | [0;1;32m                               ^         
[0m      | [0;32m                                {
[0m[1memitter.c:1894:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1894 |             if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1memitter.c:1901:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1901 |                 if (!PUT(emitter, '%')) return 0;[0m
      | [0;1;32m                                       ^         
[0m      | [0;32m                                        {
[0m[1memitter.c:1903:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1903 |                             + ((value >> 4) < 10 ? '0' : 'A' - 10)))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1904 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:1906:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1906 |                             + ((value & 0x0F) < 10 ? '0' : 'A' - 10)))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1907 |                     return 0;[0m
      | [0;1;32m                             
[0m[1memitter.c:1939:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1939 |         if (!PUT(emitter, ' ')) return 0;[0m
      | [0;1;32m                               ^         
[0m      | [0;32m                                {
[0m[1memitter.c:1949:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1949 |                 if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1memitter.c:1953:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1953 |                 if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1memitter.c:1960:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1960 |                 if (!PUT_BREAK(emitter)) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1memitter.c:1962:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1962 |             if (!WRITE_BREAK(emitter, string)) return 0;[0m
      | [0;1;32m                                              ^         
[0m      | [0;32m                                               {
[0m[1memitter.c:1969:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1969 |                 if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1memitter.c:1971:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1971 |             if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1memitter.c:1994:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1994 |     if (!yaml_emitter_write_indicator(emitter, "'", 1, 0, 0))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1995 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:2006:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2006 |                 if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1memitter.c:2010:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2010 |                 if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1memitter.c:2017:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2017 |                 if (!PUT_BREAK(emitter)) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1memitter.c:2019:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2019 |             if (!WRITE_BREAK(emitter, string)) return 0;[0m
      | [0;1;32m                                              ^         
[0m      | [0;32m                                               {
[0m[1memitter.c:2026:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2026 |                 if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1memitter.c:2029:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2029 |                 if (!PUT(emitter, '\'')) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1memitter.c:2031:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2031 |             if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1memitter.c:2038:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2038 |     if (breaks)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2039 |         if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                          
[0m[1memitter.c:2039:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2039 |         if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                ^         
[0m      | [0;32m                                                 {
[0m[1memitter.c:2041:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2041 |     if (!yaml_emitter_write_indicator(emitter, "'", 0, 0, 0))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2042 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:2059:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2059 |     if (!yaml_emitter_write_indicator(emitter, "\"", 1, 0, 0))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2060 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:2088:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2088 |             if (!PUT(emitter, '\\')) return 0;[0m
      | [0;1;32m                                    ^         
[0m      | [0;32m                                     {
[0m[1memitter.c:2093:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2093 |                     if (!PUT(emitter, '0')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2094 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2093:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2093 |                     if (!PUT(emitter, '0')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2097:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2097 |                     if (!PUT(emitter, 'a')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2098 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2097:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2097 |                     if (!PUT(emitter, 'a')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2101:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2101 |                     if (!PUT(emitter, 'b')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2102 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2101:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2101 |                     if (!PUT(emitter, 'b')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2105:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2105 |                     if (!PUT(emitter, 't')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2106 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2105:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2105 |                     if (!PUT(emitter, 't')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2109:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2109 |                     if (!PUT(emitter, 'n')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2110 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2109:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2109 |                     if (!PUT(emitter, 'n')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2113:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2113 |                     if (!PUT(emitter, 'v')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2114 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2113:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2113 |                     if (!PUT(emitter, 'v')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2117:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2117 |                     if (!PUT(emitter, 'f')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2118 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2117:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2117 |                     if (!PUT(emitter, 'f')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2121:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2121 |                     if (!PUT(emitter, 'r')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2122 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2121:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2121 |                     if (!PUT(emitter, 'r')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2125:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2125 |                     if (!PUT(emitter, 'e')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2126 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2125:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2125 |                     if (!PUT(emitter, 'e')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2129:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2129 |                     if (!PUT(emitter, '\"')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2130 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2129:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2129 |                     if (!PUT(emitter, '\"')) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1memitter.c:2133:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2133 |                     if (!PUT(emitter, '\\')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2134 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2133:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2133 |                     if (!PUT(emitter, '\\')) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1memitter.c:2137:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2137 |                     if (!PUT(emitter, 'N')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2138 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2137:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2137 |                     if (!PUT(emitter, 'N')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2141:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2141 |                     if (!PUT(emitter, '_')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2142 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2141:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2141 |                     if (!PUT(emitter, '_')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2145:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2145 |                     if (!PUT(emitter, 'L')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2146 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2145:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2145 |                     if (!PUT(emitter, 'L')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2149:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2149 |                     if (!PUT(emitter, 'P')) return 0;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2150 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1memitter.c:2149:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2149 |                     if (!PUT(emitter, 'P')) return 0;[0m
      | [0;1;32m                                           ^         
[0m      | [0;32m                                            {
[0m[1memitter.c:2153:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2153 |                     if (value <= 0xFF) {[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m[1memitter.c:2154:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2154 |                         if (!PUT(emitter, 'x')) return 0;[0m
      | [0;1;32m                                               ^         
[0m      | [0;32m                                                {
[0m[1memitter.c:2158:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2158 |                         if (!PUT(emitter, 'u')) return 0;[0m
      | [0;1;32m                                               ^         
[0m      | [0;32m                                                {
[0m[1memitter.c:2162:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2162 |                         if (!PUT(emitter, 'U')) return 0;[0m
      | [0;1;32m                                               ^         
[0m      | [0;32m                                                {
[0m[1memitter.c:2167:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2167 |                         if (!PUT(emitter, digit + (digit < 10 ? '0' : 'A'-10)))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 2168 |                             return 0;[0m
      | [0;1;32m                                     
[0m[1memitter.c:2179:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2179 |                 if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1memitter.c:2181:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2181 |                     if (!PUT(emitter, '\\')) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1memitter.c:2186:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2186 |                 if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1memitter.c:2192:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2192 |             if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1memitter.c:2197:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2197 |     if (!yaml_emitter_write_indicator(emitter, "\"", 0, 0, 0))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2198 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:2217:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2217 |         if (!yaml_emitter_write_indicator(emitter, indent_hint, 0, 0, 0))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 2218 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:2257:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2257 |         if (!yaml_emitter_write_indicator(emitter, chomp_hint, 0, 0, 0))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 2258 |             return 0;[0m
      | [0;1;32m                     
[0m[1memitter.c:2273:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2273 |     if (!yaml_emitter_write_indicator(emitter, "|", 1, 0, 0))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2274 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:2275:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2275 |     if (!yaml_emitter_write_block_scalar_hints(emitter, string))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2276 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:2277:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2277 |     if (!PUT_BREAK(emitter)) return 0;[0m
      | [0;1;32m                            ^         
[0m      | [0;32m                             {
[0m[1memitter.c:2285:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2285 |             if (!WRITE_BREAK(emitter, string)) return 0;[0m
      | [0;1;32m                                              ^         
[0m      | [0;32m                                               {
[0m[1memitter.c:2292:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2292 |                 if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1memitter.c:2294:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2294 |             if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1memitter.c:2313:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2313 |     if (!yaml_emitter_write_indicator(emitter, ">", 1, 0, 0))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2314 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:2315:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2315 |     if (!yaml_emitter_write_block_scalar_hints(emitter, string))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2316 |         return 0;[0m
      | [0;1;32m                 
[0m[1memitter.c:2317:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2317 |     if (!PUT_BREAK(emitter)) return 0;[0m
      | [0;1;32m                            ^         
[0m      | [0;32m                             {
[0m[1memitter.c:2331:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2331 |                     if (!PUT_BREAK(emitter)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m[1memitter.c:2334:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2334 |             if (!WRITE_BREAK(emitter, string)) return 0;[0m
      | [0;1;32m                                              ^         
[0m      | [0;32m                                               {
[0m[1memitter.c:2341:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2341 |                 if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1memitter.c:2346:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2346 |                 if (!yaml_emitter_write_indent(emitter)) return 0;[0m
      | [0;1;32m                                                        ^         
[0m      | [0;32m                                                         {
[0m[1memitter.c:2350:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2350 |                 if (!WRITE(emitter, string)) return 0;[0m
      | [0;1;32m                                            ^         
[0m      | [0;32m                                             {
[0m254 warnings generated.
508 warnings generated.
Suppressed 8 warnings (8 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[54/54][303.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/twemproxy/tidy-fixes/tmpybbqsmnm.yaml -p=/itch/common/crepos/cu-to-rtu/c/twemproxy /itch/common/crepos/cu-to-rtu/c/twemproxy/contrib/yaml-0.2.5/src/scanner.c
[1mscanner.c:750:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  750 |     memset(token, 0, sizeof(yaml_token_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mscanner.c:750:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  750 |     memset(token, 0, sizeof(yaml_token_t));[0m
      | [0;1;32m    ^~~~~~
[0m[1mscanner.c:761:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  761 |         if (!yaml_parser_fetch_more_tokens(parser))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  762 |             return 0;[0m
      | [0;1;32m                     
[0m[1mscanner.c:827:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  827 |             if (!yaml_parser_stale_simple_keys(parser))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  828 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mscanner.c:842:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |         if (!need_more_tokens)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  843 |             break;[0m
      | [0;1;32m                  
[0m[1mscanner.c:847:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  847 |         if (!yaml_parser_fetch_next_token(parser))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  848 |             return 0;[0m
      | [0;1;32m                     
[0m[1mscanner.c:865:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  865 |     if (!CACHE(parser, 1))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  866 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:870:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |     if (!parser->stream_start_produced)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  871 |         return yaml_parser_fetch_stream_start(parser);[0m
      | [0;1;32m                                                      
[0m[1mscanner.c:875:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  875 |     if (!yaml_parser_scan_to_next_token(parser))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  876 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:880:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  880 |     if (!yaml_parser_stale_simple_keys(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  881 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:885:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  885 |     if (!yaml_parser_unroll_indent(parser, parser->mark.column))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  886 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:893:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  893 |     if (!CACHE(parser, 4))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  894 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:898:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  898 |     if (IS_Z(parser->buffer))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  899 |         return yaml_parser_fetch_stream_end(parser);[0m
      | [0;1;32m                                                    
[0m[1mscanner.c:903:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  903 |     if (parser->mark.column == 0 && CHECK(parser->buffer, '%'))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  904 |         return yaml_parser_fetch_directive(parser);[0m
      | [0;1;32m                                                   
[0m[1mscanner.c:912:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  912 |             && IS_BLANKZ_AT(parser->buffer, 3))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  913 |         return yaml_parser_fetch_document_indicator(parser,[0m
  914 |                 YAML_DOCUMENT_START_TOKEN);[0m
      | [0;1;32m                                           
[0m[1mscanner.c:922:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  922 |             && IS_BLANKZ_AT(parser->buffer, 3))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  923 |         return yaml_parser_fetch_document_indicator(parser,[0m
  924 |                 YAML_DOCUMENT_END_TOKEN);[0m
      | [0;1;32m                                         
[0m[1mscanner.c:928:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  928 |     if (CHECK(parser->buffer, '['))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  929 |         return yaml_parser_fetch_flow_collection_start(parser,[0m
  930 |                 YAML_FLOW_SEQUENCE_START_TOKEN);[0m
      | [0;1;32m                                                
[0m[1mscanner.c:934:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  934 |     if (CHECK(parser->buffer, '{'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  935 |         return yaml_parser_fetch_flow_collection_start(parser,[0m
  936 |                 YAML_FLOW_MAPPING_START_TOKEN);[0m
      | [0;1;32m                                               
[0m[1mscanner.c:940:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |     if (CHECK(parser->buffer, ']'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  941 |         return yaml_parser_fetch_flow_collection_end(parser,[0m
  942 |                 YAML_FLOW_SEQUENCE_END_TOKEN);[0m
      | [0;1;32m                                              
[0m[1mscanner.c:946:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |     if (CHECK(parser->buffer, '}'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  947 |         return yaml_parser_fetch_flow_collection_end(parser,[0m
  948 |                 YAML_FLOW_MAPPING_END_TOKEN);[0m
      | [0;1;32m                                             
[0m[1mscanner.c:952:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  952 |     if (CHECK(parser->buffer, ','))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  953 |         return yaml_parser_fetch_flow_entry(parser);[0m
      | [0;1;32m                                                    
[0m[1mscanner.c:957:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  957 |     if (CHECK(parser->buffer, '-') && IS_BLANKZ_AT(parser->buffer, 1))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  958 |         return yaml_parser_fetch_block_entry(parser);[0m
      | [0;1;32m                                                     
[0m[1mscanner.c:963:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  963 |             && (parser->flow_level || IS_BLANKZ_AT(parser->buffer, 1)))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  964 |         return yaml_parser_fetch_key(parser);[0m
      | [0;1;32m                                             
[0m[1mscanner.c:969:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  969 |             && (parser->flow_level || IS_BLANKZ_AT(parser->buffer, 1)))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  970 |         return yaml_parser_fetch_value(parser);[0m
      | [0;1;32m                                               
[0m[1mscanner.c:974:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  974 |     if (CHECK(parser->buffer, '*'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  975 |         return yaml_parser_fetch_anchor(parser, YAML_ALIAS_TOKEN);[0m
      | [0;1;32m                                                                  
[0m[1mscanner.c:979:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  979 |     if (CHECK(parser->buffer, '&'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  980 |         return yaml_parser_fetch_anchor(parser, YAML_ANCHOR_TOKEN);[0m
      | [0;1;32m                                                                   
[0m[1mscanner.c:984:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  984 |     if (CHECK(parser->buffer, '!'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  985 |         return yaml_parser_fetch_tag(parser);[0m
      | [0;1;32m                                             
[0m[1mscanner.c:989:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  989 |     if (CHECK(parser->buffer, '|') && !parser->flow_level)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  990 |         return yaml_parser_fetch_block_scalar(parser, 1);[0m
      | [0;1;32m                                                         
[0m[1mscanner.c:994:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  994 |     if (CHECK(parser->buffer, '>') && !parser->flow_level)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  995 |         return yaml_parser_fetch_block_scalar(parser, 0);[0m
      | [0;1;32m                                                         
[0m[1mscanner.c:999:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  999 |     if (CHECK(parser->buffer, '\''))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1000 |         return yaml_parser_fetch_flow_scalar(parser, 1);[0m
      | [0;1;32m                                                        
[0m[1mscanner.c:1004:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1004 |     if (CHECK(parser->buffer, '"'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1005 |         return yaml_parser_fetch_flow_scalar(parser, 0);[0m
      | [0;1;32m                                                        
[0m[1mscanner.c:1039:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1039 |              && !IS_BLANKZ_AT(parser->buffer, 1)))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1040 |         return yaml_parser_fetch_plain_scalar(parser);[0m
      | [0;1;32m                                                      
[0m[1mscanner.c:1122:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1122 |         if (!yaml_parser_remove_simple_key(parser)) return 0;[0m
      | [0;1;32m                                                   ^         
[0m      | [0;32m                                                    {
[0m[1mscanner.c:1168:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1168 |     if (!PUSH(parser, parser->simple_keys, empty_simple_key))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1169 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1213:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1213 |     if (parser->flow_level)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1214 |         return 1;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1223:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1223 |         if (!PUSH(parser, parser->indents, parser->indent))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1224 |             return 0;[0m
      | [0;1;32m                     
[0m[1mscanner.c:1235:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1235 |         TOKEN_INIT(token, type, mark, mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1235:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1235 |         TOKEN_INIT(token, type, mark, mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1238:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1238 |             if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1239 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mscanner.c:1242:18: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1242 |             if (!QUEUE_INSERT(parser,[0m
      | [0;1;32m                 ^
[0m[1m./yaml_private.h:487:10: [0m[0;1;36mnote: [0mexpanded from macro 'QUEUE_INSERT'[0m
  487 |         (memmove((queue).head+(index)+1,(queue).head+(index),                   \[0m
      | [0;1;32m         ^~~~~~~
[0m[1mscanner.c:1242:18: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1242 |             if (!QUEUE_INSERT(parser,[0m
      | [0;1;32m                 ^
[0m[1m./yaml_private.h:487:10: [0m[0;1;36mnote: [0mexpanded from macro 'QUEUE_INSERT'[0m
  487 |         (memmove((queue).head+(index)+1,(queue).head+(index),                   \[0m
      | [0;1;32m         ^~~~~~~
[0m[1mscanner.c:1243:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1243 |                         parser->tokens, number - parser->tokens_parsed, token))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 1244 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mscanner.c:1265:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1265 |     if (parser->flow_level)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1266 |         return 1;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1274:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1274 |         TOKEN_INIT(token, YAML_BLOCK_END_TOKEN, parser->mark, parser->mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1274:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1274 |         TOKEN_INIT(token, YAML_BLOCK_END_TOKEN, parser->mark, parser->mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1276:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1276 |         if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1277 |             return 0;[0m
      | [0;1;32m                     
[0m[1mscanner.c:1303:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1303 |     if (!PUSH(parser, parser->simple_keys, simple_key))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1304 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1316:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1316 |     STREAM_START_TOKEN_INIT(token, parser->encoding,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:506:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_START_TOKEN_INIT'[0m
  506 |     (TOKEN_INIT((token),YAML_STREAM_START_TOKEN,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1316:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1316 |     STREAM_START_TOKEN_INIT(token, parser->encoding,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:506:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_START_TOKEN_INIT'[0m
  506 |     (TOKEN_INIT((token),YAML_STREAM_START_TOKEN,(start_mark),(end_mark)),       \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1319:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1319 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1320 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1343:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1343 |     if (!yaml_parser_unroll_indent(parser, -1))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1344 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1348:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1348 |     if (!yaml_parser_remove_simple_key(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1349 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1355:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1355 |     STREAM_END_TOKEN_INIT(token, parser->mark, parser->mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:510:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_END_TOKEN_INIT'[0m
  510 |     (TOKEN_INIT((token),YAML_STREAM_END_TOKEN,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1355:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1355 |     STREAM_END_TOKEN_INIT(token, parser->mark, parser->mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:510:6: [0m[0;1;36mnote: [0mexpanded from macro 'STREAM_END_TOKEN_INIT'[0m
  510 |     (TOKEN_INIT((token),YAML_STREAM_END_TOKEN,(start_mark),(end_mark)))[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1357:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1358 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1374:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1374 |     if (!yaml_parser_unroll_indent(parser, -1))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1375 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1379:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1379 |     if (!yaml_parser_remove_simple_key(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1380 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1386:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1386 |     if (!yaml_parser_scan_directive(parser, &token))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1387 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1412:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1412 |     if (!yaml_parser_unroll_indent(parser, -1))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1413 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1417:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1417 |     if (!yaml_parser_remove_simple_key(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1418 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1434:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1434 |     TOKEN_INIT(token, type, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1434:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1434 |     TOKEN_INIT(token, type, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1438:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1438 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1439 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1457:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1457 |     if (!yaml_parser_save_simple_key(parser))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1458 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1462:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1462 |     if (!yaml_parser_increase_flow_level(parser))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1463 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1477:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1477 |     TOKEN_INIT(token, type, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1477:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1477 |     TOKEN_INIT(token, type, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1481:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1481 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1482 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1500:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1500 |     if (!yaml_parser_remove_simple_key(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1501 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1505:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1505 |     if (!yaml_parser_decrease_flow_level(parser))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1506 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1520:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1520 |     TOKEN_INIT(token, type, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1520:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1520 |     TOKEN_INIT(token, type, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1524:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1524 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1525 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1542:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1542 |     if (!yaml_parser_remove_simple_key(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1543 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1557:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1557 |     TOKEN_INIT(token, YAML_FLOW_ENTRY_TOKEN, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1557:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1557 |     TOKEN_INIT(token, YAML_FLOW_ENTRY_TOKEN, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1559:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1559 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1560 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1589:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1589 |                     YAML_BLOCK_SEQUENCE_START_TOKEN, parser->mark))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1590 |             return 0;[0m
      | [0;1;32m                     
[0m[1mscanner.c:1603:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1603 |     if (!yaml_parser_remove_simple_key(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1604 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1618:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1618 |     TOKEN_INIT(token, YAML_BLOCK_ENTRY_TOKEN, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1618:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1618 |     TOKEN_INIT(token, YAML_BLOCK_ENTRY_TOKEN, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1620:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1620 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1621 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1650:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1650 |                     YAML_BLOCK_MAPPING_START_TOKEN, parser->mark))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1651 |             return 0;[0m
      | [0;1;32m                     
[0m[1mscanner.c:1656:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1656 |     if (!yaml_parser_remove_simple_key(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1657 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1671:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1671 |     TOKEN_INIT(token, YAML_KEY_TOKEN, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1671:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1671 |     TOKEN_INIT(token, YAML_KEY_TOKEN, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1673:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1673 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1674 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1697:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1697 |         TOKEN_INIT(token, YAML_KEY_TOKEN, simple_key->mark, simple_key->mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1697:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1697 |         TOKEN_INIT(token, YAML_KEY_TOKEN, simple_key->mark, simple_key->mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1699:14: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1699 |         if (!QUEUE_INSERT(parser, parser->tokens,[0m
      | [0;1;32m             ^
[0m[1m./yaml_private.h:487:10: [0m[0;1;36mnote: [0mexpanded from macro 'QUEUE_INSERT'[0m
  487 |         (memmove((queue).head+(index)+1,(queue).head+(index),                   \[0m
      | [0;1;32m         ^~~~~~~
[0m[1mscanner.c:1699:14: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1699 |         if (!QUEUE_INSERT(parser, parser->tokens,[0m
      | [0;1;32m             ^
[0m[1m./yaml_private.h:487:10: [0m[0;1;36mnote: [0mexpanded from macro 'QUEUE_INSERT'[0m
  487 |         (memmove((queue).head+(index)+1,(queue).head+(index),                   \[0m
      | [0;1;32m         ^~~~~~~
[0m[1mscanner.c:1700:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1700 |                     simple_key->token_number - parser->tokens_parsed, token))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1701 |             return 0;[0m
      | [0;1;32m                     
[0m[1mscanner.c:1707:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1707 |                     YAML_BLOCK_MAPPING_START_TOKEN, simple_key->mark))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1708 |             return 0;[0m
      | [0;1;32m                     
[0m[1mscanner.c:1736:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1736 |                         YAML_BLOCK_MAPPING_START_TOKEN, parser->mark))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1737 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mscanner.c:1753:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1753 |     TOKEN_INIT(token, YAML_VALUE_TOKEN, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1753:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1753 |     TOKEN_INIT(token, YAML_VALUE_TOKEN, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:1755:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1755 |     if (!ENQUEUE(parser, parser->tokens, token))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1756 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1772:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1772 |     if (!yaml_parser_save_simple_key(parser))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1773 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1781:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1781 |     if (!yaml_parser_scan_anchor(parser, &token, type))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1782 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1802:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1802 |     if (!yaml_parser_save_simple_key(parser))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1803 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1811:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1811 |     if (!yaml_parser_scan_tag(parser, &token))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1812 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1833:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1833 |     if (!yaml_parser_remove_simple_key(parser))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1834 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1842:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1842 |     if (!yaml_parser_scan_block_scalar(parser, &token, literal))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1843 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1864:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1864 |     if (!yaml_parser_save_simple_key(parser))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1865 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1873:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1873 |     if (!yaml_parser_scan_flow_scalar(parser, &token, single))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1874 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1895:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1895 |     if (!yaml_parser_save_simple_key(parser))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1896 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1904:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1904 |     if (!yaml_parser_scan_plain_scalar(parser, &token))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1905 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:1928:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1928 |         if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                              ^         
[0m      | [0;32m                               {
[0m[1mscanner.c:1930:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1930 |         if (parser->mark.column == 0 && IS_BOM(parser->buffer))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1931 |             SKIP(parser);[0m
      | [0;1;32m                         
[0m[1mscanner.c:1943:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1943 |         if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                              ^         
[0m      | [0;32m                               {
[0m[1mscanner.c:1949:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1949 |             if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                                  ^         
[0m      | [0;32m                                   {
[0m[1mscanner.c:1957:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1957 |                 if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                                      ^         
[0m      | [0;32m                                       {
[0m[1mscanner.c:1965:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1965 |             if (!CACHE(parser, 2)) return 0;[0m
      | [0;1;32m                                  ^         
[0m      | [0;32m                                   {
[0m[1mscanner.c:2011:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2011 |     if (!yaml_parser_scan_directive_name(parser, start_mark, &name))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2012 |         goto error;[0m
      | [0;1;32m                   
[0m[1mscanner.c:2021:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2021 |                     &major, &minor))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2022 |             goto error;[0m
      | [0;1;32m                       
[0m[1mscanner.c:2028:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2028 |         VERSION_DIRECTIVE_TOKEN_INIT(*token, major, minor,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:532:6: [0m[0;1;36mnote: [0mexpanded from macro 'VERSION_DIRECTIVE_TOKEN_INIT'[0m
  532 |     (TOKEN_INIT((token),YAML_VERSION_DIRECTIVE_TOKEN,(start_mark),(end_mark)),  \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2028:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2028 |         VERSION_DIRECTIVE_TOKEN_INIT(*token, major, minor,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:532:6: [0m[0;1;36mnote: [0mexpanded from macro 'VERSION_DIRECTIVE_TOKEN_INIT'[0m
  532 |     (TOKEN_INIT((token),YAML_VERSION_DIRECTIVE_TOKEN,(start_mark),(end_mark)),  \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2039:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2039 |                     &handle, &prefix))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2040 |             goto error;[0m
      | [0;1;32m                       
[0m[1mscanner.c:2046:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2046 |         TAG_DIRECTIVE_TOKEN_INIT(*token, handle, prefix,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:537:6: [0m[0;1;36mnote: [0mexpanded from macro 'TAG_DIRECTIVE_TOKEN_INIT'[0m
  537 |     (TOKEN_INIT((token),YAML_TAG_DIRECTIVE_TOKEN,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2046:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2046 |         TAG_DIRECTIVE_TOKEN_INIT(*token, handle, prefix,[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:537:6: [0m[0;1;36mnote: [0mexpanded from macro 'TAG_DIRECTIVE_TOKEN_INIT'[0m
  537 |     (TOKEN_INIT((token),YAML_TAG_DIRECTIVE_TOKEN,(start_mark),(end_mark)),      \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2061:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2061 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2065:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2065 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2071:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2071 |             if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:2086:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2086 |         if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2117:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2117 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2117:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2117 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2117:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2117 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:2121:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2121 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2125:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2125 |         if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:2126:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2126 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2168:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2168 |     if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                          ^         
[0m      | [0;32m                           {
[0m[1mscanner.c:2172:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2172 |         if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                              ^         
[0m      | [0;32m                               {
[0m[1mscanner.c:2177:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2177 |     if (!yaml_parser_scan_version_directive_number(parser, start_mark, major))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2178 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:2191:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2191 |     if (!yaml_parser_scan_version_directive_number(parser, start_mark, minor))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2192 |         return 0;[0m
      | [0;1;32m                 
[0m[1mscanner.c:2218:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2218 |     if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                          ^         
[0m      | [0;32m                           {
[0m[1mscanner.c:2233:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2233 |         if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                              ^         
[0m      | [0;32m                               {
[0m[1mscanner.c:2265:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2265 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2269:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2269 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2274:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2274 |     if (!yaml_parser_scan_tag_handle(parser, 1, start_mark, &handle_value))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 2275 |         goto error;[0m
      | [0;1;32m                   
[0m[1mscanner.c:2279:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2279 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2291:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2291 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2296:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2296 |     if (!yaml_parser_scan_tag_uri(parser, 1, 1, NULL, start_mark, &prefix_value))[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m 2297 |         goto error;[0m
      | [0;1;32m                   
[0m[1mscanner.c:2301:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2301 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2328:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2328 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2328:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2328 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2328:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2328 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:2338:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2338 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2341:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2341 |         if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:2342:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2342 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2369:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2369 |         ANCHOR_TOKEN_INIT(*token, string.start, start_mark, end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:517:6: [0m[0;1;36mnote: [0mexpanded from macro 'ANCHOR_TOKEN_INIT'[0m
  517 |     (TOKEN_INIT((token),YAML_ANCHOR_TOKEN,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2369:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2369 |         ANCHOR_TOKEN_INIT(*token, string.start, start_mark, end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:517:6: [0m[0;1;36mnote: [0mexpanded from macro 'ANCHOR_TOKEN_INIT'[0m
  517 |     (TOKEN_INIT((token),YAML_ANCHOR_TOKEN,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2372:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2372 |         ALIAS_TOKEN_INIT(*token, string.start, start_mark, end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:513:6: [0m[0;1;36mnote: [0mexpanded from macro 'ALIAS_TOKEN_INIT'[0m
  513 |     (TOKEN_INIT((token),YAML_ALIAS_TOKEN,(start_mark),(end_mark)),              \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2372:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2372 |         ALIAS_TOKEN_INIT(*token, string.start, start_mark, end_mark);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:513:6: [0m[0;1;36mnote: [0mexpanded from macro 'ALIAS_TOKEN_INIT'[0m
  513 |     (TOKEN_INIT((token),YAML_ALIAS_TOKEN,(start_mark),(end_mark)),              \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2397:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2397 |     if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2404:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2404 |         if (!handle) goto error;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                     {
[0m[1mscanner.c:2414:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2414 |         if (!yaml_parser_scan_tag_uri(parser, 1, 0, NULL, start_mark, &suffix))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 2415 |             goto error;[0m
      | [0;1;32m                       
[0m[1mscanner.c:2433:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2433 |         if (!yaml_parser_scan_tag_handle(parser, 0, start_mark, &handle))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 2434 |             goto error;[0m
      | [0;1;32m                       
[0m[1mscanner.c:2442:84: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2442 |             if (!yaml_parser_scan_tag_uri(parser, 0, 0, NULL, start_mark, &suffix))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 2443 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mscanner.c:2449:86: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2449 |             if (!yaml_parser_scan_tag_uri(parser, 0, 0, handle, start_mark, &suffix))[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m 2450 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mscanner.c:2456:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2456 |             if (!handle) goto error;[0m
      | [0;1;32m                        ^           
[0m      | [0;32m                         {
[0m[1mscanner.c:2475:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2475 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2489:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2489 |     TAG_TOKEN_INIT(*token, handle, suffix, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:521:6: [0m[0;1;36mnote: [0mexpanded from macro 'TAG_TOKEN_INIT'[0m
  521 |     (TOKEN_INIT((token),YAML_TAG_TOKEN,(start_mark),(end_mark)),                \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2489:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2489 |     TAG_TOKEN_INIT(*token, handle, suffix, start_mark, end_mark);[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:521:6: [0m[0;1;36mnote: [0mexpanded from macro 'TAG_TOKEN_INIT'[0m
  521 |     (TOKEN_INIT((token),YAML_TAG_TOKEN,(start_mark),(end_mark)),                \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2509:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2509 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2509:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2509 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2509:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2509 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:2513:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2513 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2524:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2524 |     if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2528:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2528 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2532:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2532 |         if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:2533:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2533 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2540:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2540 |         if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:2577:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2577 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2577:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2577 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2577:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2577 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:2595:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2595 |         memcpy(string.start, head+1, length-1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscanner.c:2595:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2595 |         memcpy(string.start, head+1, length-1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mscanner.c:2601:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2601 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2632:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2632 |             if (!STRING_EXTEND(parser, string))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2633 |                 goto error;[0m
      | [0;1;32m                           
[0m[1mscanner.c:2636:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2636 |                         directive, start_mark, &string)) goto error;[0m
      | [0;1;32m                                                        ^           
[0m      | [0;32m                                                         {
[0m[1mscanner.c:2639:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2639 |             if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                                      ^           
[0m      | [0;32m                                       {
[0m[1mscanner.c:2643:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2643 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2649:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2649 |         if (!STRING_EXTEND(parser, string))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2650 |             goto error;[0m
      | [0;1;32m                       
[0m[1mscanner.c:2685:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2685 |         if (!CACHE(parser, 3)) return 0;[0m
      | [0;1;32m                              ^         
[0m      | [0;32m                               {
[0m[1mscanner.c:2755:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2755 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2755:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2755 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2755:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2755 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:2756:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2756 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2756:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2756 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2756:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2756 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                                 ^           
[0m      | [0;32m                                                                  {
[0m[1mscanner.c:2757:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2757 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2757:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2757 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:2757:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2757 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                                   ^           
[0m      | [0;32m                                                                    {
[0m[1mscanner.c:2767:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2767 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2781:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2781 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2815:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2815 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2826:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2826 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2830:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2830 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2836:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2836 |             if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:2851:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2851 |         if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2866:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2866 |                 start_mark, &end_mark)) goto error;[0m
      | [0;1;32m                                       ^           
[0m      | [0;32m                                        {
[0m[1mscanner.c:2870:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2870 |     if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                          ^           
[0m      | [0;32m                           {
[0m[1mscanner.c:2890:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2890 |                 if (!STRING_EXTEND(parser, string)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mscanner.c:2894:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2894 |             CLEAR(parser, leading_break);[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2894:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2894 |             CLEAR(parser, leading_break);[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2897:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2897 |             if (!JOIN(parser, string, leading_break)) goto error;[0m
      | [0;1;32m                                                     ^           
[0m      | [0;32m                                                      {
[0m[1mscanner.c:2898:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2898 |             CLEAR(parser, leading_break);[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2898:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2898 |             CLEAR(parser, leading_break);[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2903:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2903 |         if (!JOIN(parser, string, trailing_breaks)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mscanner.c:2904:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2904 |         CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2904:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2904 |         CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m        ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2913:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2913 |             if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                                      ^           
[0m      | [0;32m                                       {
[0m[1mscanner.c:2914:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2914 |             if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:2919:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2919 |         if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:2921:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2921 |         if (!READ_LINE(parser, leading_break)) goto error;[0m
      | [0;1;32m                                              ^           
[0m      | [0;32m                                               {
[0m[1mscanner.c:2926:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2926 |                     &indent, &trailing_breaks, start_mark, &end_mark)) goto error;[0m
      | [0;1;32m                                                                      ^           
[0m      | [0;32m                                                                       {
[0m[1mscanner.c:2932:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2932 |         if (!JOIN(parser, string, leading_break)) goto error;[0m
      | [0;1;32m                                                 ^           
[0m      | [0;32m                                                  {
[0m[1mscanner.c:2935:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2935 |         if (!JOIN(parser, string, trailing_breaks)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mscanner.c:2940:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2940 |     SCALAR_TOKEN_INIT(*token, string.start, string.pointer-string.start,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:526:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_TOKEN_INIT'[0m
  526 |     (TOKEN_INIT((token),YAML_SCALAR_TOKEN,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2940:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 2940 |     SCALAR_TOKEN_INIT(*token, string.start, string.pointer-string.start,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:526:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_TOKEN_INIT'[0m
  526 |     (TOKEN_INIT((token),YAML_SCALAR_TOKEN,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:2977:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2977 |         if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                              ^         
[0m      | [0;32m                               {
[0m[1mscanner.c:2982:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2982 |             if (!CACHE(parser, 1)) return 0;[0m
      | [0;1;32m                                  ^         
[0m      | [0;32m                                   {
[0m[1mscanner.c:2985:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2985 |         if ((int)parser->mark.column > max_indent)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2986 |             max_indent = (int)parser->mark.column;[0m
      | [0;1;32m                                                  
[0m[1mscanner.c:2998:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2998 |         if (!IS_BREAK(parser->buffer)) break;[0m
      | [0;1;32m                                      ^      
[0m      | [0;32m                                       {
[0m[1mscanner.c:3002:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3002 |         if (!CACHE(parser, 2)) return 0;[0m
      | [0;1;32m                              ^         
[0m      | [0;32m                               {
[0m[1mscanner.c:3003:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3003 |         if (!READ_LINE(parser, *breaks)) return 0;[0m
      | [0;1;32m                                        ^         
[0m      | [0;32m                                         {
[0m[1mscanner.c:3011:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3011 |         if (*indent < parser->indent + 1)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3012 |             *indent = parser->indent + 1;[0m
      | [0;1;32m                                         
[0m[1mscanner.c:3013:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3013 |         if (*indent < 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3014 |             *indent = 1;[0m
      | [0;1;32m                        
[0m[1mscanner.c:3036:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3036 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3036:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3036 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3036:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3036 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:3037:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3037 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3037:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3037 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3037:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3037 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                                 ^           
[0m      | [0;32m                                                                  {
[0m[1mscanner.c:3038:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3038 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3038:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3038 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3038:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3038 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                                   ^           
[0m      | [0;32m                                                                    {
[0m[1mscanner.c:3039:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3039 |     if (!STRING_INIT(parser, whitespaces, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3039:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3039 |     if (!STRING_INIT(parser, whitespaces, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3039:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3039 |     if (!STRING_INIT(parser, whitespaces, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                               ^           
[0m      | [0;32m                                                                {
[0m[1mscanner.c:3053:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3053 |         if (!CACHE(parser, 4)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:3079:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3079 |         if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:3090:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3090 |                 if (!STRING_EXTEND(parser, string)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mscanner.c:3108:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3108 |                 if (!CACHE(parser, 3)) goto error;[0m
      | [0;1;32m                                      ^           
[0m      | [0;32m                                       {
[0m[1mscanner.c:3121:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3121 |                 if (!STRING_EXTEND(parser, string)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mscanner.c:3128:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3128 |                         *(string.pointer++) = '\0';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3129 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3132:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3132 |                         *(string.pointer++) = '\x07';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3133 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3136:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3136 |                         *(string.pointer++) = '\x08';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3137 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3142:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3142 |                         break;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                        {    ;} 
[0m[1mscanner.c:3145:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3145 |                         *(string.pointer++) = '\x0A';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3146 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3149:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3149 |                         *(string.pointer++) = '\x0B';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3150 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3153:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3153 |                         *(string.pointer++) = '\x0C';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3154 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3157:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3157 |                         *(string.pointer++) = '\x0D';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3158 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3161:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3161 |                         *(string.pointer++) = '\x1B';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3162 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3165:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3165 |                         *(string.pointer++) = '\x20';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3166 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3169:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3169 |                         *(string.pointer++) = '"';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3170 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3173:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3173 |                         *(string.pointer++) = '/';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3174 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3177:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3177 |                         *(string.pointer++) = '\\';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3178 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3181:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3181 |                         *(string.pointer++) = '\xC2';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3182 |                         *(string.pointer++) = '\x85';[0m
 3183 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3186:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3186 |                         *(string.pointer++) = '\xC2';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3187 |                         *(string.pointer++) = '\xA0';[0m
 3188 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3191:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3191 |                         *(string.pointer++) = '\xE2';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3192 |                         *(string.pointer++) = '\x80';[0m
 3193 |                         *(string.pointer++) = '\xA8';[0m
 3194 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3197:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3197 |                         *(string.pointer++) = '\xE2';[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3198 |                         *(string.pointer++) = '\x80';[0m
 3199 |                         *(string.pointer++) = '\xA9';[0m
 3200 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3203:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3203 |                         code_length = 2;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3204 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3207:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3207 |                         code_length = 4;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3208 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3211:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3211 |                         code_length = 8;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3212 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mscanner.c:3215:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3215 |                         yaml_parser_set_scanner_error(parser, "while parsing a quoted scalar",[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 3216 |                                 start_mark, "found unknown escape character");[0m
 3217 |                         goto error;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mscanner.c:3232:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3232 |                     if (!CACHE(parser, code_length)) goto error;[0m
      | [0;1;32m                                                    ^           
[0m      | [0;32m                                                     {
[0m[1mscanner.c:3282:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3282 |                 if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                                          ^           
[0m      | [0;32m                                           {
[0m[1mscanner.c:3285:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3285 |             if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:3294:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3294 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:3295:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3295 |         if (CHECK(parser->buffer, single ? '\'' : '"'))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3296 |             break;[0m
      | [0;1;32m                  
[0m[1mscanner.c:3300:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3300 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:3309:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3309 |                     if (!READ(parser, whitespaces)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mscanner.c:3317:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3317 |                 if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                                      ^           
[0m      | [0;32m                                       {
[0m[1mscanner.c:3323:21: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3323 |                     CLEAR(parser, whitespaces);[0m
      | [0;1;32m                    ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3323:21: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3323 |                     CLEAR(parser, whitespaces);[0m
      | [0;1;32m                    ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3324:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3324 |                     if (!READ_LINE(parser, leading_break)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:3329:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3329 |                     if (!READ_LINE(parser, trailing_breaks)) goto error;[0m
      | [0;1;32m                                                            ^           
[0m      | [0;32m                                                             {
[0m[1mscanner.c:3332:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3332 |             if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:3343:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3343 |                     if (!STRING_EXTEND(parser, string)) goto error;[0m
      | [0;1;32m                                                       ^           
[0m      | [0;32m                                                        {
[0m[1mscanner.c:3347:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3347 |                     if (!JOIN(parser, string, trailing_breaks)) goto error;[0m
      | [0;1;32m                                                               ^           
[0m      | [0;32m                                                                {
[0m[1mscanner.c:3348:21: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3348 |                     CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m                    ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3348:21: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3348 |                     CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m                    ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3350:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3350 |                 CLEAR(parser, leading_break);[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3350:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3350 |                 CLEAR(parser, leading_break);[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3353:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3353 |                 if (!JOIN(parser, string, leading_break)) goto error;[0m
      | [0;1;32m                                                         ^           
[0m      | [0;32m                                                          {
[0m[1mscanner.c:3354:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3354 |                 if (!JOIN(parser, string, trailing_breaks)) goto error;[0m
      | [0;1;32m                                                           ^           
[0m      | [0;32m                                                            {
[0m[1mscanner.c:3355:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3355 |                 CLEAR(parser, leading_break);[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3355:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3355 |                 CLEAR(parser, leading_break);[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3356:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3356 |                 CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3356:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3356 |                 CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m                ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3361:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3361 |             if (!JOIN(parser, string, whitespaces)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mscanner.c:3362:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3362 |             CLEAR(parser, whitespaces);[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3362:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3362 |             CLEAR(parser, whitespaces);[0m
      | [0;1;32m            ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3374:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3374 |     SCALAR_TOKEN_INIT(*token, string.start, string.pointer-string.start,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:526:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_TOKEN_INIT'[0m
  526 |     (TOKEN_INIT((token),YAML_SCALAR_TOKEN,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3374:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3374 |     SCALAR_TOKEN_INIT(*token, string.start, string.pointer-string.start,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:526:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_TOKEN_INIT'[0m
  526 |     (TOKEN_INIT((token),YAML_SCALAR_TOKEN,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3409:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3409 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3409:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3409 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3409:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3409 |     if (!STRING_INIT(parser, string, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:3410:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3410 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3410:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3410 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3410:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3410 |     if (!STRING_INIT(parser, leading_break, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                                 ^           
[0m      | [0;32m                                                                  {
[0m[1mscanner.c:3411:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3411 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3411:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3411 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3411:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3411 |     if (!STRING_INIT(parser, trailing_breaks, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                                   ^           
[0m      | [0;32m                                                                    {
[0m[1mscanner.c:3412:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3412 |     if (!STRING_INIT(parser, whitespaces, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3412:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3412 |     if (!STRING_INIT(parser, whitespaces, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m         ^
[0m[1m./yaml_private.h:136:10: [0m[0;1;36mnote: [0mexpanded from macro 'STRING_INIT'[0m
  136 |          memset((string).start, 0, (size)),                                     \[0m
      | [0;1;32m         ^~~~~~
[0m[1mscanner.c:3412:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3412 |     if (!STRING_INIT(parser, whitespaces, INITIAL_STRING_SIZE)) goto error;[0m
      | [0;1;32m                                                               ^           
[0m      | [0;32m                                                                {
[0m[1mscanner.c:3422:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3422 |         if (!CACHE(parser, 4)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:3431:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3431 |             IS_BLANKZ_AT(parser->buffer, 3)) break;[0m
      | [0;1;32m                                            ^      
[0m      | [0;32m                                             {
[0m[1mscanner.c:3435:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3435 |         if (CHECK(parser->buffer, '#'))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3436 |             break;[0m
      | [0;1;32m                  
[0m[1mscanner.c:3470:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3470 |                          || CHECK(parser->buffer, '}'))))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3471 |                 break;[0m
      | [0;1;32m                      
[0m[1mscanner.c:3483:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3483 |                             if (!STRING_EXTEND(parser, string)) goto error;[0m
      | [0;1;32m                                                               ^           
[0m      | [0;32m                                                                {
[0m[1mscanner.c:3487:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3487 |                             if (!JOIN(parser, string, trailing_breaks)) goto error;[0m
      | [0;1;32m                                                                       ^           
[0m      | [0;32m                                                                        {
[0m[1mscanner.c:3488:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3488 |                             CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m                            ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3488:29: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3488 |                             CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m                            ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3490:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3490 |                         CLEAR(parser, leading_break);[0m
      | [0;1;32m                        ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3490:25: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3490 |                         CLEAR(parser, leading_break);[0m
      | [0;1;32m                        ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3493:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3493 |                         if (!JOIN(parser, string, leading_break)) goto error;[0m
      | [0;1;32m                                                                 ^           
[0m      | [0;32m                                                                  {
[0m[1mscanner.c:3494:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3494 |                         if (!JOIN(parser, string, trailing_breaks)) goto error;[0m
      | [0;1;32m                                                                   ^           
[0m      | [0;32m                                                                    {
[0m[1mscanner.c:3495:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3495 |                         CLEAR(parser, leading_break);[0m
      | [0;1;32m                        ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3495:25: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3495 |                         CLEAR(parser, leading_break);[0m
      | [0;1;32m                        ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3496:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3496 |                         CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m                        ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3496:25: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3496 |                         CLEAR(parser, trailing_breaks);[0m
      | [0;1;32m                        ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3503:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3503 |                     if (!JOIN(parser, string, whitespaces)) goto error;[0m
      | [0;1;32m                                                           ^           
[0m      | [0;32m                                                            {
[0m[1mscanner.c:3504:21: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3504 |                     CLEAR(parser, whitespaces);[0m
      | [0;1;32m                    ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3504:21: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3504 |                     CLEAR(parser, whitespaces);[0m
      | [0;1;32m                    ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3510:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3510 |             if (!READ(parser, string)) goto error;[0m
      | [0;1;32m                                      ^           
[0m      | [0;32m                                       {
[0m[1mscanner.c:3514:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3514 |             if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:3519:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3519 |         if (!(IS_BLANK(parser->buffer) || IS_BREAK(parser->buffer)))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 3520 |             break;[0m
      | [0;1;32m                  
[0m[1mscanner.c:3524:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3524 |         if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                              ^           
[0m      | [0;32m                               {
[0m[1mscanner.c:3542:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3542 |                     if (!READ(parser, whitespaces)) goto error;[0m
      | [0;1;32m                                                   ^           
[0m      | [0;32m                                                    {
[0m[1mscanner.c:3550:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3550 |                 if (!CACHE(parser, 2)) goto error;[0m
      | [0;1;32m                                      ^           
[0m      | [0;32m                                       {
[0m[1mscanner.c:3556:21: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3556 |                     CLEAR(parser, whitespaces);[0m
      | [0;1;32m                    ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3556:21: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3556 |                     CLEAR(parser, whitespaces);[0m
      | [0;1;32m                    ^
[0m[1m./yaml_private.h:155:6: [0m[0;1;36mnote: [0mexpanded from macro 'CLEAR'[0m
  155 |      memset((string).start, 0, (string).end-(string).start))[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3557:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3557 |                     if (!READ_LINE(parser, leading_break)) goto error;[0m
      | [0;1;32m                                                          ^           
[0m      | [0;32m                                                           {
[0m[1mscanner.c:3562:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3562 |                     if (!READ_LINE(parser, trailing_breaks)) goto error;[0m
      | [0;1;32m                                                            ^           
[0m      | [0;32m                                                             {
[0m[1mscanner.c:3565:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3565 |             if (!CACHE(parser, 1)) goto error;[0m
      | [0;1;32m                                  ^           
[0m      | [0;32m                                   {
[0m[1mscanner.c:3570:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3570 |         if (!parser->flow_level && (int)parser->mark.column < indent)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 3571 |             break;[0m
      | [0;1;32m                  
[0m[1mscanner.c:3576:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3576 |     SCALAR_TOKEN_INIT(*token, string.start, string.pointer-string.start,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:526:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_TOKEN_INIT'[0m
  526 |     (TOKEN_INIT((token),YAML_SCALAR_TOKEN,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m[1mscanner.c:3576:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3576 |     SCALAR_TOKEN_INIT(*token, string.start, string.pointer-string.start,[0m
      | [0;1;32m    ^
[0m[1m./yaml_private.h:526:6: [0m[0;1;36mnote: [0mexpanded from macro 'SCALAR_TOKEN_INIT'[0m
  526 |     (TOKEN_INIT((token),YAML_SCALAR_TOKEN,(start_mark),(end_mark)),             \[0m
      | [0;1;32m     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./yaml_private.h:500:6: [0m[0;1;36mnote: [0mexpanded from macro 'TOKEN_INIT'[0m
  500 |     (memset(&(token), 0, sizeof(yaml_token_t)),                                 \[0m
      | [0;1;32m     ^~~~~~
[0m289 warnings generated.
578 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
