Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/gzip-1.12
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 64 files out of 64 in compilation database ...
[ 1/64][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp8t40czh6.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/timespec.c
[ 2/64][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpfu2l2r4n.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/math.c
[ 3/64][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpj0wnfmy7.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/gettime.c
[ 4/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp0a5rkodn.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/glthread/lock.c
[1mglthread/lock.c:269:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  270 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:277:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |   if (err == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  278 |     err = pthread_rwlock_init(lock, &attributes);[0m
      | [0;1;32m                                                 
[0m[1mglthread/lock.c:539:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  540 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:554:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  555 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:717:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  718 |     return 0;[0m
      | [0;1;32m             
[0m[1mglthread/lock.c:732:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |       if (glthread_once_singlethreaded (once_control))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  733 |         init_function ();[0m
      | [0;1;32m                         
[0m10 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 5/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpinn08dvn.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/dup-safer.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 6/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpe69ymsgk.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/yesno.c
[1myesno.c:58:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   while (c != '\n' && c != EOF)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   59 |     c = getchar ();[0m
      | [0;1;32m                   
[0m14 warnings generated.
Suppressed 13 warnings (13 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 7/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpxvrogafs.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/unistd.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 8/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpwv957rfb.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fd-safer.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 9/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpxbc1irbc.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/dup-safer-flag.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[10/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpabfsnkyx.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fseterr.c
9 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[11/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpyrqoogk5.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/freading.c
9 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[12/64][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp9tq_11gw.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/open-safer.c
[13/64][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpjeaeqatc.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/printf-frexp.c
[14/64][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpuo1dj586.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/pipe-safer.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[15/64][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp94hhvknj.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fseek.c
10 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[16/64][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpcaeyzx3i.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/glthread/threadlib.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[17/64][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp7oc05i8h.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/dirname-lgpl.c
[1mdirname-lgpl.c:49:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |        prefix_length < length; length--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   50 |     if (! ISSLASH (file[length - 1]))[0m
   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:50:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |     if (! ISSLASH (file[length - 1]))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:79:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   if (!dir)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   80 |     return NULL;[0m
      | [0;1;32m                
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:82:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   if (append_dot)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   83 |     dir[length++] = '.';[0m
      | [0;1;32m                        
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[18/64][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpph8pyxv3.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fcntl.c
[1mfcntl.c:329:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:426:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:430:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  430 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  431 |               void *p = va_arg (arg, void *);[0m
  432 |               result = fcntl (fd, action, p);[0m
  433 |             }[0m
  434 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mfcntl.c:524:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |           if (result >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  525 |             have_dupfd_cloexec = -1;[0m
      | [0;1;32m                                    
[0m[1mfcntl.c:528:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  529 | # endif[0m
  530 |     result = rpl_fcntl_DUPFD (fd, target);[0m
      | [0;1;32m                                          
[0m11 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[19/64][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpbqj0f6c9.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/malloca.c
[1mmalloca.c:64:37: [0m[0;1;35mwarning: [0m[1mThe left operand of '&' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
   64 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m[1mmalloca.c:53:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0m1 is not equal to 0[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^~~
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0m9223372036854775807 is < -1[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^~~~~~~~~~~
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0m'?' condition is true[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:8: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   33 |        < (n)))[0m
      | [0;1;32m       ~~~~~
[0m[1mmalloca.c:53:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m  ^
[0m[1mmalloca.c:57:11: [0m[0;1;36mnote: [0mAssuming 'mem' is not equal to NULL[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mmalloca.c:57:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:59:44: [0m[0;1;36mnote: [0m'umemplus' declared without an initial value[0m
   59 |           uintptr_t umem = (uintptr_t)mem, umemplus;[0m
      | [0;1;32m                                           ^~~~~~~~
[0m[1mmalloca.c:62:11: [0m[0;1;36mnote: [0mAssuming overflow[0m
   62 |           INT_ADD_WRAPV (umem, sizeof (small_t) + sa_alignment_max - 1,[0m
      | [0;1;32m          ^
[0m[1m./intprops.h:395:33: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_WRAPV'[0m
  395 | # define INT_ADD_WRAPV(a, b, r) __builtin_add_overflow (a, b, r)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:64:37: [0m[0;1;36mnote: [0mThe left operand of '&' is a garbage value[0m
   64 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[20/64][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpbod68u6p.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/basename-lgpl.c
[1mbasename-lgpl.c:36:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   37 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:41:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   42 |         last_was_slash = true;[0m
   43 |       else if (last_was_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:59:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   60 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:63:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   64 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:67:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   68 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m5 warnings generated.

[21/64][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpau6pgn35.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fclose.c
[1mfclose.c:66:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m   67 |     return fclose_nothrow (fp);[0m
      | [0;1;32m                               
[0m[1mfclose.c:73:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |       && fflush (fp))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   74 |     saved_errno = errno;[0m
      | [0;1;32m                        
[0m12 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[22/64][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpgf1r1zyl.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/getprogname.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[23/64][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpoargo10a.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/xsize.c
[24/64][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpt2ek9jbz.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fd-safer-flag.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[25/64][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpm8p2bz_k.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fpurge.c
13 warnings generated.
Suppressed 13 warnings (13 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[26/64][2.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpzrbv29x8.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/openat-proc.c
[1mopenat-proc.c:79:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |         if (proc_self_fd < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   80 |           proc_status = -1;[0m
   81 |         else[0m
      | [0;32m        } 
[0m[1mopenat-proc.c:95:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |     if (proc_status < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   96 |       return NULL;[0m
   97 |     else[0m
      | [0;32m    } 
[0m[1mopenat-proc.c:103:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |             if (! result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  104 |               return NULL;[0m
      | [0;1;32m                          
[0m[1mopenat-proc.c:133:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  133 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mopenat-proc.c:133:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  133 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m19 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[27/64][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpf8uw0i_9.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/strerror_r.c
[1mstrerror_r.c:130:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:130:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:144:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |       if (buflen)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  145 |         *buf = '\0';[0m
      | [0;1;32m                    
[0m[1mstrerror_r.c:154:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |     if (msg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  155 |       return safe_copy (buf, buflen, msg);[0m
      | [0;1;32m                                          
[0m[1mstrerror_r.c:165:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'ret' is never read [clang-analyzer-deadcode.DeadStores][0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:165:7: [0m[0;1;36mnote: [0mValue stored to 'ret' is never read[0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:169:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |       if (ret < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  170 |         ret = errno;[0m
      | [0;1;32m                    
[0m18 warnings generated.
Suppressed 13 warnings (13 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[28/64][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpfj718m47.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/stripslash.c
[1mstripslash.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |     base = file;[0m
      | [0;1;32m                
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[29/64][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpuv8bat6g.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/openat-safer.c
[30/64][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpy5gvarsg.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/creat-safer.c
[31/64][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmptf20ry2b.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fflush.c
[1mfflush.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   if (fp->_flags & _IO_IN_BACKUP)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |     /* _IO_free_backup_area is a bit complicated.  Simply call fseek.  */[0m
   43 |     fseeko (fp, 0, SEEK_CUR);[0m
      | [0;1;32m                             
[0m[1mfflush.c:148:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |   if (stream == NULL || ! freading (stream))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  149 |     return fflush (stream);[0m
      | [0;1;32m                           
[0m12 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[32/64][3.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp1xv5u4a8.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/chdir-long.c
[1mchdir-long.c:77:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   78 |     return -1;[0m
      | [0;1;32m              
[0m[1mchdir-long.c:113:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |   if (e == 0 || errno != ENAMETOOLONG)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  114 |     return e;[0m
      | [0;1;32m             
[0m[1mchdir-long.c:151:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  152 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:157:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |         if (cdb_advance_fd (&cdb, "/") != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  158 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:182:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  183 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:190:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |         if (cdb_advance_fd (&cdb, dir) != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  191 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:194:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |     if (cdb_fchdir (&cdb) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  195 |       goto Fail;[0m
      | [0;1;32m                
[0m22 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[33/64][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp0vp_z_oz.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/stat-time.c
[34/64][2.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpy36vs7sa.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/xalloc-die.c
25 warnings generated.
Suppressed 25 warnings (25 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[35/64][3.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpphpnjlt8.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/unlzw.c
[1munlzw.c:100:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  100 | int unlzw(in, out)[0m
      | [0;1;32m    ^
[0m[1munlzw.c:149:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  149 |     clear_tab_prefixof(); /* Initialize the first 256 entries in the table. */[0m
      | [0;1;32m    ^
[0m[1munlzw.c:75:32: [0m[0;1;36mnote: [0mexpanded from macro 'clear_tab_prefixof'[0m
   75 | #  define clear_tab_prefixof()  memzero(tab_prefix, 256);[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1munlzw.c:149:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  149 |     clear_tab_prefixof(); /* Initialize the first 256 entries in the table. */[0m
      | [0;1;32m    ^
[0m[1munlzw.c:75:32: [0m[0;1;36mnote: [0mexpanded from macro 'clear_tab_prefixof'[0m
   75 | #  define clear_tab_prefixof()  memzero(tab_prefix, 256);[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1munlzw.c:197:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |                 if (256 <= code)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  198 |                   gzip_error ("corrupt input.");[0m
      | [0;1;32m                                                
[0m[1munlzw.c:203:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  203 |                 clear_tab_prefixof();[0m
      | [0;1;32m                ^
[0m[1munlzw.c:75:32: [0m[0;1;36mnote: [0mexpanded from macro 'clear_tab_prefixof'[0m
   75 | #  define clear_tab_prefixof()  memzero(tab_prefix, 256);[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1munlzw.c:203:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  203 |                 clear_tab_prefixof();[0m
      | [0;1;32m                ^
[0m[1munlzw.c:75:32: [0m[0;1;36mnote: [0mexpanded from macro 'clear_tab_prefixof'[0m
   75 | #  define clear_tab_prefixof()  memzero(tab_prefix, 256);[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1munlzw.c:228:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |                     if (outpos > 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  229 |                       write_buf (out, outbuf, outpos);[0m
      | [0;1;32m                                                      
[0m[1munlzw.c:251:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |                         if (i > OUTBUFSIZ-outpos) i = OUTBUFSIZ-outpos;[0m
      | [0;1;32m                                                 ^                     
[0m      | [0;32m                                                  {
[0m[1munlzw.c:254:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  254 |                             memcpy(outbuf+outpos, stackp, i);[0m
      | [0;1;32m                            ^~~~~~
[0m[1munlzw.c:254:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  254 |                             memcpy(outbuf+outpos, stackp, i);[0m
      | [0;1;32m                            ^~~~~~
[0m[1munlzw.c:264:21: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  264 |                     memcpy(outbuf+outpos, stackp, i);[0m
      | [0;1;32m                    ^~~~~~
[0m[1munlzw.c:264:21: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  264 |                     memcpy(outbuf+outpos, stackp, i);[0m
      | [0;1;32m                    ^~~~~~
[0m[1munlzw.c:279:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |     if (outpos > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  280 |       write_buf (out, outbuf, outpos);[0m
      | [0;1;32m                                      
[0m19 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[36/64][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmplszjdve0.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/asnprintf.c
9 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[37/64][2.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpv0m5w0yi.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/openat-die.c
26 warnings generated.
Suppressed 26 warnings (26 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[38/64][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpvw3_zmmi.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/ialloc.c
7 warnings generated.
Suppressed 7 warnings (7 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[39/64][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpi9jyc3f_.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/opendir-safer.c
[1mopendir-safer.c:62:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |               if (! newdp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   63 |                 close (f);[0m
      | [0;1;32m                          
[0m2 warnings generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[40/64][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpf44fc_fx.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/sig-handler.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[41/64][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp6wvwceqh.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/exitfail.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[42/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmps5kltqs7.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fd-hook.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[43/64][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpyl1u7mml.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/version.c
[44/64][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpc9zsb1f9.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/cloexec.c
[1mcloexec.c:50:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   51 |         return 0;[0m
      | [0;1;32m                 
[0m2 warnings generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[45/64][2.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp_kcwhww_.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/save-cwd.c
[1msave-cwd.c:67:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   68 |     cwd->desc = fd_safer_flag (cwd->desc, O_CLOEXEC);[0m
      | [0;1;32m                                                     
[0m[1msave-cwd.c:71:19: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   71 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:67:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   67 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:69:7: [0m[0;1;36mnote: [0mAssuming field 'desc' is < 0[0m
   69 |   if (cwd->desc < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1msave-cwd.c:69:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   69 |   if (cwd->desc < 0)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:71:19: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
   71 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:85:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (0 <= cwd->desc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   86 |     return fchdir (cwd->desc);[0m
   87 |   else[0m
      | [0;32m  } 
[0m[1msave-cwd.c:87:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   88 |     return chdir_long (cwd->name);[0m
      | [0;1;32m                                  
[0m[1msave-cwd.c:94:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |   if (cwd->desc >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   95 |     close (cwd->desc);[0m
      | [0;1;32m                      
[0m19 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[46/64][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmps9rm3qu2.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/filenamecat-lgpl.c
[1mfilenamecat-lgpl.c:58:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (! ISSLASH (dir[dirlen - 1]) && ! ISSLASH (*base))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   59 |         sep = '/';[0m
      | [0;1;32m                  
[0m[1mfilenamecat-lgpl.c:72:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (p_concat == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   73 |     return NULL;[0m
      | [0;1;32m                
[0m[1mfilenamecat-lgpl.c:82:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |     if (base_in_result)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   83 |       *base_in_result = p;[0m
      | [0;1;32m                          
[0m7 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[47/64][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmptm8kycly.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/fseeko.c
10 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[48/64][2.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpqysfc80d.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/printf-frexpl.c
[49/64][5.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpx5c2lasf.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/xmalloc.c
[1mxmalloc.c:34:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   34 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   35 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:66:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (!r && (!p || s))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   67 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:84:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |   if (!r && (!p || (n && s)))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   85 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:198:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |       if (INT_ADD_WRAPV (n, (n >> 1) + 1, &n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  199 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mxmalloc.c:239:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |   if (INT_ADD_WRAPV (n0, n0 >> 1, &n))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  240 |     n = IDX_MAX;[0m
      | [0;1;32m                
[0m[1mxmalloc.c:241:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |   if (0 <= n_max && n_max < n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  242 |     n = n_max;[0m
      | [0;1;32m              
[0m[1mxmalloc.c:263:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (! pa)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  264 |     *pn = 0;[0m
      | [0;1;32m            
[0m[1mxmalloc.c:268:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |           || INT_MULTIPLY_WRAPV (n, s, &nbytes)))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  269 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:313:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  313 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:313:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  313 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:319:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  319 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:319:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  319 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:330:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  330 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:330:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  330 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m19 warnings generated.
Suppressed 8 warnings (8 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[50/64][5.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpi0ymfo92.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/bits.c
[1mbits.c:112:6: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  112 | void bi_init (zipfile)[0m
      | [0;1;32m     ^
[0m[1mbits.c:134:6: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  134 | void send_bits(value, length)[0m
      | [0;1;32m     ^
[0m[1mbits.c:163:10: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  163 | unsigned bi_reverse(code, len)[0m
      | [0;1;32m         ^
[0m[1mbits.c:196:6: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  196 | void copy_block(buf, len, header)[0m
      | [0;1;32m     ^
[0m13 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[51/64][7.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpe1ldoj88.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/printf-args.c
[1mprintf-args.c:41:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:45:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   45 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   46 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:48:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   48 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   49 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:51:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   52 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:54:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   55 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:57:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   58 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:60:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   61 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:66:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:69:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   70 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:72:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   73 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:75:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   75 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   76 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:78:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   78 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   79 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:81:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   81 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   82 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:88:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   88 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   89 |           (sizeof (wint_t) < sizeof (int)[0m
   90 |            ? (wint_t) va_arg (args, int)[0m
   91 |            : va_arg (args, wint_t));[0m
   92 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:95:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   96 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
   97 |            it occurs quite frequently in printf statements that produce[0m
   98 |            debug output.  Use a fallback in this case.  */[0m
   99 |         if (ap->a.a_string == NULL)[0m
  100 |           ap->a.a_string = "(NULL)";[0m
  101 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:99:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  100 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:104:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  104 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  105 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  106 |            it occurs quite frequently in printf statements that produce[0m
  107 |            debug output.  Use a fallback in this case.  */[0m
  108 |         if (ap->a.a_wide_string == NULL)[0m
  109 |           {[0m
  110 |             static const wchar_t wide_null_string[] =[0m
  111 |               {[0m
  112 |                 (wchar_t)'(',[0m
  113 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  114 |                 (wchar_t)')',[0m
  115 |                 (wchar_t)0[0m
  116 |               };[0m
  117 |             ap->a.a_wide_string = wide_null_string;[0m
  118 |           }[0m
  119 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:122:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  122 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  123 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:125:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  126 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:128:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  128 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  129 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:131:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  131 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  132 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:134:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  135 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:137:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  137 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  138 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:180:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  180 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m35 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[52/64][7.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpj4gf1384.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/util.c
[1mutil.c:107:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  107 | int copy(in, out)[0m
      | [0;1;32m    ^
[0m[1mutil.c:116:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |         if (got == -1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  117 |             read_error();[0m
      | [0;1;32m                         
[0m[1mutil.c:130:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  130 | ulg updcrc(s, n)[0m
      | [0;1;32m    ^
[0m[1mutil.c:140:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  140 |         if (n) do {[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  141 |             c = crc_32_tab[((int)c ^ (*s++)) & 0xff] ^ (c >> 8);[0m
  142 |         } while (--n);[0m
      | [0;1;32m                      
[0m[1mutil.c:177:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  177 | int fill_inbuf(eof_ok)[0m
      | [0;1;32m    ^
[0m[1mutil.c:186:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |         if (len == 0) break;[0m
      | [0;1;32m                     ^      
[0m      | [0;32m                      {
[0m[1mutil.c:195:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |         if (eof_ok) return EOF;[0m
      | [0;1;32m                   ^           
[0m      | [0;32m                    {
[0m[1mutil.c:208:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  208 | read_buffer (fd, buf, cnt)[0m
      | [0;1;32m^
[0m[1mutil.c:214:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   if (INT_MAX < cnt)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  215 |     cnt = INT_MAX;[0m
      | [0;1;32m                  
[0m[1mutil.c:226:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |           if (! (flags & O_NONBLOCK))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  227 |             errno = EAGAIN;[0m
  228 |           else if (fcntl (fd, F_SETFL, flags & ~O_NONBLOCK) != -1)[0m
      | [0;32m          } 
[0m[1mutil.c:228:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |           else if (fcntl (fd, F_SETFL, flags & ~O_NONBLOCK) != -1)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  229 |             len = read (fd, buf, cnt);[0m
      | [0;1;32m                                      
[0m[1mutil.c:239:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  239 | write_buffer (fd, buf, cnt)[0m
      | [0;1;32m^
[0m[1mutil.c:244:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |   if (INT_MAX < cnt)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  245 |     cnt = INT_MAX;[0m
      | [0;1;32m                  
[0m[1mutil.c:255:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  255 |     if (outcnt == 0) return;[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                     {
[0m[1mutil.c:267:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |     if (outcnt == 0) return;[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                     {
[0m[1mutil.c:278:6: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  278 | void write_buf(fd, buf, cnt)[0m
      | [0;1;32m     ^
[0m[1mutil.c:286:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |     if (test)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  287 |       return;[0m
      | [0;1;32m             
[0m[1mutil.c:301:7: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  301 | char *strlwr(s)[0m
      | [0;1;32m      ^
[0m[1mutil.c:305:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |     for (t = s; *t; t++)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  306 |       *t = tolow ((unsigned char) *t);[0m
      | [0;1;32m                                      
[0m[1mutil.c:316:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  316 | gzip_base_name (fname)[0m
      | [0;1;32m^
[0m[1mutil.c:320:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |     if (casemap('A') == 'a') strlwr(fname);[0m
      | [0;1;32m                            ^              
[0m      | [0;32m                             {
[0m[1mutil.c:327:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  327 | int xunlink (filename)[0m
      | [0;1;32m    ^
[0m[1mutil.c:393:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |     if (env_val == NULL) return NULL;[0m
      | [0;1;32m                        ^            
[0m      | [0;32m                         {
[0m[1mutil.c:399:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |         if (*p == '\0') break;[0m
      | [0;1;32m                       ^      
[0m      | [0;32m                        {
[0m[1mutil.c:402:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |         if (*p) *p++ = '\0';                 /* mark it */[0m
      | [0;1;32m               ^                                          
[0m      | [0;32m                {
[0m[1mutil.c:423:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |         while (*p++) ;                       /* skip over word */[0m
      | [0;1;32m                    ^                                            
[0m      | [0;32m                     {
[0m[1mutil.c:477:6: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  477 | void display_ratio(num, den, file)[0m
      | [0;1;32m     ^
[0m[1mutil.c:489:6: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  489 | void fprint_off(file, offset, width)[0m
      | [0;1;32m     ^
[0m[1mutil.c:499:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |         do[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  500 |           *--p = '0' - offset % 10;[0m
  501 |         while ((offset /= 10) != 0);[0m
      | [0;32m        } 
[0m[1mutil.c:505:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  505 |         do[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  506 |           *--p = '0' + offset % 10;[0m
  507 |         while ((offset /= 10) != 0);[0m
      | [0;32m        } 
[0m[1mutil.c:514:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  514 |     for (;  p < buf + sizeof buf;  p++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  515 |         putc (*p, file);[0m
      | [0;1;32m                        
[0m46 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[53/64][11.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpufl5ohxl.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/unzip.c
[1munzip.c:64:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   64 | int check_zipfile(in)[0m
      | [0;1;32m    ^
[0m[1munzip.c:112:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  112 | int unzip(in, out)[0m
      | [0;1;32m    ^
[0m[1munzip.c:216:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |     if (err == OK) return OK;[0m
      | [0;1;32m                  ^          
[0m      | [0;32m                   {
[0m[1munzip.c:218:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |     if (!test) abort_gzip();[0m
      | [0;1;32m              ^             
[0m      | [0;32m               {
[0m13 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[54/64][16.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpft_su5sa.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/savedir.c
[1msavedir.c:101:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |   if (dirp == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  102 |     return NULL;[0m
      | [0;1;32m                
[0m[1msavedir.c:111:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |       if (! dp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  112 |         break;[0m
      | [0;1;32m              
[0m[1msavedir.c:122:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |               if (entries_allocated == entries_used)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  123 |                 entries = xpalloc (entries, &entries_allocated, 1, -1,[0m
  124 |                                    sizeof *entries);[0m
      | [0;1;32m                                                    
[0m[1msavedir.c:133:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |               if (allocated - used <= entry_size)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  134 |                 name_space = xpalloc (name_space, &allocated,[0m
  135 |                                       entry_size - (allocated - used),[0m
  136 |                                       IDX_MAX - 1, sizeof *name_space);[0m
      | [0;1;32m                                                                       
[0m[1msavedir.c:137:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  137 |               memcpy (name_space + used, entry, entry_size);[0m
      | [0;1;32m              ^~~~~~
[0m[1msavedir.c:137:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  137 |               memcpy (name_space + used, entry, entry_size);[0m
      | [0;1;32m              ^~~~~~
[0m[1msavedir.c:152:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |       if (entries_used)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  153 |         qsort (entries, entries_used, sizeof *entries, cmp);[0m
      | [0;1;32m                                                            
[0m[1msavedir.c:164:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |   else if (used == allocated)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  165 |     name_space = xirealloc (name_space, used + 1);[0m
      | [0;1;32m                                                  
[0m[1msavedir.c:180:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |   if (! dirp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  181 |     return NULL;[0m
  182 |   else[0m
      | [0;32m  } 
[0m12 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[55/64][20.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp0y814cx4.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/utimens.c
[1mutimens.c:115:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |       if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  116 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:123:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |       if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  124 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:140:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  140 |       && timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  141 |     return true;[0m
      | [0;1;32m                
[0m[1mutimens.c:149:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |   if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  150 |     timespec[0] = get_stat_atime (statbuf);[0m
  151 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:151:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  152 |     gettime (&timespec[0]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:154:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |   if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  155 |     timespec[1] = get_stat_mtime (statbuf);[0m
  156 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:156:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  157 |     gettime (&timespec[1]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:186:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  187 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:239:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |           if (fd < 0 ? stat (file, &st) : fstat (fd, &st))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  240 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:241:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  242 |             ts[0] = get_stat_atime (&st);[0m
  243 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:243:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  244 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:275:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  276 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:291:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  292 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:397:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |           && (fd < 0 ? stat (file, &st) : fstat (fd, &st)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  398 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:399:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  400 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:415:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  415 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  416 |       t = NULL;[0m
      | [0;1;32m               
[0m[1mutimens.c:475:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  475 |                     if (tt)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  476 |                       futimes (fd, tt);[0m
      | [0;1;32m                                       
[0m[1mutimens.c:545:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  546 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:572:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |           if (lstat (file, &st))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  573 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:574:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  574 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  575 |             ts[0] = get_stat_atime (&st);[0m
  576 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:576:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  576 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  577 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:591:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |       if (0 < result)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  592 |         errno = ENOSYS;[0m
      | [0;1;32m                       
[0m[1mutimens.c:610:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  610 |       if (adjustment_needed != 3 && lstat (file, &st))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  611 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:612:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  613 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:641:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |   if (!(adjustment_needed || REPLACE_FUNC_STAT_FILE) && lstat (file, &st))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  642 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:643:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  643 |   if (!S_ISLNK (st.st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  644 |     return fdutimens (-1, file, ts);[0m
      | [0;1;32m                                    
[0m27 warnings generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[56/64][34.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpumkag2xk.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/zip.c
[1mzip.c:36:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
   36 | int zip(in, out)[0m
      | [0;1;32m    ^
[0m[1mzip.c:59:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |     if (time_stamp.tv_nsec < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   60 |       stamp = 0;[0m
   61 |     else if (0 < time_stamp.tv_sec && time_stamp.tv_sec <= 0xffffffff)[0m
      | [0;32m    } 
[0m[1mzip.c:61:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |     else if (0 < time_stamp.tv_sec && time_stamp.tv_sec <= 0xffffffff)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m   62 |       stamp = time_stamp.tv_sec;[0m
   63 |     else[0m
      | [0;32m    } 
[0m[1mzip.c:77:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |     if (level == 1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   78 |       deflate_flags |= FAST;[0m
   79 |     else if (level == 9)[0m
      | [0;32m    } 
[0m[1mzip.c:79:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |     else if (level == 9)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   80 |       deflate_flags |= SLOW;[0m
      | [0;1;32m                            
[0m[1mzip.c:124:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  124 | int file_read(buf, size)[0m
      | [0;1;32m    ^
[0m[1mzip.c:133:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |     if (len == 0) return (int)len;[0m
      | [0;1;32m                 ^                
[0m      | [0;32m                  {
[0m16 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[57/64][68.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp6plv_jmw.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/deflate.c
[1mdeflate.c:310:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  310 |     if (pack_level < 1 || pack_level > 9) gzip_error ("bad pack level");[0m
      | [0;1;32m                                         ^                              
[0m      | [0;32m                                          {
[0m[1mdeflate.c:316:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  316 |     memzero((char*)head, HASH_SIZE*sizeof(*head));[0m
      | [0;1;32m    ^
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1mdeflate.c:316:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  316 |     memzero((char*)head, HASH_SIZE*sizeof(*head));[0m
      | [0;1;32m    ^
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1mdeflate.c:351:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |     while (lookahead < MIN_LOOKAHEAD && !eofile) fill_window();[0m
      | [0;1;32m                                                ^              
[0m      | [0;32m                                                 {
[0m[1mdeflate.c:354:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |     for (j=0; j<MIN_MATCH-1; j++) UPDATE_HASH(ins_h, window[j]);[0m
      | [0;1;32m                                 ^                              
[0m      | [0;32m                                  {
[0m[1mdeflate.c:456:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |             *++match          != scan[1])      continue;[0m
      | [0;1;32m                                         ^              
[0m      | [0;32m                                          {
[0m[1mdeflate.c:484:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |             if (len >= nice_match) break;[0m
      | [0;1;32m                                  ^      
[0m      | [0;32m                                   {
[0m[1mdeflate.c:552:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  552 |         memcpy((char*)window, (char*)window+WSIZE, (unsigned)WSIZE);[0m
      | [0;1;32m        ^~~~~~
[0m[1mdeflate.c:552:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  552 |         memcpy((char*)window, (char*)window+WSIZE, (unsigned)WSIZE);[0m
      | [0;1;32m        ^~~~~~
[0m[1mdeflate.c:555:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |         if (rsync_chunk_end != 0xFFFFFFFFUL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  556 |             rsync_chunk_end -= WSIZE;[0m
      | [0;1;32m                                     
[0m[1mdeflate.c:579:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  579 |             memzero (window + strstart + lookahead, MIN_MATCH - 1);[0m
      | [0;1;32m            ^
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1mdeflate.c:579:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  579 |             memzero (window + strstart + lookahead, MIN_MATCH - 1);[0m
      | [0;1;32m            ^
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1mdeflate.c:595:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |             if (i == start + num)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  596 |                 return;[0m
      | [0;1;32m                       
[0m[1mdeflate.c:609:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |         if (rsync_chunk_end == 0xFFFFFFFFUL && RSYNC_SUM_MATCH(rsync_sum))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  610 |             rsync_chunk_end = i;[0m
      | [0;1;32m                                
[0m[1mdeflate.c:658:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  658 |             if (match_length > lookahead) match_length = lookahead;[0m
      | [0;1;32m                                         ^                         
[0m      | [0;32m                                          {
[0m[1mdeflate.c:704:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |         if (flush) FLUSH_BLOCK(0), block_start = strstart;[0m
      | [0;1;32m                  ^                                       
[0m      | [0;32m                   {
[0m[1mdeflate.c:711:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |         while (lookahead < MIN_LOOKAHEAD && !eofile) fill_window();[0m
      | [0;1;32m                                                    ^              
[0m      | [0;32m                                                     {
[0m[1mdeflate.c:732:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |     if (pack_level <= 3)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  733 |       return deflate_fast();[0m
      | [0;1;32m                            
[0m[1mdeflate.c:756:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |             if (match_length > lookahead) match_length = lookahead;[0m
      | [0;1;32m                                         ^                         
[0m      | [0;32m                                          {
[0m[1mdeflate.c:798:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |             if (flush) FLUSH_BLOCK(0), block_start = strstart;[0m
      | [0;1;32m                      ^                                       
[0m      | [0;32m                       {
[0m[1mdeflate.c:810:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |             if (flush) FLUSH_BLOCK(0), block_start = strstart;[0m
      | [0;1;32m                      ^                                       
[0m      | [0;32m                       {
[0m[1mdeflate.c:837:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  837 |         while (lookahead < MIN_LOOKAHEAD && !eofile) fill_window();[0m
      | [0;1;32m                                                    ^              
[0m      | [0;32m                                                     {
[0m[1mdeflate.c:839:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  839 |     if (match_available) ct_tally (0, window[strstart-1]);[0m
      | [0;1;32m                        ^                                 
[0m      | [0;32m                         {
[0m29 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[58/64][81.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpkk8v0hka.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/printf-parse.c
[1mprintf-parse.c:149:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  150 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:155:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  156 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:157:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  158 |                     /* Positional argument 0.  */[0m
  159 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:160:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  161 |                     /* n too large, would lead to out of memory later.  */[0m
  162 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:208:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  209 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:218:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  219 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:226:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  227 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:232:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  233 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:234:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  235 |                         /* Positional argument 0.  */[0m
  236 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:237:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  238 |                         /* n too large, would lead to out of memory later.  */[0m
  239 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:247:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  248 |                     /* arg_posn wrapped around.  */[0m
  249 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:251:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:251:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:258:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  259 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:262:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  263 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:275:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  276 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:283:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  284 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:289:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  290 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:291:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  292 |                             /* Positional argument 0.  */[0m
  293 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:294:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |                             /* n too large, would lead to out of memory[0m
  296 |                                later.  */[0m
  297 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:305:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  306 |                         /* arg_posn wrapped around.  */[0m
  307 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:309:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:309:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:316:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  317 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:320:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  321 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:432:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  433 |                     break;[0m
      | [0;1;32m                          
[0m[1mprintf-parse.c:442:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  443 |                     type = TYPE_LONGLONGINT;[0m
  444 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:447:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  448 |                     type = TYPE_LONGINT;[0m
  449 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:449:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  450 |                     type = TYPE_SCHAR;[0m
  451 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:451:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  452 |                     type = TYPE_SHORT;[0m
  453 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:453:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  454 |                     type = TYPE_INT;[0m
      | [0;1;32m                                    
[0m[1mprintf-parse.c:455:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  455 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:458:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  459 |                     type = TYPE_ULONGLONGINT;[0m
  460 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:463:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  464 |                     type = TYPE_ULONGINT;[0m
  465 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:465:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  466 |                     type = TYPE_UCHAR;[0m
  467 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:467:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  468 |                     type = TYPE_USHORT;[0m
  469 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:469:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  470 |                     type = TYPE_UINT;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:471:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  471 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:474:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  475 |                     type = TYPE_LONGDOUBLE;[0m
  476 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:476:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  477 |                     type = TYPE_DOUBLE;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:478:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  478 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:480:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  480 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  481 | #if HAVE_WINT_T[0m
  482 |                     type = TYPE_WIDE_CHAR;[0m
  483 | #else[0m
  484 |                     goto error;[0m
  485 | #endif[0m
  486 |                   else[0m
  487 |                     type = TYPE_CHAR;[0m
  488 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:480:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  481 | #if HAVE_WINT_T[0m
  482 |                     type = TYPE_WIDE_CHAR;[0m
  483 | #else[0m
  484 |                     goto error;[0m
  485 | #endif[0m
  486 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:486:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  487 |                     type = TYPE_CHAR;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:491:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |                   type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  492 |                   c = 'c';[0m
  493 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:496:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  496 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  497 | #if HAVE_WCHAR_T[0m
  498 |                     type = TYPE_WIDE_STRING;[0m
  499 | #else[0m
  500 |                     goto error;[0m
  501 | #endif[0m
  502 |                   else[0m
  503 |                     type = TYPE_STRING;[0m
  504 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:496:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  497 | #if HAVE_WCHAR_T[0m
  498 |                     type = TYPE_WIDE_STRING;[0m
  499 | #else[0m
  500 |                     goto error;[0m
  501 | #endif[0m
  502 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:502:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  503 |                     type = TYPE_STRING;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:507:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  507 |                   type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  508 |                   c = 's';[0m
  509 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:512:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |                   type = TYPE_POINTER;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  513 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:516:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  516 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  517 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  518 |                   else[0m
  519 |                   /* If 'long long' is the same as 'long', we parse "lln" into[0m
  520 |                      TYPE_COUNT_LONGINT_POINTER.  */[0m
  521 |                   if (flags >= 8)[0m
  522 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  523 |                   else if (flags & 2)[0m
  524 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  525 |                   else if (flags & 1)[0m
  526 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  527 |                   else[0m
  528 |                     type = TYPE_COUNT_INT_POINTER;[0m
  529 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:516:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  517 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  518 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:521:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  521 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  522 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  523 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:523:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  524 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  525 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:525:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  525 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  526 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  527 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:527:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  528 |                     type = TYPE_COUNT_INT_POINTER;[0m
      | [0;1;32m                                                  
[0m[1mprintf-parse.c:542:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  542 |                   type = TYPE_NONE;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  543 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:546:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |                   goto error;[0m
      | [0;1;32m                  ^         
[0m      | [0;32m                  {         ;} 
[0m[1mprintf-parse.c:556:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  556 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  557 |                       /* arg_posn wrapped around.  */[0m
  558 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:560:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  560 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:560:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  560 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:574:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  574 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  575 |                 /* Overflow, would lead to out of memory.  */[0m
  576 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:580:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  580 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  581 |                 /* Out of memory.  */[0m
  582 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:583:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:584:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:584:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:603:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  604 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:605:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  606 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:611:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  611 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  612 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:613:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  614 |     free (d->dir);[0m
      | [0;1;32m                  
[0m80 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[59/64][87.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpmukyk5t8.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/trees.c
[1mtrees.c:341:6: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  341 | void ct_init(attr, methodp)[0m
      | [0;1;32m     ^
[0m[1mtrees.c:355:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |     if (static_dtree[0].Len != 0) return; /* ct_init already called */[0m
      | [0;1;32m                                 ^                                    
[0m      | [0;32m                                  {
[0m[1mtrees.c:391:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |     for (bits = 0; bits <= MAX_BITS; bits++) bl_count[bits] = 0;[0m
      | [0;1;32m                                            ^                   
[0m      | [0;32m                                             {
[0m[1mtrees.c:393:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |     while (n <= 143) static_ltree[n++].Len = 8, bl_count[8]++;[0m
      | [0;1;32m                    ^                                         
[0m      | [0;32m                     {
[0m[1mtrees.c:394:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |     while (n <= 255) static_ltree[n++].Len = 9, bl_count[9]++;[0m
      | [0;1;32m                    ^                                         
[0m      | [0;32m                     {
[0m[1mtrees.c:395:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |     while (n <= 279) static_ltree[n++].Len = 7, bl_count[7]++;[0m
      | [0;1;32m                    ^                                         
[0m      | [0;32m                     {
[0m[1mtrees.c:396:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |     while (n <= 287) static_ltree[n++].Len = 8, bl_count[8]++;[0m
      | [0;1;32m                    ^                                         
[0m      | [0;32m                     {
[0m[1mtrees.c:421:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |     for (n = 0; n < L_CODES;  n++) dyn_ltree[n].Freq = 0;[0m
      | [0;1;32m                                  ^                      
[0m      | [0;32m                                   {
[0m[1mtrees.c:422:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |     for (n = 0; n < D_CODES;  n++) dyn_dtree[n].Freq = 0;[0m
      | [0;1;32m                                  ^                      
[0m      | [0;32m                                   {
[0m[1mtrees.c:423:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |     for (n = 0; n < BL_CODES; n++) bl_tree[n].Freq = 0;[0m
      | [0;1;32m                                  ^                    
[0m      | [0;32m                                   {
[0m[1mtrees.c:460:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  460 | local void pqdownheap(tree, k)[0m
      | [0;1;32m           ^
[0m[1mtrees.c:468:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |         if (j < heap_len && smaller(tree, heap[j+1], heap[j])) j++;[0m
      | [0;1;32m                                                              ^    
[0m      | [0;32m                                                               {
[0m[1mtrees.c:471:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |         if (smaller(tree, v, heap[j])) break;[0m
      | [0;1;32m                                      ^      
[0m      | [0;32m                                       {
[0m[1mtrees.c:492:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  492 | local void gen_bitlen(desc)[0m
      | [0;1;32m           ^
[0m[1mtrees.c:508:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |     for (bits = 0; bits <= MAX_BITS; bits++) bl_count[bits] = 0;[0m
      | [0;1;32m                                            ^                   
[0m      | [0;32m                                             {
[0m[1mtrees.c:518:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |         if (bits > max_length) bits = max_length, overflow++;[0m
      | [0;1;32m                              ^                              
[0m      | [0;32m                               {
[0m[1mtrees.c:522:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |         if (n > max_code) continue; /* not a leaf node */[0m
      | [0;1;32m                         ^                               
[0m      | [0;32m                          {
[0m[1mtrees.c:526:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |         if (n >= base) xbits = extra[n-base];[0m
      | [0;1;32m                      ^                      
[0m      | [0;32m                       {
[0m[1mtrees.c:529:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |         if (stree) static_len += (ulg)f * (stree[n].Len + xbits);[0m
      | [0;1;32m                  ^                                              
[0m      | [0;32m                   {
[0m[1mtrees.c:531:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |     if (overflow == 0) return;[0m
      | [0;1;32m                      ^       
[0m      | [0;32m                       {
[0m[1mtrees.c:539:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |         while (bl_count[bits] == 0) bits--;[0m
      | [0;1;32m                                   ^       
[0m      | [0;32m                                    {
[0m[1mtrees.c:558:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |             if (m > max_code) continue;[0m
      | [0;1;32m                             ^         
[0m      | [0;32m                              {
[0m[1mtrees.c:577:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  577 | local void gen_codes (tree, max_code)[0m
      | [0;1;32m           ^
[0m[1mtrees.c:601:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |         if (len == 0) continue;[0m
      | [0;1;32m                     ^         
[0m      | [0;32m                      {
[0m[1mtrees.c:618:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  618 | local void build_tree(desc)[0m
      | [0;1;32m           ^
[0m[1mtrees.c:652:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |         opt_len--; if (stree) static_len -= stree[new].Len;[0m
      | [0;1;32m                             ^                             
[0m      | [0;32m                              {
[0m[1mtrees.c:660:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  660 |     for (n = heap_len/2; n >= 1; n--) pqdownheap(tree, n);[0m
      | [0;1;32m                                     ^                    
[0m      | [0;32m                                      {
[0m[1mtrees.c:705:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  705 | local void scan_tree (tree, max_code)[0m
      | [0;1;32m           ^
[0m[1mtrees.c:717:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |     if (nextlen == 0) max_count = 138, min_count = 3;[0m
      | [0;1;32m                     ^                               
[0m      | [0;32m                      {
[0m[1mtrees.c:727:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  727 |             if (curlen != prevlen) bl_tree[curlen].Freq++;[0m
      | [0;1;32m                                  ^                       
[0m      | [0;32m                                   {
[0m[1mtrees.c:749:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  749 | local void send_tree (tree, max_code)[0m
      | [0;1;32m           ^
[0m[1mtrees.c:762:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |     if (nextlen == 0) max_count = 138, min_count = 3;[0m
      | [0;1;32m                     ^                               
[0m      | [0;32m                      {
[0m[1mtrees.c:818:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |         if (bl_tree[bl_order[max_blindex]].Len != 0) break;[0m
      | [0;1;32m                                                    ^      
[0m      | [0;32m                                                     {
[0m[1mtrees.c:832:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  832 | local void send_all_trees(lcodes, dcodes, blcodes)[0m
      | [0;1;32m           ^
[0m[1mtrees.c:859:7: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  859 | off_t flush_block(buf, stored_len, pad, eof)[0m
      | [0;1;32m      ^
[0m[1mtrees.c:871:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  871 |     if (*file_type == (ush)UNKNOWN) set_file_type();[0m
      | [0;1;32m                                   ^                
[0m      | [0;32m                                    {
[0m[1mtrees.c:897:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  897 |     if (static_lenb <= opt_lenb) opt_lenb = static_lenb;[0m
      | [0;1;32m                                ^                       
[0m      | [0;32m                                 {
[0m[1mtrees.c:909:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  909 |         if (!buf)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  910 |           gzip_error ("block vanished");[0m
      | [0;1;32m                                        
[0m[1mtrees.c:968:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  968 | int ct_tally (dist, lc)[0m
      | [0;1;32m    ^
[0m[1mtrees.c:1009:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1009 |         if (last_dist < last_lit/2 && out_length < in_length/2) return 1;[0m
      | [0;1;32m                                                               ^         
[0m      | [0;32m                                                                {
[0m[1mtrees.c:1021:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1021 | local void compress_block(ltree, dtree)[0m
      | [0;1;32m           ^
[0m[1mtrees.c:1034:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1034 |     if (last_lit != 0) do {[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m[1mtrees.c:1035:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |         if ((lx & 7) == 0) flag = flag_buf[fx++];[0m
      | [0;1;32m                          ^                      
[0m      | [0;32m                           {
[0m[1mtrees.c:1078:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1078 |     while (n < 7)        bin_freq += dyn_ltree[n++].Freq;[0m
      | [0;1;32m                 ^                                       
[0m      | [0;32m                  {
[0m[1mtrees.c:1079:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |     while (n < 128)    ascii_freq += dyn_ltree[n++].Freq;[0m
      | [0;1;32m                   ^                                     
[0m      | [0;32m                    {
[0m[1mtrees.c:1080:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1080 |     while (n < LITERALS) bin_freq += dyn_ltree[n++].Freq;[0m
      | [0;1;32m                        ^                                
[0m      | [0;32m                         {
[0m55 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[60/64][103.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp2o0kmdtf.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/unlzh.c
[1munlzh.c:102:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  102 | local void fillbuf(n)  /* Shift bitbuf n bits left, read n bits */[0m
      | [0;1;32m           ^
[0m[1munlzh.c:109:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |         if ((int)subbitbuf == EOF) subbitbuf = 0;[0m
      | [0;1;32m                                  ^              
[0m      | [0;32m                                   {
[0m[1munlzh.c:115:16: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  115 | local unsigned getbits(n)[0m
      | [0;1;32m               ^
[0m[1munlzh.c:134:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  134 | local void make_table(nchar, bitlen, tablebits, table)[0m
      | [0;1;32m           ^
[0m[1munlzh.c:143:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |     for (i = 1; i <= 16; i++) count[i] = 0;[0m
      | [0;1;32m                             ^             
[0m      | [0;32m                              {
[0m[1munlzh.c:144:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |     for (i = 0; i < (unsigned)nchar; i++) count[bitlen[i]]++;[0m
      | [0;1;32m                                         ^                   
[0m      | [0;32m                                          {
[0m[1munlzh.c:147:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |     for (i = 1; i <= 16; i++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  148 |         start[i + 1] = start[i] + (count[i] << (16 - i));[0m
      | [0;1;32m                                                         
[0m[1munlzh.c:149:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |     if ((start[17] & 0xffff) != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  150 |       gzip_error ("Bad table\n");[0m
      | [0;1;32m                                 
[0m[1munlzh.c:165:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |         while (i != k) table[i++] = 0;[0m
      | [0;1;32m                      ^               
[0m      | [0;32m                       {
[0m[1munlzh.c:171:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |         if ((len = bitlen[ch]) == 0) continue;[0m
      | [0;1;32m                                    ^         
[0m      | [0;32m                                     {
[0m[1munlzh.c:174:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |             if ((unsigned) 1 << tablebits < nextcode)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  175 |               gzip_error ("Bad table\n");[0m
      | [0;1;32m                                         
[0m[1munlzh.c:176:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |             for (i = start[len]; i < nextcode; i++) table[i] = ch;[0m
      | [0;1;32m                                                   ^              
[0m      | [0;32m                                                    {
[0m[1munlzh.c:186:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |                 if (k & mask) p = &right[*p];[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  187 |                 else          p = &left[*p];[0m
      | [0;32m                } 
[0m[1munlzh.c:187:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |                 else          p = &left[*p];[0m
      | [0;1;32m                    ^                       
[0m      | [0;32m                     {
[0m[1munlzh.c:200:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  200 | local void read_pt_len(nn, nbit, i_special)[0m
      | [0;1;32m           ^
[0m[1munlzh.c:211:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |         for (i = 0; i < nn; i++) pt_len[i] = 0;[0m
      | [0;1;32m                                ^              
[0m      | [0;32m                                 {
[0m[1munlzh.c:212:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |         for (i = 0; i < 256; i++) pt_table[i] = c;[0m
      | [0;1;32m                                 ^                
[0m      | [0;32m                                  {
[0m[1munlzh.c:220:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |                 if (16 < c)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  221 |                   gzip_error ("Bad table\n");[0m
      | [0;1;32m                                             
[0m[1munlzh.c:227:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |                 while (--c >= 0) pt_len[i++] = 0;[0m
      | [0;1;32m                                ^                
[0m      | [0;32m                                 {
[0m[1munlzh.c:230:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |         while (i < nn) pt_len[i++] = 0;[0m
      | [0;1;32m                      ^                
[0m      | [0;32m                       {
[0m[1munlzh.c:243:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |         for (i = 0; i < NC; i++) c_len[i] = 0;[0m
      | [0;1;32m                                ^             
[0m      | [0;32m                                 {
[0m[1munlzh.c:244:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |         for (i = 0; i < 4096; i++) c_table[i] = c;[0m
      | [0;1;32m                                  ^               
[0m      | [0;32m                                   {
[0m[1munlzh.c:252:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |                     if (bitbuf & mask) c = right[c];[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  253 |                     else               c = left [c];[0m
      | [0;32m                    } 
[0m[1munlzh.c:253:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |                     else               c = left [c];[0m
      | [0;1;32m                        ^                           
[0m      | [0;32m                         {
[0m[1munlzh.c:259:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  259 |                 if      (c == 0) c = 1;[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  260 |                 else if (c == 1) c = getbits(4) + 3;[0m
      | [0;32m                } 
[0m[1munlzh.c:260:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |                 else if (c == 1) c = getbits(4) + 3;[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  261 |                 else             c = getbits(CBIT) + 20;[0m
      | [0;32m                } 
[0m[1munlzh.c:261:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  261 |                 else             c = getbits(CBIT) + 20;[0m
      | [0;1;32m                    ^                                   
[0m      | [0;32m                     {
[0m[1munlzh.c:262:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |                 while (--c >= 0) c_len[i++] = 0;[0m
      | [0;1;32m                                ^               
[0m      | [0;32m                                 {
[0m[1munlzh.c:263:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |             } else c_len[i++] = c - 2;[0m
      | [0;1;32m                  ^                   
[0m      | [0;32m                   {
[0m[1munlzh.c:265:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |         while (i < NC) c_len[i++] = 0;[0m
      | [0;1;32m                      ^               
[0m      | [0;32m                       {
[0m[1munlzh.c:288:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |             if (bitbuf & mask) j = right[j];[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  289 |             else               j = left [j];[0m
      | [0;32m            } 
[0m[1munlzh.c:289:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |             else               j = left [j];[0m
      | [0;1;32m                ^                           
[0m      | [0;32m                 {
[0m[1munlzh.c:305:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |             if (bitbuf & mask) j = right[j];[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  306 |             else               j = left [j];[0m
      | [0;32m            } 
[0m[1munlzh.c:306:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |             else               j = left [j];[0m
      | [0;1;32m                ^                           
[0m      | [0;32m                 {
[0m[1munlzh.c:311:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |     if (j != 0) j = ((unsigned) 1 << (j - 1)) + getbits((int) (j - 1));[0m
      | [0;1;32m               ^                                                       
[0m      | [0;32m                {
[0m[1munlzh.c:336:16: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  336 | local unsigned decode(count, buffer)[0m
      | [0;1;32m               ^
[0m[1munlzh.c:355:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |         if (++r == count) return r;[0m
      | [0;1;32m                         ^         
[0m      | [0;32m                          {
[0m[1munlzh.c:365:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |             if (++r == count) return r;[0m
      | [0;1;32m                             ^         
[0m      | [0;32m                              {
[0m[1munlzh.c:372:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  372 |                 if (++r == count) return r;[0m
      | [0;1;32m                                 ^         
[0m      | [0;32m                                  {
[0m[1munlzh.c:382:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  382 | int unlzh(in, out)[0m
      | [0;1;32m    ^
[0m[1munlzh.c:393:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |         if (n > 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  394 |           write_buf (out, window, n);[0m
      | [0;1;32m                                     
[0m50 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[61/64][110.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpve6oz4_2.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/unpack.c
[1munpack.c:84:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |   if (b < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   85 |     gzip_error ("invalid compressed data -- unexpected end of file");[0m
      | [0;1;32m                                                                     
[0m[1munpack.c:122:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |     for (n = 1; n <= 4; n++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  123 |       orig_len = (orig_len << 8) | read_byte ();[0m
      | [0;1;32m                                                
[0m[1munpack.c:127:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |     if (! (0 < max_len && max_len <= MAX_BITLEN))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  128 |       gzip_error ("invalid compressed data -- "[0m
  129 |                   "Huffman code bit length out of range");[0m
      | [0;1;32m                                                          
[0m[1munpack.c:135:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |         if (max_leaves - (len == max_len) < leaves[len])[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  136 |           gzip_error ("too many leaves in Huffman tree");[0m
      | [0;1;32m                                                         
[0m[1munpack.c:189:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |     if ((nodes >> 1) != 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  190 |       gzip_error ("too few leaves in Huffman tree");[0m
      | [0;1;32m                                                    
[0m[1munpack.c:199:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |         while (prefixes--) *--prefixp = (uch)len;[0m
      | [0;1;32m                          ^                      
[0m      | [0;32m                           {
[0m[1munpack.c:202:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |     while (prefixp > prefix_len) *--prefixp = 0;[0m
      | [0;1;32m                                ^               
[0m      | [0;32m                                 {
[0m[1munpack.c:213:5: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  213 | int unpack(in, out)[0m
      | [0;1;32m    ^
[0m[1munpack.c:256:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  256 |         if (peek == eob && len == max_len)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  257 |           break; /* End of file.  */[0m
      | [0;1;32m                                    
[0m18 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[62/64][110.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmpv60f1m6b.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/lib/vasnprintf.c
[1mvasnprintf.c:1864:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1865 |     /* errno is already set.  */[0m
 1866 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1908:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1908 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1909 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1911:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1911 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1912 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1965:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1971:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1971 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1971:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1971 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1976:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1976 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1977 |                   result[length++] = *cp++;[0m
 1978 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:1981:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1982 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1989:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1989 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1990 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:1992:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1992 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1992:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1992 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1993:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1993 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1864:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:156:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  156 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1864:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1875:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1875 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1875:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1875 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1899:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1899 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1899:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1899 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1916:9: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1916 |     if (resultbuf != NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1916:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1916 |     if (resultbuf != NULL)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1958:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1958 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1960:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1960 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1960:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1960 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1934:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1934:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1939:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1940:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1940 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1940:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1940 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1942:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1942 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:97:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   97 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1943:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1943 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:101:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  101 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1943:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1943 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1945:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1945 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1945:33: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1945 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m                                ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1949:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1949 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1949:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1949 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1951:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1951:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1951:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1951:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1969:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1969 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1981:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1981:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1985:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1985 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1985:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1985 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1989:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1989 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1989:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1989 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1991:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 1991 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   66 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:1991:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 1991 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1992:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 1992 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1934:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1992:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1992 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1934:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1993:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 1993 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1998:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1998 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1999 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2006:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2006 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2007 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2009:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2009 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2010 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2012:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2012 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2013 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2015:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2015 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2016 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2018:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2018 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2019 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2021:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2021 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:5028:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5028 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5029 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:5031:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5031 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 5032 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5033:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5033 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5034 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5035:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5035 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5036 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5037:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5037 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5038 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5040:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5040 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5041 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5045:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5045 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5046 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5054:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5054 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5054:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5054 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5060:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5060 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5061 |                               *fbp++ = *mp++;[0m
 5062 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5075:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5075 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5075:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5075 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5081:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5081 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5082 |                               *fbp++ = *mp++;[0m
 5083 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5100:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5100 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                    {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m./config.h:1697:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 1697 | # define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                   ^
[0m[1mvasnprintf.c:5110:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5110 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5112:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5112 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 5113 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:5115:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5115 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5179:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5179 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 5180 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5185:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5185 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 5186 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5199:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5199 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5199:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5199 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5218:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5218 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 5219 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:5266:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5266 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5267 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 5268 |                           SNPRINTF_BUF (arg);[0m
 5269 |                         }[0m
 5270 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5268:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5268 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5268:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5268 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5272:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5272 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5273 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 5274 |                           SNPRINTF_BUF (arg);[0m
 5275 |                         }[0m
 5276 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5274:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5274 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5274:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5274 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5278:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5278 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5279 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 5280 |                           SNPRINTF_BUF (arg);[0m
 5281 |                         }[0m
 5282 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5280:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5280 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5280:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5280 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5284:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5284 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5285 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 5286 |                           SNPRINTF_BUF (arg);[0m
 5287 |                         }[0m
 5288 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5286:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5286 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5286:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5286 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5290:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5290 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5291 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 5292 |                           SNPRINTF_BUF (arg);[0m
 5293 |                         }[0m
 5294 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5292:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5292 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5292:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5292 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5296:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5296 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5297 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 5298 |                           SNPRINTF_BUF (arg);[0m
 5299 |                         }[0m
 5300 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5298:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5298 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5298:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5298 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5302:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5302 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5303 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 5304 |                           SNPRINTF_BUF (arg);[0m
 5305 |                         }[0m
 5306 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5304:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5304 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5304:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5304 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5308:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5308 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5309 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 5310 |                           SNPRINTF_BUF (arg);[0m
 5311 |                         }[0m
 5312 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5310:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5310 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5310:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5310 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5314:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5314 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5315 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 5316 |                           SNPRINTF_BUF (arg);[0m
 5317 |                         }[0m
 5318 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5316:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5316 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5316:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5316 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5320:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5320 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5321 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 5322 |                           SNPRINTF_BUF (arg);[0m
 5323 |                         }[0m
 5324 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5322:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5322 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5322:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5322 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5326:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5326 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5327 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 5328 |                           SNPRINTF_BUF (arg);[0m
 5329 |                         }[0m
 5330 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5328:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5328 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5328:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5328 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5332:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5332 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5333 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 5334 |                           SNPRINTF_BUF (arg);[0m
 5335 |                         }[0m
 5336 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5334:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5334 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5334:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5334 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5338:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5338 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5339 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 5340 |                           SNPRINTF_BUF (arg);[0m
 5341 |                         }[0m
 5342 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5340:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5340 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5340:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5340 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5345:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5345 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5346 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 5347 |                           SNPRINTF_BUF (arg);[0m
 5348 |                         }[0m
 5349 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5347:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5347 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5347:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5347 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5352:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5352 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5353 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 5354 |                           SNPRINTF_BUF (arg);[0m
 5355 |                         }[0m
 5356 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5354:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5354 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5354:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5354 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5359:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5359 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5360 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 5361 |                           SNPRINTF_BUF (arg);[0m
 5362 |                         }[0m
 5363 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5361:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5361 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5361:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5361 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5366:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5366 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5367 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 5368 |                           SNPRINTF_BUF (arg);[0m
 5369 |                         }[0m
 5370 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5368:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5368 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5368:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5368 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5372:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5372 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:5385:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5385 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5386 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5388:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5388 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 5389 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:5447:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5447 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5448 |                               count = retcount;[0m
      | [0;1;32m                                               
[0m[1mvasnprintf.c:5460:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5460 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5461 |                               errno = EILSEQ;[0m
 5462 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5462:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5462 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5463 |                               errno = EINVAL;[0m
      | [0;1;32m                                             
[0m[1mvasnprintf.c:5466:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5466 |                         if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 5467 |                           free (result);[0m
      | [0;1;32m                                        
[0m[1mvasnprintf.c:5468:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5468 |                         if (buf_malloced != NULL)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5469 |                           free (buf_malloced);[0m
      | [0;1;32m                                              
[0m[1mvasnprintf.c:5486:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5486 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 5487 |                           goto overflow;[0m
 5488 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:5506:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5506 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5506:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5506 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5813:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5813:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5814:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 5814 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1864:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:156:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  156 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1864:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1875:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1875 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1875:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1875 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1899:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1899 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1899:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1899 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1916:9: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1916 |     if (resultbuf != NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1916:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1916 |     if (resultbuf != NULL)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1958:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1958 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1960:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1960 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1960:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1960 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1934:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1934:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1939:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1940:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1940 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1940:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1940 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1942:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1942 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:97:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   97 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1943:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1943 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:101:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  101 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1943:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1943 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1945:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1945 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1945:33: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1945 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m                                ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1949:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1949 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1949:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1949 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1951:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1951:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1951:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1951:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1969:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1969 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1981:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1981:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1982:11: [0m[0;1;36mnote: [0m Execution continues on line 5813[0m
 1982 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:5813:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1956:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:1934:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   66 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:5813:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1956:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:1934:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:5813:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1934:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5813:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1934:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:5814:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 5814 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5822:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5822 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 5823 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5826:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5826 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5827 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5838:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5838 |     if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5839 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5840:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5840 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5841 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5848:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5848 |     if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5849 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5850:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5850 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5851 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m145 warnings generated.
Suppressed 23 warnings (23 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[63/64][176.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmprg81rmdw.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/gzip.c
[1mgzip.c:393:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |     while (*p) printf ("%s\n", *p++);[0m
      | [0;1;32m              ^                      
[0m      | [0;32m               {
[0m[1mgzip.c:402:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |     while (*p) printf ("%s\n", *p++);[0m
      | [0;1;32m              ^                      
[0m      | [0;32m               {
[0m[1mgzip.c:437:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |     if (4 < proglen && strequ (program_name + proglen - 4, ".exe"))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  438 |       program_name[proglen - 4] = '\0';[0m
      | [0;1;32m                                       
[0m[1mgzip.c:473:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |             if (env_argv[optind] && strequ (env_argv[optind], "--"))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  474 |               optc = ENV_OPTION + '-';[0m
  475 |             else[0m
      | [0;32m            } 
[0m[1mgzip.c:479:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |                 if (0 <= optc)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  480 |                   optc += ENV_OPTION;[0m
  481 |                 else[0m
      | [0;32m                } 
[0m[1mgzip.c:494:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |                     if (env_argc != 1 && !quiet)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  495 |                       fprintf (stderr,[0m
  496 |                                ("%s: warning: "OPTIONS_VAR" environment variable"[0m
  497 |                                 " is deprecated; use an alias or script\n"),[0m
  498 |                                program_name);[0m
      | [0;1;32m                                             
[0m[1mgzip.c:509:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |         if (!env_argv)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  510 |           optc = getopt_long (argc, argv, shortopts, longopts, &longind);[0m
      | [0;1;32m                                                                         
[0m[1mgzip.c:511:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |         if (optc < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  512 |           break;[0m
      | [0;1;32m                
[0m[1mgzip.c:516:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  516 |             ascii = 1; break;[0m
      | [0;1;32m            ^               
[0m      | [0;32m            {               ;} 
[0m[1mgzip.c:518:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  518 |             maxbits = atoi(optarg);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  519 |             for (; *optarg; optarg++)[0m
  520 |               if (! ('0' <= *optarg && *optarg <= '9'))[0m
  521 |                 {[0m
  522 |                   fprintf (stderr, "%s: -b operand is not an integer\n",[0m
  523 |                            program_name);[0m
  524 |                   try_help ();[0m
  525 |                 }[0m
  526 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mgzip.c:519:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  519 |             for (; *optarg; optarg++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  520 |               if (! ('0' <= *optarg && *optarg <= '9'))[0m
  521 |                 {[0m
  522 |                   fprintf (stderr, "%s: -b operand is not an integer\n",[0m
  523 |                            program_name);[0m
  524 |                   try_help ();[0m
  525 |                 }[0m
      | [0;1;32m                 
[0m[1mgzip.c:528:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  528 |             to_stdout = 1; break;[0m
      | [0;1;32m            ^                   
[0m      | [0;32m            {                   ;} 
[0m[1mgzip.c:530:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  530 |             decompress = 1; break;[0m
      | [0;1;32m            ^                    
[0m      | [0;32m            {                    ;} 
[0m[1mgzip.c:532:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  532 |             force++; break;[0m
      | [0;1;32m            ^             
[0m      | [0;32m            {             ;} 
[0m[1mgzip.c:534:22: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  534 |             help (); finish_out (); break;[0m
      | [0;1;32m                     ^                   
[0m      | [0;32m                     {                   ;} 
[0m[1mgzip.c:536:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  536 |             keep = 1; break;[0m
      | [0;1;32m            ^              
[0m      | [0;32m            {              ;} 
[0m[1mgzip.c:538:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  538 |             list = decompress = test = to_stdout = 1; break;[0m
      | [0;1;32m            ^                                              
[0m      | [0;32m            {                                              ;} 
[0m[1mgzip.c:540:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  540 |             license (); finish_out (); break;[0m
      | [0;1;32m            ^                               
[0m      | [0;32m            {                               ;} 
[0m[1mgzip.c:542:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  542 |             no_time = 1; break;[0m
      | [0;1;32m            ^                 
[0m      | [0;32m            {                 ;} 
[0m[1mgzip.c:544:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  544 |             no_time = 0; break;[0m
      | [0;1;32m            ^                 
[0m      | [0;32m            {                 ;} 
[0m[1mgzip.c:547:36: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  547 |             no_name = no_time = 1; break;[0m
      | [0;1;32m                                   ^    
[0m      | [0;32m                                   {    ;} 
[0m[1mgzip.c:550:36: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  550 |             no_name = no_time = 0; break;[0m
      | [0;1;32m                                   ^    
[0m      | [0;32m                                   {    ;} 
[0m[1mgzip.c:552:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  552 |             presume_input_tty = true; break;[0m
      | [0;1;32m            ^                              
[0m      | [0;32m            {                              ;} 
[0m[1mgzip.c:555:24: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  555 |             quiet = 1; verbose = 0; break;[0m
      | [0;1;32m                       ^                 
[0m      | [0;32m                       {                 ;} 
[0m[1mgzip.c:562:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  562 |             recursive = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  563 | #endif[0m
  564 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mgzip.c:569:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  569 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mgzip.c:574:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  574 |             z_len = strlen(optarg);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  575 |             z_suffix = optarg;[0m
  576 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mgzip.c:578:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  578 |             synchronous = true;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  579 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mgzip.c:581:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  581 |             test = decompress = to_stdout = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  582 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mgzip.c:585:24: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  585 |             verbose++; quiet = 0; break;[0m
      | [0;1;32m                       ^               
[0m      | [0;32m                       {               ;} 
[0m[1mgzip.c:587:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  587 |             version (); finish_out (); break;[0m
      | [0;1;32m            ^                               
[0m      | [0;32m            {                               ;} 
[0m[1mgzip.c:597:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  597 |             FALLTHROUGH;[0m
      | [0;1;32m            ^          
[0m      | [0;32m            {          ;} 
[0m[1m./tailor.h:204:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  204 | #  define FALLTHROUGH ((void) 0)[0m
      | [0;1;32m                      ^
[0m[1mgzip.c:601:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  601 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mgzip.c:604:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  604 |             if (ENV_OPTION <= optc && optc != ENV_OPTION + '?')[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  605 |               {[0m
  606 |                 /* Output a diagnostic, since getopt_long didn't.  */[0m
  607 |                 fprintf (stderr, "%s: ", program_name);[0m
  608 |                 if (longind < 0)[0m
  609 |                   fprintf (stderr, "-%c: ", optc - ENV_OPTION);[0m
  610 |                 else[0m
  611 |                   fprintf (stderr, "--%s: ", longopts[longind].name);[0m
  612 |                 fprintf (stderr, ("option not valid in "OPTIONS_VAR[0m
  613 |                                   " environment variable\n"));[0m
  614 |               }[0m
  615 |             try_help ();[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mgzip.c:608:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  608 |                 if (longind < 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  609 |                   fprintf (stderr, "-%c: ", optc - ENV_OPTION);[0m
  610 |                 else[0m
      | [0;32m                } 
[0m[1mgzip.c:610:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  610 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  611 |                   fprintf (stderr, "--%s: ", longopts[longind].name);[0m
      | [0;1;32m                                                                     
[0m[1mgzip.c:622:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  622 |     if (no_time < 0) no_time = decompress;[0m
      | [0;1;32m                    ^                     
[0m      | [0;32m                     {
[0m[1mgzip.c:623:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |     if (no_name < 0) no_name = decompress;[0m
      | [0;1;32m                    ^                     
[0m      | [0;32m                     {
[0m[1mgzip.c:675:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  675 |         if (!quiet && 1 < file_count)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  676 |           do_list (-1);[0m
      | [0;1;32m                       
[0m[1mgzip.c:677:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  677 |         if (fflush (stdout) != 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  678 |           write_error ();[0m
      | [0;1;32m                         
[0m[1mgzip.c:684:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |         && errno != EBADF)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  685 |       write_error ();[0m
      | [0;1;32m                     
[0m[1mgzip.c:693:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |   if (!decompress || last_member)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  694 |     return 1;[0m
      | [0;1;32m             
[0m[1mgzip.c:698:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  698 |       if (insize != INBUFSIZ || fill_inbuf (1) == EOF)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  699 |         return 1;[0m
      | [0;1;32m                 
[0m[1mgzip.c:722:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  722 |       if (!no_time || list)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  723 |         time_stamp = get_stat_mtime (&istat);[0m
      | [0;1;32m                                             
[0m[1mgzip.c:747:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |         if (! quiet)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  748 |           fprintf (stderr,[0m
  749 |                    ("%s: compressed data not %s a terminal."[0m
  750 |                     " Use -f to force %scompression.\n"[0m
  751 |                     "For help, type: %s -h\n"),[0m
  752 |                    program_name,[0m
  753 |                    decompress ? "read from" : "written to",[0m
  754 |                    decompress ? "de" : "",[0m
  755 |                    program_name);[0m
      | [0;1;32m                                 
[0m[1mgzip.c:793:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |         if (work (STDIN_FILENO, STDOUT_FILENO) != OK)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  794 |           return;[0m
      | [0;1;32m                 
[0m[1mgzip.c:796:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  796 |         if (input_eof ())[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  797 |           break;[0m
      | [0;1;32m                
[0m[1mgzip.c:800:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |         if (method < 0) return; /* error message already emitted */[0m
      | [0;1;32m                       ^                                           
[0m      | [0;32m                        {
[0m[1mgzip.c:834:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  834 |   if (dirlen == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  835 |     dir = &dot, dirlen = 1;[0m
      | [0;1;32m                           
[0m[1mgzip.c:856:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |       if (0 <= dfd)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  857 |         close (dfd);[0m
      | [0;1;32m                    
[0m[1mgzip.c:858:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  858 |       if (dirlen == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  859 |         dir = &dot, dirlen = 1;[0m
      | [0;1;32m                               
[0m[1mgzip.c:860:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  860 |       memcpy (dfname, dir, dirlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mgzip.c:860:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  860 |       memcpy (dfname, dir, dirlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mgzip.c:871:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  871 | local void treat_file(iname)[0m
      | [0;1;32m           ^
[0m[1mgzip.c:884:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  884 |     if (ifd < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  885 |       return;[0m
      | [0;1;32m             
[0m[1mgzip.c:981:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  981 |         if (create_outfile() != OK) return;[0m
      | [0;1;32m                                   ^       
[0m      | [0;32m                                    {
[0m[1mgzip.c:989:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  989 |     if (!save_orig_name) save_orig_name = !no_name;[0m
      | [0;1;32m                        ^                          
[0m      | [0;32m                         {
[0m[1mgzip.c:1003:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1003 |         if (input_eof ())[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1004 |           break;[0m
      | [0;1;32m                
[0m[1mgzip.c:1007:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1007 |         if (method < 0) break;    /* error message already emitted */[0m
      | [0;1;32m                       ^                                             
[0m      | [0;32m                        {
[0m[1mgzip.c:1011:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1011 |     if (close (ifd) != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1012 |       read_error ();[0m
      | [0;1;32m                    
[0m[1mgzip.c:1027:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |             || close (ofd) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1028 |           write_error ();[0m
      | [0;1;32m                         
[0m[1mgzip.c:1057:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1057 |         if (!to_stdout)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1058 |           remove_output_file (false);[0m
      | [0;1;32m                                     
[0m[1mgzip.c:1071:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1071 |         if (!test)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1072 |           fprintf(stderr, " -- %s %s", keep ? "created" : "replaced with",[0m
 1073 |                   ofname);[0m
      | [0;1;32m                          
[0m[1mgzip.c:1081:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1081 |   while ((*dst++ = *src++))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1082 |     continue;[0m
      | [0;1;32m             
[0m[1mgzip.c:1125:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |       if (0 <= ofd)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1126 |         break;[0m
      | [0;1;32m              
[0m[1mgzip.c:1132:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1132 |           shorten_name (ofname);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1133 |           name_shortened = 1;[0m
 1134 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mgzip.c:1138:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1138 |           if (check_ofname () != OK)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1139 |             {[0m
 1140 |               close (ifd);[0m
 1141 |               return ERROR;[0m
 1142 |             }[0m
 1143 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mgzip.c:1146:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1146 |           progerror (ofname);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1147 |           close (ifd);[0m
 1148 |           return ERROR;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mgzip.c:1172:13: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1172 | local char *get_suffix(name)[0m
      | [0;1;32m            ^
[0m[1mgzip.c:1207:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1207 |         strcpy(suffix, name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1207:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1207 |         strcpy(suffix, name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1209:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1209 |         strcpy(suffix, name+nlen-MAX_SUFFIX-2);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1209:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1209 |         strcpy(suffix, name+nlen-MAX_SUFFIX-2);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1241:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1241 |       if (HAVE_WORKING_O_NOFOLLOW)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1242 |         flags |= O_NOFOLLOW;[0m
 1243 |       else[0m
      | [0;32m      } 
[0m[1mgzip.c:1246:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1246 |           if (lstat (name, st) != 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1247 |             return -1;[0m
 1248 |           else if (S_ISLNK (st->st_mode))[0m
      | [0;32m          } 
[0m[1mgzip.c:1288:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1288 | open_input_file (iname, sbuf)[0m
      | [0;1;32m^
[0m[1mgzip.c:1306:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1306 |     if (sizeof ifname - 1 <= strlen (iname))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1307 |         goto name_too_long;[0m
      | [0;1;32m                           
[0m[1mgzip.c:1309:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1309 |     strcpy(ifname, iname);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1309:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1309 |     strcpy(ifname, iname);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1313:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1313 |     if (0 <= fd)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1314 |       return fd;[0m
      | [0;1;32m                
[0m[1mgzip.c:1334:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1334 |     if (strequ(z_suffix, ".gz")) suf++;[0m
      | [0;1;32m                                ^      
[0m      | [0;32m                                 {
[0m[1mgzip.c:1339:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1339 |         strcpy (ifname, iname);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1339:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1339 |         strcpy (ifname, iname);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1348:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1348 |         if (sizeof ifname <= ilen + strlen (s))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1349 |           goto name_too_long;[0m
      | [0;1;32m                             
[0m[1mgzip.c:1350:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1350 |         strcat(ifname, s);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1350:9: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 1350 |         strcat(ifname, s);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1352:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1352 |         if (0 <= fd)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1353 |           return fd;[0m
      | [0;1;32m                    
[0m[1mgzip.c:1359:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1359 |         if (strequ (s0, z_suffix))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1360 |           z_suffix_errno = errno;[0m
      | [0;1;32m                                 
[0m[1mgzip.c:1364:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1364 |     strcpy(ifname, iname);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1364:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1364 |     strcpy(ifname, iname);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1372:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1372 |     strcat(ifname, z_suffix);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1372:5: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 1372 |     strcat(ifname, z_suffix);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1391:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1391 |     strcpy(ofname, ifname);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1391:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1391 |     strcpy(ofname, ifname);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1400:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1400 |             if (!recursive && test)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1401 |               return OK;[0m
      | [0;1;32m                        
[0m[1mgzip.c:1413:13: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1413 |             strcpy(suff, ".tar");[0m
      | [0;1;32m            ^~~~~~
[0m[1mgzip.c:1413:13: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1413 |             strcpy(suff, ".tar");[0m
      | [0;1;32m            ^~~~~~
[0m[1mgzip.c:1453:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1453 |         if (sizeof ofname <= strlen (ofname) + z_len)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1454 |             goto name_too_long;[0m
      | [0;1;32m                               
[0m[1mgzip.c:1455:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1455 |         strcat(ofname, z_suffix);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1455:9: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 1455 |         strcat(ofname, z_suffix);[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1469:1: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1469 | discard_input_bytes (nbytes, flags)[0m
      | [0;1;32m^
[0m[1mgzip.c:1476:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1476 |       if (flags & HEADER_CRC)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1477 |         updcrc (&c, 1);[0m
      | [0;1;32m                       
[0m[1mgzip.c:1478:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1478 |       if (nbytes != (size_t) -1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1479 |         nbytes--;[0m
 1480 |       else if (! c)[0m
      | [0;32m      } 
[0m[1mgzip.c:1480:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1480 |       else if (! c)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1481 |         break;[0m
      | [0;1;32m              
[0m[1mgzip.c:1496:11: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1496 | local int get_method(in)[0m
      | [0;1;32m          ^
[0m[1mgzip.c:1557:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1557 |             if (force <= 1) return -1;[0m
      | [0;1;32m                           ^          
[0m      | [0;32m                            {
[0m[1mgzip.c:1603:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1603 |             if (flags & HEADER_CRC)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1604 |               updcrc (lenbuf, 2);[0m
      | [0;1;32m                                 
[0m[1mgzip.c:1619:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1619 |                     if (*p++ == '\0') break;[0m
      | [0;1;32m                                     ^      
[0m      | [0;32m                                      {
[0m[1mgzip.c:1624:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1624 |                 if (flags & HEADER_CRC)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1625 |                   updcrc ((uch *) base, p - base);[0m
      | [0;1;32m                                                  
[0m[1mgzip.c:1627:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1627 |                 memmove (base, p, strlen (p) + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mgzip.c:1627:17: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1627 |                 memmove (base, p, strlen (p) + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mgzip.c:1631:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1631 |                    if (base) list=0; /* avoid warning about unused variable */[0m
      | [0;1;32m                            ^                                                 
[0m      | [0;32m                             {
[0m[1mgzip.c:1652:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1652 |                 if (force <= 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1653 |                   return -1;[0m
      | [0;1;32m                            
[0m[1mgzip.c:1668:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1668 |         if (check_zipfile(in) != OK) return -1;[0m
      | [0;1;32m                                    ^          
[0m      | [0;32m                                     {
[0m[1mgzip.c:1689:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1689 |         if (imagic1 != EOF)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1690 |             inptr--;[0m
      | [0;1;32m                    
[0m[1mgzip.c:1696:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1696 |     if (method >= 0) return method;[0m
      | [0;1;32m                    ^              
[0m      | [0;32m                     {
[0m[1mgzip.c:1707:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1707 |             for (inbyte = imagic1;  inbyte == 0;  inbyte = try_byte ())[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1708 |               continue;[0m
      | [0;1;32m                       
[0m[1mgzip.c:1754:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1754 |         if (total_in <= 0 || total_out <= 0) return;[0m
      | [0;1;32m                                            ^       
[0m      | [0;32m                                             {
[0m[1mgzip.c:1784:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1784 |         if (tm)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1785 |           printf ("%s%3d %02d:%02d ", month_abbr[tm->tm_mon],[0m
 1786 |                   tm->tm_mday, tm->tm_hour, tm->tm_min);[0m
 1787 |         else[0m
      | [0;32m        } 
[0m[1mgzip.c:1787:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1787 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1788 |           printf ("??? ?? ??:?? ");[0m
      | [0;1;32m                                   
[0m[1mgzip.c:1819:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1819 | local void shorten_name(name)[0m
      | [0;1;32m           ^
[0m[1mgzip.c:1830:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1830 |         if (len <= 1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1831 |           gzip_error ("name too short");[0m
      | [0;1;32m                                        
[0m[1mgzip.c:1836:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1836 |     if (! p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1837 |       gzip_error ("can't recover suffix\n");[0m
      | [0;1;32m                                            
[0m[1mgzip.c:1843:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1843 |         strcpy(p-4, ".tgz");[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1843:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1843 |         strcpy(p-4, ".tgz");[0m
      | [0;1;32m        ^~~~~~
[0m[1mgzip.c:1854:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1854 |             if (plen > min_part) trunc = p-1;[0m
      | [0;1;32m                                ^            
[0m      | [0;32m                                 {
[0m[1mgzip.c:1855:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1855 |             if (*p) p++;[0m
      | [0;1;32m                   ^    
[0m      | [0;32m                    {
[0m[1mgzip.c:1866:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1866 |         if (!trunc)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1867 |           gzip_error ("internal error in shorten_name");[0m
      | [0;1;32m                                                        
[0m[1mgzip.c:1868:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1868 |         if (trunc[1] == '\0') trunc--; /* force truncation */[0m
      | [0;1;32m                             ^                               
[0m      | [0;32m                              {
[0m[1mgzip.c:1870:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1870 |     strcpy(trunc, z_suffix);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1870:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1870 |     strcpy(trunc, z_suffix);[0m
      | [0;1;32m    ^~~~~~
[0m[1mgzip.c:1890:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1890 |             if (exit_code == OK) exit_code = WARNING;[0m
      | [0;1;32m                                ^                    
[0m      | [0;32m                                 {
[0m[1mgzip.c:1924:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1924 | local void copy_stat(ifstat)[0m
      | [0;1;32m           ^
[0m[1mgzip.c:1938:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1938 |     if (restoring)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1939 |       timespec[1] = time_stamp;[0m
      | [0;1;32m                               
[0m[1mgzip.c:1989:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 1989 | local void treat_dir (fd, dir)[0m
      | [0;1;32m           ^
[0m[1mgzip.c:2008:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2008 |     if (! entries)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2009 |       progerror (dir);[0m
      | [0;1;32m                      
[0m[1mgzip.c:2010:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2010 |     if (closedir (dirp) != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2011 |       progerror (dir);[0m
      | [0;1;32m                      
[0m[1mgzip.c:2012:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2012 |     if (! entries)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2013 |       return;[0m
      | [0;1;32m             
[0m[1mgzip.c:2018:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2018 |         if (strequ (entry, ".") || strequ (entry, ".."))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2019 |           continue;[0m
      | [0;1;32m                   
[0m[1mgzip.c:2021:13: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2021 |             strcpy(nbuf,dir);[0m
      | [0;1;32m            ^~~~~~
[0m[1mgzip.c:2021:13: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2021 |             strcpy(nbuf,dir);[0m
      | [0;1;32m            ^~~~~~
[0m[1mgzip.c:2022:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2022 |             if (*last_component (nbuf) && !ISSLASH (nbuf[len - 1]))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 2023 |               nbuf[len++] = '/';[0m
      | [0;1;32m                                
[0m[1mgzip.c:2024:13: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2024 |             strcpy (nbuf + len, entry);[0m
      | [0;1;32m            ^~~~~~
[0m[1mgzip.c:2024:13: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2024 |             strcpy (nbuf + len, entry);[0m
      | [0;1;32m            ^~~~~~
[0m[1mgzip.c:2049:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2049 |       if (act.sa_handler != SIG_IGN)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2050 |         sigaddset (&caught_signals, handled_sig[i]);[0m
      | [0;1;32m                                                    
[0m[1mgzip.c:2057:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2057 |   for (i = 0; i < nsigs; i++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2058 |     if (sigismember (&caught_signals, handled_sig[i]))[0m
 2059 |       {[0m
 2060 |         if (i == 0)[0m
 2061 |           foreground = 1;[0m
 2062 |         sigaction (handled_sig[i], &act, NULL);[0m
 2063 |       }[0m
      | [0;1;32m       
[0m[1mgzip.c:2060:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2060 |         if (i == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2061 |           foreground = 1;[0m
      | [0;1;32m                         
[0m[1mgzip.c:2069:12: [0m[0;1;35mwarning: [0m[1ma function definition without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
 2069 | local void do_exit(exitcode)[0m
      | [0;1;32m           ^
[0m[1mgzip.c:2074:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2074 |     if (in_exit) exit(exitcode);[0m
      | [0;1;32m                ^               
[0m      | [0;32m                 {
[0m[1mgzip.c:2094:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2094 |   if (fclose (stdout) != 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2095 |     write_error ();[0m
      | [0;1;32m                   
[0m[1mgzip.c:2108:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2108 |   if (!signals_already_blocked)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2109 |     sigprocmask (SIG_BLOCK, &caught_signals, &oldset);[0m
      | [0;1;32m                                                      
[0m[1mgzip.c:2119:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2119 |   if (!signals_already_blocked)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2120 |     sigprocmask (SIG_SETMASK, &oldset, NULL);[0m
      | [0;1;32m                                             
[0m[1mgzip.c:2140:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2140 |    if (sig == exiting_signal)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2141 |      _exit (WARNING);[0m
      | [0;1;32m                     
[0m153 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[64/64][179.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/gzip-1.12/tidy-fixes/tmp8yo9d2h0.yaml -p=/itch/common/crepos/cu-to-rtu/c/gzip-1.12 /itch/common/crepos/cu-to-rtu/c/gzip-1.12/inflate.c
[1minflate.c:310:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  310 |   memzero(c, sizeof(c));[0m
      | [0;1;32m  ^
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1minflate.c:310:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  310 |   memzero(c, sizeof(c));[0m
      | [0;1;32m  ^
[0m[1m./gzip.h:42:23: [0m[0;1;36mnote: [0mexpanded from macro 'memzero'[0m
   42 | #define memzero(s, n) memset ((voidp)(s), 0, (n))[0m
      | [0;1;32m                      ^~~~~~
[0m[1minflate.c:321:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |     if (!q)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  322 |       return 3;[0m
      | [0;1;32m               
[0m[1minflate.c:337:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |   for (j = 1; j <= BMAX; j++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  338 |     if (c[j])[0m
  339 |       break;[0m
      | [0;1;32m            
[0m[1minflate.c:338:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |     if (c[j])[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  339 |       break;[0m
      | [0;1;32m            
[0m[1minflate.c:341:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |   if ((unsigned)l < j)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  342 |     l = j;[0m
      | [0;1;32m          
[0m[1minflate.c:343:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |   for (i = BMAX; i; i--)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  344 |     if (c[i])[0m
  345 |       break;[0m
      | [0;1;32m            
[0m[1minflate.c:344:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |     if (c[i])[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  345 |       break;[0m
      | [0;1;32m            
[0m[1minflate.c:347:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |   if ((unsigned)l > i)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  348 |     l = i;[0m
      | [0;1;32m          
[0m[1minflate.c:353:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |   for (y = 1 << j; j < i; j++, y <<= 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  354 |     if ((y -= c[j]) < 0)[0m
  355 |       return 2;                 /* bad input: more codes than bits */[0m
      | [0;1;32m                                                                     
[0m[1minflate.c:354:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |     if ((y -= c[j]) < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  355 |       return 2;                 /* bad input: more codes than bits */[0m
      | [0;1;32m                                                                     
[0m[1minflate.c:356:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |   if ((y -= c[i]) < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  357 |     return 2;[0m
      | [0;1;32m             
[0m[1minflate.c:372:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  372 |     if ((j = *p++) != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  373 |       v[x[j]++] = i;[0m
      | [0;1;32m                    
[0m[1minflate.c:406:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |           if (j < z)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  407 |             while (++j < z)       /* try smaller tables up to z bits */[0m
  408 |             {[0m
  409 |               if ((f <<= 1) <= *++xp)[0m
  410 |                 break;            /* enough codes to use up j bits */[0m
  411 |               f -= *xp;           /* else deduct codes from patterns */[0m
  412 |             }[0m
      | [0;1;32m             
[0m[1minflate.c:409:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |               if ((f <<= 1) <= *++xp)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  410 |                 break;            /* enough codes to use up j bits */[0m
      | [0;1;32m                                                                     
[0m[1minflate.c:420:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |           if (h)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  421 |             huft_free(u[0]);[0m
      | [0;1;32m                            
[0m[1minflate.c:443:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |       if (p >= v + n)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  444 |         r.e = 99;               /* out of values--invalid code */[0m
  445 |       else if (*p < s)[0m
      | [0;32m      } 
[0m[1minflate.c:459:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |       for (j = i >> w; j < z; j += f)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  460 |         q[j] = r;[0m
      | [0;1;32m                 
[0m[1minflate.c:463:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |       for (j = 1 << (k - 1); i & j; j >>= 1)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  464 |         i ^= j;[0m
      | [0;1;32m               
[0m[1minflate.c:531:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |     if ((e = (t = tl + ((unsigned)b & ml))->e) > 16)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  532 |       do {[0m
  533 |         if (e == 99)[0m
  534 |           return 1;[0m
  535 |         DUMPBITS(t->b)[0m
  536 |         e -= 16;[0m
  537 |         NEEDBITS(e)[0m
  538 |       } while ((e = (t = t->v.t + ((unsigned)b & mask_bits[e]))->e) > 16);[0m
      | [0;1;32m                                                                          
[0m[1minflate.c:533:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |         if (e == 99)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  534 |           return 1;[0m
      | [0;1;32m                   
[0m[1minflate.c:553:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  553 |       if (e == 15)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  554 |         break;[0m
      | [0;1;32m              
[0m[1minflate.c:563:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |       if ((e = (t = td + ((unsigned)b & md))->e) > 16)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  564 |         do {[0m
  565 |           if (e == 99)[0m
  566 |             return 1;[0m
  567 |           DUMPBITS(t->b)[0m
  568 |           e -= 16;[0m
  569 |           NEEDBITS(e)[0m
  570 |         } while ((e = (t = t->v.t + ((unsigned)b & mask_bits[e]))->e) > 16);[0m
      | [0;1;32m                                                                            
[0m[1minflate.c:565:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  565 |           if (e == 99)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  566 |             return 1;[0m
      | [0;1;32m                     
[0m[1minflate.c:583:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  583 |           memcpy(slide + w, slide + d, e);[0m
      | [0;1;32m          ^~~~~~
[0m[1minflate.c:583:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  583 |           memcpy(slide + w, slide + d, e);[0m
      | [0;1;32m          ^~~~~~
[0m[1minflate.c:587:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  587 |         else                      /* do it slow to avoid memcpy() overlap */[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  588 | #endif[0m
  589 |           do {[0m
  590 |             slide[w++] = slide[d++];[0m
  591 |             Tracevv((stderr, "%c", slide[w-1]));[0m
  592 |           } while (--e);[0m
      | [0;1;32m                        
[0m[1minflate.c:640:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |   if (n != (unsigned)((~b) & 0xffff))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  641 |     return 1;                   /* error in compressed data */[0m
      | [0;1;32m                                                              
[0m[1minflate.c:683:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  683 |   for (i = 0; i < 144; i++)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  684 |     l[i] = 8;[0m
      | [0;1;32m             
[0m[1minflate.c:685:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  685 |   for (; i < 256; i++)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  686 |     l[i] = 9;[0m
      | [0;1;32m             
[0m[1minflate.c:687:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  687 |   for (; i < 280; i++)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  688 |     l[i] = 7;[0m
      | [0;1;32m             
[0m[1minflate.c:689:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |   for (; i < 288; i++)          /* make a complete, but wrong code set */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  690 |     l[i] = 8;[0m
      | [0;1;32m             
[0m[1minflate.c:692:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |   if ((i = huft_build(l, 288, 257, cplens, cplext, &tl, &bl)) != 0)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  693 |     return i;[0m
      | [0;1;32m             
[0m[1minflate.c:697:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  697 |   for (i = 0; i < 30; i++)      /* make an incomplete code set */[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  698 |     l[i] = 5;[0m
      | [0;1;32m             
[0m[1minflate.c:708:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (inflate_codes(tl, td, bl, bd))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  709 |     return 1;[0m
      | [0;1;32m             
[0m[1minflate.c:765:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |   if (nl > 286 || nd > 30)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  766 | #endif[0m
  767 |     return 1;                   /* bad lengths */[0m
      | [0;1;32m                                                 
[0m[1minflate.c:777:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |   for (; j < 19; j++)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  778 |     ll[border[j]] = 0;[0m
      | [0;1;32m                      
[0m[1minflate.c:785:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |     if (i == 1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  786 |       huft_free(tl);[0m
      | [0;1;32m                    
[0m[1minflate.c:790:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |   if (tl == NULL)               /* Grrrhhh */[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  791 |         return 2;[0m
      | [0;1;32m                 
[0m[1minflate.c:809:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |     if (j < 16)                 /* length of code in bits (0..15) */[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  810 |       ll[i++] = l = j;          /* save last length in l */[0m
  811 |     else if (j == 16)           /* repeat last length 3 to 6 times */[0m
      | [0;32m    } 
[0m[1minflate.c:816:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  816 |       if ((unsigned)i + j > n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  817 |         return 1;[0m
      | [0;1;32m                 
[0m[1minflate.c:818:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |       while (j--)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  819 |         ll[i++] = l;[0m
      | [0;1;32m                    
[0m[1minflate.c:826:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |       if ((unsigned)i + j > n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  827 |         return 1;[0m
      | [0;1;32m                 
[0m[1minflate.c:828:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  828 |       while (j--)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  829 |         ll[i++] = 0;[0m
      | [0;1;32m                    
[0m[1minflate.c:837:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  837 |       if ((unsigned)i + j > n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  838 |         return 1;[0m
      | [0;1;32m                 
[0m[1minflate.c:839:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  839 |       while (j--)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  840 |         ll[i++] = 0;[0m
      | [0;1;32m                    
[0m[1minflate.c:930:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  930 |   if (t == 2)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  931 |     return inflate_dynamic();[0m
      | [0;1;32m                             
[0m[1minflate.c:932:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  932 |   if (t == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  933 |     return inflate_stored();[0m
      | [0;1;32m                            
[0m[1minflate.c:934:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  934 |   if (t == 1)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  935 |     return inflate_fixed();[0m
      | [0;1;32m                           
[0m[1minflate.c:963:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  963 |     if ((r = inflate_block(&e)) != 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  964 |       return r;[0m
      | [0;1;32m               
[0m[1minflate.c:965:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  965 |     if (hufts > h)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  966 |       h = hufts;[0m
      | [0;1;32m                
[0m62 warnings generated.
Suppressed 13 warnings (13 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
