Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/diffutils-3.10
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 126 files out of 126 in compilation database ...
[  1/126][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpbmk_c7yz.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbsrtowcs-state.c
[  2/126][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmptaahpe_t.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/timegm.c
[  3/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp_vkipsdt.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/filenamecat-lgpl.c
[1mfilenamecat-lgpl.c:58:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (! ISSLASH (dir[dirlen - 1]) && ! ISSLASH (*base))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   59 |         sep = '/';[0m
      | [0;1;32m                  
[0m[1mfilenamecat-lgpl.c:72:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (p_concat == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   73 |     return NULL;[0m
      | [0;1;32m                
[0m[1mfilenamecat-lgpl.c:82:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |     if (base_in_result)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   83 |       *base_in_result = p;[0m
      | [0;1;32m                          
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  4/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpovme1dx8.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/stripslash.c
[1mstripslash.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |     base = file;[0m
      | [0;1;32m                
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  5/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpa1n1keh0.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/sys_socket.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  6/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp5ga8s66w.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbsrtowcs.c
17 warnings generated.
Suppressed 17 warnings (17 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  7/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpyo0v4g1t.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/timespec-sub.c
[1mtimespec-sub.c:42:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |       if (!ckd_add (&bs1, bs, 1))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   43 |         bs = bs1;[0m
   44 |       else if (- TYPE_SIGNED (time_t) < rs)[0m
      | [0;32m      } 
[0m[1mtimespec-sub.c:44:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |       else if (- TYPE_SIGNED (time_t) < rs)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m   45 |         rs--;[0m
   46 |       else[0m
      | [0;32m      } 
[0m[1mtimespec-sub.c:46:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   46 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   47 |         goto low_overflow;[0m
      | [0;1;32m                          
[0m3 warnings generated.

[  8/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpzyukdxff.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/strerror_r.c
[1mstrerror_r.c:130:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:130:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:144:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |       if (buflen)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  145 |         *buf = '\0';[0m
      | [0;1;32m                    
[0m[1mstrerror_r.c:154:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |     if (msg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  155 |       return safe_copy (buf, buflen, msg);[0m
      | [0;1;32m                                          
[0m[1mstrerror_r.c:165:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'ret' is never read [clang-analyzer-deadcode.DeadStores][0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:165:7: [0m[0;1;36mnote: [0mValue stored to 'ret' is never read[0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:447:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  447 |         snprintf (buf, buflen, "Unknown error %d", errnum);[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mstrerror_r.c:447:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  447 |         snprintf (buf, buflen, "Unknown error %d", errnum);[0m
      | [0;1;32m        ^~~~~~~~
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  9/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpbabudymb.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xstriconv.c
[1mxstriconv.c:37:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |   if (retval < 0 && errno == ENOMEM)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   38 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxstriconv.c:47:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   if (result == NULL && errno == ENOMEM)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   48 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxstriconv.c:59:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (result == NULL && errno == ENOMEM)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   60 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 10/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpzw4flbhk.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/dirname.c
[1mdirname.c:35:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!result)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 11/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpwk_gcwx8.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/strnlen1.c
[1mstrnlen1.c:31:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (end != NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   32 |     return end - string + 1;[0m
   33 |   else[0m
      | [0;32m  } 
[0m[1mstrnlen1.c:33:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   34 |     return maxlen;[0m
      | [0;1;32m                  
[0m2 warnings generated.

[ 12/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpyvl1jav6.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/malloc/dynarray_resize_clear.c
[1mmalloc/dynarray_resize_clear.c:31:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (!__libc_dynarray_resize (list, size, scratch, element_size))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   32 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m2 warnings generated.

[ 13/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmplmgqu2nn.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/offtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 14/126][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpcxybn4ee.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/dirname-lgpl.c
[1mdirname-lgpl.c:49:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |        prefix_length < length; length--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   50 |     if (! ISSLASH (file[length - 1]))[0m
   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:50:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |     if (! ISSLASH (file[length - 1]))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:79:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   if (!dir)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   80 |     return NULL;[0m
      | [0;1;32m                
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:82:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   if (append_dot)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   83 |     dir[length++] = '.';[0m
      | [0;1;32m                        
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 15/126][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpw6vf_hxp.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xalloc-die.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 16/126][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpqivyfo9m.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/hash-pjw.c
[1mhash-pjw.c:36:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   for (s = x; *s; s++)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   37 |     h = *s + ((h << 9) | (h >> (SIZE_BITS - 9)));[0m
      | [0;1;32m                                                 
[0m1 warning generated.

[ 17/126][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpdctr4_un.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/malloc/dynarray_at_failure.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 18/126][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpfzzszn7n.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/ialloc.c
5 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 19/126][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmph4i7k6eh.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xmalloca.c
[1mxmalloca.c:33:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p == NULL)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   34 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 20/126][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpuocvdtw8.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/stat-time.c
[ 21/126][2.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp1xu802pu.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/file-type.c
[1mfile-type.c:39:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (S_ISREG (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   40 |     return st->st_size == 0 ? _("regular empty file") : _("regular file");[0m
      | [0;1;32m                                                                          
[0m[1mfile-type.c:42:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   if (S_ISDIR (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   43 |     return _("directory");[0m
      | [0;1;32m                          
[0m[1mfile-type.c:45:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |   if (S_ISLNK (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   46 |     return _("symbolic link");[0m
      | [0;1;32m                              
[0m[1mfile-type.c:51:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   if (S_TYPEISMQ (st))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   52 |     return _("message queue");[0m
      | [0;1;32m                              
[0m[1mfile-type.c:54:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |   if (S_TYPEISSEM (st))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   55 |     return _("semaphore");[0m
      | [0;1;32m                          
[0m[1mfile-type.c:57:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |   if (S_TYPEISSHM (st))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   58 |     return _("shared memory object");[0m
      | [0;1;32m                                     
[0m[1mfile-type.c:60:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   60 |   if (S_TYPEISTMO (st))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   61 |     return _("typed memory object");[0m
      | [0;1;32m                                    
[0m[1mfile-type.c:65:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |   if (S_ISBLK (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   66 |     return _("block special file");[0m
      | [0;1;32m                                   
[0m[1mfile-type.c:68:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   if (S_ISCHR (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   69 |     return _("character special file");[0m
      | [0;1;32m                                       
[0m[1mfile-type.c:71:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (S_ISCTG (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   72 |     return _("contiguous data");[0m
      | [0;1;32m                                
[0m[1mfile-type.c:74:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |   if (S_ISFIFO (st->st_mode))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   75 |     return _("fifo");[0m
      | [0;1;32m                     
[0m[1mfile-type.c:77:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |   if (S_ISDOOR (st->st_mode))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   78 |     return _("door");[0m
      | [0;1;32m                     
[0m[1mfile-type.c:80:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |   if (S_ISMPB (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   81 |     return _("multiplexed block special file");[0m
      | [0;1;32m                                               
[0m[1mfile-type.c:83:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |   if (S_ISMPC (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   84 |     return _("multiplexed character special file");[0m
      | [0;1;32m                                                   
[0m[1mfile-type.c:86:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |   if (S_ISMPX (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   87 |     return _("multiplexed file");[0m
      | [0;1;32m                                 
[0m[1mfile-type.c:89:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |   if (S_ISNAM (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   90 |     return _("named file");[0m
      | [0;1;32m                           
[0m[1mfile-type.c:92:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |   if (S_ISNWK (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   93 |     return _("network special file");[0m
      | [0;1;32m                                     
[0m[1mfile-type.c:95:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |   if (S_ISOFD (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   96 |     return _("migrated file with data");[0m
      | [0;1;32m                                        
[0m[1mfile-type.c:98:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |   if (S_ISOFL (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   99 |     return _("migrated file without data");[0m
      | [0;1;32m                                           
[0m[1mfile-type.c:101:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |   if (S_ISPORT (st->st_mode))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  102 |     return _("port");[0m
      | [0;1;32m                     
[0m[1mfile-type.c:104:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |   if (S_ISSOCK (st->st_mode))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  105 |     return _("socket");[0m
      | [0;1;32m                       
[0m[1mfile-type.c:107:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |   if (S_ISWHT (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  108 |     return _("whiteout");[0m
      | [0;1;32m                         
[0m36 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 22/126][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpe4mxt1u5.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/timespec-add.c
[1mtimespec-add.c:42:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |       if (!ckd_add (&bs1, bs, 1))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   43 |         bs = bs1;[0m
   44 |       else if (rs < 0)[0m
      | [0;32m      } 
[0m[1mtimespec-add.c:44:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |       else if (rs < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   45 |         rs++;[0m
   46 |       else[0m
      | [0;32m      } 
[0m[1mtimespec-add.c:46:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   46 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   47 |         goto high_overflow;[0m
      | [0;1;32m                           
[0m3 warnings generated.

[ 23/126][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp4_wgb_4h.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/imaxtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 24/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpi9u72hjb.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/btowc.c
[1mbtowc.c:38:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   38 |       memset (&state, 0, sizeof (mbstate_t));[0m
      | [0;1;32m      ^~~~~~
[0m[1mbtowc.c:38:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   38 |       memset (&state, 0, sizeof (mbstate_t));[0m
      | [0;1;32m      ^~~~~~
[0m[1mbtowc.c:40:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (!(ret == (size_t)(-1) || ret == (size_t)(-2)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m   41 | #else[0m
   42 |       if (mbtowc (&wc, buf, 1) >= 0)[0m
   43 | #endif[0m
   44 |         return wc;[0m
      | [0;1;32m                  
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 25/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpyp7r_e8c.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/c-ctype.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 26/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp_od1zfpv.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/wctype-h.c
[ 27/126][2.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpz6954yas.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/normal.c
[1mnormal.c:46:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   46 |   if (!changes)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   47 |     return;[0m
      | [0;1;32m           
[0m[1mnormal.c:67:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |           if (files[0].linbuf[i + 1][-1] == '\n')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   68 |             putc ('\n', outfile);[0m
      | [0;1;32m                                 
[0m[1mnormal.c:72:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (changes == CHANGED)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   73 |     fputs ("---\n", outfile);[0m
      | [0;1;32m                             
[0m[1mnormal.c:83:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |           if (files[1].linbuf[i + 1][-1] == '\n')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   84 |             putc ('\n', outfile);[0m
      | [0;1;32m                                 
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 28/126][2.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpxbc98hhs.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/version-etc.c
[1mversion-etc.c:66:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (command_name)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
   68 |   else[0m
      | [0;32m  } 
[0m[1mversion-etc.c:67:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:67:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:68:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m                                                  
[0m[1mversion-etc.c:69:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:69:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:83:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   83 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:83:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   83 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:88:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:88:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   88 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:102:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  102 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mversion-etc.c:105:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:105:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:105:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  106 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:109:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:109:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:109:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  110 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:113:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:113:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:113:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  114 |                authors[0], authors[1], authors[2]);[0m
  115 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:120:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:120:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:120:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  121 |                authors[0], authors[1], authors[2], authors[3]);[0m
  122 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:127:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:127:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:127:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  128 |                authors[0], authors[1], authors[2], authors[3], authors[4]);[0m
  129 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:134:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:134:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:134:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  135 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  136 |                authors[5]);[0m
  137 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:142:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:142:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:142:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  143 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  144 |                authors[5], authors[6]);[0m
  145 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:150:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:150:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:150:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  151 | Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"),[0m
  152 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  153 |                 authors[5], authors[6], authors[7]);[0m
  154 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:159:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:159:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:159:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  160 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"),[0m
  161 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  162 |                authors[5], authors[6], authors[7], authors[8]);[0m
  163 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:170:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:170:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:170:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  171 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"),[0m
  172 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  173 |                 authors[5], authors[6], authors[7], authors[8]);[0m
  174 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:189:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   for (n_authors = 0; authors[n_authors]; n_authors++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  190 |     ;[0m
      | [0;1;32m     
[0m[1mversion-etc.c:209:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |        n_authors++)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  210 |     ;[0m
      | [0;1;32m     
[0m43 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 29/126][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpglr0wm_4.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/nanosleep.c
[1mnanosleep.c:73:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |             if (remaining_delay)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   74 |               remaining_delay->tv_sec += seconds;[0m
      | [0;1;32m                                                 
[0m1 warning generated.

[ 30/126][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpg7ceoat_.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/binary-io.c
[ 31/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp5x1sd83c.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/basename-lgpl.c
[1mbasename-lgpl.c:35:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   36 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:40:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   41 |         last_was_slash = true;[0m
   42 |       else if (last_was_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:58:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   59 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:62:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   63 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:66:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   67 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m5 warnings generated.

[ 32/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpkxxc1_tt.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/exitfail.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 33/126][2.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpfj3jspe8.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbuiter.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 34/126][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmptyer285l.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbiter.c
10 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 35/126][3.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpa4k574ea.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/fopen.c
[1mfopen.c:80:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   80 |             open_direction = O_RDONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   81 | #if GNULIB_FOPEN_GNU[0m
   82 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   83 |               *q++ = *p;[0m
   84 | #endif[0m
   85 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:82:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   83 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:87:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   87 |             open_direction = O_WRONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   88 |             open_flags |= O_CREAT | O_TRUNC;[0m
   89 | #if GNULIB_FOPEN_GNU[0m
   90 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   91 |               *q++ = *p;[0m
   92 | #endif[0m
   93 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:90:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   91 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:95:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |             open_direction = O_WRONLY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   96 |             open_flags |= O_CREAT | O_APPEND;[0m
   97 | #if GNULIB_FOPEN_GNU[0m
   98 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
   99 |               *q++ = *p;[0m
  100 | #endif[0m
  101 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:98:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   99 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:106:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  106 |             open_flags |= O_BINARY;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  107 | #if GNULIB_FOPEN_GNU[0m
  108 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
  109 |               *q++ = *p;[0m
  110 | #endif[0m
  111 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:108:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  109 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:113:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |             open_direction = O_RDWR;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  114 | #if GNULIB_FOPEN_GNU[0m
  115 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
  116 |               *q++ = *p;[0m
  117 | #endif[0m
  118 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:115:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |             if (q < fdopen_mode_buf + BUF_SIZE)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  116 |               *q++ = *p;[0m
      | [0;1;32m                        
[0m[1mfopen.c:121:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  121 |             open_flags |= O_EXCL;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  122 |             open_flags_gnu = true;[0m
  123 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:125:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |             open_flags |= O_CLOEXEC;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  126 |             open_flags_gnu = true;[0m
  127 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mfopen.c:130:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  130 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfopen.c:137:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |           if (len > fdopen_mode_buf + BUF_SIZE - q)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  138 |             len = fdopen_mode_buf + BUF_SIZE - q;[0m
      | [0;1;32m                                                 
[0m[1mfopen.c:139:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  139 |           memcpy (q, p, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mfopen.c:139:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  139 |           memcpy (q, p, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1mfopen.c:214:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |       if (fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  215 |         return NULL;[0m
      | [0;1;32m                    
[0m16 warnings generated.

[ 36/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp2i89hxk0.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/version-etc-fsf.c
[ 37/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmptdg_qdd7.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbchar.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 38/126][4.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpmz6qnpja.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/ed.c
[1med.c:49:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (!changes)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   50 |     return;[0m
      | [0;1;32m           
[0m[1med.c:80:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   81 |             print_1_line ("", &files[1].linbuf[i]);[0m
      | [0;1;32m                                                   
[0m[1med.c:84:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |       if (insert_mode)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   85 |         fputs (".\n", outfile);[0m
      | [0;1;32m                               
[0m[1med.c:108:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |   if (!changes)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  109 |     return;[0m
      | [0;1;32m           
[0m[1med.c:119:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |   if (changes == OLD)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  120 |     return;[0m
      | [0;1;32m           
[0m[1med.c:125:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |   for (i = f1; i <= l1; i++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  126 |     print_1_line ("", &files[1].linbuf[i]);[0m
      | [0;1;32m                                           
[0m[1med.c:151:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |   if (!changes)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  152 |     return;[0m
      | [0;1;32m           
[0m[1med.c:162:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  162 |       fprintf (outfile, "d%"pI"d %"pI"d\n", tf0,[0m
      | [0;1;32m      ^~~~~~~
[0m[1med.c:162:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  162 |       fprintf (outfile, "d%"pI"d %"pI"d\n", tf0,[0m
      | [0;1;32m      ^~~~~~~
[0m[1med.c:170:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |       fprintf (outfile, "a%"pI"d %"pI"d\n", tl0,[0m
      | [0;1;32m      ^~~~~~~
[0m[1med.c:170:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  170 |       fprintf (outfile, "a%"pI"d %"pI"d\n", tl0,[0m
      | [0;1;32m      ^~~~~~~
[0m[1med.c:174:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |       for (i = f1; i <= l1; i++)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  175 |         print_1_line ("", &files[1].linbuf[i]);[0m
      | [0;1;32m                                               
[0m24 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 39/126][3.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp5oe8uis_.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/tempname.c
[1mtempname.c:96:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (__getrandom (r, sizeof *r, GRND_NONBLOCK) == sizeof *r)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   97 |     return true;[0m
      | [0;1;32m                
[0m[1mtempname.c:145:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |   if (__lstat64_time64 (tmpl, &st) == 0 || errno == EOVERFLOW)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  146 |     __set_errno (EEXIST);[0m
      | [0;1;32m                         
[0m[1mtempname.c:246:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |               while (random_bits (&v, v) && biased_min <= v)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  247 |                 continue;[0m
      | [0;1;32m                         
[0m[1mtempname.c:264:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |       else if (errno != EEXIST)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  265 |         return -1;[0m
      | [0;1;32m                  
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 40/126][2.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp5trq1h98.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xstrtoimax.c
28 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 41/126][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpp0pdl_s2.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/unistr/u8-mbtoucr.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 42/126][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp93fs_457.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/progname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 43/126][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpr5fo4yic.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/fd-hook.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 44/126][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpgr6xnpcb.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xfreopen.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 45/126][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpy_52sejb.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/basename.c
[1mbasename.c:61:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   61 |   memcpy (p + dotslash_len, base, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mbasename.c:61:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   61 |   memcpy (p + dotslash_len, base, length);[0m
      | [0;1;32m  ^~~~~~
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 46/126][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpxw_f3yo3.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/ioctl.c
[ 47/126][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpj4qjr67o.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/malloca.c
[1mmalloca.c:63:37: [0m[0;1;35mwarning: [0m[1mThe left operand of '&' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m[1mmalloca.c:53:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m1 is not equal to 0[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m9223372036854775807 is < -1[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^~~~~~~~~~~
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m'?' condition is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:8: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   33 |        < (n)))[0m
      | [0;1;32m       ~~~~~
[0m[1mmalloca.c:53:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m  ^
[0m[1mmalloca.c:57:11: [0m[0;1;36mnote: [0mAssuming 'mem' is not equal to NULL[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mmalloca.c:57:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:59:44: [0m[0;1;36mnote: [0m'umemplus' declared without an initial value[0m
   59 |           uintptr_t umem = (uintptr_t)mem, umemplus;[0m
      | [0;1;32m                                           ^~~~~~~~
[0m[1mmalloca.c:62:11: [0m[0;1;36mnote: [0mAssuming overflow[0m
   62 |           ckd_add (&umemplus, umem, sizeof (small_t) + sa_alignment_max - 1);[0m
      | [0;1;32m          ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/stdckdint.h:37:26: [0m[0;1;36mnote: [0mexpanded from macro 'ckd_add'[0m
   37 | #define ckd_add(R, A, B) __builtin_add_overflow((A), (B), (R))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:63:37: [0m[0;1;36mnote: [0mThe left operand of '&' is a garbage value[0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 48/126][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp1fz5otvp.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/uinttostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 49/126][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmphuyqo4lu.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/dtotimespec.c
[1mdtotimespec.c:32:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (! (TYPE_MINIMUM (time_t) < sec))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   33 |     return make_timespec (TYPE_MINIMUM (time_t), 0);[0m
   34 |   else if (! (sec < 1.0 + TYPE_MAXIMUM (time_t)))[0m
      | [0;32m  } 
[0m[1mdtotimespec.c:34:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   34 |   else if (! (sec < 1.0 + TYPE_MAXIMUM (time_t)))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   35 |     return make_timespec (TYPE_MAXIMUM (time_t), TIMESPEC_HZ - 1);[0m
   36 |   else[0m
      | [0;32m  } 
[0m2 warnings generated.

[ 50/126][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpntty96u4.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xstrtoul.c
28 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 51/126][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpisgxllzx.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/careadlinkat.c
[1mcareadlinkat.c:69:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |   if (! alloc)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   70 |     alloc = &stdlib_allocator;[0m
      | [0;1;32m                              
[0m[1mcareadlinkat.c:107:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |               if (! b)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  108 |                 break;[0m
      | [0;1;32m                      
[0m[1mcareadlinkat.c:109:22: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |               return memcpy (b, buf, link_size);[0m
      | [0;1;32m                     ^~~~~~
[0m[1mcareadlinkat.c:109:22: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  109 |               return memcpy (b, buf, link_size);[0m
      | [0;1;32m                     ^~~~~~
[0m[1mcareadlinkat.c:116:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |               if (b)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  117 |                 return b;[0m
      | [0;1;32m                         
[0m[1mcareadlinkat.c:123:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |       if (buf != buffer)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  124 |         alloc->free (buf);[0m
      | [0;1;32m                          
[0m[1mcareadlinkat.c:136:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |   if (alloc->die)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  137 |     alloc->die (buf_size);[0m
      | [0;1;32m                          
[0m6 warnings generated.

[ 52/126][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpsw51nv6m.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/setlocale_null.c
[1msetlocale_null.c:145:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (bufsize > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  146 |         /* Return an empty string in BUF.[0m
  147 |            This is a convenience for callers that don't want to write explicit[0m
  148 |            code for handling EINVAL.  */[0m
  149 |         buf[0] = '\0';[0m
      | [0;1;32m                      
[0m[1msetlocale_null.c:157:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:157:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 53/126][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmprap2akxa.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/stdopen.c
[1mstdopen.c:53:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |           if (new_fd < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   54 |             return errno;[0m
      | [0;1;32m                         
[0m1 warning generated.

[ 54/126][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpb0a4x_lp.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/localcharset.c
[1mlocalcharset.c:911:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |   if (codeset == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  912 |     /* The canonical name cannot be determined.  */[0m
  913 |     codeset = "";[0m
      | [0;1;32m                 
[0m[1mlocalcharset.c:1070:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |         if (codeset[0] == '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1071 |           codeset = "ASCII";[0m
      | [0;1;32m                            
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 55/126][2.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpiorf0q7j.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/fcntl.c
[1mfcntl.c:329:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:426:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:430:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  430 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  431 |               void *p = va_arg (arg, void *);[0m
  432 |               result = fcntl (fd, action, p);[0m
  433 |             }[0m
  434 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mfcntl.c:524:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |           if (result >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  525 |             have_dupfd_cloexec = -1;[0m
      | [0;1;32m                                    
[0m[1mfcntl.c:528:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  529 | # endif[0m
  530 |     result = rpl_fcntl_DUPFD (fd, target);[0m
      | [0;1;32m                                          
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 56/126][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpcr2xdcha.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/sockets.c
[ 57/126][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpzp0buzhy.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/cloexec.c
[1mcloexec.c:50:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   51 |         return 0;[0m
      | [0;1;32m                 
[0m1 warning generated.

[ 58/126][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpksk2ro7f.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xstdopen.c
[1mxstdopen.c:33:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (stdopen_errno != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   34 |     error (exit_failure, stdopen_errno, _("standard file descriptors"));[0m
      | [0;1;32m                                                                        
[0m15 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 59/126][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpurmw02xv.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/version.c
[ 60/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpo2cqa1ij.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xreadlink.c
[1mxreadlink.c:41:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   if (result == NULL && errno == ENOMEM)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   42 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 61/126][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp1obn2vql.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/allocator.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 62/126][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpk3ivd7jk.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/areadlink.c
[1mareadlink.c:41:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   if (fd != AT_FDCWD)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   42 |     abort ();[0m
      | [0;1;32m             
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 63/126][4.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp9b02lap4.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/uniwidth/width.c
[1muniwidth/width.c:64:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       if (ind >= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   65 |         if ((nonspacing_table_data[64*ind + ((uc >> 3) & 63)] >> (uc & 7)) & 1)[0m
   66 |           {[0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
   68 |               return -1;[0m
   69 |             else[0m
   70 |               return 0;[0m
   71 |           }[0m
      | [0;1;32m           
[0m[1muniwidth/width.c:67:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   68 |               return -1;[0m
   69 |             else[0m
      | [0;32m            } 
[0m[1muniwidth/width.c:69:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   70 |               return 0;[0m
      | [0;1;32m                       
[0m[1muniwidth/width.c:77:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |           if (uc <= 0xe01ef)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   78 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:82:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |           if (uc >= 0xe0020 ? uc <= 0xe007f : uc == 0xe0001)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m   83 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:87:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   if (bitmap_lookup (&u_width2, uc))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   88 |     return 2;[0m
      | [0;1;32m             
[0m[1muniwidth/width.c:92:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |       && is_cjk_encoding (encoding))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   93 |     return 2;[0m
      | [0;1;32m             
[0m35 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 64/126][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpwm8rl6mh.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/xsize.c
[ 65/126][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp_02bl213.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/malloc/dynarray_finalize.c
[1mmalloc/dynarray_finalize.c:32:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (__dynarray_error (list))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   33 |     /* The caller will reported the deferred error.  */[0m
   34 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_finalize.c:43:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   44 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:54:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |       if (list->array != NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m                                                          
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:56:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   57 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:62:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   63 |     /* The caller will perform the freeing operation.  */[0m
   64 |     return false;[0m
      | [0;1;32m                 
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 66/126][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpxo5bdo6u.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/glthread/threadlib.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 67/126][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpbnkr8isb.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/asnprintf.c
[ 68/126][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp5iv3s143.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/sh-quote.c
[1msh-quote.c:43:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |   if (sh_quoting_options == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   44 |     init_sh_quoting_options ();[0m
      | [0;1;32m                               
[0m[1msh-quote.c:54:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |   if (sh_quoting_options == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   55 |     init_sh_quoting_options ();[0m
      | [0;1;32m                               
[0m[1msh-quote.c:64:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |   if (sh_quoting_options == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   65 |     init_sh_quoting_options ();[0m
      | [0;1;32m                               
[0m[1msh-quote.c:86:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |           if (*argp == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   87 |             break;[0m
      | [0;1;32m                  
[0m[1msh-quote.c:97:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |           if (*argp == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   98 |             break;[0m
      | [0;1;32m                  
[0m[1msh-quote.c:105:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  106 |     return xstrdup ("");[0m
      | [0;1;32m                        
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 69/126][10.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpi8yi_hs8.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/striconv.c
[1mstriconv.c:78:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |             if (errno == E2BIG)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   79 |               ;[0m
   80 |             else if (errno == EINVAL)[0m
      | [0;32m            } 
[0m[1mstriconv.c:80:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |             else if (errno == EINVAL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   81 |               break;[0m
   82 |             else[0m
      | [0;32m            } 
[0m[1mstriconv.c:82:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   83 |               return -1;[0m
      | [0;1;32m                        
[0m[1mstriconv.c:107:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |       if (res == (size_t)(-1))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  108 |         return -1;[0m
      | [0;1;32m                  
[0m[1mstriconv.c:121:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |   if (*resultp != NULL && *lengthp >= length)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  122 |     result = *resultp;[0m
  123 |   else[0m
      | [0;32m  } 
[0m[1mstriconv.c:156:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |             if (errno == EINVAL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  157 |               break;[0m
  158 |             else[0m
      | [0;32m            } 
[0m[1mstriconv.c:158:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  159 |               goto fail;[0m
      | [0;1;32m                        
[0m[1mstriconv.c:180:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |       if (res == (size_t)(-1))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  181 |         goto fail;[0m
      | [0;1;32m                  
[0m[1mstriconv.c:184:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |     if (outsize != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  185 |       abort ();[0m
      | [0;1;32m               
[0m[1mstriconv.c:195:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |     if (result != *resultp)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  196 |       free (result);[0m
      | [0;1;32m                    
[0m[1mstriconv.c:260:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |     if (result_size <= approx_sqrt_SIZE_MAX / MB_LEN_MAX)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  261 |       result_size *= MB_LEN_MAX;[0m
      | [0;1;32m                                
[0m[1mstriconv.c:295:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |             if (errno == EINVAL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  296 |               break;[0m
  297 |             else if (errno == E2BIG)[0m
      | [0;32m            } 
[0m[1mstriconv.c:319:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  320 |               goto failed;[0m
      | [0;1;32m                          
[0m[1mstriconv.c:322:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  323 |           break;[0m
      | [0;1;32m                
[0m[1mstriconv.c:358:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  359 |               goto failed;[0m
      | [0;1;32m                          
[0m[1mstriconv.c:361:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  362 |           break;[0m
      | [0;1;32m                
[0m[1mstriconv.c:377:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |       if (smaller_result != NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  378 |         result = smaller_result;[0m
      | [0;1;32m                                
[0m[1mstriconv.c:399:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |       if (result == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  400 |         errno = ENOMEM;[0m
      | [0;1;32m                       
[0m[1mstriconv.c:420:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |       if (cd == (iconv_t) -1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  421 |         return NULL;[0m
      | [0;1;32m                    
[0m21 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 70/126][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpzr_b5b6z.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/time.c
[1mtime.c:33:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (gettimeofday (&tv, NULL) < 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   34 |     abort ();[0m
      | [0;1;32m             
[0m[1mtime.c:37:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |   if (tp)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   38 |     *tp = tt;[0m
      | [0;1;32m             
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 71/126][6.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmprw1qx380.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbslen.c
[1mmbslen.c:37:12: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m           ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbslen.c:37:12: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m           ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbslen.c:37:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m   38 |         count++;[0m
      | [0;1;32m                
[0m[1mmbslen.c:42:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   43 |     return strlen (string);[0m
      | [0;1;32m                           
[0m15 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 72/126][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpp8qzk141.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/strtoll.c
18 warnings generated.
Suppressed 18 warnings (18 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 73/126][2.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmptexz0sax.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/c-stack.c
[1mc-stack.c:121:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |   if (! signo)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  122 |     _exit (exit_failure);[0m
      | [0;1;32m                         
[0m[1mc-stack.c:158:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |   if (!serious)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  159 |     return 0;[0m
      | [0;1;32m             
[0m16 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 74/126][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp4dkjy3zv.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/filenamecat.c
[1mfilenamecat.c:38:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |   if (p == NULL)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   39 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 75/126][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp89is3gja.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/unistd.c
[ 76/126][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp2bp0qi14.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/unistr/u8-uctomb.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 77/126][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpj29xifq9.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/hard-locale.c
[1mhard-locale.c:32:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (setlocale_null_r (category, locale, sizeof (locale)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   33 |     return false;[0m
      | [0;1;32m                 
[0m[1mhard-locale.c:35:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!(strcmp (locale, "C") == 0 || strcmp (locale, "POSIX") == 0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m   36 |     return true;[0m
      | [0;1;32m                
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 78/126][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpqt0n80uf.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/umaxtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 79/126][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpa0uykev0.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/system-quote.c
[1msystem-quote.c:207:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  207 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1msystem-quote.c:239:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1msystem-quote.c:269:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  269 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1msystem-quote.c:289:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |           if (*argp == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  290 |             break;[0m
      | [0;1;32m                  
[0m[1msystem-quote.c:300:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |           if (*argp == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  301 |             break;[0m
      | [0;1;32m                  
[0m[1msystem-quote.c:308:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  309 |     return xstrdup ("");[0m
      | [0;1;32m                        
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 80/126][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpdk0eb6i5.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/unistr/u8-uctomb-aux.c
[1munistr/u8-uctomb-aux.c:30:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   30 |   if (uc < 0x80)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   31 |     /* The case n >= 1 is already handled by the caller.  */[0m
   32 |     return -2;[0m
   33 |   else if (uc < 0x800)[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:33:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else if (uc < 0x800)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   34 |     count = 2;[0m
   35 |   else if (uc < 0x10000)[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:37:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |       if (uc < 0xd800 || uc >= 0xe000)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   38 |         count = 3;[0m
   39 |       else[0m
      | [0;32m      } 
[0m[1munistr/u8-uctomb-aux.c:39:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   40 |         return -1;[0m
      | [0;1;32m                  
[0m[1munistr/u8-uctomb-aux.c:42:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   else if (uc < 0x110000)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   43 |     count = 4;[0m
   44 |   else[0m
      | [0;32m  } 
[0m[1munistr/u8-uctomb-aux.c:44:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   45 |     return -1;[0m
      | [0;1;32m              
[0m[1munistr/u8-uctomb-aux.c:47:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   if (n < count)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   48 |     return -2;[0m
      | [0;1;32m              
[0m[1munistr/u8-uctomb-aux.c:52:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   52 |     case 4: s[3] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0x10000;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   53 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1munistr/u8-uctomb-aux.c:54:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |     case 3: s[2] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0x800;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   55 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1munistr/u8-uctomb-aux.c:56:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   56 |     case 2: s[1] = 0x80 | (uc & 0x3f); uc = uc >> 6; uc |= 0xc0;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m   57 |   /*case 1:*/ s[0] = uc;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m13 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 81/126][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp9ezojufp.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/glthread/thread.c
[1mglthread/thread.c:215:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |   if (ret != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  216 |     abort ();[0m
      | [0;1;32m             
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 82/126][3.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmprummfqbi.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/argmatch.c
[1margmatch.c:95:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |           if (strlen (arglist[i]) == arglen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   96 |             /* Exact match found.  */[0m
   97 |             return i;[0m
   98 |           else if (matchind == -1)[0m
      | [0;32m          } 
[0m[1margmatch.c:98:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |           else if (matchind == -1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   99 |             /* First nonexact match found.  */[0m
  100 |             matchind = i;[0m
  101 |           else[0m
      | [0;32m          } 
[0m[1margmatch.c:115:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |   if (ambiguous)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  116 |     return -2;[0m
  117 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:117:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  118 |     return matchind;[0m
      | [0;1;32m                    
[0m[1margmatch.c:129:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |       if (!strcmp (arglist[i], arg))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  130 |         return i;[0m
      | [0;1;32m                 
[0m[1margmatch.c:166:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  167 |     if ((i == 0)[0m
  168 |         || memcmp (last_val, (char const *) vallist + valsize * i, valsize))[0m
  169 |       {[0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
  171 |         last_val = (char const *) vallist + valsize * i;[0m
  172 |       }[0m
  173 |     else[0m
  174 |       {[0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
  176 |       }[0m
      | [0;1;32m       
[0m[1margmatch.c:170:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:170:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:175:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:175:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:195:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (allow_abbreviation)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  196 |     res = argmatch (arg, arglist, vallist, valsize);[0m
  197 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:197:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  198 |     res = argmatch_exact (arg, arglist);[0m
      | [0;1;32m                                        
[0m[1margmatch.c:200:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |   if (res >= 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  201 |     /* Success. */[0m
  202 |     return res;[0m
      | [0;1;32m               
[0m[1margmatch.c:221:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  222 |     if (!memcmp (value, (char const *) vallist + valsize * i, valsize))[0m
  223 |       return arglist[i];[0m
      | [0;1;32m                        
[0m[1margmatch.c:222:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |     if (!memcmp (value, (char const *) vallist + valsize * i, valsize))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  223 |       return arglist[i];[0m
      | [0;1;32m                        
[0m27 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 83/126][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp2us5k4h7.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/glthread/lock.c
[1mglthread/lock.c:269:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  270 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:277:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |   if (err == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  278 |     err = pthread_rwlock_init(lock, &attributes);[0m
      | [0;1;32m                                                 
[0m[1mglthread/lock.c:539:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  540 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:554:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  555 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:717:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  718 |     return 0;[0m
      | [0;1;32m             
[0m[1mglthread/lock.c:732:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |       if (glthread_once_singlethreaded (once_control))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  733 |         init_function ();[0m
      | [0;1;32m                         
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 84/126][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpwf385n92.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/test-localcharset.c
[ 85/126][15.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp1me3hwfn.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xstrtol.c
[1mxstrtol.c:70:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |   while (power--)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   71 |     err |= bkm_scale (x, base);[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:96:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |       while (isspace (ch))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   97 |         ch = *++q;[0m
      | [0;1;32m                  
[0m[1mxstrtol.c:98:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |       if (ch == '-')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   99 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:108:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |       if (valid_suffixes && **p && strchr (valid_suffixes, **p))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  109 |         tmp = 1;[0m
  110 |       else[0m
      | [0;32m      } 
[0m[1mxstrtol.c:110:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  111 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:115:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |       if (errno != ERANGE)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  116 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:153:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |           if (strchr (valid_suffixes, '0'))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  154 |             switch (p[0][1])[0m
  155 |               {[0m
  156 |               case 'i':[0m
  157 |                 if (p[0][2] == 'B')[0m
  158 |                   suffixes += 2;[0m
  159 |                 break;[0m
  160 | [0m
  161 |               case 'B':[0m
  162 |               case 'D': /* 'D' is obsolescent */[0m
  163 |                 base = 1000;[0m
  164 |                 suffixes++;[0m
  165 |                 break;[0m
  166 |               }[0m
      | [0;1;32m               
[0m[1mxstrtol.c:157:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |                 if (p[0][2] == 'B')[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  158 |                   suffixes += 2;[0m
  159 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mxstrtol.c:157:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |                 if (p[0][2] == 'B')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  158 |                   suffixes += 2;[0m
      | [0;1;32m                                
[0m[1mxstrtol.c:164:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |                 suffixes++;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  165 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mxstrtol.c:172:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  172 |           overflow = bkm_scale (&tmp, 512);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  173 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:179:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  179 |           overflow = bkm_scale (&tmp, 1024);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  180 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:183:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  183 |           overflow = LONGINT_OK;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  184 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:187:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  187 |           overflow = bkm_scale_by_power (&tmp, base, 6);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  188 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:193:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  193 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:198:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  198 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:203:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  203 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:206:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  206 |           overflow = bkm_scale_by_power (&tmp, base, 5);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  207 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:210:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  210 |           overflow = bkm_scale_by_power (&tmp, base, 10);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  211 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:214:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  214 |           overflow = bkm_scale_by_power (&tmp, base, 9);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  215 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:220:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  220 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:223:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  223 |           overflow = bkm_scale (&tmp, 2);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  224 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:227:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  227 |           overflow = bkm_scale_by_power (&tmp, base, 8);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  228 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:231:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  231 |           overflow = bkm_scale_by_power (&tmp, base, 7);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  232 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:235:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  235 |           *val = tmp;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  236 |           return err | LONGINT_INVALID_SUFFIX_CHAR;[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1mxstrtol.c:241:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |       if (**p)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  242 |         err |= LONGINT_INVALID_SUFFIX_CHAR;[0m
      | [0;1;32m                                           
[0m28 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 86/126][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp8t9qwbz8.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/gettime.c
[ 87/126][3.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpasuht8ft.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/sigsegv.c
[1msigsegv.c:984:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  984 |   if (sigsegv_get_vma ((uintptr_t) some_variable_on_stack, &vma) >= 0)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  985 |     stack_top = vma.end - 1;[0m
      | [0;1;32m                            
[0m[1msigsegv.c:1347:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1347 |   if (stk_user_handler)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1348 |     action.sa_flags |= SA_ONSTACK;[0m
      | [0;1;32m                                  
[0m[1msigsegv.c:1410:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1410 |       if (!stack_top)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1411 |         return -1;[0m
      | [0;1;32m                  
[0m[1msigsegv.c:1428:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1428 |     if (sigaltstack (&ss, (stack_t*)0) < 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1429 |       return -1;[0m
      | [0;1;32m                
[0m[1msigsegv.c:1462:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1462 |     if (sigaltstack (&ss, (stack_t *) 0) < 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1463 |       perror ("gnulib sigsegv (stackoverflow_deinstall_handler)");[0m
      | [0;1;32m                                                                  
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 88/126][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpl5gc0w3b.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/xstrtol-error.c
[1mxstrtol-error.c:60:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mxstrtol-error.c:63:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |       msgid = N_("invalid %s%s argument '%s'");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   64 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mxstrtol-error.c:69:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mxstrtol-error.c:72:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |       msgid = N_("%s%s argument '%s' too large");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   73 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mxstrtol-error.c:83:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   84 |     option = long_options[opt_idx].name;[0m
      | [0;1;32m                                        
[0m19 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 89/126][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp5222b19e.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/getprogname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 90/126][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpqd9_biif.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/bitrotate.c
[ 91/126][4.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpgsp183j_.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/xmalloc.c
[1mxmalloc.c:35:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:67:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (!r && (!p || s))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   68 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:85:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (!r && (!p || (n && s)))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   86 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:199:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |       if (ckd_add (&n, n, (n >> 1) + 1))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  200 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mxmalloc.c:240:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |   if (ckd_add (&n, n0, n0 >> 1))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  241 |     n = IDX_MAX;[0m
      | [0;1;32m                
[0m[1mxmalloc.c:242:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |   if (0 <= n_max && n_max < n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  243 |     n = n_max;[0m
      | [0;1;32m              
[0m[1mxmalloc.c:264:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |   if (! pa)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  265 |     *pn = 0;[0m
      | [0;1;32m            
[0m[1mxmalloc.c:269:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |           || ckd_mul (&nbytes, n, s)))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  270 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:314:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  314 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:314:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  314 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:320:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  320 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:320:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  320 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:331:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  331 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:331:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  331 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m16 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 92/126][17.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpcn45889a.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/trim.c
[1mtrim.c:40:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |   if (!d)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   41 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mtrim.c:50:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   50 |           mbi_init (i, d, strlen (d));[0m
      | [0;1;32m          ^
[0m[1m./mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mtrim.c:50:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   50 |           mbi_init (i, d, strlen (d));[0m
      | [0;1;32m          ^
[0m[1m./mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mtrim.c:52:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |           for (; mbi_avail (i) && mb_isspace (mbi_cur (i)); mbi_advance (i))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m   53 |             ;[0m
      | [0;1;32m             
[0m[1mtrim.c:55:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   55 |           memmove (d, mbi_cur_ptr (i), strlen (mbi_cur_ptr (i)) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtrim.c:55:11: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
   55 |           memmove (d, mbi_cur_ptr (i), strlen (mbi_cur_ptr (i)) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtrim.c:63:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   63 |           mbi_init (i, d, strlen (d));[0m
      | [0;1;32m          ^
[0m[1m./mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mtrim.c:63:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   63 |           mbi_init (i, d, strlen (d));[0m
      | [0;1;32m          ^
[0m[1m./mbiter.h:200:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbi_init'[0m
  200 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mtrim.c:65:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |           for (; mbi_avail (i); mbi_advance (i))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   66 |             if (mb_isspace (mbi_cur (i)))[0m
   67 |               {[0m
   68 |                 if (start_of_spaces == NULL)[0m
   69 |                   start_of_spaces = (char *) mbi_cur_ptr (i);[0m
   70 |               }[0m
   71 |             else[0m
   72 |               start_of_spaces = NULL;[0m
      | [0;1;32m                                     
[0m[1mtrim.c:68:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |                 if (start_of_spaces == NULL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   69 |                   start_of_spaces = (char *) mbi_cur_ptr (i);[0m
      | [0;1;32m                                                             
[0m[1mtrim.c:71:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   72 |               start_of_spaces = NULL;[0m
      | [0;1;32m                                     
[0m[1mtrim.c:74:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |           if (start_of_spaces != NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   75 |             *start_of_spaces = '\0';[0m
      | [0;1;32m                                    
[0m[1mtrim.c:85:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |           for (p = d; *p && isspace ((unsigned char) *p); p++)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m   86 |             ;[0m
      | [0;1;32m             
[0m[1mtrim.c:88:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |           memmove (d, p, strlen (p) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtrim.c:88:11: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
   88 |           memmove (d, p, strlen (p) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtrim.c:95:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |                p >= d && isspace ((unsigned char) *p); p--)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   96 |             *p = '\0';[0m
      | [0;1;32m                      
[0m24 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 93/126][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp16icm7av.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/inttostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 94/126][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpbfa1v8ry.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/malloc/dynarray_resize.c
[1mmalloc/dynarray_resize.c:56:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:59:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   60 |     new_array = realloc (list->array, new_size_bytes);[0m
      | [0;1;32m                                                      
[0m[1mmalloc/dynarray_resize.c:61:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   62 |     return false;[0m
      | [0;1;32m                 
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 95/126][16.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpeaeoc_xv.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/c-strcasecmp.c
[1mc-strcasecmp.c:33:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strcasecmp.c:41:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (c1 == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strcasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strcasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 96/126][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp1z2pu4wc.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/timespec.c
[ 97/126][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp4vutoj3e.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbrtowc.c
[1mmbrtowc.c:97:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (! pwc)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   98 |     pwc = &wc;[0m
      | [0;1;32m              
[0m1 warning generated.

[ 98/126][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpq35e54u8.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/malloc/dynarray_emplace_enlarge.c
[1mmalloc/dynarray_emplace_enlarge.c:38:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |       if (element_size < 4)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   39 |         new_allocated = 16;[0m
   40 |       else if (element_size < 8)[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:40:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       else if (element_size < 8)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   41 |         new_allocated = 8;[0m
   42 |       else[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:42:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   43 |         new_allocated = 4;[0m
      | [0;1;32m                          
[0m[1mmalloc/dynarray_emplace_enlarge.c:59:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (ckd_mul (&new_size, new_allocated, element_size))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m   60 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_emplace_enlarge.c:66:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:69:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   70 |     new_array = realloc (list->array, new_size);[0m
      | [0;1;32m                                                
[0m[1mmalloc/dynarray_emplace_enlarge.c:71:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   72 |     return false;[0m
      | [0;1;32m                 
[0m10 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 99/126][2.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpu3gw8dm5.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/cmpbuf.c
[1mcmpbuf.c:58:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |           if (nread == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   59 |             break;[0m
      | [0;1;32m                  
[0m[1mcmpbuf.c:74:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |           if (! SA_RESTART && errno == EINTR)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   75 |             continue;[0m
      | [0;1;32m                     
[0m[1mcmpbuf.c:96:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (!a)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   97 |     return b ? b : 8 * 1024;[0m
      | [0;1;32m                            
[0m[1mcmpbuf.c:98:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |   if (!b)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   99 |     return a;[0m
      | [0;1;32m             
[0m[1mcmpbuf.c:102:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   for (m = a, n = b;  (r = m % n) != 0;  m = n, n = r)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  103 |     continue;[0m
      | [0;1;32m             
[0m5 warnings generated.

[100/126][17.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp7hcybi5j.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbscasecmp.c
[1mmbscasecmp.c:39:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (s1 == s2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   40 |     return 0;[0m
      | [0;1;32m             
[0m[1mmbscasecmp.c:50:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   50 |       mbui_init (iter1, s1);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasecmp.c:50:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   50 |       mbui_init (iter1, s1);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   51 |       mbui_init (iter2, s2);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasecmp.c:51:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   51 |       mbui_init (iter2, s2);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasecmp.c:57:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |           if (cmp != 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   58 |             return cmp;[0m
      | [0;1;32m                       
[0m[1mmbscasecmp.c:63:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |       if (mbui_avail (iter1))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   64 |         /* s2 terminated before s1.  */[0m
   65 |         return 1;[0m
      | [0;1;32m                 
[0m[1mmbscasecmp.c:66:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (mbui_avail (iter2))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   67 |         /* s1 terminated before s2.  */[0m
   68 |         return -1;[0m
      | [0;1;32m                  
[0m[1mmbscasecmp.c:82:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |           if (c1 == '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   83 |             break;[0m
      | [0;1;32m                  
[0m[1mmbscasecmp.c:90:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |       if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   91 |         return c1 - c2;[0m
   92 |       else[0m
      | [0;32m      } 
[0m[1mmbscasecmp.c:92:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   93 |         /* On machines where 'char' and 'int' are types of the same size, the[0m
   94 |            difference of two 'unsigned char' values - including the sign bit -[0m
   95 |            doesn't fit in an 'int'.  */[0m
   96 |         return _GL_CMP (c1, c2);[0m
      | [0;1;32m                                
[0m21 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[101/126][22.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpe5o73f0b.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/c-strncasecmp.c
[1mc-strncasecmp.c:33:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2 || n == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strncasecmp.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (--n == 0 || c1 == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strncasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strncasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[102/126][27.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpc1su0wsy.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/printf-args.c
[1mprintf-args.c:44:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:48:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   48 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   49 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:51:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   52 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:54:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   55 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:57:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   58 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:60:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   61 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:66:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:69:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   70 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:72:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   73 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:75:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   75 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   76 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:79:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   79 |         ap->a.a_int8_t = va_arg (args, /* int8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   80 |         #else[0m
   81 |         ap->a.a_int8_t = va_arg (args, int8_t);[0m
   82 |         #endif[0m
   83 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:86:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   86 |         ap->a.a_uint8_t = va_arg (args, /* uint8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   87 |         #else[0m
   88 |         ap->a.a_uint8_t = va_arg (args, uint8_t);[0m
   89 |         #endif[0m
   90 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:93:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   93 |         ap->a.a_int16_t = va_arg (args, /* int16_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   94 |         #else[0m
   95 |         ap->a.a_int16_t = va_arg (args, int16_t);[0m
   96 |         #endif[0m
   97 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:100:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  100 |         ap->a.a_uint16_t = va_arg (args, /* uint16_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  101 |         #else[0m
  102 |         ap->a.a_uint16_t = va_arg (args, uint16_t);[0m
  103 |         #endif[0m
  104 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:109:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |         ap->a.a_int32_t = va_arg (args, int32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  110 |         #endif[0m
  111 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:116:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  116 |         ap->a.a_uint32_t = va_arg (args, uint32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  117 |         #endif[0m
  118 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:120:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |         ap->a.a_int64_t = va_arg (args, int64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  121 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:123:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  123 |         ap->a.a_uint64_t = va_arg (args, uint64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  124 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:127:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |         ap->a.a_int_fast8_t = va_arg (args, /* int_fast8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  128 |         #else[0m
  129 |         ap->a.a_int_fast8_t = va_arg (args, int_fast8_t);[0m
  130 |         #endif[0m
  131 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:134:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |         ap->a.a_uint_fast8_t = va_arg (args, /* uint_fast8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  135 |         #else[0m
  136 |         ap->a.a_uint_fast8_t = va_arg (args, uint_fast8_t);[0m
  137 |         #endif[0m
  138 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:143:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |         ap->a.a_int_fast16_t = va_arg (args, int_fast16_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  144 |         #endif[0m
  145 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:150:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |         ap->a.a_uint_fast16_t = va_arg (args, uint_fast16_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  151 |         #endif[0m
  152 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:157:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |         ap->a.a_int_fast32_t = va_arg (args, int_fast32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  158 |         #endif[0m
  159 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:164:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |         ap->a.a_uint_fast32_t = va_arg (args, uint_fast32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  165 |         #endif[0m
  166 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:168:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  168 |         ap->a.a_int_fast64_t = va_arg (args, int_fast64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  169 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:171:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |         ap->a.a_uint_fast64_t = va_arg (args, uint_fast64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  172 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:174:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  174 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  175 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:177:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  177 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  178 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:180:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  180 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  181 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:187:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  187 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  188 |           (sizeof (wint_t) < sizeof (int)[0m
  189 |            ? (wint_t) va_arg (args, int)[0m
  190 |            : va_arg (args, wint_t));[0m
  191 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:194:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  194 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  195 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
  196 |            it occurs quite frequently in printf statements that produce[0m
  197 |            debug output.  Use a fallback in this case.  */[0m
  198 |         if (ap->a.a_string == NULL)[0m
  199 |           ap->a.a_string = "(NULL)";[0m
  200 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:198:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  199 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:203:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  203 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  204 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  205 |            it occurs quite frequently in printf statements that produce[0m
  206 |            debug output.  Use a fallback in this case.  */[0m
  207 |         if (ap->a.a_wide_string == NULL)[0m
  208 |           {[0m
  209 |             static const wchar_t wide_null_string[] =[0m
  210 |               {[0m
  211 |                 (wchar_t)'(',[0m
  212 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  213 |                 (wchar_t)')',[0m
  214 |                 (wchar_t)0[0m
  215 |               };[0m
  216 |             ap->a.a_wide_string = wide_null_string;[0m
  217 |           }[0m
  218 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:221:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  221 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  222 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:224:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  224 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  225 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:227:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  227 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  228 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:230:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  230 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  231 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:233:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  233 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  234 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:236:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  236 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  237 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:239:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |         ap->a.a_count_int8_t_pointer = va_arg (args, int8_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  240 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:242:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |         ap->a.a_count_int16_t_pointer = va_arg (args, int16_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  243 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:245:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  245 |         ap->a.a_count_int32_t_pointer = va_arg (args, int32_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  246 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:248:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  248 |         ap->a.a_count_int64_t_pointer = va_arg (args, int64_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  249 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:251:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  251 |         ap->a.a_count_int_fast8_t_pointer = va_arg (args, int_fast8_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  252 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:254:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  254 |         ap->a.a_count_int_fast16_t_pointer = va_arg (args, int_fast16_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  255 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:257:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  257 |         ap->a.a_count_int_fast32_t_pointer = va_arg (args, int_fast32_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  258 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:260:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  260 |         ap->a.a_count_int_fast64_t_pointer = va_arg (args, int_fast64_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  261 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:303:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  303 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m49 warnings generated.

[103/126][61.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpxsouszxm.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/time_rz.c
[1mtime_rz.c:58:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   58 |   memcpy (abbrs, abbr, abbr_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtime_rz.c:58:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   58 |   memcpy (abbrs, abbr, abbr_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtime_rz.c:78:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |       if (name)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   79 |         extend_abbrs (tz->abbrs, name, name_size);[0m
      | [0;1;32m                                                  
[0m[1mtime_rz.c:112:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   if (!zone || ((char *) tm <= zone && zone < (char *) (tm + 1)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  113 |     return true;[0m
      | [0;1;32m                
[0m[1mtime_rz.c:124:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |               if (zone_size < tz->abbrs + ABBR_SIZE_MIN - zone_copy)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  125 |                 extend_abbrs (zone_copy, zone, zone_size);[0m
  126 |               else[0m
      | [0;32m              } 
[0m[1mtime_rz.c:129:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |                   if (!tz)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  130 |                     return false;[0m
      | [0;1;32m                                 
[0m[1mtime_rz.c:162:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |   if (tz != local_tz)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  163 |     while (tz)[0m
  164 |       {[0m
  165 |         timezone_t next = tz->next;[0m
  166 |         free (tz);[0m
  167 |         tz = next;[0m
  168 |       }[0m
      | [0;1;32m       
[0m[1mtime_rz.c:195:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (setenv_TZ (tz->tz_is_set ? tz->abbrs : NULL) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  196 |     return false;[0m
      | [0;1;32m                 
[0m[1mtime_rz.c:211:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |       : !tz->tz_is_set)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  212 |     return local_tz;[0m
  213 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:216:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |       if (!old_tz)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  217 |         return old_tz;[0m
      | [0;1;32m                      
[0m[1mtime_rz.c:222:11: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  222 |           errno = saved_errno;[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^
[0m[1mtime_rz.c:287:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  287 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:287:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  287 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:291:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  291 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  209 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:211:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  211 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'name' is null[0m
   67 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   68 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:69:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   69 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:70:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   70 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:70:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   70 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:78:11: [0m[0;1;36mnote: [0m'name' is null[0m
   78 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:78:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   78 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:216:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:216:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:218:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  218 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:221:11: [0m[0;1;36mnote: [0mCalling 'tzfree'[0m
  221 |           tzfree (old_tz);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mtime_rz.c:162:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  162 |   if (tz != local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:162:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  162 |   if (tz != local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:169:1: [0m[0;1;36mnote: [0mReturning without deallocating memory or storing the pointer for later deallocation[0m
  169 | }[0m
      | [0;1;32m^
[0m[1mtime_rz.c:221:11: [0m[0;1;36mnote: [0mReturning from 'tzfree'[0m
  221 |           tzfree (old_tz);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mtime_rz.c:222:11: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  222 |           errno = saved_errno;[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^
[0m[1mtime_rz.c:235:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  236 |     return true;[0m
  237 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:241:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |       if (!ok)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  242 |         saved_errno = errno;[0m
      | [0;1;32m                            
[0m[1mtime_rz.c:268:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  269 |     return gmtime_r (t, tm);[0m
  270 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:276:37: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:268:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  268 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:268:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  268 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:272:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  272 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  209 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:211:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  211 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'name' is null[0m
   67 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   68 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:69:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   69 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:70:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   70 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:70:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   70 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:78:11: [0m[0;1;36mnote: [0m'name' is null[0m
   78 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:78:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   78 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:216:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:216:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:218:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  218 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:272:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  272 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:273:11: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  273 |       if (old_tz)[0m
      | [0;1;32m          ^~~~~~
[0m[1mtime_rz.c:273:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  273 |       if (old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:275:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  275 |           bool abbr_saved = localtime_r (t, tm) && save_abbr (tz, tm);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:275:49: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  275 |           bool abbr_saved = localtime_r (t, tm) && save_abbr (tz, tm);[0m
      | [0;1;32m                                                ^
[0m[1mtime_rz.c:276:15: [0m[0;1;36mnote: [0mCalling 'revert_tz'[0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:235:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:235:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:276:15: [0m[0;1;36mnote: [0mReturning from 'revert_tz'[0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:276:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtime_rz.c:276:37: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:276:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  277 |             return tm;[0m
      | [0;1;32m                      
[0m[1mtime_rz.c:287:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  288 |     return timegm (tm);[0m
  289 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:308:37: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  308 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:287:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  287 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:287:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  287 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:291:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  291 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  209 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:211:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  211 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'name' is null[0m
   67 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   68 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:69:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   69 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:70:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   70 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:70:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   70 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:78:11: [0m[0;1;36mnote: [0m'name' is null[0m
   78 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:78:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   78 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:216:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:216:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:218:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  218 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:291:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  291 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:292:11: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  292 |       if (old_tz)[0m
      | [0;1;32m          ^~~~~~
[0m[1mtime_rz.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:304:21: [0m[0;1;36mnote: [0mAssuming 0 is > field 'tm_yday'[0m
  304 |           bool ok = 0 <= tm_1.tm_yday;[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:306:16: [0m[0;1;36mnote: [0m'ok' is false[0m
  306 |           ok = ok && save_abbr (tz, &tm_1);[0m
      | [0;1;32m               ^~
[0m[1mtime_rz.c:306:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  306 |           ok = ok && save_abbr (tz, &tm_1);[0m
      | [0;1;32m                  ^
[0m[1mtime_rz.c:308:15: [0m[0;1;36mnote: [0mCalling 'revert_tz'[0m
  308 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:235:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:235:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:308:15: [0m[0;1;36mnote: [0mReturning from 'revert_tz'[0m
  308 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:308:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtime_rz.c:308:37: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  308 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m                                    ^
[0m19 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[104/126][81.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpekzczyrg.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/quotearg.c
[1mquotearg.c:163:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  164 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:174:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  175 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:177:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |   if (!left_quote || !right_quote)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  178 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:188:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |   if (style == custom_quoting_style)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  189 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:204:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |   if (translation != msgid)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  205 |     return translation;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:226:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |   if (STRCASEEQ (locale_code, "UTF-8", 'U','T','F','-','8',0,0,0,0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  227 |     return msgid[0] == '`' ? "\xe2\x80\x98": "\xe2\x80\x99";[0m
      | [0;1;32m                                                            
[0m[1mquotearg.c:228:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |   if (STRCASEEQ (locale_code, "GB18030", 'G','B','1','8','0','3','0',0,0))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  229 |     return msgid[0] == '`' ? "\xa1\ae": "\xa1\xaf";[0m
      | [0;1;32m                                                   
[0m[1mquotearg.c:311:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  311 |       quoting_style = c_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  312 |       elide_outer_quotes = true;[0m
  313 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:315:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  315 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  316 |         STORE ('"');[0m
  317 |       backslash_escapes = true;[0m
  318 |       quote_string = "\"";[0m
  319 |       quote_string_len = 1;[0m
  320 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:315:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  316 |         STORE ('"');[0m
      | [0;1;32m                    
[0m[1mquotearg.c:323:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  323 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  324 |       elide_outer_quotes = false;[0m
  325 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:357:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |         if (!elide_outer_quotes)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  358 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
  359 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:358:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  359 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:364:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  364 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mquotearg.c:367:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  367 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  368 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:370:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  370 |       elide_outer_quotes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  371 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:373:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  373 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  374 |         backslash_escapes = true;[0m
  375 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:373:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  374 |         backslash_escapes = true;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:377:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  377 |       quoting_style = shell_always_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  378 |       if (!elide_outer_quotes)[0m
  379 |         STORE ('\'');[0m
  380 |       quote_string = "'";[0m
  381 |       quote_string_len = 1;[0m
  382 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:378:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  379 |         STORE ('\'');[0m
      | [0;1;32m                     
[0m[1mquotearg.c:385:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  385 |       elide_outer_quotes = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  386 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:389:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mquotearg.c:411:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |           if (elide_outer_quotes)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  412 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:420:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  420 |           if (backslash_escapes)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:441:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |           else if (flags & QA_ELIDE_NULL_BYTES)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  442 |             continue;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:446:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  446 |           switch (quoting_style)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:449:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  449 |               if (elide_outer_quotes)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  450 |                 goto force_outer_quoting_style;[0m
  451 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mquotearg.c:449:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  450 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:454:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  454 |               if ((flags & QA_SPLIT_TRIGRAPHS)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mquotearg.c:455:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |                   && i + 2 < argsize && arg[i + 1] == '?')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mquotearg.c:463:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                     if (elide_outer_quotes)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  464 |                       goto force_outer_quoting_style;[0m
      | [0;1;32m                                                     
[0m[1mquotearg.c:465:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  465 |                     c = arg[i + 2];[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  466 |                     i += 2;[0m
  467 |                     STORE ('?');[0m
  468 |                     STORE ('"');[0m
  469 |                     STORE ('"');[0m
  470 |                     STORE ('?');[0m
  471 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mquotearg.c:474:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  474 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mquotearg.c:479:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mquotearg.c:483:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  483 |         case '\a': esc = 'a'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:484:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  484 |         case '\b': esc = 'b'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:485:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  485 |         case '\f': esc = 'f'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:486:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |         case '\n': esc = 'n'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:487:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |         case '\r': esc = 'r'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:488:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |         case '\t': esc = 't'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:489:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  489 |         case '\v': esc = 'v'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:490:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |         case '\\': esc = c;[0m
      | [0;1;32m                   ^
[0m      | [0;32m                   {
[0m[1mquotearg.c:494:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  495 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:501:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |           if (backslash_escapes && elide_outer_quotes && quote_string_len)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  502 |             goto store_c;[0m
      | [0;1;32m                         
[0m[1mquotearg.c:506:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  507 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:518:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |           if (! (argsize == SIZE_MAX ? arg[1] == '\0' : argsize == 1))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  519 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:520:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m./config.h:2278:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2278 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mquotearg.c:522:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |           if (i != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  523 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:524:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m./config.h:2278:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2278 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mquotearg.c:526:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  526 |           c_and_shell_quote_compat = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  527 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mquotearg.c:541:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  542 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:543:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  543 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:546:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |           encountered_single_quote = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:550:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  551 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:592:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  592 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:614:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  614 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:614:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  614 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:618:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |                 if (argsize == SIZE_MAX)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  619 |                   argsize = strlen (arg);[0m
      | [0;1;32m                                         
[0m[1mquotearg.c:626:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |                     if (bytes == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  627 |                       break;[0m
  628 |                     else if (bytes == (size_t) -1)[0m
      | [0;32m                    } 
[0m[1mquotearg.c:636:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |                         while (i + m < argsize && arg[i + m])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  637 |                           m++;[0m
      | [0;1;32m                              
[0m[1mquotearg.c:650:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |                             for (j = 1; j < bytes; j++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  651 |                               switch (arg[i + m + j])[0m
  652 |                                 {[0m
  653 |                                 case '[': case '\\': case '^':[0m
  654 |                                 case '`': case '|':[0m
  655 |                                   goto force_outer_quoting_style;[0m
  656 | [0m
  657 |                                 default:[0m
  658 |                                   break;[0m
  659 |                                 }[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:658:35: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |                                   break;[0m
      | [0;1;32m                                  ^    
[0m      | [0;32m                                  {    ;} 
[0m[1mquotearg.c:662:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |                         if (! iswprint (w))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  663 |                           printable = false;[0m
      | [0;1;32m                                            
[0m[1mquotearg.c:692:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |                     if (ilim <= i + 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  693 |                       break;[0m
      | [0;1;32m                            
[0m[1mquotearg.c:708:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |           && !is_right_quote)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  709 |         goto store_c;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:718:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |       if (! c_and_shell_quote_compat)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  719 |         all_c_and_shell_quote_compat = false;[0m
      | [0;1;32m                                             
[0m[1mquotearg.c:723:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  723 |       && elide_outer_quotes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  724 |     goto force_outer_quoting_style;[0m
      | [0;1;32m                                   
[0m[1mquotearg.c:733:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |       if (all_c_and_shell_quote_compat)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  734 |         return quotearg_buffer_restyled (buffer, orig_buffersize, arg, argsize,[0m
  735 |                                          c_quoting_style,[0m
  736 |                                          flags, quote_these_too,[0m
  737 |                                          left_quote, right_quote);[0m
  738 |       else if (! buffersize && orig_buffersize)[0m
      | [0;32m      } 
[0m[1mquotearg.c:747:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |   if (quote_string && !elide_outer_quotes)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  748 |     for (; *quote_string; quote_string++)[0m
  749 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:748:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |     for (; *quote_string; quote_string++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  749 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:751:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |   if (len < buffersize)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  752 |     buffer[len] = '\0';[0m
      | [0;1;32m                       
[0m[1mquotearg.c:758:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |   if (quoting_style == shell_always_quoting_style && backslash_escapes)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  759 |     quoting_style = shell_escape_always_quoting_style;[0m
      | [0;1;32m                                                      
[0m[1mquotearg.c:819:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |   if (size)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  820 |     *size = bufsize - 1;[0m
      | [0;1;32m                        
[0m[1mquotearg.c:843:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  843 |   for (i = 1; i < nslots; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  844 |     free (sv[i].val);[0m
      | [0;1;32m                     
[0m[1mquotearg.c:877:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |   if (! (0 <= n && n < nslots_max))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  878 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:887:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |       if (preallocated)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  888 |         *sv = slotvec0;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:889:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  889 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:889:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  889 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:907:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  907 |         if (val != slot0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  908 |           free (val);[0m
      | [0;1;32m                     
[0m132 warnings generated.
Suppressed 55 warnings (55 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[105/126][86.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpletsyf_x.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/locale.c
[1mlocale.c:44:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   if (value[0] != '\0' && defaulted_getenv ("LC_ALL")[0] == '\0')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m   45 |     /* The variable is set in the environment and not overridden by LC_ALL.  */[0m
   46 |     printf ("%s=%s\n", variable, value);[0m
   47 |   else[0m
      | [0;32m  } 
[0m[1mlocale.c:47:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   48 |     printf ("%s=\"%s\"\n", variable, setlocale (category, NULL));[0m
      | [0;1;32m                                                                 
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[106/126][81.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpumupeon2.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/printf-parse.c
[1mprintf-parse.c:149:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  150 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:155:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  156 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:157:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  158 |                     /* Positional argument 0.  */[0m
  159 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:160:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  161 |                     /* n too large, would lead to out of memory later.  */[0m
  162 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:208:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  209 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:218:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  219 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:226:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  227 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:232:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  233 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:234:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  235 |                         /* Positional argument 0.  */[0m
  236 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:237:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  238 |                         /* n too large, would lead to out of memory later.  */[0m
  239 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:247:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  248 |                     /* arg_posn wrapped around.  */[0m
  249 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:251:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:251:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:258:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  259 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:262:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  263 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:275:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  276 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:283:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  284 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:289:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  290 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:291:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  292 |                             /* Positional argument 0.  */[0m
  293 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:294:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |                             /* n too large, would lead to out of memory[0m
  296 |                                later.  */[0m
  297 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:305:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  306 |                         /* arg_posn wrapped around.  */[0m
  307 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:309:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:309:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:316:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  317 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:320:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  321 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:568:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  568 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:575:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  575 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:579:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  579 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:581:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  581 |                 if (signed_type == TYPE_LONGINT[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  582 |                     /* For backward compatibility only.  */[0m
  583 |                     || signed_type == TYPE_LONGLONGINT)[0m
  584 | #if HAVE_WINT_T[0m
  585 |                   type = TYPE_WIDE_CHAR;[0m
  586 | #else[0m
  587 |                   goto error;[0m
  588 | #endif[0m
  589 |                 else[0m
  590 |                   type = TYPE_CHAR;[0m
  591 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:583:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |                     || signed_type == TYPE_LONGLONGINT)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  584 | #if HAVE_WINT_T[0m
  585 |                   type = TYPE_WIDE_CHAR;[0m
  586 | #else[0m
  587 |                   goto error;[0m
  588 | #endif[0m
  589 |                 else[0m
      | [0;32m                } 
[0m[1mprintf-parse.c:589:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  590 |                   type = TYPE_CHAR;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:594:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  594 |                 type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  595 |                 c = 'c';[0m
  596 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:599:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  599 |                 if (signed_type == TYPE_LONGINT[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  600 |                     /* For backward compatibility only.  */[0m
  601 |                     || signed_type == TYPE_LONGLONGINT)[0m
  602 | #if HAVE_WCHAR_T[0m
  603 |                   type = TYPE_WIDE_STRING;[0m
  604 | #else[0m
  605 |                   goto error;[0m
  606 | #endif[0m
  607 |                 else[0m
  608 |                   type = TYPE_STRING;[0m
  609 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:601:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |                     || signed_type == TYPE_LONGLONGINT)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  602 | #if HAVE_WCHAR_T[0m
  603 |                   type = TYPE_WIDE_STRING;[0m
  604 | #else[0m
  605 |                   goto error;[0m
  606 | #endif[0m
  607 |                 else[0m
      | [0;32m                } 
[0m[1mprintf-parse.c:607:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  608 |                   type = TYPE_STRING;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:612:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |                 type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  613 |                 c = 's';[0m
  614 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:617:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  617 |                 type = TYPE_POINTER;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  618 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:620:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  620 |                 type = pointer_type;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  621 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:634:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  634 |                 type = TYPE_NONE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  635 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:638:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  638 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mprintf-parse.c:647:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  648 |                       /* arg_posn wrapped around.  */[0m
  649 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:651:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  651 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:651:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  651 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:665:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  666 |                 /* Overflow, would lead to out of memory.  */[0m
  667 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:671:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  672 |                 /* Out of memory.  */[0m
  673 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:674:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:675:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:675:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:694:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  694 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  695 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:696:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  697 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:702:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  703 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:704:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  705 |     free (d->dir);[0m
      | [0;1;32m                  
[0m50 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[107/126][83.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpfze5ld97.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/nstrftime.c
[1mnstrftime.c:314:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |   while (len-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  315 |     dest[len] = TOLOWER ((UCHAR_T) src[len], loc);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:325:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |   while (len-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  326 |     dest[len] = TOUPPER ((UCHAR_T) src[len], loc);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:532:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |   if (! zone)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  533 |     zone = "";[0m
      | [0;1;32m              
[0m[1mnstrftime.c:535:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |   if (hour12 > 12)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  536 |     hour12 -= 12;[0m
  537 |   else[0m
      | [0;32m  } 
[0m[1mnstrftime.c:538:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |     if (hour12 == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  539 |       hour12 = 12;[0m
      | [0;1;32m                  
[0m[1mnstrftime.c:647:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  647 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:647:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  647 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:666:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  666 |               continue;[0m
      | [0;1;32m              ^       
[0m      | [0;32m              {       ;} 
[0m[1mnstrftime.c:670:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  670 |               to_uppcase = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  671 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:673:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  673 |               change_case = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  674 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:677:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  677 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mnstrftime.c:688:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |                   || ckd_add (&width, width, *f - L_('0')))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  689 |                 width = INT_MAX;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:701:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  701 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mnstrftime.c:704:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  704 |           modifier = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  705 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:756:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  756 |           if (f - 1 != percent)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  757 |             goto bad_percent;[0m
  758 |           add1 (*f);[0m
  759 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:756:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |           if (f - 1 != percent)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  757 |             goto bad_percent;[0m
      | [0;1;32m                             
[0m[1mnstrftime.c:758:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  758 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:758:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  758 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:762:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  762 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  763 |             goto bad_format;[0m
  764 |           if (change_case)[0m
  765 |             {[0m
  766 |               to_uppcase = true;[0m
  767 |               to_lowcase = false;[0m
  768 |             }[0m
  769 | #ifdef _NL_CURRENT[0m
  770 |           cpy (aw_len, a_wkday);[0m
  771 |           break;[0m
  772 | #else[0m
  773 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:762:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  763 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:777:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  777 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  778 |             goto bad_format;[0m
  779 |           if (change_case)[0m
  780 |             {[0m
  781 |               to_uppcase = true;[0m
  782 |               to_lowcase = false;[0m
  783 |             }[0m
  784 | #ifdef _NL_CURRENT[0m
  785 |           cpy (STRLEN (f_wkday), f_wkday);[0m
  786 |           break;[0m
  787 | #else[0m
  788 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:777:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  778 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:798:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  798 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  799 |             goto bad_format;[0m
  800 | #ifdef _NL_CURRENT[0m
  801 |           if (modifier == L_('O'))[0m
  802 |             cpy (aam_len, a_altmonth);[0m
  803 |           else[0m
  804 |             cpy (am_len, a_month);[0m
  805 |           break;[0m
  806 | #else[0m
  807 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:798:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  799 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:811:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  811 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  812 |             goto bad_format;[0m
  813 |           if (change_case)[0m
  814 |             {[0m
  815 |               to_uppcase = true;[0m
  816 |               to_lowcase = false;[0m
  817 |             }[0m
  818 | #ifdef _NL_CURRENT[0m
  819 |           if (modifier == L_('O'))[0m
  820 |             cpy (STRLEN (f_altmonth), f_altmonth);[0m
  821 |           else[0m
  822 |             cpy (STRLEN (f_month), f_month);[0m
  823 |           break;[0m
  824 | #else[0m
  825 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:811:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  811 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  812 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:829:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  829 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:829:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  830 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:850:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  850 |             add (len, __strftime_internal (p,[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:157:19: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  157 | #define add(n, f) width_add (width, n, f)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:850:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  850 |             add (len, __strftime_internal (p,[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:157:19: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  157 | #define add(n, f) width_add (width, n, f)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:879:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  879 |             if (modifier != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  880 |               *u++ = modifier;[0m
      | [0;1;32m                              
[0m[1mnstrftime.c:884:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  884 |             if (len != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m                                      
[0m[1mnstrftime.c:885:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:885:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:885:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:885:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:891:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  891 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:920:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  920 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  921 |             goto bad_format;[0m
  922 | #ifdef _NL_CURRENT[0m
  923 |           if (! (modifier == L_('E')[0m
  924 |                  && (*(subfmt =[0m
  925 |                        (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(ERA_D_FMT)))[0m
  926 |                      != L_('\0'))))[0m
  927 |             subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(D_FMT));[0m
  928 |           goto subformat;[0m
  929 | #else[0m
  930 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:920:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  920 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  921 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:933:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  933 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  934 |             goto bad_format;[0m
  935 |           subfmt = L_("%m/%d/%y");[0m
  936 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:933:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  933 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  934 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:939:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  939 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  940 |             goto bad_format;[0m
  941 | [0m
  942 |           DO_NUMBER (2, tp->tm_mday);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:939:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  940 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:945:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  945 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:945:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  946 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:958:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  958 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  959 |             pad = yr_spec;[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:967:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  967 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  968 |             pad = L_('_');[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:1011:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1011 |           if (negative_number)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1012 |             u_number_value = - u_number_value;[0m
      | [0;1;32m                                              
[0m[1mnstrftime.c:1016:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1016 |               if (tz_colon_mask & 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1017 |                 *--bufp = ':';[0m
      | [0;1;32m                              
[0m[1mnstrftime.c:1025:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1026 |             pad = L_('0');[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:1027:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |           if (width < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1028 |             width = digits;[0m
      | [0;1;32m                           
[0m[1mnstrftime.c:1042:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1042 |                     if (p)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1043 |                       memset_space (p, padding);[0m
      | [0;1;32m                                                
[0m[1mnstrftime.c:1043:23: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1043 |                       memset_space (p, padding);[0m
      | [0;1;32m                      ^
[0m[1mnstrftime.c:147:32: [0m[0;1;36mnote: [0mexpanded from macro 'memset_space'[0m
  147 | # define memset_space(P, Len) (memset (P, ' ', Len), (P) += (Len))[0m
      | [0;1;32m                               ^~~~~~
[0m[1mnstrftime.c:1043:23: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1043 |                       memset_space (p, padding);[0m
      | [0;1;32m                      ^
[0m[1mnstrftime.c:147:32: [0m[0;1;36mnote: [0mexpanded from macro 'memset_space'[0m
  147 | # define memset_space(P, Len) (memset (P, ' ', Len), (P) += (Len))[0m
      | [0;1;32m                               ^~~~~~
[0m[1mnstrftime.c:1047:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1047 |                 width_add1 (0, sign_char);[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1047:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1047 |                 width_add1 (0, sign_char);[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1051:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1051 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1051:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1051 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1051:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1051 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1051:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1051 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1056:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1056 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1057 |             goto bad_format;[0m
 1058 |           if (pad == 0 && width < 0)[0m
 1059 |             {[0m
 1060 |               pad = L_('+');[0m
 1061 |               subwidth = 4;[0m
 1062 |             }[0m
 1063 |           else[0m
 1064 |             {[0m
 1065 |               subwidth = width - 6;[0m
 1066 |               if (subwidth < 0)[0m
 1067 |                 subwidth = 0;[0m
 1068 |             }[0m
 1069 |           subfmt = L_("%Y-%m-%d");[0m
 1070 |           goto subformat_width;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnstrftime.c:1056:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1057 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1066:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |               if (subwidth < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1067 |                 subwidth = 0;[0m
      | [0;1;32m                             
[0m[1mnstrftime.c:1073:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1073 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1074 |             goto bad_format;[0m
 1075 | [0m
 1076 |           DO_NUMBER (2, tp->tm_hour);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:1073:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1073 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1074 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1079:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1079 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1080 |             goto bad_format;[0m
 1081 | [0m
 1082 |           DO_NUMBER (2, hour12);[0m
      | [0;1;32m                               
[0m      | [0;32m                               ;} 
[0m[1mnstrftime.c:1079:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1080 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1085:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1085 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1086 |             goto bad_format;[0m
 1087 | [0m
 1088 |           DO_NUMBER_SPACEPAD (2, tp->tm_hour);[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mnstrftime.c:1085:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1085 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1086 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1091:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1091 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1092 |             goto bad_format;[0m
 1093 | [0m
 1094 |           DO_NUMBER_SPACEPAD (2, hour12);[0m
      | [0;1;32m                                        
[0m      | [0;32m                                        ;} 
[0m[1mnstrftime.c:1091:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1091 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1092 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1097:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1097 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1098 |             goto bad_format;[0m
 1099 | [0m
 1100 |           DO_SIGNED_NUMBER (3, tp->tm_yday < -1, tp->tm_yday + 1U);[0m
      | [0;1;32m                                                                  
[0m      | [0;32m                                                                  ;} 
[0m[1mnstrftime.c:1097:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1097 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1098 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1103:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1103 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1104 |             goto bad_format;[0m
 1105 | [0m
 1106 |           DO_NUMBER (2, tp->tm_min);[0m
      | [0;1;32m                                   
[0m      | [0;32m                                   ;} 
[0m[1mnstrftime.c:1103:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1103 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1104 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1109:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1109 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1110 |             goto bad_format;[0m
 1111 | [0m
 1112 |           DO_SIGNED_NUMBER (2, tp->tm_mon < -1, tp->tm_mon + 1U);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mnstrftime.c:1109:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1109 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1110 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1116:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1116 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1116:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1116 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1117 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1120:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1120 |             if (width <= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1121 |               width = ns_digits;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:1123:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1123 |             while (width < ndigs || (1 < ndigs && n % 10 == 0))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1124 |               ndigs--, n /= 10;[0m
      | [0;1;32m                               
[0m[1mnstrftime.c:1125:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |             for (int j = ndigs; 0 < j; j--)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1126 |               buf[j - 1] = n % 10 + L_('0'), n /= 10;[0m
      | [0;1;32m                                                     
[0m[1mnstrftime.c:1127:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1127 |             if (!pad)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1128 |               pad = L_('0');[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1129:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1129 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1129:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1129 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1129:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1129 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1129:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1129 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1130:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1130 |             width_add (width - ndigs, 0, (void) 0);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1130:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1130 |             width_add (width - ndigs, 0, (void) 0);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1136:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1136 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1136:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1136 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1136:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1136 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1137 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^
[0m[1mnstrftime.c:159:3: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  159 |   do                                                                          \[0m
      | [0;1;32m  ^
[0m[1mnstrftime.c:1140:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1140 |           to_lowcase = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1141 | #ifndef _NL_CURRENT[0m
 1142 |           format_char = L_('p');[0m
 1143 | #endif[0m
 1144 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:1146:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1146 |           if (change_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1147 |             {[0m
 1148 |               to_uppcase = false;[0m
 1149 |               to_lowcase = true;[0m
 1150 |             }[0m
 1151 | #ifdef _NL_CURRENT[0m
 1152 |           cpy (ap_len, ampm);[0m
 1153 |           break;[0m
 1154 | #else[0m
 1155 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:1159:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1159 |           DO_SIGNED_NUMBER (1, false, ((tp->tm_mon * 11) >> 5) + 1);[0m
      | [0;1;32m          ^                                                        
[0m      | [0;32m          {                                                        ;} 
[0m[1mnstrftime.c:721:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_SIGNED_NUMBER'[0m
  721 |           DO_MAYBE_SIGNED_NUMBER (d, negative, v, do_signed_number)[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:725:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_MAYBE_SIGNED_NUMBER'[0m
  725 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1162:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1162 |           subfmt = L_("%H:%M");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1163 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1173:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1173 |           goto underlying_strftime;[0m
      | [0;1;32m          ^                       
[0m      | [0;32m          {                       ;} 
[0m[1mnstrftime.c:1177:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1177 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1178 |             goto bad_format;[0m
 1179 | [0m
 1180 |           DO_NUMBER (2, tp->tm_sec);[0m
      | [0;1;32m                                   
[0m      | [0;32m                                   ;} 
[0m[1mnstrftime.c:1177:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1178 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1216:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1216 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1217 |             goto bad_format;[0m
 1218 | #ifdef _NL_CURRENT[0m
 1219 |           if (! (modifier == L_('E')[0m
 1220 |                  && (*(subfmt =[0m
 1221 |                        (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(ERA_T_FMT)))[0m
 1222 |                      != L_('\0'))))[0m
 1223 |             subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(T_FMT));[0m
 1224 |           goto subformat;[0m
 1225 | #else[0m
 1226 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:1216:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1216 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1217 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1229:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1229 |           subfmt = L_("%H:%M:%S");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1230 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1233:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1233 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1233:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1233 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1233:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1233 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1234 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^
[0m[1mnstrftime.c:159:3: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  159 |   do                                                                          \[0m
      | [0;1;32m  ^
[0m[1mnstrftime.c:1237:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1237 |           DO_NUMBER (1, (tp->tm_wday - 1 + 7) % 7 + 1);[0m
      | [0;1;32m          ^                                           
[0m      | [0;32m          {                                           ;} 
[0m[1mnstrftime.c:713:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_NUMBER'[0m
  713 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1240:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1240 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1241 |             goto bad_format;[0m
 1242 | [0m
 1243 |           DO_NUMBER (2, (tp->tm_yday - tp->tm_wday + 7) / 7);[0m
      | [0;1;32m                                                            
[0m      | [0;32m                                                            ;} 
[0m[1mnstrftime.c:1240:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1240 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1241 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1248:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1248 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1249 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1295:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1295 |                 DO_YEARISH (4, tp->tm_year < -TM_YEAR_BASE - year_adjust,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1296 |                             (tp->tm_year + (unsigned int) TM_YEAR_BASE[0m
 1297 |                              + year_adjust));[0m
      | [0;1;32m                                            
[0m      | [0;32m                                            ;} 
[0m[1mnstrftime.c:723:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_YEARISH'[0m
  723 |           DO_MAYBE_SIGNED_NUMBER (d, negative, v, do_yearish)[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:725:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_MAYBE_SIGNED_NUMBER'[0m
  725 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1300:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1300 |                 DO_NUMBER (2, days / 7 + 1);[0m
      | [0;1;32m                ^                          
[0m      | [0;32m                {                          ;} 
[0m[1mnstrftime.c:713:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_NUMBER'[0m
  713 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1305:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1305 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1306 |             goto bad_format;[0m
 1307 | [0m
 1308 |           DO_NUMBER (2, (tp->tm_yday - (tp->tm_wday - 1 + 7) % 7 + 7) / 7);[0m
      | [0;1;32m                                                                          
[0m      | [0;32m                                                                          ;} 
[0m[1mnstrftime.c:1305:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1305 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1306 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1311:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1311 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1312 |             goto bad_format;[0m
 1313 | [0m
 1314 |           DO_NUMBER (1, tp->tm_wday);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:1311:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1311 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1312 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1317:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1317 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1336:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1336 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1337 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1343:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1343 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1362:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1362 |             if (yy < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1363 |               yy = tp->tm_year < - TM_YEAR_BASE ? -yy : yy + 100;[0m
      | [0;1;32m                                                                 
[0m[1mnstrftime.c:1368:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1368 |           if (change_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1404:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1404 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1404:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1404 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1404:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1404 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1404:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1404 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1411:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1411 |           for (colons = 1; f[colons] == L_(':'); colons++)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1412 |             continue;[0m
 1413 |           if (f[colons] != L_('z'))[0m
 1414 |             goto bad_format;[0m
 1415 |           f += colons;[0m
 1416 |           goto do_z_conversion;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnstrftime.c:1411:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1411 |           for (colons = 1; f[colons] == L_(':'); colons++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1412 |             continue;[0m
      | [0;1;32m                     
[0m[1mnstrftime.c:1413:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1413 |           if (f[colons] != L_('z'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1414 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1419:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1419 |           colons = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1422:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1422 |           if (tp->tm_isdst < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1423 |             break;[0m
      | [0;1;32m                  
[0m[1mnstrftime.c:1468:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1468 |                 DO_TZ_OFFSET (5, 0, hour_diff * 100 + min_diff);[0m
      | [0;1;32m                ^                                              
[0m      | [0;32m                {                                              ;} 
[0m[1mnstrftime.c:738:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_TZ_OFFSET'[0m
  738 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1470:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1470 |               case 1: tz_hh_mm: /* +hh:mm */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m 1471 |                 DO_TZ_OFFSET (6, 04, hour_diff * 100 + min_diff);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mnstrftime.c:1473:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1473 |               case 2: tz_hh_mm_ss: /* +hh:mm:ss */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m 1474 |                 DO_TZ_OFFSET (9, 024,[0m
 1475 |                               hour_diff * 10000 + min_diff * 100 + sec_diff);[0m
      | [0;1;32m                                                                            
[0m      | [0;32m                                                                            ;} 
[0m[1mnstrftime.c:1478:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1478 |                 if (sec_diff != 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1479 |                   goto tz_hh_mm_ss;[0m
 1480 |                 if (min_diff != 0)[0m
 1481 |                   goto tz_hh_mm;[0m
 1482 |                 DO_TZ_OFFSET (3, 0, hour_diff);[0m
      | [0;1;32m                                              
[0m      | [0;32m                                              ;} 
[0m[1mnstrftime.c:1478:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1478 |                 if (sec_diff != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1479 |                   goto tz_hh_mm_ss;[0m
      | [0;1;32m                                   
[0m[1mnstrftime.c:1480:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1480 |                 if (min_diff != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1481 |                   goto tz_hh_mm;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:1485:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1485 |                 goto bad_format;[0m
      | [0;1;32m                ^              
[0m      | [0;32m                {              ;} 
[0m[1mnstrftime.c:1490:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1490 |         bad_percent:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1491 |             --f;[0m
 1492 |             FALLTHROUGH;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1497:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1497 |         bad_format:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1498 |           cpy (f - percent + 1, percent);[0m
 1499 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:1498:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1498 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1498:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1498 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1498:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1498 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1498:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1498 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1504:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1504 |   if (p && maxsize != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1505 |     *p = L_('\0');[0m
      | [0;1;32m                  
[0m139 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[108/126][94.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpmunb3sto.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/propername.c
[1mpropername.c:62:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       if (tsub_in_string == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   63 |         break;[0m
   64 |       else[0m
      | [0;32m      } 
[0m[1mpropername.c:72:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   72 |               mbui_init (string_iter, string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:72:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   72 |               mbui_init (string_iter, string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:79:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |                       if (!mbui_avail (string_iter))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   80 |                         abort ();[0m
      | [0;1;32m                                 
[0m[1mpropername.c:85:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |                   if (mb_isalnum (last_char_before_tsub))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   86 |                     word_boundary_before = false;[0m
      | [0;1;32m                                                 
[0m[1mpropername.c:89:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   89 |               mbui_init (string_iter, tsub_in_string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:89:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   89 |               mbui_init (string_iter, tsub_in_string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:93:22: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   93 |                 for (mbui_init (tsub_iter, tsub);[0m
      | [0;1;32m                     ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:93:22: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   93 |                 for (mbui_init (tsub_iter, tsub);[0m
      | [0;1;32m                     ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:97:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |                     if (!mbui_avail (string_iter))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m   98 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mpropername.c:106:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |                   if (mb_isalnum (first_char_after_tsub))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  107 |                     word_boundary_after = false;[0m
      | [0;1;32m                                                
[0m[1mpropername.c:116:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  116 |               mbui_init (string_iter, tsub_in_string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:116:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  116 |               mbui_init (string_iter, tsub_in_string);[0m
      | [0;1;32m              ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mpropername.c:117:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |               if (!mbui_avail (string_iter))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  118 |                 break;[0m
      | [0;1;32m                      
[0m[1mpropername.c:128:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |               if (string < tsub_in_string)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  129 |                 if (isalnum ((unsigned char) tsub_in_string[-1]))[0m
  130 |                   word_boundary_before = false;[0m
      | [0;1;32m                                               
[0m[1mpropername.c:129:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |                 if (isalnum ((unsigned char) tsub_in_string[-1]))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  130 |                   word_boundary_before = false;[0m
      | [0;1;32m                                               
[0m[1mpropername.c:134:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |               if (*p != '\0')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  135 |                 if (isalnum ((unsigned char) *p))[0m
  136 |                   word_boundary_after = false;[0m
      | [0;1;32m                                              
[0m[1mpropername.c:135:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |                 if (isalnum ((unsigned char) *p))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  136 |                   word_boundary_after = false;[0m
      | [0;1;32m                                              
[0m[1mpropername.c:144:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |               if (*tsub_in_string == '\0')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  145 |                 break;[0m
      | [0;1;32m                      
[0m[1mpropername.c:165:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |       if (mbsstr_trimmed_wordbounded (translation, name))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  166 |         return translation;[0m
  167 |       else[0m
      | [0;32m      } 
[0m[1mpropername.c:173:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  173 |           sprintf (result, "%s (%s)", translation, name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpropername.c:173:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  173 |           sprintf (result, "%s (%s)", translation, name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpropername.c:177:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  178 |     return name;[0m
      | [0;1;32m                
[0m[1mpropername.c:214:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  214 |         memcpy (locale_code_translit, locale_code, len);[0m
      | [0;1;32m        ^~~~~~
[0m[1mpropername.c:214:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  214 |         memcpy (locale_code_translit, locale_code, len);[0m
      | [0;1;32m        ^~~~~~
[0m[1mpropername.c:215:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  215 |         memcpy (locale_code_translit + len, "//TRANSLIT", 10 + 1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mpropername.c:215:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  215 |         memcpy (locale_code_translit + len, "//TRANSLIT", 10 + 1);[0m
      | [0;1;32m        ^~~~~~
[0m[1mpropername.c:229:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |             if (strchr (converted_translit, '?') != NULL)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  230 |               free (converted_translit);[0m
  231 |             else[0m
      | [0;32m            } 
[0m[1mpropername.c:231:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  232 | #  endif[0m
  233 |               name_converted_translit = alloc_name_converted_translit =[0m
  234 |                 converted_translit;[0m
      | [0;1;32m                                   
[0m[1mpropername.c:263:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |           if (alloc_name_converted != NULL)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  264 |             free (alloc_name_converted);[0m
      | [0;1;32m                                        
[0m[1mpropername.c:265:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |           if (alloc_name_converted_translit != NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  266 |             free (alloc_name_converted_translit);[0m
      | [0;1;32m                                                 
[0m[1mpropername.c:275:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  275 |           sprintf (result, "%s (%s)", translation, name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpropername.c:275:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  275 |           sprintf (result, "%s (%s)", translation, name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpropername.c:277:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |           if (alloc_name_converted != NULL)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  278 |             free (alloc_name_converted);[0m
      | [0;1;32m                                        
[0m[1mpropername.c:279:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |           if (alloc_name_converted_translit != NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  280 |             free (alloc_name_converted_translit);[0m
      | [0;1;32m                                                 
[0m[1mpropername.c:286:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |       if (alloc_name_converted != NULL && alloc_name_converted != name)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  287 |         free (alloc_name_converted);[0m
      | [0;1;32m                                    
[0m[1mpropername.c:289:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |           && alloc_name_converted_translit != name)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  290 |         free (alloc_name_converted_translit);[0m
      | [0;1;32m                                             
[0m53 warnings generated.
Suppressed 24 warnings (24 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[109/126][82.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpn4dwusod.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/c-strcasestr.c
[1mc-strcasestr.c:52:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |   while (*haystack && *needle)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   53 |     ok &= (c_tolower ((unsigned char) *haystack++)[0m
   54 |            == c_tolower ((unsigned char) *needle++));[0m
      | [0;1;32m                                                     
[0m[1mc-strcasestr.c:55:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |   if (*needle)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   56 |     return NULL;[0m
      | [0;1;32m                
[0m[1mc-strcasestr.c:57:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |   if (ok)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   58 |     return (char *) haystack_start;[0m
      | [0;1;32m                                   
[0m[1mc-strcasestr.c:66:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (needle_len < LONG_NEEDLE_THRESHOLD)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   67 |     return two_way_short_needle ((const unsigned char *) haystack,[0m
   68 |                                  haystack_len,[0m
   69 |                                  (const unsigned char *) needle_start,[0m
   70 |                                  needle_len);[0m
      | [0;1;32m                                             
[0m37 warnings generated.
Suppressed 33 warnings (33 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[110/126][93.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpnvenvbso.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/stackvma.c
[1mstackvma.c:163:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  164 |     return -1;[0m
      | [0;1;32m              
[0m[1mstackvma.c:180:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |           if (n < 0 && errno == EINTR)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  181 |             goto retry;[0m
      | [0;1;32m                       
[0m[1mstackvma.c:186:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |               if (n <= 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  187 |                 /* Empty file.  */[0m
  188 |                 goto fail1;[0m
      | [0;1;32m                           
[0m[1mstackvma.c:199:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |                       if (n < 0 && errno == EINTR)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  200 |                         goto retry;[0m
      | [0;1;32m                                   
[0m[1mstackvma.c:201:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |                       if (n < 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  202 |                         /* Some error.  */[0m
  203 |                         goto fail1;[0m
      | [0;1;32m                                   
[0m[1mstackvma.c:204:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |                       if (n + MIN_LEFTOVER > size - rof->filled)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  205 |                         /* Allocate a larger buffer.  */[0m
  206 |                         break;[0m
      | [0;1;32m                              
[0m[1mstackvma.c:227:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |           while (size <= MIN_LEFTOVER)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  228 |             size = 2 * size;[0m
      | [0;1;32m                            
[0m[1mstackvma.c:233:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |           if (size == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  234 |             /* Wraparound.  */[0m
  235 |             goto fail1;[0m
      | [0;1;32m                       
[0m[1mstackvma.c:236:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |           if (rof->auxmap != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  237 |             munmap (rof->auxmap, rof->auxmap_length);[0m
      | [0;1;32m                                                     
[0m[1mstackvma.c:256:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  256 |           if (fd < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  257 |             goto fail2;[0m
      | [0;1;32m                       
[0m[1mstackvma.c:263:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (rof->auxmap != NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  264 |     munmap (rof->auxmap, rof->auxmap_length);[0m
      | [0;1;32m                                             
[0m[1mstackvma.c:286:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |   if (c >= 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  287 |     rof->position++;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:300:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |       if (c >= '0' && c <= '9')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  301 |         value = (value << 4) + (c - '0');[0m
  302 |       else if (c >= 'A' && c <= 'F')[0m
      | [0;32m      } 
[0m[1mstackvma.c:302:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |       else if (c >= 'A' && c <= 'F')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  303 |         value = (value << 4) + (c - 'A' + 10);[0m
  304 |       else if (c >= 'a' && c <= 'f')[0m
      | [0;32m      } 
[0m[1mstackvma.c:304:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |       else if (c >= 'a' && c <= 'f')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  305 |         value = (value << 4) + (c - 'a' + 10);[0m
  306 |       else[0m
      | [0;32m      } 
[0m[1mstackvma.c:306:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  307 |         break;[0m
      | [0;1;32m              
[0m[1mstackvma.c:311:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |   if (numdigits == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  312 |     return -1;[0m
      | [0;1;32m              
[0m[1mstackvma.c:321:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |   if (rof->auxmap != NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  322 |     munmap (rof->auxmap, rof->auxmap_length);[0m
      | [0;1;32m                                             
[0m[1mstackvma.c:366:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |                 && rof_scanf_lx (&rof, &end) >= 0))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  367 |             break;[0m
      | [0;1;32m                  
[0m[1mstackvma.c:368:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |           while (c = rof_getchar (&rof), c != -1 && c != '\n')[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  369 |             ;[0m
      | [0;1;32m             
[0m[1mstackvma.c:375:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |               if (start < auxmap_start)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  376 |                 if (callback (locals, start, auxmap_start))[0m
  377 |                   break;[0m
      | [0;1;32m                        
[0m[1mstackvma.c:376:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |                 if (callback (locals, start, auxmap_start))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  377 |                   break;[0m
      | [0;1;32m                        
[0m[1mstackvma.c:378:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |               if (auxmap_end - 1 < end - 1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  379 |                 if (callback (locals, auxmap_end, end))[0m
  380 |                   break;[0m
      | [0;1;32m                        
[0m[1mstackvma.c:379:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |                 if (callback (locals, auxmap_end, end))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  380 |                   break;[0m
      | [0;1;32m                        
[0m[1mstackvma.c:384:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |               if (callback (locals, start, end))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  385 |                 break;[0m
      | [0;1;32m                      
[0m[1mstackvma.c:571:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |   if (retval == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  572 |       return 0;[0m
      | [0;1;32m               
[0m[1mstackvma.c:661:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  661 |       if (addr == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  662 |         return addr;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:665:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |       if (stepsize > max_remaining)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  666 |         stepsize = max_remaining;[0m
      | [0;1;32m                                 
[0m[1mstackvma.c:668:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  668 |                    stepsize * pagesize, vec) < 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  669 |         /* Time to search in smaller steps.  */[0m
  670 |         break;[0m
      | [0;1;32m              
[0m[1mstackvma.c:679:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |       if (stepsize == 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  680 |         return addr;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:688:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |                    halfstepsize1 * pagesize, vec) < 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  689 |         stepsize = halfstepsize1;[0m
  690 |       else[0m
      | [0;32m      } 
[0m[1mstackvma.c:714:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |       if (addr == 0) /* wrapped around? */[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  715 |         return addr;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:718:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |       if (stepsize > max_remaining)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  719 |         stepsize = max_remaining;[0m
      | [0;1;32m                                 
[0m[1mstackvma.c:720:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  720 |       if (mincore ((MINCORE_ADDR_T) addr, stepsize * pagesize, vec) < 0)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  721 |         /* Time to search in smaller steps.  */[0m
  722 |         break;[0m
      | [0;1;32m              
[0m[1mstackvma.c:731:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |       if (stepsize == 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  732 |         return addr;[0m
      | [0;1;32m                    
[0m[1mstackvma.c:739:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |       if (mincore ((MINCORE_ADDR_T) addr, halfstepsize1 * pagesize, vec) < 0)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  740 |         stepsize = halfstepsize1;[0m
  741 |       else[0m
      | [0;32m      } 
[0m[1mstackvma.c:774:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   for (stepsize = 1; stepsize < count; )[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  775 |     stepsize = 2 * stepsize;[0m
      | [0;1;32m                            
[0m[1mstackvma.c:783:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  783 |       if (stepsize == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  784 |         break;[0m
      | [0;1;32m              
[0m[1mstackvma.c:788:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |            i += 2 * stepsize, addr += 2 * addr_stepsize)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  789 |         /* Here addr = addr1 + i * pagesize.  */[0m
  790 |         if (is_mapped (addr))[0m
  791 |           return 0;[0m
      | [0;1;32m                   
[0m[1mstackvma.c:790:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |         if (is_mapped (addr))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  791 |           return 0;[0m
      | [0;1;32m                   
[0m[1mstackvma.c:812:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |   if (testaddr > addr) /* overflow? */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  813 |     return 0;[0m
      | [0;1;32m             
[0m[1mstackvma.c:846:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |   if (pagesize == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  847 |     init_pagesize ();[0m
      | [0;1;32m                     
[0m44 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[111/126][110.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp_7z68_9g.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/gnulib-tests/vasnprintf.c
[1mvasnprintf.c:2210:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2210 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2211 |     /* errno is already set.  */[0m
 2212 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:2221:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2221 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2222 |     goto fail_1_with_EINVAL;[0m
      | [0;1;32m                            
[0m[1mvasnprintf.c:2250:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2250 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2251 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:2253:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2253 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2254 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:2300:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2306:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2306 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2306:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2306 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2311:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2311 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2312 |                   result[length++] = *cp++;[0m
 2313 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:2316:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2316 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2317 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:2324:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2324 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2325 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2327:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2327 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2327:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2327 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2328:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2328 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2210:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2210 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:154:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  154 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2210:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2210 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2221:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2221 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:2221:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2221 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2241:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2241 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2241:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2241 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2259:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 2259 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2259:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:2293:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2293 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2295:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 2295 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2295:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2295 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2269:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2269:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2274:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2274 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2274:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2274 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2275:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2275 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2275:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2275 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2277:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2277 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2278:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2278 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2278:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2278 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2280:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2280 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2280:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2280 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2284 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2284:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2284 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2286:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2286 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2286:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2286 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2286:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2286 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2286:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2286 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2304:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2304 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2316:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 2316 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:2316:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 2316 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2320:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2320 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2320:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2320 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2324:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2324 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2324:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2324 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2326:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 2326 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:2326:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 2326 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2327:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 2327 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2269:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2327:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2327 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2269:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2328:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 2328 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2333:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2333 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2334 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2341:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2341 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2342 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2344:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2344 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2345 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2347:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2347 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2348 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2350:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2350 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2351 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2353:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2353 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2354 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2356:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2356 |                     *a.arg[dp->arg_index].a.a_count_int8_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2357 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2359:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2359 |                     *a.arg[dp->arg_index].a.a_count_int16_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2360 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2362:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2362 |                     *a.arg[dp->arg_index].a.a_count_int32_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2363 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2365:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2365 |                     *a.arg[dp->arg_index].a.a_count_int64_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2366 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2368:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2368 |                     *a.arg[dp->arg_index].a.a_count_int_fast8_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2369 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2371:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2371 |                     *a.arg[dp->arg_index].a.a_count_int_fast16_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2372 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2374:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2374 |                     *a.arg[dp->arg_index].a.a_count_int_fast32_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2375 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2377:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2377 |                     *a.arg[dp->arg_index].a.a_count_int_fast64_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2378 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2380:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2380 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:5802:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5802 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5803 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:5805:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5805 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 5806 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5807:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5807 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5808 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5809:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5809 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5810 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5811:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5811 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5812 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5814:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5814 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5815 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5819:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5819 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5820 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5828:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5828 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5828:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5828 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5834:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5834 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5835 |                               *fbp++ = *mp++;[0m
 5836 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5849:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5849 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5849:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5849 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5855:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5855 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5856 |                               *fbp++ = *mp++;[0m
 5857 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5922:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5922 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                    {           ;} 
[0m[1m../lib/attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../lib/config.h:2278:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2278 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mvasnprintf.c:5980:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5980 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5982:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5982 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 5983 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:5985:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5985 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:6076:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6076 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 6077 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:6082:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6082 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 6083 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:6096:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6096 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6096:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6096 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6115:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6115 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 6116 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:6163:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6163 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6164 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 6165 |                           SNPRINTF_BUF (arg);[0m
 6166 |                         }[0m
 6167 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6165:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6165 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6165:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6165 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6169:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6169 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6170 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 6171 |                           SNPRINTF_BUF (arg);[0m
 6172 |                         }[0m
 6173 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6171:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6171 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6171:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6171 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6175:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6175 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6176 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 6177 |                           SNPRINTF_BUF (arg);[0m
 6178 |                         }[0m
 6179 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6177:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6177 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6177:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6177 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6181:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6181 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6182 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 6183 |                           SNPRINTF_BUF (arg);[0m
 6184 |                         }[0m
 6185 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6183:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6183 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6183:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6183 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6187:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6187 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6188 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 6189 |                           SNPRINTF_BUF (arg);[0m
 6190 |                         }[0m
 6191 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6189:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6189 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6189:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6189 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6193:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6193 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6194 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 6195 |                           SNPRINTF_BUF (arg);[0m
 6196 |                         }[0m
 6197 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6195:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6195 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6195:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6195 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6199:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6199 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6200 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 6201 |                           SNPRINTF_BUF (arg);[0m
 6202 |                         }[0m
 6203 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6201:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6201 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6201:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6201 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6205:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6205 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6206 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 6207 |                           SNPRINTF_BUF (arg);[0m
 6208 |                         }[0m
 6209 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6207:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6207 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6207:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6207 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6211:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6211 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6212 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 6213 |                           SNPRINTF_BUF (arg);[0m
 6214 |                         }[0m
 6215 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6213:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6213 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6213:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6213 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6217:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6217 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6218 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 6219 |                           SNPRINTF_BUF (arg);[0m
 6220 |                         }[0m
 6221 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6219:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6219 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6219:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6219 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6223:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6223 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6224 |                           int8_t arg = a.arg[dp->arg_index].a.a_int8_t;[0m
 6225 |                           SNPRINTF_BUF (arg);[0m
 6226 |                         }[0m
 6227 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6225:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6225 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6225:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6225 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6229:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6229 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6230 |                           uint8_t arg = a.arg[dp->arg_index].a.a_uint8_t;[0m
 6231 |                           SNPRINTF_BUF (arg);[0m
 6232 |                         }[0m
 6233 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6231:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6231 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6231:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6231 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6235:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6235 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6236 |                           int16_t arg = a.arg[dp->arg_index].a.a_int16_t;[0m
 6237 |                           SNPRINTF_BUF (arg);[0m
 6238 |                         }[0m
 6239 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6237:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6237 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6237:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6237 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6241:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6241 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6242 |                           uint16_t arg = a.arg[dp->arg_index].a.a_uint16_t;[0m
 6243 |                           SNPRINTF_BUF (arg);[0m
 6244 |                         }[0m
 6245 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6243:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6243 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6243:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6243 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6247:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6247 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6248 |                           int32_t arg = a.arg[dp->arg_index].a.a_int32_t;[0m
 6249 |                           SNPRINTF_BUF (arg);[0m
 6250 |                         }[0m
 6251 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6249:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6249 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6249:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6249 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6253:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6253 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6254 |                           uint32_t arg = a.arg[dp->arg_index].a.a_uint32_t;[0m
 6255 |                           SNPRINTF_BUF (arg);[0m
 6256 |                         }[0m
 6257 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6255:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6255 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6255:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6255 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6259:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6259 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6260 |                           int64_t arg = a.arg[dp->arg_index].a.a_int64_t;[0m
 6261 |                           SNPRINTF_BUF (arg);[0m
 6262 |                         }[0m
 6263 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6261:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6261 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6261:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6261 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6265:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6265 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6266 |                           uint64_t arg = a.arg[dp->arg_index].a.a_uint64_t;[0m
 6267 |                           SNPRINTF_BUF (arg);[0m
 6268 |                         }[0m
 6269 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6267:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6267 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6267:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6267 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6271:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6271 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6272 |                           int_fast8_t arg = a.arg[dp->arg_index].a.a_int_fast8_t;[0m
 6273 |                           SNPRINTF_BUF (arg);[0m
 6274 |                         }[0m
 6275 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6273:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6273 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6273:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6273 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6277:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6277 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6278 |                           uint_fast8_t arg = a.arg[dp->arg_index].a.a_uint_fast8_t;[0m
 6279 |                           SNPRINTF_BUF (arg);[0m
 6280 |                         }[0m
 6281 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6279:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6279 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6279:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6279 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6283:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6283 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6284 |                           int_fast16_t arg = a.arg[dp->arg_index].a.a_int_fast16_t;[0m
 6285 |                           SNPRINTF_BUF (arg);[0m
 6286 |                         }[0m
 6287 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6285:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6285 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6285:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6285 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6289:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6289 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6290 |                           uint_fast16_t arg = a.arg[dp->arg_index].a.a_uint_fast16_t;[0m
 6291 |                           SNPRINTF_BUF (arg);[0m
 6292 |                         }[0m
 6293 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6291:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6291 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6291:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6291 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6295:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6295 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6296 |                           int_fast32_t arg = a.arg[dp->arg_index].a.a_int_fast32_t;[0m
 6297 |                           SNPRINTF_BUF (arg);[0m
 6298 |                         }[0m
 6299 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6297:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6297 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6297:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6297 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6301:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6301 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6302 |                           uint_fast32_t arg = a.arg[dp->arg_index].a.a_uint_fast32_t;[0m
 6303 |                           SNPRINTF_BUF (arg);[0m
 6304 |                         }[0m
 6305 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6303:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6303 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6303:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6303 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6307:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6307 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6308 |                           int_fast64_t arg = a.arg[dp->arg_index].a.a_int_fast64_t;[0m
 6309 |                           SNPRINTF_BUF (arg);[0m
 6310 |                         }[0m
 6311 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6309:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6309 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6309:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6309 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6313:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6313 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6314 |                           uint_fast64_t arg = a.arg[dp->arg_index].a.a_uint_fast64_t;[0m
 6315 |                           SNPRINTF_BUF (arg);[0m
 6316 |                         }[0m
 6317 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6315:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6315 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6315:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6315 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6319:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6319 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6320 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 6321 |                           SNPRINTF_BUF (arg);[0m
 6322 |                         }[0m
 6323 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6321:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6321 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6321:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6321 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6325:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6325 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6326 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 6327 |                           SNPRINTF_BUF (arg);[0m
 6328 |                         }[0m
 6329 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6327:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6327 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6327:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6327 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6331:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6331 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6332 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 6333 |                           SNPRINTF_BUF (arg);[0m
 6334 |                         }[0m
 6335 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6333:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6333 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6333:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6333 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6338:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6338 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6339 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 6340 |                           SNPRINTF_BUF (arg);[0m
 6341 |                         }[0m
 6342 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6340:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6340 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6340:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6340 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6345:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6345 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6346 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 6347 |                           SNPRINTF_BUF (arg);[0m
 6348 |                         }[0m
 6349 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6347:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6347 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6347:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6347 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6352:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6352 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6353 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 6354 |                           SNPRINTF_BUF (arg);[0m
 6355 |                         }[0m
 6356 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6354:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6354 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6354:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6354 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6359:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6359 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6360 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 6361 |                           SNPRINTF_BUF (arg);[0m
 6362 |                         }[0m
 6363 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6361:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6361 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6361:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6361 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6122:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6122 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6365:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6365 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:6378:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6378 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 6379 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:6381:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6381 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 6382 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:6465:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6465 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 6466 |                               errno = EILSEQ;[0m
 6467 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:6467:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6467 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 6468 |                               errno = EINVAL;[0m
      | [0;1;32m                                             
[0m[1mvasnprintf.c:6485:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6485 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 6486 |                           goto overflow;[0m
 6487 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:6505:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6505 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6505:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6505 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6889:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6889 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6889:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6889 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2287:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2287 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6890:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 6890 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2210:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2210 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:154:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  154 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2210:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2210 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2221:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2221 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:2221:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2221 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2241:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2241 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2241:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2241 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2259:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 2259 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2259:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:2293:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2293 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2295:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 2295 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2295:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2295 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2269:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2269:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2274:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2274 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2274:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2274 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2275:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2275 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2275:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2275 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2277:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2277 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2278:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2278 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2278:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2278 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2280:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2280 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2280:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2280 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2284 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2284:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2284 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2286:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2286 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2286:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2286 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2286:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2286 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2286:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2286 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2304:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2304 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2316:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 2316 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:2316:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2316 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2317:11: [0m[0;1;36mnote: [0m Execution continues on line 6889[0m
 2317 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:6889:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 6889 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2291:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:2269:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:6889:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 6889 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2291:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:2269:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:6889:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 6889 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2269:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:6889:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 6889 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2291:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2291 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2269:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2269 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:6890:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 6890 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:6898:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6898 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 6899 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:6902:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6902 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6903 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:6929:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6929 |     if (result != resultbuf)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 6930 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:6931:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6931 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6932 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m192 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[112/126][114.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp63w48iec.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/sdiff.c
[1msdiff.c:157:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |   if (reason_msgid)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  158 |     error (0, 0, _(reason_msgid), operand);[0m
      | [0;1;32m                                           
[0m[1msdiff.c:166:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |   if (ferror (stdout))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  167 |     fatal ("write failed");[0m
  168 |   else if (fclose (stdout) != 0)[0m
      | [0;32m  } 
[0m[1msdiff.c:168:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |   else if (fclose (stdout) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  169 |     perror_fatal (_("standard output"));[0m
      | [0;1;32m                                        
[0m[1msdiff.c:213:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |   for (p = option_help_msgid;  *p;  p++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  214 |     if (**p)[0m
  215 |       printf ("  %s\n", _(*p));[0m
  216 |     else[0m
  217 |       putchar ('\n');[0m
      | [0;1;32m                     
[0m[1msdiff.c:214:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |     if (**p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  215 |       printf ("  %s\n", _(*p));[0m
  216 |     else[0m
      | [0;32m    } 
[0m[1msdiff.c:216:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  217 |       putchar ('\n');[0m
      | [0;1;32m                     
[0m[1msdiff.c:230:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |   if (0 < diffpid)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  231 |     kill (diffpid, SIGPIPE);[0m
      | [0;1;32m                            
[0m[1msdiff.c:233:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |   if (tmpname)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  234 |     unlink (tmpname);[0m
      | [0;1;32m                     
[0m[1msdiff.c:289:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |   if (! r)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  290 |     perror_fatal (fname);[0m
      | [0;1;32m                         
[0m[1msdiff.c:297:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |   if (fclose (f))[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  298 |     perror_fatal ("fclose");[0m
      | [0;1;32m                            
[0m[1msdiff.c:305:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |   if (r == 0 && ferror (f))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  306 |     perror_fatal (_("read failed"));[0m
      | [0;1;32m                                    
[0m[1msdiff.c:313:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |   if (fwrite (buf, sizeof (char), size, f) != size)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  314 |     perror_fatal (_("write failed"));[0m
      | [0;1;32m                                     
[0m[1msdiff.c:320:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |   if (fflush (f) != 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  321 |     perror_fatal (_("write failed"));[0m
      | [0;1;32m                                     
[0m[1msdiff.c:327:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |   if (STREQ (name, "-"))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  328 |     fatal ("cannot interactively merge standard input");[0m
      | [0;1;32m                                                        
[0m[1msdiff.c:329:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |   if (! is_dir)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  330 |     return name;[0m
  331 |   else[0m
      | [0;32m  } 
[0m[1msdiff.c:385:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |           if (! lf_refill (lf))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  386 |             return;[0m
      | [0;1;32m                   
[0m[1msdiff.c:408:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |           if (! lf_refill (lf))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  409 |             break;[0m
      | [0;1;32m                  
[0m[1msdiff.c:428:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |       if (bufsize <= s)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  429 |         return 0;[0m
      | [0;1;32m                 
[0m[1msdiff.c:438:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |       if (! lf_refill (lf))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  439 |         return s ? 0 : EOF;[0m
      | [0;1;32m                           
[0m[1msdiff.c:459:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |   if (prog)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  460 |     editor_program = prog;[0m
      | [0;1;32m                          
[0m[1msdiff.c:471:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  471 |           diffarg ("-a");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  472 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:475:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  475 |           diffarg ("-b");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  476 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:479:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |           diffarg ("-B");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  480 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:483:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  483 |           diffarg ("-d");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  484 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:487:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |           diffarg ("-E");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  488 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:491:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |           diffarg ("-H");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  492 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:495:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  495 |           diffarg ("-i");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  496 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:499:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  499 |           diffarg ("-I");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  500 |           diffarg (optarg);[0m
  501 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:504:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  504 |           diffarg ("--left-column");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  505 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:508:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  508 |           output = optarg;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  509 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:512:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |           suppress_common_lines = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  513 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:516:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  516 |           diffarg ("-t");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  517 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:520:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |           version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, Version,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  521 |                        AUTHORS, nullptr);[0m
  522 |           check_stdout ();[0m
  523 |           return EXIT_SUCCESS;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1msdiff.c:526:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  526 |           diffarg ("-W");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  527 |           diffarg (optarg);[0m
  528 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:531:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  531 |           diffarg ("-w");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  532 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:535:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  535 |           diffarg ("-Z");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  536 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:539:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  539 |           diffargv[0] = optarg;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  540 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:543:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  543 |           usage ();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  544 |           check_stdout ();[0m
  545 |           return EXIT_SUCCESS;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1msdiff.c:548:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  548 |           diffarg ("--strip-trailing-cr");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  549 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:552:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  552 |           diffarg ("--tabsize");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  553 |           diffarg (optarg);[0m
  554 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:557:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  557 |           try_help (0, 0);[0m
      | [0;1;32m          ^              
[0m      | [0;32m          {              ;} 
[0m[1msdiff.c:563:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |       if (argc - optind < 2)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  564 |         try_help ("missing operand after '%s'", argv[argc - 1]);[0m
  565 |       else[0m
      | [0;32m      } 
[0m[1msdiff.c:565:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  565 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  566 |         try_help ("extra operand '%s'", argv[optind + 2]);[0m
      | [0;1;32m                                                          
[0m[1msdiff.c:572:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |       if (suppress_common_lines)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  573 |         diffarg ("--suppress-common-lines");[0m
      | [0;1;32m                                            
[0m[1msdiff.c:593:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |       if (leftdir & rightdir)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  594 |         fatal ("both files to be compared are directories");[0m
      | [0;1;32m                                                            
[0m[1msdiff.c:623:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |         if (pipe (diff_fds) != 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  624 |           perror_fatal ("pipe");[0m
      | [0;1;32m                                
[0m[1msdiff.c:627:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |         if (diffpid < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  628 |           perror_fatal ("fork");[0m
      | [0;1;32m                                
[0m[1msdiff.c:635:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  635 |             if (initial_handler (handler_index_of_SIGINT) != SIG_IGN)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  636 |               signal_handler (SIGINT, SIG_IGN);[0m
      | [0;1;32m                                               
[0m[1msdiff.c:651:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |         if (! diffout)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  652 |           perror_fatal ("fdopen");[0m
      | [0;1;32m                                  
[0m[1msdiff.c:676:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  676 |         while (waitpid (diffpid, &wstatus, 0) < 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  677 |           if (errno == EINTR)[0m
  678 |             checksigs ();[0m
  679 |           else[0m
  680 |             perror_fatal ("waitpid");[0m
      | [0;1;32m                                     
[0m[1msdiff.c:677:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  677 |           if (errno == EINTR)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  678 |             checksigs ();[0m
  679 |           else[0m
      | [0;32m          } 
[0m[1msdiff.c:679:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  680 |             perror_fatal ("waitpid");[0m
      | [0;1;32m                                     
[0m[1msdiff.c:690:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  690 |         if (! interact_ok)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  691 |           exiterr ();[0m
      | [0;1;32m                     
[0m[1msdiff.c:709:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  709 |       if (! diffarglim)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  710 |         diffarglim = 16;[0m
  711 |       else if (PTRDIFF_MAX / (2 * sizeof *diffargv) <= diffarglim)[0m
      | [0;32m      } 
[0m[1msdiff.c:711:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |       else if (PTRDIFF_MAX / (2 * sizeof *diffargv) <= diffarglim)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  712 |         xalloc_die ();[0m
  713 |       else[0m
      | [0;32m      } 
[0m[1msdiff.c:713:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  714 |         diffarglim *= 2;[0m
      | [0;1;32m                        
[0m[1msdiff.c:732:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |   if (! (s == SIGINT && ignore_SIGINT))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  733 |     signal_received = s;[0m
      | [0;1;32m                        
[0m[1msdiff.c:755:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |   for (i = 0;  i < NUM_SIGS;  i++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  756 |     sigaddset (&catchaction.sa_mask, sigs[i]);[0m
      | [0;1;32m                                              
[0m[1msdiff.c:766:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  766 |       if (initial_handler (i) != SIG_IGN)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  767 |         signal_handler (sigs[i], catchsig);[0m
      | [0;1;32m                                           
[0m[1msdiff.c:784:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |   if (sigs_trapped)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  785 |     for (i = 0;  i < NUM_SIGS;  i++)[0m
  786 |       if ((! s || sigs[i] == s)  &&  initial_handler (i) != SIG_IGN)[0m
  787 |         {[0m
  788 | #if HAVE_SIGACTION[0m
  789 |           sigaction (sigs[i], &initial_action[i], 0);[0m
  790 | #else[0m
  791 |           signal (sigs[i], initial_action[i]);[0m
  792 | #endif[0m
  793 |         }[0m
      | [0;1;32m         
[0m[1msdiff.c:785:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |     for (i = 0;  i < NUM_SIGS;  i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  786 |       if ((! s || sigs[i] == s)  &&  initial_handler (i) != SIG_IGN)[0m
  787 |         {[0m
  788 | #if HAVE_SIGACTION[0m
  789 |           sigaction (sigs[i], &initial_action[i], 0);[0m
  790 | #else[0m
  791 |           signal (sigs[i], initial_action[i]);[0m
  792 | #endif[0m
  793 |         }[0m
      | [0;1;32m         
[0m[1msdiff.c:817:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  817 |   fprintf (stderr, "%s", _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1msdiff.c:817:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  817 |   fprintf (stderr, "%s", _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1msdiff.c:838:13: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  838 |       if (! isspace (c) || c == '\n')[0m
      | [0;1;32m            ^
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^
[0m[1msdiff.c:459:7: [0m[0;1;36mnote: [0m'prog' is null[0m
  459 |   if (prog)[0m
      | [0;1;32m      ^~~~
[0m[1msdiff.c:459:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  459 |   if (prog)[0m
      | [0;1;32m  ^
[0m[1msdiff.c:465:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  465 |   while ((opt = getopt_long (argc, argv, "abBdEHiI:lo:stvw:WZ", longopts, 0))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  466 |          != -1)[0m
      | [0;1;32m         ~~~~~
[0m[1msdiff.c:465:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 561[0m
  465 |   while ((opt = getopt_long (argc, argv, "abBdEHiI:lo:stvw:WZ", longopts, 0))[0m
      | [0;1;32m  ^
[0m[1msdiff.c:561:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  561 |   if (argc - optind != 2)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msdiff.c:561:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  561 |   if (argc - optind != 2)[0m
      | [0;1;32m  ^
[0m[1msdiff.c:569:7: [0m[0;1;36mnote: [0mAssuming 'output' is non-null[0m
  569 |   if (! output)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1msdiff.c:569:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  569 |   if (! output)[0m
      | [0;1;32m  ^
[0m[1msdiff.c:593:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  593 |       if (leftdir & rightdir)[0m
      | [0;1;32m      ^
[0m[1msdiff.c:623:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  623 |         if (pipe (diff_fds) != 0)[0m
      | [0;1;32m        ^
[0m[1msdiff.c:627:13: [0m[0;1;36mnote: [0mAssuming 'diffpid' is >= 0[0m
  627 |         if (diffpid < 0)[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1msdiff.c:627:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  627 |         if (diffpid < 0)[0m
      | [0;1;32m        ^
[0m[1msdiff.c:629:13: [0m[0;1;36mnote: [0mAssuming 'diffpid' is not equal to 0[0m
  629 |         if (! diffpid)[0m
      | [0;1;32m            ^~~~~~~~~
[0m[1msdiff.c:629:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  629 |         if (! diffpid)[0m
      | [0;1;32m        ^
[0m[1msdiff.c:651:15: [0m[0;1;36mnote: [0m'diffout' is non-null[0m
  651 |         if (! diffout)[0m
      | [0;1;32m              ^~~~~~~
[0m[1msdiff.c:651:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  651 |         if (! diffout)[0m
      | [0;1;32m        ^
[0m[1msdiff.c:660:21: [0m[0;1;36mnote: [0mCalling 'interact'[0m
  660 |       interact_ok = interact (&diff_filt, &lfilt, lname, &rfilt, rname, out);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msdiff.c:1081:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1081 |   for (;;)[0m
      | [0;1;32m  ^
[0m[1msdiff.c:1086:11: [0m[0;1;36mnote: [0m'snarfed' is > 0[0m
 1086 |       if (snarfed <= 0)[0m
      | [0;1;32m          ^~~~~~~
[0m[1msdiff.c:1086:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1086 |       if (snarfed <= 0)[0m
      | [0;1;32m      ^
[0m[1msdiff.c:1091:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1091 |       if (diff_help[0] == ' ')[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1msdiff.c:1091:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1091 |       if (diff_help[0] == ' ')[0m
      | [0;1;32m      ^
[0m[1msdiff.c:1100:18: [0m[0;1;36mnote: [0mAssuming 'val' is >= 0[0m
 1100 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend != ',')[0m
      | [0;1;32m                 ^~~~~~~~
[0m[1msdiff.c:1100:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msdiff.c:1100:30: [0m[0;1;36mnote: [0m'val' is <= LIN_MAX[0m
 1100 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend != ',')[0m
      | [0;1;32m                             ^~~
[0m[1msdiff.c:1100:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1100 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend != ',')[0m
      | [0;1;32m              ^
[0m[1msdiff.c:1100:49: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1100 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend != ',')[0m
      | [0;1;32m                                                ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1msdiff.c:1100:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1100 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend != ',')[0m
      | [0;1;32m              ^
[0m[1msdiff.c:1100:58: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1100 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend != ',')[0m
      | [0;1;32m                                                         ^~~~~~~~~~~~~~
[0m[1msdiff.c:1100:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1100 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend != ',')[0m
      | [0;1;32m          ^
[0m[1msdiff.c:1104:18: [0m[0;1;36mnote: [0mAssuming 'val' is >= 0[0m
 1104 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend)[0m
      | [0;1;32m                 ^~~~~~~~
[0m[1msdiff.c:1104:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msdiff.c:1104:30: [0m[0;1;36mnote: [0m'val' is <= LIN_MAX[0m
 1104 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend)[0m
      | [0;1;32m                             ^~~
[0m[1msdiff.c:1104:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1104 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend)[0m
      | [0;1;32m              ^
[0m[1msdiff.c:1104:49: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1104 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend)[0m
      | [0;1;32m                                                ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1msdiff.c:1104:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1104 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend)[0m
      | [0;1;32m              ^
[0m[1msdiff.c:1104:58: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1104 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend)[0m
      | [0;1;32m                                                         ^~~~~~~
[0m[1msdiff.c:1104:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1104 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend)[0m
      | [0;1;32m          ^
[0m[1msdiff.c:1108:20: [0m[0;1;36mnote: [0mAssuming 'llen' is >= 'rlen'[0m
 1108 |           lenmax = MAX (llen, rlen);[0m
      | [0;1;32m                   ^
[0m[1m./system.h:109:20: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
  109 | #define MAX(a, b) ((a) >= (b) ? (a) : (b))[0m
      | [0;1;32m                   ^~~~~~~~~~
[0m[1msdiff.c:1108:20: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1108 |           lenmax = MAX (llen, rlen);[0m
      | [0;1;32m                   ^
[0m[1m./system.h:109:20: [0m[0;1;36mnote: [0mexpanded from macro 'MAX'[0m
  109 | #define MAX(a, b) ((a) >= (b) ? (a) : (b))[0m
      | [0;1;32m                   ^
[0m[1msdiff.c:1110:11: [0m[0;1;36mnote: [0mControl jumps to 'case 99:'  at line 1122[0m
 1110 |           switch (diff_help[0])[0m
      | [0;1;32m          ^
[0m[1msdiff.c:1124:21: [0m[0;1;36mnote: [0mCalling 'edit'[0m
 1124 |               if (! edit (left, lname, lline, llen,[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1125 |                           right, rname, rline, rlen,[0m
      | [0;1;32m                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1126 |                           outfile))[0m
      | [0;1;32m                          ~~~~~~~~
[0m[1msdiff.c:864:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  864 |   for (;;)[0m
      | [0;1;32m  ^
[0m[1msdiff.c:870:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  870 |       while (! gotcmd)[0m
      | [0;1;32m      ^
[0m[1msdiff.c:872:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  872 |           if (putchar ('%') != '%')[0m
      | [0;1;32m              ^
[0m[1m../lib/unlocked-io.h:127:22: [0m[0;1;36mnote: [0mexpanded from macro 'putchar'[0m
  127 | #  define putchar(x) putchar_unlocked (x)[0m
      | [0;1;32m                     ^
[0m[1msdiff.c:872:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  872 |           if (putchar ('%') != '%')[0m
      | [0;1;32m          ^
[0m[1msdiff.c:876:18: [0m[0;1;36mnote: [0mCalling 'skip_white'[0m
  876 |           cmd0 = skip_white ();[0m
      | [0;1;32m                 ^~~~~~~~~~~~~
[0m[1msdiff.c:835:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  835 |   for (;;)[0m
      | [0;1;32m  ^
[0m[1msdiff.c:837:11: [0m[0;1;36mnote: [0mTaint originated here[0m
  837 |       c = getchar ();[0m
      | [0;1;32m          ^
[0m[1m../lib/unlocked-io.h:113:21: [0m[0;1;36mnote: [0mexpanded from macro 'getchar'[0m
  113 | #  define getchar() getchar_unlocked ()[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~
[0m[1msdiff.c:837:11: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  837 |       c = getchar ();[0m
      | [0;1;32m          ^
[0m[1m../lib/unlocked-io.h:113:21: [0m[0;1;36mnote: [0mexpanded from macro 'getchar'[0m
  113 | #  define getchar() getchar_unlocked ()[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~
[0m[1msdiff.c:838:13: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  838 |       if (! isspace (c) || c == '\n')[0m
      | [0;1;32m            ^
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msdiff.c:838:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  838 |       if (! isspace (c) || c == '\n')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  839 |         break;[0m
      | [0;1;32m              
[0m[1msdiff.c:842:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |   if (ferror (stdin))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  843 |     perror_fatal (_("read failed"));[0m
      | [0;1;32m                                    
[0m[1msdiff.c:851:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  851 |   while ((c = getchar ()) != '\n' && c != EOF)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  852 |     continue;[0m
      | [0;1;32m             
[0m[1msdiff.c:853:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  853 |   if (ferror (stdin))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  854 |     perror_fatal (_("read failed"));[0m
      | [0;1;32m                                    
[0m[1msdiff.c:872:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  872 |           if (putchar ('%') != '%')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  873 |             perror_fatal (_("write failed"));[0m
      | [0;1;32m                                             
[0m[1msdiff.c:887:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  887 |               gotcmd = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  888 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msdiff.c:891:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  891 |               cmd1 = skip_white ();[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1msdiff.c:901:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  901 |                   gotcmd = true;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  902 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1msdiff.c:904:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  904 |                   gotcmd = true;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  905 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1msdiff.c:907:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  907 |                   give_help ();[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  908 |                   flush_line ();[0m
  909 |                   continue;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1msdiff.c:914:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  914 |               if (feof (stdin))[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  915 |                 {[0m
  916 |                   gotcmd = true;[0m
  917 |                   cmd0 = 'q';[0m
  918 |                   break;[0m
  919 |                 }[0m
  920 |               FALLTHROUGH;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1msdiff.c:922:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  922 |               flush_line ();[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  923 |               FALLTHROUGH;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1msdiff.c:925:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  925 |               give_help ();[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  926 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1msdiff.c:934:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  934 |           lf_skip (right, rlen);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  935 |           return true;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msdiff.c:938:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  938 |           lf_skip (left, llen);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  939 |           return true;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msdiff.c:941:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  941 |           suppress_common_lines = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  942 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:944:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  944 |           suppress_common_lines = false;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  945 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:947:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  947 |           return false;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1msdiff.c:952:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  952 |             if (tmpname)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  953 |               tmp = fopen (tmpname, "w");[0m
  954 |             else[0m
      | [0;32m            } 
[0m[1msdiff.c:956:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  956 |                 if ((fd = temporary_file ()) < 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  957 |                   perror_fatal ("mkstemp");[0m
      | [0;1;32m                                           
[0m[1msdiff.c:961:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  961 |             if (! tmp)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  962 |               perror_fatal (tmpname);[0m
      | [0;1;32m                                     
[0m[1msdiff.c:967:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  967 |                 if (llen)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  968 |                   {[0m
  969 |                     if (llen == 1)[0m
  970 |                       fprintf (tmp, "--- %s %"pI"d\n", lname, lline);[0m
  971 |                     else[0m
  972 |                       fprintf (tmp, "--- %s %"pI"d,%"pI"d\n", lname, lline,[0m
  973 |                                lline + llen - 1);[0m
  974 |                   }[0m
  975 |                 FALLTHROUGH;[0m
      | [0;1;32m                            
[0m      | [0;32m                            ;} 
[0m[1msdiff.c:969:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  969 |                     if (llen == 1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  970 |                       fprintf (tmp, "--- %s %"pI"d\n", lname, lline);[0m
  971 |                     else[0m
      | [0;32m                    } 
[0m[1msdiff.c:970:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  970 |                       fprintf (tmp, "--- %s %"pI"d\n", lname, lline);[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msdiff.c:970:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  970 |                       fprintf (tmp, "--- %s %"pI"d\n", lname, lline);[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msdiff.c:971:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  971 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  972 |                       fprintf (tmp, "--- %s %"pI"d,%"pI"d\n", lname, lline,[0m
  973 |                                lline + llen - 1);[0m
      | [0;1;32m                                                 
[0m[1msdiff.c:972:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  972 |                       fprintf (tmp, "--- %s %"pI"d,%"pI"d\n", lname, lline,[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msdiff.c:972:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  972 |                       fprintf (tmp, "--- %s %"pI"d,%"pI"d\n", lname, lline,[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msdiff.c:978:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  978 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1msdiff.c:981:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  981 |                 lf_skip (left, llen);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  982 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msdiff.c:988:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  988 |                 if (rlen)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  989 |                   {[0m
  990 |                     if (rlen == 1)[0m
  991 |                       fprintf (tmp, "+++ %s %"pI"d\n", rname, rline);[0m
  992 |                     else[0m
  993 |                       fprintf (tmp, "+++ %s %"pI"d,%"pI"d\n", rname, rline,[0m
  994 |                              rline + rlen - 1);[0m
  995 |                   }[0m
  996 |                 FALLTHROUGH;[0m
      | [0;1;32m                            
[0m      | [0;32m                            ;} 
[0m[1msdiff.c:990:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  990 |                     if (rlen == 1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  991 |                       fprintf (tmp, "+++ %s %"pI"d\n", rname, rline);[0m
  992 |                     else[0m
      | [0;32m                    } 
[0m[1msdiff.c:991:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  991 |                       fprintf (tmp, "+++ %s %"pI"d\n", rname, rline);[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msdiff.c:991:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  991 |                       fprintf (tmp, "+++ %s %"pI"d\n", rname, rline);[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msdiff.c:992:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  992 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  993 |                       fprintf (tmp, "+++ %s %"pI"d,%"pI"d\n", rname, rline,[0m
  994 |                              rline + rlen - 1);[0m
      | [0;1;32m                                               
[0m[1msdiff.c:993:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  993 |                       fprintf (tmp, "+++ %s %"pI"d,%"pI"d\n", rname, rline,[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msdiff.c:993:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  993 |                       fprintf (tmp, "+++ %s %"pI"d,%"pI"d\n", rname, rline,[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msdiff.c:999:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  999 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1msdiff.c:1002:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1002 |                 lf_skip (right, rlen);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1003 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msdiff.c:1036:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1036 |                 if (pid < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1037 |                   perror_fatal ("fork");[0m
      | [0;1;32m                                        
[0m[1msdiff.c:1039:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1039 |                 while (waitpid (pid, &wstatus, 0) < 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1040 |                   if (errno == EINTR)[0m
 1041 |                     checksigs ();[0m
 1042 |                   else[0m
 1043 |                     perror_fatal ("waitpid");[0m
      | [0;1;32m                                             
[0m[1msdiff.c:1040:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |                   if (errno == EINTR)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1041 |                     checksigs ();[0m
 1042 |                   else[0m
      | [0;32m                  } 
[0m[1msdiff.c:1042:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1042 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1043 |                     perror_fatal ("waitpid");[0m
      | [0;1;32m                                             
[0m[1msdiff.c:1066:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1066 |           give_help ();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1067 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msdiff.c:1086:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1086 |       if (snarfed <= 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1087 |         return snarfed != 0;[0m
      | [0;1;32m                            
[0m[1msdiff.c:1091:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1091 |       if (diff_help[0] == ' ')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1092 |         puts (diff_help + 1);[0m
 1093 |       else[0m
      | [0;32m      } 
[0m[1msdiff.c:1100:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1100 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend != ',')[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1101 |             fatal (diff_help);[0m
      | [0;1;32m                              
[0m[1msdiff.c:1104:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1104 |           if (! (0 <= val && val <= LIN_MAX) || errno || *numend)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1105 |             fatal (diff_help);[0m
      | [0;1;32m                              
[0m[1msdiff.c:1113:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1113 |               if (suppress_common_lines)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1114 |                 lf_skip (diff, lenmax);[0m
 1115 |               else[0m
 1116 |                 lf_copy (diff, lenmax, stdout);[0m
 1117 | [0m
 1118 |               lf_copy (left, llen, outfile);[0m
 1119 |               lf_skip (right, rlen);[0m
 1120 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msdiff.c:1113:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1113 |               if (suppress_common_lines)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1114 |                 lf_skip (diff, lenmax);[0m
 1115 |               else[0m
      | [0;32m              } 
[0m[1msdiff.c:1115:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1115 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1116 |                 lf_copy (diff, lenmax, stdout);[0m
      | [0;1;32m                                               
[0m[1msdiff.c:1123:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1123 |               lf_copy (diff, lenmax, stdout);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1124 |               if (! edit (left, lname, lline, llen,[0m
 1125 |                           right, rname, rline, rlen,[0m
 1126 |                           outfile))[0m
 1127 |                 return false;[0m
 1128 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msdiff.c:1126:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1126 |                           outfile))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1127 |                 return false;[0m
      | [0;1;32m                             
[0m[1msdiff.c:1131:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1131 |               fatal (diff_help);[0m
      | [0;1;32m              ^                
[0m      | [0;32m              {                ;} 
[0m[1msdiff.c:1164:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1164 |   strcpy (stpcpy (buf, dir), "/sdiffXXXXXX");[0m
      | [0;1;32m  ^~~~~~
[0m[1msdiff.c:1164:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1164 |   strcpy (stpcpy (buf, dir), "/sdiffXXXXXX");[0m
      | [0;1;32m  ^~~~~~
[0m[1msdiff.c:1166:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1166 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1167 |     free (buf);[0m
 1168 |   else[0m
      | [0;32m  } 
[0m[1msdiff.c:1168:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1168 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1169 |     tmpname = buf;[0m
      | [0;1;32m                  
[0m130 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[113/126][101.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpo45ghx47.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/ifdef.c
[1mifdef.c:75:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |   if (!changes)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   76 |     return;[0m
      | [0;1;32m           
[0m[1mifdef.c:81:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   81 |   if (next_line0 < first0 || next_line1 < first1)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   82 |     format_ifdef (group_format[UNCHANGED],[0m
   83 |                   next_line0, first0,[0m
   84 |                   next_line1, first1);[0m
      | [0;1;32m                                      
[0m[1mifdef.c:128:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |       if (c == '%')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m[1mifdef.c:132:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  132 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mifdef.c:136:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  136 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mifdef.c:148:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |                       if (errno)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  149 |                         goto bad_format;[0m
      | [0;1;32m                                        
[0m[1mifdef.c:155:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                       if (value[i] < 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  156 |                         goto bad_format;[0m
      | [0;1;32m                                        
[0m[1mifdef.c:159:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |                   if (*f++ != "=?"[i])[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  160 |                     goto bad_format;[0m
      | [0;1;32m                                    
[0m[1mifdef.c:162:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |               if (value[0] == value[1])[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  163 |                 thenout = out, elseout = 0;[0m
  164 |               else[0m
      | [0;32m              } 
[0m[1mifdef.c:164:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  165 |                 thenout = 0, elseout = out;[0m
      | [0;1;32m                                           
[0m[1mifdef.c:170:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |                   if (*f)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  171 |                     f++;[0m
      | [0;1;32m                        
[0m[1mifdef.c:178:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  178 |             print_ifdef_lines (out, line_format[OLD], &groups[0]);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  179 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mifdef.c:183:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  183 |             print_ifdef_lines (out, line_format[UNCHANGED], &groups[0]);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  184 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mifdef.c:188:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  188 |             print_ifdef_lines (out, line_format[NEW], &groups[1]);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  189 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mifdef.c:192:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  192 |             f = do_printf_spec (out, f - 2, 0, 0, groups);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  193 |             if (f)[0m
  194 |               continue;[0m
  195 |             /* Fall through. */[0m
  196 |           bad_format:[0m
  197 |             c = '%';[0m
  198 |             f = f1;[0m
  199 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mifdef.c:193:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |             if (f)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  194 |               continue;[0m
      | [0;1;32m                       
[0m[1mifdef.c:202:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |       if (out)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  203 |         putc (c, out);[0m
      | [0;1;32m                      
[0m[1mifdef.c:216:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  216 |     case 'E': letter = 'e'; g++; break;[0m
      | [0;1;32m              ^                       
[0m      | [0;32m              {                       ;} 
[0m[1mifdef.c:217:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  217 |     case 'F': letter = 'f'; g++; break;[0m
      | [0;1;32m              ^                       
[0m      | [0;32m              {                       ;} 
[0m[1mifdef.c:218:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  218 |     case 'L': letter = 'l'; g++; break;[0m
      | [0;1;32m              ^                       
[0m      | [0;32m              {                       ;} 
[0m[1mifdef.c:219:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  219 |     case 'M': letter = 'm'; g++; break;[0m
      | [0;1;32m              ^                       
[0m      | [0;32m              {                       ;} 
[0m[1mifdef.c:220:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  220 |     case 'N': letter = 'n'; g++; break;[0m
      | [0;1;32m              ^                       
[0m      | [0;32m              {                       ;} 
[0m[1mifdef.c:225:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  225 |       case 'e': return translate_line_number (g->file, g->from) - 1;[0m
      | [0;1;32m                ^                                                  
[0m      | [0;32m                {                                                  ;} 
[0m[1mifdef.c:226:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  226 |       case 'f': return translate_line_number (g->file, g->from);[0m
      | [0;1;32m                ^                                              
[0m      | [0;32m                {                                              ;} 
[0m[1mifdef.c:227:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  227 |       case 'l': return translate_line_number (g->file, g->upto) - 1;[0m
      | [0;1;32m                ^                                                  
[0m      | [0;32m                {                                                  ;} 
[0m[1mifdef.c:228:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  228 |       case 'm': return translate_line_number (g->file, g->upto);[0m
      | [0;1;32m                ^                                              
[0m      | [0;32m                {                                              ;} 
[0m[1mifdef.c:229:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  229 |       case 'n': return g->upto - g->from;[0m
      | [0;1;32m                ^                       
[0m      | [0;32m                {                       ;} 
[0m[1mifdef.c:230:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  230 |       default: return -1;[0m
      | [0;1;32m               ^        
[0m      | [0;32m               {        ;} 
[0m[1mifdef.c:244:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |   if (!out)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  245 |     return;[0m
      | [0;1;32m           
[0m[1mifdef.c:273:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |           if (c == '%')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m[1mifdef.c:277:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  277 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mifdef.c:280:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  280 |                 output_1_line (linbuf[from],[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  281 |                                (linbuf[from + 1][0m
  282 |                                 - (linbuf[from + 1][-1] == '\n')),[0m
  283 |                                0, 0);[0m
  284 |                 continue;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mifdef.c:287:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  287 |                 output_1_line (linbuf[from], linbuf[from + 1], 0, 0);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  288 |                 continue;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mifdef.c:291:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  291 |                 f = do_printf_spec (out, f - 2, file, from, 0);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  292 |                 if (f)[0m
  293 |                   continue;[0m
  294 |                 c = '%';[0m
  295 |                 f = f1;[0m
  296 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mifdef.c:292:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |                 if (f)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  293 |                   continue;[0m
      | [0;1;32m                           
[0m[1mifdef.c:316:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |   while ((c = *f++) == '-' || c == '\'' || c == '0')[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  317 |     continue;[0m
      | [0;1;32m             
[0m[1mifdef.c:318:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |   while (ISDIGIT (c))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  319 |     c = *f++;[0m
      | [0;1;32m             
[0m[1mifdef.c:320:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |   if (c == '.')[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  321 |     while (ISDIGIT (c = *f++))[0m
  322 |       continue;[0m
      | [0;1;32m               
[0m[1mifdef.c:321:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |     while (ISDIGIT (c = *f++))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  322 |       continue;[0m
      | [0;1;32m               
[0m[1mifdef.c:328:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  328 |       if (c1 != '\'')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  329 |         return 0;[0m
  330 |       else[0m
  331 |         {[0m
  332 |           char value;[0m
  333 |           f = scan_char_literal (f, &value);[0m
  334 |           if (!f)[0m
  335 |             return 0;[0m
  336 |           if (out)[0m
  337 |             putc (value, out);[0m
  338 |         }[0m
  339 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mifdef.c:328:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |       if (c1 != '\'')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  329 |         return 0;[0m
  330 |       else[0m
      | [0;32m      } 
[0m[1mifdef.c:334:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |           if (!f)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  335 |             return 0;[0m
      | [0;1;32m                     
[0m[1mifdef.c:336:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |           if (out)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  337 |             putc (value, out);[0m
      | [0;1;32m                              
[0m[1mifdef.c:347:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |             if (c1 != 'n')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  348 |               return 0;[0m
      | [0;1;32m                       
[0m[1mifdef.c:354:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |             if (value < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  355 |               return 0;[0m
      | [0;1;32m                       
[0m[1mifdef.c:369:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  369 |             fprintf (out, format, value);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mifdef.c:369:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  369 |             fprintf (out, format, value);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mifdef.c:373:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  373 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mifdef.c:376:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  376 |       return 0;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mifdef.c:401:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  401 |         value = 0;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  402 |         while ((c = *p++) != '\'')[0m
  403 |           {[0m
  404 |             unsigned int digit = c - '0';[0m
  405 |             if (8 <= digit)[0m
  406 |               return nullptr;[0m
  407 |             value = 8 * value + digit;[0m
  408 |           }[0m
  409 |         digits = p - lit - 2;[0m
  410 |         if (! (1 <= digits && digits <= 3))[0m
  411 |           return nullptr;[0m
  412 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mifdef.c:405:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |             if (8 <= digit)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  406 |               return nullptr;[0m
      | [0;1;32m                             
[0m[1mifdef.c:410:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |         if (! (1 <= digits && digits <= 3))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  411 |           return nullptr;[0m
      | [0;1;32m                         
[0m[1mifdef.c:415:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  415 |         value = c;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  416 |         if (*p++ != '\'')[0m
  417 |           return nullptr;[0m
  418 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mifdef.c:416:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  416 |         if (*p++ != '\'')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  417 |           return nullptr;[0m
      | [0;1;32m                         
[0m67 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[114/126][114.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp58az5tbe.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/dir.c
[1mdir.c:77:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |       if (!reading)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   78 |         return false;[0m
      | [0;1;32m                     
[0m[1mdir.c:96:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |               && (d_name[1] == 0 || (d_name[1] == '.' && d_name[2] == 0)))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m   97 |             continue;[0m
      | [0;1;32m                     
[0m[1mdir.c:99:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |           if (excluded_file_name (excluded, d_name))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  100 |             continue;[0m
      | [0;1;32m                     
[0m[1mdir.c:104:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |               if (PTRDIFF_MAX / 2 <= data_alloc)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  105 |                 xalloc_die ();[0m
      | [0;1;32m                              
[0m[1mdir.c:109:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |           memcpy (data + data_used, d_name, d_size);[0m
      | [0;1;32m          ^~~~~~
[0m[1mdir.c:109:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  109 |           memcpy (data + data_used, d_name, d_size);[0m
      | [0;1;32m          ^~~~~~
[0m[1mdir.c:123:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |       if (closedir (reading) != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  124 |         return false;[0m
      | [0;1;32m                     
[0m[1mdir.c:148:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |   if (ignore_file_name_case)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  149 |     r = strcasecoll (name1, name2);[0m
  150 |   else[0m
      | [0;32m  } 
[0m[1mdir.c:150:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  151 |     r = strcoll (name1, name2);[0m
      | [0;1;32m                               
[0m[1mdir.c:169:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |       if (diff || ignore_file_name_case)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  170 |         return diff;[0m
      | [0;1;32m                    
[0m[1mdir.c:188:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |       if (diff)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  189 |         return diff;[0m
      | [0;1;32m                    
[0m[1mdir.c:229:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |   for (i = 0; i < 2; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  230 |     if (! dir_read (&cmp->file[i], &dirdata[i]))[0m
  231 |       {[0m
  232 |         perror_with_name (cmp->file[i].name);[0m
  233 |         val = EXIT_TROUBLE;[0m
  234 |       }[0m
      | [0;1;32m       
[0m[1mdir.c:244:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |       if (setjmp (failed_locale_specific_sorting))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  245 |         locale_specific_sorting = false;[0m
      | [0;1;32m                                        
[0m[1mdir.c:248:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |       for (i = 0; i < 2; i++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  249 |         qsort (names[i], dirdata[i].nnames, sizeof *dirdata[i].names,[0m
  250 |                compare_names_for_qsort);[0m
      | [0;1;32m                                        
[0m[1mdir.c:257:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |           while (*names[0] && compare_names (*names[0], starting_file) < 0)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  258 |             names[0]++;[0m
      | [0;1;32m                       
[0m[1mdir.c:259:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  259 |           while (*names[1] && compare_names (*names[1], starting_file) < 0)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  260 |             names[1]++;[0m
      | [0;1;32m                       
[0m[1mdir.c:296:31: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  296 |                               memmove (lesser + 1, lesser,[0m
      | [0;1;32m                              ^~~~~~~
[0m[1mdir.c:296:31: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  296 |                               memmove (lesser + 1, lesser,[0m
      | [0;1;32m                              ^~~~~~~
[0m[1mdir.c:309:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |           if (val < v1)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  310 |             val = v1;[0m
      | [0;1;32m                     
[0m[1mdir.c:329:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |   while ((p = p->parent))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  330 |     if (0 < same_file (&p->file[i].stat, &cmp->file[i].stat))[0m
  331 |       return true;[0m
      | [0;1;32m                  
[0m[1mdir.c:330:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |     if (0 < same_file (&p->file[i].stat, &cmp->file[i].stat))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  331 |       return true;[0m
      | [0;1;32m                  
[0m[1mdir.c:357:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |           if (setjmp (failed_locale_specific_sorting))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  358 |             match = file; /* longjmp may mess up MATCH.  */[0m
  359 |           else[0m
      | [0;32m          } 
[0m[1mdir.c:361:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |               for (char const **p = dirdata.names; *p; p++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  362 |                 if (compare_names (*p, file) == 0)[0m
  363 |                   {[0m
  364 |                     if (file_name_cmp (*p, file) == 0)[0m
  365 |                       {[0m
  366 |                         match = *p;[0m
  367 |                         break;[0m
  368 |                       }[0m
  369 |                     if (match == file)[0m
  370 |                       match = *p;[0m
  371 |                   }[0m
      | [0;1;32m                   
[0m[1mdir.c:369:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |                     if (match == file)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  370 |                       match = *p;[0m
      | [0;1;32m                                 
[0m36 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[115/126][130.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp4ub5u2hj.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mktime.c
[1mmktime.c:282:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |   if (errno != EOVERFLOW)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  283 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmktime.c:295:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |       if (mid == ok || mid == bad)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  296 |         break;[0m
      | [0;1;32m              
[0m[1mmktime.c:297:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |       if (convert_time (convert, mid, tp))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  298 |         ok = mid, oktm = *tp;[0m
  299 |       else if (errno != EOVERFLOW)[0m
      | [0;32m      } 
[0m[1mmktime.c:299:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |       else if (errno != EOVERFLOW)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  300 |         return NULL;[0m
  301 |       else[0m
      | [0;32m      } 
[0m[1mmktime.c:301:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  302 |         bad = mid;[0m
      | [0;1;32m                  
[0m[1mmktime.c:305:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |   if (oktm.tm_sec < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  306 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmktime.c:374:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |       if (sec < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  375 |         sec = 0;[0m
      | [0;1;32m                
[0m[1mmktime.c:376:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |       if (59 < sec)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  377 |         sec = 59;[0m
      | [0;1;32m                 
[0m[1mmktime.c:393:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |       if (! ranged_convert (convert, &t, &tm))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  394 |         return -1;[0m
      | [0;1;32m                  
[0m[1mmktime.c:396:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |       if (dt == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  397 |         break;[0m
      | [0;1;32m              
[0m[1mmktime.c:403:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |                   : (isdst != 0) != (tm.tm_isdst != 0))))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  404 |         /* We can't possibly find a match, as we are oscillating[0m
  405 |            between two values.  The requested time probably falls[0m
  406 |            within a spring-forward gap of size DT.  Follow the common[0m
  407 |            practice in this case, which is to return a time that is DT[0m
  408 |            away from the requested time, preferring a time whose[0m
  409 |            tm_isdst differs from the requested value.  (If no tm_isdst[0m
  410 |            was requested and only one of the two values has a nonzero[0m
  411 |            tm_isdst, prefer that value.)  In practice, this is more[0m
  412 |            useful than returning -1.  */[0m
  413 |         goto offset_found;[0m
      | [0;1;32m                          
[0m[1mmktime.c:465:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |       for (delta = stride; delta < delta_bound; delta += stride)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m[1mmktime.c:472:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |                 if (! ranged_convert (convert, &ot, &otm))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  473 |                   return -1;[0m
      | [0;1;32m                            
[0m[1mmktime.c:487:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |                         if (errno != EOVERFLOW)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  488 |                           return -1;[0m
      | [0;1;32m                                    
[0m[1mmktime.c:496:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |       if (mktime_min <= t && t <= mktime_max && convert_time (convert, t, &tm))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  497 |         goto offset_found;[0m
      | [0;1;32m                          
[0m[1mmktime.c:523:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |       if (! convert_time (convert, t, &tm))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  524 |         return -1;[0m
      | [0;1;32m                  
[0m18 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[116/126][131.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp9p8d03iq.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/hash.c
[1mhash.c:172:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  173 |             bucket_length++;[0m
      | [0;1;32m                            
[0m[1mhash.c:175:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |           if (bucket_length > max_bucket_length)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  176 |             max_bucket_length = bucket_length;[0m
      | [0;1;32m                                              
[0m[1mhash.c:201:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  202 |             n_entries++;[0m
      | [0;1;32m                        
[0m[1mhash.c:206:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |   if (n_buckets_used == table->n_buckets_used && n_entries == table->n_entries)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  207 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:220:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:220:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:235:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (! (n < table->n_buckets))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  236 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:246:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  247 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:249:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |   for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:250:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:263:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (table->n_entries == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  264 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:266:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |   for (bucket = table->bucket; ; bucket++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  267 |     if (! (bucket < table->bucket_limit))[0m
  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:267:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |     if (! (bucket < table->bucket_limit))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
      | [0;32m    } 
[0m[1mhash.c:269:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |     else if (bucket->data)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:283:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |       if (cursor->data == entry && cursor->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  284 |         return cursor->next->data;[0m
      | [0;1;32m                                  
[0m[1mhash.c:290:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |   while (++bucket < table->bucket_limit)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  291 |     if (bucket->data)[0m
  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:291:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |     if (bucket->data)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:312:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |               if (counter >= buffer_size)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  313 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:336:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |               if (! processor (cursor->data, processor_data))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  337 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:385:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |   for (; (ch = *string); string++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  386 |     value = (value * 31 + ch) % n_buckets;[0m
      | [0;1;32m                                          
[0m[1mhash.c:418:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   if (candidate < 10)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  419 |     candidate = 10;[0m
      | [0;1;32m                   
[0m[1mhash.c:424:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |   while (SIZE_MAX != candidate && !is_prime (candidate))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  425 |     candidate += 2;[0m
      | [0;1;32m                   
[0m[1mhash.c:468:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if (tuning == &default_tuning)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  469 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:484:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |       && tuning->shrink_threshold + epsilon < tuning->growth_threshold)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  485 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:501:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if ((float) SIZE_MAX <= new_candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  502 |         return 0;[0m
      | [0;1;32m                 
[0m[1mhash.c:506:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (xalloc_oversized (candidate, sizeof (struct hash_entry *)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  507 |     return 0;[0m
      | [0;1;32m             
[0m[1mhash.c:518:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |   if (hasher == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  519 |     hasher = raw_hasher;[0m
      | [0;1;32m                        
[0m[1mhash.c:520:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (comparator == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  521 |     comparator = raw_comparator;[0m
      | [0;1;32m                                
[0m[1mhash.c:524:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |   if (table == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  525 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:527:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |   if (!tuning)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  528 |     tuning = &default_tuning;[0m
      | [0;1;32m                             
[0m[1mhash.c:541:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |   if (!table->n_buckets)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  542 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:545:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (table->bucket == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  546 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:581:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |               if (table->data_freer)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  582 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:593:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |           if (table->data_freer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  594 |             table->data_freer (bucket->data);[0m
      | [0;1;32m                                             
[0m[1mhash.c:618:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |               for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  619 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:708:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  709 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:774:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   for (bucket = src->bucket; bucket < src->bucket_limit; bucket++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m[1mhash.c:814:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |         if (safe)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  815 |           continue;[0m
      | [0;1;32m                   
[0m[1mhash.c:824:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |             if (new_entry == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  825 |               return false;[0m
      | [0;1;32m                           
[0m[1mhash.c:850:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |   if (!new_size)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  851 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:852:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (new_size == table->n_buckets)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  853 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:856:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (new_table->bucket == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  857 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:915:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  915 |          && transfer_entries (table, new_table, false)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  916 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:932:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  932 |   if (! entry)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  933 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:938:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  938 |       if (matched_ent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  939 |         *matched_ent = data;[0m
      | [0;1;32m                            
[0m[1mhash.c:964:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |           if ((float) SIZE_MAX <= candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  965 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:968:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |           if (!hash_rehash (table, candidate))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  969 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:972:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |           if (hash_find_entry (table, entry, &bucket, false) != NULL)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  973 |             abort ();[0m
      | [0;1;32m                     
[0m[1mhash.c:983:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |       if (new_entry == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  984 |         return -1;[0m
      | [0;1;32m                  
[0m[1mhash.c:1021:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |   if (!data)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1022 |     return NULL;[0m
      | [0;1;32m                
[0m54 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[117/126][132.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp_n5oi915.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/diff.c
[1mdiff.c:257:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |       if (INT_ADD_WRAPV (optsize, size, &size))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  258 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mdiff.c:320:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  320 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdiff.c:338:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  338 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdiff.c:341:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  341 |           text = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  342 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:345:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  345 |           if (ignore_white_space < IGNORE_SPACE_CHANGE)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  346 |             ignore_white_space = IGNORE_SPACE_CHANGE;[0m
  347 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:345:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |           if (ignore_white_space < IGNORE_SPACE_CHANGE)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  346 |             ignore_white_space = IGNORE_SPACE_CHANGE;[0m
      | [0;1;32m                                                     
[0m[1mdiff.c:350:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  350 |           if (ignore_white_space < IGNORE_SPACE_CHANGE)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  351 |             ignore_white_space |= IGNORE_TRAILING_SPACE;[0m
  352 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:350:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |           if (ignore_white_space < IGNORE_SPACE_CHANGE)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  351 |             ignore_white_space |= IGNORE_TRAILING_SPACE;[0m
      | [0;1;32m                                                        
[0m[1mdiff.c:355:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  355 |           ignore_blank_lines = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  356 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:364:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |                 if (*numend || numval < 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  365 |                   try_help ("invalid context length '%s'", optarg);[0m
      | [0;1;32m                                                                   
[0m[1mdiff.c:366:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |                 if (CONTEXT_MAX < numval)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  367 |                   numval = CONTEXT_MAX;[0m
      | [0;1;32m                                       
[0m[1mdiff.c:369:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  370 |               numval = 3;[0m
      | [0;1;32m                         
[0m[1mdiff.c:373:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |             if (context < numval)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  374 |               context = numval;[0m
      | [0;1;32m                               
[0m[1mdiff.c:377:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  377 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdiff.c:380:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  380 |           specify_style (OUTPUT_CONTEXT);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  381 |           if (context < 3)[0m
  382 |             context = 3;[0m
  383 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:381:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |           if (context < 3)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  382 |             context = 3;[0m
      | [0;1;32m                        
[0m[1mdiff.c:386:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  386 |           minimal = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  387 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:390:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  390 |           specify_style (OUTPUT_IFDEF);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mdiff.c:420:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |                                   &alloc))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  421 |               xalloc_die ();[0m
      | [0;1;32m                            
[0m[1mdiff.c:432:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  432 |                     *b++ = ch;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  433 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mdiff.c:436:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  436 |                     b = stpcpy (b, optarg);[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  437 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mdiff.c:440:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  440 |                     *b++ = ch;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  441 |                     specify_value (&group_format[changes++], base, "-D");[0m
  442 |                     base = b;[0m
  443 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mdiff.c:450:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  450 |           specify_style (OUTPUT_ED);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  451 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:454:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  454 |           if (ignore_white_space < IGNORE_SPACE_CHANGE)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  455 |             ignore_white_space |= IGNORE_TAB_EXPANSION;[0m
  456 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:454:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |           if (ignore_white_space < IGNORE_SPACE_CHANGE)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  455 |             ignore_white_space |= IGNORE_TAB_EXPANSION;[0m
      | [0;1;32m                                                       
[0m[1mdiff.c:459:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  459 |           specify_style (OUTPUT_FORWARD_ED);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  460 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:463:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  463 |           add_regexp (&function_regexp_list, optarg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  464 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:471:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  471 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdiff.c:474:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  474 |           speed_large_files = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  475 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:478:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  478 |           ignore_case = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  479 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:482:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  482 |           add_regexp (&ignore_regexp_list, optarg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  483 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:486:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |           if (!pr_program[0])[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  487 |             try_help ("pagination not supported on this host", nullptr);[0m
  488 |           paginate = true;[0m
  489 | #ifdef SIGCHLD[0m
  490 |           /* Pagination requires forking and waiting, and[0m
  491 |              System V fork+wait does not work if SIGCHLD is ignored.  */[0m
  492 |           signal (SIGCHLD, SIG_DFL);[0m
  493 | #endif[0m
  494 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:486:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |           if (!pr_program[0])[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  487 |             try_help ("pagination not supported on this host", nullptr);[0m
      | [0;1;32m                                                                        
[0m[1mdiff.c:497:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  497 |           if (!file_label[0])[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  498 |             file_label[0] = optarg;[0m
  499 |           else if (!file_label[1])[0m
  500 |             file_label[1] = optarg;[0m
  501 |           else[0m
  502 |             fatal ("too many file label options");[0m
  503 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:497:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  497 |           if (!file_label[0])[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  498 |             file_label[0] = optarg;[0m
  499 |           else if (!file_label[1])[0m
      | [0;32m          } 
[0m[1mdiff.c:499:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |           else if (!file_label[1])[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  500 |             file_label[1] = optarg;[0m
  501 |           else[0m
      | [0;32m          } 
[0m[1mdiff.c:501:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  502 |             fatal ("too many file label options");[0m
      | [0;1;32m                                                  
[0m[1mdiff.c:506:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  506 |           specify_style (OUTPUT_RCS);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  507 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:510:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  510 |           new_file = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  511 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:514:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  514 |           show_c_function = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  515 |           add_regexp (&function_regexp_list, "^[[:alpha:]$_]");[0m
  516 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:519:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  519 |           unidirectional_new_file = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  520 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:523:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  523 |           brief = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  524 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:527:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  527 |           recursive = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  528 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:531:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  531 |           report_identical_files = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  532 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:535:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  535 |           specify_value (&starting_file, optarg, "-S");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  536 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:539:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  539 |           expand_tabs = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  540 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:543:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  543 |           initial_tab = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  544 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:547:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  547 |           specify_style (OUTPUT_UNIFIED);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  548 |           if (context < 3)[0m
  549 |             context = 3;[0m
  550 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:548:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |           if (context < 3)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  549 |             context = 3;[0m
      | [0;1;32m                        
[0m[1mdiff.c:553:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  553 |           version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, Version,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  554 |                        AUTHORS, nullptr);[0m
  555 |           check_stdout ();[0m
  556 |           return EXIT_SUCCESS;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mdiff.c:559:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  559 |           ignore_white_space = IGNORE_ALL_SPACE;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  560 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:563:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  563 |           add_exclude (excluded, optarg, exclude_options ());[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  564 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:567:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  567 |           if (add_exclude_file (add_exclude, excluded, optarg,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  568 |                                 exclude_options (), '\n'))[0m
  569 |             pfatal_with_name (optarg);[0m
  570 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:568:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  568 |                                 exclude_options (), '\n'))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  569 |             pfatal_with_name (optarg);[0m
      | [0;1;32m                                      
[0m[1mdiff.c:573:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  573 |           specify_style (OUTPUT_SDIFF);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  574 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:577:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  577 |           numval = strtoimax (optarg, &numend, 10);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  578 |           if (! (0 < numval && numval <= SIZE_MAX) || *numend)[0m
  579 |             try_help ("invalid width '%s'", optarg);[0m
  580 |           if (width != numval)[0m
  581 |             {[0m
  582 |               if (width)[0m
  583 |                 fatal ("conflicting width options");[0m
  584 |               width = numval;[0m
  585 |             }[0m
  586 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:578:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  578 |           if (! (0 < numval && numval <= SIZE_MAX) || *numend)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  579 |             try_help ("invalid width '%s'", optarg);[0m
      | [0;1;32m                                                    
[0m[1mdiff.c:582:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |               if (width)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  583 |                 fatal ("conflicting width options");[0m
      | [0;1;32m                                                    
[0m[1mdiff.c:594:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  594 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdiff.c:597:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  597 |           specify_value (&from_file, optarg, "--from-file");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  598 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:601:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  601 |           usage ();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  602 |           check_stdout ();[0m
  603 |           return EXIT_SUCCESS;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mdiff.c:606:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  606 |           numval = strtoimax (optarg, &numend, 10);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  607 |           if (*numend || numval < 0)[0m
  608 |             try_help ("invalid horizon length '%s'", optarg);[0m
  609 |           horizon_lines = MAX (horizon_lines, MIN (numval, LIN_MAX));[0m
  610 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:607:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |           if (*numend || numval < 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  608 |             try_help ("invalid horizon length '%s'", optarg);[0m
      | [0;1;32m                                                             
[0m[1mdiff.c:613:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  613 |           ignore_file_name_case = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  614 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:619:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  619 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdiff.c:622:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  622 |           left_column = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  623 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:626:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  626 |           specify_style (OUTPUT_IFDEF);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  627 |           for (i = 0; i < sizeof line_format / sizeof line_format[0]; i++)[0m
  628 |             specify_value (&line_format[i], optarg, "--line-format");[0m
  629 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:627:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |           for (i = 0; i < sizeof line_format / sizeof line_format[0]; i++)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  628 |             specify_value (&line_format[i], optarg, "--line-format");[0m
      | [0;1;32m                                                                     
[0m[1mdiff.c:632:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  632 |           no_dereference_symlinks = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  633 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:636:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  636 |           ignore_file_name_case = false;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  637 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:640:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  640 |           specify_style (OUTPUT_NORMAL);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  641 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:644:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  644 |           specify_style (OUTPUT_SDIFF);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  645 |           sdiff_merge_assist = true;[0m
  646 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:649:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  649 |           strip_trailing_cr = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  650 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:653:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  653 |           suppress_blank_empty = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  654 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:657:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  657 |           suppress_common_lines = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  658 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:661:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  661 |           numval = strtoimax (optarg, &numend, 10);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  662 |           if (! (0 < numval && numval <= SIZE_MAX - GUTTER_WIDTH_MINIMUM)[0m
  663 |               || *numend)[0m
  664 |             try_help ("invalid tabsize '%s'", optarg);[0m
  665 |           if (tabsize != numval)[0m
  666 |             {[0m
  667 |               if (tabsize)[0m
  668 |                 fatal ("conflicting tabsize options");[0m
  669 |               tabsize = numval;[0m
  670 |             }[0m
  671 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:663:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  663 |               || *numend)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  664 |             try_help ("invalid tabsize '%s'", optarg);[0m
      | [0;1;32m                                                      
[0m[1mdiff.c:667:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  667 |               if (tabsize)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  668 |                 fatal ("conflicting tabsize options");[0m
      | [0;1;32m                                                      
[0m[1mdiff.c:674:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  674 |           specify_value (&to_file, optarg, "--to-file");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  675 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:681:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  681 |           c -= UNCHANGED_LINE_FORMAT_OPTION;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  682 |           specify_value (&line_format[c], optarg, line_format_option[c]);[0m
  683 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:690:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  690 |           c -= UNCHANGED_GROUP_FORMAT_OPTION;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  691 |           specify_value (&group_format[c], optarg, group_format_option[c]);[0m
  692 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:695:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  695 |           specify_colors_style (optarg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  696 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:699:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  699 |           set_color_palette (optarg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  700 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:703:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  703 |           no_directory = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  704 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:707:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  707 |           presume_output_tty = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  708 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff.c:711:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  711 |           try_help (nullptr, nullptr);[0m
      | [0;1;32m          ^                          
[0m      | [0;32m          {                          ;} 
[0m[1mdiff.c:719:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  719 |       if (t && STREQ (t, "dumb"))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  720 |         colors_style = NEVER;[0m
      | [0;1;32m                             
[0m[1mdiff.c:728:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  728 |           if (ocontext < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  729 |             context = 3;[0m
      | [0;1;32m                        
[0m[1mdiff.c:731:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  732 |         specify_style (OUTPUT_NORMAL);[0m
      | [0;1;32m                                      
[0m[1mdiff.c:757:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  757 |           || (ocontext < context && ! explicit_context)))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  758 |     context = ocontext;[0m
      | [0;1;32m                       
[0m[1mdiff.c:760:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  760 |   if (! tabsize)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  761 |     tabsize = 8;[0m
      | [0;1;32m                
[0m[1mdiff.c:762:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |   if (! width)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  763 |     width = 130;[0m
      | [0;1;32m                
[0m[1mdiff.c:789:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |   if (horizon_lines < context)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  790 |     horizon_lines = context;[0m
      | [0;1;32m                            
[0m[1mdiff.c:797:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |       for (i = 0; i < sizeof line_format / sizeof line_format[0]; i++)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  798 |         if (!line_format[i])[0m
  799 |           line_format[i] = "%l\n";[0m
      | [0;1;32m                                  
[0m[1mdiff.c:798:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |         if (!line_format[i])[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  799 |           line_format[i] = "%l\n";[0m
      | [0;1;32m                                  
[0m[1mdiff.c:800:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |       if (!group_format[OLD])[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  801 |         group_format[OLD][0m
  802 |           = group_format[CHANGED] ? group_format[CHANGED] : "%<";[0m
      | [0;1;32m                                                                 
[0m[1mdiff.c:803:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  803 |       if (!group_format[NEW])[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  804 |         group_format[NEW][0m
  805 |           = group_format[CHANGED] ? group_format[CHANGED] : "%>";[0m
      | [0;1;32m                                                                 
[0m[1mdiff.c:806:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  806 |       if (!group_format[UNCHANGED])[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  807 |         group_format[UNCHANGED] = "%=";[0m
      | [0;1;32m                                       
[0m[1mdiff.c:813:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  813 |           strcpy (stpcpy (p, group_format[OLD]), group_format[NEW]);[0m
      | [0;1;32m          ^~~~~~
[0m[1mdiff.c:813:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  813 |           strcpy (stpcpy (p, group_format[OLD]), group_format[NEW]);[0m
      | [0;1;32m          ^~~~~~
[0m[1mdiff.c:833:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |       if (to_file)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  834 |         fatal ("--from-file and --to-file both specified");[0m
  835 |       else[0m
      | [0;32m      } 
[0m[1mdiff.c:835:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  835 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  836 |         for (; optind < argc; optind++)[0m
  837 |           {[0m
  838 |             int status = compare_files (nullptr, from_file, argv[optind]);[0m
  839 |             if (exit_status < status)[0m
  840 |               exit_status = status;[0m
  841 |           }[0m
      | [0;1;32m           
[0m[1mdiff.c:839:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  839 |             if (exit_status < status)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  840 |               exit_status = status;[0m
      | [0;1;32m                                   
[0m[1mdiff.c:845:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  845 |       if (to_file)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  846 |         for (; optind < argc; optind++)[0m
  847 |           {[0m
  848 |             int status = compare_files (nullptr, argv[optind], to_file);[0m
  849 |             if (exit_status < status)[0m
  850 |               exit_status = status;[0m
  851 |           }[0m
  852 |       else[0m
      | [0;32m      } 
[0m[1mdiff.c:849:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  849 |             if (exit_status < status)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  850 |               exit_status = status;[0m
      | [0;1;32m                                   
[0m[1mdiff.c:856:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |               if (argc - optind < 2)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  857 |                 try_help ("missing operand after '%s'", argv[argc - 1]);[0m
  858 |               else[0m
      | [0;32m              } 
[0m[1mdiff.c:858:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  858 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  859 |                 try_help ("extra operand '%s'", argv[optind + 2]);[0m
      | [0;1;32m                                                                  
[0m[1mdiff.c:882:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  882 |   if (m != 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  883 |     error (EXIT_TROUBLE, 0, "%s: %s", pattern, m);[0m
  884 |   else[0m
      | [0;32m  } 
[0m[1mdiff.c:894:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |           if (!size)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  895 |             size = 1;[0m
      | [0;1;32m                     
[0m[1mdiff.c:897:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  897 |           do size *= 2;[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  898 |           while (size <= newlen);[0m
      | [0;32m          } 
[0m[1mdiff.c:908:7: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  908 |       memcpy (regexps + len, pattern, patlen + 1);[0m
      | [0;1;32m      ^
[0m[1mdiff.c:315:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  315 |   while ((c = getopt_long (argc, argv, shortopts, longopts, nullptr)) != -1)[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff.c:315:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  315 |   while ((c = getopt_long (argc, argv, shortopts, longopts, nullptr)) != -1)[0m
      | [0;1;32m  ^
[0m[1mdiff.c:317:7: [0m[0;1;36mnote: [0mControl jumps to 'case 73:'  at line 481[0m
  317 |       switch (c)[0m
      | [0;1;32m      ^
[0m[1mdiff.c:482:11: [0m[0;1;36mnote: [0mCalling 'add_regexp'[0m
  482 |           add_regexp (&ignore_regexp_list, optarg);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff.c:880:19: [0m[0;1;36mnote: [0mValue assigned to 'ignore_regexp_list.regexps'[0m
  880 |   char const *m = re_compile_pattern (pattern, patlen, reglist->buf);[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff.c:882:7: [0m[0;1;36mnote: [0mAssuming 'm' is equal to null[0m
  882 |   if (m != 0)[0m
      | [0;1;32m      ^~~~~~
[0m[1mdiff.c:882:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  882 |   if (m != 0)[0m
      | [0;1;32m  ^
[0m[1mdiff.c:886:7: [0m[0;1;36mnote: [0m'regexps' initialized here[0m
  886 |       char *regexps = reglist->regexps;[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1mdiff.c:888:59: [0m[0;1;36mnote: [0mAssuming 'regexps' is equal to null[0m
  888 |       bool multiple_regexps = reglist->multiple_regexps = regexps != 0;[0m
      | [0;1;32m                                                          ^~~~~~~~~~~~
[0m[1mdiff.c:892:11: [0m[0;1;36mnote: [0mAssuming 'size' is > 'newlen'[0m
  892 |       if (size <= newlen)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1mdiff.c:892:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  892 |       if (size <= newlen)[0m
      | [0;1;32m      ^
[0m[1mdiff.c:903:11: [0m[0;1;36mnote: [0m'multiple_regexps' is false[0m
  903 |       if (multiple_regexps)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1mdiff.c:903:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  903 |       if (multiple_regexps)[0m
      | [0;1;32m      ^
[0m[1mdiff.c:908:7: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
  908 |       memcpy (regexps + len, pattern, patlen + 1);[0m
      | [0;1;32m      ^       ~~~~~~~~~~~~~
[0m[1mdiff.c:908:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  908 |       memcpy (regexps + len, pattern, patlen + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdiff.c:908:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  908 |       memcpy (regexps + len, pattern, patlen + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mdiff.c:928:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  928 |           if (m)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  929 |             die (EXIT_TROUBLE, 0, "%s: %s", reglist->regexps, m);[0m
      | [0;1;32m                                                                 
[0m[1mdiff.c:937:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  937 |   if (reason_msgid)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  938 |     error (0, 0, _(reason_msgid), operand);[0m
      | [0;1;32m                                           
[0m[1mdiff.c:946:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |   if (ferror (stdout))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  947 |     fatal ("write failed");[0m
  948 |   else if (fclose (stdout) != 0)[0m
      | [0;32m  } 
[0m[1mdiff.c:948:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  948 |   else if (fclose (stdout) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  949 |     pfatal_with_name (_("standard output"));[0m
      | [0;1;32m                                            
[0m[1mdiff.c:1065:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1065 |       if (!**p)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1066 |         putchar ('\n');[0m
 1067 |       else[0m
      | [0;32m      } 
[0m[1mdiff.c:1106:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1106 |       if (output_style != OUTPUT_UNSPECIFIED)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1107 |         try_help ("conflicting output style options", nullptr);[0m
      | [0;1;32m                                                               
[0m[1mdiff.c:1116:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1116 |   if (value == nullptr || STREQ (value, "auto"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1117 |     colors_style = AUTO;[0m
 1118 |   else if (STREQ (value, "always"))[0m
      | [0;32m  } 
[0m[1mdiff.c:1118:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1118 |   else if (STREQ (value, "always"))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1119 |     colors_style = ALWAYS;[0m
 1120 |   else if (STREQ (value, "never"))[0m
      | [0;32m  } 
[0m[1mdiff.c:1120:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1120 |   else if (STREQ (value, "never"))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1121 |     colors_style = NEVER;[0m
 1122 |   else[0m
      | [0;32m  } 
[0m[1mdiff.c:1122:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1122 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1123 |     try_help ("invalid color '%s'", value);[0m
      | [0;1;32m                                           
[0m[1mdiff.c:1204:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1204 |   memset (cmp.file, 0, sizeof cmp.file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdiff.c:1204:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1204 |   memset (cmp.file, 0, sizeof cmp.file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdiff.c:1212:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1212 |   if (!name0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1213 |     name0 = name1;[0m
      | [0;1;32m                  
[0m[1mdiff.c:1214:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1214 |   if (!name1)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1215 |     name1 = name0;[0m
      | [0;1;32m                  
[0m[1mdiff.c:1246:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1246 |               if (binary && ! isatty (STDIN_FILENO))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1247 |                 set_binary_mode (STDIN_FILENO, O_BINARY);[0m
      | [0;1;32m                                                         
[0m[1mdiff.c:1248:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1248 |               if (fstat (STDIN_FILENO, &cmp.file[f].stat) != 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1249 |                 cmp.file[f].desc = errno_encode (errno);[0m
 1250 |               else[0m
      | [0;32m              } 
[0m[1mdiff.c:1255:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1255 |                       if (pos < 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1256 |                         cmp.file[f].desc = errno_encode (errno);[0m
 1257 |                       else[0m
      | [0;32m                      } 
[0m[1mdiff.c:1257:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1257 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1258 |                         cmp.file[f].stat.st_size =[0m
 1259 |                           MAX (0, cmp.file[f].stat.st_size - pos);[0m
      | [0;1;32m                                                                  
[0m[1mdiff.c:1270:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1270 |                    != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1271 |             cmp.file[f].desc = errno_encode (errno);[0m
      | [0;1;32m                                                    
[0m[1mdiff.c:1280:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1280 |   for (f = 0; f < 2; f++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1281 |     if ((new_file || (f == 0 && unidirectional_new_file))[0m
 1282 |         && (cmp.file[f].desc == UNOPENED[0m
 1283 |             ? (S_ISREG (cmp.file[f].stat.st_mode)[0m
 1284 |                && ! (cmp.file[f].stat.st_mode & (S_IRWXU | S_IRWXG | S_IRWXO))[0m
 1285 |                && cmp.file[f].stat.st_size == 0)[0m
 1286 |             : ((cmp.file[f].desc == errno_encode (ENOENT)[0m
 1287 |                 || cmp.file[f].desc == errno_encode (EBADF))[0m
 1288 |                && ! parent[0m
 1289 |                && (cmp.file[1 - f].desc == UNOPENED[0m
 1290 |                    || cmp.file[1 - f].desc == STDIN_FILENO))))[0m
 1291 |       cmp.file[f].desc = NONEXISTENT;[0m
      | [0;1;32m                                     
[0m[1mdiff.c:1290:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1290 |                    || cmp.file[1 - f].desc == STDIN_FILENO))))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1291 |       cmp.file[f].desc = NONEXISTENT;[0m
      | [0;1;32m                                     
[0m[1mdiff.c:1293:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |   for (f = 0; f < 2; f++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1294 |     if (cmp.file[f].desc == NONEXISTENT)[0m
 1295 |       {[0m
 1296 |         memset (&cmp.file[f].stat, 0, sizeof cmp.file[f].stat);[0m
 1297 |         cmp.file[f].stat.st_mode = cmp.file[1 - f].stat.st_mode;[0m
 1298 |       }[0m
      | [0;1;32m       
[0m[1mdiff.c:1296:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1296 |         memset (&cmp.file[f].stat, 0, sizeof cmp.file[f].stat);[0m
      | [0;1;32m        ^~~~~~
[0m[1mdiff.c:1296:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1296 |         memset (&cmp.file[f].stat, 0, sizeof cmp.file[f].stat);[0m
      | [0;1;32m        ^~~~~~
[0m[1mdiff.c:1324:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |       if (STREQ (fnm, "-"))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1325 |         fatal ("cannot compare '-' to a directory");[0m
      | [0;1;32m                                                    
[0m[1mdiff.c:1359:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1359 |       if (output_style == OUTPUT_IFDEF)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1360 |         fatal ("-D option not supported with directories");[0m
      | [0;1;32m                                                           
[0m[1mdiff.c:1372:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1372 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1373 |         status = diff_dirs (&cmp, compare_files);[0m
      | [0;1;32m                                                 
[0m[1mdiff.c:1390:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1390 |                       && cmp.file[0].desc == NONEXISTENT)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1391 |             status = diff_dirs (&cmp, compare_files);[0m
 1392 |           else[0m
      | [0;32m          } 
[0m[1mdiff.c:1453:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1453 |           for (f = 0; f < 2; f++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1454 |             free (link_value[f]);[0m
      | [0;1;32m                                 
[0m[1mdiff.c:1491:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1491 |       if (cmp.file[0].desc == UNOPENED)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1492 |         if ((cmp.file[0].desc = open (cmp.file[0].name, oflags, 0)) < 0)[0m
 1493 |           {[0m
 1494 |             perror_with_name (cmp.file[0].name);[0m
 1495 |             status = EXIT_TROUBLE;[0m
 1496 |           }[0m
      | [0;1;32m           
[0m[1mdiff.c:1499:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1499 |           if (same_files)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1500 |             cmp.file[1].desc = cmp.file[0].desc;[0m
 1501 |           else if ((cmp.file[1].desc = open (cmp.file[1].name, oflags, 0)) < 0)[0m
      | [0;32m          } 
[0m[1mdiff.c:1510:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1510 |       if (status == EXIT_SUCCESS)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1511 |         status = diff_2_files (&cmp);[0m
      | [0;1;32m                                     
[0m[1mdiff.c:1533:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1533 |       if (report_identical_files && !DIR_P (0))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1534 |         message ("Files %s and %s are identical\n",[0m
 1535 |                  file_label[0] ? file_label[0] : cmp.file[0].name,[0m
 1536 |                  file_label[1] ? file_label[1] : cmp.file[1].name);[0m
      | [0;1;32m                                                                   
[0m[1mdiff.c:1542:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1542 |       if (fflush (stdout) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1543 |         pfatal_with_name (_("standard output"));[0m
      | [0;1;32m                                                
[0m157 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[118/126][145.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp9hc7smnr.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/analyze.c
[1manalyze.c:75:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |   for (i = 0; i < filevec[0].buffered_lines; ++i)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   76 |     ++equiv_count[0][filevec[0].equivs[i]];[0m
      | [0;1;32m                                           
[0m[1manalyze.c:77:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |   for (i = 0; i < filevec[1].buffered_lines; ++i)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   78 |     ++equiv_count[1][filevec[1].equivs[i]];[0m
      | [0;1;32m                                           
[0m[1manalyze.c:100:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |       while ((tem = tem >> 2) > 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  101 |         many *= 2;[0m
      | [0;1;32m                  
[0m[1manalyze.c:106:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |           if (equivs[i] == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  107 |             continue;[0m
      | [0;1;32m                     
[0m[1manalyze.c:109:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |           if (nmatch == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  110 |             discards[i] = 1;[0m
  111 |           else if (nmatch > many)[0m
      | [0;32m          } 
[0m[1manalyze.c:111:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |           else if (nmatch > many)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  112 |             discards[i] = 2;[0m
      | [0;1;32m                            
[0m[1manalyze.c:128:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |           if (discards[i] == 2)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  129 |             discards[i] = 0;[0m
  130 |           else if (discards[i] != 0)[0m
      | [0;32m          } 
[0m[1manalyze.c:141:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |                   if (discards[j] == 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  142 |                     break;[0m
      | [0;1;32m                          
[0m[1manalyze.c:143:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |                   if (discards[j] == 2)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  144 |                     ++provisional;[0m
      | [0;1;32m                                  
[0m[1manalyze.c:148:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |               while (j > i && discards[j - 1] == 2)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  149 |                 discards[--j] = 0, --provisional;[0m
      | [0;1;32m                                                 
[0m[1manalyze.c:159:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |                   while (j > i)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  160 |                     if (discards[--j] == 2)[0m
  161 |                       discards[j] = 0;[0m
      | [0;1;32m                                      
[0m[1manalyze.c:160:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                     if (discards[--j] == 2)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  161 |                       discards[j] = 0;[0m
      | [0;1;32m                                      
[0m[1manalyze.c:173:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |                   while (0 < (tem >>= 2))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  174 |                     minimum <<= 1;[0m
      | [0;1;32m                                  
[0m[1manalyze.c:179:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |                   for (j = 0, consec = 0; j < length; j++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  180 |                     if (discards[i + j] != 2)[0m
  181 |                       consec = 0;[0m
  182 |                     else if (minimum == ++consec)[0m
  183 |                       /* Back up to start of subrun, to cancel it all.  */[0m
  184 |                       j -= consec;[0m
  185 |                     else if (minimum < consec)[0m
  186 |                       discards[i + j] = 0;[0m
      | [0;1;32m                                          
[0m[1manalyze.c:180:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |                     if (discards[i + j] != 2)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  181 |                       consec = 0;[0m
  182 |                     else if (minimum == ++consec)[0m
      | [0;32m                    } 
[0m[1manalyze.c:182:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |                     else if (minimum == ++consec)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  183 |                       /* Back up to start of subrun, to cancel it all.  */[0m
  184 |                       j -= consec;[0m
  185 |                     else if (minimum < consec)[0m
      | [0;32m                    } 
[0m[1manalyze.c:185:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |                     else if (minimum < consec)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  186 |                       discards[i + j] = 0;[0m
      | [0;1;32m                                          
[0m[1manalyze.c:194:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |                       if (j >= 8 && discards[i + j] == 1)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  195 |                         break;[0m
      | [0;1;32m                              
[0m[1manalyze.c:196:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |                       if (discards[i + j] == 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  197 |                         consec = 0, discards[i + j] = 0;[0m
  198 |                       else if (discards[i + j] == 0)[0m
      | [0;32m                      } 
[0m[1manalyze.c:198:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |                       else if (discards[i + j] == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  199 |                         consec = 0;[0m
  200 |                       else[0m
      | [0;32m                      } 
[0m[1manalyze.c:200:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  201 |                         consec++;[0m
      | [0;1;32m                                 
[0m[1manalyze.c:202:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |                       if (consec == 3)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  203 |                         break;[0m
      | [0;1;32m                              
[0m[1manalyze.c:212:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |                       if (j >= 8 && discards[i - j] == 1)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  213 |                         break;[0m
      | [0;1;32m                              
[0m[1manalyze.c:214:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |                       if (discards[i - j] == 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  215 |                         consec = 0, discards[i - j] = 0;[0m
  216 |                       else if (discards[i - j] == 0)[0m
      | [0;32m                      } 
[0m[1manalyze.c:216:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |                       else if (discards[i - j] == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  217 |                         consec = 0;[0m
  218 |                       else[0m
      | [0;32m                      } 
[0m[1manalyze.c:218:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  219 |                         consec++;[0m
      | [0;1;32m                                 
[0m[1manalyze.c:220:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |                       if (consec == 3)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  221 |                         break;[0m
      | [0;1;32m                              
[0m[1manalyze.c:234:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |       for (i = 0; i < end; ++i)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  235 |         if (minimal || discards[i] == 0)[0m
  236 |           {[0m
  237 |             filevec[f].undiscarded[j] = filevec[f].equivs[i];[0m
  238 |             filevec[f].realindexes[j++] = i;[0m
  239 |           }[0m
  240 |         else[0m
  241 |           filevec[f].changed[i] = 1;[0m
      | [0;1;32m                                    
[0m[1manalyze.c:240:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  241 |           filevec[f].changed[i] = 1;[0m
      | [0;1;32m                                    
[0m[1manalyze.c:282:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |               while (other_changed[j++])[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  283 |                 continue;[0m
      | [0;1;32m                         
[0m[1manalyze.c:287:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |           if (i == i_end)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  288 |             break;[0m
      | [0;1;32m                  
[0m[1manalyze.c:294:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |           while (changed[++i])[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  295 |             continue;[0m
      | [0;1;32m                     
[0m[1manalyze.c:296:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |           while (other_changed[j])[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  297 |             j++;[0m
      | [0;1;32m                
[0m[1manalyze.c:313:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |                   while (changed[start - 1])[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  314 |                     start--;[0m
      | [0;1;32m                            
[0m[1manalyze.c:315:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |                   while (other_changed[--j])[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  316 |                     continue;[0m
      | [0;1;32m                             
[0m[1manalyze.c:334:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |                   while (changed[i])[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  335 |                     i++;[0m
      | [0;1;32m                        
[0m[1manalyze.c:336:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |                   while (other_changed[++j])[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  337 |                     corresponding = i;[0m
      | [0;1;32m                                      
[0m[1manalyze.c:349:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |               while (other_changed[--j])[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  350 |                 continue;[0m
      | [0;1;32m                         
[0m[1manalyze.c:401:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |           while (changed0[i0]) ++i0;[0m
      | [0;1;32m                              ^     
[0m      | [0;32m                               {
[0m[1manalyze.c:402:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |           while (changed1[i1]) ++i1;[0m
      | [0;1;32m                              ^     
[0m      | [0;32m                               {
[0m[1manalyze.c:435:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |           while (changed0[i0 - 1]) --i0;[0m
      | [0;1;32m                                  ^     
[0m      | [0;32m                                   {
[0m[1manalyze.c:436:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |           while (changed1[i1 - 1]) --i1;[0m
      | [0;1;32m                                  ^     
[0m      | [0;32m                                   {
[0m[1manalyze.c:453:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |   if (changes)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  454 |     message ((brief[0m
  455 |               ? N_("Files %s and %s differ\n")[0m
  456 |               : N_("Binary files %s and %s differ\n")),[0m
  457 |              file_label[0] ? file_label[0] : filevec[0].name,[0m
  458 |              file_label[1] ? file_label[1] : filevec[1].name);[0m
      | [0;1;32m                                                              
[0m[1manalyze.c:484:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |           && (cmp->file[1].desc < 0 || S_ISREG (cmp->file[1].stat.st_mode)))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  485 |         changes = 1;[0m
  486 | [0m
  487 |       /* Standard input equals itself.  */[0m
  488 |       else if (cmp->file[0].desc == cmp->file[1].desc)[0m
      | [0;32m      } 
[0m[1manalyze.c:488:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |       else if (cmp->file[0].desc == cmp->file[1].desc)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  489 |         changes = 0;[0m
  490 | [0m
  491 |       else[0m
      | [0;32m      } 
[0m[1manalyze.c:502:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |           for (f = 0; f < 2; f++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  503 |             cmp->file[f].buffer = xrealloc (cmp->file[f].buffer, buffer_size);[0m
      | [0;1;32m                                                                              
[0m[1manalyze.c:508:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |               for (f = 0; f < 2; f++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  509 |                 if (0 <= cmp->file[f].desc)[0m
  510 |                   file_block_read (&cmp->file[f],[0m
  511 |                                    buffer_size - cmp->file[f].buffered);[0m
      | [0;1;32m                                                                        
[0m[1manalyze.c:509:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |                 if (0 <= cmp->file[f].desc)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  510 |                   file_block_read (&cmp->file[f],[0m
  511 |                                    buffer_size - cmp->file[f].buffered);[0m
      | [0;1;32m                                                                        
[0m[1manalyze.c:574:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  574 |       for (;  diags != 0;  diags >>= 2)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  575 |         too_expensive <<= 1;[0m
      | [0;1;32m                            
[0m[1manalyze.c:594:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |       if (output_style == OUTPUT_ED)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  595 |         script = build_reverse_script (cmp->file);[0m
  596 |       else[0m
      | [0;32m      } 
[0m[1manalyze.c:596:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  597 |         script = build_script (cmp->file);[0m
      | [0;1;32m                                          
[0m[1manalyze.c:621:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |               if (analyze_hunk (this, &first0, &last0, &first1, &last1))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  622 |                 changes = 1;[0m
      | [0;1;32m                            
[0m[1manalyze.c:628:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  629 |         changes = (script != 0);[0m
      | [0;1;32m                                
[0m[1manalyze.c:631:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |       if (brief)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  632 |         briefly_report (changes, cmp->file);[0m
  633 |       else[0m
      | [0;32m      } 
[0m[1manalyze.c:646:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  646 |                   print_context_script (script, false);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  647 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1manalyze.c:650:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  650 |                   print_context_script (script, true);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  651 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1manalyze.c:654:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  654 |                   print_ed_script (script);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  655 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1manalyze.c:658:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |                   pr_forward_ed_script (script);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  659 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1manalyze.c:662:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  662 |                   print_rcs_script (script);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  663 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1manalyze.c:666:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  666 |                   print_normal_script (script);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  667 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1manalyze.c:670:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  670 |                   print_ifdef_script (script);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  671 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1manalyze.c:674:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  674 |                   print_sdiff_script (script);[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  675 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1manalyze.c:678:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  678 |                   abort ();[0m
      | [0;1;32m                  ^       
[0m      | [0;32m                  {       ;} 
[0m[1manalyze.c:701:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  701 |       if (! robust_output_style (output_style))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  702 |         for (f = 0; f < 2; ++f)[0m
  703 |           if (cmp->file[f].missing_newline)[0m
  704 |             {[0m
  705 |               error (0, 0, "%s: %s\n",[0m
  706 |                      file_label[f] ? file_label[f] : cmp->file[f].name,[0m
  707 |                      _("No newline at end of file"));[0m
  708 |               changes = 2;[0m
  709 |             }[0m
      | [0;1;32m             
[0m[1manalyze.c:702:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |         for (f = 0; f < 2; ++f)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  703 |           if (cmp->file[f].missing_newline)[0m
  704 |             {[0m
  705 |               error (0, 0, "%s: %s\n",[0m
  706 |                      file_label[f] ? file_label[f] : cmp->file[f].name,[0m
  707 |                      _("No newline at end of file"));[0m
  708 |               changes = 2;[0m
  709 |             }[0m
      | [0;1;32m             
[0m[1manalyze.c:712:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  712 |   if (cmp->file[0].buffer != cmp->file[1].buffer)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  713 |     free (cmp->file[0].buffer);[0m
      | [0;1;32m                               
[0m98 warnings generated.
Suppressed 32 warnings (32 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[119/126][145.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpvolk0wln.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/mbsstr.c
[1mmbsstr.c:50:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |   if (memory == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   51 |     return false;[0m
      | [0;1;32m                 
[0m[1mmbsstr.c:62:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   62 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m         ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:62:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   62 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m         ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:62:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m   63 |       mb_copy (&needle_mbchars[j], &mbui_cur (iter));[0m
      | [0;1;32m                                                     
[0m[1mmbsstr.c:141:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  141 |     mbui_init (rhaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:141:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  141 |     mbui_init (rhaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:142:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |     mbui_init (phaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:142:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  142 |     mbui_init (phaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:144:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |     while (mbui_avail (phaystack))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m[1mmbsstr.c:163:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |               if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  164 |                 abort ();[0m
      | [0;1;32m                         
[0m[1mmbsstr.c:171:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |           if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  172 |             abort ();[0m
      | [0;1;32m                     
[0m[1mmbsstr.c:196:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  196 |       mbui_init (iter_needle, needle);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:196:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  196 |       mbui_init (iter_needle, needle);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:221:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |           mbui_init (iter_needle_last_ccount, needle);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:221:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  221 |           mbui_init (iter_needle_last_ccount, needle);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:222:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |           mbui_init (iter_haystack, haystack);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:222:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  222 |           mbui_init (iter_haystack, haystack);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:225:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |               if (!mbui_avail (iter_haystack))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  226 |                 /* No match.  */[0m
  227 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mmbsstr.c:240:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |                        count--)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  241 |                     mbui_advance (iter_needle_last_ccount);[0m
      | [0;1;32m                                                           
[0m[1mmbsstr.c:250:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |                       if (success)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  251 |                         return (char *) result;[0m
      | [0;1;32m                                               
[0m[1mmbsstr.c:264:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  264 |                   memcpy (&rhaystack, &iter_haystack, sizeof (mbui_iterator_t));[0m
      | [0;1;32m                  ^~~~~~
[0m[1mmbsstr.c:264:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  264 |                   memcpy (&rhaystack, &iter_haystack, sizeof (mbui_iterator_t));[0m
      | [0;1;32m                  ^~~~~~
[0m[1mmbsstr.c:267:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  267 |                   mbui_init (rneedle, needle);[0m
      | [0;1;32m                  ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:267:19: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  267 |                   mbui_init (rneedle, needle);[0m
      | [0;1;32m                  ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:268:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |                   if (!mbui_avail (rneedle))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  269 |                     abort ();[0m
      | [0;1;32m                             
[0m[1mmbsstr.c:274:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |                       if (!mbui_avail (rneedle))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  275 |                         /* Found a match.  */[0m
  276 |                         return (char *) mbui_cur_ptr (iter_haystack);[0m
      | [0;1;32m                                                                     
[0m[1mmbsstr.c:277:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |                       if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  278 |                         /* No match.  */[0m
  279 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mmbsstr.c:281:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |                       if (!mb_equal (mbui_cur (rhaystack), mbui_cur (rneedle)))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  282 |                         /* Nothing in this round.  */[0m
  283 |                         break;[0m
      | [0;1;32m                              
[0m[1mmbsstr.c:288:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  289 |         return (char *) haystack;[0m
      | [0;1;32m                                 
[0m[1mmbsstr.c:321:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |               if (*haystack == '\0')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  322 |                 /* No match.  */[0m
  323 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mmbsstr.c:338:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |                       if (*needle_last_ccount == '\0')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  339 |                         needle_last_ccount = NULL;[0m
      | [0;1;32m                                                  
[0m[1mmbsstr.c:351:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |                       if (success)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  352 |                         return (char *) result;[0m
      | [0;1;32m                                               
[0m[1mmbsstr.c:367:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |                       if (*rneedle == '\0')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  368 |                         /* Found a match.  */[0m
  369 |                         return (char *) haystack;[0m
      | [0;1;32m                                                 
[0m[1mmbsstr.c:370:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |                       if (*rhaystack == '\0')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  371 |                         /* No match.  */[0m
  372 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mmbsstr.c:374:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |                       if (*rhaystack != *rneedle)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  375 |                         /* Nothing in this round.  */[0m
  376 |                         break;[0m
      | [0;1;32m                              
[0m[1mmbsstr.c:381:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  382 |         return (char *) haystack;[0m
      | [0;1;32m                                 
[0m42 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[120/126][141.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp7vtmlhek.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/side.c
[1mside.c:55:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |   if (!expand_tabs)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   56 |     for (tab = from + tab_size - from % tab_size;  tab <= to;  tab += tab_size)[0m
   57 |       {[0m
   58 |         putc ('\t', out);[0m
   59 |         from = tab;[0m
   60 |       }[0m
      | [0;1;32m       
[0m[1mside.c:61:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |   while (from++ < to)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   62 |     putc (' ', out);[0m
      | [0;1;32m                    
[0m[1mside.c:88:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   88 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mside.c:95:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |                     if (out_bound < tabstop)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   96 |                       tabstop = out_bound;[0m
      | [0;1;32m                                          
[0m[1mside.c:97:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |                     for (;  out_position < tabstop;  out_position++)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m   98 |                       putc (' ', out);[0m
      | [0;1;32m                                      
[0m[1mside.c:112:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  112 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  113 |             putc (c, out);[0m
  114 |             tab_from_to (0, indent);[0m
  115 |             in_position = out_position = 0;[0m
  116 |           }[0m
  117 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mside.c:120:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |           if (in_position != 0 && --in_position < out_bound)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  121 |             {[0m
  122 |               if (out_position <= in_position)[0m
  123 |                 /* Add spaces to make up for suppressed tab past out_bound.  */[0m
  124 |                 for (;  out_position < in_position;  out_position++)[0m
  125 |                   putc (' ', out);[0m
  126 |               else[0m
  127 |                 {[0m
  128 |                   out_position = in_position;[0m
  129 |                   putc (c, out);[0m
  130 |                 }[0m
  131 |             }[0m
  132 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mside.c:122:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |               if (out_position <= in_position)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  123 |                 /* Add spaces to make up for suppressed tab past out_bound.  */[0m
  124 |                 for (;  out_position < in_position;  out_position++)[0m
  125 |                   putc (' ', out);[0m
  126 |               else[0m
      | [0;32m              } 
[0m[1mside.c:124:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |                 for (;  out_position < in_position;  out_position++)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  125 |                   putc (' ', out);[0m
      | [0;1;32m                                  
[0m[1mside.c:135:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  135 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mside.c:142:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |                 if (0 < width)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  143 |                   in_position += width;[0m
      | [0;1;32m                                       
[0m[1mside.c:156:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |           if (in_position < out_bound)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  157 |             putc (c, out);[0m
      | [0;1;32m                          
[0m[1mside.c:158:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  158 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mside.c:186:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  186 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mside.c:189:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  189 |           return out_position;[0m
      | [0;1;32m          ^                  
[0m      | [0;32m          {                  ;} 
[0m[1mside.c:231:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |       if (sep == '|' && put_newline != (right[1][-1] == '\n'))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  232 |         sep = put_newline ? '/' : '\\';[0m
      | [0;1;32m                                       
[0m[1mside.c:246:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |   if (put_newline)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  247 |     putc ('\n', out);[0m
      | [0;1;32m                     
[0m[1mside.c:249:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |   if (color_to_reset)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  250 |     set_color_context (RESET_CONTEXT);[0m
      | [0;1;32m                                      
[0m[1mside.c:261:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  261 |       if (sdiff_merge_assist)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  262 |         fprintf (outfile, "i%"pI"d,%"pI"d\n", limit0 - i0, limit1 - i1);[0m
      | [0;1;32m                                                                        
[0m[1mside.c:262:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  262 |         fprintf (outfile, "i%"pI"d,%"pI"d\n", limit0 - i0, limit1 - i1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mside.c:262:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  262 |         fprintf (outfile, "i%"pI"d,%"pI"d\n", limit0 - i0, limit1 - i1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mside.c:266:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |           while (i0 != limit0 && i1 != limit1)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  267 |             print_1sdiff_line (&files[0].linbuf[i0++], ' ',[0m
  268 |                                &files[1].linbuf[i1++]);[0m
      | [0;1;32m                                                       
[0m[1mside.c:269:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |           while (i1 != limit1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  270 |             print_1sdiff_line (0, ')', &files[1].linbuf[i1++]);[0m
      | [0;1;32m                                                               
[0m[1mside.c:272:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |       while (i0 != limit0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  273 |         print_1sdiff_line (&files[0].linbuf[i0++], '(', 0);[0m
      | [0;1;32m                                                           
[0m[1mside.c:293:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |   if (!changes)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  294 |     return;[0m
      | [0;1;32m           
[0m[1mside.c:299:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |   if (sdiff_merge_assist)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  300 |     fprintf (outfile, "c%"pI"d,%"pI"d\n",[0m
  301 |              last0 - first0 + 1,[0m
  302 |              last1 - first1 + 1);[0m
      | [0;1;32m                                 
[0m[1mside.c:300:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  300 |     fprintf (outfile, "c%"pI"d,%"pI"d\n",[0m
      | [0;1;32m    ^~~~~~~
[0m[1mside.c:300:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  300 |     fprintf (outfile, "c%"pI"d,%"pI"d\n",[0m
      | [0;1;32m    ^~~~~~~
[0m[1mside.c:307:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |       for (i = first0, j = first1;  i <= last0 && j <= last1;  i++, j++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  308 |         print_1sdiff_line (&files[0].linbuf[i], '|', &files[1].linbuf[j]);[0m
      | [0;1;32m                                                                          
[0m[1mside.c:317:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |       for (j = first1; j <= last1; ++j)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  318 |         print_1sdiff_line (0, '>', &files[1].linbuf[j]);[0m
      | [0;1;32m                                                        
[0m[1mside.c:325:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |       for (i = first0; i <= last0; ++i)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  326 |         print_1sdiff_line (&files[0].linbuf[i], '<', 0);[0m
      | [0;1;32m                                                        
[0m43 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[121/126][147.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmps3y4gik0.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/io.c
[1mio.c:85:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |       if (s == SIZE_MAX)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   86 |         pfatal_with_name (current->name);[0m
      | [0;1;32m                                         
[0m[1mio.c:141:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |               if (lseek (current->desc, - buffered, SEEK_CUR) < 0)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  142 |                 pfatal_with_name (current->name);[0m
      | [0;1;32m                                                 
[0m[1mio.c:179:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |                          file_size, &cc))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  180 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mio.c:195:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |           if (current->buffered <= file_size)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  196 |             return;[0m
      | [0;1;32m                   
[0m[1mio.c:209:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |           if (PTRDIFF_MAX / 2 - sizeof (word) < current->bufsize)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  210 |             xalloc_die ();[0m
      | [0;1;32m                          
[0m[1mio.c:262:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  262 |           while ((c = *p++) != '\n')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  263 |             if (! isspace (c))[0m
  264 |               h = HASH (h, ig_case ? tolower (c) : c);[0m
  265 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mio.c:262:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |           while ((c = *p++) != '\n')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  263 |             if (! isspace (c))[0m
  264 |               h = HASH (h, ig_case ? tolower (c) : c);[0m
      | [0;1;32m                                                      
[0m[1mio.c:263:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |             if (! isspace (c))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  264 |               h = HASH (h, ig_case ? tolower (c) : c);[0m
      | [0;1;32m                                                      
[0m[1mio.c:268:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  268 |           while ((c = *p++) != '\n')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  269 |             {[0m
  270 |               if (isspace (c))[0m
  271 |                 {[0m
  272 |                   do[0m
  273 |                     if ((c = *p++) == '\n')[0m
  274 |                       goto hashing_done;[0m
  275 |                   while (isspace (c));[0m
  276 | [0m
  277 |                   h = HASH (h, ' ');[0m
  278 |                 }[0m
  279 | [0m
  280 |               /* C is now the first non-space.  */[0m
  281 |               h = HASH (h, ig_case ? tolower (c) : c);[0m
  282 |             }[0m
  283 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mio.c:272:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |                   do[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  273 |                     if ((c = *p++) == '\n')[0m
  274 |                       goto hashing_done;[0m
  275 |                   while (isspace (c));[0m
      | [0;32m                  } 
[0m[1mio.c:273:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |                     if ((c = *p++) == '\n')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  274 |                       goto hashing_done;[0m
      | [0;1;32m                                        
[0m[1mio.c:297:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |                     do[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  298 |                       if ((c1 = *p1++) == '\n')[0m
  299 |                         {[0m
  300 |                           p = p1;[0m
  301 |                           goto hashing_done;[0m
  302 |                         }[0m
  303 |                     while (isspace (c1));[0m
      | [0;32m                    } 
[0m[1mio.c:308:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |                 if (ig_white_space & IGNORE_TAB_EXPANSION)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mio.c:312:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  312 |                       column -= 0 < column;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  313 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mio.c:316:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  316 |                       c = ' ';[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  317 |                       repetitions = tabsize - column % tabsize;[0m
  318 |                       column = (column + repetitions < column[0m
  319 |                                 ? 0[0m
  320 |                                 : column + repetitions);[0m
  321 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mio.c:324:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  324 |                       column = 0;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  325 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mio.c:328:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  328 |                       column++;[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m  329 |                       break;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mio.c:332:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |                 if (ig_case)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  333 |                   c = tolower (c);[0m
      | [0;1;32m                                  
[0m[1mio.c:335:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  336 |                   h = HASH (h, c);[0m
  337 |                 while (--repetitions != 0);[0m
      | [0;32m                } 
[0m[1mio.c:340:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  340 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mio.c:343:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  343 |           if (ig_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  344 |             while ((c = *p++) != '\n')[0m
  345 |               h = HASH (h, tolower (c));[0m
  346 |           else[0m
  347 |             while ((c = *p++) != '\n')[0m
  348 |               h = HASH (h, c);[0m
  349 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mio.c:343:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |           if (ig_case)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  344 |             while ((c = *p++) != '\n')[0m
  345 |               h = HASH (h, tolower (c));[0m
  346 |           else[0m
      | [0;32m          } 
[0m[1mio.c:344:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |             while ((c = *p++) != '\n')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  345 |               h = HASH (h, tolower (c));[0m
      | [0;1;32m                                        
[0m[1mio.c:346:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  347 |             while ((c = *p++) != '\n')[0m
  348 |               h = HASH (h, c);[0m
      | [0;1;32m                              
[0m[1mio.c:347:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |             while ((c = *p++) != '\n')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  348 |               h = HASH (h, c);[0m
      | [0;1;32m                              
[0m[1mio.c:366:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |           if (ig_white_space < IGNORE_TRAILING_SPACE)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  367 |             bucket = &buckets[-1];[0m
      | [0;1;32m                                  
[0m[1mio.c:370:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |       for (i = *bucket;  ;  i = eqs[i].next)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m[1mio.c:377:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |                 if (PTRDIFF_MAX / (2 * sizeof *eqs) <= eqs_alloc)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  378 |                   xalloc_die ();[0m
      | [0;1;32m                                
[0m[1mio.c:400:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |                 if (memcmp (eqline, ip, length) == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  401 |                   break;[0m
      | [0;1;32m                        
[0m[1mio.c:402:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |                 if (!same_length_diff_contents_compare_anyway)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  403 |                   continue;[0m
      | [0;1;32m                           
[0m[1mio.c:405:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |             else if (!diff_length_compare_anyway)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  406 |               continue;[0m
      | [0;1;32m                       
[0m[1mio.c:408:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |             if (! lines_differ (eqline, ip))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  409 |               break;[0m
      | [0;1;32m                    
[0m[1mio.c:418:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |               || PTRDIFF_MAX / sizeof *linbuf <= alloc_lines - linbuf_base)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  419 |             xalloc_die ();[0m
      | [0;1;32m                          
[0m[1mio.c:444:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |               || PTRDIFF_MAX / sizeof *linbuf <= alloc_lines - linbuf_base)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  445 |             xalloc_die ();[0m
      | [0;1;32m                          
[0m[1mio.c:458:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |           if (current->missing_newline && robust_output_style (output_style))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  459 |             linbuf[line]--;[0m
      | [0;1;32m                           
[0m[1mio.c:463:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |       if (context <= i && no_diff_means_no_output)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  464 |         break;[0m
      | [0;1;32m              
[0m[1mio.c:468:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |       while (*p++ != '\n')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  469 |         continue;[0m
      | [0;1;32m                 
[0m[1mio.c:492:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  493 |     return;[0m
      | [0;1;32m           
[0m[1mio.c:517:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  517 |   memset (p + buffered, 0, sizeof (word));[0m
      | [0;1;32m  ^~~~~~
[0m[1mio.c:517:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  517 |   memset (p + buffered, 0, sizeof (word));[0m
      | [0;1;32m  ^~~~~~
[0m[1mio.c:575:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |   if (p0 == p1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  576 |     /* The buffers are the same; sentinels won't work.  */[0m
  577 |     p0 = p1 += n1;[0m
  578 |   else[0m
      | [0;32m  } 
[0m[1mio.c:583:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |       if (n0 < n1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  584 |         p0[n0] = ~p1[n0];[0m
  585 |       else[0m
      | [0;32m      } 
[0m[1mio.c:585:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  586 |         p1[n1] = ~p0[n1];[0m
      | [0;1;32m                         
[0m[1mio.c:591:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |       while (*w0 == *w1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  592 |         w0++, w1++;[0m
      | [0;1;32m                   
[0m[1mio.c:597:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  597 |       while (*p0 == *p1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  598 |         p0++, p1++;[0m
      | [0;1;32m                   
[0m[1mio.c:604:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  604 |               (buffer1 + n1 - filevec[1].missing_newline < p1)))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  605 |         p0--, p1--;[0m
      | [0;1;32m                   
[0m[1mio.c:613:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |   while (p0 != buffer0 && (p0[-1] != '\n' || i--))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  614 |     p0--, p1--;[0m
      | [0;1;32m               
[0m[1mio.c:637:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  637 |       while (p0 != beg0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  638 |         if (*--p0 != *--p1)[0m
  639 |           {[0m
  640 |             /* Point at the first char of the matching suffix.  */[0m
  641 |             ++p0, ++p1;[0m
  642 |             beg0 = p0;[0m
  643 |             break;[0m
  644 |           }[0m
      | [0;1;32m           
[0m[1mio.c:653:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |       while (i-- && p0 != end0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  654 |         while (*p0++ != '\n')[0m
  655 |           continue;[0m
      | [0;1;32m                   
[0m[1mio.c:654:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  654 |         while (*p0++ != '\n')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  655 |           continue;[0m
      | [0;1;32m                   
[0m[1mio.c:683:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  683 |       for (prefix_count = 1;  prefix_count <= context;  prefix_count *= 2)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  684 |         continue;[0m
      | [0;1;32m                 
[0m[1mio.c:711:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |               if (PTRDIFF_MAX / (2 * sizeof *linbuf0) <= alloc_lines0)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  712 |                 xalloc_die ();[0m
      | [0;1;32m                              
[0m[1mio.c:717:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |           while (*p0++ != '\n')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  718 |             continue;[0m
      | [0;1;32m                     
[0m[1mio.c:729:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  729 |                      &alloc_lines1))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  730 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mio.c:736:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  736 |       for (i = 0;  i < buffered_prefix;  i++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  737 |         linbuf1[i] = linbuf0[(lines - context + i) & prefix_mask];[0m
      | [0;1;32m                                                                  
[0m[1mio.c:738:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  738 |       for (i = 0;  i < buffered_prefix;  i++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  739 |         linbuf0[i] = linbuf1[i];[0m
      | [0;1;32m                                
[0m[1mio.c:743:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  743 |   for (i = 0; i < buffered_prefix; i++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  744 |     linbuf1[i] = linbuf0[i] - buffer0 + buffer1;[0m
      | [0;1;32m                                                
[0m[1mio.c:784:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |   if (filevec[0].desc != filevec[1].desc)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  785 |     appears_binary |= sip (&filevec[1], skip_test | appears_binary);[0m
  786 |   else[0m
      | [0;32m  } 
[0m[1mio.c:810:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |   for (i = 9; (size_t) 1 << i < equivs_alloc / 3; i++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  811 |     continue;[0m
      | [0;1;32m             
[0m[1mio.c:816:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  816 |   for (i = 0; i < 2; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  817 |     find_and_hash_each_line (&filevec[i]);[0m
      | [0;1;32m                                          
[0m73 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[122/126][153.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpubsa9rgu.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/context.c
[1mcontext.c:47:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   if (label)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   48 |     fprintf (outfile, "%s %s", mark, label);[0m
   49 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:48:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   48 |     fprintf (outfile, "%s %s", mark, label);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:48:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   48 |     fprintf (outfile, "%s %s", mark, label);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:62:15: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   62 |               sprintf (buf, "%ld.%.9d", sec, nsec);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcontext.c:62:15: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   62 |               sprintf (buf, "%ld.%.9d", sec, nsec);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcontext.c:67:15: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |               sprintf (buf, "%"PRIdMAX".%.9d", sec, nsec);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcontext.c:67:15: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   67 |               sprintf (buf, "%"PRIdMAX".%.9d", sec, nsec);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcontext.c:72:15: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   72 |               sprintf (buf, "%"PRIuMAX".%.9d", sec, nsec);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcontext.c:72:15: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   72 |               sprintf (buf, "%"PRIuMAX".%.9d", sec, nsec);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcontext.c:75:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   75 |       fprintf (outfile, "%s %s\t%s", mark, name, buf);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcontext.c:75:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   75 |       fprintf (outfile, "%s %s\t%s", mark, name, buf);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcontext.c:103:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |   if (ignore_blank_lines || ignore_regexp.fastmap)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  104 |     mark_ignorable (script);[0m
  105 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:108:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |       for (e = script; e; e = e->link)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  109 |         e->ignore = false;[0m
      | [0;1;32m                          
[0m[1mcontext.c:115:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |   if (unidiff)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  116 |     print_script (script, find_hunk, pr_unidiff_hunk);[0m
  117 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:117:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  118 |     print_script (script, find_hunk, pr_context_hunk);[0m
      | [0;1;32m                                                      
[0m[1mcontext.c:142:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |   if (trans_b <= trans_a)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  143 |     fprintf (outfile, "%"pI"d", trans_b);[0m
  144 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:143:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  143 |     fprintf (outfile, "%"pI"d", trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:143:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  143 |     fprintf (outfile, "%"pI"d", trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:144:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  145 |     fprintf (outfile, "%"pI"d,%"pI"d", trans_a, trans_b);[0m
      | [0;1;32m                                                         
[0m[1mcontext.c:145:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  145 |     fprintf (outfile, "%"pI"d,%"pI"d", trans_a, trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:145:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  145 |     fprintf (outfile, "%"pI"d,%"pI"d", trans_a, trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:154:83: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |   for (i = 0; c_isspace ((unsigned char) function[i]) && function[i] != '\n'; i++)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  155 |     continue;[0m
      | [0;1;32m             
[0m[1mcontext.c:156:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |   for (j = i; j < i + 40 && function[j] != '\n'; j++)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  157 |     continue;[0m
      | [0;1;32m             
[0m[1mcontext.c:158:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |   while (i < j && c_isspace ((unsigned char) function[j - 1]))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  159 |     j--;[0m
      | [0;1;32m        
[0m[1mcontext.c:181:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |   if (! changes)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  182 |     return;[0m
      | [0;1;32m           
[0m[1mcontext.c:189:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   if (last0 < files[0].valid_lines - context)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  190 |     last0 += context;[0m
  191 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:191:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  192 |     last0 = files[0].valid_lines - 1;[0m
      | [0;1;32m                                     
[0m[1mcontext.c:193:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |   if (last1 < files[1].valid_lines - context)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  194 |     last1 += context;[0m
  195 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:195:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  196 |     last1 = files[1].valid_lines - 1;[0m
      | [0;1;32m                                     
[0m[1mcontext.c:200:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |   if (function_regexp.fastmap)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  201 |     function = find_function (files[0].linbuf, first0);[0m
      | [0;1;32m                                                       
[0m[1mcontext.c:208:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |   if (function)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  209 |     print_context_function (out, function);[0m
      | [0;1;32m                                           
[0m[1mcontext.c:230:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |           while (next && next->line0 + next->deleted <= i)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  231 |             next = next->link;[0m
      | [0;1;32m                              
[0m[1mcontext.c:245:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |           if (files[0].linbuf[i + 1][-1] == '\n')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  246 |             putc ('\n', out);[0m
      | [0;1;32m                             
[0m[1mcontext.c:268:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |           while (next && next->line1 + next->inserted <= i)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  269 |             next = next->link;[0m
      | [0;1;32m                              
[0m[1mcontext.c:283:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |           if (files[1].linbuf[i + 1][-1] == '\n')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  284 |             putc ('\n', out);[0m
      | [0;1;32m                             
[0m[1mcontext.c:306:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |   if (trans_b <= trans_a)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  307 |     fprintf (outfile, trans_b < trans_a ? "%"pI"d,0" : "%"pI"d", trans_b);[0m
  308 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:307:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  307 |     fprintf (outfile, trans_b < trans_a ? "%"pI"d,0" : "%"pI"d", trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:307:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  307 |     fprintf (outfile, trans_b < trans_a ? "%"pI"d,0" : "%"pI"d", trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:308:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  309 |     fprintf (outfile, "%"pI"d,%"pI"d", trans_a, trans_b - trans_a + 1);[0m
      | [0;1;32m                                                                       
[0m[1mcontext.c:309:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |     fprintf (outfile, "%"pI"d,%"pI"d", trans_a, trans_b - trans_a + 1);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:309:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  309 |     fprintf (outfile, "%"pI"d,%"pI"d", trans_a, trans_b - trans_a + 1);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mcontext.c:330:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |   if (! analyze_hunk (hunk, &first0, &last0, &first1, &last1))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  331 |     return;[0m
      | [0;1;32m           
[0m[1mcontext.c:338:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |   if (last0 < files[0].valid_lines - context)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  339 |     last0 += context;[0m
  340 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:340:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  341 |     last0 = files[0].valid_lines - 1;[0m
      | [0;1;32m                                     
[0m[1mcontext.c:342:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |   if (last1 < files[1].valid_lines - context)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  343 |     last1 += context;[0m
  344 |   else[0m
      | [0;32m  } 
[0m[1mcontext.c:344:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  345 |     last1 = files[1].valid_lines - 1;[0m
      | [0;1;32m                                     
[0m[1mcontext.c:349:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |   if (function_regexp.fastmap)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  350 |     function = find_function (files[0].linbuf, first0);[0m
      | [0;1;32m                                                       
[0m[1mcontext.c:363:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |   if (function)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  364 |     print_context_function (out, function);[0m
      | [0;1;32m                                           
[0m[1mcontext.c:380:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |           if (! (suppress_blank_empty && **line == '\n'))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  381 |             putc (initial_tab ? '\t' : ' ', out);[0m
      | [0;1;32m                                                 
[0m[1mcontext.c:396:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |               if (initial_tab && ! (suppress_blank_empty && **line == '\n'))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  397 |                 putc ('\t', out);[0m
      | [0;1;32m                                 
[0m[1mcontext.c:402:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |               if (line[1][-1] == '\n')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  403 |                 putc ('\n', out);[0m
      | [0;1;32m                                 
[0m[1mcontext.c:415:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  415 |               if (initial_tab && ! (suppress_blank_empty && **line == '\n'))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  416 |                 putc ('\t', out);[0m
      | [0;1;32m                                 
[0m[1mcontext.c:421:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |               if (line[1][-1] == '\n')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  422 |                 putc ('\n', out);[0m
      | [0;1;32m                                 
[0m[1mcontext.c:461:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  461 |       if (start && start->line0 - top0 != start->line1 - top1)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  462 |         abort ();[0m
      | [0;1;32m                 
[0m[1mcontext.c:527:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |   if (find_function_last_match != LIN_MAX)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  528 |     return linbuf[find_function_last_match];[0m
      | [0;1;32m                                            
[0m74 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[123/126][150.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmp948g3ofv.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/cmp.c
[1mcmp.c:121:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |   if (reason_msgid)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  122 |     error (0, 0, _(reason_msgid), operand);[0m
      | [0;1;32m                                           
[0m[1mcmp.c:141:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |          && 0 <= val && val <= TYPE_MAXIMUM (off_t)))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  142 |     try_help ("invalid --ignore-initial value '%s'", arg);[0m
      | [0;1;32m                                                          
[0m[1mcmp.c:143:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |   if (ignore_initial[f] < val)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  144 |     ignore_initial[f] = val;[0m
      | [0;1;32m                            
[0m[1mcmp.c:151:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |   if (comparison_type && comparison_type != t)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  152 |     try_help ("options -l and -s are incompatible", 0);[0m
      | [0;1;32m                                                       
[0m[1mcmp.c:159:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |   if (ferror (stdout))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  160 |     die (EXIT_TROUBLE, 0, "%s", _("write failed"));[0m
  161 |   else if (fclose (stdout) != 0)[0m
      | [0;32m  } 
[0m[1mcmp.c:161:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |   else if (fclose (stdout) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  162 |     die (EXIT_TROUBLE, errno, "%s", _("standard output"));[0m
      | [0;1;32m                                                          
[0m[1mcmp.c:193:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |   for (p = option_help_msgid;  *p;  p++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  194 |     printf ("  %s\n", _(*p));[0m
      | [0;1;32m                             
[0m[1mcmp.c:222:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |          != -1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m[1mcmp.c:228:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  228 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mcmp.c:231:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  231 |         specify_ignore_initial (0, &optarg, ':');[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  232 |         if (*optarg++ == ':')[0m
  233 |           specify_ignore_initial (1, &optarg, 0);[0m
  234 |         else if (ignore_initial[1] < ignore_initial[0])[0m
  235 |           ignore_initial[1] = ignore_initial[0];[0m
  236 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mcmp.c:232:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |         if (*optarg++ == ':')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  233 |           specify_ignore_initial (1, &optarg, 0);[0m
  234 |         else if (ignore_initial[1] < ignore_initial[0])[0m
      | [0;32m        } 
[0m[1mcmp.c:234:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |         else if (ignore_initial[1] < ignore_initial[0])[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  235 |           ignore_initial[1] = ignore_initial[0];[0m
      | [0;1;32m                                                
[0m[1mcmp.c:239:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |         specify_comparison_type (type_all_diffs);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  240 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mcmp.c:243:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  243 |         {[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  244 |           intmax_t n;[0m
  245 |           if (xstrtoimax (optarg, 0, 0, &n, valid_suffixes) != LONGINT_OK[0m
  246 |               || n < 0)[0m
  247 |             try_help ("invalid --bytes value '%s'", optarg);[0m
  248 |           if (! (0 <= bytes && bytes < n))[0m
  249 |             bytes = n;[0m
  250 |         }[0m
  251 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mcmp.c:246:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |               || n < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  247 |             try_help ("invalid --bytes value '%s'", optarg);[0m
      | [0;1;32m                                                            
[0m[1mcmp.c:248:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |           if (! (0 <= bytes && bytes < n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  249 |             bytes = n;[0m
      | [0;1;32m                      
[0m[1mcmp.c:254:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  254 |         specify_comparison_type (type_status);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  255 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mcmp.c:258:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  258 |         version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, Version,[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  259 |                      AUTHORS, nullptr);[0m
  260 |         check_stdout ();[0m
  261 |         return EXIT_SUCCESS;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mcmp.c:264:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  264 |         usage ();[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  265 |         check_stdout ();[0m
  266 |         return EXIT_SUCCESS;[0m
      | [0;1;32m                           
[0m      | [0;32m                           ;} 
[0m[1mcmp.c:269:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  269 |         try_help (0, 0);[0m
      | [0;1;32m        ^              
[0m      | [0;32m        {              ;} 
[0m[1mcmp.c:272:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |   if (optind == argc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  273 |     try_help ("missing operand after '%s'", argv[argc - 1]);[0m
      | [0;1;32m                                                            
[0m[1mcmp.c:284:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |   if (optind < argc)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  285 |     try_help ("extra operand '%s'", argv[optind]);[0m
      | [0;1;32m                                                  
[0m[1mcmp.c:292:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |           && file_name_cmp (file[0], file[1]) == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  293 |         return EXIT_SUCCESS;[0m
      | [0;1;32m                            
[0m[1mcmp.c:298:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |           if (O_BINARY && ! isatty (STDIN_FILENO))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  299 |             set_binary_mode (STDIN_FILENO, O_BINARY);[0m
      | [0;1;32m                                                     
[0m[1mcmp.c:307:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |               if (comparison_type != type_status)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  308 |                 error (0, errno, "%s", file[f]);[0m
      | [0;1;32m                                                
[0m[1mcmp.c:328:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |       && file_position (0) == file_position (1))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  329 |     return EXIT_SUCCESS;[0m
      | [0;1;32m                        
[0m[1mcmp.c:340:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |           && 0 < same_file (&outstat, &nullstat))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  341 |         comparison_type = type_no_stdout;[0m
      | [0;1;32m                                         
[0m[1mcmp.c:355:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |       if (s0 < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  356 |         s0 = 0;[0m
      | [0;1;32m               
[0m[1mcmp.c:357:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |       if (s1 < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  358 |         s1 = 0;[0m
      | [0;1;32m               
[0m[1mcmp.c:359:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |       if (s0 != s1 && (bytes < 0 || MIN (s0, s1) < bytes))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  360 |         exit (EXIT_FAILURE);[0m
      | [0;1;32m                            
[0m[1mcmp.c:377:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |   for (int f = 0; f < 2; f++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  378 |     if (close (file_desc[f]) != 0)[0m
  379 |       die (EXIT_TROUBLE, errno, "%s", file[f]);[0m
      | [0;1;32m                                               
[0m[1mcmp.c:378:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |     if (close (file_desc[f]) != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  379 |       die (EXIT_TROUBLE, errno, "%s", file[f]);[0m
      | [0;1;32m                                               
[0m[1mcmp.c:380:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |   if (exit_status != EXIT_SUCCESS && comparison_type < type_no_stdout)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  381 |     check_stdout ();[0m
      | [0;1;32m                    
[0m[1mcmp.c:414:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |       for (f = 0; f < 2; f++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  415 |         if (0 <= stat_buf[f].st_size && S_ISREG (stat_buf[f].st_mode))[0m
  416 |           {[0m
  417 |             off_t file_bytes = stat_buf[f].st_size - file_position (f);[0m
  418 |             if (file_bytes < byte_number_max)[0m
  419 |               byte_number_max = file_bytes;[0m
  420 |           }[0m
      | [0;1;32m           
[0m[1mcmp.c:418:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |             if (file_bytes < byte_number_max)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  419 |               byte_number_max = file_bytes;[0m
      | [0;1;32m                                           
[0m[1mcmp.c:422:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |       for (offset_width = 1; (byte_number_max /= 10) != 0; offset_width++)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  423 |         continue;[0m
      | [0;1;32m                 
[0m[1mcmp.c:438:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |                   if (r == SIZE_MAX)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  439 |                     die (EXIT_TROUBLE, errno, "%s", file[f]);[0m
      | [0;1;32m                                                             
[0m[1mcmp.c:454:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |           if (remaining < bytes_to_read)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  455 |             bytes_to_read = remaining;[0m
      | [0;1;32m                                      
[0m[1mcmp.c:460:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |       if (read0 == SIZE_MAX)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  461 |         die (EXIT_TROUBLE, errno, "%s", file[0]);[0m
      | [0;1;32m                                                 
[0m[1mcmp.c:463:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |       if (read1 == SIZE_MAX)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  464 |         die (EXIT_TROUBLE, errno, "%s", file[1]);[0m
      | [0;1;32m                                                 
[0m[1mcmp.c:469:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |       if (memcmp (buf0, buf1, smaller) == 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  470 |         first_diff = smaller;[0m
  471 |       else[0m
      | [0;32m      } 
[0m[1mcmp.c:474:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |           if (read0 >= read1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  475 |             buf1[read0] = 0x55; /* arbitrary */[0m
      | [0;1;32m                                               
[0m[1mcmp.c:476:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |           if (read1 >= read0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  477 |             buf0[read1] = 0x79; /* arbitrary and distinct from the above */[0m
      | [0;1;32m                                                                           
[0m[1mcmp.c:481:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  481 |           memset (buf0 + read0 + 1, 0,[0m
      | [0;1;32m          ^~~~~~
[0m[1mcmp.c:481:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  481 |           memset (buf0 + read0 + 1, 0,[0m
      | [0;1;32m          ^~~~~~
[0m[1mcmp.c:483:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  483 |           memset (buf1 + read1 + 1, 0,[0m
      | [0;1;32m          ^~~~~~
[0m[1mcmp.c:483:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  483 |           memset (buf1 + read1 + 1, 0,[0m
      | [0;1;32m          ^~~~~~
[0m[1mcmp.c:501:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  501 |               {[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mcmp.c:544:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  544 |               return EXIT_FAILURE;[0m
      | [0;1;32m              ^                  
[0m      | [0;32m              {                  ;} 
[0m[1mcmp.c:547:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  547 |               do[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mcmp.c:558:27: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
  558 |                           printf ("%*s %3o %3o\n",[0m
      | [0;1;32m                          ^
[0m  559 |                                   offset_width, byte_num, c0, c1);[0m
      | [0;1;32m                                  ~~~~~~~~~~~~
[0m[1mcmp.c:407:3: [0m[0;1;36mnote: [0m'offset_width' declared without an initial value[0m
  407 |   int offset_width IF_LINT (= 0); /* IF_LINT due to GCC bug 101768.  */[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mcmp.c:409:7: [0m[0;1;36mnote: [0mAssuming 'comparison_type' is not equal to type_all_diffs[0m
  409 |   if (comparison_type == type_all_diffs)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcmp.c:409:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  409 |   if (comparison_type == type_all_diffs)[0m
      | [0;1;32m  ^
[0m[1mcmp.c:426:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  426 |   for (f = 0; f < 2; f++)[0m
      | [0;1;32m  ^
[0m[1mcmp.c:429:11: [0m[0;1;36mnote: [0mAssuming 'ig' is 0[0m
  429 |       if (ig && file_position (f) == -1)[0m
      | [0;1;32m          ^~
[0m[1mcmp.c:429:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  429 |       if (ig && file_position (f) == -1)[0m
      | [0;1;32m             ^
[0m[1mcmp.c:426:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  426 |   for (f = 0; f < 2; f++)[0m
      | [0;1;32m  ^
[0m[1mcmp.c:429:11: [0m[0;1;36mnote: [0mAssuming 'ig' is 0[0m
  429 |       if (ig && file_position (f) == -1)[0m
      | [0;1;32m          ^~
[0m[1mcmp.c:429:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  429 |       if (ig && file_position (f) == -1)[0m
      | [0;1;32m             ^
[0m[1mcmp.c:426:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 450[0m
  426 |   for (f = 0; f < 2; f++)[0m
      | [0;1;32m  ^
[0m[1mcmp.c:452:11: [0m[0;1;36mnote: [0mAssuming 'remaining' is < 0[0m
  452 |       if (0 <= remaining)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1mcmp.c:452:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  452 |       if (0 <= remaining)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:460:11: [0m[0;1;36mnote: [0mAssuming 'read0' is not equal to SIZE_MAX[0m
  460 |       if (read0 == SIZE_MAX)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mcmp.c:460:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  460 |       if (read0 == SIZE_MAX)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:463:11: [0m[0;1;36mnote: [0mAssuming 'read1' is not equal to SIZE_MAX[0m
  463 |       if (read1 == SIZE_MAX)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mcmp.c:463:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  463 |       if (read1 == SIZE_MAX)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:466:17: [0m[0;1;36mnote: [0mAssuming 'read0' is > 'read1'[0m
  466 |       smaller = MIN (read0, read1);[0m
      | [0;1;32m                ^
[0m[1m./system.h:108:20: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
  108 | #define MIN(a, b) ((a) <= (b) ? (a) : (b))[0m
      | [0;1;32m                   ^~~~~~~~~~
[0m[1mcmp.c:466:17: [0m[0;1;36mnote: [0m'?' condition is false[0m
  466 |       smaller = MIN (read0, read1);[0m
      | [0;1;32m                ^
[0m[1m./system.h:108:20: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
  108 | #define MIN(a, b) ((a) <= (b) ? (a) : (b))[0m
      | [0;1;32m                   ^
[0m[1mcmp.c:469:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  469 |       if (memcmp (buf0, buf1, smaller) == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcmp.c:469:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  469 |       if (memcmp (buf0, buf1, smaller) == 0)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:474:15: [0m[0;1;36mnote: [0mAssuming 'read0' is >= 'read1'[0m
  474 |           if (read0 >= read1)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~
[0m[1mcmp.c:474:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  474 |           if (read0 >= read1)[0m
      | [0;1;32m          ^
[0m[1mcmp.c:476:15: [0m[0;1;36mnote: [0mAssuming 'read1' is < 'read0'[0m
  476 |           if (read1 >= read0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~
[0m[1mcmp.c:476:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  476 |           if (read1 >= read0)[0m
      | [0;1;32m          ^
[0m[1mcmp.c:490:11: [0m[0;1;36mnote: [0mAssuming 'comparison_type' is not equal to type_first_diff[0m
  490 |       if (comparison_type == type_first_diff && first_diff != 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcmp.c:490:46: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  490 |       if (comparison_type == type_first_diff && first_diff != 0)[0m
      | [0;1;32m                                             ^
[0m[1mcmp.c:496:11: [0m[0;1;36mnote: [0m'first_diff' is < 'smaller'[0m
  496 |       if (first_diff < smaller)[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mcmp.c:496:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  496 |       if (first_diff < smaller)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:498:11: [0m[0;1;36mnote: [0mControl jumps to 'case type_all_diffs:'  at line 546[0m
  498 |           switch (comparison_type)[0m
      | [0;1;32m          ^
[0m[1mcmp.c:551:23: [0m[0;1;36mnote: [0mAssuming 'c0' is not equal to 'c1'[0m
  551 |                   if (c0 != c1)[0m
      | [0;1;32m                      ^~~~~~~~
[0m[1mcmp.c:551:19: [0m[0;1;36mnote: [0mTaking true branch[0m
  551 |                   if (c0 != c1)[0m
      | [0;1;32m                  ^
[0m[1mcmp.c:555:27: [0m[0;1;36mnote: [0mAssuming 'opt_print_bytes' is false[0m
  555 |                       if (!opt_print_bytes)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mcmp.c:555:23: [0m[0;1;36mnote: [0mTaking true branch[0m
  555 |                       if (!opt_print_bytes)[0m
      | [0;1;32m                      ^
[0m[1mcmp.c:558:27: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
  558 |                           printf ("%*s %3o %3o\n",[0m
      | [0;1;32m                          ^
[0m  559 |                                   offset_width, byte_num, c0, c1);[0m
      | [0;1;32m                                  ~~~~~~~~~~~~
[0m[1mcmp.c:567:27: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
  567 |                           printf ("%*s %3o %-4s %3o %s\n",[0m
      | [0;1;32m                          ^
[0m  568 |                                   offset_width, byte_num, c0, s0, c1, s1);[0m
      | [0;1;32m                                  ~~~~~~~~~~~~
[0m[1mcmp.c:407:3: [0m[0;1;36mnote: [0m'offset_width' declared without an initial value[0m
  407 |   int offset_width IF_LINT (= 0); /* IF_LINT due to GCC bug 101768.  */[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1mcmp.c:409:7: [0m[0;1;36mnote: [0mAssuming 'comparison_type' is not equal to type_all_diffs[0m
  409 |   if (comparison_type == type_all_diffs)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcmp.c:409:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  409 |   if (comparison_type == type_all_diffs)[0m
      | [0;1;32m  ^
[0m[1mcmp.c:426:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  426 |   for (f = 0; f < 2; f++)[0m
      | [0;1;32m  ^
[0m[1mcmp.c:429:11: [0m[0;1;36mnote: [0mAssuming 'ig' is 0[0m
  429 |       if (ig && file_position (f) == -1)[0m
      | [0;1;32m          ^~
[0m[1mcmp.c:429:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  429 |       if (ig && file_position (f) == -1)[0m
      | [0;1;32m             ^
[0m[1mcmp.c:426:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  426 |   for (f = 0; f < 2; f++)[0m
      | [0;1;32m  ^
[0m[1mcmp.c:429:11: [0m[0;1;36mnote: [0mAssuming 'ig' is 0[0m
  429 |       if (ig && file_position (f) == -1)[0m
      | [0;1;32m          ^~
[0m[1mcmp.c:429:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  429 |       if (ig && file_position (f) == -1)[0m
      | [0;1;32m             ^
[0m[1mcmp.c:426:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 450[0m
  426 |   for (f = 0; f < 2; f++)[0m
      | [0;1;32m  ^
[0m[1mcmp.c:452:11: [0m[0;1;36mnote: [0mAssuming 'remaining' is < 0[0m
  452 |       if (0 <= remaining)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1mcmp.c:452:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  452 |       if (0 <= remaining)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:460:11: [0m[0;1;36mnote: [0mAssuming 'read0' is not equal to SIZE_MAX[0m
  460 |       if (read0 == SIZE_MAX)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mcmp.c:460:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  460 |       if (read0 == SIZE_MAX)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:463:11: [0m[0;1;36mnote: [0mAssuming 'read1' is not equal to SIZE_MAX[0m
  463 |       if (read1 == SIZE_MAX)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mcmp.c:463:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  463 |       if (read1 == SIZE_MAX)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:466:17: [0m[0;1;36mnote: [0mAssuming 'read0' is > 'read1'[0m
  466 |       smaller = MIN (read0, read1);[0m
      | [0;1;32m                ^
[0m[1m./system.h:108:20: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
  108 | #define MIN(a, b) ((a) <= (b) ? (a) : (b))[0m
      | [0;1;32m                   ^~~~~~~~~~
[0m[1mcmp.c:466:17: [0m[0;1;36mnote: [0m'?' condition is false[0m
  466 |       smaller = MIN (read0, read1);[0m
      | [0;1;32m                ^
[0m[1m./system.h:108:20: [0m[0;1;36mnote: [0mexpanded from macro 'MIN'[0m
  108 | #define MIN(a, b) ((a) <= (b) ? (a) : (b))[0m
      | [0;1;32m                   ^
[0m[1mcmp.c:469:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  469 |       if (memcmp (buf0, buf1, smaller) == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcmp.c:469:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  469 |       if (memcmp (buf0, buf1, smaller) == 0)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:474:15: [0m[0;1;36mnote: [0mAssuming 'read0' is >= 'read1'[0m
  474 |           if (read0 >= read1)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~
[0m[1mcmp.c:474:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  474 |           if (read0 >= read1)[0m
      | [0;1;32m          ^
[0m[1mcmp.c:476:15: [0m[0;1;36mnote: [0mAssuming 'read1' is < 'read0'[0m
  476 |           if (read1 >= read0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~
[0m[1mcmp.c:476:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  476 |           if (read1 >= read0)[0m
      | [0;1;32m          ^
[0m[1mcmp.c:490:11: [0m[0;1;36mnote: [0mAssuming 'comparison_type' is not equal to type_first_diff[0m
  490 |       if (comparison_type == type_first_diff && first_diff != 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcmp.c:490:46: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  490 |       if (comparison_type == type_first_diff && first_diff != 0)[0m
      | [0;1;32m                                             ^
[0m[1mcmp.c:496:11: [0m[0;1;36mnote: [0m'first_diff' is < 'smaller'[0m
  496 |       if (first_diff < smaller)[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mcmp.c:496:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  496 |       if (first_diff < smaller)[0m
      | [0;1;32m      ^
[0m[1mcmp.c:498:11: [0m[0;1;36mnote: [0mControl jumps to 'case type_all_diffs:'  at line 546[0m
  498 |           switch (comparison_type)[0m
      | [0;1;32m          ^
[0m[1mcmp.c:551:23: [0m[0;1;36mnote: [0mAssuming 'c0' is not equal to 'c1'[0m
  551 |                   if (c0 != c1)[0m
      | [0;1;32m                      ^~~~~~~~
[0m[1mcmp.c:551:19: [0m[0;1;36mnote: [0mTaking true branch[0m
  551 |                   if (c0 != c1)[0m
      | [0;1;32m                  ^
[0m[1mcmp.c:555:27: [0m[0;1;36mnote: [0mAssuming 'opt_print_bytes' is true[0m
  555 |                       if (!opt_print_bytes)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mcmp.c:555:23: [0m[0;1;36mnote: [0mTaking false branch[0m
  555 |                       if (!opt_print_bytes)[0m
      | [0;1;32m                      ^
[0m[1mcmp.c:567:27: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
  567 |                           printf ("%*s %3o %-4s %3o %s\n",[0m
      | [0;1;32m                          ^
[0m  568 |                                   offset_width, byte_num, c0, s0, c1, s1);[0m
      | [0;1;32m                                  ~~~~~~~~~~~~
[0m[1mcmp.c:579:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  579 |               differing = 1;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  580 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mcmp.c:593:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |               if (byte_number == 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  594 |                 fprintf (stderr, _("cmp: EOF on %s which is empty\n"),[0m
  595 |                          shorter_file);[0m
  596 |               else[0m
      | [0;32m              } 
[0m[1mcmp.c:594:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  594 |                 fprintf (stderr, _("cmp: EOF on %s which is empty\n"),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcmp.c:594:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  594 |                 fprintf (stderr, _("cmp: EOF on %s which is empty\n"),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcmp.c:606:23: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  606 |                       fprintf (stderr,[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mcmp.c:606:23: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  606 |                       fprintf (stderr,[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mcmp.c:613:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  614 |                     fprintf (stderr,[0m
  615 |                              _("cmp: EOF on %s after byte %s\n"),[0m
  616 |                              shorter_file, byte_num);[0m
      | [0;1;32m                                                     
[0m[1mcmp.c:614:21: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  614 |                     fprintf (stderr,[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mcmp.c:614:21: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  614 |                     fprintf (stderr,[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mcmp.c:643:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  643 |   for (l0 = p0, l1 = p1;  *l0 == *l1;  l0++, l1++)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  644 |     continue;[0m
      | [0;1;32m             
[0m[1mcmp.c:650:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |        c0++, c1++)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  651 |     continue;[0m
      | [0;1;32m             
[0m[1mcmp.c:667:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  667 |   for (p = buf; (p = rawmemchr (p, '\n')) != lim; p++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  668 |     count++;[0m
      | [0;1;32m            
[0m73 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[124/126][160.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpp950ksui.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/lib/exclude.c
[1mexclude.c:151:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |           if (options & EXCLUDE_REGEX)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  152 |             return true;[0m
      | [0;1;32m                        
[0m[1mexclude.c:153:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  153 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mexclude.c:156:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |           if (options & EXCLUDE_REGEX)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  157 |             continue;[0m
  158 |           else[0m
  159 |             str += ! (options & FNM_NOESCAPE) && *str;[0m
  160 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mexclude.c:156:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |           if (options & EXCLUDE_REGEX)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  157 |             continue;[0m
  158 |           else[0m
      | [0;32m          } 
[0m[1mexclude.c:158:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  159 |             str += ! (options & FNM_NOESCAPE) && *str;[0m
      | [0;1;32m                                                      
[0m[1mexclude.c:163:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |           if (options & FNM_EXTMATCH && *str == '(')[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  164 |             return true;[0m
      | [0;1;32m                        
[0m[1mexclude.c:165:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  165 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mexclude.c:171:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |           return false;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1mexclude.c:180:5: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |   do[0m
      | [0;1;32m    ^
[0m      | [0;32m     {
[0m  181 |     q += *q == '\\' && q[1];[0m
  182 |   while ((*str++ = *q++));[0m
      | [0;32m  } 
[0m[1mexclude.c:209:8: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  209 |   for (mbui_init (iter, p); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m       ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mexclude.c:209:8: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  209 |   for (mbui_init (iter, p); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m       ^
[0m[1m./mbuiter.h:207:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  207 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mexclude.c:214:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |       if (m.wc_valid)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  215 |         wc = towlower (m.wc);[0m
  216 |       else[0m
      | [0;32m      } 
[0m[1mexclude.c:216:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  217 |         wc = *m.ptr;[0m
      | [0;1;32m                    
[0m[1mexclude.c:260:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  260 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mexclude.c:263:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  263 |       sp->v.table = hash_initialize (0, NULL,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  264 |                                      (options & FNM_CASEFOLD) ?[0m
  265 |                                        string_hasher_ci[0m
  266 |                                        : string_hasher,[0m
  267 |                                      (options & FNM_CASEFOLD) ?[0m
  268 |                                        string_compare_ci[0m
  269 |                                        : string_compare,[0m
  270 |                                      string_free);[0m
  271 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mexclude.c:284:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  284 |       for (idx_t i = 0; i < seg->v.pat.exclude_count; i++)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  285 |         {[0m
  286 |           if (seg->v.pat.exclude[i].options & EXCLUDE_REGEX)[0m
  287 |             regfree (&seg->v.pat.exclude[i].v.re);[0m
  288 |         }[0m
  289 |       free (seg->v.pat.exclude);[0m
  290 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mexclude.c:286:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |           if (seg->v.pat.exclude[i].options & EXCLUDE_REGEX)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  287 |             regfree (&seg->v.pat.exclude[i].v.re);[0m
      | [0;1;32m                                                  
[0m[1mexclude.c:293:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  293 |       hash_free (seg->v.table);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  294 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mexclude.c:330:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |   if (! (options & FNM_LEADING_DIR))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  331 |     return ((options & FNM_CASEFOLD)[0m
  332 |             ? mbscasecmp (pattern, f)[0m
  333 |             : strcmp (pattern, f));[0m
  334 |   else if (! (options & FNM_CASEFOLD))[0m
      | [0;32m  } 
[0m[1mexclude.c:341:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |           if (r == '/')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  342 |             r = 0;[0m
      | [0;1;32m                  
[0m[1mexclude.c:361:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |           if (p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  362 |             *p = '\0';[0m
      | [0;1;32m                      
[0m[1mexclude.c:364:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |           if (!p || r <= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  365 |             break;[0m
      | [0;1;32m                  
[0m[1mexclude.c:382:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |   if (! (options & EXCLUDE_ANCHORED))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  383 |     for (p = f; *p && ! matched; p++)[0m
  384 |       if (*p == '/' && p[1] != '/')[0m
  385 |         matched = ((*matcher) (pattern, p + 1, options) == 0);[0m
      | [0;1;32m                                                              
[0m[1mexclude.c:383:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |     for (p = f; *p && ! matched; p++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  384 |       if (*p == '/' && p[1] != '/')[0m
  385 |         matched = ((*matcher) (pattern, p + 1, options) == 0);[0m
      | [0;1;32m                                                              
[0m[1mexclude.c:384:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |       if (*p == '/' && p[1] != '/')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  385 |         matched = ((*matcher) (pattern, p + 1, options) == 0);[0m
      | [0;1;32m                                                              
[0m[1mexclude.c:410:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |       if (exclude_patopts (exclude + i, f))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  411 |         return true;[0m
      | [0;1;32m                    
[0m[1mexclude.c:429:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  429 |       strcpy (buffer, f);[0m
      | [0;1;32m      ^~~~~~
[0m[1mexclude.c:429:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  429 |       strcpy (buffer, f);[0m
      | [0;1;32m      ^~~~~~
[0m[1mexclude.c:433:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |           if (hash_lookup (table, buffer))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  434 |             return true;[0m
      | [0;1;32m                        
[0m[1mexclude.c:450:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |           if (f)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  451 |             f++;[0m
      | [0;1;32m                
[0m[1mexclude.c:453:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  454 |         break;[0m
      | [0;1;32m              
[0m[1mexclude.c:471:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |   if (!ex->head)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  472 |     return false;[0m
      | [0;1;32m                 
[0m[1mexclude.c:481:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |           if (!filename)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  482 |             filename = xmalloc (strlen (f) + 1);[0m
      | [0;1;32m                                                
[0m[1mexclude.c:483:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  483 |           if (file_name_matches (seg, f, filename))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  484 |             break;[0m
      | [0;1;32m                  
[0m[1mexclude.c:488:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |           if (file_pattern_matches (seg, f))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  489 |             break;[0m
      | [0;1;32m                  
[0m[1mexclude.c:523:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |                  == (options & EXCLUDE_INCLUDE))))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  524 |         new_exclude_segment (ex, exclude_pattern, options);[0m
      | [0;1;32m                                                           
[0m[1mexclude.c:529:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |       if (pat->exclude_count == pat->exclude_alloc)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  530 |         pat->exclude = xpalloc (pat->exclude, &pat->exclude_alloc, 1, -1,[0m
  531 |                                 sizeof *pat->exclude);[0m
      | [0;1;32m                                                      
[0m[1mexclude.c:546:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |               while (len > 0 && ISSLASH (pattern[len-1]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  547 |                 --len;[0m
      | [0;1;32m                      
[0m[1mexclude.c:549:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |               if (len == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  550 |                 rc = 1;[0m
  551 |               else[0m
      | [0;32m              } 
[0m[1mexclude.c:554:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  554 |                   memcpy (tmp, pattern, len);[0m
      | [0;1;32m                  ^~~~~~
[0m[1mexclude.c:554:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  554 |                   memcpy (tmp, pattern, len);[0m
      | [0;1;32m                  ^~~~~~
[0m[1mexclude.c:555:19: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  555 |                   strcpy (tmp + len, "(/.*)?");[0m
      | [0;1;32m                  ^~~~~~
[0m[1mexclude.c:555:19: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  555 |                   strcpy (tmp + len, "(/.*)?");[0m
      | [0;1;32m                  ^~~~~~
[0m[1mexclude.c:560:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  561 |             rc = regcomp (&patopts->v.re, pattern, cflags);[0m
      | [0;1;32m                                                           
[0m[1mexclude.c:586:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  586 |                  == (options & exclude_hash_flags))))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  587 |         new_exclude_segment (ex, exclude_hash, options);[0m
      | [0;1;32m                                                        
[0m[1mexclude.c:591:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |       if ((options & (EXCLUDE_WILDCARDS | FNM_NOESCAPE)) == EXCLUDE_WILDCARDS)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  592 |         unescape_pattern (str);[0m
      | [0;1;32m                               
[0m[1mexclude.c:594:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |       if (p != str)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  595 |         free (str);[0m
      | [0;1;32m                   
[0m[1mexclude.c:621:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |       if (buf_count == buf_alloc)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  622 |         buf = xpalloc (buf, &buf_alloc, 1, -1, 1);[0m
      | [0;1;32m                                                  
[0m[1mexclude.c:626:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |   if (ferror (fp))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  627 |     e = errno;[0m
      | [0;1;32m              
[0m[1mexclude.c:637:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  637 |   for (p = buf; p < lim; p++)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m[1mexclude.c:644:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |             for (; ; pattern_end--)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  645 |               if (pattern_end == pattern)[0m
  646 |                 goto next_pattern;[0m
  647 |               else if (! isspace ((unsigned char) pattern_end[-1]))[0m
  648 |                 break;[0m
      | [0;1;32m                      
[0m[1mexclude.c:645:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |               if (pattern_end == pattern)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  646 |                 goto next_pattern;[0m
  647 |               else if (! isspace ((unsigned char) pattern_end[-1]))[0m
      | [0;32m              } 
[0m[1mexclude.c:647:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |               else if (! isspace ((unsigned char) pattern_end[-1]))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  648 |                 break;[0m
      | [0;1;32m                      
[0m[1mexclude.c:674:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |   if (strcmp (file_name, "-") == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  675 |     return add_exclude_fp (call_addfn, ex, stdin, options, line_end, &add_func);[0m
      | [0;1;32m                                                                                
[0m[1mexclude.c:678:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  678 |   if (!in)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  679 |     return -1;[0m
      | [0;1;32m              
[0m[1mexclude.c:682:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |   if (fclose (in) != 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  683 |     return -1;[0m
      | [0;1;32m              
[0m64 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[125/126][158.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpfpo5xv0g.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/diff3.c
[1mdiff3.c:291:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  291 |           text = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  292 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:294:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  294 |           show_2nd = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  295 |           flagging = true;[0m
  296 |           incompat |= 1 << OPTION_A;[0m
  297 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:299:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  299 |           overlap_only = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  300 |           incompat |= 1 << OPTION_x;[0m
  301 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:303:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  303 |           simple_only = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  304 |           incompat |= 1 << OPTION_3;[0m
  305 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:307:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  307 |           finalwrite = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  308 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:310:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  310 |           merge = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  311 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:313:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  313 |           overlap_only = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  314 |           incompat |= 1 << OPTION_X;[0m
  315 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:317:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  317 |           flagging = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  318 |           incompat |= 1 << OPTION_E;[0m
  319 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:321:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  321 |           incompat |= 1 << OPTION_e;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  322 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:324:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  324 |           initial_tab = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  325 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:327:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  327 |           strip_trailing_cr = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  328 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:330:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  330 |           version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, Version,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  331 |                        AUTHORS, nullptr);[0m
  332 |           check_stdout ();[0m
  333 |           return EXIT_SUCCESS;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mdiff3.c:335:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  335 |           diff_program = optarg;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  336 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:338:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  338 |           usage ();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  339 |           check_stdout ();[0m
  340 |           return EXIT_SUCCESS;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mdiff3.c:343:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  343 |           if (tag_count < 3)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  344 |             {[0m
  345 |               tag_strings[tag_count++] = optarg;[0m
  346 |               break;[0m
  347 |             }[0m
  348 |           try_help ("too many file label options", 0);[0m
      | [0;1;32m                                                     
[0m      | [0;32m                                                     ;} 
[0m[1mdiff3.c:350:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  350 |           try_help (0, 0);[0m
      | [0;1;32m          ^              
[0m      | [0;32m          {              ;} 
[0m[1mdiff3.c:362:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  363 |     try_help ("incompatible options", 0);[0m
      | [0;1;32m                                         
[0m[1mdiff3.c:367:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |       if (argc - optind < 3)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  368 |         try_help ("missing operand after '%s'", argv[argc - 1]);[0m
  369 |       else[0m
      | [0;32m      } 
[0m[1mdiff3.c:369:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  370 |         try_help ("extra operand '%s'", argv[optind + 3]);[0m
      | [0;1;32m                                                          
[0m[1mdiff3.c:375:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |   for (i = tag_count; i < 3; i++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  376 |     tag_strings[i] = file[i];[0m
      | [0;1;32m                             
[0m[1mdiff3.c:402:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |       if (STREQ (file[0], "-") || STREQ (file[common], "-"))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  403 |         fatal ("'-' specified for more than one input file");[0m
      | [0;1;32m                                                             
[0m[1mdiff3.c:410:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |   for (i = 0; i < 3; i++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  411 |     rev_mapping[mapping[i]] = i;[0m
      | [0;1;32m                                
[0m[1mdiff3.c:434:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  434 |   if (edscript)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  435 |     conflicts_found[0m
  436 |       = output_diff3_edscript (stdout, diff3, mapping, rev_mapping,[0m
  437 |                                tag_strings[0], tag_strings[1], tag_strings[2]);[0m
  438 |   else if (merge)[0m
      | [0;32m  } 
[0m[1mdiff3.c:444:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |       if (ferror (stdin))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  445 |         fatal ("read failed");[0m
      | [0;1;32m                              
[0m[1mdiff3.c:462:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |   if (reason_msgid)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  463 |     error (0, 0, _(reason_msgid), operand);[0m
      | [0;1;32m                                           
[0m[1mdiff3.c:471:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |   if (ferror (stdout))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  472 |     fatal ("write failed");[0m
  473 |   else if (fclose (stdout) != 0)[0m
      | [0;32m  } 
[0m[1mdiff3.c:473:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |   else if (fclose (stdout) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  474 |     perror_with_exit (_("standard output"));[0m
      | [0;1;32m                                            
[0m[1mdiff3.c:515:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |   for (p = option_help_msgid;  *p;  p++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  516 |     if (**p)[0m
  517 |       printf ("  %s\n", _(*p));[0m
  518 |     else[0m
  519 |       putchar ('\n');[0m
      | [0;1;32m                     
[0m[1mdiff3.c:516:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |     if (**p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  517 |       printf ("  %s\n", _(*p));[0m
  518 |     else[0m
      | [0;32m    } 
[0m[1mdiff3.c:518:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  519 |       putchar ('\n');[0m
      | [0;1;32m                     
[0m[1mdiff3.c:655:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  655 |       if (!current[0])[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  656 |         base_water_thread = 1;[0m
  657 |       else if (!current[1])[0m
      | [0;32m      } 
[0m[1mdiff3.c:657:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  657 |       else if (!current[1])[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  658 |         base_water_thread = 0;[0m
  659 |       else[0m
      | [0;32m      } 
[0m[1mdiff3.c:659:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  659 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  660 |         base_water_thread =[0m
  661 |           (D_LOWLINE (current[0], FC) > D_LOWLINE (current[1], FC));[0m
      | [0;1;32m                                                                    
[0m[1mdiff3.c:688:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |           if (using[other_thread])[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  689 |             last_using[other_thread]->next = other_diff;[0m
  690 |           else[0m
      | [0;32m          } 
[0m[1mdiff3.c:690:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  690 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  691 |             using[other_thread] = other_diff;[0m
      | [0;1;32m                                             
[0m[1mdiff3.c:724:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  724 |       if (!tmpblock)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  725 |         fatal ("internal error: screwup in format of diff blocks");[0m
      | [0;1;32m                                                                   
[0m[1mdiff3.c:773:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  774 |     if (using[d])[0m
  775 |       {[0m
  776 |         low[d] = D_LOW_MAPLINE (using[d], FC, FO, lowc);[0m
  777 |         high[d] = D_HIGH_MAPLINE (last_using[d], FC, FO, highc);[0m
  778 |       }[0m
  779 |     else[0m
  780 |       {[0m
  781 |         low[d] = D_HIGH_MAPLINE (last_diff3, FILEC, FILE0 + d, lowc);[0m
  782 |         high[d] = D_HIGH_MAPLINE (last_diff3, FILEC, FILE0 + d, highc);[0m
  783 |       }[0m
      | [0;1;32m       
[0m[1mdiff3.c:791:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
  793 |       {[0m
  794 |         lin result_offset = D_LOWLINE (ptr, FC) - lowc;[0m
  795 | [0m
  796 |         if (!copy_stringlist (D_LINEARRAY (ptr, FC),[0m
  797 |                               D_LENARRAY (ptr, FC),[0m
  798 |                               D_LINEARRAY (result, FILEC) + result_offset,[0m
  799 |                               D_LENARRAY (result, FILEC) + result_offset,[0m
  800 |                               D_NUMLINES (ptr, FC)))[0m
  801 |           return 0;[0m
  802 |       }[0m
      | [0;1;32m       
[0m[1mdiff3.c:800:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |                               D_NUMLINES (ptr, FC)))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  801 |           return 0;[0m
      | [0;1;32m                   
[0m[1mdiff3.c:816:45: [0m[0;1;35mwarning: [0m[1mArray access results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
  816 |           D_RELNUM (result, FILE0 + d, i) = D_RELNUM (result, FILEC, i);[0m
      | [0;1;32m                                            ^
[0m[1mdiff3.c:118:3: [0m[0;1;36mnote: [0mexpanded from macro 'D_RELNUM'[0m
  118 |   ((diff)->lines[filenum][linenum])[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:286:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  286 |   while ((c = getopt_long (argc, argv, "aeimvx3AEL:TX", longopts, 0)) != -1)[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:286:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 355[0m
  286 |   while ((c = getopt_long (argc, argv, "aeimvx3AEL:TX", longopts, 0)) != -1)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:355:27: [0m[0;1;36mnote: [0mAssuming 'merge' is true[0m
  355 |   edscript = !!incompat & !merge;[0m
      | [0;1;32m                          ^~~~~~
[0m[1mdiff3.c:360:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  360 |   if (incompat & (incompat - 1)  /* Ensure at most one of -AeExX3.  */[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:361:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  361 |       || finalwrite & merge /* -i -m would rewrite input file.  */[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:360:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  360 |   if (incompat & (incompat - 1)  /* Ensure at most one of -AeExX3.  */[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:362:11: [0m[0;1;36mnote: [0m'tag_count' is 0[0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mdiff3.c:362:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:365:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  365 |   if (argc - optind != 3)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:365:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  365 |   if (argc - optind != 3)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  375 |   for (i = tag_count; i < 3; i++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 394[0m
[1mdiff3.c:396:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  396 |   if (STREQ (file[common], "-"))[0m
      | [0;1;32m      ^
[0m[1m./system.h:208:22: [0m[0;1;36mnote: [0mexpanded from macro 'STREQ'[0m
  208 | #define STREQ(a, b) (strcmp (a, b) == 0)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:396:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  396 |   if (STREQ (file[common], "-"))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  410 |   for (i = 0; i < 3; i++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 415[0m
[1mdiff3.c:424:13: [0m[0;1;36mnote: [0mCalling 'process_diff'[0m
  424 |   thread0 = process_diff (file[rev_mapping[FILE0]], commonname, &b0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1006:10: [0m[0;1;36mnote: [0m'scan_diff' is < 'diff_limit'[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1012:12: [0m[0;1;36mnote: [0mCalling 'process_diff_control'[0m
 1012 |       dt = process_diff_control (&scan_diff, bptr);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1142:7: [0m[0;1;36mnote: [0mCalling 'readnum'[0m
 1142 |   s = readnum (skipwhite (s), &db->ranges[0][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m        ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1116:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1116 |   while (ISDIGIT (c));[0m
      | [0;1;32m         ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1111:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1111 |   do[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1119:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 's'), which participates in a condition later[0m
 1119 |   return s;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mdiff3.c:1142:7: [0m[0;1;36mnote: [0mReturning from 'readnum'[0m
 1142 |   s = readnum (skipwhite (s), &db->ranges[0][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1143:9: [0m[0;1;36mnote: [0m's' is non-null[0m
 1143 |   if (! s)[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:1143:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1143 |   if (! s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1148:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1148 |   if (*s == ',')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdiff3.c:1148:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1148 |   if (*s == ',')[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1159:3: [0m[0;1;36mnote: [0mControl jumps to 'case 100:'  at line 1167[0m
 1159 |   switch (*s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1169:7: [0m[0;1;36mnote: [0m Execution continues on line 1173[0m
 1169 |       break;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1176:7: [0m[0;1;36mnote: [0mCalling 'readnum'[0m
 1176 |   s = readnum (skipwhite (s), &db->ranges[1][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m        ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1116:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1116 |   while (ISDIGIT (c));[0m
      | [0;1;32m         ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1111:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1111 |   do[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1119:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 's'), which participates in a condition later[0m
 1119 |   return s;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mdiff3.c:1176:7: [0m[0;1;36mnote: [0mReturning from 'readnum'[0m
 1176 |   s = readnum (skipwhite (s), &db->ranges[1][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1177:9: [0m[0;1;36mnote: [0m's' is non-null[0m
 1177 |   if (! s)[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:1177:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1177 |   if (! s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1182:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1182 |   if (*s == ',')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdiff3.c:1182:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1182 |   if (*s == ',')[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1193:3: [0m[0;1;36mnote: [0mReturning without writing to '->next', which participates in a condition later[0m
 1193 |   return type;[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1193:3: [0m[0;1;36mnote: [0mReturning the value 3 (loaded from 'type'), which participates in a condition later[0m
 1193 |   return type;[0m
      | [0;1;32m  ^~~~~~~~~~~
[0m[1mdiff3.c:1012:12: [0m[0;1;36mnote: [0mReturning from 'process_diff_control'[0m
 1012 |       dt = process_diff_control (&scan_diff, bptr);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1013:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_ERROR[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1013:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mdiff3.c:1013:31: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1013:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1026:7: [0m[0;1;36mnote: [0mControl jumps to 'case DIFF_DELETE:'  at line 1031[0m
 1026 |       switch (dt)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1033:11: [0m[0;1;36mnote: [0m Execution continues on line 1043[0m
 1033 |           break;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1043:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_ADD[0m
 1043 |       if (dt != DIFF_ADD)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1043:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1043 |       if (dt != DIFF_ADD)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1048:11: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1048 |           for (i = 0; i < numlines; i++)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1048:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1057[0m
[1mdiff3.c:1057:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_CHANGE[0m
 1057 |       if (dt == DIFF_CHANGE)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1057:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1057 |       if (dt == DIFF_CHANGE)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1066:11: [0m[0;1;36mnote: [0m'dt' is equal to DIFF_DELETE[0m
 1066 |       if (dt != DIFF_DELETE)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1066:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1066 |       if (dt != DIFF_DELETE)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1006:10: [0m[0;1;36mnote: [0m'scan_diff' is >= 'diff_limit'[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1084[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1085:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 'block_list'), which participates in a condition later[0m
 1085 |   return block_list;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:424:13: [0m[0;1;36mnote: [0mReturning from 'process_diff'[0m
  424 |   thread0 = process_diff (file[rev_mapping[FILE0]], commonname, &b0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:426:3: [0m[0;1;36mnote: [0mCalling 'next_to_n2'[0m
  426 |   next_to_n2 (thread0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:258:1: [0m[0;1;36mnote: [0mReturning without writing to 'p->next', which participates in a condition later[0m
  258 | }[0m
      | [0;1;32m^
[0m[1mdiff3.c:426:3: [0m[0;1;36mnote: [0mReturning from 'next_to_n2'[0m
  426 |   next_to_n2 (thread0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:429:11: [0m[0;1;36mnote: [0mCalling 'make_3way_diff'[0m
  429 |   diff3 = make_3way_diff (thread0, thread1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:650:21: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  650 |   while (current[0] || current[1])[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:655:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  655 |       if (!current[0])[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:657:12: [0m[0;1;36mnote: [0mTaking true branch[0m
  657 |       else if (!current[1])[0m
      | [0;1;32m           ^
[0m[1mdiff3.c:682:14: [0m[0;1;36mnote: [0m'other_diff' is null[0m
  682 |       while (other_diff[0m
      | [0;1;32m             ^~~~~~~~~~
[0m[1mdiff3.c:683:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  683 |              && D_LOWLINE (other_diff, FC) <= high_water_mark + 1)[0m
      | [0;1;32m             ^
[0m[1mdiff3.c:720:18: [0m[0;1;36mnote: [0mCalling 'using_to_diff3_block'[0m
  720 |       tmpblock = using_to_diff3_block (using, last_using,[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  721 |                                        base_water_thread, high_water_thread,[0m
      | [0;1;32m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  722 |                                        last_diff3);[0m
      | [0;1;32m                                       ~~~~~~~~~~~
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:774:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  774 |     if (using[d])[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:774:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  774 |     if (using[d])[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 786[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:786:12: [0m[0;1;36mnote: [0mCalling 'create_diff3_block'[0m
  786 |   result = create_diff3_block (low[0], high[0], low[1], high[1], lowc, highc);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:928:7: [0m[0;1;36mnote: [0m'numlines' is 1[0m
  928 |   if (numlines)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mdiff3.c:928:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  928 |   if (numlines)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:940:7: [0m[0;1;36mnote: [0mAssuming 'numlines' is 0[0m
  940 |   if (numlines)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mdiff3.c:940:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  940 |   if (numlines)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:952:7: [0m[0;1;36mnote: [0mAssuming 'numlines' is 0[0m
  952 |   if (numlines)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mdiff3.c:952:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  952 |   if (numlines)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:959:7: [0m[0;1;36mnote: [0mStoring null pointer value[0m
  959 |       D_LINEARRAY (result, FILE2) = 0;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:124:3: [0m[0;1;36mnote: [0mexpanded from macro 'D_LINEARRAY'[0m
  124 |   ((diff)->lines[filenum])[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:786:12: [0m[0;1;36mnote: [0mReturning from 'create_diff3_block'[0m
  786 |   result = create_diff3_block (low[0], high[0], low[1], high[1], lowc, highc);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:791:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:792:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:796:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  796 |         if (!copy_stringlist (D_LINEARRAY (ptr, FC),[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:792:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 791[0m
  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:791:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:792:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 791[0m
  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:791:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 807[0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:807:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  807 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:813:22: [0m[0;1;36mnote: [0m'u' is non-null[0m
  813 |            i + lo < (u ? D_LOWLINE (u, FO) : hi + 1);[0m
      | [0;1;32m                     ^
[0m[1mdiff3.c:813:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mdiff3.c:812:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 820[0m
  812 |       for (i = 0;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:820:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  820 |       for (ptr = u; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:825:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  825 |           if (!copy_stringlist (D_LINEARRAY (ptr, FO),[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:835:21: [0m[0;1;36mnote: [0mField 'next' is null[0m
  835 |                i < (D_NEXT (ptr) ? D_LOWLINE (D_NEXT (ptr), FO) : hi + 1) - lo;[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:129:31: [0m[0;1;36mnote: [0mexpanded from macro 'D_NEXT'[0m
  129 | #define D_NEXT(diff)    ((diff)->next)[0m
      | [0;1;32m                                 ^
[0m[1mdiff3.c:835:21: [0m[0;1;36mnote: [0m'?' condition is false[0m
  835 |                i < (D_NEXT (ptr) ? D_LOWLINE (D_NEXT (ptr), FO) : hi + 1) - lo;[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:129:22: [0m[0;1;36mnote: [0mexpanded from macro 'D_NEXT'[0m
  129 | #define D_NEXT(diff)    ((diff)->next)[0m
      | [0;1;32m                        ^
[0m[1mdiff3.c:834:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 820[0m
  834 |           for (i = D_HIGHLINE (ptr, FO) + 1 - lo;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:820:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 807[0m
  820 |       for (ptr = u; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:807:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  807 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:813:22: [0m[0;1;36mnote: [0m'u' is null[0m
  813 |            i + lo < (u ? D_LOWLINE (u, FO) : hi + 1);[0m
      | [0;1;32m                     ^
[0m[1mdiff3.c:813:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdiff3.c:813:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  813 |            i + lo < (u ? D_LOWLINE (u, FO) : hi + 1);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:812:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  812 |       for (i = 0;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:816:45: [0m[0;1;36mnote: [0mArray access results in a null pointer dereference[0m
  816 |           D_RELNUM (result, FILE0 + d, i) = D_RELNUM (result, FILEC, i);[0m
      | [0;1;32m                                            ^
[0m[1mdiff3.c:118:3: [0m[0;1;36mnote: [0mexpanded from macro 'D_RELNUM'[0m
  118 |   ((diff)->lines[filenum][linenum])[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:829:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |                                 D_NUMLINES (ptr, FO)))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  830 |             return 0;[0m
      | [0;1;32m                     
[0m[1mdiff3.c:846:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |   if (!using[0])[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  847 |     D3_TYPE (result) = DIFF_2ND;[0m
  848 |   else if (!using[1])[0m
      | [0;32m  } 
[0m[1mdiff3.c:848:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  848 |   else if (!using[1])[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  849 |     D3_TYPE (result) = DIFF_1ST;[0m
  850 |   else[0m
      | [0;32m  } 
[0m[1mdiff3.c:860:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  860 |                                  nl0))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  861 |         D3_TYPE (result) = DIFF_ALL;[0m
  862 |       else[0m
      | [0;32m      } 
[0m[1mdiff3.c:862:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  862 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  863 |         D3_TYPE (result) = DIFF_3RD;[0m
      | [0;1;32m                                    
[0m[1mdiff3.c:888:15: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'fl') [clang-analyzer-core.NullDereference][0m
  888 |           if (*fl != *tl || memcmp (*f, *t, *fl) != 0)[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:286:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  286 |   while ((c = getopt_long (argc, argv, "aeimvx3AEL:TX", longopts, 0)) != -1)[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:286:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 355[0m
  286 |   while ((c = getopt_long (argc, argv, "aeimvx3AEL:TX", longopts, 0)) != -1)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:355:27: [0m[0;1;36mnote: [0mAssuming 'merge' is true[0m
  355 |   edscript = !!incompat & !merge;[0m
      | [0;1;32m                          ^~~~~~
[0m[1mdiff3.c:360:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  360 |   if (incompat & (incompat - 1)  /* Ensure at most one of -AeExX3.  */[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:361:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  361 |       || finalwrite & merge /* -i -m would rewrite input file.  */[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:360:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  360 |   if (incompat & (incompat - 1)  /* Ensure at most one of -AeExX3.  */[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:362:11: [0m[0;1;36mnote: [0m'tag_count' is 0[0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mdiff3.c:362:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:365:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  365 |   if (argc - optind != 3)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:365:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  365 |   if (argc - optind != 3)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  375 |   for (i = tag_count; i < 3; i++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 394[0m
[1mdiff3.c:396:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  396 |   if (STREQ (file[common], "-"))[0m
      | [0;1;32m      ^
[0m[1m./system.h:208:22: [0m[0;1;36mnote: [0mexpanded from macro 'STREQ'[0m
  208 | #define STREQ(a, b) (strcmp (a, b) == 0)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:396:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  396 |   if (STREQ (file[common], "-"))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  410 |   for (i = 0; i < 3; i++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 415[0m
[1mdiff3.c:424:13: [0m[0;1;36mnote: [0mCalling 'process_diff'[0m
  424 |   thread0 = process_diff (file[rev_mapping[FILE0]], commonname, &b0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1006:10: [0m[0;1;36mnote: [0m'scan_diff' is < 'diff_limit'[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1010:26: [0m[0;1;36mnote: [0mStoring null pointer value[0m
 1010 |       bptr->lengths[0] = bptr->lengths[1] = 0;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1012:12: [0m[0;1;36mnote: [0mCalling 'process_diff_control'[0m
 1012 |       dt = process_diff_control (&scan_diff, bptr);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1142:7: [0m[0;1;36mnote: [0mCalling 'readnum'[0m
 1142 |   s = readnum (skipwhite (s), &db->ranges[0][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m        ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1116:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1116 |   while (ISDIGIT (c));[0m
      | [0;1;32m         ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1111:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1111 |   do[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1119:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 's'), which participates in a condition later[0m
 1119 |   return s;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mdiff3.c:1142:7: [0m[0;1;36mnote: [0mReturning from 'readnum'[0m
 1142 |   s = readnum (skipwhite (s), &db->ranges[0][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1143:9: [0m[0;1;36mnote: [0m's' is non-null[0m
 1143 |   if (! s)[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:1143:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1143 |   if (! s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1148:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1148 |   if (*s == ',')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdiff3.c:1148:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1148 |   if (*s == ',')[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1159:3: [0m[0;1;36mnote: [0mControl jumps to 'case 100:'  at line 1167[0m
 1159 |   switch (*s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1169:7: [0m[0;1;36mnote: [0m Execution continues on line 1173[0m
 1169 |       break;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1176:7: [0m[0;1;36mnote: [0mCalling 'readnum'[0m
 1176 |   s = readnum (skipwhite (s), &db->ranges[1][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m        ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1116:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1116 |   while (ISDIGIT (c));[0m
      | [0;1;32m         ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1111:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1111 |   do[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1119:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 's'), which participates in a condition later[0m
 1119 |   return s;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mdiff3.c:1176:7: [0m[0;1;36mnote: [0mReturning from 'readnum'[0m
 1176 |   s = readnum (skipwhite (s), &db->ranges[1][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1177:9: [0m[0;1;36mnote: [0m's' is non-null[0m
 1177 |   if (! s)[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:1177:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1177 |   if (! s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1182:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1182 |   if (*s == ',')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdiff3.c:1182:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1182 |   if (*s == ',')[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1193:3: [0m[0;1;36mnote: [0mReturning the value 3 (loaded from 'type'), which participates in a condition later[0m
 1193 |   return type;[0m
      | [0;1;32m  ^~~~~~~~~~~
[0m[1mdiff3.c:1012:12: [0m[0;1;36mnote: [0mReturning from 'process_diff_control'[0m
 1012 |       dt = process_diff_control (&scan_diff, bptr);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1013:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_ERROR[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1013:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mdiff3.c:1013:31: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1013:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1026:7: [0m[0;1;36mnote: [0mControl jumps to 'case DIFF_DELETE:'  at line 1031[0m
 1026 |       switch (dt)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1033:11: [0m[0;1;36mnote: [0m Execution continues on line 1043[0m
 1033 |           break;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1043:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_ADD[0m
 1043 |       if (dt != DIFF_ADD)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1043:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1043 |       if (dt != DIFF_ADD)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1048:11: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1048 |           for (i = 0; i < numlines; i++)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1048:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1057[0m
[1mdiff3.c:1057:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_CHANGE[0m
 1057 |       if (dt == DIFF_CHANGE)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1057:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1057 |       if (dt == DIFF_CHANGE)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1066:11: [0m[0;1;36mnote: [0m'dt' is equal to DIFF_DELETE[0m
 1066 |       if (dt != DIFF_DELETE)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1066:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1066 |       if (dt != DIFF_DELETE)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1006:10: [0m[0;1;36mnote: [0m'scan_diff' is >= 'diff_limit'[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1084[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1085:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 'block_list'), which participates in a condition later[0m
 1085 |   return block_list;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:424:13: [0m[0;1;36mnote: [0mReturning from 'process_diff'[0m
  424 |   thread0 = process_diff (file[rev_mapping[FILE0]], commonname, &b0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:426:3: [0m[0;1;36mnote: [0mCalling 'next_to_n2'[0m
  426 |   next_to_n2 (thread0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:426:3: [0m[0;1;36mnote: [0mReturning from 'next_to_n2'[0m
  426 |   next_to_n2 (thread0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:429:11: [0m[0;1;36mnote: [0mCalling 'make_3way_diff'[0m
  429 |   diff3 = make_3way_diff (thread0, thread1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:650:21: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  650 |   while (current[0] || current[1])[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:655:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  655 |       if (!current[0])[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:657:12: [0m[0;1;36mnote: [0mTaking true branch[0m
  657 |       else if (!current[1])[0m
      | [0;1;32m           ^
[0m[1mdiff3.c:682:14: [0m[0;1;36mnote: [0m'other_diff' is null[0m
  682 |       while (other_diff[0m
      | [0;1;32m             ^~~~~~~~~~
[0m[1mdiff3.c:683:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  683 |              && D_LOWLINE (other_diff, FC) <= high_water_mark + 1)[0m
      | [0;1;32m             ^
[0m[1mdiff3.c:720:18: [0m[0;1;36mnote: [0mCalling 'using_to_diff3_block'[0m
  720 |       tmpblock = using_to_diff3_block (using, last_using,[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  721 |                                        base_water_thread, high_water_thread,[0m
      | [0;1;32m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  722 |                                        last_diff3);[0m
      | [0;1;32m                                       ~~~~~~~~~~~
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:774:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  774 |     if (using[d])[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:774:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  774 |     if (using[d])[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 786[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:791:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:792:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:797:31: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'fromlengths'[0m
  797 |                               D_LENARRAY (ptr, FC),[0m
      | [0;1;32m                              ^
[0m[1mdiff3.c:126:3: [0m[0;1;36mnote: [0mexpanded from macro 'D_LENARRAY'[0m
  126 |   ((diff)->lengths[filenum])[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:796:14: [0m[0;1;36mnote: [0mCalling 'copy_stringlist'[0m
  796 |         if (!copy_stringlist (D_LINEARRAY (ptr, FC),[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  797 |                               D_LENARRAY (ptr, FC),[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~
[0m  798 |                               D_LINEARRAY (result, FILEC) + result_offset,[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  799 |                               D_LENARRAY (result, FILEC) + result_offset,[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  800 |                               D_NUMLINES (ptr, FC)))[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:881:3: [0m[0;1;36mnote: [0m'fl' initialized to a null pointer value[0m
  881 |   register size_t const *fl = fromlengths;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:884:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  884 |   while (copynum--)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:886:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  886 |       if (*t)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:886:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  886 |       if (*t)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:888:15: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'fl')[0m
  888 |           if (*fl != *tl || memcmp (*f, *t, *fl) != 0)[0m
      | [0;1;32m              ^~~
[0m[1mdiff3.c:888:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  888 |           if (*fl != *tl || memcmp (*f, *t, *fl) != 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  889 |             return false;[0m
      | [0;1;32m                         
[0m[1mdiff3.c:893:16: [0m[0;1;35mwarning: [0m[1mDereference of null pointer (loaded from variable 'f') [clang-analyzer-core.NullDereference][0m
  893 |           *t = *f;[0m
      | [0;1;32m               ^
[0m[1mdiff3.c:286:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  286 |   while ((c = getopt_long (argc, argv, "aeimvx3AEL:TX", longopts, 0)) != -1)[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:286:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 355[0m
  286 |   while ((c = getopt_long (argc, argv, "aeimvx3AEL:TX", longopts, 0)) != -1)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:355:27: [0m[0;1;36mnote: [0mAssuming 'merge' is true[0m
  355 |   edscript = !!incompat & !merge;[0m
      | [0;1;32m                          ^~~~~~
[0m[1mdiff3.c:360:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  360 |   if (incompat & (incompat - 1)  /* Ensure at most one of -AeExX3.  */[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:361:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  361 |       || finalwrite & merge /* -i -m would rewrite input file.  */[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:360:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  360 |   if (incompat & (incompat - 1)  /* Ensure at most one of -AeExX3.  */[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:362:11: [0m[0;1;36mnote: [0m'tag_count' is 0[0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mdiff3.c:362:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:365:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  365 |   if (argc - optind != 3)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:365:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  365 |   if (argc - optind != 3)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  375 |   for (i = tag_count; i < 3; i++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 394[0m
[1mdiff3.c:396:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  396 |   if (STREQ (file[common], "-"))[0m
      | [0;1;32m      ^
[0m[1m./system.h:208:22: [0m[0;1;36mnote: [0mexpanded from macro 'STREQ'[0m
  208 | #define STREQ(a, b) (strcmp (a, b) == 0)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:396:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  396 |   if (STREQ (file[common], "-"))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  410 |   for (i = 0; i < 3; i++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 415[0m
[1mdiff3.c:424:13: [0m[0;1;36mnote: [0mCalling 'process_diff'[0m
  424 |   thread0 = process_diff (file[rev_mapping[FILE0]], commonname, &b0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1006:10: [0m[0;1;36mnote: [0m'scan_diff' is < 'diff_limit'[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1009:24: [0m[0;1;36mnote: [0mStoring null pointer value[0m
 1009 |       bptr->lines[0] = bptr->lines[1] = 0;[0m
      | [0;1;32m                       ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1012:12: [0m[0;1;36mnote: [0mCalling 'process_diff_control'[0m
 1012 |       dt = process_diff_control (&scan_diff, bptr);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1142:7: [0m[0;1;36mnote: [0mCalling 'readnum'[0m
 1142 |   s = readnum (skipwhite (s), &db->ranges[0][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m        ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1116:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1116 |   while (ISDIGIT (c));[0m
      | [0;1;32m         ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1111:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1111 |   do[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1119:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 's'), which participates in a condition later[0m
 1119 |   return s;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mdiff3.c:1142:7: [0m[0;1;36mnote: [0mReturning from 'readnum'[0m
 1142 |   s = readnum (skipwhite (s), &db->ranges[0][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1143:9: [0m[0;1;36mnote: [0m's' is non-null[0m
 1143 |   if (! s)[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:1143:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1143 |   if (! s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1148:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1148 |   if (*s == ',')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdiff3.c:1148:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1148 |   if (*s == ',')[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1159:3: [0m[0;1;36mnote: [0mControl jumps to 'case 100:'  at line 1167[0m
 1159 |   switch (*s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1169:7: [0m[0;1;36mnote: [0m Execution continues on line 1173[0m
 1169 |       break;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1176:7: [0m[0;1;36mnote: [0mCalling 'readnum'[0m
 1176 |   s = readnum (skipwhite (s), &db->ranges[1][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m        ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1116:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1116 |   while (ISDIGIT (c));[0m
      | [0;1;32m         ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1111:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1111 |   do[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1119:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 's'), which participates in a condition later[0m
 1119 |   return s;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mdiff3.c:1176:7: [0m[0;1;36mnote: [0mReturning from 'readnum'[0m
 1176 |   s = readnum (skipwhite (s), &db->ranges[1][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1177:9: [0m[0;1;36mnote: [0m's' is non-null[0m
 1177 |   if (! s)[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:1177:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1177 |   if (! s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1182:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1182 |   if (*s == ',')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdiff3.c:1182:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1182 |   if (*s == ',')[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1193:3: [0m[0;1;36mnote: [0mReturning the value 3 (loaded from 'type'), which participates in a condition later[0m
 1193 |   return type;[0m
      | [0;1;32m  ^~~~~~~~~~~
[0m[1mdiff3.c:1012:12: [0m[0;1;36mnote: [0mReturning from 'process_diff_control'[0m
 1012 |       dt = process_diff_control (&scan_diff, bptr);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1013:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_ERROR[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1013:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mdiff3.c:1013:31: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1013:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1026:7: [0m[0;1;36mnote: [0mControl jumps to 'case DIFF_DELETE:'  at line 1031[0m
 1026 |       switch (dt)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1033:11: [0m[0;1;36mnote: [0m Execution continues on line 1043[0m
 1033 |           break;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1043:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_ADD[0m
 1043 |       if (dt != DIFF_ADD)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1043:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1043 |       if (dt != DIFF_ADD)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1048:11: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1048 |           for (i = 0; i < numlines; i++)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1048:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1057[0m
[1mdiff3.c:1057:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_CHANGE[0m
 1057 |       if (dt == DIFF_CHANGE)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1057:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1057 |       if (dt == DIFF_CHANGE)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1066:11: [0m[0;1;36mnote: [0m'dt' is equal to DIFF_DELETE[0m
 1066 |       if (dt != DIFF_DELETE)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1066:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1066 |       if (dt != DIFF_DELETE)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1006:10: [0m[0;1;36mnote: [0m'scan_diff' is >= 'diff_limit'[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1084[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1085:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 'block_list'), which participates in a condition later[0m
 1085 |   return block_list;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:424:13: [0m[0;1;36mnote: [0mReturning from 'process_diff'[0m
  424 |   thread0 = process_diff (file[rev_mapping[FILE0]], commonname, &b0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:426:3: [0m[0;1;36mnote: [0mCalling 'next_to_n2'[0m
  426 |   next_to_n2 (thread0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:426:3: [0m[0;1;36mnote: [0mReturning from 'next_to_n2'[0m
  426 |   next_to_n2 (thread0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:429:11: [0m[0;1;36mnote: [0mCalling 'make_3way_diff'[0m
  429 |   diff3 = make_3way_diff (thread0, thread1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:650:21: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  650 |   while (current[0] || current[1])[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:655:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  655 |       if (!current[0])[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:657:12: [0m[0;1;36mnote: [0mTaking true branch[0m
  657 |       else if (!current[1])[0m
      | [0;1;32m           ^
[0m[1mdiff3.c:682:14: [0m[0;1;36mnote: [0m'other_diff' is null[0m
  682 |       while (other_diff[0m
      | [0;1;32m             ^~~~~~~~~~
[0m[1mdiff3.c:683:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  683 |              && D_LOWLINE (other_diff, FC) <= high_water_mark + 1)[0m
      | [0;1;32m             ^
[0m[1mdiff3.c:720:18: [0m[0;1;36mnote: [0mCalling 'using_to_diff3_block'[0m
  720 |       tmpblock = using_to_diff3_block (using, last_using,[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  721 |                                        base_water_thread, high_water_thread,[0m
      | [0;1;32m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  722 |                                        last_diff3);[0m
      | [0;1;32m                                       ~~~~~~~~~~~
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:774:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  774 |     if (using[d])[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:774:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  774 |     if (using[d])[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 786[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:791:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:792:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:796:31: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 'fromptrs'[0m
  796 |         if (!copy_stringlist (D_LINEARRAY (ptr, FC),[0m
      | [0;1;32m                              ^
[0m[1mdiff3.c:124:3: [0m[0;1;36mnote: [0mexpanded from macro 'D_LINEARRAY'[0m
  124 |   ((diff)->lines[filenum])[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:796:14: [0m[0;1;36mnote: [0mCalling 'copy_stringlist'[0m
  796 |         if (!copy_stringlist (D_LINEARRAY (ptr, FC),[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  797 |                               D_LENARRAY (ptr, FC),[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~
[0m  798 |                               D_LINEARRAY (result, FILEC) + result_offset,[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  799 |                               D_LENARRAY (result, FILEC) + result_offset,[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  800 |                               D_NUMLINES (ptr, FC)))[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:879:3: [0m[0;1;36mnote: [0m'f' initialized to a null pointer value[0m
  879 |   register char * const *f = fromptrs;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:884:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  884 |   while (copynum--)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:886:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  886 |       if (*t)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:886:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  886 |       if (*t)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:893:16: [0m[0;1;36mnote: [0mDereference of null pointer (loaded from variable 'f')[0m
  893 |           *t = *f;[0m
      | [0;1;32m               ^~
[0m[1mdiff3.c:980:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  980 |   while (nl--)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  981 |     if (!*l1 || !*l2 || *lgths1 != *lgths2++[0m
  982 |         || memcmp (*l1++, *l2++, *lgths1++) != 0)[0m
  983 |       return false;[0m
      | [0;1;32m                   
[0m[1mdiff3.c:982:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  982 |         || memcmp (*l1++, *l2++, *lgths1++) != 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  983 |       return false;[0m
      | [0;1;32m                   
[0m[1mdiff3.c:1015:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1015 |           fprintf (stderr, _("%s: diff failed: "), program_name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1015:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1015 |           fprintf (stderr, _("%s: diff failed: "), program_name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1029:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1029 |           bptr->ranges[0][0]++;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1030 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:1032:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1032 |           bptr->ranges[1][0]++;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1033 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:1035:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1035 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mdiff3.c:1037:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1037 |           fatal ("internal error: invalid diff type in process_diff");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1038 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:1048:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1048 |           for (i = 0; i < numlines; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1049 |             scan_diff = scan_diff_line (scan_diff,[0m
 1050 |                                         &(bptr->lines[0][i]),[0m
 1051 |                                         &(bptr->lengths[0][i]),[0m
 1052 |                                         diff_limit,[0m
 1053 |                                         '<');[0m
      | [0;1;32m                                             
[0m[1mdiff3.c:1059:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1059 |           if (strncmp (scan_diff, "---\n", 4))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1060 |             fatal ("invalid diff format; invalid change separator");[0m
      | [0;1;32m                                                                    
[0m[1mdiff3.c:1071:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1071 |           for (i = 0; i < numlines; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1072 |             scan_diff = scan_diff_line (scan_diff,[0m
 1073 |                                         &(bptr->lines[1][i]),[0m
 1074 |                                         &(bptr->lengths[1][i]),[0m
 1075 |                                         diff_limit,[0m
 1076 |                                         '>');[0m
      | [0;1;32m                                             
[0m[1mdiff3.c:1093:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1093 |   while (*s == ' ' || *s == '\t')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1094 |     s++;[0m
      | [0;1;32m        
[0m[1mdiff3.c:1108:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1109 |     return 0;[0m
      | [0;1;32m             
[0m[1mdiff3.c:1143:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1143 |   if (! s)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1144 |     return DIFF_ERROR;[0m
      | [0;1;32m                      
[0m[1mdiff3.c:1151:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |       if (! s)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1152 |         return DIFF_ERROR;[0m
      | [0;1;32m                          
[0m[1mdiff3.c:1154:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1154 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1155 |     db->ranges[0][RANGE_END] = db->ranges[0][RANGE_START];[0m
      | [0;1;32m                                                          
[0m[1mdiff3.c:1162:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1162 |       type = DIFF_ADD;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1163 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdiff3.c:1165:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1165 |       type = DIFF_CHANGE;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1166 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdiff3.c:1168:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1168 |       type = DIFF_DELETE;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1169 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mdiff3.c:1171:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1171 |       return DIFF_ERROR;        /* Bad format */[0m
      | [0;1;32m      ^                
[0m      | [0;32m      {                ;} 
[0m[1mdiff3.c:1177:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |   if (! s)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1178 |     return DIFF_ERROR;[0m
      | [0;1;32m                      
[0m[1mdiff3.c:1185:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1185 |       if (! s)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1186 |         return DIFF_ERROR;[0m
      | [0;1;32m                          
[0m[1mdiff3.c:1189:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1189 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1190 |     db->ranges[1][RANGE_END] = db->ranges[1][RANGE_START];[0m
      | [0;1;32m                                                          
[0m[1mdiff3.c:1218:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1218 |   if (text)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1219 |     *ap++ = "-a";[0m
      | [0;1;32m                 
[0m[1mdiff3.c:1220:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1220 |   if (strip_trailing_cr)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1221 |     *ap++ = "--strip-trailing-cr";[0m
      | [0;1;32m                                  
[0m[1mdiff3.c:1231:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1231 |   if (pipe (fds) != 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1232 |     perror_with_exit ("pipe");[0m
      | [0;1;32m                              
[0m[1mdiff3.c:1252:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1252 |   if (pid == -1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1253 |     perror_with_exit ("fork");[0m
      | [0;1;32m                              
[0m[1mdiff3.c:1283:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1283 |           if (bytes == SIZE_MAX)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1284 |             perror_with_exit (_("read failed"));[0m
      | [0;1;32m                                                
[0m[1mdiff3.c:1287:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1287 |       if (PTRDIFF_MAX / 2 <= current_chunk_size)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1288 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mdiff3.c:1293:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |   if (total != 0 && diff_result[total-1] != '\n')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1294 |     fatal ("invalid diff format; incomplete last line");[0m
      | [0;1;32m                                                        
[0m[1mdiff3.c:1306:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1306 |   if (close (fd) != 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1307 |     perror_with_exit ("close");[0m
      | [0;1;32m                               
[0m[1mdiff3.c:1308:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1308 |   if (waitpid (pid, &wstatus, 0) < 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1309 |     perror_with_exit ("waitpid");[0m
      | [0;1;32m                                 
[0m[1mdiff3.c:1315:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1315 |   if (EXIT_TROUBLE <= status)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1316 |     die (EXIT_TROUBLE, werrno,[0m
 1317 |            _(status == 126[0m
 1318 |              ? "subsidiary program '%s' could not be invoked"[0m
 1319 |              : status == 127[0m
 1320 |              ? "subsidiary program '%s' not found"[0m
 1321 |              : status == INT_MAX[0m
 1322 |              ? "subsidiary program '%s' failed"[0m
 1323 |              : "subsidiary program '%s' failed (exit status %d)"),[0m
 1324 |            diff_program, status);[0m
      | [0;1;32m                                 
[0m[1mdiff3.c:1342:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1342 |         && scan_ptr[1] == ' '))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1343 |     fatal ("invalid diff format; incorrect leading line chars");[0m
      | [0;1;32m                                                                
[0m[1mdiff3.c:1346:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1346 |   while (*line_ptr++ != '\n')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1347 |     continue;[0m
      | [0;1;32m             
[0m[1mdiff3.c:1357:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |       if (edscript)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1358 |         fprintf (stderr, "%s:", program_name);[0m
 1359 |       else[0m
      | [0;32m      } 
[0m[1mdiff3.c:1358:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1358 |         fprintf (stderr, "%s:", program_name);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdiff3.c:1358:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1358 |         fprintf (stderr, "%s:", program_name);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdiff3.c:1359:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1359 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1360 |         --*set_length;[0m
      | [0;1;32m                      
[0m[1mdiff3.c:1364:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1364 |           if (edscript)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1365 |             putc (*line_ptr, stderr);[0m
      | [0;1;32m                                     
[0m[1mdiff3.c:1402:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1402 |           x[0] = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1403 |           dontprint = 3;        /* Print them all */[0m
 1404 |           oddoneout = 3;        /* Nobody's odder than anyone else */[0m
 1405 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:1411:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1411 |           x[0] = oddoneout + '1';[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1412 |           x[1] = 0;[0m
 1413 |           dontprint = oddoneout == 0;[0m
 1414 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:1416:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1416 |           fatal ("internal error: invalid diff type passed to output");[0m
      | [0;1;32m          ^                                                           
[0m      | [0;32m          {                                                           ;} 
[0m[1mdiff3.c:1418:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1418 |       fprintf (outputfile, "====%s\n", x);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mdiff3.c:1418:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1418 |       fprintf (outputfile, "====%s\n", x);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mdiff3.c:1428:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1428 |           fprintf (outputfile, "%d:", i + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1428:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1428 |           fprintf (outputfile, "%d:", i + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1432:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1432 |               fprintf (outputfile, "%"pI"da\n", lowt - 1);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1432:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1432 |               fprintf (outputfile, "%"pI"da\n", lowt - 1);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1432:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1432 |               fprintf (outputfile, "%"pI"da\n", lowt - 1);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1433 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdiff3.c:1435:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1435 |               fprintf (outputfile, "%"pI"dc\n", lowt);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1435:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1435 |               fprintf (outputfile, "%"pI"dc\n", lowt);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1435:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1435 |               fprintf (outputfile, "%"pI"dc\n", lowt);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1436 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdiff3.c:1438:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1438 |               fprintf (outputfile, "%"pI"d,%"pI"dc\n", lowt, hight);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1438:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1438 |               fprintf (outputfile, "%"pI"d,%"pI"dc\n", lowt, hight);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1438:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1438 |               fprintf (outputfile, "%"pI"d,%"pI"dc\n", lowt, hight);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1439 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdiff3.c:1442:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1442 |           if (i == dontprint) continue;[0m
      | [0;1;32m                             ^         
[0m      | [0;32m                              {
[0m[1mdiff3.c:1450:24: [0m[0;1;35mwarning: [0m[1mArray access results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
 1450 |                   cp = D_RELNUM (ptr, realfile, line);[0m
      | [0;1;32m                       ^
[0m[1mdiff3.c:118:3: [0m[0;1;36mnote: [0mexpanded from macro 'D_RELNUM'[0m
  118 |   ((diff)->lines[filenum][linenum])[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:286:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  286 |   while ((c = getopt_long (argc, argv, "aeimvx3AEL:TX", longopts, 0)) != -1)[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:286:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 355[0m
  286 |   while ((c = getopt_long (argc, argv, "aeimvx3AEL:TX", longopts, 0)) != -1)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:355:27: [0m[0;1;36mnote: [0mAssuming 'merge' is true[0m
  355 |   edscript = !!incompat & !merge;[0m
      | [0;1;32m                          ^~~~~~
[0m[1mdiff3.c:360:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  360 |   if (incompat & (incompat - 1)  /* Ensure at most one of -AeExX3.  */[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:361:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  361 |       || finalwrite & merge /* -i -m would rewrite input file.  */[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:360:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  360 |   if (incompat & (incompat - 1)  /* Ensure at most one of -AeExX3.  */[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:362:11: [0m[0;1;36mnote: [0m'tag_count' is 0[0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mdiff3.c:362:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  362 |       || (tag_count && ! flagging)) /* -L requires one of -AEX.  */[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:365:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  365 |   if (argc - optind != 3)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:365:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  365 |   if (argc - optind != 3)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  375 |   for (i = tag_count; i < 3; i++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:375:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 394[0m
[1mdiff3.c:394:3: [0m[0;1;36mnote: [0mThe value 1 is assigned to 'common'[0m
  394 |   common = 2 - (edscript | merge);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:396:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  396 |   if (STREQ (file[common], "-"))[0m
      | [0;1;32m      ^
[0m[1m./system.h:208:22: [0m[0;1;36mnote: [0mexpanded from macro 'STREQ'[0m
  208 | #define STREQ(a, b) (strcmp (a, b) == 0)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:396:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  396 |   if (STREQ (file[common], "-"))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:408:3: [0m[0;1;36mnote: [0mAssigning 1[0m
  408 |   mapping[2] = common;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  410 |   for (i = 0; i < 3; i++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mdiff3.c:410:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 415[0m
[1mdiff3.c:423:13: [0m[0;1;36mnote: [0mCalling 'process_diff'[0m
  423 |   thread1 = process_diff (file[rev_mapping[FILE1]], commonname, &b1);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1084[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1085:3: [0m[0;1;36mnote: [0mReturning null pointer (loaded from 'block_list'), which participates in a condition later[0m
 1085 |   return block_list;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:423:13: [0m[0;1;36mnote: [0mReturning from 'process_diff'[0m
  423 |   thread1 = process_diff (file[rev_mapping[FILE1]], commonname, &b1);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:424:13: [0m[0;1;36mnote: [0mCalling 'process_diff'[0m
  424 |   thread0 = process_diff (file[rev_mapping[FILE0]], commonname, &b0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1006:10: [0m[0;1;36mnote: [0m'scan_diff' is < 'diff_limit'[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1012:12: [0m[0;1;36mnote: [0mCalling 'process_diff_control'[0m
 1012 |       dt = process_diff_control (&scan_diff, bptr);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1142:7: [0m[0;1;36mnote: [0mCalling 'readnum'[0m
 1142 |   s = readnum (skipwhite (s), &db->ranges[0][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m        ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1116:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1116 |   while (ISDIGIT (c));[0m
      | [0;1;32m         ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1111:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1111 |   do[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1119:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 's'), which participates in a condition later[0m
 1119 |   return s;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mdiff3.c:1142:7: [0m[0;1;36mnote: [0mReturning from 'readnum'[0m
 1142 |   s = readnum (skipwhite (s), &db->ranges[0][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1143:9: [0m[0;1;36mnote: [0m's' is non-null[0m
 1143 |   if (! s)[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:1143:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1143 |   if (! s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1148:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1148 |   if (*s == ',')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdiff3.c:1148:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1148 |   if (*s == ',')[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1159:3: [0m[0;1;36mnote: [0mControl jumps to 'case 100:'  at line 1167[0m
 1159 |   switch (*s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1169:7: [0m[0;1;36mnote: [0m Execution continues on line 1173[0m
 1169 |       break;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1176:7: [0m[0;1;36mnote: [0mCalling 'readnum'[0m
 1176 |   s = readnum (skipwhite (s), &db->ranges[1][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m        ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1108:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1108 |   if (! ISDIGIT (c))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1116:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1116 |   while (ISDIGIT (c));[0m
      | [0;1;32m         ^
[0m[1m./system.h:97:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   97 | #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1111:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1111 |   do[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1119:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 's'), which participates in a condition later[0m
 1119 |   return s;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mdiff3.c:1176:7: [0m[0;1;36mnote: [0mReturning from 'readnum'[0m
 1176 |   s = readnum (skipwhite (s), &db->ranges[1][RANGE_START]);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1177:9: [0m[0;1;36mnote: [0m's' is non-null[0m
 1177 |   if (! s)[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:1177:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1177 |   if (! s)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1182:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1182 |   if (*s == ',')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mdiff3.c:1182:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1182 |   if (*s == ',')[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1193:3: [0m[0;1;36mnote: [0mReturning without writing to '->next', which participates in a condition later[0m
 1193 |   return type;[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1193:3: [0m[0;1;36mnote: [0mReturning the value 3 (loaded from 'type'), which participates in a condition later[0m
 1193 |   return type;[0m
      | [0;1;32m  ^~~~~~~~~~~
[0m[1mdiff3.c:1012:12: [0m[0;1;36mnote: [0mReturning from 'process_diff_control'[0m
 1012 |       dt = process_diff_control (&scan_diff, bptr);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1013:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_ERROR[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1013:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mdiff3.c:1013:31: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1013:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1013 |       if (dt == DIFF_ERROR || *scan_diff != '\n')[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1026:7: [0m[0;1;36mnote: [0mControl jumps to 'case DIFF_DELETE:'  at line 1031[0m
 1026 |       switch (dt)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1033:11: [0m[0;1;36mnote: [0m Execution continues on line 1043[0m
 1033 |           break;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1043:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_ADD[0m
 1043 |       if (dt != DIFF_ADD)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1043:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1043 |       if (dt != DIFF_ADD)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1048:11: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1048 |           for (i = 0; i < numlines; i++)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1048:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1057[0m
[1mdiff3.c:1057:11: [0m[0;1;36mnote: [0m'dt' is not equal to DIFF_CHANGE[0m
 1057 |       if (dt == DIFF_CHANGE)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1057:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1057 |       if (dt == DIFF_CHANGE)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1066:11: [0m[0;1;36mnote: [0m'dt' is equal to DIFF_DELETE[0m
 1066 |       if (dt != DIFF_DELETE)[0m
      | [0;1;32m          ^~
[0m[1mdiff3.c:1066:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1066 |       if (dt != DIFF_DELETE)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1006:10: [0m[0;1;36mnote: [0m'scan_diff' is >= 'diff_limit'[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1mdiff3.c:1006:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1084[0m
 1006 |   while (scan_diff < diff_limit)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1085:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 'block_list'), which participates in a condition later[0m
 1085 |   return block_list;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:424:13: [0m[0;1;36mnote: [0mReturning from 'process_diff'[0m
  424 |   thread0 = process_diff (file[rev_mapping[FILE0]], commonname, &b0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:426:3: [0m[0;1;36mnote: [0mCalling 'next_to_n2'[0m
  426 |   next_to_n2 (thread0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:258:1: [0m[0;1;36mnote: [0mReturning without writing to 'p->next', which participates in a condition later[0m
  258 | }[0m
      | [0;1;32m^
[0m[1mdiff3.c:426:3: [0m[0;1;36mnote: [0mReturning from 'next_to_n2'[0m
  426 |   next_to_n2 (thread0);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:429:11: [0m[0;1;36mnote: [0mCalling 'make_3way_diff'[0m
  429 |   diff3 = make_3way_diff (thread0, thread1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:650:21: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  650 |   while (current[0] || current[1])[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:655:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  655 |       if (!current[0])[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:657:12: [0m[0;1;36mnote: [0mTaking true branch[0m
  657 |       else if (!current[1])[0m
      | [0;1;32m           ^
[0m[1mdiff3.c:682:14: [0m[0;1;36mnote: [0m'other_diff' is null[0m
  682 |       while (other_diff[0m
      | [0;1;32m             ^~~~~~~~~~
[0m[1mdiff3.c:683:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  683 |              && D_LOWLINE (other_diff, FC) <= high_water_mark + 1)[0m
      | [0;1;32m             ^
[0m[1mdiff3.c:720:18: [0m[0;1;36mnote: [0mCalling 'using_to_diff3_block'[0m
  720 |       tmpblock = using_to_diff3_block (using, last_using,[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  721 |                                        base_water_thread, high_water_thread,[0m
      | [0;1;32m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  722 |                                        last_diff3);[0m
      | [0;1;32m                                       ~~~~~~~~~~~
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:774:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  774 |     if (using[d])[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:774:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  774 |     if (using[d])[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:773:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 786[0m
  773 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:786:12: [0m[0;1;36mnote: [0mCalling 'create_diff3_block'[0m
  786 |   result = create_diff3_block (low[0], high[0], low[1], high[1], lowc, highc);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:928:7: [0m[0;1;36mnote: [0m'numlines' is 1[0m
  928 |   if (numlines)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mdiff3.c:928:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  928 |   if (numlines)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:931:36: [0m[0;1;36mnote: [0mValue assigned to 'edscript', which participates in a condition later[0m
  931 |       D_LENARRAY (result, FILE0) = xcalloc (numlines, sizeof (size_t));[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:931:36: [0m[0;1;36mnote: [0mValue assigned to 'merge', which participates in a condition later[0m
  931 |       D_LENARRAY (result, FILE0) = xcalloc (numlines, sizeof (size_t));[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:940:7: [0m[0;1;36mnote: [0mAssuming 'numlines' is 0[0m
  940 |   if (numlines)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mdiff3.c:940:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  940 |   if (numlines)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:947:7: [0m[0;1;36mnote: [0mStoring null pointer value[0m
  947 |       D_LINEARRAY (result, FILE1) = 0;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:124:3: [0m[0;1;36mnote: [0mexpanded from macro 'D_LINEARRAY'[0m
  124 |   ((diff)->lines[filenum])[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:952:7: [0m[0;1;36mnote: [0mAssuming 'numlines' is 0[0m
  952 |   if (numlines)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mdiff3.c:952:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  952 |   if (numlines)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:964:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 'result'), which participates in a condition later[0m
  964 |   return result;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1mdiff3.c:786:12: [0m[0;1;36mnote: [0mReturning from 'create_diff3_block'[0m
  786 |   result = create_diff3_block (low[0], high[0], low[1], high[1], lowc, highc);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:791:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:792:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:796:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  796 |         if (!copy_stringlist (D_LINEARRAY (ptr, FC),[0m
      | [0;1;32m        ^
[0m[1mdiff3.c:792:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 791[0m
  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:791:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:792:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 791[0m
  792 |     for (ptr = using[d]; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m    ^
[0m[1mdiff3.c:791:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 807[0m
  791 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:807:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  807 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:813:22: [0m[0;1;36mnote: [0m'u' is non-null[0m
  813 |            i + lo < (u ? D_LOWLINE (u, FO) : hi + 1);[0m
      | [0;1;32m                     ^
[0m[1mdiff3.c:813:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mdiff3.c:812:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 820[0m
  812 |       for (i = 0;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:820:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  820 |       for (ptr = u; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:825:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  825 |           if (!copy_stringlist (D_LINEARRAY (ptr, FO),[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:835:21: [0m[0;1;36mnote: [0mField 'next' is null[0m
  835 |                i < (D_NEXT (ptr) ? D_LOWLINE (D_NEXT (ptr), FO) : hi + 1) - lo;[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:129:31: [0m[0;1;36mnote: [0mexpanded from macro 'D_NEXT'[0m
  129 | #define D_NEXT(diff)    ((diff)->next)[0m
      | [0;1;32m                                 ^
[0m[1mdiff3.c:835:21: [0m[0;1;36mnote: [0m'?' condition is false[0m
  835 |                i < (D_NEXT (ptr) ? D_LOWLINE (D_NEXT (ptr), FO) : hi + 1) - lo;[0m
      | [0;1;32m                    ^
[0m[1mdiff3.c:129:22: [0m[0;1;36mnote: [0mexpanded from macro 'D_NEXT'[0m
  129 | #define D_NEXT(diff)    ((diff)->next)[0m
      | [0;1;32m                        ^
[0m[1mdiff3.c:834:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 820[0m
  834 |           for (i = D_HIGHLINE (ptr, FO) + 1 - lo;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:820:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 807[0m
  820 |       for (ptr = u; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:807:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  807 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:813:22: [0m[0;1;36mnote: [0m'u' is null[0m
  813 |            i + lo < (u ? D_LOWLINE (u, FO) : hi + 1);[0m
      | [0;1;32m                     ^
[0m[1mdiff3.c:813:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdiff3.c:813:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  813 |            i + lo < (u ? D_LOWLINE (u, FO) : hi + 1);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:812:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 820[0m
  812 |       for (i = 0;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:820:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 807[0m
  820 |       for (ptr = u; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:807:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 846[0m
  807 |   for (d = 0; d < 2; d++)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:846:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  846 |   if (!using[0])[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:848:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  848 |   else if (!using[1])[0m
      | [0;1;32m       ^
[0m[1mdiff3.c:866:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 'result'), which participates in a condition later[0m
  866 |   return result;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1mdiff3.c:720:18: [0m[0;1;36mnote: [0mReturning from 'using_to_diff3_block'[0m
  720 |       tmpblock = using_to_diff3_block (using, last_using,[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  721 |                                        base_water_thread, high_water_thread,[0m
      | [0;1;32m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  722 |                                        last_diff3);[0m
      | [0;1;32m                                       ~~~~~~~~~~~
[0m[1mdiff3.c:724:12: [0m[0;1;36mnote: [0m'tmpblock' is non-null[0m
  724 |       if (!tmpblock)[0m
      | [0;1;32m           ^~~~~~~~
[0m[1mdiff3.c:724:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  724 |       if (!tmpblock)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:650:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  650 |   while (current[0] || current[1])[0m
      | [0;1;32m         ^
[0m[1mdiff3.c:650:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 734[0m
  650 |   while (current[0] || current[1])[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:734:3: [0m[0;1;36mnote: [0mReturning pointer (loaded from 'result'), which participates in a condition later[0m
  734 |   return result;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1mdiff3.c:429:11: [0m[0;1;36mnote: [0mReturning from 'make_3way_diff'[0m
  429 |   diff3 = make_3way_diff (thread0, thread1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:434:7: [0m[0;1;36mnote: [0mAssuming 'edscript' is false[0m
  434 |   if (edscript)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mdiff3.c:434:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  434 |   if (edscript)[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:438:12: [0m[0;1;36mnote: [0mAssuming 'merge' is false[0m
  438 |   else if (merge)[0m
      | [0;1;32m           ^~~~~
[0m[1mdiff3.c:438:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  438 |   else if (merge)[0m
      | [0;1;32m       ^
[0m[1mdiff3.c:449:7: [0m[0;1;36mnote: [0mCalling 'output_diff3'[0m
  449 |       output_diff3 (stdout, diff3, mapping, rev_mapping);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1393:29: [0m[0;1;36mnote: [0mAssuming 'initial_tab' is false[0m
 1393 |   char const *line_prefix = initial_tab ? "\t" : "  ";[0m
      | [0;1;32m                            ^~~~~~~~~~~
[0m[1mdiff3.c:1393:29: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdiff3.c:1395:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1395 |   for (ptr = diff; ptr; ptr = D_NEXT (ptr))[0m
      | [0;1;32m  ^
[0m[1mdiff3.c:1399:7: [0m[0;1;36mnote: [0mControl jumps to 'case DIFF_1ST:'  at line 1406[0m
 1399 |       switch (ptr->correspond)[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1414:11: [0m[0;1;36mnote: [0m Execution continues on line 1418[0m
 1414 |           break;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1421:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1421 |       for (i = 0; i < 3;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1429:11: [0m[0;1;36mnote: [0mControl jumps to 'case 0:'  at line 1434[0m
 1429 |           switch (lowt - hight)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1436:15: [0m[0;1;36mnote: [0m Execution continues on line 1442[0m
 1436 |               break;[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:1442:15: [0m[0;1;36mnote: [0m'i' is not equal to 'dontprint'[0m
 1442 |           if (i == dontprint) continue;[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:1442:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1442 |           if (i == dontprint) continue;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1444:15: [0m[0;1;36mnote: [0m'lowt' is <= 'hight'[0m
 1444 |           if (lowt <= hight)[0m
      | [0;1;32m              ^~~~
[0m[1mdiff3.c:1444:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1444 |           if (lowt <= hight)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1452:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1452 |                   fwrite (cp, sizeof (char), length, outputfile);[0m
      | [0;1;32m                  ^
[0m[1m../lib/unlocked-io.h:99:27: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite'[0m
   99 | #  define fwrite(w,x,y,z) fwrite_unlocked (w,x,y,z)[0m
      | [0;1;32m                          ^
[0m[1m/usr/include/x86_64-linux-gnu/bits/stdio.h:172:20: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite_unlocked'[0m
  172 |   (__extension__ ((__builtin_constant_p (size) && __builtin_constant_p (n)    \[0m
      | [0;1;32m                   ^
[0m[1mdiff3.c:1452:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1452 |                   fwrite (cp, sizeof (char), length, outputfile);[0m
      | [0;1;32m                  ^
[0m[1m../lib/unlocked-io.h:99:27: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite'[0m
   99 | #  define fwrite(w,x,y,z) fwrite_unlocked (w,x,y,z)[0m
      | [0;1;32m                          ^
[0m[1m/usr/include/x86_64-linux-gnu/bits/stdio.h:173:6: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite_unlocked'[0m
  173 |                    && (size_t) (size) * (size_t) (n) <= 8                     \[0m
      | [0;1;32m                   ^
[0m[1mdiff3.c:1452:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1452 |                   fwrite (cp, sizeof (char), length, outputfile);[0m
      | [0;1;32m                  ^
[0m[1m../lib/unlocked-io.h:99:27: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite'[0m
   99 | #  define fwrite(w,x,y,z) fwrite_unlocked (w,x,y,z)[0m
      | [0;1;32m                          ^
[0m[1m/usr/include/x86_64-linux-gnu/bits/stdio.h:184:10: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite_unlocked'[0m
  184 |                   : (((__builtin_constant_p (size) && (size_t) (size) == 0)   \[0m
      | [0;1;32m                       ^
[0m[1mdiff3.c:1452:19: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1452 |                   fwrite (cp, sizeof (char), length, outputfile);[0m
      | [0;1;32m                  ^
[0m[1m../lib/unlocked-io.h:99:27: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite'[0m
   99 | #  define fwrite(w,x,y,z) fwrite_unlocked (w,x,y,z)[0m
      | [0;1;32m                          ^
[0m[1m/usr/include/x86_64-linux-gnu/bits/stdio.h:184:9: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite_unlocked'[0m
  184 |                   : (((__builtin_constant_p (size) && (size_t) (size) == 0)   \[0m
      | [0;1;32m                      ^
[0m[1mdiff3.c:1452:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1452 |                   fwrite (cp, sizeof (char), length, outputfile);[0m
      | [0;1;32m                  ^
[0m[1m../lib/unlocked-io.h:99:27: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite'[0m
   99 | #  define fwrite(w,x,y,z) fwrite_unlocked (w,x,y,z)[0m
      | [0;1;32m                          ^
[0m[1m/usr/include/x86_64-linux-gnu/bits/stdio.h:185:38: [0m[0;1;36mnote: [0mexpanded from macro 'fwrite_unlocked'[0m
  185 |                       || (__builtin_constant_p (n) && (size_t) (n) == 0))     \[0m
      | [0;1;32m                                                   ^
[0m[1mdiff3.c:1447:15: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1447 |               do[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:1455:15: [0m[0;1;36mnote: [0mTaking false branch[0m
 1455 |               if (cp[length - 1] != '\n')[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:1422:17: [0m[0;1;36mnote: [0m'oddoneout' is not equal to 1[0m
 1422 |            i = (oddoneout == 1 ? skew_increment[i] : i + 1))[0m
      | [0;1;32m                ^~~~~~~~~
[0m[1mdiff3.c:1422:17: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdiff3.c:1421:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1421 |       for (i = 0; i < 3;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1429:11: [0m[0;1;36mnote: [0mControl jumps to 'case 1:'  at line 1431[0m
 1429 |           switch (lowt - hight)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1433:15: [0m[0;1;36mnote: [0m Execution continues on line 1442[0m
 1433 |               break;[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:1442:15: [0m[0;1;36mnote: [0m'i' is equal to 'dontprint'[0m
 1442 |           if (i == dontprint) continue;[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:1442:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1442 |           if (i == dontprint) continue;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1442:31: [0m[0;1;36mnote: [0m Execution continues on line 1422[0m
 1442 |           if (i == dontprint) continue;[0m
      | [0;1;32m                              ^
[0m[1mdiff3.c:1422:17: [0m[0;1;36mnote: [0m'oddoneout' is not equal to 1[0m
 1422 |            i = (oddoneout == 1 ? skew_increment[i] : i + 1))[0m
      | [0;1;32m                ^~~~~~~~~
[0m[1mdiff3.c:1422:17: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mdiff3.c:1422:12: [0m[0;1;36mnote: [0mThe value 2 is assigned to 'i'[0m
 1422 |            i = (oddoneout == 1 ? skew_increment[i] : i + 1))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1421:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1421 |       for (i = 0; i < 3;[0m
      | [0;1;32m      ^
[0m[1mdiff3.c:1424:11: [0m[0;1;36mnote: [0m'realfile' initialized to 1[0m
 1424 |           int realfile = mapping[i];[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mdiff3.c:1429:11: [0m[0;1;36mnote: [0mControl jumps to 'case 1:'  at line 1431[0m
 1429 |           switch (lowt - hight)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1433:15: [0m[0;1;36mnote: [0m Execution continues on line 1442[0m
 1433 |               break;[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:1442:15: [0m[0;1;36mnote: [0m'i' is not equal to 'dontprint'[0m
 1442 |           if (i == dontprint) continue;[0m
      | [0;1;32m              ^
[0m[1mdiff3.c:1442:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1442 |           if (i == dontprint) continue;[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1444:15: [0m[0;1;36mnote: [0mAssuming 'lowt' is <= 'hight'[0m
 1444 |           if (lowt <= hight)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1mdiff3.c:1444:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1444 |           if (lowt <= hight)[0m
      | [0;1;32m          ^
[0m[1mdiff3.c:1450:24: [0m[0;1;36mnote: [0mArray access results in a null pointer dereference[0m
 1450 |                   cp = D_RELNUM (ptr, realfile, line);[0m
      | [0;1;32m                       ^
[0m[1mdiff3.c:118:3: [0m[0;1;36mnote: [0mexpanded from macro 'D_RELNUM'[0m
  118 |   ((diff)->lines[filenum][linenum])[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mdiff3.c:1455:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1455 |               if (cp[length - 1] != '\n')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1456 |                 fprintf (outputfile, "\n\\ %s\n",[0m
 1457 |                          _("No newline at end of file"));[0m
      | [0;1;32m                                                         
[0m[1mdiff3.c:1456:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1456 |                 fprintf (outputfile, "\n\\ %s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mdiff3.c:1456:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1456 |                 fprintf (outputfile, "\n\\ %s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mdiff3.c:1500:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1500 |       if (num == 1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1501 |         fprintf (outputfile, "%"pI"ds/^\\.//\n", start);[0m
 1502 |       else[0m
      | [0;32m      } 
[0m[1mdiff3.c:1501:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1501 |         fprintf (outputfile, "%"pI"ds/^\\.//\n", start);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdiff3.c:1501:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1501 |         fprintf (outputfile, "%"pI"ds/^\\.//\n", start);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdiff3.c:1502:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1502 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1503 |         fprintf (outputfile, "%"pI"d,%"pI"ds/^\\.//\n", start, start + num - 1);[0m
      | [0;1;32m                                                                                
[0m[1mdiff3.c:1503:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1503 |         fprintf (outputfile, "%"pI"d,%"pI"ds/^\\.//\n", start, start + num - 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdiff3.c:1503:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1503 |         fprintf (outputfile, "%"pI"d,%"pI"ds/^\\.//\n", start, start + num - 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdiff3.c:1547:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1547 |         default: continue;[0m
      | [0;1;32m                 ^       
[0m      | [0;32m                 {       ;} 
[0m[1mdiff3.c:1548:24: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1548 |         case DIFF_2ND: if (!show_2nd) continue; conflict = true; break;[0m
      | [0;1;32m                       ^                                              
[0m      | [0;32m                       {                                              ;} 
[0m[1mdiff3.c:1548:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1548 |         case DIFF_2ND: if (!show_2nd) continue; conflict = true; break;[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m[1mdiff3.c:1549:24: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1549 |         case DIFF_3RD: if (overlap_only) continue; conflict = false; break;[0m
      | [0;1;32m                       ^                                                  
[0m      | [0;32m                       {                                                  ;} 
[0m[1mdiff3.c:1549:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1549 |         case DIFF_3RD: if (overlap_only) continue; conflict = false; break;[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m[1mdiff3.c:1550:24: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1550 |         case DIFF_ALL: if (simple_only) continue; conflict = flagging; break;[0m
      | [0;1;32m                       ^                                                    
[0m      | [0;32m                       {                                                    ;} 
[0m[1mdiff3.c:1550:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1550 |         case DIFF_ALL: if (simple_only) continue; conflict = flagging; break;[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m[1mdiff3.c:1563:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1563 |           fprintf (outputfile, "%"pI"da\n", high0);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1563:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1563 |           fprintf (outputfile, "%"pI"da\n", high0);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1570:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1570 |                   fprintf (outputfile, "||||||| %s\n", file1);[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mdiff3.c:1570:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1570 |                   fprintf (outputfile, "||||||| %s\n", file1);[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mdiff3.c:1577:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1577 |           fprintf (outputfile, ">>>>>>> %s\n", file2);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1577:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1577 |           fprintf (outputfile, ">>>>>>> %s\n", file2);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1585:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1585 |           fprintf (outputfile, "%"pI"da\n<<<<<<< %s\n", low0 - 1,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1585:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1585 |           fprintf (outputfile, "%"pI"da\n<<<<<<< %s\n", low0 - 1,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdiff3.c:1600:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1600 |           if (low0 == high0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1601 |             fprintf (outputfile, "%"pI"dd\n", low0);[0m
 1602 |           else[0m
      | [0;32m          } 
[0m[1mdiff3.c:1601:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1601 |             fprintf (outputfile, "%"pI"dd\n", low0);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mdiff3.c:1601:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1601 |             fprintf (outputfile, "%"pI"dd\n", low0);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mdiff3.c:1602:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1602 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1603 |             fprintf (outputfile, "%"pI"d,%"pI"dd\n", low0, high0);[0m
      | [0;1;32m                                                                  
[0m[1mdiff3.c:1603:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1603 |             fprintf (outputfile, "%"pI"d,%"pI"dd\n", low0, high0);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mdiff3.c:1603:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1603 |             fprintf (outputfile, "%"pI"d,%"pI"dd\n", low0, high0);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mdiff3.c:1611:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1611 |               fprintf (outputfile, "%"pI"da\n", high0);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1611:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1611 |               fprintf (outputfile, "%"pI"da\n", high0);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1611:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1611 |               fprintf (outputfile, "%"pI"da\n", high0);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1612 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdiff3.c:1614:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1614 |               fprintf (outputfile, "%"pI"dc\n", high0);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1614:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1614 |               fprintf (outputfile, "%"pI"dc\n", high0);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1614:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1614 |               fprintf (outputfile, "%"pI"dc\n", high0);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1615 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdiff3.c:1617:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1617 |               fprintf (outputfile, "%"pI"d,%"pI"dc\n", low0, high0);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1617:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1617 |               fprintf (outputfile, "%"pI"d,%"pI"dc\n", low0, high0);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1617:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1617 |               fprintf (outputfile, "%"pI"d,%"pI"dc\n", low0, high0);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1618 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mdiff3.c:1625:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1625 |   if (finalwrite)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1626 |     fputs ("w\nq\n", outputfile);[0m
      | [0;1;32m                                 
[0m[1mdiff3.c:1665:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1665 |         default: continue;[0m
      | [0;1;32m                 ^       
[0m      | [0;32m                 {       ;} 
[0m[1mdiff3.c:1666:24: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1666 |         case DIFF_2ND: if (!show_2nd) continue; conflict = true; break;[0m
      | [0;1;32m                       ^                                              
[0m      | [0;32m                       {                                              ;} 
[0m[1mdiff3.c:1666:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1666 |         case DIFF_2ND: if (!show_2nd) continue; conflict = true; break;[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m[1mdiff3.c:1667:24: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1667 |         case DIFF_3RD: if (overlap_only) continue; conflict = false; break;[0m
      | [0;1;32m                       ^                                                  
[0m      | [0;32m                       {                                                  ;} 
[0m[1mdiff3.c:1667:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1667 |         case DIFF_3RD: if (overlap_only) continue; conflict = false; break;[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m[1mdiff3.c:1668:24: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1668 |         case DIFF_ALL: if (simple_only) continue; conflict = flagging;[0m
      | [0;1;32m                       ^
[0m      | [0;32m                       {
[0m 1669 |           format_2nd = "||||||| %s\n";[0m
 1670 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdiff3.c:1668:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1668 |         case DIFF_ALL: if (simple_only) continue; conflict = flagging;[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m[1mdiff3.c:1676:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1676 |       while (0 <= --i)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1677 |         do[0m
 1678 |           {[0m
 1679 |             c = getc (infile);[0m
 1680 |             if (c == EOF)[0m
 1681 |               {[0m
 1682 |                 if (ferror (infile))[0m
 1683 |                   perror_with_exit (_("read failed"));[0m
 1684 |                 else if (feof (infile))[0m
 1685 |                   fatal ("input file shrank");[0m
 1686 |               }[0m
 1687 |             putc (c, outputfile);[0m
 1688 |           }[0m
 1689 |         while (c != '\n');[0m
      | [0;1;32m                          
[0m[1mdiff3.c:1682:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1682 |                 if (ferror (infile))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1683 |                   perror_with_exit (_("read failed"));[0m
 1684 |                 else if (feof (infile))[0m
      | [0;32m                } 
[0m[1mdiff3.c:1684:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1684 |                 else if (feof (infile))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1685 |                   fatal ("input file shrank");[0m
      | [0;1;32m                                              
[0m[1mdiff3.c:1698:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1698 |               fprintf (outputfile, "<<<<<<< %s\n", file0);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1698:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1698 |               fprintf (outputfile, "<<<<<<< %s\n", file0);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1701:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1701 |                    i++)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1702 |                 fwrite (D_RELNUM (b, mapping[FILE0], i), sizeof (char),[0m
 1703 |                         D_RELLEN (b, mapping[FILE0], i), outputfile);[0m
      | [0;1;32m                                                                     
[0m[1mdiff3.c:1709:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1709 |               fprintf (outputfile, format_2nd, file1);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1709:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1709 |               fprintf (outputfile, format_2nd, file1);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mdiff3.c:1712:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1712 |                    i++)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1713 |                 fwrite (D_RELNUM (b, mapping[FILE1], i), sizeof (char),[0m
 1714 |                         D_RELLEN (b, mapping[FILE1], i), outputfile);[0m
      | [0;1;32m                                                                     
[0m[1mdiff3.c:1723:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1723 |            i++)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1724 |         fwrite (D_RELNUM (b, mapping[FILE2], i), sizeof (char),[0m
 1725 |                 D_RELLEN (b, mapping[FILE2], i), outputfile);[0m
      | [0;1;32m                                                             
[0m[1mdiff3.c:1727:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1727 |       if (conflict)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1728 |         fprintf (outputfile, ">>>>>>> %s\n", file2);[0m
      | [0;1;32m                                                    
[0m[1mdiff3.c:1728:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1728 |         fprintf (outputfile, ">>>>>>> %s\n", file2);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdiff3.c:1728:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1728 |         fprintf (outputfile, ">>>>>>> %s\n", file2);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mdiff3.c:1733:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1733 |       while (0 <= --i)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1734 |         while ((c = getc (infile)) != '\n')[0m
 1735 |           if (c == EOF)[0m
 1736 |             {[0m
 1737 |               if (ferror (infile))[0m
 1738 |                 perror_with_exit (_("read failed"));[0m
 1739 |               else if (feof (infile))[0m
 1740 |                 {[0m
 1741 |                   if (i || b->next)[0m
 1742 |                     fatal ("input file shrank");[0m
 1743 |                   return conflicts_found;[0m
 1744 |                 }[0m
 1745 |             }[0m
      | [0;1;32m             
[0m[1mdiff3.c:1734:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1734 |         while ((c = getc (infile)) != '\n')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1735 |           if (c == EOF)[0m
 1736 |             {[0m
 1737 |               if (ferror (infile))[0m
 1738 |                 perror_with_exit (_("read failed"));[0m
 1739 |               else if (feof (infile))[0m
 1740 |                 {[0m
 1741 |                   if (i || b->next)[0m
 1742 |                     fatal ("input file shrank");[0m
 1743 |                   return conflicts_found;[0m
 1744 |                 }[0m
 1745 |             }[0m
      | [0;1;32m             
[0m[1mdiff3.c:1737:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1737 |               if (ferror (infile))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1738 |                 perror_with_exit (_("read failed"));[0m
 1739 |               else if (feof (infile))[0m
      | [0;32m              } 
[0m[1mdiff3.c:1741:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1741 |                   if (i || b->next)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1742 |                     fatal ("input file shrank");[0m
      | [0;1;32m                                                
[0m[1mdiff3.c:1748:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1748 |   while ((c = getc (infile)) != EOF || !(ferror (infile) | feof (infile)))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1749 |     putc (c, outputfile);[0m
      | [0;1;32m                         
[0m163 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[126/126][211.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/tidy-fixes/tmpcooagu57.yaml -p=/itch/common/crepos/cu-to-rtu/c/diffutils-3.10 /itch/common/crepos/cu-to-rtu/c/diffutils-3.10/src/util.c
[1mutil.c:117:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |       for (char const *m = format_msgid; *m; m++)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  118 |         if (*m == '%')[0m
  119 |           {[0m
  120 |             if (m[1] == '%')[0m
  121 |               m++;[0m
  122 |             else[0m
  123 |               argbytes += strlen (va_arg (ap, char const *)) + 1;[0m
  124 |           }[0m
      | [0;1;32m           
[0m[1mutil.c:120:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |             if (m[1] == '%')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  121 |               m++;[0m
  122 |             else[0m
      | [0;32m            } 
[0m[1mutil.c:122:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  123 |               argbytes += strlen (va_arg (ap, char const *)) + 1;[0m
      | [0;1;32m                                                                 
[0m[1mutil.c:133:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |       for (char const *m = format_msgid; *m; m++)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  134 |         if (*m == '%')[0m
  135 |           {[0m
  136 |             if (m[1] == '%')[0m
  137 |               m++;[0m
  138 |             else[0m
  139 |               p = stpcpy (p, va_arg (ap, char const *)) + 1;[0m
  140 |           }[0m
      | [0;1;32m           
[0m[1mutil.c:136:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |             if (m[1] == '%')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  137 |               m++;[0m
  138 |             else[0m
      | [0;32m            } 
[0m[1mutil.c:138:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  139 |               p = stpcpy (p, va_arg (ap, char const *)) + 1;[0m
      | [0;1;32m                                                            
[0m[1mutil.c:148:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |       if (sdiff_merge_assist)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  149 |         putchar (' ');[0m
      | [0;1;32m                      
[0m[1mutil.c:173:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |       if (p < plim)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  174 |         abort ();[0m
      | [0;1;32m                 
[0m[1mutil.c:186:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |   if (sigaddset (set, sig) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  187 |     pfatal_with_name ("sigaddset");[0m
      | [0;1;32m                                   
[0m[1mutil.c:194:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |   if (mem < 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  195 |     pfatal_with_name ("sigismember");[0m
      | [0;1;32m                                     
[0m[1mutil.c:205:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |   if (h == SIG_ERR)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  206 |     pfatal_with_name ("signal");[0m
      | [0;1;32m                                
[0m[1mutil.c:213:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |   if (sigprocmask (how, set, oset) != 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  214 |     pfatal_with_name ("sigprocmask");[0m
      | [0;1;32m                                     
[0m[1mutil.c:236:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |   if (! SA_NOCLDSTOP)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  237 |     signal (sig, SIG_IGN);[0m
      | [0;1;32m                          
[0m[1mutil.c:238:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |   if (! interrupt_signal)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  239 |     interrupt_signal = sig;[0m
      | [0;1;32m                           
[0m[1mutil.c:247:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |   if (! SA_NOCLDSTOP)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  248 |     signal (sig, stophandler);[0m
      | [0;1;32m                              
[0m[1mutil.c:249:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |   if (! interrupt_signal)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  250 |     stop_signal_count++;[0m
      | [0;1;32m                        
[0m[1mutil.c:288:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |       if (raise (sig) != 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  289 |         pfatal_with_name ("raise");[0m
      | [0;1;32m                                   
[0m[1mutil.c:347:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |   if (sigemptyset (&caught_signals) != 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  348 |     pfatal_with_name ("sigemptyset");[0m
      | [0;1;32m                                     
[0m[1mutil.c:354:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |       if (sigaction (sig[j], nullptr, &actj) == 0 && actj.sa_handler != SIG_IGN)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  355 |         xsigaddset (&caught_signals, sig[j]);[0m
      | [0;1;32m                                             
[0m[1mutil.c:362:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |   for (int j = 0; j < nsigs; j++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  363 |     if (xsigismember (&caught_signals, sig[j]))[0m
  364 |       {[0m
  365 |         act.sa_handler = is_tstp_index (j) ? stophandler : sighandler;[0m
  366 |         if (sigaction (sig[j], &act, nullptr) != 0)[0m
  367 |           pfatal_with_name ("sigaction");[0m
  368 |         some_signals_caught = true;[0m
  369 |       }[0m
      | [0;1;32m       
[0m[1mutil.c:366:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |         if (sigaction (sig[j], &act, nullptr) != 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  367 |           pfatal_with_name ("sigaction");[0m
      | [0;1;32m                                         
[0m[1mutil.c:394:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |       for (int j = 0; j < nsigs; j++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  395 |         if (xsigismember (&caught_signals, sig[j]))[0m
  396 |           xsignal (sig[j], SIG_DFL);[0m
      | [0;1;32m                                    
[0m[1mutil.c:395:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |         if (xsigismember (&caught_signals, sig[j]))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  396 |           xsignal (sig[j], SIG_DFL);[0m
      | [0;1;32m                                    
[0m[1mutil.c:458:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  458 |           switch (*p)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mutil.c:463:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  463 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mutil.c:465:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  465 |               state = ST_BACKSLASH; /* Backslash scape sequence */[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  466 |               ++p;[0m
  467 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:469:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  469 |               state = ST_CARET; /* Caret escape */[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  470 |               ++p;[0m
  471 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:473:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  473 |               if (equals_end)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  474 |                 {[0m
  475 |                   state = ST_END; /* End */[0m
  476 |                   break;[0m
  477 |                 }[0m
  478 |               FALLTHROUGH;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mutil.c:480:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  480 |               *(q++) = *(p++);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  481 |               ++count;[0m
  482 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:487:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |           switch (*p)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mutil.c:498:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  498 |               num = *p - '0';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  499 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:503:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  503 |               num = 0;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  504 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:506:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  506 |               num = '\a';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  507 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:509:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  509 |               num = '\b';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  510 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:512:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |               num = 27;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  513 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:515:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  515 |               num = '\f';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  516 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:518:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  518 |               num = '\n';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  519 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:521:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  521 |               num = '\r';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  522 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:524:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |               num = '\t';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  525 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:527:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  527 |               num = '\v';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  528 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:530:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  530 |               num = 127;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  531 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:533:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  533 |               num = ' ';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  534 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:536:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  536 |               state = ST_ERROR; /* Error! */[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  537 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:539:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  539 |               num = *p;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  540 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:552:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  552 |           if (*p < '0' || *p > '7')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  553 |             {[0m
  554 |               *(q++) = num;[0m
  555 |               ++count;[0m
  556 |               state = ST_GND;[0m
  557 |             }[0m
  558 |           else[0m
  559 |             num = (num << 3) + (*(p++) - '0');[0m
  560 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:558:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  559 |             num = (num << 3) + (*(p++) - '0');[0m
      | [0;1;32m                                              
[0m[1mutil.c:563:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  563 |           switch (*p)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mutil.c:576:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  576 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mutil.c:584:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  584 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mutil.c:592:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  592 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mutil.c:594:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  594 |               *(q++) = num;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  595 |               ++count;[0m
  596 |               state = ST_GND;[0m
  597 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:602:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  602 |           state = ST_GND;       /* Should be the next state... */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  603 |           if (*p >= '@' && *p <= '~')[0m
  604 |             {[0m
  605 |               *(q++) = *(p++) & 037;[0m
  606 |               ++count;[0m
  607 |             }[0m
  608 |           else if (*p == '?')[0m
  609 |             {[0m
  610 |               *(q++) = 127;[0m
  611 |               ++count;[0m
  612 |             }[0m
  613 |           else[0m
  614 |             state = ST_ERROR;[0m
  615 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:613:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  614 |             state = ST_ERROR;[0m
      | [0;1;32m                             
[0m[1mutil.c:618:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  618 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mutil.c:678:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  678 |   if (p == nullptr || *p == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  679 |     return;[0m
      | [0;1;32m           
[0m[1mutil.c:695:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  695 |           switch (*p)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mutil.c:698:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  698 |               ++p;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  699 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:707:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  707 |               ext = xmalloc (sizeof *ext);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  708 |               ext->next = color_ext_list;[0m
  709 |               color_ext_list = ext;[0m
  710 | [0m
  711 |               ++p;[0m
  712 |               ext->ext.string = buf;[0m
  713 | [0m
  714 |               state = (get_funky_string (&buf, &p, true, &ext->ext.len)[0m
  715 |                        ? PS_4 : PS_FAIL);[0m
  716 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:719:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  719 |               state = PS_DONE;  /* Done! */[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  720 |               goto done;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mutil.c:723:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  723 |               label[0] = *(p++);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  724 |               state = PS_2;[0m
  725 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:730:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  730 |           if (*p)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  731 |             {[0m
  732 |               label[1] = *(p++);[0m
  733 |               state = PS_3;[0m
  734 |             }[0m
  735 |           else[0m
  736 |             state = PS_FAIL;    /* Error */[0m
  737 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:735:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  736 |             state = PS_FAIL;    /* Error */[0m
      | [0;1;32m                                           
[0m[1mutil.c:740:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  740 |           state = PS_FAIL;      /* Assume failure...  */[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mutil.c:754:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  754 |               if (state == PS_FAIL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  755 |                 error (0, 0, _("unrecognized prefix: %s"), label);[0m
      | [0;1;32m                                                                  
[0m[1mutil.c:760:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  760 |           if (*(p++) == '=')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  761 |             {[0m
  762 |               ext->seq.string = buf;[0m
  763 |               state = (get_funky_string (&buf, &p, false, &ext->seq.len)[0m
  764 |                        ? PS_START : PS_FAIL);[0m
  765 |             }[0m
  766 |           else[0m
  767 |             state = PS_FAIL;[0m
  768 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:766:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  766 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  767 |             state = PS_FAIL;[0m
      | [0;1;32m                            
[0m[1mutil.c:771:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  771 |           goto done;[0m
      | [0;1;32m          ^        
[0m      | [0;32m          {        ;} 
[0m[1mutil.c:774:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  774 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mutil.c:802:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  802 |   if (! outfile || colors_style == NEVER)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  803 |     return;[0m
      | [0;1;32m           
[0m[1mutil.c:810:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |   if (colors_enabled)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  811 |     parse_diff_color ();[0m
      | [0;1;32m                        
[0m[1mutil.c:813:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  813 |   if (output_is_tty)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  814 |     install_signal_handlers ();[0m
      | [0;1;32m                               
[0m[1mutil.c:840:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  840 |     case '\a': return 'a';[0m
      | [0;1;32m               ^         
[0m      | [0;32m               {         ;} 
[0m[1mutil.c:841:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  841 |     case '\b': return 'b';[0m
      | [0;1;32m               ^         
[0m      | [0;32m               {         ;} 
[0m[1mutil.c:842:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  842 |     case '\t': return 't';[0m
      | [0;1;32m               ^         
[0m      | [0;32m               {         ;} 
[0m[1mutil.c:843:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  843 |     case '\n': return 'n';[0m
      | [0;1;32m               ^         
[0m      | [0;32m               {         ;} 
[0m[1mutil.c:844:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  844 |     case '\v': return 'v';[0m
      | [0;1;32m               ^         
[0m      | [0;32m               {         ;} 
[0m[1mutil.c:845:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  845 |     case '\f': return 'f';[0m
      | [0;1;32m               ^         
[0m      | [0;32m               {         ;} 
[0m[1mutil.c:846:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  846 |     case '\r': return 'r';[0m
      | [0;1;32m               ^         
[0m      | [0;32m               {         ;} 
[0m[1mutil.c:847:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  847 |     case '"': return '"';[0m
      | [0;1;32m              ^         
[0m      | [0;32m              {         ;} 
[0m[1mutil.c:848:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  848 |     case '\\': return '\\';[0m
      | [0;1;32m               ^          
[0m      | [0;32m               {          ;} 
[0m[1mutil.c:850:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  850 |       return c < 32;[0m
      | [0;1;32m      ^            
[0m      | [0;32m      {            ;} 
[0m[1mutil.c:873:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  873 |             plus += 3;[0m
      | [0;1;32m            ^        
[0m      | [0;32m            {        ;} 
[0m[1mutil.c:876:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  876 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mutil.c:878:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  878 |             plus++;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  879 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mutil.c:898:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  898 |                 *b++ = c;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  899 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mutil.c:901:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  901 |                 *b++ = '\\';[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  902 |                 *b++ = ((c >> 6) & 03) + '0';[0m
  903 |                 *b++ = ((c >> 3) & 07) + '0';[0m
  904 |                 *b++ = ((c >> 0) & 07) + '0';[0m
  905 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mutil.c:907:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  907 |                 *b++ = '\\';[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  908 |                 *b++ = escape;[0m
  909 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mutil.c:926:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  926 |   if (outfile != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  927 |     return;[0m
      | [0;1;32m           
[0m[1mutil.c:945:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  945 |   strcpy (p, names[1]);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:945:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  945 |   strcpy (p, names[1]);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:951:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  951 |       if (fflush (stdout) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  952 |         pfatal_with_name (_("write failed"));[0m
      | [0;1;32m                                             
[0m[1mutil.c:964:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |         if (pipe (pipes) != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  965 |           pfatal_with_name ("pipe");[0m
      | [0;1;32m                                    
[0m[1mutil.c:968:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |         if (pr_pid < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  969 |           pfatal_with_name ("fork");[0m
      | [0;1;32m                                    
[0m[1mutil.c:976:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  976 |                 if (dup2 (pipes[0], STDIN_FILENO) < 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  977 |                   pfatal_with_name ("dup2");[0m
      | [0;1;32m                                            
[0m[1mutil.c:988:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  988 |             if (!outfile)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  989 |               pfatal_with_name ("fdopen");[0m
      | [0;1;32m                                          
[0m[1mutil.c:1013:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1013 |       if (currently_recursive)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1014 |         printf ("%s\n", name);[0m
      | [0;1;32m                              
[0m[1mutil.c:1023:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1023 |       print_context_header (files, (char const *const *)names, false);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1024 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mutil.c:1027:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1027 |       print_context_header (files, (char const *const *)names, true);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1028 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mutil.c:1031:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1031 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mutil.c:1034:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1034 |   if (names[0] != current_name0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1035 |     free (names[0]);[0m
      | [0;1;32m                    
[0m[1mutil.c:1036:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1036 |   if (names[1] != current_name1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1037 |     free (names[1]);[0m
      | [0;1;32m                    
[0m[1mutil.c:1051:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1051 |       if (ferror (outfile))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1052 |         fatal ("write failed");[0m
      | [0;1;32m                               
[0m[1mutil.c:1058:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1058 |       if (fclose (outfile) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1059 |         pfatal_with_name (_("write failed"));[0m
      | [0;1;32m                                             
[0m[1mutil.c:1060:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1060 |       if (waitpid (pr_pid, &wstatus, 0) < 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1061 |         pfatal_with_name ("waitpid");[0m
      | [0;1;32m                                     
[0m[1mutil.c:1066:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |       if (status)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1067 |         die (EXIT_TROUBLE, werrno,[0m
 1068 |                _(status == 126[0m
 1069 |                  ? "subsidiary program '%s' could not be invoked"[0m
 1070 |                  : status == 127[0m
 1071 |                  ? "subsidiary program '%s' not found"[0m
 1072 |                  : status == INT_MAX[0m
 1073 |                  ? "subsidiary program '%s' failed"[0m
 1074 |                  : "subsidiary program '%s' failed (exit status %d)"),[0m
 1075 |                pr_program, status);[0m
      | [0;1;32m                                   
[0m[1mutil.c:1106:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1106 |               while (isspace (c1) && c1 != '\n') c1 = *t1++;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1107 |               while (isspace (c2) && c2 != '\n') c2 = *t2++;[0m
 1108 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:1106:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1106 |               while (isspace (c1) && c1 != '\n') c1 = *t1++;[0m
      | [0;1;32m                                                ^           
[0m      | [0;32m                                                 {
[0m[1mutil.c:1107:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1107 |               while (isspace (c2) && c2 != '\n') c2 = *t2++;[0m
      | [0;1;32m                                                ^           
[0m      | [0;32m                                                 {
[0m[1mutil.c:1114:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1114 |               if (isspace (c1))[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mutil.c:1174:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1174 |                       while ((c = *p) != '\n' && isspace (c))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1175 |                         ++p;[0m
      | [0;1;32m                            
[0m[1mutil.c:1176:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1176 |                       if (c != '\n')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1177 |                         break;[0m
      | [0;1;32m                              
[0m[1mutil.c:1182:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1182 |                       while ((c = *p) != '\n' && isspace (c))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1183 |                         ++p;[0m
      | [0;1;32m                            
[0m[1mutil.c:1184:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1184 |                       if (c != '\n')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1185 |                         break;[0m
      | [0;1;32m                              
[0m[1mutil.c:1190:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1190 |               if (ignore_white_space == IGNORE_TRAILING_SPACE)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1191 |                 break;[0m
 1192 |               FALLTHROUGH;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mutil.c:1190:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1190 |               if (ignore_white_space == IGNORE_TRAILING_SPACE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1191 |                 break;[0m
      | [0;1;32m                      
[0m[1mutil.c:1194:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1194 |               if ((c1 == ' ' && c2 == '\t')[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mutil.c:1200:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1200 |                       if (c1 == ' ')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1201 |                         column++;[0m
 1202 |                       else if (c1 == '\t')[0m
      | [0;32m                      } 
[0m[1mutil.c:1202:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1202 |                       else if (c1 == '\t')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1203 |                         column += tabsize - column % tabsize;[0m
 1204 |                       else[0m
      | [0;32m                      } 
[0m[1mutil.c:1204:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1204 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1205 |                         break;[0m
      | [0;1;32m                              
[0m[1mutil.c:1209:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1209 |                       if (c2 == ' ')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1210 |                         column2++;[0m
 1211 |                       else if (c2 == '\t')[0m
      | [0;32m                      } 
[0m[1mutil.c:1211:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1211 |                       else if (c2 == '\t')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1212 |                         column2 += tabsize - column2 % tabsize;[0m
 1213 |                       else[0m
      | [0;32m                      } 
[0m[1mutil.c:1213:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1213 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1214 |                         break;[0m
      | [0;1;32m                              
[0m[1mutil.c:1216:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1216 |                   if (column != column2)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1217 |                     return true;[0m
      | [0;1;32m                                
[0m[1mutil.c:1222:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1222 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mutil.c:1233:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1233 |           if (c1 != c2)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1234 |             break;[0m
      | [0;1;32m                  
[0m[1mutil.c:1236:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1236 |       if (c1 == '\n')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1237 |         return false;[0m
      | [0;1;32m                     
[0m[1mutil.c:1346:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1346 |       fprintf (out, flag_format_1, line_flag_1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1346:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1346 |       fprintf (out, flag_format_1, line_flag_1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1354:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1354 |       fprintf (out, "\n\\ %s\n", _("No newline at end of file"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1354:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1354 |       fprintf (out, "\n\\ %s\n", _("No newline at end of file"));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1375:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1375 |           if (written < to_write)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1376 |             return;[0m
      | [0;1;32m                   
[0m[1mutil.c:1403:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1403 |               {[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1404 |                 size_t spaces = tab_size - column % tab_size;[0m
 1405 |                 column += spaces;[0m
 1406 |                 do[0m
 1407 |                   putc (' ', out);[0m
 1408 |                 while (--spaces);[0m
 1409 |               }[0m
 1410 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:1406:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1406 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1407 |                   putc (' ', out);[0m
 1408 |                 while (--spaces);[0m
      | [0;32m                } 
[0m[1mutil.c:1413:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1413 |               putc (c, out);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1414 |               if (flag_format && t < limit && *t != '\n')[0m
 1415 |                 fprintf (out, flag_format, line_flag);[0m
 1416 |               column = 0;[0m
 1417 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1m../lib/unlocked-io.h:120:21: [0m[0;1;36mnote: [0mexpanded from macro 'putc'[0m
  120 | #  define putc(x,y) putc_unlocked (x,y)[0m
      | [0;1;32m                    ^
[0m[1mutil.c:1414:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1414 |               if (flag_format && t < limit && *t != '\n')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1415 |                 fprintf (out, flag_format, line_flag);[0m
      | [0;1;32m                                                      
[0m[1mutil.c:1415:17: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1415 |                 fprintf (out, flag_format, line_flag);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mutil.c:1415:17: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1415 |                 fprintf (out, flag_format, line_flag);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mutil.c:1420:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1420 |               if (column == 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1421 |                 continue;[0m
 1422 |               column--;[0m
 1423 |               putc (c, out);[0m
 1424 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:1420:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1420 |               if (column == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1421 |                 continue;[0m
      | [0;1;32m                         
[0m[1mutil.c:1427:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1427 |               column += isprint (c) != 0;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1428 |               putc (c, out);[0m
 1429 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mutil.c:1451:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1451 |   if (color_context != RESET_CONTEXT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1452 |     process_signals ();[0m
      | [0;1;32m                       
[0m[1mutil.c:1459:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1459 |           put_indicator (&color_indicator[C_HEADER]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1460 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:1463:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1463 |           put_indicator (&color_indicator[C_LINE]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1464 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:1467:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1467 |           put_indicator (&color_indicator[C_ADD]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1468 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:1471:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1471 |           put_indicator (&color_indicator[C_DELETE]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1472 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:1475:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1475 |           put_indicator (&color_indicator[C_RESET]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1476 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mutil.c:1479:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1479 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1mutil.c:1528:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1528 |   if (trans_b > trans_a)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1529 |     fprintf (outfile, "%"pI"d%c%"pI"d", trans_a, sepchar, trans_b);[0m
 1530 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:1529:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1529 |     fprintf (outfile, "%"pI"d%c%"pI"d", trans_a, sepchar, trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:1529:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1529 |     fprintf (outfile, "%"pI"d%c%"pI"d", trans_a, sepchar, trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:1530:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1530 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1531 |     fprintf (outfile, "%"pI"d", trans_b);[0m
      | [0;1;32m                                         
[0m[1mutil.c:1531:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1531 |     fprintf (outfile, "%"pI"d", trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:1531:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1531 |     fprintf (outfile, "%"pI"d", trans_b);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:1589:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1589 |           if (skip_white_space)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1590 |             for (; *p != '\n'; p++)[0m
 1591 |               if (! isspace ((unsigned char) *p))[0m
 1592 |                 {[0m
 1593 |                   if (! skip_leading_white_space)[0m
 1594 |                     p = line;[0m
 1595 |                   break;[0m
 1596 |                 }[0m
      | [0;1;32m                 
[0m[1mutil.c:1590:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1590 |             for (; *p != '\n'; p++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1591 |               if (! isspace ((unsigned char) *p))[0m
 1592 |                 {[0m
 1593 |                   if (! skip_leading_white_space)[0m
 1594 |                     p = line;[0m
 1595 |                   break;[0m
 1596 |                 }[0m
      | [0;1;32m                 
[0m[1mutil.c:1593:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1593 |                   if (! skip_leading_white_space)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1594 |                     p = line;[0m
      | [0;1;32m                             
[0m[1mutil.c:1599:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1599 |                   || re_search (&ignore_regexp, line, len, 0, len, 0) < 0))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 1600 |             trivial = 0;[0m
      | [0;1;32m                        
[0m[1mutil.c:1610:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1610 |           if (skip_white_space)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1611 |             for (; *p != '\n'; p++)[0m
 1612 |               if (! isspace ((unsigned char) *p))[0m
 1613 |                 {[0m
 1614 |                   if (! skip_leading_white_space)[0m
 1615 |                     p = line;[0m
 1616 |                   break;[0m
 1617 |                 }[0m
      | [0;1;32m                 
[0m[1mutil.c:1611:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1611 |             for (; *p != '\n'; p++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1612 |               if (! isspace ((unsigned char) *p))[0m
 1613 |                 {[0m
 1614 |                   if (! skip_leading_white_space)[0m
 1615 |                     p = line;[0m
 1616 |                   break;[0m
 1617 |                 }[0m
      | [0;1;32m                 
[0m[1mutil.c:1614:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1614 |                   if (! skip_leading_white_space)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1615 |                     p = line;[0m
      | [0;1;32m                             
[0m[1mutil.c:1620:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1620 |                   || re_search (&ignore_regexp, line, len, 0, len, 0) < 0))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 1621 |             trivial = 0;[0m
      | [0;1;32m                        
[0m[1mutil.c:1632:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1632 |   if (trivial)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1633 |     return UNCHANGED;[0m
      | [0;1;32m                     
[0m170 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
