Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/make-4.4.1
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 32 files out of 32 in compilation database ...
[ 1/32][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmph3c3ymga.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/getopt.c
[ 2/32][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpkwx6sod5.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/getopt1.c
[ 3/32][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp2rqmacdu.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/version.c
[ 4/32][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpwilo0n3u.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/remote-stub.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 5/32][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpcjsg5q2_.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/signame.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 6/32][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpm3kdilqe.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/loadapi.c
[1msrc/loadapi.c:56:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   57 |     flp = NULL;[0m
      | [0;1;32m               
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 7/32][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp465ng_cq.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/lib/concat-filename.c
[1mconcat-filename.c:48:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   48 |       if (result == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   49 |         return NULL; /* errno is set here */[0m
      | [0;1;32m                                            
[0m[1mconcat-filename.c:62:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       if (result == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   63 |         return NULL; /* errno is set here */[0m
      | [0;1;32m                                            
[0m[1mconcat-filename.c:64:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   64 |       memcpy (result, directory, directory_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconcat-filename.c:64:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   64 |       memcpy (result, directory, directory_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mconcat-filename.c:66:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (need_slash)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   67 |         *p++ = '/';[0m
      | [0;1;32m                   
[0m[1mconcat-filename.c:70:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |   if (suffix != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   71 |     stpcpy (p, suffix);[0m
      | [0;1;32m                       
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 8/32][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpbg0_smnn.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/ar.c
[1msrc/ar.c:39:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (p == NULL || p == name)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   40 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/ar.c:43:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |   if (*end != ')' || end == p + 1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   44 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/ar.c:46:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   46 |   if (p[1] == '(' && end[-1] == ')')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   47 |     OS (fatal, NILF, _("attempt to use unsupported feature: '%s'"), name);[0m
      | [0;1;32m                                                                          
[0m[1msrc/ar.c:65:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   66 |     OS (fatal, NILF, "Internal: ar_parse_name: bad name '%s'", *arname_p);[0m
      | [0;1;32m                                                                          
[0m[1msrc/ar.c:107:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |     if (arfile == 0 && file_exists_p (arname))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  108 |       arfile = enter_file (strcache_add (arname));[0m
      | [0;1;32m                                                  
[0m[1msrc/ar.c:110:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |     if (arfile != 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  111 |       (void) f_mtime (arfile, 0);[0m
      | [0;1;32m                                 
[0m[1msrc/ar.c:151:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  151 |       OS (error, NILF, _("touch: Archive '%s' does not exist"), arname);[0m
      | [0;1;32m          ^
[0m      | [0;32m      {
[0m  152 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/makeint.h:552:31: [0m[0;1;36mnote: [0mexpanded from macro 'OS'[0m
  552 | #define OS(_t,_a,_f,_s)       _t((_a), strlen (_s), (_f), (_s))[0m
      | [0;1;32m                              ^
[0m[1msrc/ar.c:154:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  154 |       OS (error, NILF, _("touch: '%s' is not a valid archive"), arname);[0m
      | [0;1;32m          ^
[0m      | [0;32m      {
[0m  155 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/makeint.h:552:31: [0m[0;1;36mnote: [0mexpanded from macro 'OS'[0m
  552 | #define OS(_t,_a,_f,_s)       _t((_a), strlen (_s), (_f), (_s))[0m
      | [0;1;32m                              ^
[0m[1msrc/ar.c:157:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |       perror_with_name ("touch: ", arname);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  158 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/ar.c:160:12: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  160 |       OSS (error, NILF,[0m
      | [0;1;32m           ^
[0m      | [0;32m      {
[0m  161 |            _("touch: Member '%s' does not exist in '%s'"), memname, arname);[0m
  162 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/makeint.h:553:31: [0m[0;1;36mnote: [0mexpanded from macro 'OSS'[0m
  553 | #define OSS(_t,_a,_f,_s1,_s2) _t((_a), strlen (_s1) + strlen (_s2), \[0m
      | [0;1;32m                              ^
[0m[1msrc/ar.c:164:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |       val = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  165 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/ar.c:167:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  167 |       OS (error, NILF,[0m
      | [0;1;32m          ^
[0m      | [0;32m      {
[0m  168 |           _("touch: Bad return code from ar_member_touch on '%s'"), name);[0m
      | [0;1;32m                                                                         
[0m      | [0;32m                                                                         ;} 
[0m[1msrc/makeint.h:552:31: [0m[0;1;36mnote: [0mexpanded from macro 'OS'[0m
  552 | #define OS(_t,_a,_f,_s)       _t((_a), strlen (_s), (_f), (_s))[0m
      | [0;1;32m                              ^
[0m[1msrc/ar.c:236:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |   for (p = pattern; *p != '\0'; ++p)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m[1msrc/ar.c:244:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  244 |         if (quote)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  245 |           ++p;[0m
  246 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/ar.c:244:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |         if (quote)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  245 |           ++p;[0m
      | [0;1;32m              
[0m[1msrc/ar.c:249:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  249 |         opened = 1;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  250 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/ar.c:253:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  253 |         if (opened)[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  254 |           return 1;[0m
  255 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/ar.c:253:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |         if (opened)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  254 |           return 1;[0m
      | [0;1;32m                   
[0m[1msrc/ar.c:274:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |   if (! ar_glob_pattern_p (member_pattern, 1))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  275 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/ar.c:311:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |   if (state.chain == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  312 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/ar.c:317:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |   for (n = state.chain; n != 0; n = n->next)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  318 |     names[i++] = n->name;[0m
      | [0;1;32m                         
[0m[1msrc/ar.c:326:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |   for (n = state.chain; n != 0; n = n->next)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  327 |     n->name = names[i++];[0m
      | [0;1;32m                         
[0m24 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 9/32][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpu4_hkjaw.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/default.c
[1msrc/default.c:689:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |   if (no_builtin_rules_flag)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  690 |     define_variable_cname ("SUFFIXES", "", o_default, 0);[0m
  691 |   else[0m
      | [0;32m  } 
[0m[1msrc/default.c:697:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  697 |       for (d = suffix_file->deps; d; d = d->next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  698 |         d->file->builtin = 1;[0m
      | [0;1;32m                             
[0m[1msrc/default.c:714:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |   if (no_builtin_rules_flag)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  715 |     return;[0m
      | [0;1;32m           
[0m[1msrc/default.c:741:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |   if (no_builtin_rules_flag)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  742 |     return;[0m
      | [0;1;32m           
[0m[1msrc/default.c:744:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |   for (p = default_pattern_rules; p->target != 0; ++p)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  745 |     install_pattern_rule (p, 0);[0m
      | [0;1;32m                                
[0m[1msrc/default.c:747:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |   for (p = default_terminal_rules; p->target != 0; ++p)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  748 |     install_pattern_rule (p, 1);[0m
      | [0;1;32m                                
[0m[1msrc/default.c:756:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |   if (no_builtin_variables_flag)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  757 |     return;[0m
      | [0;1;32m           
[0m[1msrc/default.c:759:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |   for (s = default_variables; *s != 0; s += 2)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  760 |     define_variable (s[0], strlen (s[0]), s[1], o_default, 1);[0m
      | [0;1;32m                                                              
[0m[1msrc/default.c:768:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  768 |   for (s = default_variables; *s != 0; s += 2)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  769 |     undefine_variable_global (s[0], strlen (s[0]), o_default);[0m
      | [0;1;32m                                                              
[0m11 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[10/32][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp8xq2e1k3.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/guile.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[11/32][14.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp7einxfye.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/load.c
[1msrc/load.c:79:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |       if (! dlp)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   80 |         dlp = dlopen (ldname, RTLD_LAZY|RTLD_GLOBAL);[0m
      | [0;1;32m                                                     
[0m[1msrc/load.c:86:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |           if (noerror)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   87 |             DB (DB_BASIC, ("%s\n", err));[0m
   88 |           else[0m
      | [0;32m          } 
[0m[1msrc/load.c:88:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   89 |             OS (error, flocp, "%s", err);[0m
      | [0;1;32m                                         
[0m[1msrc/load.c:97:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |       if (! symp)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   98 |         OS (fatal, flocp,[0m
   99 |              _("Loaded object %s is not declared to be GPL compatible"),[0m
  100 |              ldname);[0m
      | [0;1;32m                     
[0m[1msrc/load.c:150:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |           if (fp == ep)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  151 |             OS (fatal, flocp, _("Empty symbol name for load: %s"), ldname);[0m
      | [0;1;32m                                                                           
[0m[1msrc/load.c:154:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  154 |           memcpy (new, ldname, l);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/load.c:154:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  154 |           memcpy (new, ldname, l);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/load.c:157:11: [0m[0;1;35mwarning: [0m[1mValue stored to 'nmlen' is never read [clang-analyzer-deadcode.DeadStores][0m
  157 |           nmlen = l;[0m
      | [0;1;32m          ^       ~
[0m[1msrc/load.c:157:11: [0m[0;1;36mnote: [0mValue stored to 'nmlen' is never read[0m
  157 |           nmlen = l;[0m
      | [0;1;32m          ^       ~
[0m[1msrc/load.c:161:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  161 |           memcpy (symname, fp, ep - fp);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/load.c:161:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  161 |           memcpy (symname, fp, ep - fp);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/load.c:173:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |   if (file && file->loaded)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  174 |     return -1;[0m
      | [0;1;32m              
[0m[1msrc/load.c:196:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |       if (!fp)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  197 |         fp = ldname;[0m
  198 |       else[0m
      | [0;32m      } 
[0m[1msrc/load.c:198:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  199 |         ++fp;[0m
      | [0;1;32m             
[0m[1msrc/load.c:200:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |       while (isalnum ((unsigned char) *fp) || *fp == '_')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  201 |         *(p++) = *(fp++);[0m
      | [0;1;32m                         
[0m[1msrc/load.c:202:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  202 |       strcpy (p, SYMBOL_EXTENSION);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/load.c:202:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  202 |       strcpy (p, SYMBOL_EXTENSION);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/load.c:210:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |   if (! symp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  211 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/load.c:217:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |   if (r)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  218 |     do_variable_definition(flocp, ".LOADED", ldname, o_file, f_append_value, 0);[0m
      | [0;1;32m                                                                                
[0m[1msrc/load.c:229:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |   for (d = loaded_syms; d != NULL; d = d->next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  230 |     if (streq (d->name, name) && d->dlp)[0m
  231 |       {[0m
  232 |         DB (DB_VERBOSE, (_("Unloading shared object %s\n"), name));[0m
  233 |         rc = dlclose (d->dlp);[0m
  234 |         if (rc)[0m
  235 |           perror_with_name ("dlclose: ", d->name);[0m
  236 |         else[0m
  237 |           d->dlp = NULL;[0m
  238 |         break;[0m
  239 |       }[0m
      | [0;1;32m       
[0m[1msrc/load.c:234:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |         if (rc)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  235 |           perror_with_name ("dlclose: ", d->name);[0m
  236 |         else[0m
      | [0;32m        } 
[0m[1msrc/load.c:236:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  237 |           d->dlp = NULL;[0m
      | [0;1;32m                        
[0m20 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[12/32][29.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp8fvnvcua.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/strcache.c
[1msrc/strcache.c:80:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   80 |   memmove (res, str, len);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/strcache.c:80:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
   80 |   memmove (res, str, len);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/strcache.c:110:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |   for (; *spp != NULL; spp = &(*spp)->next)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  111 |     if ((*spp)->bytesfree > sz)[0m
  112 |       break;[0m
      | [0;1;32m            
[0m[1msrc/strcache.c:111:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |     if ((*spp)->bytesfree > sz)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  112 |       break;[0m
      | [0;1;32m            
[0m[1msrc/strcache.c:149:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  149 |   memcpy (new->buffer, str, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/strcache.c:149:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  149 |   memcpy (new->buffer, str, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/strcache.c:189:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   if (len > USHRT_MAX - 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  190 |     return add_hugestring (str, len);[0m
      | [0;1;32m                                     
[0m[1msrc/strcache.c:199:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |   if (!HASH_VACANT (key))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  200 |     return key;[0m
      | [0;1;32m               
[0m[1msrc/strcache.c:214:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   for (sp = strcache; sp != 0; sp = sp->next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  215 |     if (str >= sp->buffer && str < sp->buffer + sp->end)[0m
  216 |       return 1;[0m
      | [0;1;32m               
[0m[1msrc/strcache.c:215:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |     if (str >= sp->buffer && str < sp->buffer + sp->end)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  216 |       return 1;[0m
      | [0;1;32m               
[0m[1msrc/strcache.c:217:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |   for (sp = fullcache; sp != 0; sp = sp->next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  218 |     if (str >= sp->buffer && str < sp->buffer + sp->end)[0m
  219 |       return 1;[0m
      | [0;1;32m               
[0m[1msrc/strcache.c:218:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |     if (str >= sp->buffer && str < sp->buffer + sp->end)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  219 |       return 1;[0m
      | [0;1;32m               
[0m[1msrc/strcache.c:223:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |     for (hp = hugestrings; hp != 0; hp = hp->next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  224 |       if (str == hp->buffer)[0m
  225 |         return 1;[0m
      | [0;1;32m                 
[0m[1msrc/strcache.c:224:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |       if (str == hp->buffer)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  225 |         return 1;[0m
      | [0;1;32m                 
[0m[1msrc/strcache.c:248:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  248 |       memcpy (key, str, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/strcache.c:248:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  248 |       memcpy (key, str, len);[0m
      | [0;1;32m      ^~~~~~
[0m15 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[13/32][57.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpwb3okyl5.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/hash.c
[1msrc/hash.c:50:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   50 |       fprintf (stderr, _("can't allocate %lu bytes for hash table: memory exhausted"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/hash.c:50:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   50 |       fprintf (stderr, _("can't allocate %lu bytes for hash table: memory exhausted"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/hash.c:98:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |       if (*slot == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   99 |         return (deleted_slot ? deleted_slot : slot);[0m
      | [0;1;32m                                                    
[0m[1msrc/hash.c:102:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |           if (deleted_slot == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  103 |             deleted_slot = slot;[0m
      | [0;1;32m                                
[0m[1msrc/hash.c:107:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |           if (key == *slot)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  108 |             return slot;[0m
      | [0;1;32m                        
[0m[1msrc/hash.c:109:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |           if ((*ht->ht_compare) (key, *slot) == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  110 |             return slot;[0m
      | [0;1;32m                        
[0m[1msrc/hash.c:113:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |       if (!hash_2)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  114 |           hash_2 = (*ht->ht_hash_2) (key) | 1;[0m
      | [0;1;32m                                              
[0m[1msrc/hash.c:142:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |       if (old_item == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  143 |         ht->ht_empty_slots--;[0m
      | [0;1;32m                             
[0m[1msrc/hash.c:144:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'old_item' is never read [clang-analyzer-deadcode.DeadStores][0m
  144 |       old_item = item;[0m
      | [0;1;32m      ^          ~~~~
[0m[1msrc/hash.c:144:7: [0m[0;1;36mnote: [0mValue stored to 'old_item' is never read[0m
  144 |       old_item = item;[0m
      | [0;1;32m      ^          ~~~~
[0m[1msrc/hash.c:152:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  153 |     return (void *) slot;[0m
      | [0;1;32m                         
[0m[1msrc/hash.c:173:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  174 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/hash.c:185:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |       if (!HASH_VACANT (item))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  186 |         free (item);[0m
      | [0;1;32m                    
[0m[1msrc/hash.c:198:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |   for (; vec < end; vec++)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  199 |     *vec = 0;[0m
      | [0;1;32m             
[0m[1msrc/hash.c:210:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |   if (free_items)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  211 |     hash_free_items (ht);[0m
  212 |   else[0m
      | [0;32m  } 
[0m[1msrc/hash.c:230:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |       if (!HASH_VACANT (*slot))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  231 |         (*map) (*slot);[0m
      | [0;1;32m                       
[0m[1msrc/hash.c:243:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |       if (!HASH_VACANT (*slot))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  244 |         (*map) (*slot, arg);[0m
      | [0;1;32m                            
[0m[1msrc/hash.c:280:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  280 |   fprintf (out_FILE, _("Load=%lu/%lu=%.0f%%, "), ht->ht_fill, ht->ht_size,[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/hash.c:280:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  280 |   fprintf (out_FILE, _("Load=%lu/%lu=%.0f%%, "), ht->ht_fill, ht->ht_size,[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/hash.c:282:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  282 |   fprintf (out_FILE, _("Rehash=%u, "), ht->ht_rehashes);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/hash.c:282:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  282 |   fprintf (out_FILE, _("Rehash=%u, "), ht->ht_rehashes);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/hash.c:283:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  283 |   fprintf (out_FILE, _("Collisions=%lu/%lu=%.0f%%"), ht->ht_collisions, ht->ht_lookups,[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/hash.c:283:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  283 |   fprintf (out_FILE, _("Collisions=%lu/%lu=%.0f%%"), ht->ht_collisions, ht->ht_lookups,[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/hash.c:299:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |   if (vector_0 == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  300 |     vector_0 = MALLOC (void *, ht->ht_fill + 1);[0m
      | [0;1;32m                                                
[0m[1msrc/hash.c:303:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |   for (slot = ht->ht_vec; slot < end; slot++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  304 |     if (!HASH_VACANT (*slot))[0m
  305 |       *vector++ = *slot;[0m
      | [0;1;32m                        
[0m[1msrc/hash.c:304:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |     if (!HASH_VACANT (*slot))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  305 |       *vector++ = *slot;[0m
      | [0;1;32m                        
[0m[1msrc/hash.c:308:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   if (compare)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  309 |     qsort (vector_0, ht->ht_fill, sizeof (void *), compare);[0m
      | [0;1;32m                                                            
[0m[1msrc/hash.c:378:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  378 |     sum_get_unaligned_32(a, k);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:378:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  378 |     sum_get_unaligned_32(a, k);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:379:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  379 |     sum_get_unaligned_32(b, k + 4);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:379:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  379 |     sum_get_unaligned_32(b, k + 4);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:380:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  380 |     sum_get_unaligned_32(c, k + 8);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:380:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  380 |     sum_get_unaligned_32(c, k + 8);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:386:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |   if (!length)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  387 |     return c;[0m
      | [0;1;32m             
[0m[1msrc/hash.c:391:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  391 |       sum_get_unaligned_32(a, k);[0m
      | [0;1;32m      ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:391:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  391 |       sum_get_unaligned_32(a, k);[0m
      | [0;1;32m      ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:397:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  397 |       sum_get_unaligned_32(b, k);[0m
      | [0;1;32m      ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:397:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  397 |       sum_get_unaligned_32(b, k);[0m
      | [0;1;32m      ^
[0m[1msrc/hash.c:364:5: [0m[0;1;36mnote: [0mexpanded from macro 'sum_get_unaligned_32'[0m
  364 |     memcpy (&val, (p), 4);                      \[0m
      | [0;1;32m    ^~~~~~
[0m[1msrc/hash.c:402:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |   if (length == 4)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  403 |     c += (unsigned)k[3]<<24;[0m
      | [0;1;32m                            
[0m[1msrc/hash.c:404:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  404 |   if (length >= 3)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  405 |     c += (unsigned)k[2]<<16;[0m
      | [0;1;32m                            
[0m[1msrc/hash.c:406:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |   if (length >= 2)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  407 |     c += (unsigned)k[1]<<8;[0m
      | [0;1;32m                           
[0m[1msrc/hash.c:476:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  476 |     sum_up_to_nul(a, k, klen, have_nul);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:445:7: [0m[0;1;36mnote: [0mexpanded from macro 'sum_up_to_nul'[0m
  445 |       memcpy (&val, (p), UINTSZ);                    \[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/hash.c:476:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  476 |     sum_up_to_nul(a, k, klen, have_nul);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:445:7: [0m[0;1;36mnote: [0mexpanded from macro 'sum_up_to_nul'[0m
  445 |       memcpy (&val, (p), UINTSZ);                    \[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/hash.c:477:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |     if (have_nul)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  478 |       break;[0m
      | [0;1;32m            
[0m[1msrc/hash.c:483:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  483 |     sum_up_to_nul(b, k, klen, have_nul);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:445:7: [0m[0;1;36mnote: [0mexpanded from macro 'sum_up_to_nul'[0m
  445 |       memcpy (&val, (p), UINTSZ);                    \[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/hash.c:483:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  483 |     sum_up_to_nul(b, k, klen, have_nul);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:445:7: [0m[0;1;36mnote: [0mexpanded from macro 'sum_up_to_nul'[0m
  445 |       memcpy (&val, (p), UINTSZ);                    \[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/hash.c:484:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |     if (have_nul)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  485 |       break;[0m
      | [0;1;32m            
[0m[1msrc/hash.c:490:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  490 |     sum_up_to_nul(c, k, klen, have_nul);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:445:7: [0m[0;1;36mnote: [0mexpanded from macro 'sum_up_to_nul'[0m
  445 |       memcpy (&val, (p), UINTSZ);                    \[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/hash.c:490:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  490 |     sum_up_to_nul(c, k, klen, have_nul);[0m
      | [0;1;32m    ^
[0m[1msrc/hash.c:445:7: [0m[0;1;36mnote: [0mexpanded from macro 'sum_up_to_nul'[0m
  445 |       memcpy (&val, (p), UINTSZ);                    \[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/hash.c:491:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |     if (have_nul)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  492 |       break;[0m
      | [0;1;32m            
[0m42 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[14/32][61.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpmsu8pj4j.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/lib/findprog-in.c
[1mfindprog-in.c:82:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |       for (p = progname; *p != '\0'; p++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   83 |         if (ISSLASH (*p))[0m
   84 |           {[0m
   85 |             has_slash = true;[0m
   86 |             break;[0m
   87 |           }[0m
      | [0;1;32m           
[0m[1mfindprog-in.c:93:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |         if (optimize_for_exec)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   94 |           /* The execl/execv/execlp/execvp functions will try the various[0m
   95 |              suffixes anyway and fail if no executable is found.  */[0m
   96 |           return progname;[0m
   97 |         else[0m
      | [0;32m        } 
[0m[1mfindprog-in.c:141:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |                     if (progpathname == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  142 |                       return NULL; /* errno is set here */[0m
      | [0;1;32m                                                          
[0m[1mfindprog-in.c:164:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  165 |                                   return progpathname;[0m
      | [0;1;32m                                                      
[0m[1mfindprog-in.c:172:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |                     if (errno != ENOENT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  173 |                       failure_errno = errno;[0m
      | [0;1;32m                                            
[0m[1mfindprog-in.c:215:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |   if (path == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  216 |     /* If PATH is not set, the default search path is implementation dependent.[0m
  217 |        In practice, it is treated like an empty PATH.  */[0m
  218 |     path = "";[0m
      | [0;1;32m              
[0m[1mfindprog-in.c:223:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |     if (path_copy == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  224 |       return NULL; /* errno is set here */[0m
      | [0;1;32m                                          
[0m[1mfindprog-in.c:245:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |         for (cp = path_rest; *cp != '\0' && *cp != PATH_SEPARATOR; cp++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  246 |           ;[0m
      | [0;1;32m           
[0m[1mfindprog-in.c:251:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |         if (dir == cp)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  252 |           dir = ".";[0m
      | [0;1;32m                    
[0m[1mfindprog-in.c:330:33: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  330 |                                 memcpy (progpathname + 2, progname,[0m
      | [0;1;32m                                ^~~~~~
[0m[1mfindprog-in.c:330:33: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  330 |                                 memcpy (progpathname + 2, progname,[0m
      | [0;1;32m                                ^~~~~~
[0m[1mfindprog-in.c:343:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |                 if (errno != ENOENT)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  344 |                   failure_errno = errno;[0m
      | [0;1;32m                                        
[0m[1mfindprog-in.c:387:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |         if (last)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  388 |           break;[0m
      | [0;1;32m                
[0m14 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[15/32][69.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpaeh2br66.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/misc.c
[1msrc/misc.c:50:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |       if (str[0] == '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   51 |         *error = "Missing value";[0m
   52 |       else if (*end != '\0')[0m
      | [0;32m      } 
[0m[1msrc/misc.c:52:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |       else if (*end != '\0')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   53 |         *error = "Invalid value";[0m
   54 |       else[0m
      | [0;32m      } 
[0m[1msrc/misc.c:54:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   55 |         *error = NULL;[0m
      | [0;1;32m                      
[0m[1msrc/misc.c:68:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   68 |   sprintf (buf, "%" MK_PRI64_PREFIX "d", val);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/misc.c:68:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   68 |   sprintf (buf, "%" MK_PRI64_PREFIX "d", val);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/misc.c:75:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   75 |   sprintf (buf, "%" MK_PRI64_PREFIX "u", val);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/misc.c:75:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   75 |   sprintf (buf, "%" MK_PRI64_PREFIX "u", val);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/misc.c:96:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (mk_state == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   97 |     mk_state = (unsigned int)(time (NULL) ^ make_pid ()) + 1;[0m
      | [0;1;32m                                                             
[0m[1msrc/misc.c:117:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   if (*s1 != *s2)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  118 |     return *s1 - *s2;[0m
      | [0;1;32m                     
[0m[1msrc/misc.c:134:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |   if (q == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  135 |     return;[0m
      | [0;1;32m           
[0m[1msrc/misc.c:147:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |           while (&p[i] >= line && p[i] == '\\')[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  148 |             --i;[0m
      | [0;1;32m                
[0m[1msrc/misc.c:151:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  152 |         i = 0;[0m
      | [0;1;32m              
[0m[1msrc/misc.c:156:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |       if (out != in)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  157 |         memmove (out, in, out_line_length);[0m
      | [0;1;32m                                           
[0m[1msrc/misc.c:157:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  157 |         memmove (out, in, out_line_length);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/misc.c:157:9: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  157 |         memmove (out, in, out_line_length);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/misc.c:170:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |           while (ISBLANK (*in))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  171 |             ++in;[0m
      | [0;1;32m                 
[0m[1msrc/misc.c:172:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |           if (! posix_pedantic)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  173 |             while (out > line && ISBLANK (out[-1]))[0m
  174 |               --out;[0m
      | [0;1;32m                    
[0m[1msrc/misc.c:173:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |             while (out > line && ISBLANK (out[-1]))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  174 |               --out;[0m
      | [0;1;32m                    
[0m[1msrc/misc.c:187:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  187 |   memmove(out, in, strlen(in) + 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/misc.c:187:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  187 |   memmove(out, in, strlen(in) + 1);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/misc.c:195:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   while (n-- > 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  196 |     putchar (' ');[0m
      | [0;1;32m                  
[0m[1msrc/misc.c:218:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |       if (l == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  219 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/misc.c:227:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  227 |       memcpy (result + ri, s, l);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/misc.c:227:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  227 |       memcpy (result + ri, s, l);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/misc.c:241:3: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  241 |   result[ri] = '\0';[0m
      | [0;1;32m  ^~~~~~~~~~
[0m[1msrc/misc.c:213:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  213 |   while (num-- > 0)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1msrc/misc.c:213:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  213 |   while (num-- > 0)[0m
      | [0;1;32m  ^
[0m[1msrc/misc.c:216:18: [0m[0;1;36mnote: [0mAssuming 's' is not equal to null[0m
  216 |       size_t l = xstrlen (s);[0m
      | [0;1;32m                 ^
[0m[1msrc/makeint.h:575:22: [0m[0;1;36mnote: [0mexpanded from macro 'xstrlen'[0m
  575 | #define xstrlen(_s) ((_s)==NULL ? 0 : strlen (_s))[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1msrc/misc.c:216:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  216 |       size_t l = xstrlen (s);[0m
      | [0;1;32m                 ^
[0m[1msrc/makeint.h:575:22: [0m[0;1;36mnote: [0mexpanded from macro 'xstrlen'[0m
  575 | #define xstrlen(_s) ((_s)==NULL ? 0 : strlen (_s))[0m
      | [0;1;32m                     ^
[0m[1msrc/misc.c:218:11: [0m[0;1;36mnote: [0mAssuming 'l' is not equal to 0[0m
  218 |       if (l == 0)[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/misc.c:218:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  218 |       if (l == 0)[0m
      | [0;1;32m      ^
[0m[1msrc/misc.c:221:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  221 |       if (ri + l > rlen)[0m
      | [0;1;32m      ^
[0m[1msrc/misc.c:223:20: [0m[0;1;36mnote: [0m'rlen' is 0[0m
  223 |           rlen = ((rlen ? rlen : 60) + l) * 2;[0m
      | [0;1;32m                   ^~~~
[0m[1msrc/misc.c:223:20: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msrc/misc.c:213:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  213 |   while (num-- > 0)[0m
      | [0;1;32m         ^~~~~~~~~
[0m[1msrc/misc.c:213:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 231[0m
  213 |   while (num-- > 0)[0m
      | [0;1;32m  ^
[0m[1msrc/misc.c:235:7: [0m[0;1;36mnote: [0m'ri' is not equal to 'rlen'[0m
  235 |   if (ri == rlen)[0m
      | [0;1;32m      ^~
[0m[1msrc/misc.c:235:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  235 |   if (ri == rlen)[0m
      | [0;1;32m  ^
[0m[1msrc/misc.c:241:3: [0m[0;1;36mnote: [0mAccess of the heap area at an overflowing index, while it holds only a single 'char' element[0m
  241 |   result[ri] = '\0';[0m
      | [0;1;32m  ^~~~~~~~~~
[0m[1msrc/misc.c:271:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |   if (result == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  272 |     out_of_memory ();[0m
      | [0;1;32m                     
[0m[1msrc/misc.c:282:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |   if (result == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  283 |     out_of_memory ();[0m
      | [0;1;32m                     
[0m[1msrc/misc.c:294:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |   if (! size)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  295 |     size = 1;[0m
      | [0;1;32m             
[0m[1msrc/misc.c:297:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |   if (result == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  298 |     out_of_memory ();[0m
      | [0;1;32m                     
[0m[1msrc/misc.c:314:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |   if (result == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  315 |     out_of_memory ();[0m
      | [0;1;32m                     
[0m[1msrc/misc.c:333:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |   if (result == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  334 |     out_of_memory ();[0m
      | [0;1;32m                     
[0m[1msrc/misc.c:379:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |   while (s < limit)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  380 |     if (*s++ == c)[0m
  381 |       return (char *)(s - 1);[0m
      | [0;1;32m                             
[0m[1msrc/misc.c:380:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |     if (*s++ == c)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  381 |       return (char *)(s - 1);[0m
      | [0;1;32m                             
[0m[1msrc/misc.c:391:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |   while (! END_OF_TOKEN (*s))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  392 |     ++s;[0m
      | [0;1;32m        
[0m[1msrc/misc.c:414:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |   if (*p == '\0')[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  415 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/misc.c:418:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   if (lengthptr != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  419 |     *lengthptr = *ptr - p;[0m
      | [0;1;32m                          
[0m[1msrc/misc.c:436:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  437 |         return r;[0m
      | [0;1;32m                 
[0m[1msrc/misc.c:458:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  459 |         return r;[0m
      | [0;1;32m                 
[0m[1msrc/misc.c:460:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |       if (r == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  461 |         break;[0m
      | [0;1;32m              
[0m[1msrc/misc.c:482:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  482 |       memcpy (c, d, sizeof (struct dep));[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/misc.c:482:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  482 |       memcpy (c, d, sizeof (struct dep));[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/misc.c:484:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |       if (c->need_2nd_expansion)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  485 |         c->name = xstrdup (c->name);[0m
      | [0;1;32m                                    
[0m[1msrc/misc.c:488:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |       if (firstnew == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  489 |         firstnew = lastnew = c;[0m
  490 |       else[0m
      | [0;32m      } 
[0m[1msrc/misc.c:490:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  490 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  491 |         lastnew = lastnew->next = c;[0m
      | [0;1;32m                                    
[0m[1msrc/misc.c:597:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  597 |       for (tp = tlist; *tp; ++tp)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  598 |         if ((tmpdir = getenv (*tp)) && *tmpdir != '\0')[0m
  599 |           {[0m
  600 |             struct stat st;[0m
  601 |             int r;[0m
  602 |             found = 1;[0m
  603 |             EINTRLOOP(r, stat (tmpdir, &st));[0m
  604 |             if (r < 0)[0m
  605 |               OSSS (error, NILF,[0m
  606 |                     _("%s value %s: %s"), *tp, tmpdir, strerror (errno));[0m
  607 |             else if (! S_ISDIR (st.st_mode))[0m
  608 |               OSS (error, NILF,[0m
  609 |                    _("%s value %s: not a directory"), *tp, tmpdir);[0m
  610 |             else[0m
  611 |               return tmpdir;[0m
  612 |           }[0m
      | [0;1;32m           
[0m[1msrc/misc.c:604:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  604 |             if (r < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  605 |               OSSS (error, NILF,[0m
  606 |                     _("%s value %s: %s"), *tp, tmpdir, strerror (errno));[0m
  607 |             else if (! S_ISDIR (st.st_mode))[0m
      | [0;32m            } 
[0m[1msrc/misc.c:607:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |             else if (! S_ISDIR (st.st_mode))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  608 |               OSS (error, NILF,[0m
  609 |                    _("%s value %s: not a directory"), *tp, tmpdir);[0m
  610 |             else[0m
      | [0;32m            } 
[0m[1msrc/misc.c:610:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  610 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  611 |               return tmpdir;[0m
      | [0;1;32m                            
[0m[1msrc/misc.c:616:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  616 |       if (found)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  617 |         OS (error, NILF, _("using default temporary directory '%s'"), tmpdir);[0m
      | [0;1;32m                                                                              
[0m[1msrc/misc.c:635:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  635 |   if (! ISDIRSEP (cp[-1]))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  636 |     *(cp++) = '/';[0m
      | [0;1;32m                  
[0m[1msrc/misc.c:639:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  639 |   strcpy (cp, DEFAULT_TMPFILE);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/misc.c:639:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  639 |   strcpy (cp, DEFAULT_TMPFILE);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/misc.c:687:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  687 |   if (name)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  688 |     *name = NULL;[0m
  689 |   else[0m
      | [0;32m  } 
[0m[1msrc/misc.c:693:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |       if (fd >= 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  694 |         return fd;[0m
      | [0;1;32m                  
[0m[1msrc/misc.c:722:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  722 |   if (name)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  723 |     *name = tmpnm;[0m
  724 |   else[0m
      | [0;32m  } 
[0m[1msrc/misc.c:728:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  728 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  729 |         OSS (error, NILF,[0m
  730 |              _("cannot unlink temporary file %s: %s"), tmpnm, strerror (errno));[0m
      | [0;1;32m                                                                                
[0m[1msrc/misc.c:753:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  754 |     return NULL;[0m
      | [0;1;32m                
[0m[1msrc/misc.c:758:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |   if (file == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  759 |     OSS (error, NILF,[0m
  760 |          _("fdopen: temporary file %s: %s"), *name, strerror (errno));[0m
      | [0;1;32m                                                                      
[0m53 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[16/32][76.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp9litgk5z.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/posixos.c
[1msrc/posixos.c:52:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |   if (state != IO_UNKNOWN)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   53 |     return state;[0m
      | [0;1;32m                 
[0m[1msrc/posixos.c:55:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |   if (STREAM_OK (stdin))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   56 |     state |= IO_STDIN_OK;[0m
      | [0;1;32m                         
[0m[1msrc/posixos.c:57:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |   if (STREAM_OK (stdout))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   58 |     state |= IO_STDOUT_OK;[0m
      | [0;1;32m                          
[0m[1msrc/posixos.c:59:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (STREAM_OK (stderr))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   60 |     state |= IO_STDERR_OK;[0m
      | [0;1;32m                          
[0m[1msrc/posixos.c:69:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |           && stbuf_o.st_ino == stbuf_e.st_ino)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m   70 |         state |= IO_COMBINED_OUTERR;[0m
      | [0;1;32m                                    
[0m[1msrc/posixos.c:136:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  137 |         pfatal_with_name ("fcntl(O_NONBLOCK)");[0m
      | [0;1;32m                                               
[0m[1msrc/posixos.c:161:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  161 |       sprintf (fifo_name, "%s/" FNAME_PREFIX "%" MK_PRI64_PREFIX "d",[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/posixos.c:161:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  161 |       sprintf (fifo_name, "%s/" FNAME_PREFIX "%" MK_PRI64_PREFIX "d",[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/posixos.c:176:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |           if (job_fds[0] < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  177 |             OSS (fatal, NILF, _("cannot open jobserver %s: %s"),[0m
  178 |                  fifo_name, strerror (errno));[0m
      | [0;1;32m                                              
[0m[1msrc/posixos.c:181:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |           if (job_fds[0] < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  182 |             OSS (fatal, NILF, _("cannot open jobserver %s: %s"),[0m
  183 |                  fifo_name, strerror (errno));[0m
      | [0;1;32m                                              
[0m[1msrc/posixos.c:192:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |       if (style && strcmp (style, "pipe") != 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  193 |         OS (fatal, NILF, _("unknown jobserver auth style '%s'"), style);[0m
      | [0;1;32m                                                                        
[0m[1msrc/posixos.c:196:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  197 |         pfatal_with_name (_("creating jobs pipe"));[0m
      | [0;1;32m                                                   
[0m[1msrc/posixos.c:207:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |   if (make_job_rfd () < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  208 |     pfatal_with_name (_("duping jobs pipe"));[0m
      | [0;1;32m                                             
[0m[1msrc/posixos.c:213:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |       if (r != 1)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  214 |         pfatal_with_name (_("init jobserver pipe"));[0m
      | [0;1;32m                                                    
[0m[1msrc/posixos.c:255:12: [0m[0;1;35mwarning: [0m[1mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  255 |   else if (sscanf (auth, "%d,%d", &rfd, &wfd) == 2)[0m
      | [0;1;32m           ^~~~~~
[0m[1msrc/posixos.c:255:12: [0m[0;1;36mnote: [0mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11[0m
  255 |   else if (sscanf (auth, "%d,%d", &rfd, &wfd) == 2)[0m
      | [0;1;32m           ^~~~~~
[0m[1msrc/posixos.c:258:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |       if (rfd == -2 || wfd == -2)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  259 |         return 0;[0m
      | [0;1;32m                 
[0m[1msrc/posixos.c:262:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |       if (!FD_OK (rfd) || !FD_OK (wfd))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  263 |         return 0;[0m
      | [0;1;32m                 
[0m[1msrc/posixos.c:283:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |       if (errno != EBADF)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  284 |         pfatal_with_name ("jobserver readfd");[0m
      | [0;1;32m                                              
[0m[1msrc/posixos.c:309:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |     sprintf (auth, FIFO_PREFIX "%s", fifo_name);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/posixos.c:309:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  309 |     sprintf (auth, FIFO_PREFIX "%s", fifo_name);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/posixos.c:312:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  312 |     sprintf (auth, "%d,%d", job_fds[0], job_fds[1]);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/posixos.c:312:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  312 |     sprintf (auth, "%d,%d", job_fds[0], job_fds[1]);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/posixos.c:340:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |   if (job_fds[0] >= 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  341 |     close (job_fds[0]);[0m
      | [0;1;32m                       
[0m[1msrc/posixos.c:342:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |   if (job_fds[1] >= 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  343 |     close (job_fds[1]);[0m
      | [0;1;32m                       
[0m[1msrc/posixos.c:344:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |   if (job_rfd >= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  345 |     close (job_rfd);[0m
      | [0;1;32m                    
[0m[1msrc/posixos.c:374:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |       if (is_fatal)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  375 |         pfatal_with_name (_("write jobserver"));[0m
      | [0;1;32m                                                
[0m[1msrc/posixos.c:397:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |       if (r != 1)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  398 |         break;[0m
      | [0;1;32m              
[0m[1msrc/posixos.c:445:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  445 |   if (job_rfd < 0 && job_fds[0] >= 0 && make_job_rfd () < 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  446 |     pfatal_with_name (_("duping jobs pipe"));[0m
      | [0;1;32m                                             
[0m[1msrc/posixos.c:485:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  485 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  486 |         switch (errno)[0m
  487 |           {[0m
  488 |           case EINTR:[0m
  489 |             /* SIGCHLD will show up as an EINTR.  */[0m
  490 |             return 0;[0m
  491 | [0m
  492 |           case EBADF:[0m
  493 |             /* Someone closed the jobs pipe.[0m
  494 |                That shouldn't happen but if it does we're done.  */[0m
  495 |             O (fatal, NILF, _("job server shut down"));[0m
  496 | [0m
  497 |           default:[0m
  498 |             pfatal_with_name (_("pselect jobs pipe"));[0m
  499 |           }[0m
      | [0;1;32m           
[0m[1msrc/posixos.c:490:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |             return 0;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1msrc/posixos.c:495:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  495 |             O (fatal, NILF, _("job server shut down"));[0m
      | [0;1;32m               ^                                      
[0m      | [0;32m            {                                         ;} 
[0m[1msrc/makeint.h:551:31: [0m[0;1;36mnote: [0mexpanded from macro 'O'[0m
  551 | #define O(_t,_a,_f)           _t((_a), 0, (_f))[0m
      | [0;1;32m                              ^
[0m[1msrc/posixos.c:498:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  498 |             pfatal_with_name (_("pselect jobs pipe"));[0m
      | [0;1;32m            ^                                        
[0m      | [0;32m            {                                        ;} 
[0m[1msrc/posixos.c:501:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if (r == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  502 |         /* Timeout.  */[0m
  503 |         return 0;[0m
      | [0;1;32m                 
[0m[1msrc/posixos.c:511:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |           if (errno == EAGAIN)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  512 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/posixos.c:673:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  673 |       sprintf (mutex, MUTEX_PREFIX "%s", osync_tmpfile);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/posixos.c:673:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  673 |       sprintf (mutex, MUTEX_PREFIX "%s", osync_tmpfile);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/posixos.c:692:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |   if (osync_handle < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  693 |     OSS (fatal, NILF, _("cannot open output sync mutex %s: %s"),[0m
  694 |          osync_tmpfile, strerror (errno));[0m
      | [0;1;32m                                          
[0m[1msrc/posixos.c:754:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  754 |       if (fcntl (osync_handle, F_SETLKW, &fl) == -1)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  755 |         perror ("fcntl()");[0m
      | [0;1;32m                           
[0m[1msrc/posixos.c:864:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  864 |       if (fd >= 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  865 |         return fd;[0m
      | [0;1;32m                  
[0m[1msrc/posixos.c:876:7: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
  876 |   if (streq (tdir, DEFAULT_TMPDIR))[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/posixos.c:889:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  889 |       if (fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  890 |         OS (error, NILF, "dup: %s", strerror (errno));[0m
      | [0;1;32m                                                      
[0m39 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[17/32][91.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmppxk4aupy.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/arscan.c
[1msrc/arscan.c:393:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |   while (ptr < ep && *ptr == ' ')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  394 |     ++ptr;[0m
      | [0;1;32m          
[0m[1msrc/arscan.c:400:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |       if (*ptr < '0' || *ptr > maxchar)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  401 |         OSSS (fatal, NILF,[0m
  402 |               _("Invalid %s for archive %s member %s"), type, archive, name);[0m
      | [0;1;32m                                                                             
[0m[1msrc/arscan.c:404:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  404 |       if (nv < val || nv > max)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  405 |         OSSS (fatal, NILF,[0m
  406 |               _("Invalid %s for archive %s member %s"), type, archive, name);[0m
      | [0;1;32m                                                                             
[0m[1msrc/arscan.c:454:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |   if (desc < 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  455 |     return -1;[0m
      | [0;1;32m              
[0m[1msrc/arscan.c:462:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |     if (nread != SARMAG || memcmp (buf, ARMAG, SARMAG))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  463 |       goto invalid;[0m
      | [0;1;32m                   
[0m[1msrc/arscan.c:578:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  578 |         memset(&member_header, '\0', sizeof (member_header));[0m
      | [0;1;32m        ^~~~~~
[0m[1msrc/arscan.c:578:9: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  578 |         memset(&member_header, '\0', sizeof (member_header));[0m
      | [0;1;32m        ^~~~~~
[0m[1msrc/arscan.c:581:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |         if (o < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  582 |           goto invalid;[0m
      | [0;1;32m                       
[0m[1msrc/arscan.c:653:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |         if (nread == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  654 |           /* No data left means end of file; that is OK.  */[0m
  655 |           break;[0m
      | [0;1;32m                
[0m[1msrc/arscan.c:677:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  677 |         memcpy (name, member_header.ar_name, sizeof member_header.ar_name);[0m
      | [0;1;32m        ^~~~~~
[0m[1msrc/arscan.c:677:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  677 |         memcpy (name, member_header.ar_name, sizeof member_header.ar_name);[0m
      | [0;1;32m        ^~~~~~
[0m[1msrc/arscan.c:680:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  680 |           do[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  681 |             *p = '\0';[0m
  682 |           while (p > name && *--p == ' ');[0m
      | [0;32m          } 
[0m[1msrc/arscan.c:696:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |           if (*p == '/')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  697 |             *p = '\0';[0m
      | [0;1;32m                      
[0m[1msrc/arscan.c:713:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |               if (err|| name_off >= namemap_size)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  714 |                 goto invalid;[0m
      | [0;1;32m                             
[0m[1msrc/arscan.c:718:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |               if (name_len < 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  719 |                 goto invalid;[0m
      | [0;1;32m                             
[0m[1msrc/arscan.c:729:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  729 |               if (err || name_len == 0 || name_len >= MIN (PATH_MAX, INT_MAX))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  730 |                 goto invalid;[0m
      | [0;1;32m                             
[0m[1msrc/arscan.c:734:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  734 |               if (nread < 0 || (unsigned int) nread != name_len)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  735 |                 goto invalid;[0m
      | [0;1;32m                             
[0m[1msrc/arscan.c:804:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  804 |             if (eltsize > INT_MAX)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  805 |               goto invalid;[0m
      | [0;1;32m                           
[0m[1msrc/arscan.c:808:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |             if (nread != eltsize)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  809 |               goto invalid;[0m
      | [0;1;32m                           
[0m[1msrc/arscan.c:821:25: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory preceding the memory returned by 'alloca' [clang-analyzer-security.ArrayBound][0m
  821 |                     if (clear[-1] == '/')[0m
      | [0;1;32m                        ^
[0m[1msrc/arscan.c:925:18: [0m[0;1;36mnote: [0mCalling 'ar_scan'[0m
  925 |   intmax_t pos = ar_scan (arname, ar_member_pos, memname);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/arscan.c:454:7: [0m[0;1;36mnote: [0m'desc' is >= 0[0m
  454 |   if (desc < 0)[0m
      | [0;1;32m      ^~~~
[0m[1msrc/arscan.c:454:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  454 |   if (desc < 0)[0m
      | [0;1;32m  ^
[0m[1msrc/arscan.c:462:9: [0m[0;1;36mnote: [0mAssuming 'nread' is equal to SARMAG[0m
  462 |     if (nread != SARMAG || memcmp (buf, ARMAG, SARMAG))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~
[0m[1msrc/arscan.c:462:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/arscan.c:462:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  462 |     if (nread != SARMAG || memcmp (buf, ARMAG, SARMAG))[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/arscan.c:462:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  462 |     if (nread != SARMAG || memcmp (buf, ARMAG, SARMAG))[0m
      | [0;1;32m    ^
[0m[1msrc/arscan.c:550:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  550 |     while (1)[0m
      | [0;1;32m    ^
[0m[1msrc/arscan.c:580:9: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  580 |         EINTRLOOP (o, lseek (desc, member_offset, 0));[0m
      | [0;1;32m        ^
[0m[1msrc/makeint.h:874:49: [0m[0;1;36mnote: [0mexpanded from macro 'EINTRLOOP'[0m
  874 | #define EINTRLOOP(_v,_c)   while (((_v)=_c)==-1 && errno==EINTR)[0m
      | [0;1;32m                                                ^
[0m[1msrc/arscan.c:581:13: [0m[0;1;36mnote: [0m'o' is >= 0[0m
  581 |         if (o < 0)[0m
      | [0;1;32m            ^
[0m[1msrc/arscan.c:581:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  581 |         if (o < 0)[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:653:13: [0m[0;1;36mnote: [0mAssuming 'nread' is not equal to 0[0m
  653 |         if (nread == 0)[0m
      | [0;1;32m            ^~~~~~~~~~
[0m[1msrc/arscan.c:653:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  653 |         if (nread == 0)[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:657:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  657 |         if (nread != AR_HDR_SIZE[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1msrc/arscan.c:657:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/arscan.c:661:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  661 |                 memcmp (member_header.ar_fmag, ARFMAG, 2)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/arscan.c:665:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  665 |                 &&[0m
      | [0;1;32m                ^
[0m[1msrc/arscan.c:682:18: [0m[0;1;36mnote: [0m'p' is > 'name'[0m
  682 |           while (p > name && *--p == ' ');[0m
      | [0;1;32m                 ^
[0m[1msrc/arscan.c:682:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/arscan.c:682:30: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  682 |           while (p > name && *--p == ' ');[0m
      | [0;1;32m                             ^~~~~~~~~~~
[0m[1msrc/arscan.c:680:11: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  680 |           do[0m
      | [0;1;32m          ^
[0m[1msrc/arscan.c:691:25: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  691 |           is_namemap = (!strcmp (name, "//")[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~
[0m[1msrc/arscan.c:692:25: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  692 |                         || !strcmp (name, "ARFILENAMES/"));[0m
      | [0;1;32m                        ^
[0m[1msrc/arscan.c:696:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  696 |           if (*p == '/')[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1msrc/arscan.c:696:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  696 |           if (*p == '/')[0m
      | [0;1;32m          ^
[0m[1msrc/arscan.c:705:17: [0m[0;1;36mnote: [0m'is_namemap' is 1[0m
  705 |           if (! is_namemap[0m
      | [0;1;32m                ^~~~~~~~~~
[0m[1msrc/arscan.c:706:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  706 |               && (name[0] == ' ' || name[0] == '/')[0m
      | [0;1;32m              ^
[0m[1msrc/arscan.c:722:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  722 |           else if (name[0] == '#'[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~
[0m[1msrc/arscan.c:723:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  723 |                    && name[1] == '1'[0m
      | [0;1;32m                   ^
[0m[1msrc/arscan.c:749:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
  749 |         eltmode = PARSE_INT (ar_mode, unsigned int, 8, "mode");[0m
      | [0;1;32m                  ^
[0m[1msrc/arscan.c:747:29: [0m[0;1;36mnote: [0mexpanded from macro 'PARSE_INT'[0m
  747 |                         _b, TYPE_MAXIMUM (_t), _n, archive, name)[0m
      | [0;1;32m                            ^
[0m[1mlib/intprops.h:48:9: [0m[0;1;36mnote: [0mexpanded from macro 'TYPE_MAXIMUM'[0m
   48 |   ((t) (! TYPE_SIGNED (t)                                               \[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:750:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  750 |         eltsize = PARSE_INT (ar_size, long, 10, "size");[0m
      | [0;1;32m                  ^
[0m[1msrc/arscan.c:747:29: [0m[0;1;36mnote: [0mexpanded from macro 'PARSE_INT'[0m
  747 |                         _b, TYPE_MAXIMUM (_t), _n, archive, name)[0m
      | [0;1;32m                            ^
[0m[1mlib/intprops.h:48:9: [0m[0;1;36mnote: [0mexpanded from macro 'TYPE_MAXIMUM'[0m
   48 |   ((t) (! TYPE_SIGNED (t)                                               \[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:751:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  751 |         eltdate = PARSE_INT (ar_date, intmax_t, 10, "date");[0m
      | [0;1;32m                  ^
[0m[1msrc/arscan.c:747:29: [0m[0;1;36mnote: [0mexpanded from macro 'PARSE_INT'[0m
  747 |                         _b, TYPE_MAXIMUM (_t), _n, archive, name)[0m
      | [0;1;32m                            ^
[0m[1mlib/intprops.h:48:9: [0m[0;1;36mnote: [0mexpanded from macro 'TYPE_MAXIMUM'[0m
   48 |   ((t) (! TYPE_SIGNED (t)                                               \[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:752:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  752 |         eltuid = PARSE_INT (ar_uid, int, 10, "uid");[0m
      | [0;1;32m                 ^
[0m[1msrc/arscan.c:747:29: [0m[0;1;36mnote: [0mexpanded from macro 'PARSE_INT'[0m
  747 |                         _b, TYPE_MAXIMUM (_t), _n, archive, name)[0m
      | [0;1;32m                            ^
[0m[1mlib/intprops.h:48:9: [0m[0;1;36mnote: [0mexpanded from macro 'TYPE_MAXIMUM'[0m
   48 |   ((t) (! TYPE_SIGNED (t)                                               \[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:753:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  753 |         eltgid = PARSE_INT (ar_gid, int, 10, "gid");[0m
      | [0;1;32m                 ^
[0m[1msrc/arscan.c:747:29: [0m[0;1;36mnote: [0mexpanded from macro 'PARSE_INT'[0m
  747 |                         _b, TYPE_MAXIMUM (_t), _n, archive, name)[0m
      | [0;1;32m                            ^
[0m[1mlib/intprops.h:48:9: [0m[0;1;36mnote: [0mexpanded from macro 'TYPE_MAXIMUM'[0m
   48 |   ((t) (! TYPE_SIGNED (t)                                               \[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:774:13: [0m[0;1;36mnote: [0m'fnval' is 0[0m
  774 |         if (fnval)[0m
      | [0;1;32m            ^~~~~
[0m[1msrc/arscan.c:774:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  774 |         if (fnval)[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:799:13: [0m[0;1;36mnote: [0m'is_namemap' is 1[0m
  799 |         if (is_namemap)[0m
      | [0;1;32m            ^~~~~~~~~~
[0m[1msrc/arscan.c:799:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  799 |         if (is_namemap)[0m
      | [0;1;32m        ^
[0m[1msrc/arscan.c:804:17: [0m[0;1;36mnote: [0mAssuming 'eltsize' is <= INT_MAX[0m
  804 |             if (eltsize > INT_MAX)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~
[0m[1msrc/arscan.c:804:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  804 |             if (eltsize > INT_MAX)[0m
      | [0;1;32m            ^
[0m[1msrc/arscan.c:808:17: [0m[0;1;36mnote: [0mAssuming 'nread' is equal to 'eltsize'[0m
  808 |             if (nread != eltsize)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~
[0m[1msrc/arscan.c:808:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  808 |             if (nread != eltsize)[0m
      | [0;1;32m            ^
[0m[1msrc/arscan.c:816:35: [0m[0;1;36mnote: [0mAssuming 'clear' is < 'limit'[0m
  816 |             for (clear = namemap; clear < limit; clear++)[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1msrc/arscan.c:816:13: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  816 |             for (clear = namemap; clear < limit; clear++)[0m
      | [0;1;32m            ^
[0m[1msrc/arscan.c:818:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  818 |                 if (*clear == '\n')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1msrc/arscan.c:818:17: [0m[0;1;36mnote: [0mTaking true branch[0m
  818 |                 if (*clear == '\n')[0m
      | [0;1;32m                ^
[0m[1msrc/arscan.c:821:25: [0m[0;1;36mnote: [0mAccess of the memory returned by 'alloca' at negative byte offset -1[0m
  821 |                     if (clear[-1] == '/')[0m
      | [0;1;32m                        ^~~~~~~~~
[0m[1msrc/arscan.c:821:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  821 |                     if (clear[-1] == '/')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  822 |                       clear[-1] = '\0';[0m
      | [0;1;32m                                       
[0m[1msrc/arscan.c:827:13: [0m[0;1;35mwarning: [0m[1mValue stored to 'is_namemap' is never read [clang-analyzer-deadcode.DeadStores][0m
  827 |             is_namemap = 0;[0m
      | [0;1;32m            ^            ~
[0m[1msrc/arscan.c:827:13: [0m[0;1;36mnote: [0mValue stored to 'is_namemap' is never read[0m
  827 |             is_namemap = 0;[0m
      | [0;1;32m            ^            ~
[0m[1msrc/arscan.c:831:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |         if (member_offset % 2 != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  832 |           member_offset++;[0m
      | [0;1;32m                          
[0m[1msrc/arscan.c:856:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (p != 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  857 |     name = p + 1;[0m
      | [0;1;32m                 
[0m[1msrc/arscan.c:910:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  910 |   if (!ar_name_equal (name, mem, truncated))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  911 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/arscan.c:934:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  934 |   if (pos < 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  935 |     return (int) pos;[0m
      | [0;1;32m                     
[0m[1msrc/arscan.c:936:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  936 |   if (!pos)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  937 |     return 1;[0m
      | [0;1;32m             
[0m[1msrc/arscan.c:942:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  942 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  943 |     return -3;[0m
      | [0;1;32m              
[0m[1msrc/arscan.c:946:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |   if (o < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  947 |     goto lose;[0m
      | [0;1;32m              
[0m[1msrc/arscan.c:949:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |   if (r != AR_HDR_SIZE)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  950 |     goto lose;[0m
      | [0;1;32m              
[0m[1msrc/arscan.c:953:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  953 |   if (r < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  954 |     goto lose;[0m
      | [0;1;32m              
[0m[1msrc/arscan.c:957:13: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  957 |   datelen = snprintf (TOCHAR (ar_hdr.ar_date), sizeof ar_hdr.ar_date,[0m
      | [0;1;32m            ^~~~~~~~
[0m[1msrc/arscan.c:957:13: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  957 |   datelen = snprintf (TOCHAR (ar_hdr.ar_date), sizeof ar_hdr.ar_date,[0m
      | [0;1;32m            ^~~~~~~~
[0m[1msrc/arscan.c:959:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  959 |   if (! (0 <= datelen && datelen < (int) sizeof ar_hdr.ar_date))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  960 |     goto lose;[0m
      | [0;1;32m              
[0m[1msrc/arscan.c:961:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  961 |   memset (ar_hdr.ar_date + datelen, ' ', sizeof ar_hdr.ar_date - datelen);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/arscan.c:961:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  961 |   memset (ar_hdr.ar_date + datelen, ' ', sizeof ar_hdr.ar_date - datelen);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/arscan.c:967:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  967 |   if (o < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  968 |     goto lose;[0m
      | [0;1;32m              
[0m[1msrc/arscan.c:970:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  970 |   if (r != AR_HDR_SIZE)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  971 |     goto lose;[0m
      | [0;1;32m              
[0m36 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[18/32][101.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpm6ts95m1.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/shuffle.c
[1msrc/shuffle.c:85:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |       if (strcasecmp (cmdarg, "random") == 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   86 |         config.seed = make_rand ();[0m
   87 |       else[0m
      | [0;32m      } 
[0m[1msrc/shuffle.c:92:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |           if (err)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   93 |             OSS (fatal, NILF, _("invalid shuffle mode: %s: '%s'"), err, cmdarg);[0m
      | [0;1;32m                                                                                
[0m[1msrc/shuffle.c:98:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   98 |       sprintf (config.strval, "%u", config.seed);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/shuffle.c:98:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   98 |       sprintf (config.strval, "%u", config.seed);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/shuffle.c:113:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |       if (i == j)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  114 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/shuffle.c:162:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |       if (dep->wait_here)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  163 |         return;[0m
      | [0;1;32m               
[0m[1msrc/shuffle.c:168:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |   if (ndeps == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  169 |     return;[0m
      | [0;1;32m           
[0m[1msrc/shuffle.c:175:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |   for (dep = deps, dp = da; dep; dep = dep->next, dp++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  176 |     *dp = dep;[0m
      | [0;1;32m              
[0m[1msrc/shuffle.c:182:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |   for (dep = deps, dp = da; dep; dep = dep->next, dp++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  183 |     dep->shuf = *dp;[0m
      | [0;1;32m                    
[0m[1msrc/shuffle.c:195:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (!f)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  196 |     return;[0m
      | [0;1;32m           
[0m[1msrc/shuffle.c:199:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |   if (f->was_shuffled)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  200 |     return;[0m
      | [0;1;32m           
[0m[1msrc/shuffle.c:206:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |   for (dep = f->deps; dep; dep = dep->next)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  207 |     shuffle_file_deps_recursive (dep->file);[0m
      | [0;1;32m                                            
[0m[1msrc/shuffle.c:221:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |   if (config.mode == sm_none)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  222 |     return;[0m
      | [0;1;32m           
[0m[1msrc/shuffle.c:225:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |   if (not_parallel)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  226 |     return;[0m
      | [0;1;32m           
[0m[1msrc/shuffle.c:229:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |   if (config.mode == sm_random)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  230 |     make_seed (config.seed);[0m
      | [0;1;32m                            
[0m[1msrc/shuffle.c:235:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   for (dep = deps; dep; dep = dep->next)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  236 |     shuffle_file_deps_recursive (dep->file);[0m
      | [0;1;32m                                            
[0m17 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[19/32][114.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp9afjan8x.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/implicit.c
[1msrc/implicit.c:48:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   48 |   if (pattern_search (file, 0, depth, 0, 0))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   49 |     return 1;[0m
      | [0;1;32m             
[0m[1msrc/implicit.c:58:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (pattern_search (file, 1, depth, 0, 0))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m   59 |         return 1;[0m
      | [0;1;32m                 
[0m[1msrc/implicit.c:86:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |   if (c == '\0')[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   87 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/implicit.c:104:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  104 |           c = *(p++);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1msrc/implicit.c:105:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |           if (c == '$')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  106 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/implicit.c:111:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |           if (c == '(')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  112 |             closeparen = ')';[0m
  113 |           else if (c == '{')[0m
      | [0;32m          } 
[0m[1msrc/implicit.c:113:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |           else if (c == '{')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  114 |             closeparen = '}';[0m
  115 |           else[0m
      | [0;32m          } 
[0m[1msrc/implicit.c:115:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  116 |             /* This is a single-letter variable reference.  */[0m
  117 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/implicit.c:121:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |               if (*p == c)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  122 |                 ++count;[0m
  123 |               else if (*p == closeparen && --count < 0)[0m
      | [0;32m              } 
[0m[1msrc/implicit.c:132:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  132 |           goto done;[0m
      | [0;1;32m          ^        
[0m      | [0;32m          {        ;} 
[0m[1msrc/implicit.c:135:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  135 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/implicit.c:144:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |   if (length)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  145 |     *length = p - beg;[0m
      | [0;1;32m                      
[0m[1msrc/implicit.c:278:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |   if (archive || ar_name (filename))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  279 |     lastslash = 0;[0m
  280 |   else[0m
      | [0;32m  } 
[0m[1msrc/implicit.c:320:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |       if (rule->deps != 0 && rule->cmds == 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  321 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/implicit.c:342:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |           if (recursions > 0 && target[1] == '\0' && !rule->terminal)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  343 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/implicit.c:345:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |           if (rule->lens[ti] > namelen)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  346 |             /* It can't possibly match.  */[0m
  347 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/implicit.c:377:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |               if (pathlen > stemlen)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  378 |                 continue;[0m
      | [0;1;32m                         
[0m[1msrc/implicit.c:387:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |                   && !strneq (target, lastslash + 1, stem - lastslash - 1))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  388 |                 continue;[0m
      | [0;1;32m                         
[0m[1msrc/implicit.c:391:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |                    && !strneq (target, filename, stem - filename))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  392 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/implicit.c:400:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |               || (*suffix != '\0' && !streq (&suffix[1], &stem[stemlen + 1])))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  401 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/implicit.c:404:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  404 |           if (target[1] != '\0')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  405 |             specific_rule_matched = 1;[0m
      | [0;1;32m                                      
[0m[1msrc/implicit.c:409:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |           if (rule->deps == 0 && rule->cmds == 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  410 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/implicit.c:425:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  425 |   if (nrules == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  426 |     goto done;[0m
      | [0;1;32m              
[0m[1msrc/implicit.c:430:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |   if (nrules > 1)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  431 |     qsort (tryrules, nrules, sizeof (struct tryrule), stemlen_compare);[0m
      | [0;1;32m                                                                       
[0m[1msrc/implicit.c:435:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |   if (specific_rule_matched)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  436 |     for (ri = 0; ri < nrules; ++ri)[0m
  437 |       if (!tryrules[ri].rule->terminal)[0m
  438 |         {[0m
  439 |           unsigned int j;[0m
  440 |           for (j = 0; j < tryrules[ri].rule->num; ++j)[0m
  441 |             if (tryrules[ri].rule->targets[j][1] == '\0')[0m
  442 |               {[0m
  443 |                 tryrules[ri].rule = 0;[0m
  444 |                 break;[0m
  445 |               }[0m
  446 |         }[0m
      | [0;1;32m         
[0m[1msrc/implicit.c:436:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |     for (ri = 0; ri < nrules; ++ri)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  437 |       if (!tryrules[ri].rule->terminal)[0m
  438 |         {[0m
  439 |           unsigned int j;[0m
  440 |           for (j = 0; j < tryrules[ri].rule->num; ++j)[0m
  441 |             if (tryrules[ri].rule->targets[j][1] == '\0')[0m
  442 |               {[0m
  443 |                 tryrules[ri].rule = 0;[0m
  444 |                 break;[0m
  445 |               }[0m
  446 |         }[0m
      | [0;1;32m         
[0m[1msrc/implicit.c:440:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |           for (j = 0; j < tryrules[ri].rule->num; ++j)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  441 |             if (tryrules[ri].rule->targets[j][1] == '\0')[0m
  442 |               {[0m
  443 |                 tryrules[ri].rule = 0;[0m
  444 |                 break;[0m
  445 |               }[0m
      | [0;1;32m               
[0m[1msrc/implicit.c:452:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |       if (intermed_ok)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  453 |         DBS (DB_IMPLICIT, (_("Trying harder.\n")));[0m
      | [0;1;32m                                                   
[0m[1msrc/implicit.c:473:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |           if (rule == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  474 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/implicit.c:478:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  478 |           if (intermed_ok && rule->terminal)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  479 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/implicit.c:497:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  497 |                   memcpy (pathdir, filename, pathlen);[0m
      | [0;1;32m                  ^~~~~~
[0m[1msrc/implicit.c:497:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  497 |                   memcpy (pathdir, filename, pathlen);[0m
      | [0;1;32m                  ^~~~~~
[0m[1msrc/implicit.c:516:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  516 |               memcpy (stem_str, stem, stemlen);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/implicit.c:516:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  516 |               memcpy (stem_str, stem, stemlen);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/implicit.c:523:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  523 |               memcpy (stem_str, filename, pathlen);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/implicit.c:523:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  523 |               memcpy (stem_str, filename, pathlen);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/implicit.c:524:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  524 |               memcpy (stem_str + pathlen, stem, stemlen);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/implicit.c:524:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  524 |               memcpy (stem_str + pathlen, stem, stemlen);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/implicit.c:529:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |           if (rule->deps == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  530 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/implicit.c:551:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |                   if (dep == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  552 |                     break;[0m
      | [0;1;32m                          
[0m[1msrc/implicit.c:562:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  562 |                   if (cp == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  563 |                     strcpy (depname, nptr);[0m
  564 |                   else[0m
      | [0;32m                  } 
[0m[1msrc/implicit.c:563:21: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  563 |                     strcpy (depname, nptr);[0m
      | [0;1;32m                    ^~~~~~
[0m[1msrc/implicit.c:563:21: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  563 |                     strcpy (depname, nptr);[0m
      | [0;1;32m                    ^~~~~~
[0m[1msrc/implicit.c:567:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |                       if (check_lastslash)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  568 |                         o = mempcpy (o, filename, pathlen);[0m
      | [0;1;32m                                                           
[0m[1msrc/implicit.c:571:23: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  571 |                       strcpy (o, cp + 1);[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/implicit.c:571:23: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  571 |                       strcpy (o, cp + 1);[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/implicit.c:612:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |                   if (nptr == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  613 |                     continue;[0m
      | [0;1;32m                             
[0m[1msrc/implicit.c:638:23: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  638 |                       memcpy (depname, nptr, len);[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/implicit.c:638:23: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  638 |                       memcpy (depname, nptr, len);[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/implicit.c:672:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  672 |                           if (nptr == end)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  673 |                             break;[0m
      | [0;1;32m                                  
[0m[1msrc/implicit.c:678:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  678 |                           while (cp < end && ! END_OF_TOKEN (*cp))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  679 |                             ++cp;[0m
      | [0;1;32m                                 
[0m[1msrc/implicit.c:681:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  681 |                           if (cp == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  682 |                             break;[0m
      | [0;1;32m                                  
[0m[1msrc/implicit.c:685:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  685 |                         memcpy (o, nptr, len);[0m
      | [0;1;32m                        ^~~~~~
[0m[1msrc/implicit.c:685:25: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  685 |                         memcpy (o, nptr, len);[0m
      | [0;1;32m                        ^~~~~~
[0m[1msrc/implicit.c:725:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |                           if (order_only)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  726 |                             d->ignore_mtime = 1;[0m
      | [0;1;32m                                                
[0m[1msrc/implicit.c:781:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  781 |                   memset (pat, '\0', sizeof (struct patdeps));[0m
      | [0;1;32m                  ^~~~~~
[0m[1msrc/implicit.c:781:19: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  781 |                   memset (pat, '\0', sizeof (struct patdeps));[0m
      | [0;1;32m                  ^~~~~~
[0m[1msrc/implicit.c:794:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |                   if (df && df->is_explicit)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  795 |                     pat->is_explicit = 1;[0m
      | [0;1;32m                                         
[0m[1msrc/implicit.c:808:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |                   if (df && !df->is_explicit && !d->is_explicit)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  809 |                     df->intermediate = 1;[0m
      | [0;1;32m                                         
[0m[1msrc/implicit.c:814:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |                   if (df && df->is_target)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  815 |                     /* This prerequisite is mentioned explicitly as a target of[0m
  816 |                        some rule.  */[0m
  817 |                     explicit = 1;[0m
  818 |                   else[0m
      | [0;32m                  } 
[0m[1msrc/implicit.c:818:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  819 |                     for (dp = file->deps; dp != 0; dp = dp->next)[0m
  820 |                       if (streq (d->name, dep_name (dp)))[0m
  821 |                         break;[0m
      | [0;1;32m                              
[0m[1msrc/implicit.c:819:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |                     for (dp = file->deps; dp != 0; dp = dp->next)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  820 |                       if (streq (d->name, dep_name (dp)))[0m
  821 |                         break;[0m
      | [0;1;32m                              
[0m[1msrc/implicit.c:820:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |                       if (streq (d->name, dep_name (dp)))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  821 |                         break;[0m
      | [0;1;32m                              
[0m[1msrc/implicit.c:891:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  891 |                       if (int_file == 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  892 |                         int_file = alloca (sizeof (struct file));[0m
      | [0;1;32m                                                                 
[0m[1msrc/implicit.c:893:23: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  893 |                       memset (int_file, '\0', sizeof (struct file));[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/implicit.c:893:23: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  893 |                       memset (int_file, '\0', sizeof (struct file));[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/implicit.c:913:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  913 |                       if (int_file->variables)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  914 |                         free_variable_set (int_file->variables);[0m
      | [0;1;32m                                                                
[0m[1msrc/implicit.c:915:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  915 |                       if (int_file->pat_variables)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  916 |                         free_variable_set (int_file->pat_variables);[0m
      | [0;1;32m                                                                    
[0m[1msrc/implicit.c:921:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |                       if (df == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  922 |                         file_impossible (d->name);[0m
      | [0;1;32m                                                  
[0m[1msrc/implicit.c:927:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  927 |                   if (intermed_ok)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  928 |                     DBS (DB_IMPLICIT,[0m
  929 |                          (_("Rejecting rule '%s' "[0m
  930 |                             "due to impossible prerequisite '%s'.\n"),[0m
  931 |                           get_rule_defn (rule), d->name));[0m
  932 |                   else[0m
      | [0;32m                  } 
[0m[1msrc/implicit.c:932:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  932 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  933 |                     DBS (DB_IMPLICIT, (_("Not found '%s'.\n"), d->name));[0m
      | [0;1;32m                                                                         
[0m[1msrc/implicit.c:942:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  942 |               if (failed)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  943 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/implicit.c:949:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |           if (! failed)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  950 |             /* This pattern rule does apply.  Stop looking for one.  */[0m
  951 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/implicit.c:958:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  958 |       if (ri < nrules)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  959 |         break;[0m
      | [0;1;32m              
[0m[1msrc/implicit.c:965:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  965 |   if (rule == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  966 |     goto done;[0m
      | [0;1;32m              
[0m[1msrc/implicit.c:973:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  973 |   if (recursions > 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  974 |     /* Kludge-o-matic */[0m
  975 |     file->name = rule->targets[tryrules[foundrule].matches];[0m
      | [0;1;32m                                                            
[0m[1msrc/implicit.c:997:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  997 |           if (!f)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  998 |             f = enter_file (imf->name);[0m
      | [0;1;32m                                       
[0m[1msrc/implicit.c:1018:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1018 |           if (imf != 0 && imf->precious)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1019 |             f->precious = 1;[0m
      | [0;1;32m                            
[0m[1msrc/implicit.c:1035:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |       if (recursions)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1036 |         dep->name = s;[0m
 1037 |       else[0m
      | [0;32m      } 
[0m[1msrc/implicit.c:1040:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |           if (dep->file == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1041 |             dep->file = enter_file (s);[0m
      | [0;1;32m                                       
[0m[1msrc/implicit.c:1051:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1051 |           if (dep->file == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1052 |             dep->changed = 1;[0m
 1053 |           else[0m
      | [0;32m          } 
[0m[1msrc/implicit.c:1053:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1053 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1054 |             dep->file->tried_implicit = 1;[0m
      | [0;1;32m                                          
[0m[1msrc/implicit.c:1064:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1064 |   if (!file->was_shuffled)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1065 |     shuffle_deps_recursive (file->deps);[0m
      | [0;1;32m                                        
[0m[1msrc/implicit.c:1079:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1079 |       memcpy (stem_str, filename, pathlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/implicit.c:1079:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1079 |       memcpy (stem_str, filename, pathlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/implicit.c:1080:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1080 |       memcpy (stem_str + pathlen, stem, stemlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/implicit.c:1080:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1080 |       memcpy (stem_str + pathlen, stem, stemlen);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/implicit.c:1093:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1093 |         if (f->precious)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1094 |           file->precious = 1;[0m
      | [0;1;32m                             
[0m[1msrc/implicit.c:1095:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1095 |         if (f->notintermediate || no_intermediates)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1096 |           file->notintermediate = 1;[0m
      | [0;1;32m                                    
[0m[1msrc/implicit.c:1103:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1103 |   if (rule->num > 1)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m[1msrc/implicit.c:1104:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1104 |     for (ri = 0; ri < rule->num; ++ri)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m[1msrc/implicit.c:1116:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1116 |           memcpy (p, rule->suffixes[ri],[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/implicit.c:1116:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1116 |           memcpy (p, rule->suffixes[ri],[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/implicit.c:1126:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1126 |               if (f->precious)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1127 |                 new->file->precious = 1;[0m
      | [0;1;32m                                        
[0m[1msrc/implicit.c:1128:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1128 |               if (f->notintermediate || no_intermediates)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1129 |                 new->file->notintermediate = 1;[0m
      | [0;1;32m                                               
[0m84 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[20/32][114.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpiaa59e6b.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/expand.c
[1msrc/expand.c:118:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |       for (ep = environ; *ep != 0; ++ep)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  119 |         if ((*ep)[nl] == '=' && strncmp (*ep, v->name, nl) == 0)[0m
  120 |           return xstrdup ((*ep) + nl + 1);[0m
      | [0;1;32m                                          
[0m[1msrc/expand.c:119:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |         if ((*ep)[nl] == '=' && strncmp (*ep, v->name, nl) == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  120 |           return xstrdup ((*ep) + nl + 1);[0m
      | [0;1;32m                                          
[0m[1msrc/expand.c:146:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  146 |       if (!v->exp_count)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  147 |         /* Expanding V causes infinite recursion.  Lose.  */[0m
  148 |         OS (fatal, *expanding_var,[0m
  149 |             _("Recursive variable '%s' references itself (eventually)"),[0m
  150 |             v->name);[0m
      | [0;1;32m                     
[0m[1msrc/expand.c:161:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |   if (v->append)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  162 |     value = allocated_variable_append (v);[0m
  163 |   else[0m
      | [0;32m  } 
[0m[1msrc/expand.c:163:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  164 |     value = allocated_variable_expand (v->value);[0m
      | [0;1;32m                                                 
[0m[1msrc/expand.c:167:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  167 |   if (set_reading)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  168 |     reading_file = 0;[0m
      | [0;1;32m                     
[0m[1msrc/expand.c:170:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |   if (file)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  171 |     current_variable_set_list = save;[0m
      | [0;1;32m                                     
[0m[1msrc/expand.c:191:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |   if (v == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  192 |     warn_undefined (name, length);[0m
      | [0;1;32m                                  
[0m[1msrc/expand.c:195:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (v == 0 || (*v->value == '\0' && !v->append))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  196 |     return o;[0m
      | [0;1;32m             
[0m[1msrc/expand.c:202:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |   if (v->recursive)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  203 |     free (value);[0m
      | [0;1;32m                 
[0m[1msrc/expand.c:226:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |   if (!line)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  227 |     line = initialize_variable_output ();[0m
      | [0;1;32m                                         
[0m[1msrc/expand.c:253:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |       if (p1 == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  254 |         break;[0m
      | [0;1;32m              
[0m[1msrc/expand.c:266:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  266 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/expand.c:293:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |             if (end == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  294 |               /* Unterminated variable reference.  */[0m
  295 |               O (fatal, *expanding_var, _("unterminated variable reference"));[0m
      | [0;1;32m                                                                              
[0m[1msrc/expand.c:304:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |                     if (*p == openparen)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  305 |                       ++count;[0m
  306 |                     else if (*p == closeparen && --count < 0)[0m
      | [0;32m                    } 
[0m[1msrc/expand.c:306:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |                     else if (*p == closeparen && --count < 0)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  307 |                       break;[0m
      | [0;1;32m                            
[0m[1msrc/expand.c:319:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  320 |               /* Advance P to the end of this reference.  After we are[0m
  321 |                  finished expanding this one, P will be incremented to[0m
  322 |                  continue the scan.  */[0m
  323 |               p = end;[0m
      | [0;1;32m                      
[0m[1msrc/expand.c:335:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |                 if (subst_end == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  336 |                   /* There is no = in sight.  Punt on the substitution[0m
  337 |                      reference and treat this as a variable name containing[0m
  338 |                      a colon, in the code below.  */[0m
  339 |                   colon = 0;[0m
  340 |                 else[0m
      | [0;32m                } 
[0m[1msrc/expand.c:348:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |                     if (v == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  349 |                       warn_undefined (beg, colon - beg);[0m
      | [0;1;32m                                                        
[0m[1msrc/expand.c:365:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  365 |                         memcpy (pattern, subst_beg, subst_end - subst_beg);[0m
      | [0;1;32m                        ^~~~~~
[0m[1msrc/expand.c:365:25: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  365 |                         memcpy (pattern, subst_beg, subst_end - subst_beg);[0m
      | [0;1;32m                        ^~~~~~
[0m[1msrc/expand.c:370:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  370 |                         memcpy (replace, replace_beg,[0m
      | [0;1;32m                        ^~~~~~
[0m[1msrc/expand.c:370:25: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  370 |                         memcpy (replace, replace_beg,[0m
      | [0;1;32m                        ^~~~~~
[0m[1msrc/expand.c:381:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |                             if (rpercent)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  382 |                               ++rpercent;[0m
      | [0;1;32m                                         
[0m[1msrc/expand.c:395:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |                         if (v->recursive)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  396 |                           free (value);[0m
      | [0;1;32m                                       
[0m[1msrc/expand.c:401:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |             if (colon == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  402 |               /* This is an ordinary variable reference.[0m
  403 |                  Look up the value of the variable.  */[0m
  404 |                 o = reference_variable (o, beg, end - beg);[0m
      | [0;1;32m                                                           
[0m[1msrc/expand.c:408:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  408 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/expand.c:411:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  411 |           if (ISSPACE (p[-1]))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  412 |             break;[0m
  413 | [0m
  414 |           /* A $ followed by a random char is a variable reference:[0m
  415 |              $a is equivalent to $(a).  */[0m
  416 |           o = reference_variable (o, p, 1);[0m
  417 | [0m
  418 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/expand.c:411:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |           if (ISSPACE (p[-1]))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  412 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/expand.c:421:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |       if (*p == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  422 |         break;[0m
      | [0;1;32m              
[0m[1msrc/expand.c:456:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |   if (str == end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  457 |     return xstrdup ("");[0m
      | [0;1;32m                        
[0m[1msrc/expand.c:459:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |   if (!end || *end == '\0')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  460 |     return allocated_variable_expand (str);[0m
      | [0;1;32m                                           
[0m[1msrc/expand.c:462:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |   if (end - str + 1 > 1000)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  463 |     tmp = alloc = xmalloc (end - str + 1);[0m
  464 |   else[0m
      | [0;32m  } 
[0m[1msrc/expand.c:464:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  465 |     tmp = alloca (end - str + 1);[0m
      | [0;1;32m                                 
[0m[1msrc/expand.c:467:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  467 |   memcpy (tmp, str, end - str);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/expand.c:467:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  467 |   memcpy (tmp, str, end - str);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/expand.c:487:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |   if (file == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  488 |     return variable_expand (line);[0m
      | [0;1;32m                                  
[0m[1msrc/expand.c:494:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |   if (file->cmds && file->cmds->fileinfo.filenm)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  495 |     reading_file = &file->cmds->fileinfo;[0m
  496 |   else[0m
      | [0;32m  } 
[0m[1msrc/expand.c:496:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  497 |     reading_file = 0;[0m
      | [0;1;32m                     
[0m[1msrc/expand.c:520:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (!set)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  521 |     return initialize_variable_output ();[0m
      | [0;1;32m                                         
[0m[1msrc/expand.c:530:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |   if (!v || (!local && v->private_var))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  531 |     return variable_append (name, length, set->next, nextlocal);[0m
      | [0;1;32m                                                                
[0m[1msrc/expand.c:535:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |   if (v->append)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  536 |     buf = variable_append (name, length, set->next, nextlocal);[0m
  537 |   else[0m
      | [0;32m  } 
[0m[1msrc/expand.c:537:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  538 |     buf = initialize_variable_output ();[0m
      | [0;1;32m                                        
[0m[1msrc/expand.c:542:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |   if (buf > variable_buffer)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  543 |     buf = variable_buffer_output (buf, " ", 1);[0m
      | [0;1;32m                                               
[0m[1msrc/expand.c:546:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |   if (! v->recursive)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  547 |     return variable_buffer_output (buf, v->value, strlen (v->value));[0m
      | [0;1;32m                                                                     
[0m44 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[21/32][119.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp_f46yr31.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/dir.c
[1msrc/dir.c:286:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |   if (dc->dirfiles.ht_vec != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  287 |     hash_free (&dc->dirfiles, 1);[0m
      | [0;1;32m                                 
[0m[1msrc/dir.c:377:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |   if (result)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  378 |     return result;[0m
      | [0;1;32m                  
[0m[1msrc/dir.c:451:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |   if (result)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  452 |     return result;[0m
      | [0;1;32m                  
[0m[1msrc/dir.c:491:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |       if (ctr == command_count)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  492 |         return dir;[0m
      | [0;1;32m                   
[0m[1msrc/dir.c:497:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  497 |       if (dir->contents)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  498 |         clear_directory_contents (dir->contents);[0m
      | [0;1;32m                                                 
[0m[1msrc/dir.c:543:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |   if (r < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  544 |     /* Couldn't stat the directory; nothing else to do.  */[0m
  545 |     return dir;[0m
      | [0;1;32m               
[0m[1msrc/dir.c:549:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  549 |   memset (&dc_key, '\0', sizeof (dc_key));[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/dir.c:549:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  549 |   memset (&dc_key, '\0', sizeof (dc_key));[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/dir.c:608:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  608 |       if (dc->counter)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  609 |         clear_directory_contents (dc);[0m
      | [0;1;32m                                      
[0m[1msrc/dir.c:614:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |       if (dc->dirstream == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  615 |         /* Couldn't open the directory: mark this by setting files to NULL.  */[0m
  616 |         dc->dirfiles.ht_vec = NULL;[0m
  617 |       else[0m
      | [0;32m      } 
[0m[1msrc/dir.c:623:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |           if (open_directories == MAX_OPEN_DIRECTORIES)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  624 |             /* We have too many directories open already.[0m
  625 |                Read the entire directory and then close it.  */[0m
  626 |             dir_contents_file_exists_p (dir, NULL);[0m
      | [0;1;32m                                                   
[0m[1msrc/dir.c:648:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |   if (dc == NULL || dc->dirfiles.ht_vec == NULL)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  649 |     /* The directory could not be stat'd or opened.  */[0m
  650 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/dir.c:682:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |       if (df)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  683 |         return !df->impossible;[0m
      | [0;1;32m                               
[0m[1msrc/dir.c:736:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  736 |           if (errno)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  737 |             OSS (fatal, NILF, "readdir %s: %s", dir->name, strerror (errno));[0m
      | [0;1;32m                                                                             
[0m[1msrc/dir.c:751:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |       if (!REAL_DIR_ENTRY (d))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  752 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/dir.c:781:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |       if (filename != NULL && patheq (d->d_name, filename))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  782 |         return 1;[0m
      | [0;1;32m                 
[0m[1msrc/dir.c:822:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  822 |   if (ar_name (name))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  823 |     return ar_member_date (name) != (time_t) -1;[0m
      | [0;1;32m                                                
[0m[1msrc/dir.c:855:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  855 |   if (dirend == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  856 | #ifndef _AMIGA[0m
  857 |     return dir_file_exists_p (".", name);[0m
      | [0;1;32m                                         
[0m[1msrc/dir.c:863:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  863 |   if (dirend == name)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  864 |     dirname = "/";[0m
  865 |   else[0m
      | [0;32m  } 
[0m[1msrc/dir.c:875:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  875 |       memcpy (p, name, dirend - name);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/dir.c:875:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  875 |       memcpy (p, name, dirend - name);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/dir.c:929:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  929 |   if (dirend == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  930 | #ifdef _AMIGA[0m
  931 |     dir = find_directory ("");[0m
  932 | #else /* !AMIGA */[0m
  933 |     dir = find_directory (".");[0m
  934 | #endif /* AMIGA */[0m
  935 |   else[0m
      | [0;32m  } 
[0m[1msrc/dir.c:939:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |       if (dirend == p)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  940 |         dirname = "/";[0m
  941 |       else[0m
      | [0;32m      } 
[0m[1msrc/dir.c:951:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  951 |           memcpy (cp, p, dirend - p);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/dir.c:951:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  951 |           memcpy (cp, p, dirend - p);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/dir.c:962:18: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores][0m
  962 |       filename = p = slash + 1;[0m
      | [0;1;32m                 ^   ~~~~~~~~~
[0m[1msrc/dir.c:962:18: [0m[0;1;36mnote: [0mAlthough the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p'[0m
  962 |       filename = p = slash + 1;[0m
      | [0;1;32m                 ^   ~~~~~~~~~
[0m[1msrc/dir.c:966:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  966 |   if (dir->contents == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  967 |     /* The directory could not be stat'd.  We allocate a contents[0m
  968 |        structure for it, but leave it out of the contents hash table.  */[0m
  969 |     dir->contents = xcalloc (sizeof (struct directory_contents));[0m
      | [0;1;32m                                                                 
[0m[1msrc/dir.c:971:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  971 |   if (dir->contents->dirfiles.ht_vec == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  972 |     hash_init (&dir->contents->dirfiles, DIRFILE_BUCKETS,[0m
  973 |                dirfile_hash_1, dirfile_hash_2, dirfile_hash_cmp);[0m
      | [0;1;32m                                                                 
[0m[1msrc/dir.c:1025:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |   if (dirend == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1026 | #ifdef _AMIGA[0m
 1027 |     dir = find_directory ("")->contents;[0m
 1028 | #else /* !AMIGA */[0m
 1029 |     dir = find_directory (".")->contents;[0m
 1030 | #endif /* AMIGA */[0m
 1031 |   else[0m
      | [0;32m  } 
[0m[1msrc/dir.c:1035:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |       if (dirend == filename)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1036 |         dirname = "/";[0m
 1037 |       else[0m
      | [0;32m      } 
[0m[1msrc/dir.c:1047:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1047 |           memcpy (cp, filename, dirend - filename);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/dir.c:1047:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1047 |           memcpy (cp, filename, dirend - filename);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/dir.c:1062:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1062 |   if (dir == NULL || dir->dirfiles.ht_vec == NULL)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1063 |     /* There are no files entered for this directory.  */[0m
 1064 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/dir.c:1080:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1080 |   if (dirfile)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1081 |     return dirfile->impossible;[0m
      | [0;1;32m                               
[0m[1msrc/dir.c:1119:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1119 |           if (dir->contents == NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1120 |             printf (_("# %s: could not be stat'd.\n"), dir->name);[0m
 1121 |           else if (dir->contents->dirfiles.ht_vec == NULL)[0m
      | [0;32m          } 
[0m[1msrc/dir.c:1121:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |           else if (dir->contents->dirfiles.ht_vec == NULL)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1122 | #ifdef WINDOWS32[0m
 1123 |             printf (_("# %s (key %s, mtime %s): could not be opened.\n"),[0m
 1124 |                     dir->name, dir->contents->path_key,[0m
 1125 |                     make_ulltoa ((unsigned long long)dir->contents->mtime, buf));[0m
 1126 | #elif defined(VMS_INO_T)[0m
 1127 |             printf (_("# %s (device %d, inode [%d,%d,%d]): could not be opened.\n"),[0m
 1128 |                     dir->name, dir->contents->dev,[0m
 1129 |                     dir->contents->ino[0], dir->contents->ino[1],[0m
 1130 |                     dir->contents->ino[2]);[0m
 1131 | #else[0m
 1132 |             printf (_("# %s (device %ld, inode %ld): could not be opened.\n"),[0m
 1133 |                     dir->name, (long) dir->contents->dev, (long) dir->contents->ino);[0m
 1134 | #endif[0m
 1135 |           else[0m
      | [0;32m          } 
[0m[1msrc/dir.c:1149:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1149 |                       if (df->impossible)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1150 |                         ++im;[0m
 1151 |                       else[0m
      | [0;32m                      } 
[0m[1msrc/dir.c:1151:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1152 |                         ++f;[0m
      | [0;1;32m                            
[0m[1msrc/dir.c:1168:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1168 |               if (f == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1169 |                 fputs (_("No"), stdout);[0m
 1170 |               else[0m
      | [0;32m              } 
[0m[1msrc/dir.c:1170:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1170 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1171 |                 printf ("%u", f);[0m
      | [0;1;32m                                 
[0m[1msrc/dir.c:1173:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1173 |               if (im == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1174 |                 fputs (_("no"), stdout);[0m
 1175 |               else[0m
      | [0;32m              } 
[0m[1msrc/dir.c:1175:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1175 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1176 |                 printf ("%u", im);[0m
      | [0;1;32m                                  
[0m[1msrc/dir.c:1178:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1178 |               if (dir->contents->dirstream == NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1179 |                 puts (".");[0m
 1180 |               else[0m
      | [0;32m              } 
[0m[1msrc/dir.c:1180:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1180 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1181 |                 puts (_(" so far."));[0m
      | [0;1;32m                                     
[0m[1msrc/dir.c:1189:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1189 |   if (files == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1190 |     fputs (_("No"), stdout);[0m
 1191 |   else[0m
      | [0;32m  } 
[0m[1msrc/dir.c:1191:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1191 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1192 |     printf ("%u", files);[0m
      | [0;1;32m                         
[0m[1msrc/dir.c:1194:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1194 |   if (impossible == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1195 |     fputs (_("no"), stdout);[0m
 1196 |   else[0m
      | [0;32m  } 
[0m[1msrc/dir.c:1196:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1196 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1197 |     printf ("%u", impossible);[0m
      | [0;1;32m                              
[0m[1msrc/dir.c:1221:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1221 |   if (dir->contents == NULL || dir->contents->dirfiles.ht_vec == NULL)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1222 |     /* DIR->contents is nil if the directory could not be stat'd.[0m
 1223 |        DIR->contents->dirfiles is nil if it could not be opened.  */[0m
 1224 |     return NULL;[0m
      | [0;1;32m                
[0m[1msrc/dir.c:1260:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1260 |               if (sz > bufsz)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1261 |                 bufsz = sz;[0m
      | [0;1;32m                           
[0m[1msrc/dir.c:1271:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'd_ino' results in a dereference of a null pointer (loaded from variable 'd') [clang-analyzer-core.NullDereference][0m
 1271 |           FAKE_DIR_ENTRY (d);[0m
      | [0;1;32m          ^
[0m[1msrc/dir.c:60:40: [0m[0;1;36mnote: [0mexpanded from macro 'FAKE_DIR_ENTRY'[0m
   60 | # define FAKE_DIR_ENTRY(dp) (dp->d_ino = 1)[0m
      | [0;1;32m                             ~~        ^
[0m[1msrc/dir.c:1241:3: [0m[0;1;36mnote: [0m'buf' initialized to a null pointer value[0m
 1241 |   static char *buf;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1msrc/dir.c:1248:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1248 |   while (ds->dirfile_slot < dirfile_end)[0m
      | [0;1;32m  ^
[0m[1msrc/dir.c:1251:13: [0m[0;1;36mnote: [0mAssuming 'df' is not equal to null[0m
 1251 |       if (! HASH_VACANT (df) && !df->impossible)[0m
      | [0;1;32m            ^
[0m[1msrc/hash.h:80:28: [0m[0;1;36mnote: [0mexpanded from macro 'HASH_VACANT'[0m
   80 | #define HASH_VACANT(item) ((item) == 0 || (void *) (item) == hash_deleted_item)[0m
      | [0;1;32m                           ^~~~~~~~~~~
[0m[1msrc/dir.c:1251:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1251 |       if (! HASH_VACANT (df) && !df->impossible)[0m
      | [0;1;32m            ^
[0m[1msrc/hash.h:80:28: [0m[0;1;36mnote: [0mexpanded from macro 'HASH_VACANT'[0m
   80 | #define HASH_VACANT(item) ((item) == 0 || (void *) (item) == hash_deleted_item)[0m
      | [0;1;32m                           ^
[0m[1msrc/dir.c:1251:13: [0m[0;1;36mnote: [0mAssuming 'df' is not equal to 'hash_deleted_item'[0m
 1251 |       if (! HASH_VACANT (df) && !df->impossible)[0m
      | [0;1;32m            ^
[0m[1msrc/hash.h:80:43: [0m[0;1;36mnote: [0mexpanded from macro 'HASH_VACANT'[0m
   80 | #define HASH_VACANT(item) ((item) == 0 || (void *) (item) == hash_deleted_item)[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/dir.c:1251:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1251 |       if (! HASH_VACANT (df) && !df->impossible)[0m
      | [0;1;32m          ^
[0m[1msrc/dir.c:1251:33: [0m[0;1;36mnote: [0mAssuming field 'impossible' is 0[0m
 1251 |       if (! HASH_VACANT (df) && !df->impossible)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~
[0m[1msrc/dir.c:1251:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1251 |       if (! HASH_VACANT (df) && !df->impossible)[0m
      | [0;1;32m      ^
[0m[1msrc/dir.c:1257:15: [0m[0;1;36mnote: [0mAssuming 'sz' is <= 'bufsz'[0m
 1257 |           if (sz > bufsz)[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1msrc/dir.c:1257:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1257 |           if (sz > bufsz)[0m
      | [0;1;32m          ^
[0m[1msrc/dir.c:1264:11: [0m[0;1;36mnote: [0mNull pointer value stored to 'd'[0m
 1264 |           d = (struct dirent *) buf;[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/dir.c:1271:11: [0m[0;1;36mnote: [0mAccess to field 'd_ino' results in a dereference of a null pointer (loaded from variable 'd')[0m
 1271 |           FAKE_DIR_ENTRY (d);[0m
      | [0;1;32m          ^
[0m[1msrc/dir.c:60:40: [0m[0;1;36mnote: [0mexpanded from macro 'FAKE_DIR_ENTRY'[0m
   60 | # define FAKE_DIR_ENTRY(dp) (dp->d_ino = 1)[0m
      | [0;1;32m                             ~~        ^
[0m[1msrc/dir.c:1278:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1278 |           memcpy (d->d_name, df->name, len);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/dir.c:1278:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1278 |           memcpy (d->d_name, df->name, len);[0m
      | [0;1;32m          ^~~~~~
[0m50 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[22/32][122.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpj9v4gpjz.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/output.c
[1msrc/output.c:70:3: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'fputs' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   70 |   fputs (msg, f);[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:484:14: [0m[0;1;36mnote: [0mAssuming 'flocp' is null[0m
  484 |           + (flocp && flocp->filenm ? strlen (flocp->filenm) : 0)[0m
      | [0;1;32m             ^~~~~
[0m[1msrc/output.c:484:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  484 |           + (flocp && flocp->filenm ? strlen (flocp->filenm) : 0)[0m
      | [0;1;32m                   ^
[0m[1msrc/output.c:488:7: [0m[0;1;36mnote: [0m'flocp' is null[0m
  488 |   if (flocp && flocp->filenm)[0m
      | [0;1;32m      ^~~~~
[0m[1msrc/output.c:488:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  488 |   if (flocp && flocp->filenm)[0m
      | [0;1;32m            ^
[0m[1msrc/output.c:490:12: [0m[0;1;36mnote: [0mAssuming 'makelevel' is not equal to 0[0m
  490 |   else if (makelevel == 0)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~
[0m[1msrc/output.c:490:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  490 |   else if (makelevel == 0)[0m
      | [0;1;32m       ^
[0m[1msrc/output.c:503:3: [0m[0;1;36mnote: [0mCalling 'outputs'[0m
  503 |   outputs (1, start);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:380:9: [0m[0;1;36mnote: [0m'msg' is non-null[0m
  380 |   if (! msg || *msg == '\0')[0m
      | [0;1;32m        ^~~
[0m[1msrc/output.c:380:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  380 |   if (! msg || *msg == '\0')[0m
      | [0;1;32m      ^
[0m[1msrc/output.c:380:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  380 |   if (! msg || *msg == '\0')[0m
      | [0;1;32m               ^~~~~~~~~~~~
[0m[1msrc/output.c:380:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  380 |   if (! msg || *msg == '\0')[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:383:3: [0m[0;1;36mnote: [0mCalling 'output_start'[0m
  383 |   output_start ();[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1msrc/output.c:365:7: [0m[0;1;36mnote: [0mAssuming 'output_context' is null[0m
  365 |   if (output_context && output_context->syncout)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/output.c:365:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  365 |   if (output_context && output_context->syncout)[0m
      | [0;1;32m                     ^
[0m[1msrc/output.c:372:7: [0m[0;1;36mnote: [0mAssuming 'output_sync' is equal to OUTPUT_SYNC_NONE[0m
  372 |   if (output_sync == OUTPUT_SYNC_NONE || output_sync == OUTPUT_SYNC_RECURSE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:372:39: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  372 |   if (output_sync == OUTPUT_SYNC_NONE || output_sync == OUTPUT_SYNC_RECURSE)[0m
      | [0;1;32m                                      ^
[0m[1msrc/output.c:373:9: [0m[0;1;36mnote: [0mAssuming 'stdio_traced' is 0[0m
  373 |     if (! stdio_traced && should_print_dir ())[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1msrc/output.c:373:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/output.c:373:27: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  373 |     if (! stdio_traced && should_print_dir ())[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:373:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  373 |     if (! stdio_traced && should_print_dir ())[0m
      | [0;1;32m    ^
[0m[1msrc/output.c:374:22: [0m[0;1;36mnote: [0mCalling 'log_working_directory'[0m
  374 |       stdio_traced = log_working_directory (1);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:80:3: [0m[0;1;36mnote: [0m'buf' initialized to a null pointer value[0m
   80 |   static char *buf = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~
[0m[1msrc/output.c:88:7: [0m[0;1;36mnote: [0mAssuming 'starting_directory' is null[0m
   88 |   if (starting_directory)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:88:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   88 |   if (starting_directory)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:92:7: [0m[0;1;36mnote: [0mAssuming 'makelevel' is not equal to 0[0m
   92 |   if (makelevel == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/output.c:92:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   92 |   if (makelevel == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:104:9: [0m[0;1;36mnote: [0m'starting_directory' is equal to null[0m
  104 |     if (starting_directory == 0)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:104:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  104 |     if (starting_directory == 0)[0m
      | [0;1;32m    ^
[0m[1msrc/output.c:105:11: [0m[0;1;36mnote: [0m'entering' is 1[0m
  105 |       if (entering)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1msrc/output.c:105:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  105 |       if (entering)[0m
      | [0;1;32m      ^
[0m[1msrc/output.c:117:7: [0m[0;1;36mnote: [0mAssuming 'need' is <= 'len'[0m
  117 |   if (need > len)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1msrc/output.c:117:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  117 |   if (need > len)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:124:7: [0m[0;1;36mnote: [0mAssuming 'print_data_base_flag' is 0[0m
  124 |   if (print_data_base_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:124:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  124 |   if (print_data_base_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:130:7: [0m[0;1;36mnote: [0m'makelevel' is not equal to 0[0m
  130 |   if (makelevel == 0)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1msrc/output.c:130:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  130 |   if (makelevel == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:135:12: [0m[0;1;36mnote: [0m'starting_directory' is equal to null[0m
  135 |   else if (starting_directory == 0)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:135:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  135 |   else if (starting_directory == 0)[0m
      | [0;1;32m       ^
[0m[1msrc/output.c:140:22: [0m[0;1;36mnote: [0mPassing null pointer value via 3rd parameter 'msg'[0m
  140 |   _outputs (NULL, 0, buf);[0m
      | [0;1;32m                     ^~~
[0m[1msrc/output.c:140:3: [0m[0;1;36mnote: [0mCalling '_outputs'[0m
  140 |   _outputs (NULL, 0, buf);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:56:7: [0m[0;1;36mnote: [0m'out' is null[0m
   56 |   if (out && out->syncout)[0m
      | [0;1;32m      ^~~
[0m[1msrc/output.c:56:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   56 |   if (out && out->syncout)[0m
      | [0;1;32m          ^
[0m[1msrc/output.c:69:7: [0m[0;1;36mnote: [0m'is_err' is 0[0m
   69 |   f = is_err ? stderr : stdout;[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/output.c:69:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msrc/output.c:70:3: [0m[0;1;36mnote: [0mThe 1st argument to 'fputs' is NULL but should not be NULL[0m
   70 |   fputs (msg, f);[0m
      | [0;1;32m  ^      ~~~
[0m[1msrc/output.c:88:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |   if (starting_directory)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   89 |     need += strlen (starting_directory);[0m
      | [0;1;32m                                        
[0m[1msrc/output.c:92:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |   if (makelevel == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   93 |     if (starting_directory == 0)[0m
   94 |       if (entering)[0m
   95 |         fmt = _("%s: Entering an unknown directory\n");[0m
   96 |       else[0m
   97 |         fmt = _("%s: Leaving an unknown directory\n");[0m
   98 |     else[0m
   99 |       if (entering)[0m
  100 |         fmt = _("%s: Entering directory '%s'\n");[0m
  101 |       else[0m
  102 |         fmt = _("%s: Leaving directory '%s'\n");[0m
  103 |   else[0m
      | [0;32m  } 
[0m[1msrc/output.c:93:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |     if (starting_directory == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   94 |       if (entering)[0m
   95 |         fmt = _("%s: Entering an unknown directory\n");[0m
   96 |       else[0m
   97 |         fmt = _("%s: Leaving an unknown directory\n");[0m
   98 |     else[0m
      | [0;32m    } 
[0m[1msrc/output.c:94:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |       if (entering)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   95 |         fmt = _("%s: Entering an unknown directory\n");[0m
   96 |       else[0m
      | [0;32m      } 
[0m[1msrc/output.c:96:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   97 |         fmt = _("%s: Leaving an unknown directory\n");[0m
      | [0;1;32m                                                      
[0m[1msrc/output.c:99:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |       if (entering)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  100 |         fmt = _("%s: Entering directory '%s'\n");[0m
  101 |       else[0m
      | [0;32m      } 
[0m[1msrc/output.c:101:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  102 |         fmt = _("%s: Leaving directory '%s'\n");[0m
      | [0;1;32m                                                
[0m[1msrc/output.c:104:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |     if (starting_directory == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  105 |       if (entering)[0m
  106 |         fmt = _("%s[%u]: Entering an unknown directory\n");[0m
  107 |       else[0m
  108 |         fmt = _("%s[%u]: Leaving an unknown directory\n");[0m
  109 |     else[0m
      | [0;32m    } 
[0m[1msrc/output.c:105:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |       if (entering)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  106 |         fmt = _("%s[%u]: Entering an unknown directory\n");[0m
  107 |       else[0m
      | [0;32m      } 
[0m[1msrc/output.c:107:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  108 |         fmt = _("%s[%u]: Leaving an unknown directory\n");[0m
      | [0;1;32m                                                          
[0m[1msrc/output.c:110:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |       if (entering)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  111 |         fmt = _("%s[%u]: Entering directory '%s'\n");[0m
  112 |       else[0m
      | [0;32m      } 
[0m[1msrc/output.c:112:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  113 |         fmt = _("%s[%u]: Leaving directory '%s'\n");[0m
      | [0;1;32m                                                    
[0m[1msrc/output.c:126:14: [0m[0;1;35mwarning: [0m[1mDereference of null pointer [clang-analyzer-core.NullDereference][0m
  126 |       *(p++) = '#';[0m
      | [0;1;32m             ^
[0m[1msrc/output.c:340:7: [0m[0;1;36mnote: [0mAssuming 'out' is null[0m
  340 |   if (! out)[0m
      | [0;1;32m      ^~~~~
[0m[1msrc/output.c:340:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  340 |   if (! out)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:342:11: [0m[0;1;36mnote: [0mAssuming 'stdio_traced' is not equal to 0[0m
  342 |       if (stdio_traced)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1msrc/output.c:342:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  342 |       if (stdio_traced)[0m
      | [0;1;32m      ^
[0m[1msrc/output.c:343:9: [0m[0;1;36mnote: [0mCalling 'log_working_directory'[0m
  343 |         log_working_directory (0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:88:7: [0m[0;1;36mnote: [0mAssuming 'starting_directory' is null[0m
   88 |   if (starting_directory)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:88:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   88 |   if (starting_directory)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:92:7: [0m[0;1;36mnote: [0mAssuming 'makelevel' is not equal to 0[0m
   92 |   if (makelevel == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/output.c:92:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   92 |   if (makelevel == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:104:9: [0m[0;1;36mnote: [0m'starting_directory' is equal to null[0m
  104 |     if (starting_directory == 0)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:104:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  104 |     if (starting_directory == 0)[0m
      | [0;1;32m    ^
[0m[1msrc/output.c:105:11: [0m[0;1;36mnote: [0m'entering' is 0[0m
  105 |       if (entering)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1msrc/output.c:105:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  105 |       if (entering)[0m
      | [0;1;32m      ^
[0m[1msrc/output.c:117:7: [0m[0;1;36mnote: [0mAssuming 'need' is <= 'len'[0m
  117 |   if (need > len)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1msrc/output.c:117:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  117 |   if (need > len)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:124:7: [0m[0;1;36mnote: [0mAssuming 'print_data_base_flag' is not equal to 0[0m
  124 |   if (print_data_base_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1msrc/output.c:124:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  124 |   if (print_data_base_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/output.c:126:9: [0m[0;1;36mnote: [0mNull pointer value stored to 'p'[0m
  126 |       *(p++) = '#';[0m
      | [0;1;32m        ^~~
[0m[1msrc/output.c:126:14: [0m[0;1;36mnote: [0mDereference of null pointer[0m
  126 |       *(p++) = '#';[0m
      | [0;1;32m      ~~~~~~~^~~~~
[0m[1msrc/output.c:130:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |   if (makelevel == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  131 |     if (starting_directory == 0)[0m
  132 |       sprintf (p, fmt , program);[0m
  133 |     else[0m
  134 |       sprintf (p, fmt, program, starting_directory);[0m
  135 |   else if (starting_directory == 0)[0m
      | [0;32m  } 
[0m[1msrc/output.c:131:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |     if (starting_directory == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  132 |       sprintf (p, fmt , program);[0m
  133 |     else[0m
      | [0;32m    } 
[0m[1msrc/output.c:132:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  132 |       sprintf (p, fmt , program);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/output.c:132:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  132 |       sprintf (p, fmt , program);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/output.c:133:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  134 |       sprintf (p, fmt, program, starting_directory);[0m
      | [0;1;32m                                                    
[0m[1msrc/output.c:134:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  134 |       sprintf (p, fmt, program, starting_directory);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/output.c:134:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  134 |       sprintf (p, fmt, program, starting_directory);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/output.c:135:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |   else if (starting_directory == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  136 |     sprintf (p, fmt, program, makelevel);[0m
  137 |   else[0m
      | [0;32m  } 
[0m[1msrc/output.c:136:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  136 |     sprintf (p, fmt, program, makelevel);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:136:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  136 |     sprintf (p, fmt, program, makelevel);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:137:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  138 |     sprintf (p, fmt, program, makelevel, starting_directory);[0m
      | [0;1;32m                                                             
[0m[1msrc/output.c:138:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  138 |     sprintf (p, fmt, program, makelevel, starting_directory);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:138:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  138 |     sprintf (p, fmt, program, makelevel, starting_directory);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:162:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |   if (lseek (from, 0, SEEK_SET) == -1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  163 |     perror ("lseek()");[0m
      | [0;1;32m                       
[0m[1msrc/output.c:169:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |       if (len < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  170 |         perror ("read()");[0m
      | [0;1;32m                          
[0m[1msrc/output.c:171:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |       if (len <= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  172 |         break;[0m
      | [0;1;32m              
[0m[1msrc/output.c:210:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |   if (in_setup)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  211 |     return;[0m
      | [0;1;32m           
[0m[1msrc/output.c:226:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |       if (fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  227 |         goto error;[0m
      | [0;1;32m                   
[0m[1msrc/output.c:234:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |       if (out->out != OUTPUT_NONE && ANY_SET (io_state, IO_COMBINED_OUTERR))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  235 |         out->err = out->out;[0m
  236 |       else[0m
      | [0;32m      } 
[0m[1msrc/output.c:239:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |           if (fd < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  240 |             goto error;[0m
      | [0;1;32m                       
[0m[1msrc/output.c:289:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |       if (output_sync != OUTPUT_SYNC_RECURSE && should_print_dir ())[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  290 |         traced = log_working_directory (1);[0m
      | [0;1;32m                                           
[0m[1msrc/output.c:292:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |       if (outfd_not_empty)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  293 |         pump_from_tmp (out->out, stdout);[0m
      | [0;1;32m                                         
[0m[1msrc/output.c:294:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |       if (errfd_not_empty && out->err != out->out)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |         pump_from_tmp (out->err, stderr);[0m
      | [0;1;32m                                         
[0m[1msrc/output.c:297:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |       if (traced)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  298 |         log_working_directory (0);[0m
      | [0;1;32m                                  
[0m[1msrc/output.c:342:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |       if (stdio_traced)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  343 |         log_working_directory (0);[0m
      | [0;1;32m                                  
[0m[1msrc/output.c:351:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |   if (out->out >= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  352 |     close (out->out);[0m
      | [0;1;32m                     
[0m[1msrc/output.c:353:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |   if (out->err >= 0 && out->err != out->out)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  354 |     close (out->err);[0m
      | [0;1;32m                     
[0m[1msrc/output.c:365:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |   if (output_context && output_context->syncout)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  366 |     if (! OUTPUT_ISSET(output_context))[0m
  367 |       setup_tmpfile (output_context);[0m
      | [0;1;32m                                     
[0m[1msrc/output.c:366:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |     if (! OUTPUT_ISSET(output_context))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  367 |       setup_tmpfile (output_context);[0m
      | [0;1;32m                                     
[0m[1msrc/output.c:372:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  372 |   if (output_sync == OUTPUT_SYNC_NONE || output_sync == OUTPUT_SYNC_RECURSE)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  373 |     if (! stdio_traced && should_print_dir ())[0m
  374 |       stdio_traced = log_working_directory (1);[0m
      | [0;1;32m                                               
[0m[1msrc/output.c:373:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |     if (! stdio_traced && should_print_dir ())[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  374 |       stdio_traced = log_working_directory (1);[0m
      | [0;1;32m                                               
[0m[1msrc/output.c:380:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |   if (! msg || *msg == '\0')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  381 |     return;[0m
      | [0;1;32m           
[0m[1msrc/output.c:424:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |       if (makelevel == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  425 |         sprintf (p, "%s: ", program);[0m
  426 |       else[0m
      | [0;32m      } 
[0m[1msrc/output.c:425:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  425 |         sprintf (p, "%s: ", program);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/output.c:425:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  425 |         sprintf (p, "%s: ", program);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/output.c:426:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  426 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  427 |         sprintf (p, "%s[%u]: ", program, makelevel);[0m
      | [0;1;32m                                                    
[0m[1msrc/output.c:427:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  427 |         sprintf (p, "%s[%u]: ", program, makelevel);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/output.c:427:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  427 |         sprintf (p, "%s[%u]: ", program, makelevel);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/output.c:432:3: [0m[0;1;35mwarning: [0m[1mCall to function 'vsprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  432 |   vsprintf (p, fmt, args);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1msrc/output.c:432:3: [0m[0;1;36mnote: [0mCall to function 'vsprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsprintf_s' in case of C11[0m
  432 |   vsprintf (p, fmt, args);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1msrc/output.c:435:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  435 |   strcat (p, "\n");[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/output.c:435:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  435 |   strcat (p, "\n");[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/output.c:455:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |   if (flocp && flocp->filenm)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  456 |     sprintf (p, "%s:%lu: ", flocp->filenm, flocp->lineno + flocp->offset);[0m
  457 |   else if (makelevel == 0)[0m
      | [0;32m  } 
[0m[1msrc/output.c:456:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  456 |     sprintf (p, "%s:%lu: ", flocp->filenm, flocp->lineno + flocp->offset);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:456:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  456 |     sprintf (p, "%s:%lu: ", flocp->filenm, flocp->lineno + flocp->offset);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:457:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |   else if (makelevel == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  458 |     sprintf (p, "%s: ", program);[0m
  459 |   else[0m
      | [0;32m  } 
[0m[1msrc/output.c:458:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  458 |     sprintf (p, "%s: ", program);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:458:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  458 |     sprintf (p, "%s: ", program);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:459:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  460 |     sprintf (p, "%s[%u]: ", program, makelevel);[0m
      | [0;1;32m                                                
[0m[1msrc/output.c:460:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  460 |     sprintf (p, "%s[%u]: ", program, makelevel);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:460:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  460 |     sprintf (p, "%s[%u]: ", program, makelevel);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:464:3: [0m[0;1;35mwarning: [0m[1mCall to function 'vsprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  464 |   vsprintf (p, fmt, args);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1msrc/output.c:464:3: [0m[0;1;36mnote: [0mCall to function 'vsprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsprintf_s' in case of C11[0m
  464 |   vsprintf (p, fmt, args);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1msrc/output.c:467:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  467 |   strcat (p, "\n");[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/output.c:467:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  467 |   strcat (p, "\n");[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/output.c:488:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |   if (flocp && flocp->filenm)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  489 |     sprintf (p, "%s:%lu: *** ", flocp->filenm, flocp->lineno + flocp->offset);[0m
  490 |   else if (makelevel == 0)[0m
      | [0;32m  } 
[0m[1msrc/output.c:489:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  489 |     sprintf (p, "%s:%lu: *** ", flocp->filenm, flocp->lineno + flocp->offset);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:489:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  489 |     sprintf (p, "%s:%lu: *** ", flocp->filenm, flocp->lineno + flocp->offset);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:490:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  490 |   else if (makelevel == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  491 |     sprintf (p, "%s: *** ", program);[0m
  492 |   else[0m
      | [0;32m  } 
[0m[1msrc/output.c:491:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  491 |     sprintf (p, "%s: *** ", program);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:491:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  491 |     sprintf (p, "%s: *** ", program);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:492:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  493 |     sprintf (p, "%s[%u]: *** ", program, makelevel);[0m
      | [0;1;32m                                                    
[0m[1msrc/output.c:493:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  493 |     sprintf (p, "%s[%u]: *** ", program, makelevel);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:493:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  493 |     sprintf (p, "%s[%u]: *** ", program, makelevel);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/output.c:497:3: [0m[0;1;35mwarning: [0m[1mCall to function 'vsprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  497 |   vsprintf (p, fmt, args);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1msrc/output.c:497:3: [0m[0;1;36mnote: [0mCall to function 'vsprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsprintf_s' in case of C11[0m
  497 |   vsprintf (p, fmt, args);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1msrc/output.c:500:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  500 |   strcat (p, stop);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/output.c:500:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  500 |   strcat (p, stop);[0m
      | [0;1;32m  ^~~~~~
[0m66 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[23/32][157.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpb2kkcbuz.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/commands.c
[1msrc/commands.c:81:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |       memcpy (p, file->name, cp - file->name);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/commands.c:81:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |       memcpy (p, file->name, cp - file->name);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/commands.c:86:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   86 |       memcpy (p, cp + 1, len - 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/commands.c:86:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   86 |       memcpy (p, cp + 1, len - 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/commands.c:129:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |       if (d == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  130 |         file->stem = stem = "";[0m
      | [0;1;32m                               
[0m[1msrc/commands.c:136:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |   for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  137 |     if (!d->ignore_mtime && !d->ignore_automatic_vars && !d->need_2nd_expansion)[0m
  138 |       {[0m
  139 |         less = dep_name (d);[0m
  140 |         break;[0m
  141 |       }[0m
      | [0;1;32m       
[0m[1msrc/commands.c:143:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |   if (file->cmds != 0 && file->cmds == default_file->cmds)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  144 |     /* This file got its commands from .DEFAULT.[0m
  145 |        In this case $< is the same as $@.  */[0m
  146 |     less = at;[0m
      | [0;1;32m              
[0m[1msrc/commands.c:183:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  183 |             if (d->ignore_mtime)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  184 |               bar_len += strlen (dep_name (d)) + 1;[0m
  185 |             else[0m
      | [0;32m            } 
[0m[1msrc/commands.c:185:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  186 |               plus_len += strlen (dep_name (d)) + 1;[0m
      | [0;1;32m                                                    
[0m[1msrc/commands.c:190:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |     if (bar_len == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  191 |       bar_len++;[0m
      | [0;1;32m                
[0m[1msrc/commands.c:193:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |     if (plus_len == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  194 |       plus_len++;[0m
      | [0;1;32m                 
[0m[1msrc/commands.c:196:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |     if (plus_len > plus_max)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  197 |       plus_value = xrealloc (plus_value, plus_max = plus_len);[0m
      | [0;1;32m                                                              
[0m[1msrc/commands.c:202:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m[1msrc/commands.c:213:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  214 | #endif[0m
  215 |             len = strlen (c);[0m
      | [0;1;32m                             
[0m[1msrc/commands.c:219:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |           if (! (d->changed || always_make_flag))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  220 |             qmark_len -= len + 1;       /* Don't space in $? for this one.  */[0m
      | [0;1;32m                                                                              
[0m[1msrc/commands.c:232:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |     if (qmark_len > qmark_max)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  233 |       qmark_value = xrealloc (qmark_value, qmark_max = qmark_len);[0m
      | [0;1;32m                                                                  
[0m[1msrc/commands.c:236:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |     if (bar_len > bar_max)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  237 |       bar_value = xrealloc (bar_value, bar_max = bar_len);[0m
      | [0;1;32m                                                          
[0m[1msrc/commands.c:249:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |         if (d->need_2nd_expansion || d->ignore_automatic_vars)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  250 |           continue;[0m
      | [0;1;32m                   
[0m[1msrc/commands.c:253:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |         if (HASH_VACANT (*slot))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  254 |           hash_insert_at (&dep_hash, d, slot);[0m
  255 |         else[0m
      | [0;32m        } 
[0m[1msrc/commands.c:262:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |             if (d->ignore_mtime != hd->ignore_mtime)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  263 |               d->ignore_mtime = hd->ignore_mtime = 0;[0m
      | [0;1;32m                                                     
[0m[1msrc/commands.c:271:101: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |         if (d->need_2nd_expansion || d->ignore_automatic_vars || hash_find_item (&dep_hash, d) != d)[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m  272 |           continue;[0m
      | [0;1;32m                   
[0m[1msrc/commands.c:281:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  282 | #endif[0m
  283 |           len = strlen (c);[0m
      | [0;1;32m                           
[0m[1msrc/commands.c:296:22: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  296 |                 qp = mempcpy (qp, c, len);[0m
      | [0;1;32m                     ^        ~~
[0m[1msrc/commands.c:73:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   73 |   if (ar_name (file->name))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:73:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   73 |   if (ar_name (file->name))[0m
      | [0;1;32m  ^
[0m[1msrc/commands.c:98:7: [0m[0;1;36mnote: [0mAssuming 'stem' is not equal to null[0m
   98 |   if (stem == 0)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1msrc/commands.c:98:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   98 |   if (stem == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/commands.c:136:24: [0m[0;1;36mnote: [0mAssuming 'd' is not equal to null[0m
  136 |   for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                       ^~~~~~
[0m[1msrc/commands.c:136:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  136 |   for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m  ^
[0m[1msrc/commands.c:137:9: [0m[0;1;36mnote: [0mAssuming field 'ignore_mtime' is 0[0m
  137 |     if (!d->ignore_mtime && !d->ignore_automatic_vars && !d->need_2nd_expansion)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:137:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/commands.c:137:29: [0m[0;1;36mnote: [0mAssuming field 'ignore_automatic_vars' is 0[0m
  137 |     if (!d->ignore_mtime && !d->ignore_automatic_vars && !d->need_2nd_expansion)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:137:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  137 |     if (!d->ignore_mtime && !d->ignore_automatic_vars && !d->need_2nd_expansion)[0m
      | [0;1;32m        ^
[0m[1msrc/commands.c:137:58: [0m[0;1;36mnote: [0mAssuming field 'need_2nd_expansion' is 0[0m
  137 |     if (!d->ignore_mtime && !d->ignore_automatic_vars && !d->need_2nd_expansion)[0m
      | [0;1;32m                                                         ^~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:137:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  137 |     if (!d->ignore_mtime && !d->ignore_automatic_vars && !d->need_2nd_expansion)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:139:16: [0m[0;1;36mnote: [0mAssuming field 'name' is null[0m
  139 |         less = dep_name (d);[0m
      | [0;1;32m               ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^~~~~~~~~
[0m[1msrc/commands.c:139:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
  139 |         less = dep_name (d);[0m
      | [0;1;32m               ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/commands.c:140:9: [0m[0;1;36mnote: [0m Execution continues on line 143[0m
  140 |         break;[0m
      | [0;1;32m        ^
[0m[1msrc/commands.c:143:7: [0m[0;1;36mnote: [0mAssuming field 'cmds' is equal to null[0m
  143 |   if (file->cmds != 0 && file->cmds == default_file->cmds)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1msrc/commands.c:143:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  143 |   if (file->cmds != 0 && file->cmds == default_file->cmds)[0m
      | [0;1;32m                      ^
[0m[1msrc/commands.c:161:47: [0m[0;1;36mnote: [0m'qmark_value' initialized to a null pointer value[0m
  161 |     static char *plus_value=0, *bar_value=0, *qmark_value=0;[0m
      | [0;1;32m                                              ^~~~~~~~~~~
[0m[1msrc/commands.c:179:26: [0m[0;1;36mnote: [0m'd' is not equal to null[0m
  179 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                         ^
[0m[1msrc/commands.c:179:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  179 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:181:17: [0m[0;1;36mnote: [0mField 'need_2nd_expansion' is 0[0m
  181 |         if (!d->need_2nd_expansion && !d->ignore_automatic_vars)[0m
      | [0;1;32m                ^
[0m[1msrc/commands.c:181:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  181 |         if (!d->need_2nd_expansion && !d->ignore_automatic_vars)[0m
      | [0;1;32m            ^
[0m[1msrc/commands.c:181:43: [0m[0;1;36mnote: [0mField 'ignore_automatic_vars' is 0[0m
  181 |         if (!d->need_2nd_expansion && !d->ignore_automatic_vars)[0m
      | [0;1;32m                                          ^
[0m[1msrc/commands.c:181:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  181 |         if (!d->need_2nd_expansion && !d->ignore_automatic_vars)[0m
      | [0;1;32m        ^
[0m[1msrc/commands.c:183:20: [0m[0;1;36mnote: [0mField 'ignore_mtime' is 0[0m
  183 |             if (d->ignore_mtime)[0m
      | [0;1;32m                   ^
[0m[1msrc/commands.c:183:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  183 |             if (d->ignore_mtime)[0m
      | [0;1;32m            ^
[0m[1msrc/commands.c:186:35: [0m[0;1;36mnote: [0mField 'name' is null[0m
  186 |               plus_len += strlen (dep_name (d)) + 1;[0m
      | [0;1;32m                                  ^
[0m[1msrc/dep.h:105:33: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                                ^
[0m[1msrc/commands.c:186:35: [0m[0;1;36mnote: [0m'?' condition is false[0m
  186 |               plus_len += strlen (dep_name (d)) + 1;[0m
      | [0;1;32m                                  ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/commands.c:179:26: [0m[0;1;36mnote: [0mAssuming 'd' is equal to null[0m
  179 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                         ^~~~~~
[0m[1msrc/commands.c:179:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 190[0m
  179 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:190:9: [0m[0;1;36mnote: [0m'bar_len' is equal to 0[0m
  190 |     if (bar_len == 0)[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/commands.c:190:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  190 |     if (bar_len == 0)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:193:9: [0m[0;1;36mnote: [0m'plus_len' is not equal to 0[0m
  193 |     if (plus_len == 0)[0m
      | [0;1;32m        ^~~~~~~~
[0m[1msrc/commands.c:193:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  193 |     if (plus_len == 0)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:196:9: [0m[0;1;36mnote: [0m'plus_len' is > 'plus_max'[0m
  196 |     if (plus_len > plus_max)[0m
      | [0;1;32m        ^~~~~~~~
[0m[1msrc/commands.c:196:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  196 |     if (plus_len > plus_max)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:202:26: [0m[0;1;36mnote: [0m'd' is not equal to null[0m
  202 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                         ^
[0m[1msrc/commands.c:202:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  202 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:203:16: [0m[0;1;36mnote: [0mField 'ignore_mtime' is 0[0m
  203 |       if (! d->ignore_mtime && ! d->need_2nd_expansion && ! d->ignore_automatic_vars)[0m
      | [0;1;32m               ^
[0m[1msrc/commands.c:203:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  203 |       if (! d->ignore_mtime && ! d->need_2nd_expansion && ! d->ignore_automatic_vars)[0m
      | [0;1;32m          ^
[0m[1msrc/commands.c:203:37: [0m[0;1;36mnote: [0mField 'need_2nd_expansion' is 0[0m
  203 |       if (! d->ignore_mtime && ! d->need_2nd_expansion && ! d->ignore_automatic_vars)[0m
      | [0;1;32m                                    ^
[0m[1msrc/commands.c:203:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  203 |       if (! d->ignore_mtime && ! d->need_2nd_expansion && ! d->ignore_automatic_vars)[0m
      | [0;1;32m          ^
[0m[1msrc/commands.c:203:64: [0m[0;1;36mnote: [0mField 'ignore_automatic_vars' is 0[0m
  203 |       if (! d->ignore_mtime && ! d->need_2nd_expansion && ! d->ignore_automatic_vars)[0m
      | [0;1;32m                                                               ^
[0m[1msrc/commands.c:203:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  203 |       if (! d->ignore_mtime && ! d->need_2nd_expansion && ! d->ignore_automatic_vars)[0m
      | [0;1;32m      ^
[0m[1msrc/commands.c:205:27: [0m[0;1;36mnote: [0mField 'name' is null[0m
  205 |           const char *c = dep_name (d);[0m
      | [0;1;32m                          ^
[0m[1msrc/dep.h:105:33: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                                ^
[0m[1msrc/commands.c:205:27: [0m[0;1;36mnote: [0m'?' condition is false[0m
  205 |           const char *c = dep_name (d);[0m
      | [0;1;32m                          ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/commands.c:208:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  208 |           if (ar_name (c))[0m
      | [0;1;32m              ^~~~~~~~~~~
[0m[1msrc/commands.c:208:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |           if (ar_name (c))[0m
      | [0;1;32m          ^
[0m[1msrc/commands.c:219:18: [0m[0;1;36mnote: [0mAssuming field 'changed' is 0[0m
  219 |           if (! (d->changed || always_make_flag))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1msrc/commands.c:219:18: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/commands.c:219:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  219 |           if (! (d->changed || always_make_flag))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:219:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  219 |           if (! (d->changed || always_make_flag))[0m
      | [0;1;32m          ^
[0m[1msrc/commands.c:202:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 225[0m
  202 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:225:8: [0m[0;1;36mnote: [0m'cp' is > 'plus_value'[0m
  225 |     cp[cp > plus_value ? -1 : 0] = '\0';[0m
      | [0;1;32m       ^~
[0m[1msrc/commands.c:225:8: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1msrc/commands.c:232:9: [0m[0;1;36mnote: [0mAssuming 'qmark_len' is <= 'qmark_max'[0m
  232 |     if (qmark_len > qmark_max)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:232:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  232 |     if (qmark_len > qmark_max)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:234:5: [0m[0;1;36mnote: [0mNull pointer value stored to 'qp'[0m
  234 |     qp = qmark_value;[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:236:9: [0m[0;1;36mnote: [0m'bar_len' is > 'bar_max'[0m
  236 |     if (bar_len > bar_max)[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/commands.c:236:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  236 |     if (bar_len > bar_max)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:247:26: [0m[0;1;36mnote: [0m'd' is not equal to null[0m
  247 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                         ^
[0m[1msrc/commands.c:247:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  247 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:249:16: [0m[0;1;36mnote: [0mField 'need_2nd_expansion' is 0[0m
  249 |         if (d->need_2nd_expansion || d->ignore_automatic_vars)[0m
      | [0;1;32m               ^
[0m[1msrc/commands.c:249:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  249 |         if (d->need_2nd_expansion || d->ignore_automatic_vars)[0m
      | [0;1;32m            ^
[0m[1msrc/commands.c:249:41: [0m[0;1;36mnote: [0mField 'ignore_automatic_vars' is 0[0m
  249 |         if (d->need_2nd_expansion || d->ignore_automatic_vars)[0m
      | [0;1;32m                                        ^
[0m[1msrc/commands.c:249:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  249 |         if (d->need_2nd_expansion || d->ignore_automatic_vars)[0m
      | [0;1;32m        ^
[0m[1msrc/commands.c:253:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  253 |         if (HASH_VACANT (*slot))[0m
      | [0;1;32m            ^
[0m[1msrc/hash.h:80:28: [0m[0;1;36mnote: [0mexpanded from macro 'HASH_VACANT'[0m
   80 | #define HASH_VACANT(item) ((item) == 0 || (void *) (item) == hash_deleted_item)[0m
      | [0;1;32m                           ^~~~~~~~~~~
[0m[1msrc/commands.c:253:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  253 |         if (HASH_VACANT (*slot))[0m
      | [0;1;32m            ^
[0m[1msrc/hash.h:80:40: [0m[0;1;36mnote: [0mexpanded from macro 'HASH_VACANT'[0m
   80 | #define HASH_VACANT(item) ((item) == 0 || (void *) (item) == hash_deleted_item)[0m
      | [0;1;32m                                       ^
[0m[1msrc/commands.c:247:26: [0m[0;1;36mnote: [0mAssuming 'd' is equal to null[0m
  247 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                         ^~~~~~
[0m[1msrc/commands.c:247:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 267[0m
  247 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:267:26: [0m[0;1;36mnote: [0m'd' is not equal to null[0m
  267 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                         ^
[0m[1msrc/commands.c:267:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  267 |     for (d = file->deps; d != 0; d = d->next)[0m
      | [0;1;32m    ^
[0m[1msrc/commands.c:271:13: [0m[0;1;36mnote: [0mAssuming field 'need_2nd_expansion' is 0[0m
  271 |         if (d->need_2nd_expansion || d->ignore_automatic_vars || hash_find_item (&dep_hash, d) != d)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:271:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/commands.c:271:38: [0m[0;1;36mnote: [0mAssuming field 'ignore_automatic_vars' is 0[0m
  271 |         if (d->need_2nd_expansion || d->ignore_automatic_vars || hash_find_item (&dep_hash, d) != d)[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:271:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  271 |         if (d->need_2nd_expansion || d->ignore_automatic_vars || hash_find_item (&dep_hash, d) != d)[0m
      | [0;1;32m            ^
[0m[1msrc/commands.c:271:66: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  271 |         if (d->need_2nd_expansion || d->ignore_automatic_vars || hash_find_item (&dep_hash, d) != d)[0m
      | [0;1;32m                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/commands.c:271:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  271 |         if (d->need_2nd_expansion || d->ignore_automatic_vars || hash_find_item (&dep_hash, d) != d)[0m
      | [0;1;32m        ^
[0m[1msrc/commands.c:274:13: [0m[0;1;36mnote: [0mAssuming field 'name' is non-null[0m
  274 |         c = dep_name (d);[0m
      | [0;1;32m            ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^~~~~~~~~
[0m[1msrc/commands.c:274:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
  274 |         c = dep_name (d);[0m
      | [0;1;32m            ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/commands.c:276:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  276 |         if (ar_name (c))[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1msrc/commands.c:276:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  276 |         if (ar_name (c))[0m
      | [0;1;32m        ^
[0m[1msrc/commands.c:285:13: [0m[0;1;36mnote: [0mAssuming field 'ignore_mtime' is 0[0m
  285 |         if (d->ignore_mtime)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~
[0m[1msrc/commands.c:285:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  285 |         if (d->ignore_mtime)[0m
      | [0;1;32m        ^
[0m[1msrc/commands.c:294:17: [0m[0;1;36mnote: [0mAssuming field 'changed' is not equal to 0[0m
  294 |             if (d->changed || always_make_flag)[0m
      | [0;1;32m                ^~~~~~~~~~
[0m[1msrc/commands.c:294:28: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  294 |             if (d->changed || always_make_flag)[0m
      | [0;1;32m                           ^
[0m[1msrc/commands.c:296:22: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
  296 |                 qp = mempcpy (qp, c, len);[0m
      | [0;1;32m                     ^        ~~
[0m[1msrc/commands.c:330:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |   if (!cmds || cmds->command_lines != NULL)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  331 |     return;[0m
      | [0;1;32m           
[0m[1msrc/commands.c:344:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |       if (l > 0 && lines[0][l-1] == '\n')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  345 |         lines[0][l-1] = '\0';[0m
      | [0;1;32m                             
[0m[1msrc/commands.c:359:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |           if (end == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  360 |             end = p + strlen (p);[0m
  361 |           else if (end > p && end[-1] == '\\')[0m
      | [0;32m          } 
[0m[1msrc/commands.c:367:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |                   for (b = end - 2; b >= p && *b == '\\'; --b)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  368 |                     backslash = !backslash;[0m
      | [0;1;32m                                           
[0m[1msrc/commands.c:377:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |           if (nlines == USHRT_MAX)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  378 |             ON (fatal, &cmds->fileinfo,[0m
  379 |                 _("Recipe has too many lines (limit %hu)"), nlines);[0m
      | [0;1;32m                                                                    
[0m[1msrc/commands.c:389:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |           if (*p != '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  390 |             ++p;[0m
      | [0;1;32m                
[0m[1msrc/commands.c:408:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |       while (ISBLANK (*p) || *p == '-' || *p == '@' || *p == '+')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  409 |         switch (*(p++))[0m
  410 |           {[0m
  411 |           case '+':[0m
  412 |             flags |= COMMANDS_RECURSE;[0m
  413 |             break;[0m
  414 |           case '@':[0m
  415 |             flags |= COMMANDS_SILENT;[0m
  416 |             break;[0m
  417 |           case '-':[0m
  418 |             flags |= COMMANDS_NOERROR;[0m
  419 |             break;[0m
  420 |           }[0m
      | [0;1;32m           
[0m[1msrc/commands.c:412:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  412 |             flags |= COMMANDS_RECURSE;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  413 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/commands.c:415:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  415 |             flags |= COMMANDS_SILENT;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  416 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/commands.c:418:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  418 |             flags |= COMMANDS_NOERROR;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  419 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/commands.c:424:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |           && (strstr (p, "$(MAKE)") != 0 || strstr (p, "${MAKE}") != 0))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  425 |         flags |= COMMANDS_RECURSE;[0m
      | [0;1;32m                                  
[0m[1msrc/commands.c:444:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |   for (p = file->cmds->commands; *p != '\0'; ++p)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  445 |     if (!ISSPACE (*p) && *p != '-' && *p != '@' && *p != '+')[0m
  446 |       break;[0m
      | [0;1;32m            
[0m[1msrc/commands.c:445:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  445 |     if (!ISSPACE (*p) && *p != '-' && *p != '@' && *p != '+')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  446 |       break;[0m
      | [0;1;32m            
[0m[1msrc/commands.c:542:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |       for (c = children; c != 0; c = c->next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  543 |         if (!c->remote && c->pid > 0)[0m
  544 |           (void) kill (c->pid, SIGTERM);[0m
      | [0;1;32m                                        
[0m[1msrc/commands.c:543:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |         if (!c->remote && c->pid > 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  544 |           (void) kill (c->pid, SIGTERM);[0m
      | [0;1;32m                                        
[0m[1msrc/commands.c:563:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  563 |       for (c = children; c != 0; c = c->next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  564 |         if (c->remote && c->pid > 0)[0m
  565 |           (void) remote_kill (c->pid, sig);[0m
      | [0;1;32m                                           
[0m[1msrc/commands.c:564:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  564 |         if (c->remote && c->pid > 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  565 |           (void) remote_kill (c->pid, sig);[0m
      | [0;1;32m                                           
[0m[1msrc/commands.c:567:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |       for (c = children; c != 0; c = c->next)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  568 |         delete_child_targets (c);[0m
      | [0;1;32m                                 
[0m[1msrc/commands.c:572:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |       while (job_slots_used > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  573 |         reap_children (1, 0);[0m
      | [0;1;32m                             
[0m[1msrc/commands.c:577:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |     while (job_slots_used > 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  578 |       reap_children (1, 1);[0m
      | [0;1;32m                           
[0m[1msrc/commands.c:585:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |   if (sig == SIGQUIT)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  586 |     /* We don't want to send ourselves SIGQUIT, because it will[0m
  587 |        cause a core dump.  Just exit instead.  */[0m
  588 |     exit (MAKE_TROUBLE);[0m
      | [0;1;32m                        
[0m[1msrc/commands.c:600:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |   if (kill (make_pid (), sig) < 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  601 |     pfatal_with_name ("kill");[0m
      | [0;1;32m                              
[0m[1msrc/commands.c:616:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  616 |   if (file->precious || file->phony)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  617 |     return;[0m
      | [0;1;32m           
[0m[1msrc/commands.c:627:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |           if (on_behalf_of)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  628 |             OSS (error, NILF,[0m
  629 |                  _("*** [%s] Archive member '%s' may be bogus; not deleted"),[0m
  630 |                  on_behalf_of, file->name);[0m
  631 |           else[0m
      | [0;32m          } 
[0m[1msrc/commands.c:631:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  632 |             OS (error, NILF,[0m
  633 |                 _("*** Archive member '%s' may be bogus; not deleted"),[0m
  634 |                 file->name);[0m
      | [0;1;32m                            
[0m[1msrc/commands.c:645:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |       if (on_behalf_of)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  646 |         OSS (error, NILF,[0m
  647 |              _("*** [%s] Deleting file '%s'"), on_behalf_of, file->name);[0m
  648 |       else[0m
      | [0;32m      } 
[0m[1msrc/commands.c:648:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  649 |         OS (error, NILF, _("*** Deleting file '%s'"), file->name);[0m
      | [0;1;32m                                                                  
[0m[1msrc/commands.c:651:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |           && errno != ENOENT)   /* It disappeared; so what.  */[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  652 |         perror_with_name ("unlink: ", file->name);[0m
      | [0;1;32m                                                  
[0m[1msrc/commands.c:665:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |   if (child->deleted || child->pid < 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  666 |     return;[0m
      | [0;1;32m           
[0m[1msrc/commands.c:672:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  672 |   for (d = child->file->also_make; d != 0; d = d->next)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  673 |     delete_target (d->file, child->file->name);[0m
      | [0;1;32m                                               
[0m[1msrc/commands.c:687:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  687 |   if (cmds->fileinfo.filenm == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  688 |     puts (_(" (built-in):"));[0m
  689 |   else[0m
      | [0;32m  } 
[0m[1msrc/commands.c:689:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  690 |     printf (_(" (from '%s', line %lu):\n"),[0m
  691 |             cmds->fileinfo.filenm, cmds->fileinfo.lineno);[0m
      | [0;1;32m                                                          
[0m[1msrc/commands.c:702:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |           if (*end == '\n' && !bs)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  703 |             break;[0m
      | [0;1;32m                  
[0m56 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[24/32][161.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpw27gl92y.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/vpath.c
[1msrc/vpath.c:149:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |   if (pattern != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  150 |     percent = find_percent (pattern);[0m
      | [0;1;32m                                     
[0m[1msrc/vpath.c:169:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |               if (lastpath == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  170 |                 vpaths = path->next;[0m
  171 |               else[0m
      | [0;32m              } 
[0m[1msrc/vpath.c:171:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  172 |                 lastpath->next = next;[0m
      | [0;1;32m                                      
[0m[1msrc/vpath.c:179:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  180 |             lastpath = path;[0m
      | [0;1;32m                            
[0m[1msrc/vpath.c:193:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |   while (STOP_SET (*dirpath, MAP_BLANK|MAP_PATHSEP))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  194 |     ++dirpath;[0m
      | [0;1;32m              
[0m[1msrc/vpath.c:202:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |   while (*p != '\0')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  203 |     if (STOP_SET (*p++, MAP_BLANK|MAP_PATHSEP))[0m
  204 |       ++maxelem;[0m
      | [0;1;32m                
[0m[1msrc/vpath.c:203:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |     if (STOP_SET (*p++, MAP_BLANK|MAP_PATHSEP))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  204 |       ++maxelem;[0m
      | [0;1;32m                
[0m[1msrc/vpath.c:228:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |              && !ISBLANK (*p))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  229 |         ++p;[0m
      | [0;1;32m            
[0m[1msrc/vpath.c:238:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |       if (len > 1 && p[-1] == '/')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  239 |         --len;[0m
      | [0;1;32m              
[0m[1msrc/vpath.c:245:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |           if (len > maxvpath)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  246 |             maxvpath = len;[0m
      | [0;1;32m                           
[0m[1msrc/vpath.c:250:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |       while (STOP_SET (*p, MAP_BLANK|MAP_PATHSEP))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  251 |         ++p;[0m
      | [0;1;32m            
[0m[1msrc/vpath.c:260:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |       if (elem < (maxelem - 1))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  261 |         vpath = xrealloc ((void *)vpath, (elem+1) * sizeof (const char *));[0m
      | [0;1;32m                                                                           
[0m[1msrc/vpath.c:278:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  279 |     /* There were no entries, so free whatever space we allocated.  */[0m
  280 |     /* MSVC erroneously warns without a cast here.  */[0m
  281 |     free ((void *)vpath);[0m
      | [0;1;32m                         
[0m[1msrc/vpath.c:293:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |       for (gp = gpaths->searchpath; *gp != NULL; ++gp)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  294 |         if (strneq (*gp, file, len) && (*gp)[len] == '\0')[0m
  295 |           return 1;[0m
      | [0;1;32m                   
[0m[1msrc/vpath.c:294:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |         if (strneq (*gp, file, len) && (*gp)[len] == '\0')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  295 |           return 1;[0m
      | [0;1;32m                   
[0m[1msrc/vpath.c:347:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |   if (name_dplen > 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  348 |     flen -= name_dplen + 1;[0m
      | [0;1;32m                           
[0m[1msrc/vpath.c:388:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  388 |           memcpy (p + 1, filename, flen + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/vpath.c:388:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  388 |           memcpy (p + 1, filename, flen + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/vpath.c:390:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  391 | #else[0m
  392 |       /* VMS use a slash if no directory terminator present */[0m
  393 |       if (p != name && p[-1] != '/' && p[-1] != ':' &&[0m
  394 |           p[-1] != '>' && p[-1] != ']')[0m
  395 |         {[0m
  396 |           *p = '/';[0m
  397 |           memcpy (p + 1, filename, flen + 1);[0m
  398 |         }[0m
  399 |       else[0m
  400 | #endif[0m
  401 |         memcpy (p, filename, flen + 1);[0m
      | [0;1;32m                                       
[0m[1msrc/vpath.c:401:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  401 |         memcpy (p, filename, flen + 1);[0m
      | [0;1;32m        ^~~~~~
[0m[1msrc/vpath.c:401:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  401 |         memcpy (p, filename, flen + 1);[0m
      | [0;1;32m        ^~~~~~
[0m[1msrc/vpath.c:501:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |           if (mtime_ptr != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  502 |             *mtime_ptr = UNKNOWN_MTIME;[0m
      | [0;1;32m                                       
[0m[1msrc/vpath.c:506:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |           if (path_index)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  507 |             *path_index = i;[0m
      | [0;1;32m                            
[0m[1msrc/vpath.c:536:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |       || (vpaths == 0 && general_vpath == 0))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  537 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/vpath.c:551:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |           if (p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  552 |             return p;[0m
      | [0;1;32m                     
[0m[1msrc/vpath.c:555:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |       if (vpath_index)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  556 |         ++*vpath_index;[0m
      | [0;1;32m                       
[0m[1msrc/vpath.c:564:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  564 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  565 |         return p;[0m
      | [0;1;32m                 
[0m[1msrc/vpath.c:593:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |       for (i = 0; v->searchpath[i] != 0; ++i)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  594 |         printf ("%s%c", v->searchpath[i],[0m
  595 |                 v->searchpath[i + 1] == 0 ? '\n' : PATH_SEPARATOR_CHAR);[0m
      | [0;1;32m                                                                        
[0m[1msrc/vpath.c:598:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  598 |   if (vpaths == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  599 |     puts (_("# No 'vpath' search paths."));[0m
  600 |   else[0m
      | [0;32m  } 
[0m[1msrc/vpath.c:600:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  601 |     printf (_("\n# %u 'vpath' search paths.\n"), nvpaths);[0m
      | [0;1;32m                                                          
[0m[1msrc/vpath.c:603:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |   if (general_vpath == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  604 |     puts (_("\n# No general ('VPATH' variable) search path."));[0m
  605 |   else[0m
      | [0;32m  } 
[0m[1msrc/vpath.c:612:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |       for (i = 0; path[i] != 0; ++i)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  613 |         printf ("%s%c", path[i],[0m
  614 |                 path[i + 1] == 0 ? '\n' : PATH_SEPARATOR_CHAR);[0m
      | [0;1;32m                                                               
[0m32 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[25/32][173.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpuddz87q3.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/remake.c
[1msrc/remake.c:88:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |   if (mtime == UNKNOWN_MTIME)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   89 |     mtime = name_mtime (file->name);[0m
      | [0;1;32m                                    
[0m[1msrc/remake.c:93:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   if (is_ordinary_mtime (mtime) && mtime > file->mtime_before_update)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m   94 |     for (ad = file->also_make; ad; ad = ad->next)[0m
   95 |       if (ad->file->last_mtime == NONEXISTENT_MTIME)[0m
   96 |         OS (error, file->cmds ? &file->cmds->fileinfo : NILF,[0m
   97 |             _("warning: pattern recipe did not update peer target '%s'."),[0m
   98 |             ad->file->name);[0m
      | [0;1;32m                            
[0m[1msrc/remake.c:94:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |     for (ad = file->also_make; ad; ad = ad->next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   95 |       if (ad->file->last_mtime == NONEXISTENT_MTIME)[0m
   96 |         OS (error, file->cmds ? &file->cmds->fileinfo : NILF,[0m
   97 |             _("warning: pattern recipe did not update peer target '%s'."),[0m
   98 |             ad->file->name);[0m
      | [0;1;32m                            
[0m[1msrc/remake.c:95:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |       if (ad->file->last_mtime == NONEXISTENT_MTIME)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   96 |         OS (error, file->cmds ? &file->cmds->fileinfo : NILF,[0m
   97 |             _("warning: pattern recipe did not update peer target '%s'."),[0m
   98 |             ad->file->name);[0m
      | [0;1;32m                            
[0m[1msrc/remake.c:175:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  176 |                     touch_flag = question_flag = just_print_flag = 0;[0m
      | [0;1;32m                                                                     
[0m[1msrc/remake.c:190:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |               if (commands_started > ocommands_started)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  191 |                 g->changed = 1;[0m
      | [0;1;32m                               
[0m[1msrc/remake.c:223:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |                               || (!just_print_flag && !question_flag))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  224 |                             status = us_success;[0m
      | [0;1;32m                                                
[0m[1msrc/remake.c:225:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |                           if (rebuilding_makefiles && file->dontcare)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  226 |                             /* This is a default makefile; stop remaking.  */[0m
  227 |                             stop = 1;[0m
      | [0;1;32m                                     
[0m[1msrc/remake.c:238:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |               if (stop)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  239 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/remake.c:256:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  256 |                   && !run_silent && !question_flag)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  257 |                 OS (message, 1, ((file->phony || file->cmds == 0)[0m
  258 |                                  ? _("Nothing to be done for '%s'.")[0m
  259 |                                  : _("'%s' is up to date.")),[0m
  260 |                     file->name);[0m
      | [0;1;32m                                
[0m[1msrc/remake.c:263:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |               if (lastgoal == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  264 |                 goals = gu->next;[0m
  265 |               else[0m
      | [0;32m              } 
[0m[1msrc/remake.c:265:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  266 |                 lastgoal->next = gu->next;[0m
      | [0;1;32m                                          
[0m[1msrc/remake.c:270:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |               if (stop)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  271 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/remake.c:282:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |       if (gu == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  283 |         ++considered;[0m
      | [0;1;32m                     
[0m[1msrc/remake.c:306:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |   if ((goal_dep->flags & (RM_INCLUDED|RM_DONTCARE)) != RM_INCLUDED)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  307 |     return;[0m
      | [0;1;32m           
[0m[1msrc/remake.c:309:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |   for (goal = goal_list; goal; goal = goal->next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  310 |     if (goal_dep->file == goal->file)[0m
  311 |       {[0m
  312 |         if (goal->error)[0m
  313 |           {[0m
  314 |             OSS (error, &goal->floc, "%s: %s",[0m
  315 |                  goal->file->name, strerror (goal->error));[0m
  316 |             goal->error = 0;[0m
  317 |           }[0m
  318 |         return;[0m
  319 |       }[0m
      | [0;1;32m       
[0m[1msrc/remake.c:374:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |       if (new && !keep_going_flag)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  375 |         return new;[0m
      | [0;1;32m                   
[0m[1msrc/remake.c:378:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |           || f->command_state == cs_deps_running)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  379 |         /* Don't run other :: rules for this target until[0m
  380 |            this rule is finished.  */[0m
  381 |         return us_success;[0m
      | [0;1;32m                          
[0m[1msrc/remake.c:383:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |       if (new > status)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  384 |         status = new;[0m
      | [0;1;32m                     
[0m[1msrc/remake.c:422:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |           if (!keep_going_flag)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  423 |             fatal (NILF, l, m, "", file->name, file->parent->name, "");[0m
      | [0;1;32m                                                                       
[0m[1msrc/remake.c:432:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |           if (!keep_going_flag)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  433 |             fatal (NILF, l, m, "", file->name, "");[0m
      | [0;1;32m                                                   
[0m[1msrc/remake.c:469:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |           if (file->no_diag && !file->dontcare)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  470 |               complain (file);[0m
      | [0;1;32m                              
[0m[1msrc/remake.c:485:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  485 |       DBF (DB_VERBOSE, _("Still updating file '%s'.\n"));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  486 |       return us_success;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1msrc/debug.h:37:21: [0m[0;1;36mnote: [0mexpanded from macro 'DBF'[0m
   37 | #define DBF(_l,_x)  do{ if(ISDB(_l)) {print_spaces (depth); \[0m
      | [0;1;32m                    ^
[0m[1msrc/remake.c:488:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |       DBF (DB_VERBOSE, _("Finished updating file '%s'.\n"));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  489 |       return file->update_status;[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1msrc/debug.h:37:21: [0m[0;1;36mnote: [0mexpanded from macro 'DBF'[0m
   37 | #define DBF(_l,_x)  do{ if(ISDB(_l)) {print_spaces (depth); \[0m
      | [0;1;32m                    ^
[0m[1msrc/remake.c:491:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1msrc/remake.c:517:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  517 |   if (noexist)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  518 |     DBF (DB_BASIC, _("File '%s' does not exist.\n"));[0m
  519 |   else if (is_ordinary_mtime (this_mtime) && file->low_resolution_time)[0m
      | [0;32m  } 
[0m[1msrc/remake.c:523:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |       if (ns != 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  524 |         OS (error, NILF,[0m
  525 |             _("*** Warning: .LOW_RESOLUTION_TIME file '%s' has a high resolution time stamp"),[0m
  526 |             file->name);[0m
      | [0;1;32m                        
[0m[1msrc/remake.c:546:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |       else if (fmtime < this_mtime)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  547 |         this_mtime = fmtime;[0m
      | [0;1;32m                            
[0m[1msrc/remake.c:582:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |       if (second_expansion)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  583 |         expand_deps (ad->file);[0m
      | [0;1;32m                               
[0m[1msrc/remake.c:598:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  598 |           if (d->wait_here && running)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  599 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/remake.c:614:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |               if (lastd == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  615 |                 file->deps = du->next;[0m
  616 |               else[0m
      | [0;32m              } 
[0m[1msrc/remake.c:616:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  616 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  617 |                 lastd->next = du->next;[0m
      | [0;1;32m                                       
[0m[1msrc/remake.c:634:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |           if (new > dep_status)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  635 |             dep_status = new;[0m
      | [0;1;32m                             
[0m[1msrc/remake.c:638:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  638 |           if (rebuilding_makefiles)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  639 |             d->file->dontcare = dontcare;[0m
      | [0;1;32m                                         
[0m[1msrc/remake.c:641:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |           if (! d->ignore_mtime)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  642 |             must_make = maybe_make;[0m
      | [0;1;32m                                   
[0m[1msrc/remake.c:648:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |             if (f->double_colon)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  649 |               f = f->double_colon;[0m
      | [0;1;32m                                  
[0m[1msrc/remake.c:659:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  659 |           if (dep_status && !keep_going_flag)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  660 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/remake.c:662:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |           if (!running)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  663 |             /* The prereq is considered changed if the timestamp has changed[0m
  664 |                while it was built, OR it doesn't exist.  */[0m
  665 |             d->changed = ((file_mtime (d->file) != mtime)[0m
  666 |                           || (mtime == NONEXISTENT_MTIME));[0m
      | [0;1;32m                                                           
[0m[1msrc/remake.c:682:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |           if (d->wait_here && running)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  683 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/remake.c:707:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |               if (new > dep_status)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  708 |                 dep_status = new;[0m
      | [0;1;32m                                 
[0m[1msrc/remake.c:711:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |               if (rebuilding_makefiles)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  712 |                 d->file->dontcare = dontcare;[0m
      | [0;1;32m                                             
[0m[1msrc/remake.c:718:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |                 if (f->double_colon)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  719 |                   f = f->double_colon;[0m
      | [0;1;32m                                      
[0m[1msrc/remake.c:729:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  729 |               if (dep_status && !keep_going_flag)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  730 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/remake.c:732:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |               if (!running)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  733 |                 d->changed = ((file->phony && file->cmds != 0)[0m
  734 |                               || file_mtime (d->file) != mtime);[0m
      | [0;1;32m                                                                
[0m[1msrc/remake.c:765:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |           && !just_print_flag && !question_flag)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  766 |         OS (error, NILF,[0m
  767 |             _("Target '%s' not remade because of errors."), file->name);[0m
      | [0;1;32m                                                                        
[0m[1msrc/remake.c:772:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  772 |   if (file->command_state == cs_deps_running)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  773 |     /* The commands for some deps were running on the last iteration, but[0m
  774 |        they have finished now.  Reset the command_state to not_started to[0m
  775 |        simplify later bookkeeping.  It is important that we do this only[0m
  776 |        when the prior state was cs_deps_running, because that prior state[0m
  777 |        was definitely propagated to FILE's also_make's by set_command_state[0m
  778 |        (called above), but in another state an also_make may have[0m
  779 |        independently changed to finished state, and we would confuse that[0m
  780 |        file's bookkeeping (updated, but not_started is bogus state).  */[0m
  781 |     set_command_state (file, cs_not_started);[0m
      | [0;1;32m                                             
[0m[1msrc/remake.c:798:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |           if (d_mtime == NONEXISTENT_MTIME && !d->file->intermediate)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  799 |             /* We must remake if this dep does not[0m
  800 |                exist and is not intermediate.  */[0m
  801 |             must_make = 1;[0m
      | [0;1;32m                          
[0m[1msrc/remake.c:818:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |               if (ISDB (DB_VERBOSE))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  819 |                 fmt = _("Prerequisite '%s' is order-only for target '%s'.\n");[0m
      | [0;1;32m                                                                              
[0m[1msrc/remake.c:823:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  823 |               if (ISDB (DB_BASIC))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  824 |                 fmt = _("Prerequisite '%s' of target '%s' does not exist.\n");[0m
      | [0;1;32m                                                                              
[0m[1msrc/remake.c:828:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  828 |               if (ISDB (DB_BASIC))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  829 |                 fmt = _("Prerequisite '%s' is newer than target '%s'.\n");[0m
      | [0;1;32m                                                                          
[0m[1msrc/remake.c:831:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |           else if (ISDB (DB_VERBOSE))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  832 |             fmt = _("Prerequisite '%s' is older than target '%s'.\n");[0m
      | [0;1;32m                                                                      
[0m[1msrc/remake.c:868:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  868 |           if (!streq (file->name, file->hname))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  869 |               printf (_("; using VPATH name '%s'"), file->hname);[0m
      | [0;1;32m                                                                 
[0m[1msrc/remake.c:876:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  876 |       if (!file->notintermediate && no_intermediates == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  877 |         file->secondary = 1;[0m
      | [0;1;32m                            
[0m[1msrc/remake.c:916:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  916 |       DBF (DB_BASIC, _("Failed to remake target file '%s'.\n"));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  917 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/debug.h:37:21: [0m[0;1;36mnote: [0mexpanded from macro 'DBF'[0m
   37 | #define DBF(_l,_x)  do{ if(ISDB(_l)) {print_spaces (depth); \[0m
      | [0;1;32m                    ^
[0m[1msrc/remake.c:919:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  919 |       DBF (DB_BASIC, _("Successfully remade target file '%s'.\n"));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  920 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/debug.h:37:21: [0m[0;1;36mnote: [0mexpanded from macro 'DBF'[0m
   37 | #define DBF(_l,_x)  do{ if(ISDB(_l)) {print_spaces (depth); \[0m
      | [0;1;32m                    ^
[0m[1msrc/remake.c:922:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  922 |       DBF (DB_BASIC, _("Target file '%s' needs to be remade under -q.\n"));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  923 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/debug.h:37:21: [0m[0;1;36mnote: [0mexpanded from macro 'DBF'[0m
   37 | #define DBF(_l,_x)  do{ if(ISDB(_l)) {print_spaces (depth); \[0m
      | [0;1;32m                    ^
[0m[1msrc/remake.c:925:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  925 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1msrc/remake.c:962:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  962 |           for (i = 0; i < file->cmds->ncommand_lines; ++i)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  963 |             if (NONE_SET (file->cmds->lines_flags[i], COMMANDS_RECURSE))[0m
  964 |               goto have_nonrecursing;[0m
      | [0;1;32m                                     
[0m[1msrc/remake.c:963:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  963 |             if (NONE_SET (file->cmds->lines_flags[i], COMMANDS_RECURSE))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  964 |               goto have_nonrecursing;[0m
      | [0;1;32m                                     
[0m[1msrc/remake.c:969:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  969 |           if (file->phony)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  970 |             file->update_status = us_success;[0m
  971 |           /* According to POSIX, -t doesn't affect targets with no cmds.  */[0m
  972 |           else if (file->cmds != 0)[0m
      | [0;32m          } 
[0m[1msrc/remake.c:990:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  990 |   if (file->mtime_before_update == UNKNOWN_MTIME)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  991 |     file->mtime_before_update = file->last_mtime;[0m
      | [0;1;32m                                                 
[0m[1msrc/remake.c:1003:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1003 |           for (i = file->cmds->ncommand_lines; i > 0; --i)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1004 |             if (NONE_SET (file->cmds->lines_flags[i-1], COMMANDS_RECURSE))[0m
 1005 |               break;[0m
      | [0;1;32m                    
[0m[1msrc/remake.c:1004:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1004 |             if (NONE_SET (file->cmds->lines_flags[i-1], COMMANDS_RECURSE))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1005 |               break;[0m
      | [0;1;32m                    
[0m[1msrc/remake.c:1010:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1010 |       else if (file->is_target && file->cmds == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1011 |         i = 1;[0m
      | [0;1;32m              
[0m[1msrc/remake.c:1034:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1034 |       for (f = file->double_colon; f != 0 && f->updated; f = f->prev)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1035 |         if (max_mtime != UNKNOWN_MTIME[0m
 1036 |             && (f->last_mtime == UNKNOWN_MTIME || f->last_mtime > max_mtime))[0m
 1037 |           max_mtime = f->last_mtime;[0m
      | [0;1;32m                                    
[0m[1msrc/remake.c:1036:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1036 |             && (f->last_mtime == UNKNOWN_MTIME || f->last_mtime > max_mtime))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1037 |           max_mtime = f->last_mtime;[0m
      | [0;1;32m                                    
[0m[1msrc/remake.c:1039:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1039 |       if (f == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1040 |         for (f = file->double_colon; f != 0; f = f->prev)[0m
 1041 |           f->last_mtime = max_mtime;[0m
      | [0;1;32m                                    
[0m[1msrc/remake.c:1040:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |         for (f = file->double_colon; f != 0; f = f->prev)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1041 |           f->last_mtime = max_mtime;[0m
      | [0;1;32m                                    
[0m[1msrc/remake.c:1056:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |           if (ran && !d->file->phony)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1057 |             /* Fetch the new modification time.[0m
 1058 |                We do this instead of just invalidating the cached time[0m
 1059 |                so that a vpath_search can happen.  Otherwise, it would[0m
 1060 |                never be done because the target is already updated.  */[0m
 1061 |             f_mtime (d->file, 0);[0m
      | [0;1;32m                                 
[0m[1msrc/remake.c:1066:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |       if (file->tried_implicit && file->also_make)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1067 |         check_also_make (file);[0m
      | [0;1;32m                               
[0m[1msrc/remake.c:1069:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1069 |   else if (file->update_status == us_none)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1070 |     /* Nothing was done for FILE, but it needed nothing done.[0m
 1071 |        So mark it now as "succeeded".  */[0m
 1072 |     file->update_status = us_success;[0m
      | [0;1;32m                                     
[0m[1msrc/remake.c:1104:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1104 |       if (mtime == NONEXISTENT_MTIME || mtime > this_mtime)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1105 |         *must_make_ptr = 1;[0m
      | [0;1;32m                           
[0m[1msrc/remake.c:1127:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1127 |       if (mtime != NONEXISTENT_MTIME && mtime > this_mtime)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1128 |         /* If the intermediate file actually exists and is newer, then we[0m
 1129 |            should remake from it.  */[0m
 1130 |         *must_make_ptr = 1;[0m
 1131 |       else[0m
      | [0;32m      } 
[0m[1msrc/remake.c:1146:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1146 |               if (file->command_state == cs_deps_running)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1147 |                 file->considered = 0;[0m
      | [0;1;32m                                     
[0m[1msrc/remake.c:1156:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1156 |           if (second_expansion)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1157 |             expand_deps (file);[0m
      | [0;1;32m                               
[0m[1msrc/remake.c:1187:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1187 |               if (new > dep_status)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1188 |                 dep_status = new;[0m
      | [0;1;32m                                 
[0m[1msrc/remake.c:1190:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1190 |               if (! d->ignore_mtime)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1191 |                 *must_make_ptr = maybe_make;[0m
      | [0;1;32m                                            
[0m[1msrc/remake.c:1193:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1193 |               if (dep_status && !keep_going_flag)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1194 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/remake.c:1197:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1197 |                   || d->file->command_state == cs_deps_running)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1198 |                 deps_running = 1;[0m
      | [0;1;32m                                 
[0m[1msrc/remake.c:1204:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1204 |           if (deps_running)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1205 |             /* Record that some of FILE's deps are still being made.[0m
 1206 |                This tells the upper levels to wait on processing it until the[0m
 1207 |                commands are finished.  */[0m
 1208 |             set_command_state (file, cs_deps_running);[0m
      | [0;1;32m                                                      
[0m[1msrc/remake.c:1226:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1226 |   if (!run_silent)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1227 |     OS (message, 0, "touch %s", file->name);[0m
      | [0;1;32m                                            
[0m[1msrc/remake.c:1230:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1230 |   if (just_print_flag)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1231 |     return us_success;[0m
      | [0;1;32m                      
[0m[1msrc/remake.c:1234:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1234 |   if (ar_name (file->name))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1235 |     return ar_touch (file->name) ? us_failed : us_success;[0m
 1236 |   else[0m
      | [0;32m  } 
[0m[1msrc/remake.c:1242:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1242 |       if (fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1243 |         TOUCH_ERROR ("touch: open: ");[0m
 1244 |       else[0m
      | [0;32m      } 
[0m[1msrc/remake.c:1251:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1251 |           if (e < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1252 |             TOUCH_ERROR ("touch: fstat: ");[0m
      | [0;1;32m                                           
[0m[1msrc/remake.c:1255:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1255 |           if (e < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1256 |             TOUCH_ERROR ("touch: read: ");[0m
      | [0;1;32m                                          
[0m[1msrc/remake.c:1260:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1260 |             if (o < 0L)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1261 |               TOUCH_ERROR ("touch: lseek: ");[0m
      | [0;1;32m                                             
[0m[1msrc/remake.c:1264:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1264 |           if (e < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1265 |             TOUCH_ERROR ("touch: write: ");[0m
      | [0;1;32m                                           
[0m[1msrc/remake.c:1272:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1272 |               if (fd < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1273 |                 TOUCH_ERROR ("touch: open: ");[0m
      | [0;1;32m                                              
[0m[1msrc/remake.c:1291:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1291 |       if (file->phony)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1292 |         /* Phony target.  Pretend it succeeded.  */[0m
 1293 |         file->update_status = us_success;[0m
 1294 |       else if (file->is_target)[0m
      | [0;32m      } 
[0m[1msrc/remake.c:1294:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1294 |       else if (file->is_target)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1295 |         /* This is a nonexistent target file we cannot make.[0m
 1296 |            Pretend it was successfully remade.  */[0m
 1297 |         file->update_status = us_success;[0m
 1298 |       else[0m
      | [0;32m      } 
[0m[1msrc/remake.c:1301:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1301 |           if (!rebuilding_makefiles || !file->dontcare)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1302 |             complain (file);[0m
      | [0;1;32m                            
[0m[1msrc/remake.c:1359:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1359 |       if (arfile == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1360 |         arfile = enter_file (strcache_add (arname));[0m
      | [0;1;32m                                                    
[0m[1msrc/remake.c:1375:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1375 |           memcpy (name, arfile->hname, arlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/remake.c:1375:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1375 |           memcpy (name, arfile->hname, arlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/remake.c:1377:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1377 |           memcpy (name + arlen + 1, memname, memlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/remake.c:1377:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1377 |           memcpy (name + arlen + 1, memname, memlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/remake.c:1383:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1383 |           if (arfile->name == arfile->hname)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1384 |             rename_file (file, strcache_add (name));[0m
 1385 |           else[0m
      | [0;32m          } 
[0m[1msrc/remake.c:1385:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1385 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1386 |             rehash_file (file, strcache_add (name));[0m
      | [0;1;32m                                                    
[0m[1msrc/remake.c:1394:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1394 |       if (mtime == NONEXISTENT_MTIME)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1395 |         /* The archive doesn't exist, so its members don't exist either.  */[0m
 1396 |         return NONEXISTENT_MTIME;[0m
      | [0;1;32m                                 
[0m[1msrc/remake.c:1402:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1402 |               && (time_t) FILE_TIMESTAMP_S (memmtime) > member_date))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1403 |         /* If the member file exists and is newer than the member in the[0m
 1404 |            archive, pretend it's nonexistent.  This means the member file was[0m
 1405 |            updated but not added to the archive yet.  */[0m
 1406 |         mtime = NONEXISTENT_MTIME;[0m
 1407 |       else[0m
      | [0;32m      } 
[0m[1msrc/remake.c:1407:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1407 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1408 |         mtime = file_timestamp_cons (file->hname, member_date, 0);[0m
      | [0;1;32m                                                                  
[0m[1msrc/remake.c:1426:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1426 |               if (mtime != UNKNOWN_MTIME)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1427 |                 /* vpath_search and library_search store UNKNOWN_MTIME[0m
 1428 |                    if they didn't need to do a stat call for their work.  */[0m
 1429 |                 file->last_mtime = mtime;[0m
      | [0;1;32m                                         
[0m[1msrc/remake.c:1452:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1452 |               if (mtime != OLD_MTIME && mtime != NEW_MTIME)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1453 |                 mtime = name_mtime (name);[0m
      | [0;1;32m                                          
[0m[1msrc/remake.c:1498:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1498 |               if (from_now >= 100.0 && from_now < (double) ULONG_MAX)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1499 |                 sprintf (from_now_string, "%lu", (unsigned long) from_now);[0m
 1500 |               else[0m
      | [0;32m              } 
[0m[1msrc/remake.c:1499:17: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1499 |                 sprintf (from_now_string, "%lu", (unsigned long) from_now);[0m
      | [0;1;32m                ^~~~~~~
[0m[1msrc/remake.c:1499:17: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1499 |                 sprintf (from_now_string, "%lu", (unsigned long) from_now);[0m
      | [0;1;32m                ^~~~~~~
[0m[1msrc/remake.c:1500:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1500 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1501 |                 sprintf (from_now_string, "%.2g", from_now);[0m
      | [0;1;32m                                                            
[0m[1msrc/remake.c:1501:17: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1501 |                 sprintf (from_now_string, "%.2g", from_now);[0m
      | [0;1;32m                ^~~~~~~
[0m[1msrc/remake.c:1501:17: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1501 |                 sprintf (from_now_string, "%.2g", from_now);[0m
      | [0;1;32m                ^~~~~~~
[0m[1msrc/remake.c:1513:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1513 |   if (file->double_colon)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1514 |     file = file->double_colon;[0m
      | [0;1;32m                              
[0m[1msrc/remake.c:1525:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1525 |           && !file->tried_implicit && file->intermediate)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1526 |         file->intermediate = 0;[0m
      | [0;1;32m                               
[0m[1msrc/remake.c:1528:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1528 |       if (file->updated == propagate_timestamp)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1529 |         file->last_mtime = mtime;[0m
      | [0;1;32m                                 
[0m[1msrc/remake.c:1600:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1600 |   if (e == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1601 |     mtime = FILE_TIMESTAMP_STAT_MODTIME (name, st);[0m
 1602 |   else if (errno == ENOENT || errno == ENOTDIR)[0m
      | [0;32m  } 
[0m[1msrc/remake.c:1602:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1602 |   else if (errno == ENOENT || errno == ENOTDIR)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1603 |     mtime = NONEXISTENT_MTIME;[0m
 1604 |   else[0m
      | [0;32m  } 
[0m[1msrc/remake.c:1627:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1627 |       strcpy (lpath, name);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/remake.c:1627:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1627 |       strcpy (lpath, name);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/remake.c:1639:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1639 |               if (errno != ENOENT && errno != ENOTDIR)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1640 |                 perror_with_name ("lstat: ", lpath);[0m
      | [0;1;32m                                                    
[0m[1msrc/remake.c:1646:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1646 |           if (!S_ISLNK (st.st_mode))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1647 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/remake.c:1651:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1651 |           if (ltime > mtime)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1652 |             mtime = ltime;[0m
      | [0;1;32m                          
[0m[1msrc/remake.c:1667:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1667 |           if (lbuf[0] == '/' || (p = strrchr (lpath, '/')) == NULL)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1668 |             strcpy (lpath, lbuf);[0m
 1669 |           else if ((p - lpath) + llen + 2 > GET_PATH_MAX)[0m
      | [0;32m          } 
[0m[1msrc/remake.c:1668:13: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1668 |             strcpy (lpath, lbuf);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/remake.c:1668:13: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1668 |             strcpy (lpath, lbuf);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/remake.c:1669:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1669 |           else if ((p - lpath) + llen + 2 > GET_PATH_MAX)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1670 |             /* Eh?  Path too long!  Again, just go with what we have.  */[0m
 1671 |             break;[0m
 1672 |           else[0m
      | [0;32m          } 
[0m[1msrc/remake.c:1672:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1672 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1673 |             /* Create the next step in the symlink chain.  */[0m
 1674 |             strcpy (p+1, lbuf);[0m
      | [0;1;32m                               
[0m[1msrc/remake.c:1674:13: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1674 |             strcpy (p+1, lbuf);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/remake.c:1674:13: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1674 |             strcpy (p+1, lbuf);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/remake.c:1757:9: [0m[0;1;35mwarning: [0m[1mValue stored to 'p4' is never read [clang-analyzer-deadcode.DeadStores][0m
 1757 |         p4 = variable_buffer_output (p4, p3+1, len - (p3-p));[0m
      | [0;1;32m        ^    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/remake.c:1757:9: [0m[0;1;36mnote: [0mValue stored to 'p4' is never read[0m
 1757 |         p4 = variable_buffer_output (p4, p3+1, len - (p3-p));[0m
      | [0;1;32m        ^    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/remake.c:1767:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1767 |           if (mtime_ptr != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1768 |             *mtime_ptr = mtime;[0m
      | [0;1;32m                               
[0m[1msrc/remake.c:1791:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1791 |                 if (mtime_ptr != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1792 |                   *mtime_ptr = mtime;[0m
      | [0;1;32m                                     
[0m[1msrc/remake.c:1804:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1804 |               if (l > libdir_maxlen)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1805 |                 libdir_maxlen = l;[0m
      | [0;1;32m                                  
[0m[1msrc/remake.c:1824:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1824 |             sprintf (buf, "%s/%s", *dp, libbuf);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/remake.c:1824:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1824 |             sprintf (buf, "%s/%s", *dp, libbuf);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/remake.c:1833:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1833 |                     if (mtime_ptr != 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1834 |                       *mtime_ptr = mtime;[0m
      | [0;1;32m                                         
[0m128 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[26/32][185.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp_qraj5mp.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/main.c
[1msrc/main.c:633:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  633 |   if (sigaction (sig, &act, &oact) != 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  634 |     return SIG_ERR;[0m
      | [0;1;32m                   
[0m[1msrc/main.c:689:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |       if (isspace (i) && NONE_SET (stopchar_map[i], MAP_BLANK))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  690 |         /* Don't mark blank characters as newline characters.  */[0m
  691 |         stopchar_map[i] |= MAP_NEWLINE;[0m
  692 |       else if (isalnum (i))[0m
      | [0;32m      } 
[0m[1msrc/main.c:692:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |       else if (isalnum (i))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  693 |         stopchar_map[i] |= MAP_USERFUNC;[0m
      | [0;1;32m                                        
[0m[1msrc/main.c:735:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |       if (fclose_fail)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  736 |         perror_with_name (_("write error: stdout"), "");[0m
  737 |       else[0m
      | [0;32m      } 
[0m[1msrc/main.c:737:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  737 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  738 |         O (error, NILF, _("write error: stdout"));[0m
      | [0;1;32m                                                  
[0m[1msrc/main.c:749:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |   if (name[0] == '\0')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  750 |     O (fatal, NILF, _("empty string invalid as file name"));[0m
      | [0;1;32m                                                            
[0m[1msrc/main.c:755:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |       if (expanded && expanded[0] != '\0')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  756 |         name = expanded;[0m
      | [0;1;32m                        
[0m[1msrc/main.c:765:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |       while (name[0] == '/')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  766 |         /* Skip following slashes: ".//foo" is "foo", not "/foo".  */[0m
  767 |         ++name;[0m
      | [0;1;32m               
[0m[1msrc/main.c:798:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |   if (debug_flag)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  799 |     db_level = DB_ALL;[0m
      | [0;1;32m                      
[0m[1msrc/main.c:801:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  801 |   if (trace_flag)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  802 |     db_level |= DB_PRINT | DB_WHY;[0m
      | [0;1;32m                                  
[0m[1msrc/main.c:804:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  804 |   if (db_flags)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m[1msrc/main.c:814:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  814 |                 db_level |= DB_ALL;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  815 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:817:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  817 |                 db_level |= DB_BASIC;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  818 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:820:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  820 |                 db_level |= DB_BASIC | DB_IMPLICIT;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  821 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:823:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  823 |                 db_level |= DB_JOBS;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  824 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:826:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  826 |                 db_level |= DB_BASIC | DB_MAKEFILES;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  827 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:829:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  829 |                 db_level = 0;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  830 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:832:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  832 |                 db_level |= DB_PRINT;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  833 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:835:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  835 |                 db_level |= DB_BASIC | DB_VERBOSE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  836 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:838:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  838 |                 db_level |= DB_WHY;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  839 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1msrc/main.c:841:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  841 |                 OS (fatal, NILF,[0m
      | [0;1;32m                    ^
[0m      | [0;32m                {
[0m  842 |                     _("unknown debug level specification '%s'"), p);[0m
      | [0;1;32m                                                                   
[0m      | [0;32m                                                                   ;} 
[0m[1msrc/makeint.h:552:31: [0m[0;1;36mnote: [0mexpanded from macro 'OS'[0m
  552 | #define OS(_t,_a,_f,_s)       _t((_a), strlen (_s), (_f), (_s))[0m
      | [0;1;32m                              ^
[0m[1msrc/main.c:845:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  845 |             while (*(++p) != '\0')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  846 |               if (*p == ',' || *p == ' ')[0m
  847 |                 {[0m
  848 |                   ++p;[0m
  849 |                   break;[0m
  850 |                 }[0m
      | [0;1;32m                 
[0m[1msrc/main.c:852:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |             if (*p == '\0')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  853 |               break;[0m
      | [0;1;32m                    
[0m[1msrc/main.c:857:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  857 |   if (db_level)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  858 |     verify_flag = 1;[0m
      | [0;1;32m                    
[0m[1msrc/main.c:860:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  860 |   if (! db_level)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  861 |     debug_flag = 0;[0m
      | [0;1;32m                   
[0m[1msrc/main.c:872:11: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
  872 |       if (streq (output_sync_option, "none"))[0m
      | [0;1;32m          ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/main.c:872:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  872 |       if (streq (output_sync_option, "none"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  873 |         output_sync = OUTPUT_SYNC_NONE;[0m
  874 |       else if (streq (output_sync_option, "line"))[0m
      | [0;32m      } 
[0m[1msrc/main.c:874:16: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
  874 |       else if (streq (output_sync_option, "line"))[0m
      | [0;1;32m               ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/main.c:874:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  874 |       else if (streq (output_sync_option, "line"))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  875 |         output_sync = OUTPUT_SYNC_LINE;[0m
  876 |       else if (streq (output_sync_option, "target"))[0m
      | [0;32m      } 
[0m[1msrc/main.c:876:16: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
  876 |       else if (streq (output_sync_option, "target"))[0m
      | [0;1;32m               ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/main.c:876:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  876 |       else if (streq (output_sync_option, "target"))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  877 |         output_sync = OUTPUT_SYNC_TARGET;[0m
  878 |       else if (streq (output_sync_option, "recurse"))[0m
      | [0;32m      } 
[0m[1msrc/main.c:878:16: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
  878 |       else if (streq (output_sync_option, "recurse"))[0m
      | [0;1;32m               ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/main.c:878:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  878 |       else if (streq (output_sync_option, "recurse"))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  879 |         output_sync = OUTPUT_SYNC_RECURSE;[0m
  880 |       else[0m
      | [0;32m      } 
[0m[1msrc/main.c:880:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  880 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  881 |         OS (fatal, NILF,[0m
  882 |             _("unknown output-sync type '%s'"), output_sync_option);[0m
      | [0;1;32m                                                                    
[0m[1msrc/main.c:885:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  885 |   if (sync_mutex)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  886 |     osync_parse_mutex (sync_mutex);[0m
      | [0;1;32m                                   
[0m[1msrc/main.c:906:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  906 |   fprintf (usageto, _("Usage: %s [options] [target] ...\n"), program);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/main.c:906:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  906 |   fprintf (usageto, _("Usage: %s [options] [target] ...\n"), program);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/main.c:908:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  908 |   for (cpp = usage; *cpp; ++cpp)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  909 |     fputs (_(*cpp), usageto);[0m
      | [0;1;32m                             
[0m[1msrc/main.c:911:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |   if (!remote_description || *remote_description == '\0')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  912 |     fprintf (usageto, _("\nThis program built for %s\n"), make_host);[0m
  913 |   else[0m
      | [0;32m  } 
[0m[1msrc/main.c:912:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  912 |     fprintf (usageto, _("\nThis program built for %s\n"), make_host);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/main.c:912:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  912 |     fprintf (usageto, _("\nThis program built for %s\n"), make_host);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/main.c:913:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  913 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  914 |     fprintf (usageto, _("\nThis program built for %s (%s)\n"),[0m
  915 |              make_host, remote_description);[0m
      | [0;1;32m                                            
[0m[1msrc/main.c:914:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  914 |     fprintf (usageto, _("\nThis program built for %s (%s)\n"),[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/main.c:914:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  914 |     fprintf (usageto, _("\nThis program built for %s (%s)\n"),[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/main.c:917:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  917 |   fprintf (usageto, _("Report bugs to <bug-make@gnu.org>\n"));[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/main.c:917:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  917 |   fprintf (usageto, _("Report bugs to <bug-make@gnu.org>\n"));[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/main.c:1158:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1158 |       if (r < 0 && errno != ENOENT && !handling_fatal_signal)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1159 |         perror_with_name (_("unlink (temporary file): "), nm);[0m
      | [0;1;32m                                                              
[0m[1msrc/main.c:1198:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1198 |   if (ANY_SET (check_io_state (), IO_STDOUT_OK))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1199 |     atexit (close_stdout);[0m
      | [0;1;32m                          
[0m[1msrc/main.c:1318:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1318 |   if (argv[0] == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1319 |     argv[0] = (char *)"";[0m
      | [0;1;32m                         
[0m[1msrc/main.c:1320:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1320 |   if (argv[0][0] == '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1321 |     program = "make";[0m
 1322 |   else[0m
      | [0;32m  } 
[0m[1msrc/main.c:1394:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1394 |       if (program == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1395 |         program = argv[0];[0m
 1396 |       else[0m
      | [0;32m      } 
[0m[1msrc/main.c:1396:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1396 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1397 |         ++program;[0m
      | [0;1;32m                  
[0m[1msrc/main.c:1423:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1423 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1424 |     directory_before_chdir = xstrdup (current_directory);[0m
      | [0;1;32m                                                         
[0m[1msrc/main.c:1501:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1501 |         while (! STOP_SET (*ep, MAP_EQUALS|MAP_NUL))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1502 |           ++ep;[0m
      | [0;1;32m               
[0m[1msrc/main.c:1505:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1505 |         if (*ep == '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1506 |           continue;[0m
      | [0;1;32m                   
[0m[1msrc/main.c:1540:13: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1540 |         if (streq (v->name, "SHELL"))[0m
      | [0;1;32m            ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/main.c:1615:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'syncing' is never read [clang-analyzer-deadcode.DeadStores][0m
 1615 |   syncing = make_sync.syncout = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1616 |                                  || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1615:3: [0m[0;1;36mnote: [0mValue stored to 'syncing' is never read[0m
 1615 |   syncing = make_sync.syncout = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1616 |                                  || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1627:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1627 |     if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1628 |       arg_job_slots = env_slots;[0m
      | [0;1;32m                                
[0m[1msrc/main.c:1631:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1631 |   if (print_usage_flag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1632 |     print_usage (0);[0m
      | [0;1;32m                    
[0m[1msrc/main.c:1658:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1658 |       if (effective_mode)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1659 |         shuffle_mode = xstrdup (effective_mode);[0m
 1660 |       else[0m
      | [0;32m      } 
[0m[1msrc/main.c:1660:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1660 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1661 |         shuffle_mode = NULL;[0m
      | [0;1;32m                            
[0m[1msrc/main.c:1666:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1666 |   if (isatty (fileno (stdout)))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1667 |     if (! lookup_variable (STRING_SIZE_TUPLE ("MAKE_TERMOUT")))[0m
 1668 |       {[0m
 1669 |         const char *tty = TTYNAME (fileno (stdout));[0m
 1670 |         define_variable_cname ("MAKE_TERMOUT", tty ? tty : DEFAULT_TTYNAME,[0m
 1671 |                                o_default, 0)->export = v_export;[0m
 1672 |       }[0m
      | [0;1;32m       
[0m[1msrc/main.c:1673:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1673 |   if (isatty (fileno (stderr)))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1674 |     if (! lookup_variable (STRING_SIZE_TUPLE ("MAKE_TERMERR")))[0m
 1675 |       {[0m
 1676 |         const char *tty = TTYNAME (fileno (stderr));[0m
 1677 |         define_variable_cname ("MAKE_TERMERR", tty ? tty : DEFAULT_TTYNAME,[0m
 1678 |                                o_default, 0)->export = v_export;[0m
 1679 |       }[0m
      | [0;1;32m       
[0m[1msrc/main.c:1686:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1686 |   if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1687 |     output_close (&make_sync);[0m
      | [0;1;32m                              
[0m[1msrc/main.c:1695:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1695 |     if (v && v->value[0] != '\0' && v->value[0] != '-')[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1696 |       makelevel = make_toui (v->value, NULL);[0m
 1697 |     else[0m
      | [0;32m    } 
[0m[1msrc/main.c:1697:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1697 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1698 |       makelevel = 0;[0m
      | [0;1;32m                    
[0m[1msrc/main.c:1705:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1705 |   if (no_builtin_variables_flag)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1706 |     no_builtin_rules_flag = 1;[0m
      | [0;1;32m                              
[0m[1msrc/main.c:1789:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1789 |           if (chdir (dir) < 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1790 |             pfatal_with_name (dir);[0m
      | [0;1;32m                                   
[0m[1msrc/main.c:1823:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1823 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1824 |         starting_directory = current_directory;[0m
      | [0;1;32m                                               
[0m[1msrc/main.c:1844:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1844 |           if (jobserver_parse_auth (jobserver_auth))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1845 |             /* Success!  Use the jobserver.  */[0m
 1846 |             goto job_setup_complete;[0m
      | [0;1;32m                                    
[0m[1msrc/main.c:1855:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1855 |       else if (!restarts)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1856 |         ON (error, NILF,[0m
 1857 |             _("warning: -j%d forced in submake: resetting jobserver mode."),[0m
 1858 |             argv_slots);[0m
      | [0;1;32m                        
[0m[1msrc/main.c:1892:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1892 |           if (! v->recursive)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1893 |             ++len;[0m
      | [0;1;32m                  
[0m[1msrc/main.c:1905:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1905 |           if (! v->recursive)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1906 |             *p++ = ':';[0m
      | [0;1;32m                       
[0m[1msrc/main.c:1935:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1935 |       for (i = 0; i < makefiles->idx; ++i)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m[1msrc/main.c:1944:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1944 |             if (stdin_offset >= 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1945 |               O (fatal, NILF,[0m
 1946 |                  _("Makefile from standard input specified twice"));[0m
      | [0;1;32m                                                                    
[0m[1msrc/main.c:1949:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1949 |             if (!outfile)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1950 |               O (fatal, NILF,[0m
 1951 |                  _("cannot store makefile from stdin to a temporary file"));[0m
      | [0;1;32m                                                                            
[0m[1msrc/main.c:1957:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1957 |                 if (n > 0 && fwrite (buf, 1, n, outfile) != n)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1958 |                   OSS (fatal, NILF,[0m
 1959 |                        _("fwrite: temporary file %s: %s"), newnm, strerror (errno));[0m
      | [0;1;32m                                                                                    
[0m[1msrc/main.c:1975:36: [0m[0;1;35mwarning: [0m[1mAccess to field 'list' results in a dereference of a null pointer (loaded from variable 'makefiles') [clang-analyzer-core.NullDereference][0m
 1975 |       struct file *f = enter_file (makefiles->list[stdin_offset]);[0m
      | [0;1;32m                                   ^~~~~~~~~
[0m[1msrc/main.c:1198:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1198 |   if (ANY_SET (check_io_state (), IO_STDOUT_OK))[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:405:26: [0m[0;1;36mnote: [0mexpanded from macro 'ANY_SET'[0m
  405 | #define ANY_SET(_v,_m)  (((_v)&(_m)) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1198 |   if (ANY_SET (check_io_state (), IO_STDOUT_OK))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1270:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1270 |   FATAL_SIG (SIGHUP);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1273:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |   FATAL_SIG (SIGQUIT);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1276:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1276 |   FATAL_SIG (SIGPIPE);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1278:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1278 |   FATAL_SIG (SIGINT);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1279:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1279 |   FATAL_SIG (SIGTERM);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1292:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1292 |   FATAL_SIG (SIGXCPU);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1295 |   FATAL_SIG (SIGXFSZ);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1318:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1318 |   if (argv[0] == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:1318:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1318 |   if (argv[0] == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1320:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1320 |   if (argv[0][0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1320:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1320 |   if (argv[0][0] == '\0')[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1394:11: [0m[0;1;36mnote: [0mAssuming 'program' is not equal to null[0m
 1394 |       if (program == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1msrc/main.c:1394:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1394 |       if (program == 0)[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:1412:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1412 |   if (getcwd (current_directory, GET_PATH_MAX) == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1493:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1493 |     for (i = 0; envp[i] != 0; ++i)[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1msrc/main.c:1493:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1592[0m
 1493 |     for (i = 0; envp[i] != 0; ++i)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:1592:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1592 |   if (lookup_variable (STRING_SIZE_TUPLE (GNUMAKEFLAGS_NAME)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1592:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1592 |   if (lookup_variable (STRING_SIZE_TUPLE (GNUMAKEFLAGS_NAME)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1615:34: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_LINE[0m
 1615 |   syncing = make_sync.syncout = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1615:34: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/main.c:1616:37: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_TARGET[0m
 1616 |                                  || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:58: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                         ^
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:50: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                 ^
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/main.c:1627:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1627 |     if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1627:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1627 |     if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:1631:7: [0m[0;1;36mnote: [0mAssuming 'print_usage_flag' is 0[0m
 1631 |   if (print_usage_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1631:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1631 |   if (print_usage_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1635:7: [0m[0;1;36mnote: [0mAssuming 'print_version_flag' is 0[0m
 1635 |   if (print_version_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1635:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1635 |   if (print_version_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1649:7: [0m[0;1;36mnote: [0mAssuming 'shuffle_mode' is null[0m
 1649 |   if (shuffle_mode)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:1649:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1649 |   if (shuffle_mode)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1666:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1666 |   if (isatty (fileno (stdout)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1666:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1666 |   if (isatty (fileno (stdout)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1673:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1673 |   if (isatty (fileno (stderr)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1673:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1673 |   if (isatty (fileno (stderr)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1683:14: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_LINE[0m
 1683 |   syncing = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1683:14: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/main.c:1684:17: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_TARGET[0m
 1684 |              || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1686:7: [0m[0;1;36mnote: [0mAssuming field 'syncout' is 0[0m
 1686 |   if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1686:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1686 |   if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m                        ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:58: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                         ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:50: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                 ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/main.c:1695:9: [0m[0;1;36mnote: [0mAssuming 'v' is null[0m
 1695 |     if (v && v->value[0] != '\0' && v->value[0] != '-')[0m
      | [0;1;32m        ^
[0m[1msrc/main.c:1695:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1695 |     if (v && v->value[0] != '\0' && v->value[0] != '-')[0m
      | [0;1;32m          ^
[0m[1msrc/main.c:1702:22: [0m[0;1;36mnote: [0mAssuming 'always_make_set' is 0[0m
 1702 |   always_make_flag = always_make_set && (restarts == 0);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~
[0m[1msrc/main.c:1702:38: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1702 |   always_make_flag = always_make_set && (restarts == 0);[0m
      | [0;1;32m                                     ^
[0m[1msrc/main.c:1705:7: [0m[0;1;36mnote: [0mAssuming 'no_builtin_variables_flag' is 0[0m
 1705 |   if (no_builtin_variables_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1705:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1705 |   if (no_builtin_variables_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1708:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1708 |   if (ISDB (DB_BASIC))[0m
      | [0;1;32m      ^
[0m[1msrc/debug.h:30:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISDB'[0m
   30 | #define ISDB(_l)    ((_l)&db_level)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~
[0m[1msrc/main.c:1708:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1708 |   if (ISDB (DB_BASIC))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1758:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1758 |       && argv[0] != 0 && argv[0][0] != '/' && strchr (argv[0], '/') != 0[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:1773:7: [0m[0;1;36mnote: [0mAssuming 'directories' is equal to null[0m
 1773 |   if (directories != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1773:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1773 |   if (directories != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1808:7: [0m[0;1;36mnote: [0m'directories' is null[0m
 1808 |   if (directories)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1msrc/main.c:1808:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1808 |   if (directories)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1831:27: [0m[0;1;36mnote: [0mAssuming 'include_dirs' is null[0m
 1831 |   construct_include_path (include_dirs ? include_dirs->list : NULL);[0m
      | [0;1;32m                          ^~~~~~~~~~~~
[0m[1msrc/main.c:1831:27: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msrc/main.c:1838:7: [0m[0;1;36mnote: [0mAssuming 'jobserver_auth' is null[0m
 1838 |   if (jobserver_auth)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:1838:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1838 |   if (jobserver_auth)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1877:3: [0m[0;1;36mnote: [0mValue assigned to 'makefiles'[0m
 1877 |   define_variable_cname ("MAKE", "$(MAKE_COMMAND)", o_default, 1);[0m
      | [0;1;32m  ^
[0m[1msrc/variable.h:207:11: [0m[0;1;36mnote: [0mexpanded from macro 'define_variable_cname'[0m
  207 |           define_variable_in_set((n),(sizeof (n) - 1),(v),(o),(r),\[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  208 |                                  current_variable_set_list->set,NILF)[0m
      | [0;1;32m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1879:7: [0m[0;1;36mnote: [0mAssuming 'command_variables' is equal to null[0m
 1879 |   if (command_variables != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1879:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1879 |   if (command_variables != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1932:7: [0m[0;1;36mnote: [0mAssuming 'makefiles' is equal to null[0m
 1932 |   if (makefiles != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:1932:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1932 |   if (makefiles != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1973:7: [0m[0;1;36mnote: [0mAssuming 'stdin_offset' is >= 0[0m
 1973 |   if (stdin_offset >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1973:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1973 |   if (stdin_offset >= 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1975:36: [0m[0;1;36mnote: [0mAccess to field 'list' results in a dereference of a null pointer (loaded from variable 'makefiles')[0m
 1975 |       struct file *f = enter_file (makefiles->list[stdin_offset]);[0m
      | [0;1;32m                                   ^~~~~~~~~
[0m[1msrc/main.c:2015:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2015 |     if (sigprocmask (SIG_SETMASK, &block, NULL) < 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2016 |       pfatal_with_name ("sigprocmask(SIG_SETMASK, SIGCHLD)");[0m
      | [0;1;32m                                                             
[0m[1msrc/main.c:2070:7: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the memory returned by 'alloca' [clang-analyzer-security.ArrayBound][0m
 2070 |       *endp = '\0';[0m
      | [0;1;32m      ^~~~~
[0m[1msrc/main.c:1198:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1198 |   if (ANY_SET (check_io_state (), IO_STDOUT_OK))[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:405:26: [0m[0;1;36mnote: [0mexpanded from macro 'ANY_SET'[0m
  405 | #define ANY_SET(_v,_m)  (((_v)&(_m)) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1198 |   if (ANY_SET (check_io_state (), IO_STDOUT_OK))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1270:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1270 |   FATAL_SIG (SIGHUP);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1273:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |   FATAL_SIG (SIGQUIT);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1276:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1276 |   FATAL_SIG (SIGPIPE);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1278:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1278 |   FATAL_SIG (SIGINT);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1279:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1279 |   FATAL_SIG (SIGTERM);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1292:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1292 |   FATAL_SIG (SIGXCPU);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1295 |   FATAL_SIG (SIGXFSZ);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1318:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1318 |   if (argv[0] == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:1318:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1318 |   if (argv[0] == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1320:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1320 |   if (argv[0][0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1320:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1320 |   if (argv[0][0] == '\0')[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1394:11: [0m[0;1;36mnote: [0mAssuming 'program' is not equal to null[0m
 1394 |       if (program == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1msrc/main.c:1394:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1394 |       if (program == 0)[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:1412:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1412 |   if (getcwd (current_directory, GET_PATH_MAX) == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1493:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1493 |     for (i = 0; envp[i] != 0; ++i)[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1msrc/main.c:1493:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1592[0m
 1493 |     for (i = 0; envp[i] != 0; ++i)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:1592:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1592 |   if (lookup_variable (STRING_SIZE_TUPLE (GNUMAKEFLAGS_NAME)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1592:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1592 |   if (lookup_variable (STRING_SIZE_TUPLE (GNUMAKEFLAGS_NAME)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1615:34: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_LINE[0m
 1615 |   syncing = make_sync.syncout = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1615:34: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/main.c:1616:37: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_TARGET[0m
 1616 |                                  || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:58: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                         ^
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:50: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                 ^
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/main.c:1627:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1627 |     if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1627:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1627 |     if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:1631:7: [0m[0;1;36mnote: [0mAssuming 'print_usage_flag' is 0[0m
 1631 |   if (print_usage_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1631:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1631 |   if (print_usage_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1635:7: [0m[0;1;36mnote: [0mAssuming 'print_version_flag' is 0[0m
 1635 |   if (print_version_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1635:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1635 |   if (print_version_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1649:7: [0m[0;1;36mnote: [0mAssuming 'shuffle_mode' is null[0m
 1649 |   if (shuffle_mode)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:1649:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1649 |   if (shuffle_mode)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1666:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1666 |   if (isatty (fileno (stdout)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1666:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1666 |   if (isatty (fileno (stdout)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1673:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1673 |   if (isatty (fileno (stderr)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1673:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1673 |   if (isatty (fileno (stderr)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1683:14: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_LINE[0m
 1683 |   syncing = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1683:14: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/main.c:1684:17: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_TARGET[0m
 1684 |              || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1686:7: [0m[0;1;36mnote: [0mAssuming field 'syncout' is 0[0m
 1686 |   if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1686:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1686 |   if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m                        ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:58: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                         ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:50: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                 ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/main.c:1695:9: [0m[0;1;36mnote: [0mAssuming 'v' is null[0m
 1695 |     if (v && v->value[0] != '\0' && v->value[0] != '-')[0m
      | [0;1;32m        ^
[0m[1msrc/main.c:1695:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1695 |     if (v && v->value[0] != '\0' && v->value[0] != '-')[0m
      | [0;1;32m          ^
[0m[1msrc/main.c:1702:22: [0m[0;1;36mnote: [0mAssuming 'always_make_set' is 0[0m
 1702 |   always_make_flag = always_make_set && (restarts == 0);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~
[0m[1msrc/main.c:1702:38: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1702 |   always_make_flag = always_make_set && (restarts == 0);[0m
      | [0;1;32m                                     ^
[0m[1msrc/main.c:1705:7: [0m[0;1;36mnote: [0mAssuming 'no_builtin_variables_flag' is 0[0m
 1705 |   if (no_builtin_variables_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1705:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1705 |   if (no_builtin_variables_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1708:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1708 |   if (ISDB (DB_BASIC))[0m
      | [0;1;32m      ^
[0m[1msrc/debug.h:30:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISDB'[0m
   30 | #define ISDB(_l)    ((_l)&db_level)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~
[0m[1msrc/main.c:1708:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1708 |   if (ISDB (DB_BASIC))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1758:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1758 |       && argv[0] != 0 && argv[0][0] != '/' && strchr (argv[0], '/') != 0[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:1773:7: [0m[0;1;36mnote: [0mAssuming 'directories' is equal to null[0m
 1773 |   if (directories != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1773:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1773 |   if (directories != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1808:7: [0m[0;1;36mnote: [0m'directories' is null[0m
 1808 |   if (directories)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1msrc/main.c:1808:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1808 |   if (directories)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1831:27: [0m[0;1;36mnote: [0mAssuming 'include_dirs' is null[0m
 1831 |   construct_include_path (include_dirs ? include_dirs->list : NULL);[0m
      | [0;1;32m                          ^~~~~~~~~~~~
[0m[1msrc/main.c:1831:27: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msrc/main.c:1838:7: [0m[0;1;36mnote: [0mAssuming 'jobserver_auth' is null[0m
 1838 |   if (jobserver_auth)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:1838:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1838 |   if (jobserver_auth)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1879:7: [0m[0;1;36mnote: [0mAssuming 'command_variables' is equal to null[0m
 1879 |   if (command_variables != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1879:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1879 |   if (command_variables != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1932:7: [0m[0;1;36mnote: [0mAssuming 'makefiles' is equal to null[0m
 1932 |   if (makefiles != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:1932:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1932 |   if (makefiles != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1973:7: [0m[0;1;36mnote: [0mAssuming 'stdin_offset' is < 0[0m
 1973 |   if (stdin_offset >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1973:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1973 |   if (stdin_offset >= 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2015:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2015 |     if (sigprocmask (SIG_SETMASK, &block, NULL) < 0)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2015:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 2015 |     if (sigprocmask (SIG_SETMASK, &block, NULL) < 0)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:2048:7: [0m[0;1;36mnote: [0mAssuming 'eval_strings' is non-null[0m
 2048 |   if (eval_strings)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:2048:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2048 |   if (eval_strings)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2054:19: [0m[0;1;36mnote: [0mAssuming 'i' is >= field 'idx'[0m
 2054 |       for (i = 0; i < eval_strings->idx; ++i)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2054:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2062[0m
 2054 |       for (i = 0; i < eval_strings->idx; ++i)[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:2063:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2070[0m
 2063 |       for (i = 0; i < eval_strings->idx; ++i)[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:2070:7: [0m[0;1;36mnote: [0mAccess of 'char' element in the memory returned by 'alloca' at index 0[0m
 2070 |       *endp = '\0';[0m
      | [0;1;32m      ^~~~~
[0m[1msrc/main.c:2098:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2098 |     if (arg_job_slots == INVALID_JOB_SLOTS || argv_slots != INVALID_JOB_SLOTS)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2099 |       arg_job_slots = old_arg_job_slots;[0m
 2100 | [0m
 2101 |     else if (jobserver_auth && arg_job_slots != old_arg_job_slots)[0m
      | [0;32m    } 
[0m[1msrc/main.c:2105:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2105 |         if (!restarts)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2106 |           ON (error, NILF,[0m
 2107 |               _("warning: -j%d forced in makefile: resetting jobserver mode."),[0m
 2108 |               arg_job_slots);[0m
      | [0;1;32m                             
[0m[1msrc/main.c:2118:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2118 |     if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2119 |       output_close (&make_sync);[0m
      | [0;1;32m                                
[0m[1msrc/main.c:2125:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2125 |     if (no_builtin_variables_flag)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2126 |       no_builtin_rules_flag = 1;[0m
      | [0;1;32m                                
[0m[1msrc/main.c:2140:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2140 |     if (no_builtin_variables_flag && ! old_builtin_variables_flag)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 2141 |       undefine_default_variables ();[0m
      | [0;1;32m                                    
[0m[1msrc/main.c:2188:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2188 |   if (jobserver_auth)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2189 |     job_slots = 0;[0m
 2190 |   else if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;32m  } 
[0m[1msrc/main.c:2190:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2190 |   else if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2191 |     job_slots = 1;[0m
 2192 |   else[0m
      | [0;32m  } 
[0m[1msrc/main.c:2192:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2192 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2193 |     job_slots = arg_job_slots;[0m
      | [0;1;32m                              
[0m[1msrc/main.c:2255:11: [0m[0;1;35mwarning: [0m[1mValue stored to 'syncing' is never read [clang-analyzer-deadcode.DeadStores][0m
 2255 |           syncing = 0;[0m
      | [0;1;32m          ^         ~
[0m[1msrc/main.c:2255:11: [0m[0;1;36mnote: [0mValue stored to 'syncing' is never read[0m
 2255 |           syncing = 0;[0m
      | [0;1;32m          ^         ~
[0m[1msrc/main.c:2259:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2259 |   if (jobserver_auth)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2260 |     DB (DB_VERBOSE|DB_JOBS, (_("Using jobserver controller %s\n"), jobserver_auth));[0m
      | [0;1;32m                                                                                    
[0m[1msrc/main.c:2261:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2261 |   if (sync_mutex)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2262 |     DB (DB_VERBOSE, (_("Using output-sync mutex %s\n"), sync_mutex));[0m
      | [0;1;32m                                                                     
[0m[1msrc/main.c:2343:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2343 |   if (shuffle_mode)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2344 |     DB (DB_BASIC, (_("Enabled shuffle mode: %s\n"), shuffle_mode));[0m
      | [0;1;32m                                                                   
[0m[1msrc/main.c:2395:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2395 |             if (f->phony)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2396 |               skip = 1;[0m
 2397 |             else[0m
      | [0;32m            } 
[0m[1msrc/main.c:2397:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2397 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2398 |               for (f = f->double_colon; f != NULL; f = f->prev)[0m
 2399 |                 if (f->deps == NULL && f->cmds != NULL)[0m
 2400 |                   {[0m
 2401 |                     skip = 1;[0m
 2402 |                     break;[0m
 2403 |                   }[0m
      | [0;1;32m                   
[0m[1msrc/main.c:2398:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2398 |               for (f = f->double_colon; f != NULL; f = f->prev)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2399 |                 if (f->deps == NULL && f->cmds != NULL)[0m
 2400 |                   {[0m
 2401 |                     skip = 1;[0m
 2402 |                     break;[0m
 2403 |                   }[0m
      | [0;1;32m                   
[0m[1msrc/main.c:2417:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2417 |                 if (last)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2418 |                   last->next = d->next;[0m
 2419 |                 else[0m
      | [0;32m                } 
[0m[1msrc/main.c:2419:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2419 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2420 |                   read_files = d->next;[0m
      | [0;1;32m                                       
[0m[1msrc/main.c:2430:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2430 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2431 |                   free_goaldep (d);[0m
      | [0;1;32m                                   
[0m[1msrc/main.c:2444:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2444 |         if (! ISDB (DB_MAKEFILES))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2445 |           db_level = DB_NONE;[0m
      | [0;1;32m                             
[0m[1msrc/main.c:2468:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2468 |       if (any_failed && status == us_success)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2469 |         status = us_none;[0m
      | [0;1;32m                         
[0m[1msrc/main.c:2478:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2478 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/main.c:2481:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2481 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1msrc/main.c:2487:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2487 |             for (d = read_files; d; d = d->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2488 |               if (d->file->unloaded)[0m
 2489 |                 {[0m
 2490 |                   struct file *f = d->file;[0m
 2491 |                   /* Load the file.  0 means failure.  */[0m
 2492 |                   if (load_file (&d->floc, f, 0) == 0)[0m
 2493 |                     OS (fatal, &d->floc, _("%s: failed to load"), f->name);[0m
 2494 |                   f->unloaded = 0;[0m
 2495 |                   f->loaded = 1;[0m
 2496 |                 }[0m
      | [0;1;32m                 
[0m[1msrc/main.c:2492:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2492 |                   if (load_file (&d->floc, f, 0) == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2493 |                     OS (fatal, &d->floc, _("%s: failed to load"), f->name);[0m
      | [0;1;32m                                                                           
[0m[1msrc/main.c:2511:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2511 |               for (d = read_files; d != 0; d = d->next)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2512 |                 if (d->error && ! (d->flags & RM_DONTCARE))[0m
 2513 |                   {[0m
 2514 |                     /* This makefile couldn't be loaded, and we care.  */[0m
 2515 |                     const char *err = strerror (d->error);[0m
 2516 |                     OSS (error, &d->floc, _("%s: %s"), dep_name (d), err);[0m
 2517 |                     any_failed = 1;[0m
 2518 |                   }[0m
      | [0;1;32m                   
[0m[1msrc/main.c:2535:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2535 |                     if (d->file->update_status == us_success)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2536 |                       /* It was successfully updated.  */[0m
 2537 |                       any_remade |= (file_mtime_no_search (d->file)[0m
 2538 |                                      != makefile_mtimes[i]);[0m
 2539 |                     else if (! (d->flags & RM_DONTCARE))[0m
      | [0;32m                    } 
[0m[1msrc/main.c:2538:41: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the memory returned by 'alloca' [clang-analyzer-security.ArrayBound][0m
 2538 |                                      != makefile_mtimes[i]);[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1198:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1198 |   if (ANY_SET (check_io_state (), IO_STDOUT_OK))[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:405:26: [0m[0;1;36mnote: [0mexpanded from macro 'ANY_SET'[0m
  405 | #define ANY_SET(_v,_m)  (((_v)&(_m)) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1198 |   if (ANY_SET (check_io_state (), IO_STDOUT_OK))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1270:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1270 |   FATAL_SIG (SIGHUP);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1273:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |   FATAL_SIG (SIGQUIT);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1276:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1276 |   FATAL_SIG (SIGPIPE);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1278:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1278 |   FATAL_SIG (SIGINT);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1279:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1279 |   FATAL_SIG (SIGTERM);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1292:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1292 |   FATAL_SIG (SIGXCPU);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1295 |   FATAL_SIG (SIGXFSZ);[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1264:3: [0m[0;1;36mnote: [0mexpanded from macro 'FATAL_SIG'[0m
 1264 |   if (bsd_signal (sig, fatal_error_signal) == SIG_IGN)                        \[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1318:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1318 |   if (argv[0] == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:1318:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1318 |   if (argv[0] == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1320:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1320 |   if (argv[0][0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1320:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1320 |   if (argv[0][0] == '\0')[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1394:11: [0m[0;1;36mnote: [0mAssuming 'program' is not equal to null[0m
 1394 |       if (program == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1msrc/main.c:1394:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1394 |       if (program == 0)[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:1412:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1412 |   if (getcwd (current_directory, GET_PATH_MAX) == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1493:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1493 |     for (i = 0; envp[i] != 0; ++i)[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1msrc/main.c:1493:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1592[0m
 1493 |     for (i = 0; envp[i] != 0; ++i)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:1592:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1592 |   if (lookup_variable (STRING_SIZE_TUPLE (GNUMAKEFLAGS_NAME)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1592:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1592 |   if (lookup_variable (STRING_SIZE_TUPLE (GNUMAKEFLAGS_NAME)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1615:34: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_LINE[0m
 1615 |   syncing = make_sync.syncout = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1615:34: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/main.c:1616:37: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_TARGET[0m
 1616 |                                  || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:58: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                         ^
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:50: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                 ^
[0m[1msrc/main.c:1617:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1617 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/main.c:1627:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1627 |     if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1627:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1627 |     if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:1631:7: [0m[0;1;36mnote: [0mAssuming 'print_usage_flag' is 0[0m
 1631 |   if (print_usage_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1631:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1631 |   if (print_usage_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1635:7: [0m[0;1;36mnote: [0mAssuming 'print_version_flag' is 0[0m
 1635 |   if (print_version_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1635:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1635 |   if (print_version_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1649:7: [0m[0;1;36mnote: [0mAssuming 'shuffle_mode' is null[0m
 1649 |   if (shuffle_mode)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:1649:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1649 |   if (shuffle_mode)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1666:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1666 |   if (isatty (fileno (stdout)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1666:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1666 |   if (isatty (fileno (stdout)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1673:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1673 |   if (isatty (fileno (stderr)))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1673:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1673 |   if (isatty (fileno (stderr)))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1683:14: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_LINE[0m
 1683 |   syncing = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1683:14: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/main.c:1684:17: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_TARGET[0m
 1684 |              || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1686:7: [0m[0;1;36mnote: [0mAssuming field 'syncout' is 0[0m
 1686 |   if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1686:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1686 |   if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m                        ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:58: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                         ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:50: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                 ^
[0m[1msrc/main.c:1690:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1690 |   OUTPUT_SET (&make_sync);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/main.c:1695:9: [0m[0;1;36mnote: [0mAssuming 'v' is null[0m
 1695 |     if (v && v->value[0] != '\0' && v->value[0] != '-')[0m
      | [0;1;32m        ^
[0m[1msrc/main.c:1695:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1695 |     if (v && v->value[0] != '\0' && v->value[0] != '-')[0m
      | [0;1;32m          ^
[0m[1msrc/main.c:1702:22: [0m[0;1;36mnote: [0mAssuming 'always_make_set' is 0[0m
 1702 |   always_make_flag = always_make_set && (restarts == 0);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~
[0m[1msrc/main.c:1702:38: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1702 |   always_make_flag = always_make_set && (restarts == 0);[0m
      | [0;1;32m                                     ^
[0m[1msrc/main.c:1705:7: [0m[0;1;36mnote: [0mAssuming 'no_builtin_variables_flag' is 0[0m
 1705 |   if (no_builtin_variables_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1705:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1705 |   if (no_builtin_variables_flag)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1708:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1708 |   if (ISDB (DB_BASIC))[0m
      | [0;1;32m      ^
[0m[1msrc/debug.h:30:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISDB'[0m
   30 | #define ISDB(_l)    ((_l)&db_level)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~
[0m[1msrc/main.c:1708:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1708 |   if (ISDB (DB_BASIC))[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1758:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1758 |       && argv[0] != 0 && argv[0][0] != '/' && strchr (argv[0], '/') != 0[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:1773:7: [0m[0;1;36mnote: [0mAssuming 'directories' is equal to null[0m
 1773 |   if (directories != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1773:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1773 |   if (directories != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1808:7: [0m[0;1;36mnote: [0m'directories' is null[0m
 1808 |   if (directories)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1msrc/main.c:1808:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1808 |   if (directories)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1831:27: [0m[0;1;36mnote: [0mAssuming 'include_dirs' is null[0m
 1831 |   construct_include_path (include_dirs ? include_dirs->list : NULL);[0m
      | [0;1;32m                          ^~~~~~~~~~~~
[0m[1msrc/main.c:1831:27: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msrc/main.c:1838:7: [0m[0;1;36mnote: [0mAssuming 'jobserver_auth' is null[0m
 1838 |   if (jobserver_auth)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:1838:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1838 |   if (jobserver_auth)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1879:7: [0m[0;1;36mnote: [0mAssuming 'command_variables' is equal to null[0m
 1879 |   if (command_variables != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1879:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1879 |   if (command_variables != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1932:7: [0m[0;1;36mnote: [0mAssuming 'makefiles' is equal to null[0m
 1932 |   if (makefiles != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:1932:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1932 |   if (makefiles != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:1973:7: [0m[0;1;36mnote: [0mAssuming 'stdin_offset' is < 0[0m
 1973 |   if (stdin_offset >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:1973:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1973 |   if (stdin_offset >= 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2015:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2015 |     if (sigprocmask (SIG_SETMASK, &block, NULL) < 0)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2015:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 2015 |     if (sigprocmask (SIG_SETMASK, &block, NULL) < 0)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:2048:7: [0m[0;1;36mnote: [0mAssuming 'eval_strings' is null[0m
 2048 |   if (eval_strings)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:2048:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2048 |   if (eval_strings)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2081:38: [0m[0;1;36mnote: [0mAssuming 'makefiles' is equal to null[0m
 2081 |     read_files = read_all_makefiles (makefiles == 0 ? 0 : makefiles->list);[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~~
[0m[1msrc/main.c:2081:38: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1msrc/main.c:2098:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2098 |     if (arg_job_slots == INVALID_JOB_SLOTS || argv_slots != INVALID_JOB_SLOTS)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2098:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/main.c:2098:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2098 |     if (arg_job_slots == INVALID_JOB_SLOTS || argv_slots != INVALID_JOB_SLOTS)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:2115:16: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_LINE[0m
 2115 |     syncing = (output_sync == OUTPUT_SYNC_LINE[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2115:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/main.c:2116:19: [0m[0;1;36mnote: [0mAssuming 'output_sync' is not equal to OUTPUT_SYNC_TARGET[0m
 2116 |                || output_sync == OUTPUT_SYNC_TARGET);[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2118:9: [0m[0;1;36mnote: [0mAssuming field 'syncout' is 0[0m
 2118 |     if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2118:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2118 |     if (make_sync.syncout && ! syncing)[0m
      | [0;1;32m                          ^
[0m[1msrc/main.c:2122:5: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 2122 |     OUTPUT_SET (&make_sync);[0m
      | [0;1;32m    ^
[0m[1msrc/output.h:31:58: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                         ^
[0m[1msrc/main.c:2122:5: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2122 |     OUTPUT_SET (&make_sync);[0m
      | [0;1;32m    ^
[0m[1msrc/output.h:31:50: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                 ^
[0m[1msrc/main.c:2122:5: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2122 |     OUTPUT_SET (&make_sync);[0m
      | [0;1;32m    ^
[0m[1msrc/output.h:31:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/main.c:2125:9: [0m[0;1;36mnote: [0mAssuming 'no_builtin_variables_flag' is 0[0m
 2125 |     if (no_builtin_variables_flag)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2125:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 2125 |     if (no_builtin_variables_flag)[0m
      | [0;1;32m    ^
[0m[1msrc/main.c:2129:9: [0m[0;1;36mnote: [0mAssuming 'no_builtin_rules_flag' is 0[0m
 2129 |     if (no_builtin_rules_flag && ! old_builtin_rules_flag)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2129:31: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2129 |     if (no_builtin_rules_flag && ! old_builtin_rules_flag)[0m
      | [0;1;32m                              ^
[0m[1msrc/main.c:2140:9: [0m[0;1;36mnote: [0m'no_builtin_variables_flag' is 0[0m
 2140 |     if (no_builtin_variables_flag && ! old_builtin_variables_flag)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2140:35: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2140 |     if (no_builtin_variables_flag && ! old_builtin_variables_flag)[0m
      | [0;1;32m                                  ^
[0m[1msrc/main.c:2188:7: [0m[0;1;36mnote: [0mAssuming 'jobserver_auth' is null[0m
 2188 |   if (jobserver_auth)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:2188:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2188 |   if (jobserver_auth)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2190:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2190 |   else if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2190:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 2190 |   else if (arg_job_slots == INVALID_JOB_SLOTS)[0m
      | [0;1;32m       ^
[0m[1msrc/main.c:2217:7: [0m[0;1;36mnote: [0m'job_slots' is <= 1[0m
 2217 |   if (job_slots > 1 && jobserver_setup (job_slots - 1, jobserver_style))[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1msrc/main.c:2217:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2217 |   if (job_slots > 1 && jobserver_setup (job_slots - 1, jobserver_style))[0m
      | [0;1;32m                    ^
[0m[1msrc/main.c:2233:7: [0m[0;1;36mnote: [0m'syncing' is 0[0m
 2233 |   if (syncing && job_slots == 1)[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/main.c:2233:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2233 |   if (syncing && job_slots == 1)[0m
      | [0;1;32m              ^
[0m[1msrc/main.c:2241:7: [0m[0;1;36mnote: [0m'syncing' is 0[0m
 2241 |   if (syncing)[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/main.c:2241:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2241 |   if (syncing)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2259:7: [0m[0;1;36mnote: [0m'jobserver_auth' is null[0m
 2259 |   if (jobserver_auth)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:2259:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2259 |   if (jobserver_auth)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2261:7: [0m[0;1;36mnote: [0mAssuming 'sync_mutex' is null[0m
 2261 |   if (sync_mutex)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1msrc/main.c:2261:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2261 |   if (sync_mutex)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2312:7: [0m[0;1;36mnote: [0mAssuming 'old_files' is equal to null[0m
 2312 |   if (old_files != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1msrc/main.c:2312:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2312 |   if (old_files != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2325:8: [0m[0;1;36mnote: [0m'restarts' is 0[0m
 2325 |   if (!restarts && new_files != 0)[0m
      | [0;1;32m       ^~~~~~~~
[0m[1msrc/main.c:2325:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2325 |   if (!restarts && new_files != 0)[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:2325:20: [0m[0;1;36mnote: [0mAssuming 'new_files' is equal to null[0m
 2325 |   if (!restarts && new_files != 0)[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~
[0m[1msrc/main.c:2325:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2325 |   if (!restarts && new_files != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2340:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2340 |   OUTPUT_UNSET ();[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:32:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_UNSET'[0m
   32 | #define OUTPUT_UNSET()      do{ output_context = NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/main.c:2343:7: [0m[0;1;36mnote: [0mAssuming 'shuffle_mode' is null[0m
 2343 |   if (shuffle_mode)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/main.c:2343:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2343 |   if (shuffle_mode)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2346:7: [0m[0;1;36mnote: [0mAssuming 'read_files' is non-null[0m
 2346 |   if (read_files)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1msrc/main.c:2346:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2346 |   if (read_files)[0m
      | [0;1;32m  ^
[0m[1msrc/main.c:2356:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2356 |       DB (DB_BASIC, (_("Updating makefiles....\n")));[0m
      | [0;1;32m      ^
[0m[1msrc/debug.h:41:28: [0m[0;1;36mnote: [0mexpanded from macro 'DB'[0m
   41 | #define DB(_l,_x)   do{ if(ISDB(_l)) {printf _x; fflush (stdout);} }while(0)[0m
      | [0;1;32m                           ^~~~~~~~
[0m[1msrc/debug.h:30:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISDB'[0m
   30 | #define ISDB(_l)    ((_l)&db_level)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~
[0m[1msrc/main.c:2356:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2356 |       DB (DB_BASIC, (_("Updating makefiles....\n")));[0m
      | [0;1;32m      ^
[0m[1msrc/debug.h:41:25: [0m[0;1;36mnote: [0mexpanded from macro 'DB'[0m
   41 | #define DB(_l,_x)   do{ if(ISDB(_l)) {printf _x; fflush (stdout);} }while(0)[0m
      | [0;1;32m                        ^
[0m[1msrc/main.c:2356:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2356 |       DB (DB_BASIC, (_("Updating makefiles....\n")));[0m
      | [0;1;32m      ^
[0m[1msrc/debug.h:41:21: [0m[0;1;36mnote: [0mexpanded from macro 'DB'[0m
   41 | #define DB(_l,_x)   do{ if(ISDB(_l)) {printf _x; fflush (stdout);} }while(0)[0m
      | [0;1;32m                    ^
[0m[1msrc/main.c:2364:16: [0m[0;1;36mnote: [0m'd' is not equal to NULL[0m
 2364 |         while (d != NULL)[0m
      | [0;1;32m               ^
[0m[1msrc/main.c:2364:9: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2364 |         while (d != NULL)[0m
      | [0;1;32m        ^
[0m[1msrc/main.c:2364:16: [0m[0;1;36mnote: [0mAssuming 'd' is equal to NULL[0m
 2364 |         while (d != NULL)[0m
      | [0;1;32m               ^~~~~~~~~
[0m[1msrc/main.c:2364:9: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2373[0m
 2364 |         while (d != NULL)[0m
      | [0;1;32m        ^
[0m[1msrc/main.c:2383:16: [0m[0;1;36mnote: [0m'd' is not equal to null[0m
 2383 |         while (d != 0)[0m
      | [0;1;32m               ^
[0m[1msrc/main.c:2383:9: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2383 |         while (d != 0)[0m
      | [0;1;32m        ^
[0m[1msrc/main.c:2395:17: [0m[0;1;36mnote: [0mAssuming field 'phony' is 0[0m
 2395 |             if (f->phony)[0m
      | [0;1;32m                ^~~~~~~~
[0m[1msrc/main.c:2395:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2395 |             if (f->phony)[0m
      | [0;1;32m            ^
[0m[1msrc/main.c:2398:41: [0m[0;1;36mnote: [0mAssuming 'f' is equal to NULL[0m
 2398 |               for (f = f->double_colon; f != NULL; f = f->prev)[0m
      | [0;1;32m                                        ^~~~~~~~~
[0m[1msrc/main.c:2398:15: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2405[0m
 2398 |               for (f = f->double_colon; f != NULL; f = f->prev)[0m
      | [0;1;32m              ^
[0m[1msrc/main.c:2405:18: [0m[0;1;36mnote: [0m'skip' is 0[0m
 2405 |             if (!skip)[0m
      | [0;1;32m                 ^~~~
[0m[1msrc/main.c:2405:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2405 |             if (!skip)[0m
      | [0;1;32m            ^
[0m[1msrc/main.c:2407:45: [0m[0;1;36mnote: [0mAssuming field 'last_mtime' is not equal to 0[0m
 2407 |                 makefile_mtimes[mm_idx++] = file_mtime_no_search (d->file);[0m
      | [0;1;32m                                            ^
[0m[1msrc/filedef.h:192:33: [0m[0;1;36mnote: [0mexpanded from macro 'file_mtime_no_search'[0m
  192 | #define file_mtime_no_search(f) file_mtime_1 ((f), 0)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/filedef.h:195:4: [0m[0;1;36mnote: [0mexpanded from macro 'file_mtime_1'[0m
  195 |   ((f)->last_mtime == UNKNOWN_MTIME ? f_mtime ((f), v) : (f)->last_mtime)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2407:45: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2407 |                 makefile_mtimes[mm_idx++] = file_mtime_no_search (d->file);[0m
      | [0;1;32m                                            ^
[0m[1msrc/filedef.h:192:33: [0m[0;1;36mnote: [0mexpanded from macro 'file_mtime_no_search'[0m
  192 | #define file_mtime_no_search(f) file_mtime_1 ((f), 0)[0m
      | [0;1;32m                                ^
[0m[1msrc/filedef.h:195:4: [0m[0;1;36mnote: [0mexpanded from macro 'file_mtime_1'[0m
  195 |   ((f)->last_mtime == UNKNOWN_MTIME ? f_mtime ((f), v) : (f)->last_mtime)[0m
      | [0;1;32m   ^
[0m[1msrc/main.c:2383:9: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2439[0m
 2383 |         while (d != 0)[0m
      | [0;1;32m        ^
[0m[1msrc/main.c:2444:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2444 |         if (! ISDB (DB_MAKEFILES))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2444:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 2444 |         if (! ISDB (DB_MAKEFILES))[0m
      | [0;1;32m        ^
[0m[1msrc/main.c:2455:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2468[0m
 2455 |       while (skipped_makefiles != NULL)[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:2468:11: [0m[0;1;36mnote: [0m'any_failed' is 0[0m
 2468 |       if (any_failed && status == us_success)[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1msrc/main.c:2468:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2468 |       if (any_failed && status == us_success)[0m
      | [0;1;32m                     ^
[0m[1msrc/main.c:2471:7: [0m[0;1;36mnote: [0mControl jumps to 'case us_failed:'  at line 2522[0m
 2471 |       switch (status)[0m
      | [0;1;32m      ^
[0m[1msrc/main.c:2530:41: [0m[0;1;36mnote: [0m'd' is not equal to null[0m
 2530 |             for (i = 0, d = read_files; d != 0; ++i, d = d->next)[0m
      | [0;1;32m                                        ^
[0m[1msrc/main.c:2530:13: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2530 |             for (i = 0, d = read_files; d != 0; ++i, d = d->next)[0m
      | [0;1;32m            ^
[0m[1msrc/main.c:2532:21: [0m[0;1;36mnote: [0mAssuming field 'updated' is 0[0m
 2532 |                 if (d->file->updated)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2532:17: [0m[0;1;36mnote: [0mTaking false branch[0m
 2532 |                 if (d->file->updated)[0m
      | [0;1;32m                ^
[0m[1msrc/main.c:2556:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2556 |                 else if (! (d->flags & RM_DONTCARE))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2556:22: [0m[0;1;36mnote: [0mTaking false branch[0m
 2556 |                 else if (! (d->flags & RM_DONTCARE))[0m
      | [0;1;32m                     ^
[0m[1msrc/main.c:2530:41: [0m[0;1;36mnote: [0mAssuming 'd' is not equal to null[0m
 2530 |             for (i = 0, d = read_files; d != 0; ++i, d = d->next)[0m
      | [0;1;32m                                        ^~~~~~
[0m[1msrc/main.c:2530:13: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2530 |             for (i = 0, d = read_files; d != 0; ++i, d = d->next)[0m
      | [0;1;32m            ^
[0m[1msrc/main.c:2532:21: [0m[0;1;36mnote: [0mAssuming field 'updated' is not equal to 0[0m
 2532 |                 if (d->file->updated)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2532:17: [0m[0;1;36mnote: [0mTaking true branch[0m
 2532 |                 if (d->file->updated)[0m
      | [0;1;32m                ^
[0m[1msrc/main.c:2535:25: [0m[0;1;36mnote: [0mAssuming field 'update_status' is equal to us_success[0m
 2535 |                     if (d->file->update_status == us_success)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2535:21: [0m[0;1;36mnote: [0mTaking true branch[0m
 2535 |                     if (d->file->update_status == us_success)[0m
      | [0;1;32m                    ^
[0m[1msrc/main.c:2537:38: [0m[0;1;36mnote: [0mAssuming field 'last_mtime' is not equal to 0[0m
 2537 |                       any_remade |= (file_mtime_no_search (d->file)[0m
      | [0;1;32m                                     ^
[0m[1msrc/filedef.h:192:33: [0m[0;1;36mnote: [0mexpanded from macro 'file_mtime_no_search'[0m
  192 | #define file_mtime_no_search(f) file_mtime_1 ((f), 0)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/filedef.h:195:4: [0m[0;1;36mnote: [0mexpanded from macro 'file_mtime_1'[0m
  195 |   ((f)->last_mtime == UNKNOWN_MTIME ? f_mtime ((f), v) : (f)->last_mtime)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2537:38: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2537 |                       any_remade |= (file_mtime_no_search (d->file)[0m
      | [0;1;32m                                     ^
[0m[1msrc/filedef.h:192:33: [0m[0;1;36mnote: [0mexpanded from macro 'file_mtime_no_search'[0m
  192 | #define file_mtime_no_search(f) file_mtime_1 ((f), 0)[0m
      | [0;1;32m                                ^
[0m[1msrc/filedef.h:195:4: [0m[0;1;36mnote: [0mexpanded from macro 'file_mtime_1'[0m
  195 |   ((f)->last_mtime == UNKNOWN_MTIME ? f_mtime ((f), v) : (f)->last_mtime)[0m
      | [0;1;32m   ^
[0m[1msrc/main.c:2538:41: [0m[0;1;36mnote: [0mAccess of the memory returned by 'alloca' at index 1, while it holds only a single 'unsigned long' element[0m
 2538 |                                      != makefile_mtimes[i]);[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~~~~~
[0m[1msrc/main.c:2561:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2561 |                     if (d->flags & RM_INCLUDED)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2562 |                       /* An included makefile.  We don't need to die, but we[0m
 2563 |                          do want to complain.  */[0m
 2564 |                       OS (error, &d->floc,[0m
 2565 |                           _("Included makefile '%s' was not found."), dnm);[0m
 2566 |                     else[0m
      | [0;32m                    } 
[0m[1msrc/main.c:2575:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2575 |             if (any_remade)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2576 |               goto re_exec;[0m
      | [0;1;32m                           
[0m[1msrc/main.c:2582:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2582 |         re_exec:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m[1msrc/main.c:2587:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2587 |           if (print_data_base_flag)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2588 |             print_data_base ();[0m
      | [0;1;32m                               
[0m[1msrc/main.c:2619:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2619 |                   if (a[0] != '-')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2620 |                     continue;[0m
      | [0;1;32m                             
[0m[1msrc/main.c:2631:86: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2631 |                       if (strcmp (a, "--file") == 0 || strcmp (a, "--makefile") == 0)[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m 2632 |                         /* Skip the next arg as we'll combine them.  */[0m
 2633 |                         ++av;[0m
 2634 |                       else if (!strneq (a, "--file=", 7)[0m
      | [0;32m                      } 
[0m[1msrc/main.c:2635:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2635 |                                && !strneq (a, "--makefile=", 11))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2636 |                         continue;[0m
      | [0;1;32m                                 
[0m[1msrc/main.c:2642:27: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2642 |                           sprintf (na, "--temp-stdin=%s", mf);[0m
      | [0;1;32m                          ^~~~~~~
[0m[1msrc/main.c:2642:27: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2642 |                           sprintf (na, "--temp-stdin=%s", mf);[0m
      | [0;1;32m                          ^~~~~~~
[0m[1msrc/main.c:2648:27: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2648 |                           sprintf (na, "-f%s", mf);[0m
      | [0;1;32m                          ^~~~~~~
[0m[1msrc/main.c:2648:27: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2648 |                           sprintf (na, "-f%s", mf);[0m
      | [0;1;32m                          ^~~~~~~
[0m[1msrc/main.c:2659:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2659 |                   if (!f)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2660 |                     continue;[0m
      | [0;1;32m                             
[0m[1msrc/main.c:2663:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2663 |                   if (f[1] == '\0')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2664 |                     ++av;[0m
      | [0;1;32m                         
[0m[1msrc/main.c:2675:27: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2675 |                           memcpy (na, a, al);[0m
      | [0;1;32m                          ^~~~~~
[0m[1msrc/main.c:2675:27: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2675 |                           memcpy (na, a, al);[0m
      | [0;1;32m                          ^~~~~~
[0m[1msrc/main.c:2682:23: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2682 |                       sprintf (na, "--temp-stdin=%s", mf);[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msrc/main.c:2682:23: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2682 |                       sprintf (na, "--temp-stdin=%s", mf);[0m
      | [0;1;32m                      ^~~~~~~
[0m[1msrc/main.c:2685:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2685 |                   else if (f[1] == '\0')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2686 |                     /* -f <name> or -xyzf <name>.  Replace the name.  */[0m
 2687 |                     *(++nv) = mf;[0m
 2688 |                   else[0m
      | [0;32m                  } 
[0m[1msrc/main.c:2694:23: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2694 |                       memcpy (na, a, al);[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/main.c:2694:23: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2694 |                       memcpy (na, a, al);[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/main.c:2695:23: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2695 |                       memcpy (na + al, mf, ml);[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/main.c:2695:23: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2695 |                       memcpy (na + al, mf, ml);[0m
      | [0;1;32m                      ^~~~~~
[0m[1msrc/main.c:2710:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2710 |                   if (chdir (directory_before_chdir) < 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2711 |                       perror_with_name ("chdir", "");[0m
 2712 |                   else[0m
      | [0;32m                  } 
[0m[1msrc/main.c:2712:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2712 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2713 |                     bad = 0;[0m
      | [0;1;32m                            
[0m[1msrc/main.c:2715:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2715 |               if (bad)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2716 |                 O (fatal, NILF,[0m
 2717 |                    _("Couldn't change back to original directory"));[0m
      | [0;1;32m                                                                    
[0m[1msrc/main.c:2726:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2726 |               for (p = nargv; *p != 0; ++p)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2727 |                 printf (" %s", *p);[0m
      | [0;1;32m                                   
[0m[1msrc/main.c:2740:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2740 |                     sprintf (*p, "%s=%u", MAKELEVEL_NAME, makelevel);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1msrc/main.c:2740:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2740 |                     sprintf (*p, "%s=%u", MAKELEVEL_NAME, makelevel);[0m
      | [0;1;32m                    ^~~~~~~
[0m[1msrc/main.c:2748:21: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2748 |                     sprintf (*p, "MAKE_RESTARTS=%s%u",[0m
      | [0;1;32m                    ^~~~~~~
[0m[1msrc/main.c:2748:21: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2748 |                     sprintf (*p, "MAKE_RESTARTS=%s%u",[0m
      | [0;1;32m                    ^~~~~~~
[0m[1msrc/main.c:2771:15: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2771 |               sprintf (b, "MAKE_RESTARTS=%s%u",[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/main.c:2771:15: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2771 |               sprintf (b, "MAKE_RESTARTS=%s%u",[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/main.c:2826:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2826 |       if (any_failed)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2827 |         die (MAKE_FAILURE);[0m
      | [0;1;32m                           
[0m[1msrc/main.c:2854:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2854 |       if (default_goal_var->recursive)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2855 |         p = variable_expand (default_goal_var->value);[0m
 2856 |       else[0m
      | [0;32m      } 
[0m[1msrc/main.c:2878:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2878 |                   if (ns->next != 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2879 |                     O (fatal, NILF,[0m
 2880 |                        _(".DEFAULT_GOAL contains more than one target"));[0m
      | [0;1;32m                                                                         
[0m[1msrc/main.c:2896:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2896 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2897 |     lastgoal->next = 0;[0m
      | [0;1;32m                       
[0m[1msrc/main.c:2903:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2903 |       if (v && v->value && v->value[0] != '\0')[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2904 |         O (fatal, NILF, _("No targets"));[0m
      | [0;1;32m                                         
[0m[1msrc/main.c:2928:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2928 |         makefile_status = MAKE_TROUBLE;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2929 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/main.c:2932:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2932 |         makefile_status = MAKE_FAILURE;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2933 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/main.c:2937:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2937 |     if (clock_skew_detected)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2938 |       O (error, NILF,[0m
 2939 |          _("warning:  Clock skew detected.  Your build may be incomplete."));[0m
      | [0;1;32m                                                                             
[0m[1msrc/main.c:2964:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2964 |   if (options[0] != '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2965 |     /* Already done.  */[0m
 2966 |     return;[0m
      | [0;1;32m           
[0m[1msrc/main.c:2980:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2980 |       if (short_option (switches[i].c))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2981 |         *p++ = (char) switches[i].c;[0m
      | [0;1;32m                                    
[0m[1msrc/main.c:2988:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2988 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/main.c:2995:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2995 |           if (short_option (switches[i].c))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2996 |             *p++ = ':';[0m
      | [0;1;32m                       
[0m[1msrc/main.c:2997:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2997 |           if (switches[i].noarg_value != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2998 |             {[0m
 2999 |               if (short_option (switches[i].c))[0m
 3000 |                 *p++ = ':';[0m
 3001 |               long_options[i].has_arg = optional_argument;[0m
 3002 |             }[0m
 3003 |           else[0m
 3004 |             long_options[i].has_arg = required_argument;[0m
 3005 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/main.c:2999:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2999 |               if (short_option (switches[i].c))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3000 |                 *p++ = ':';[0m
      | [0;1;32m                           
[0m[1msrc/main.c:3003:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3003 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3004 |             long_options[i].has_arg = required_argument;[0m
      | [0;1;32m                                                        
[0m[1msrc/main.c:3011:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3011 |        ++c)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 3012 |     long_options[i++] = long_option_aliases[c];[0m
      | [0;1;32m                                               
[0m[1msrc/main.c:3023:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3023 |   if (arg[0] == '-' && arg[1] == '\0')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3024 |     /* Ignore plain '-' for compatibility.  */[0m
 3025 |     return;[0m
      | [0;1;32m           
[0m[1msrc/main.c:3060:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3060 |       for (cv = command_variables; cv != 0; cv = cv->next)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 3061 |         if (cv->variable == v)[0m
 3062 |           break;[0m
      | [0;1;32m                
[0m[1msrc/main.c:3061:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3061 |         if (cv->variable == v)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3062 |           break;[0m
      | [0;1;32m                
[0m[1msrc/main.c:3100:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3100 |         if (gv == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3101 |           value = f->name;[0m
 3102 |         else[0m
      | [0;32m        } 
[0m[1msrc/main.c:3111:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3111 |             memcpy (vp, gv->value, oldlen);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/main.c:3111:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3111 |             memcpy (vp, gv->value, oldlen);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/main.c:3113:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3113 |             memcpy (&vp[oldlen + 1], f->name, newlen + 1);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/main.c:3113:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3113 |             memcpy (&vp[oldlen + 1], f->name, newlen + 1);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/main.c:3159:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3159 |       if (c == EOF)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3160 |         /* End of arguments, or "--" marker seen.  */[0m
 3161 |         break;[0m
 3162 |       else if (c == 1)[0m
      | [0;32m      } 
[0m[1msrc/main.c:3162:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3162 |       else if (c == 1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3163 |         /* An argument not starting with a dash.  */[0m
 3164 |         handle_non_switch_argument (coptarg, origin);[0m
 3165 |       else if (c == '?')[0m
      | [0;32m      } 
[0m[1msrc/main.c:3165:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3165 |       else if (c == '?')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3166 |         /* Bad option.  We will print a usage message and die later.[0m
 3167 |            But continue to parse the other options so the user can[0m
 3168 |            see all he did wrong.  */[0m
 3169 |         bad = 1;[0m
 3170 |       else[0m
      | [0;32m      } 
[0m[1msrc/main.c:3170:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3170 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m[1msrc/main.c:3171:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3171 |         for (cs = switches; cs->c != '\0'; ++cs)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m[1msrc/main.c:3182:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3182 |               if (doit)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3183 |                 cs->specified = 1;[0m
      | [0;1;32m                                  
[0m[1msrc/main.c:3188:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3188 |                   abort ();[0m
      | [0;1;32m                  ^       
[0m      | [0;32m                  {       ;} 
[0m[1msrc/main.c:3191:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3191 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1msrc/main.c:3198:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3198 |                       if (cs->origin)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3199 |                         *cs->origin = origin;[0m
      | [0;1;32m                                             
[0m[1msrc/main.c:3201:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3201 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1msrc/main.c:3206:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3206 |                   if (!doit)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3207 |                     break;[0m
      | [0;1;32m                          
[0m[1msrc/main.c:3209:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3209 |                   if (! coptarg)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m[1msrc/main.c:3209:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3209 |                   if (! coptarg)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3210 |                     coptarg = cs->noarg_value;[0m
 3211 |                   else if (*coptarg == '\0')[0m
      | [0;32m                  } 
[0m[1msrc/main.c:3216:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3216 |                       if (short_option (cs->c))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3217 |                         opt[0] = (char) cs->c;[0m
 3218 |                       else[0m
      | [0;32m                      } 
[0m[1msrc/main.c:3218:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3218 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3219 |                         op = cs->long_name;[0m
      | [0;1;32m                                           
[0m[1msrc/main.c:3233:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3233 |                       if (cs->origin)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3234 |                         *cs->origin = origin;[0m
      | [0;1;32m                                             
[0m[1msrc/main.c:3260:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3260 |                       for (k = 0; k < sl->idx; ++k)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3261 |                         if (streq (sl->list[k], coptarg))[0m
 3262 |                           break;[0m
      | [0;1;32m                                
[0m[1msrc/main.c:3261:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3261 |                         if (streq (sl->list[k], coptarg))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3262 |                           break;[0m
      | [0;1;32m                                
[0m[1msrc/main.c:3263:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3263 |                       if (k < sl->idx)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3264 |                         break;[0m
      | [0;1;32m                              
[0m[1msrc/main.c:3270:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3270 |                       if (cs->origin)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3271 |                         *cs->origin = origin;[0m
      | [0;1;32m                                             
[0m[1msrc/main.c:3275:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3275 |                       if (stdin_offset > 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3276 |                         fatal (NILF, 0, "INTERNAL: multiple --temp-stdin options provided!");[0m
      | [0;1;32m                                                                                             
[0m[1msrc/main.c:3280:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3280 |                       if (cs->origin)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3281 |                         *cs->origin = origin;[0m
      | [0;1;32m                                             
[0m[1msrc/main.c:3286:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3286 |                       if (cs->origin)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3287 |                         *cs->origin = origin;[0m
      | [0;1;32m                                             
[0m[1msrc/main.c:3295:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3295 |                   if (coptarg == 0 && argc > optind)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m[1msrc/main.c:3298:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3298 |                       for (cp=argv[optind]; ISDIGIT (cp[0]); ++cp)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 3299 |                         ;[0m
      | [0;1;32m                         
[0m[1msrc/main.c:3300:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3300 |                       if (cp[0] == '\0')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3301 |                         coptarg = argv[optind++];[0m
      | [0;1;32m                                                 
[0m[1msrc/main.c:3304:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3304 |                   if (!doit)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3305 |                     break;[0m
      | [0;1;32m                          
[0m[1msrc/main.c:3322:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3322 |                           if (cs->origin)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3323 |                             *cs->origin = origin;[0m
      | [0;1;32m                                                 
[0m[1msrc/main.c:3330:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3330 |                       if (cs->origin)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3331 |                         *cs->origin = origin;[0m
      | [0;1;32m                                             
[0m[1msrc/main.c:3336:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3336 |                   if (coptarg == 0 && optind < argc[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m 3337 |                       && (ISDIGIT (argv[optind][0]) || argv[optind][0] == '.'))[0m
 3338 |                     coptarg = argv[optind++];[0m
 3339 | [0m
 3340 |                   if (doit)[0m
 3341 |                     {[0m
 3342 |                       *(double *) cs->value_ptr = (coptarg != 0 ? atof (coptarg)[0m
 3343 |                                                    : *(double *) cs->noarg_value);[0m
 3344 |                       if (cs->origin)[0m
 3345 |                         *cs->origin = origin;[0m
 3346 |                     }[0m
 3347 | [0m
 3348 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1msrc/main.c:3337:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3337 |                       && (ISDIGIT (argv[optind][0]) || argv[optind][0] == '.'))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 3338 |                     coptarg = argv[optind++];[0m
      | [0;1;32m                                             
[0m[1msrc/main.c:3344:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3344 |                       if (cs->origin)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3345 |                         *cs->origin = origin;[0m
      | [0;1;32m                                             
[0m[1msrc/main.c:3360:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3360 |   while (optind < argc)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3361 |     handle_non_switch_argument (argv[optind++], origin);[0m
      | [0;1;32m                                                        
[0m[1msrc/main.c:3363:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3363 |   if (bad && origin == o_command)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3364 |     print_usage (bad);[0m
      | [0;1;32m                      
[0m[1msrc/main.c:3399:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3399 |   if (len == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 3400 |     return;[0m
      | [0;1;32m           
[0m[1msrc/main.c:3418:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3418 |       if (*value == '\\' && value[1] != '\0')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3419 |         ++value;                /* Skip the backslash.  */[0m
 3420 |       else if (ISBLANK (*value))[0m
      | [0;32m      } 
[0m[1msrc/main.c:3425:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3425 |           do[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3426 |             ++value;[0m
 3427 |           while (ISBLANK (*value));[0m
      | [0;32m          } 
[0m[1msrc/main.c:3436:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3436 |   if (argv[1][0] != '-' && strchr (argv[1], '=') == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3437 |     /* The first word doesn't start with a dash and isn't a variable[0m
 3438 |        definition, so add a dash.  */[0m
 3439 |     argv[1] = buf;[0m
      | [0;1;32m                  
[0m[1msrc/main.c:3456:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3456 |       if (*in == '$')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3457 |         *out++ = '$';[0m
 3458 |       else if (ISBLANK (*in) || *in == '\\')[0m
      | [0;32m      } 
[0m[1msrc/main.c:3458:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3458 |       else if (ISBLANK (*in) || *in == '\\')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3459 |         *out++ = '\\';[0m
      | [0;1;32m                      
[0m[1msrc/main.c:3517:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3517 |   for (cs = switches; cs->c != '\0'; ++cs)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m[1msrc/main.c:3518:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3518 |     if (cs->toenv && (!makefile || !cs->no_makefile))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m[1msrc/main.c:3522:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3522 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/main.c:3528:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3528 |                   || *(int *) cs->value_ptr != *(int *) cs->default_value))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 3529 |             ADD_FLAG (0, 0);[0m
      | [0;1;32m                            
[0m[1msrc/main.c:3530:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3530 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/main.c:3533:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3533 |           if ((cs->default_value != 0[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3534 |                && (*(unsigned int *) cs->value_ptr[0m
 3535 |                    == *(unsigned int *) cs->default_value)))[0m
 3536 |             break;[0m
 3537 |           if (cs->noarg_value != 0[0m
 3538 |               && (*(unsigned int *) cs->value_ptr ==[0m
 3539 |                   *(unsigned int *) cs->noarg_value))[0m
 3540 |             ADD_FLAG ("", 0); /* Optional value omitted; see below.  */[0m
 3541 |           else[0m
 3542 |             {[0m
 3543 |               char *buf = alloca (30);[0m
 3544 |               sprintf (buf, "%u", *(unsigned int *) cs->value_ptr);[0m
 3545 |               ADD_FLAG (buf, strlen (buf));[0m
 3546 |             }[0m
 3547 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/main.c:3535:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3535 |                    == *(unsigned int *) cs->default_value)))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 3536 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/main.c:3539:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3539 |                   *(unsigned int *) cs->noarg_value))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3540 |             ADD_FLAG ("", 0); /* Optional value omitted; see below.  */[0m
 3541 |           else[0m
      | [0;32m          } 
[0m[1msrc/main.c:3544:15: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3544 |               sprintf (buf, "%u", *(unsigned int *) cs->value_ptr);[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/main.c:3544:15: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 3544 |               sprintf (buf, "%u", *(unsigned int *) cs->value_ptr);[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/main.c:3550:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3550 |           if (cs->default_value != 0[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3551 |               && (*(double *) cs->value_ptr == *(double *) cs->default_value))[0m
 3552 |             break;[0m
 3553 |           if (cs->noarg_value != 0[0m
 3554 |               && (*(double *) cs->value_ptr == *(double *) cs->noarg_value))[0m
 3555 |             ADD_FLAG ("", 0); /* Optional value omitted; see below.  */[0m
 3556 |           else[0m
 3557 |             {[0m
 3558 |               char *buf = alloca (100);[0m
 3559 |               sprintf (buf, "%g", *(double *) cs->value_ptr);[0m
 3560 |               ADD_FLAG (buf, strlen (buf));[0m
 3561 |             }[0m
 3562 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/main.c:3551:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3551 |               && (*(double *) cs->value_ptr == *(double *) cs->default_value))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3552 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/main.c:3554:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3554 |               && (*(double *) cs->value_ptr == *(double *) cs->noarg_value))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 3555 |             ADD_FLAG ("", 0); /* Optional value omitted; see below.  */[0m
 3556 |           else[0m
      | [0;32m          } 
[0m[1msrc/main.c:3559:15: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3559 |               sprintf (buf, "%g", *(double *) cs->value_ptr);[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/main.c:3559:15: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 3559 |               sprintf (buf, "%g", *(double *) cs->value_ptr);[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/main.c:3565:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3565 |           p = *((char **)cs->value_ptr);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 3566 |           if (p)[0m
 3567 |             ADD_FLAG (p, strlen (p));[0m
 3568 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/main.c:3566:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3566 |           if (p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3567 |             ADD_FLAG (p, strlen (p));[0m
      | [0;1;32m                                     
[0m[1msrc/main.c:3577:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3577 |                 for (i = 0; i < sl->idx; ++i)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3578 |                   ADD_FLAG (sl->list[i], strlen (sl->list[i]));[0m
      | [0;1;32m                                                               
[0m[1msrc/main.c:3581:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3581 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/main.c:3584:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3584 |           abort ();[0m
      | [0;1;32m          ^       
[0m      | [0;32m          {       ;} 
[0m[1msrc/main.c:3595:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3595 |   memset (flagstring, '\0', 1 + flagslen + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/main.c:3595:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 3595 |   memset (flagstring, '\0', 1 + flagslen + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/main.c:3615:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3615 |       if (short_option (flags->cs->c))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3616 |         *p++ = (char) flags->cs->c;[0m
 3617 |       else[0m
      | [0;32m      } 
[0m[1msrc/main.c:3626:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3626 |           if (!short_option (flags->cs->c))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3627 |             /* Long options require '='.  */[0m
 3628 |             *p++ = '=';[0m
      | [0;1;32m                       
[0m[1msrc/main.c:3676:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3676 |   if (flagstring[0] == '-')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3677 |     ++flagstring;[0m
      | [0;1;32m                 
[0m[1msrc/main.c:3697:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3697 |     if (print_directory_flag >= 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3698 |         return print_directory_flag;[0m
      | [0;1;32m                                    
[0m[1msrc/main.c:3714:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3714 |   if (printed_version)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3715 |     /* Do it only once.  */[0m
 3716 |     return;[0m
      | [0;1;32m           
[0m[1msrc/main.c:3720:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3720 |   if (!remote_description || *remote_description == '\0')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3721 |     printf (_("%sBuilt for %s\n"), precede, make_host);[0m
 3722 |   else[0m
      | [0;32m  } 
[0m[1msrc/main.c:3722:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3722 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3723 |     printf (_("%sBuilt for %s (%s)\n"),[0m
 3724 |             precede, make_host, remote_description);[0m
      | [0;1;32m                                                    
[0m[1msrc/main.c:3774:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3774 |       if (status != 2)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3775 |         ON (error, NILF,[0m
 3776 |             "INTERNAL: Exiting with %u jobserver tokens (should be 0)!",[0m
 3777 |             jobserver_tokens);[0m
 3778 |       else[0m
      | [0;32m      } 
[0m[1msrc/main.c:3778:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3778 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3779 |         /* Don't write back the "free" token */[0m
 3780 |         while (--jobserver_tokens)[0m
 3781 |           jobserver_release (0);[0m
      | [0;1;32m                                
[0m[1msrc/main.c:3780:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3780 |         while (--jobserver_tokens)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3781 |           jobserver_release (0);[0m
      | [0;1;32m                                
[0m[1msrc/main.c:3792:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3792 |       if (tokens != master_job_slots)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3793 |         ONN (error, NILF,[0m
 3794 |              "INTERNAL: Exiting with %u jobserver tokens available; should be %u!",[0m
 3795 |              tokens, master_job_slots);[0m
      | [0;1;32m                                       
[0m[1msrc/main.c:3814:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3814 |       if (print_version_flag)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3815 |         print_version ();[0m
      | [0;1;32m                         
[0m[1msrc/main.c:3822:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3822 |       while (job_slots_used > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3823 |         reap_children (1, err);[0m
      | [0;1;32m                               
[0m[1msrc/main.c:3831:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3831 |       if (print_data_base_flag)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3832 |         print_data_base ();[0m
      | [0;1;32m                           
[0m[1msrc/main.c:3834:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3834 |       if (verify_flag)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3835 |         verify_file_data_base ();[0m
      | [0;1;32m                                 
[0m[1msrc/main.c:3845:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3845 |           if (output_context != &make_sync)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3846 |             output_close (&make_sync);[0m
      | [0;1;32m                                      
[0m226 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[27/32][204.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp_5fm3mji.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/function.c
[1msrc/function.c:66:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (result)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m   67 |     return result;[0m
      | [0;1;32m                  
[0m[1msrc/function.c:91:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |       if (rlen > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   92 |         o = variable_buffer_output (o, replace, rlen);[0m
      | [0;1;32m                                                      
[0m[1msrc/function.c:98:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |       if (by_word && slen == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   99 |         /* When matching by words, the empty string should match[0m
  100 |            the end of each word, rather than the end of the whole text.  */[0m
  101 |         p = end_of_token (next_token (t));[0m
  102 |       else[0m
      | [0;32m      } 
[0m[1msrc/function.c:114:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       if (p > t)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  115 |         o = variable_buffer_output (o, t, p - t);[0m
      | [0;1;32m                                                 
[0m[1msrc/function.c:121:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |               || ! STOP_SET (p[slen], MAP_SPACE|MAP_NUL)))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  122 |         /* Struck out.  Output the rest of the string that is[0m
  123 |            no longer to be replaced.  */[0m
  124 |         o = variable_buffer_output (o, subst, slen);[0m
  125 |       else if (rlen > 0)[0m
      | [0;32m      } 
[0m[1msrc/function.c:125:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |       else if (rlen > 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  126 |         /* Output the replacement string.  */[0m
  127 |         o = variable_buffer_output (o, replace, rlen);[0m
      | [0;1;32m                                                      
[0m[1msrc/function.c:171:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |   if (!pattern_percent)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  172 |     /* With no % in the pattern, this is just a simple substitution.  */[0m
  173 |     return subst_expand (o, text, pattern, replace,[0m
  174 |                          strlen (pattern), strlen (replace), 1);[0m
      | [0;1;32m                                                                
[0m[1msrc/function.c:186:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |       if (len < pattern_prepercent_len + pattern_postpercent_len)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  187 |         fail = 1;[0m
      | [0;1;32m                 
[0m[1msrc/function.c:193:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |               || !strneq (t + 1, pattern + 1, pattern_prepercent_len - 1)))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  194 |         fail = 1;[0m
      | [0;1;32m                 
[0m[1msrc/function.c:201:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |                           pattern_percent, pattern_postpercent_len - 1)))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  202 |         fail = 1;[0m
      | [0;1;32m                 
[0m[1msrc/function.c:204:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |       if (fail)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  205 |         /* It didn't match.  Output the string.  */[0m
  206 |         o = variable_buffer_output (o, t, len);[0m
  207 |       else[0m
      | [0;32m      } 
[0m[1msrc/function.c:235:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  236 |     /* Kill the last space.  */[0m
  237 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:259:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  259 |   if (replace_percent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  260 |     ++replace_percent;[0m
      | [0;1;32m                      
[0m[1msrc/function.c:261:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  261 |   if (pattern_percent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  262 |     ++pattern_percent;[0m
      | [0;1;32m                      
[0m[1msrc/function.c:277:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |   while (STOP_SET (*e, MAP_USERFUNC))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  278 |     e++;[0m
      | [0;1;32m        
[0m[1msrc/function.c:280:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |   if (e == s || !STOP_SET(*e, MAP_NUL|MAP_SPACE))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  281 |     return NULL;[0m
      | [0;1;32m                
[0m[1msrc/function.c:301:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  301 |       memcpy (new_chars, pattern, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:301:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  301 |       memcpy (new_chars, pattern, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:303:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |       if (percent == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  304 |         return streq (new_chars, str);[0m
      | [0;1;32m                                      
[0m[1msrc/function.c:312:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |       || !strneq (pattern, str, percent - pattern))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  313 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/function.c:332:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |   for (; ptr < end; ++ptr)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  333 |     if (!STOP_SET (*ptr, MAP_VARSEP|MAP_COMMA))[0m
  334 |       continue;[0m
  335 | [0m
  336 |     else if (*ptr == startparen)[0m
  337 |       ++count;[0m
  338 | [0m
  339 |     else if (*ptr == endparen)[0m
  340 |       {[0m
  341 |         --count;[0m
  342 |         if (count < 0)[0m
  343 |           return NULL;[0m
  344 |       }[0m
  345 | [0m
  346 |     else if (*ptr == ',' && !count)[0m
  347 |       return (char *)ptr;[0m
      | [0;1;32m                         
[0m[1msrc/function.c:333:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |     if (!STOP_SET (*ptr, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  334 |       continue;[0m
  335 | [0m
  336 |     else if (*ptr == startparen)[0m
      | [0;32m    } 
[0m[1msrc/function.c:336:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |     else if (*ptr == startparen)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  337 |       ++count;[0m
  338 | [0m
  339 |     else if (*ptr == endparen)[0m
      | [0;32m    } 
[0m[1msrc/function.c:342:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |         if (count < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  343 |           return NULL;[0m
      | [0;1;32m                      
[0m[1msrc/function.c:346:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |     else if (*ptr == ',' && !count)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  347 |       return (char *)ptr;[0m
      | [0;1;32m                         
[0m[1msrc/function.c:388:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  388 |       memcpy (&result[idx], chain->name, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:388:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  388 |       memcpy (&result[idx], chain->name, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:399:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |   if (idx == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  400 |     result[0] = '\0';[0m
  401 |   else[0m
      | [0;32m  } 
[0m[1msrc/function.c:401:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  402 |     result[idx - 1] = '\0';[0m
      | [0;1;32m                           
[0m[1msrc/function.c:437:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |       if (tp != 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  438 |         o = variable_buffer_output (o, tp, len1);[0m
      | [0;1;32m                                                 
[0m[1msrc/function.c:441:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |       if (pp != 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  442 |         o = variable_buffer_output (o, pp, len2);[0m
      | [0;1;32m                                                 
[0m[1msrc/function.c:451:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  452 |     /* Kill the last blank.  */[0m
  453 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:464:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |   if (v == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  465 |     o = variable_buffer_output (o, "undefined", 9);[0m
  466 |   else[0m
      | [0;32m  } 
[0m[1msrc/function.c:466:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m[1msrc/function.c:470:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  470 |         abort ();[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  471 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/function.c:473:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  473 |         o = variable_buffer_output (o, "default", 7);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  474 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/function.c:476:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  476 |         o = variable_buffer_output (o, "environment", 11);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  477 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/function.c:479:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |         o = variable_buffer_output (o, "file", 4);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  480 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/function.c:482:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  482 |         o = variable_buffer_output (o, "environment override", 20);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  483 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/function.c:485:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  485 |         o = variable_buffer_output (o, "command line", 12);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  486 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/function.c:488:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |         o = variable_buffer_output (o, "override", 8);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  489 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/function.c:491:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |         o = variable_buffer_output (o, "automatic", 9);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  492 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1msrc/function.c:503:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |   if (v == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  504 |     o = variable_buffer_output (o, "undefined", 9);[0m
  505 |   else[0m
      | [0;32m  } 
[0m[1msrc/function.c:506:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |     if (v->recursive)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  507 |       o = variable_buffer_output (o, "recursive", 9);[0m
  508 |     else[0m
      | [0;32m    } 
[0m[1msrc/function.c:508:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  509 |       o = variable_buffer_output (o, "simple", 6);[0m
      | [0;1;32m                                                  
[0m[1msrc/function.c:548:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |       while (p >= p2 && ! STOP_SET (*p, stop))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  549 |         --p;[0m
      | [0;1;32m            
[0m[1msrc/function.c:553:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  553 |           if (is_notdir)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  554 |             ++p;[0m
  555 |           else if (*p != '.')[0m
      | [0;32m          } 
[0m[1msrc/function.c:555:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |           else if (*p != '.')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  556 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/function.c:567:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |       else if (is_notdir)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  568 |         o = variable_buffer_output (o, p2, len);[0m
      | [0;1;32m                                                
[0m[1msrc/function.c:583:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  584 |     /* Kill last space.  */[0m
  585 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:619:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  619 |       while (p >= p2 && ! STOP_SET (*p, stop))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  620 |         --p;[0m
      | [0;1;32m            
[0m[1msrc/function.c:622:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  622 |       if (p >= p2 && (is_dir))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  623 |         o = variable_buffer_output (o, p2, ++p - p2);[0m
  624 |       else if (p >= p2 && (*p == '.'))[0m
      | [0;32m      } 
[0m[1msrc/function.c:624:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  624 |       else if (p >= p2 && (*p == '.'))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  625 |         o = variable_buffer_output (o, p2, p - p2);[0m
  626 | #ifdef HAVE_DOS_PATHS[0m
  627 |       /* Handle the "d:foobar" case */[0m
  628 |       else if (p2[0] && p2[1] == ':' && is_dir)[0m
  629 |         o = variable_buffer_output (o, p2, 2);[0m
  630 | #endif[0m
  631 |       else if (is_dir)[0m
      | [0;32m      } 
[0m[1msrc/function.c:631:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |       else if (is_dir)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m[1msrc/function.c:647:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  648 |         /* The entire name is the basename.  */[0m
  649 |         o = variable_buffer_output (o, p2, len);[0m
      | [0;1;32m                                                
[0m[1msrc/function.c:661:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  661 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  662 |     /* Kill last space.  */[0m
  663 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:682:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |       if (is_addprefix)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  683 |         o = variable_buffer_output (o, argv[0], fixlen);[0m
      | [0;1;32m                                                        
[0m[1msrc/function.c:685:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  685 |       if (is_addsuffix)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  686 |         o = variable_buffer_output (o, argv[0], fixlen);[0m
      | [0;1;32m                                                        
[0m[1msrc/function.c:691:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  691 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  692 |     /* Kill last space.  */[0m
  693 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:715:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |   if (p != 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  716 |     o = variable_buffer_output (o, p, i);[0m
      | [0;1;32m                                         
[0m[1msrc/function.c:729:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  729 |   while ((t = find_next_token (&words, &i)) != NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  730 |     p = t;[0m
      | [0;1;32m          
[0m[1msrc/function.c:732:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |   if (p != 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  733 |     o = variable_buffer_output (o, p, i);[0m
      | [0;1;32m                                         
[0m[1msrc/function.c:745:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  745 |   while (find_next_token (&word_iterator, NULL) != 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  746 |     ++i;[0m
      | [0;1;32m        
[0m[1msrc/function.c:748:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  748 |   sprintf (buf, "%u", i);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/function.c:748:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  748 |   sprintf (buf, "%u", i);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/function.c:762:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |   while (*begpp <= *endpp && ISSPACE (**begpp))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  763 |     (*begpp) ++;[0m
      | [0;1;32m                
[0m[1msrc/function.c:764:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  764 |   while (*endpp >= *begpp && ISSPACE (**endpp))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  765 |     (*endpp) --;[0m
      | [0;1;32m                
[0m[1msrc/function.c:778:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  778 |   if (beg > end)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  779 |     OS (fatal, *expanding_var, _("%s: empty value"), msg);[0m
      | [0;1;32m                                                          
[0m[1msrc/function.c:783:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  783 |   if (errno == ERANGE)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  784 |     OSS (fatal, *expanding_var, _("%s: '%s' out of range"), msg, s);[0m
  785 |   else if (endp == beg || endp <= end)[0m
      | [0;32m  } 
[0m[1msrc/function.c:785:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |   else if (endp == beg || endp <= end)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  786 |     /* Empty or non-numeric input */[0m
  787 |     OSS (fatal, *expanding_var, "%s: '%s'", msg, s);[0m
      | [0;1;32m                                                    
[0m[1msrc/function.c:801:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  801 |   if (i < 1)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  802 |     O (fatal, *expanding_var,[0m
  803 |        _("first argument to 'word' function must be greater than 0"));[0m
      | [0;1;32m                                                                      
[0m[1msrc/function.c:806:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  806 |   while ((p = find_next_token (&end_p, 0)) != 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  807 |     if (--i == 0)[0m
  808 |       break;[0m
      | [0;1;32m            
[0m[1msrc/function.c:807:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |     if (--i == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  808 |       break;[0m
      | [0;1;32m            
[0m[1msrc/function.c:810:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |   if (i == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  811 |     o = variable_buffer_output (o, p, end_p - p);[0m
      | [0;1;32m                                                 
[0m[1msrc/function.c:825:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  825 |   if (start < 1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  826 |     OSS (fatal, *expanding_var, "%s: '%s'", badfirst, make_lltoa (start, buf));[0m
      | [0;1;32m                                                                               
[0m[1msrc/function.c:829:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |   if (stop < 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  830 |     OSS (fatal, *expanding_var, "%s: '%s'", badsecond, make_lltoa (stop, buf));[0m
      | [0;1;32m                                                                               
[0m[1msrc/function.c:840:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  840 |       while (((p = find_next_token (&end_p, 0)) != 0) && --start)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  841 |         ;[0m
      | [0;1;32m         
[0m[1msrc/function.c:846:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |           while (--count && (find_next_token (&end_p, 0) != 0))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  847 |             ;[0m
      | [0;1;32m             
[0m[1msrc/function.c:861:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |   if (strstr (argv[1], argv[0]) != 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  862 |     o = variable_buffer_output (o, argv[0], strlen (argv[0]));[0m
      | [0;1;32m                                                              
[0m[1msrc/function.c:904:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  904 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  905 |     /* Kill the last space.  */[0m
  906 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:950:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  950 |   if (vp)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  951 |     define_variable (vp, vlen, next_token (list_iterator), o_automatic, 0);[0m
      | [0;1;32m                                                                           
[0m[1msrc/function.c:991:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  991 |   if (ax->length != ay->length)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  992 |     return ax->length > ay->length ? 1 : -1;[0m
      | [0;1;32m                                            
[0m[1msrc/function.c:1026:11: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores][0m
 1026 |   while ((p = find_next_token (&cp, NULL)) != 0)[0m
      | [0;1;32m          ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:1026:11: [0m[0;1;36mnote: [0mAlthough the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p'[0m
 1026 |   while ((p = find_next_token (&cp, NULL)) != 0)[0m
      | [0;1;32m          ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:1026:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1026 |   while ((p = find_next_token (&cp, NULL)) != 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1027 |     ++word_count;[0m
      | [0;1;32m                 
[0m[1msrc/function.c:1029:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1029 |   if (!word_count)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1030 |     return o;[0m
      | [0;1;32m             
[0m[1msrc/function.c:1037:11: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores][0m
 1037 |   while ((p = find_next_token (&cp, NULL)) != 0)[0m
      | [0;1;32m          ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:1037:11: [0m[0;1;36mnote: [0mAlthough the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p'[0m
 1037 |   while ((p = find_next_token (&cp, NULL)) != 0)[0m
      | [0;1;32m          ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:1037:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1037 |   while ((p = find_next_token (&cp, NULL)) != 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1038 |     ++pat_count;[0m
      | [0;1;32m                
[0m[1msrc/function.c:1049:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1049 |       if (*cp != '\0')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1050 |         ++cp;[0m
      | [0;1;32m             
[0m[1msrc/function.c:1055:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1055 |       if (pp->percent == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1056 |         literals++;[0m
      | [0;1;32m                   
[0m[1msrc/function.c:1069:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1069 |       if (*cp != '\0')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1070 |         ++cp;[0m
      | [0;1;32m             
[0m[1msrc/function.c:1087:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1087 |           if (owp)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1088 |             wp->chain = owp;[0m
      | [0;1;32m                            
[0m[1msrc/function.c:1095:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1095 |       if (pp->percent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1096 |         for (wp = words; wp < word_end; ++wp)[0m
 1097 |           wp->matched |= pattern_matches (pp->str, pp->percent, wp->str);[0m
 1098 |       else if (hashing)[0m
      | [0;32m      } 
[0m[1msrc/function.c:1096:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |         for (wp = words; wp < word_end; ++wp)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1097 |           wp->matched |= pattern_matches (pp->str, pp->percent, wp->str);[0m
      | [0;1;32m                                                                         
[0m[1msrc/function.c:1110:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1110 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1111 |         for (wp = words; wp < word_end; ++wp)[0m
 1112 |           wp->matched |= (wp->length == pp->length[0m
 1113 |                           && memcmp (pp->str, wp->str, wp->length) == 0);[0m
      | [0;1;32m                                                                         
[0m[1msrc/function.c:1111:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1111 |         for (wp = words; wp < word_end; ++wp)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1112 |           wp->matched |= (wp->length == pp->length[0m
 1113 |                           && memcmp (pp->str, wp->str, wp->length) == 0);[0m
      | [0;1;32m                                                                         
[0m[1msrc/function.c:1117:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |   for (wp = words; wp < word_end; ++wp)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1118 |     if (is_filter ? wp->matched : !wp->matched)[0m
 1119 |       {[0m
 1120 |         o = variable_buffer_output (o, wp->str, strlen (wp->str));[0m
 1121 |         o = variable_buffer_output (o, " ", 1);[0m
 1122 |         doneany = 1;[0m
 1123 |       }[0m
      | [0;1;32m       
[0m[1msrc/function.c:1125:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1126 |     /* Kill the last space.  */[0m
 1127 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:1129:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1129 |   if (hashing)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1130 |     hash_free (&a_word_table, 0);[0m
      | [0;1;32m                                 
[0m[1msrc/function.c:1154:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1154 |       if (!i)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1155 |         break;[0m
      | [0;1;32m              
[0m[1msrc/function.c:1161:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1161 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1162 |     /* Kill the last space.  */[0m
 1163 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:1177:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1177 |       OS (fatal, reading_file, "%s", argv[0]);[0m
      | [0;1;32m          ^                                  
[0m      | [0;32m      {                                      ;} 
[0m[1msrc/makeint.h:552:31: [0m[0;1;36mnote: [0mexpanded from macro 'OS'[0m
  552 | #define OS(_t,_a,_f,_s)       _t((_a), strlen (_s), (_f), (_s))[0m
      | [0;1;32m                              ^
[0m[1msrc/function.c:1180:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1180 |       OS (error, reading_file, "%s", argv[0]);[0m
      | [0;1;32m          ^
[0m      | [0;32m      {
[0m 1181 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/makeint.h:552:31: [0m[0;1;36mnote: [0mexpanded from macro 'OS'[0m
  552 | #define OS(_t,_a,_f,_s)       _t((_a), strlen (_s), (_f), (_s))[0m
      | [0;1;32m                              ^
[0m[1msrc/function.c:1187:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1187 |         memcpy (msg, argv[0], len);[0m
      | [0;1;32m        ^~~~~~
[0m[1msrc/function.c:1187:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1187 |         memcpy (msg, argv[0], len);[0m
      | [0;1;32m        ^~~~~~
[0m[1msrc/function.c:1195:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1195 |       OS (fatal, *expanding_var, "Internal error: func_error: '%s'", funcname);[0m
      | [0;1;32m          ^                                                                   
[0m      | [0;32m      {                                                                       ;} 
[0m[1msrc/makeint.h:552:31: [0m[0;1;36mnote: [0mexpanded from macro 'OS'[0m
  552 | #define OS(_t,_a,_f,_s)       _t((_a), strlen (_s), (_f), (_s))[0m
      | [0;1;32m                              ^
[0m[1msrc/function.c:1218:11: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores][0m
 1218 |   while ((p = find_next_token (&t, NULL)) != 0)[0m
      | [0;1;32m          ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:1218:11: [0m[0;1;36mnote: [0mAlthough the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p'[0m
 1218 |   while ((p = find_next_token (&t, NULL)) != 0)[0m
      | [0;1;32m          ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:1283:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1283 |   if (*p == '\0')[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1284 |     OS (fatal, *expanding_var, _("%s: empty value"), msg);[0m
      | [0;1;32m                                                          
[0m[1msrc/function.c:1289:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1289 |   while (*p == '0')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1290 |     p++;[0m
      | [0;1;32m        
[0m[1msrc/function.c:1293:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |   while (ISDIGIT (*p))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1294 |     ++p;[0m
      | [0;1;32m        
[0m[1msrc/function.c:1300:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1300 |   if (after_number == after_sign || *next_token (p) != '\0')[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1301 |     OSS (fatal, *expanding_var, "%s: '%s'", msg, number);[0m
      | [0;1;32m                                                         
[0m[1msrc/function.c:1337:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1337 |       if (cmp == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1338 |         cmp = memcmp (lnum, rnum, llen);[0m
      | [0;1;32m                                        
[0m[1msrc/function.c:1346:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1346 |       if (lsign < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1347 |         o = variable_buffer_output (o, "-", 1);[0m
      | [0;1;32m                                               
[0m[1msrc/function.c:1357:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |       if (cmp > 0 && *argv && *(argv + 1))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1358 |         ++argv;[0m
      | [0;1;32m               
[0m[1msrc/function.c:1452:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1452 |       if (begp > endp)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1453 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/function.c:1501:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1501 |       if (begp > endp)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1502 |         return o;[0m
      | [0;1;32m                 
[0m[1msrc/function.c:1508:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1508 |       if (!result)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1509 |         break;[0m
      | [0;1;32m              
[0m[1msrc/function.c:1514:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1514 |       if (*(++argv))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1515 |         free (expansion);[0m
 1516 |       else[0m
      | [0;32m      } 
[0m[1msrc/function.c:1574:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1574 |   if (v)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1575 |     o = variable_buffer_output (o, v->value, strlen (v->value));[0m
      | [0;1;32m                                                                
[0m[1msrc/function.c:1592:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1592 |       if (src[0] == '\r' && src[1] == '\n')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1593 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/function.c:1605:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1605 |   if (!trim_newlines && (last_nonnl < (dst - 2)))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1606 |     last_nonnl = dst - 2;[0m
      | [0;1;32m                         
[0m[1msrc/function.c:1621:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1621 |   if (exit_sig == 0 && exit_code == 127)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1622 |     shell_function_completed = -1;[0m
 1623 |   else[0m
      | [0;32m  } 
[0m[1msrc/function.c:1623:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1623 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1624 |     shell_function_completed = 1;[0m
      | [0;1;32m                                 
[0m[1msrc/function.c:1626:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1626 |   if (exit_code == 0 && exit_sig > 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1627 |     exit_code = 128 + exit_sig;[0m
      | [0;1;32m                               
[0m[1msrc/function.c:1629:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1629 |   sprintf (buf, "%d", exit_code);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/function.c:1629:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1629 |   sprintf (buf, "%d", exit_code);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/function.c:1907:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'pid' is never read [clang-analyzer-deadcode.DeadStores][0m
 1907 |       pid = -1;[0m
      | [0;1;32m      ^     ~~
[0m[1msrc/function.c:1907:7: [0m[0;1;36mnote: [0mValue stored to 'pid' is never read[0m
 1907 |       pid = -1;[0m
      | [0;1;32m      ^     ~~
[0m[1msrc/function.c:1941:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1941 |     if (pipedes[1] >= 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1942 |       close (pipedes[1]);[0m
      | [0;1;32m                         
[0m[1msrc/function.c:1960:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1960 |         if (cc <= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1961 |           break;[0m
      | [0;1;32m                
[0m[1msrc/function.c:1978:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1978 |     while (shell_function_completed == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1979 |       reap_children (1, 0);[0m
      | [0;1;32m                           
[0m[1msrc/function.c:2158:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2158 |   if (name[0] == '\0')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2159 |     return NULL;[0m
      | [0;1;32m                
[0m[1msrc/function.c:2166:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2166 |       if (!starting_directory)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2167 |         return NULL;[0m
      | [0;1;32m                    
[0m[1msrc/function.c:2169:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 2169 |       strcpy (apath, starting_directory);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:2169:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 2169 |       strcpy (apath, starting_directory);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:2197:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2197 |       memcpy (apath, name, root_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:2197:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2197 |       memcpy (apath, name, root_len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:2218:16: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'end' is used in the enclosing expression, the value is never actually read from 'end' [clang-analyzer-deadcode.DeadStores][0m
 2218 |   for (start = end = name; *start != '\0'; start = end)[0m
      | [0;1;32m               ^     ~~~~
[0m[1msrc/function.c:2218:16: [0m[0;1;36mnote: [0mAlthough the value stored to 'end' is used in the enclosing expression, the value is never actually read from 'end'[0m
 2218 |   for (start = end = name; *start != '\0'; start = end)[0m
      | [0;1;32m               ^     ~~~~
[0m[1msrc/function.c:2223:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2223 |       while (ISDIRSEP (*start))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2224 |         ++start;[0m
      | [0;1;32m                
[0m[1msrc/function.c:2227:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2227 |       for (end = start; ! STOP_SET (*end, MAP_DIRSEP|MAP_NUL); ++end)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 2228 |         ;[0m
      | [0;1;32m         
[0m[1msrc/function.c:2232:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2232 |       if (len == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2233 |         break;[0m
 2234 |       else if (len == 1 && start[0] == '.')[0m
      | [0;32m      } 
[0m[1msrc/function.c:2234:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2234 |       else if (len == 1 && start[0] == '.')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2235 |         /* nothing */;[0m
 2236 |       else if (len == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;32m      } 
[0m[1msrc/function.c:2239:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2239 |           if (dest > apath + root_len)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2240 |             for (--dest; ! ISDIRSEP (dest[-1]); --dest)[0m
 2241 |               ;[0m
      | [0;1;32m               
[0m[1msrc/function.c:2240:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2240 |             for (--dest; ! ISDIRSEP (dest[-1]); --dest)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2241 |               ;[0m
      | [0;1;32m               
[0m[1msrc/function.c:2245:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2245 |           if (! ISDIRSEP (dest[-1]))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2246 |             *dest++ = '/';[0m
      | [0;1;32m                          
[0m[1msrc/function.c:2248:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2248 |           if (dest + len >= apath_limit)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2249 |             return NULL;[0m
      | [0;1;32m                        
[0m[1msrc/function.c:2257:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2257 |   if (dest > apath + root_len && ISDIRSEP (dest[-1]))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2258 |     --dest;[0m
      | [0;1;32m           
[0m[1msrc/function.c:2284:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2284 |           strncpy (in, path, len);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/function.c:2284:11: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2284 |           strncpy (in, path, len);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/function.c:2317:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2317 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2318 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:2347:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2347 |       if (start[0] == '\0')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2348 |         O (fatal, *expanding_var, _("file: missing filename"));[0m
      | [0;1;32m                                                               
[0m[1msrc/function.c:2353:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2353 |       memcpy (nm, start, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:2353:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2353 |       memcpy (nm, start, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:2357:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2357 |       if (fp == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2358 |         OSS (fatal, reading_file, _("open: %s: %s"), nm, strerror (errno));[0m
      | [0;1;32m                                                                           
[0m[1msrc/function.c:2370:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2370 |           if (fputs (argv[1], fp) == EOF || (nl && fputc ('\n', fp) == EOF))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2371 |             OSS (fatal, reading_file, _("write: %s: %s"), nm, strerror (errno));[0m
      | [0;1;32m                                                                                
[0m[1msrc/function.c:2373:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2373 |       if (fclose (fp))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2374 |         OSS (fatal, reading_file, _("close: %s: %s"), nm, strerror (errno));[0m
      | [0;1;32m                                                                            
[0m[1msrc/function.c:2387:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2387 |       if (start[0] == '\0')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2388 |         O (fatal, *expanding_var, _("file: missing filename"));[0m
      | [0;1;32m                                                               
[0m[1msrc/function.c:2390:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2390 |       if (argv[1])[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2391 |         O (fatal, *expanding_var, _("file: too many arguments"));[0m
      | [0;1;32m                                                                 
[0m[1msrc/function.c:2396:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2396 |       memcpy (nm, start, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:2396:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2396 |       memcpy (nm, start, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/function.c:2414:22: [0m[0;1;35mwarning: [0m[1mFile position of the stream might be 'indeterminate' after a failed operation. Can cause undefined behavior [clang-analyzer-unix.Stream][0m
 2414 |           size_t l = fread (buf, 1, sizeof (buf), fp);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2328:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2328 |   if (fn[0] == '>')[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msrc/function.c:2328:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2328 |   if (fn[0] == '>')[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2376:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2376 |   else if (fn[0] == '<')[0m
      | [0;1;32m           ^~~~~~~~~~~~
[0m[1msrc/function.c:2376:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 2376 |   else if (fn[0] == '<')[0m
      | [0;1;32m       ^
[0m[1msrc/function.c:2387:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2387 |       if (start[0] == '\0')[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2387:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2387 |       if (start[0] == '\0')[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2390:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2390 |       if (argv[1])[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/function.c:2390:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2390 |       if (argv[1])[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2399:7: [0m[0;1;36mnote: [0m'fp' is not equal to null[0m
 2399 |       ENULLLOOP (fp, fopen (nm, "r"));[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:884:34: [0m[0;1;36mnote: [0mexpanded from macro 'ENULLLOOP'[0m
  884 |                            while((_v)==0 && errno==EINTR)[0m
      | [0;1;32m                                 ^~~~
[0m[1msrc/function.c:2399:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2399 |       ENULLLOOP (fp, fopen (nm, "r"));[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:884:42: [0m[0;1;36mnote: [0mexpanded from macro 'ENULLLOOP'[0m
  884 |                            while((_v)==0 && errno==EINTR)[0m
      | [0;1;32m                                         ^
[0m[1msrc/function.c:2399:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 2399 |       ENULLLOOP (fp, fopen (nm, "r"));[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:883:28: [0m[0;1;36mnote: [0mexpanded from macro 'ENULLLOOP'[0m
  883 | #define ENULLLOOP(_v,_c)   do { errno = 0; (_v) = _c; } \[0m
      | [0;1;32m                           ^
[0m[1msrc/function.c:2400:11: [0m[0;1;36mnote: [0m'fp' is not equal to NULL[0m
 2400 |       if (fp == NULL)[0m
      | [0;1;32m          ^~
[0m[1msrc/function.c:2400:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2400 |       if (fp == NULL)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2411:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2411 |       while (1)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2414:22: [0m[0;1;36mnote: [0mAssuming this stream operation fails[0m
 2414 |           size_t l = fread (buf, 1, sizeof (buf), fp);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2415:15: [0m[0;1;36mnote: [0mAssuming 'l' is <= 0[0m
 2415 |           if (l > 0)[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2415:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 2415 |           if (l > 0)[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2420:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 2420 |           if (ferror (fp))[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2421:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2421 |             if (errno != EINTR)[0m
      | [0;1;32m                ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^
[0m[1msrc/function.c:2421:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2421 |             if (errno != EINTR)[0m
      | [0;1;32m            ^
[0m[1msrc/function.c:2423:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 2423 |           if (feof (fp))[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2411:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2411 |       while (1)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2414:22: [0m[0;1;36mnote: [0mFile position of the stream might be 'indeterminate' after a failed operation. Can cause undefined behavior[0m
 2414 |           size_t l = fread (buf, 1, sizeof (buf), fp);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2420:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2420 |           if (ferror (fp))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2421 |             if (errno != EINTR)[0m
 2422 |               OSS (fatal, reading_file, _("read: %s: %s"), nm, strerror (errno));[0m
      | [0;1;32m                                                                                 
[0m[1msrc/function.c:2421:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2421 |             if (errno != EINTR)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2422 |               OSS (fatal, reading_file, _("read: %s: %s"), nm, strerror (errno));[0m
      | [0;1;32m                                                                                 
[0m[1msrc/function.c:2423:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2423 |           if (feof (fp))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2424 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/function.c:2426:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2426 |       if (fclose (fp))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2427 |         OSS (fatal, reading_file, _("close: %s: %s"), nm, strerror (errno));[0m
      | [0;1;32m                                                                            
[0m[1msrc/function.c:2430:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2430 |       if (n && o[-1] == '\n')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2431 |         o -= 1 + (n > 1 && o[-2] == '\r');[0m
      | [0;1;32m                                          
[0m[1msrc/function.c:2433:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2433 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2434 |     OS (fatal, *expanding_var, _("file: invalid file operation: %s"), fn);[0m
      | [0;1;32m                                                                          
[0m[1msrc/function.c:2455:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2455 |           strncpy (in, path, len);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/function.c:2455:11: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2455 |           strncpy (in, path, len);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/function.c:2468:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2468 |   if (doneany)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2469 |     --o;[0m
      | [0;1;32m        
[0m[1msrc/function.c:2550:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2550 |   if (argc < entry_p->minimum_args)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2551 |     fatal (*expanding_var, strlen (entry_p->name),[0m
 2552 |            _("insufficient number of arguments (%u) to function '%s'"),[0m
 2553 |            argc, entry_p->name);[0m
      | [0;1;32m                                
[0m[1msrc/function.c:2559:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2559 |   if (!argc && !entry_p->alloc_fn)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2560 |     return o;[0m
      | [0;1;32m             
[0m[1msrc/function.c:2562:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2562 |   if (!entry_p->fptr.func_ptr)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2563 |     OS (fatal, *expanding_var,[0m
 2564 |         _("unimplemented on this platform: function '%s'"), entry_p->name);[0m
      | [0;1;32m                                                                           
[0m[1msrc/function.c:2566:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2566 |   if (entry_p->adds_command)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2567 |     ++command_count;[0m
      | [0;1;32m                    
[0m[1msrc/function.c:2569:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2569 |   if (!entry_p->alloc_fn)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2570 |     return entry_p->fptr.func_ptr (o, argv, entry_p->name);[0m
      | [0;1;32m                                                           
[0m[1msrc/function.c:2607:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2607 |   if (!entry_p)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2608 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/function.c:2621:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2621 |   for (nargs=1, end=beg; *end != '\0'; ++end)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
 2623 |       continue;[0m
 2624 |     else if (*end == ',')[0m
 2625 |       ++nargs;[0m
 2626 |     else if (*end == openparen)[0m
 2627 |       ++count;[0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
 2629 |       break;[0m
      | [0;1;32m            
[0m[1msrc/function.c:2622:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2623 |       continue;[0m
 2624 |     else if (*end == ',')[0m
      | [0;32m    } 
[0m[1msrc/function.c:2624:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2624 |     else if (*end == ',')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2625 |       ++nargs;[0m
 2626 |     else if (*end == openparen)[0m
      | [0;32m    } 
[0m[1msrc/function.c:2626:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2626 |     else if (*end == openparen)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2627 |       ++count;[0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
      | [0;32m    } 
[0m[1msrc/function.c:2628:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 2629 |       break;[0m
      | [0;1;32m            
[0m[1msrc/function.c:2631:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2631 |   if (count >= 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2632 |     fatal (*expanding_var, strlen (entry_p->name),[0m
 2633 |            _("unterminated call to function '%s': missing '%c'"),[0m
 2634 |            entry_p->name, closeparen);[0m
      | [0;1;32m                                      
[0m[1msrc/function.c:2659:88: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2659 |               || ((next = find_next_argument (openparen, closeparen, p, end)) == NULL))[0m
      | [0;1;32m                                                                                       ^
[0m      | [0;32m                                                                                        {
[0m 2660 |             next = end;[0m
      | [0;1;32m                       
[0m[1msrc/function.c:2662:11: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the memory returned by 'alloca' [clang-analyzer-security.ArrayBound][0m
 2662 |           *argvp = expand_argument (p, next);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/function.c:2595:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2595 |   char closeparen = openparen == '(' ? ')' : '}';[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2595:21: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1msrc/function.c:2607:7: [0m[0;1;36mnote: [0mAssuming 'entry_p' is non-null[0m
 2607 |   if (!entry_p)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1msrc/function.c:2607:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2607 |   if (!entry_p)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2614:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2621[0m
 2614 |   NEXT_TOKEN (beg);[0m
      | [0;1;32m  ^
[0m[1msrc/makeint.h:473:25: [0m[0;1;36mnote: [0mexpanded from macro 'NEXT_TOKEN'[0m
  473 | #define NEXT_TOKEN(s)   while (ISSPACE (*(s))) ++(s)[0m
      | [0;1;32m                        ^
[0m[1msrc/function.c:2621:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2621 |   for (nargs=1, end=beg; *end != '\0'; ++end)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2622:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2622:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m    ^
[0m[1msrc/function.c:2624:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2624 |     else if (*end == ',')[0m
      | [0;1;32m             ^~~~~~~~~~~
[0m[1msrc/function.c:2624:10: [0m[0;1;36mnote: [0mTaking false branch[0m
 2624 |     else if (*end == ',')[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2626:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2626 |     else if (*end == openparen)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2626:10: [0m[0;1;36mnote: [0mTaking false branch[0m
 2626 |     else if (*end == openparen)[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2628:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2628:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/function.c:2628:10: [0m[0;1;36mnote: [0mTaking true branch[0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2629:7: [0m[0;1;36mnote: [0m Execution continues on line 2631[0m
 2629 |       break;[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2631:7: [0m[0;1;36mnote: [0m'count' is < 0[0m
 2631 |   if (count >= 0)[0m
      | [0;1;32m      ^~~~~
[0m[1msrc/function.c:2631:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2631 |   if (count >= 0)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2649:7: [0m[0;1;36mnote: [0mAssuming field 'expand_args' is not equal to 0[0m
 2649 |   if (entry_p->expand_args)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2649:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2649 |   if (entry_p->expand_args)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2652:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0mAssuming 'nargs' is equal to field 'maximum_args'[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2659:15: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2659 |               || ((next = find_next_argument (openparen, closeparen, p, end)) == NULL))[0m
      | [0;1;32m              ^
[0m[1msrc/function.c:2652:28: [0m[0;1;36mnote: [0mAssuming 'p' is <= 'end'[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m                           ^~~~~~~~
[0m[1msrc/function.c:2652:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0m'nargs' is not equal to field 'maximum_args'[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/function.c:2659:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2659 |               || ((next = find_next_argument (openparen, closeparen, p, end)) == NULL))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2658:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2652:28: [0m[0;1;36mnote: [0m'p' is <= 'end'[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m                           ^
[0m[1msrc/function.c:2652:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0m'nargs' is not equal to field 'maximum_args'[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/function.c:2659:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2659 |               || ((next = find_next_argument (openparen, closeparen, p, end)) == NULL))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2658:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2652:28: [0m[0;1;36mnote: [0m'p' is <= 'end'[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m                           ^
[0m[1msrc/function.c:2652:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0m'nargs' is not equal to field 'maximum_args'[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/function.c:2659:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2659 |               || ((next = find_next_argument (openparen, closeparen, p, end)) == NULL))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2658:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2662:11: [0m[0;1;36mnote: [0mAccess of the memory returned by 'alloca' at index 3, while it holds only 3 'char *' elements[0m
 2662 |           *argvp = expand_argument (p, next);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/function.c:2682:89: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2682 |               || ((next = find_next_argument (openparen, closeparen, p, aend)) == NULL))[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m 2683 |             next = aend;[0m
      | [0;1;32m                        
[0m[1msrc/function.c:2685:11: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the memory returned by 'alloca' [clang-analyzer-security.ArrayBound][0m
 2685 |           *argvp = p;[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/function.c:2595:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2595 |   char closeparen = openparen == '(' ? ')' : '}';[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2595:21: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1msrc/function.c:2607:7: [0m[0;1;36mnote: [0mAssuming 'entry_p' is non-null[0m
 2607 |   if (!entry_p)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1msrc/function.c:2607:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2607 |   if (!entry_p)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2614:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2621[0m
 2614 |   NEXT_TOKEN (beg);[0m
      | [0;1;32m  ^
[0m[1msrc/makeint.h:473:25: [0m[0;1;36mnote: [0mexpanded from macro 'NEXT_TOKEN'[0m
  473 | #define NEXT_TOKEN(s)   while (ISSPACE (*(s))) ++(s)[0m
      | [0;1;32m                        ^
[0m[1msrc/function.c:2621:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2621 |   for (nargs=1, end=beg; *end != '\0'; ++end)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2622:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2622:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m    ^
[0m[1msrc/function.c:2623:7: [0m[0;1;36mnote: [0m Execution continues on line 2621[0m
 2623 |       continue;[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2621:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2621 |   for (nargs=1, end=beg; *end != '\0'; ++end)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2622:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2622:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m    ^
[0m[1msrc/function.c:2624:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2624 |     else if (*end == ',')[0m
      | [0;1;32m             ^~~~~~~~~~~
[0m[1msrc/function.c:2624:10: [0m[0;1;36mnote: [0mTaking false branch[0m
 2624 |     else if (*end == ',')[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2626:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2626 |     else if (*end == openparen)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2626:10: [0m[0;1;36mnote: [0mTaking false branch[0m
 2626 |     else if (*end == openparen)[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2628:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2628:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/function.c:2628:10: [0m[0;1;36mnote: [0mTaking true branch[0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2629:7: [0m[0;1;36mnote: [0m Execution continues on line 2631[0m
 2629 |       break;[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2631:7: [0m[0;1;36mnote: [0m'count' is < 0[0m
 2631 |   if (count >= 0)[0m
      | [0;1;32m      ^~~~~
[0m[1msrc/function.c:2631:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2631 |   if (count >= 0)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2649:7: [0m[0;1;36mnote: [0mAssuming field 'expand_args' is 0[0m
 2649 |   if (entry_p->expand_args)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2649:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2649 |   if (entry_p->expand_args)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2675:29: [0m[0;1;36mnote: [0mAssuming 'p' is <= 'aend'[0m
 2675 |       for (p=abeg, nargs=0; p <= aend; ++argvp)[0m
      | [0;1;32m                            ^~~~~~~~~
[0m[1msrc/function.c:2675:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2675 |       for (p=abeg, nargs=0; p <= aend; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2681:15: [0m[0;1;36mnote: [0mAssuming 'nargs' is equal to field 'maximum_args'[0m
 2681 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2682:15: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2682 |               || ((next = find_next_argument (openparen, closeparen, p, aend)) == NULL))[0m
      | [0;1;32m              ^
[0m[1msrc/function.c:2675:29: [0m[0;1;36mnote: [0mAssuming 'p' is <= 'aend'[0m
 2675 |       for (p=abeg, nargs=0; p <= aend; ++argvp)[0m
      | [0;1;32m                            ^~~~~~~~~
[0m[1msrc/function.c:2675:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2675 |       for (p=abeg, nargs=0; p <= aend; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2681:15: [0m[0;1;36mnote: [0m'nargs' is not equal to field 'maximum_args'[0m
 2681 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2681:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/function.c:2682:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2682 |               || ((next = find_next_argument (openparen, closeparen, p, aend)) == NULL))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2681:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 2681 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2675:29: [0m[0;1;36mnote: [0m'p' is <= 'aend'[0m
 2675 |       for (p=abeg, nargs=0; p <= aend; ++argvp)[0m
      | [0;1;32m                            ^
[0m[1msrc/function.c:2675:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2675 |       for (p=abeg, nargs=0; p <= aend; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2681:15: [0m[0;1;36mnote: [0m'nargs' is not equal to field 'maximum_args'[0m
 2681 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2681:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/function.c:2682:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2682 |               || ((next = find_next_argument (openparen, closeparen, p, aend)) == NULL))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2681:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 2681 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2675:29: [0m[0;1;36mnote: [0m'p' is <= 'aend'[0m
 2675 |       for (p=abeg, nargs=0; p <= aend; ++argvp)[0m
      | [0;1;32m                            ^
[0m[1msrc/function.c:2675:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2675 |       for (p=abeg, nargs=0; p <= aend; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2681:15: [0m[0;1;36mnote: [0m'nargs' is not equal to field 'maximum_args'[0m
 2681 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2681:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/function.c:2682:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2682 |               || ((next = find_next_argument (openparen, closeparen, p, aend)) == NULL))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2681:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 2681 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2685:11: [0m[0;1;36mnote: [0mAccess of the memory returned by 'alloca' at index 3, while it holds only 3 'char *' elements[0m
 2685 |           *argvp = p;[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/function.c:2690:3: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the memory returned by 'alloca' [clang-analyzer-security.ArrayBound][0m
 2690 |   *argvp = NULL;[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/function.c:2595:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2595 |   char closeparen = openparen == '(' ? ')' : '}';[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2595:21: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1msrc/function.c:2607:7: [0m[0;1;36mnote: [0mAssuming 'entry_p' is non-null[0m
 2607 |   if (!entry_p)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1msrc/function.c:2607:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2607 |   if (!entry_p)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2614:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2621[0m
 2614 |   NEXT_TOKEN (beg);[0m
      | [0;1;32m  ^
[0m[1msrc/makeint.h:473:25: [0m[0;1;36mnote: [0mexpanded from macro 'NEXT_TOKEN'[0m
  473 | #define NEXT_TOKEN(s)   while (ISSPACE (*(s))) ++(s)[0m
      | [0;1;32m                        ^
[0m[1msrc/function.c:2621:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2621 |   for (nargs=1, end=beg; *end != '\0'; ++end)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2622:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2622:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 2622 |     if (!STOP_SET (*end, MAP_VARSEP|MAP_COMMA))[0m
      | [0;1;32m    ^
[0m[1msrc/function.c:2624:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2624 |     else if (*end == ',')[0m
      | [0;1;32m             ^~~~~~~~~~~
[0m[1msrc/function.c:2624:10: [0m[0;1;36mnote: [0mTaking false branch[0m
 2624 |     else if (*end == ',')[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2626:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2626 |     else if (*end == openparen)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2626:10: [0m[0;1;36mnote: [0mTaking false branch[0m
 2626 |     else if (*end == openparen)[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2628:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2628:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/function.c:2628:10: [0m[0;1;36mnote: [0mTaking true branch[0m
 2628 |     else if (*end == closeparen && --count < 0)[0m
      | [0;1;32m         ^
[0m[1msrc/function.c:2629:7: [0m[0;1;36mnote: [0m Execution continues on line 2631[0m
 2629 |       break;[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2631:7: [0m[0;1;36mnote: [0m'count' is < 0[0m
 2631 |   if (count >= 0)[0m
      | [0;1;32m      ^~~~~
[0m[1msrc/function.c:2631:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2631 |   if (count >= 0)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2649:7: [0m[0;1;36mnote: [0mAssuming field 'expand_args' is not equal to 0[0m
 2649 |   if (entry_p->expand_args)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2649:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2649 |   if (entry_p->expand_args)[0m
      | [0;1;32m  ^
[0m[1msrc/function.c:2652:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0mAssuming 'nargs' is equal to field 'maximum_args'[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2659:15: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 2659 |               || ((next = find_next_argument (openparen, closeparen, p, end)) == NULL))[0m
      | [0;1;32m              ^
[0m[1msrc/function.c:2652:28: [0m[0;1;36mnote: [0mAssuming 'p' is <= 'end'[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m                           ^~~~~~~~
[0m[1msrc/function.c:2652:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0m'nargs' is not equal to field 'maximum_args'[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/function.c:2659:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2659 |               || ((next = find_next_argument (openparen, closeparen, p, end)) == NULL))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2658:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2652:28: [0m[0;1;36mnote: [0m'p' is <= 'end'[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m                           ^
[0m[1msrc/function.c:2652:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0m'nargs' is not equal to field 'maximum_args'[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m              ^~~~~
[0m[1msrc/function.c:2658:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/function.c:2659:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2659 |               || ((next = find_next_argument (openparen, closeparen, p, end)) == NULL))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/function.c:2658:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 2658 |           if (nargs == entry_p->maximum_args[0m
      | [0;1;32m          ^
[0m[1msrc/function.c:2652:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2690[0m
 2652 |       for (p=beg, nargs=0; p <= end; ++argvp)[0m
      | [0;1;32m      ^
[0m[1msrc/function.c:2690:3: [0m[0;1;36mnote: [0mAccess of the memory returned by 'alloca' at index 3, while it holds only 3 'char *' elements[0m
 2690 |   *argvp = NULL;[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/function.c:2696:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2696 |   if (entry_p->expand_args)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2697 |     for (argvp=argv; *argvp != 0; ++argvp)[0m
 2698 |       free (*argvp);[0m
 2699 |   else[0m
      | [0;32m  } 
[0m[1msrc/function.c:2697:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2697 |     for (argvp=argv; *argvp != 0; ++argvp)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2698 |       free (*argvp);[0m
      | [0;1;32m                    
[0m[1msrc/function.c:2699:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2699 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2700 |     free (abeg);[0m
      | [0;1;32m                
[0m[1msrc/function.c:2727:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2727 |   if (*fname == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2728 |     return o;[0m
      | [0;1;32m             
[0m[1msrc/function.c:2736:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2736 |       for (i=0; argv[i+1]; ++i)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2737 |         ;[0m
      | [0;1;32m         
[0m[1msrc/function.c:2747:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2747 |   if (v == 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2748 |     warn_undefined (fname, flen);[0m
      | [0;1;32m                                 
[0m[1msrc/function.c:2750:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2750 |   if (v == 0 || *v->value == '\0')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2751 |     return o;[0m
      | [0;1;32m             
[0m[1msrc/function.c:2756:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2756 |   memcpy (body + 2, fname, flen);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/function.c:2756:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2756 |   memcpy (body + 2, fname, flen);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/function.c:2768:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2768 |       sprintf (num, "%u", i);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/function.c:2768:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2768 |       sprintf (num, "%u", i);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/function.c:2781:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2781 |       sprintf (num, "%u", i);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/function.c:2781:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2781 |       sprintf (num, "%u", i);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/function.c:2811:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2811 |   while (STOP_SET (*e, MAP_USERFUNC))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2812 |     e++;[0m
      | [0;1;32m        
[0m[1msrc/function.c:2815:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2815 |   if (len == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2816 |     O (fatal, flocp, _("Empty function name"));[0m
      | [0;1;32m                                               
[0m[1msrc/function.c:2817:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2817 |   if (*name == '.' || *e != '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2818 |     OS (fatal, flocp, _("Invalid function name: %s"), name);[0m
      | [0;1;32m                                                            
[0m[1msrc/function.c:2819:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2819 |   if (len > 255)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2820 |     OS (fatal, flocp, _("Function name too long: %s"), name);[0m
      | [0;1;32m                                                             
[0m[1msrc/function.c:2821:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2821 |   if (min > 255)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2822 |     ONS (fatal, flocp,[0m
 2823 |          _("Invalid minimum argument count (%u) for function %s"), min, name);[0m
      | [0;1;32m                                                                              
[0m[1msrc/function.c:2824:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2824 |   if (max > 255 || (max && max < min))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2825 |     ONS (fatal, flocp,[0m
 2826 |          _("Invalid maximum argument count (%u) for function %s"), max, name);[0m
      | [0;1;32m                                                                              
[0m192 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[28/32][217.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmptbs691wf.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/job.c
[1msrc/job.c:223:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  223 |   sprintf (pidstring, "%lu", (unsigned long) pid);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/job.c:223:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  223 |   sprintf (pidstring, "%lu", (unsigned long) pid);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/job.c:451:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |   while (cp > path && !ISDIRSEP (cp[-1]))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  452 |     --cp;[0m
      | [0;1;32m         
[0m[1msrc/job.c:462:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |       if (strcmp (cp, *s) == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  463 | #endif[0m
  464 |         return 1; /* a known unix-style shell */[0m
      | [0;1;32m                                                
[0m[1msrc/job.c:545:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (ignored && run_silent)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  546 |     return;[0m
      | [0;1;32m           
[0m[1msrc/job.c:548:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |   if (exit_sig && coredump)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  549 |     dump = _(" (core dumped)");[0m
      | [0;1;32m                               
[0m[1msrc/job.c:557:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  557 |   if (! flocp->filenm)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  558 |     nm = _("<builtin>");[0m
  559 |   else[0m
      | [0;32m  } 
[0m[1msrc/job.c:562:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  562 |       sprintf (a, "%s:%lu", flocp->filenm, flocp->lineno + flocp->offset);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/job.c:562:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  562 |       sprintf (a, "%s:%lu", flocp->filenm, flocp->lineno + flocp->offset);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/job.c:573:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  573 |       sprintf (a, SHUFFLE_PREFIX "%s", smode);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/job.c:573:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  573 |       sprintf (a, SHUFFLE_PREFIX "%s", smode);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/job.c:583:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |   if (exit_sig == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  584 |     error (NILF, l + INTSTR_LENGTH, _("%s[%s: %s] Error %d%s%s"),[0m
  585 |            pre, nm, f->name, exit_code, post, smode ? smode : "");[0m
  586 |   else[0m
      | [0;32m  } 
[0m[1msrc/job.c:673:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |           if (!printed)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  674 |             O (error, NILF, _("*** Waiting for unfinished jobs...."));[0m
      | [0;1;32m                                                                      
[0m[1msrc/job.c:695:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  695 |       if (dead_children > 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  696 |         --dead_children;[0m
      | [0;1;32m                        
[0m[1msrc/job.c:725:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |       if (any_remote)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  726 |         pid = remote_status (&exit_code, &exit_sig, &coredump, 0);[0m
  727 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:727:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  727 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  728 |         pid = 0;[0m
      | [0;1;32m                
[0m[1msrc/job.c:730:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  730 |       if (pid > 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  731 |         /* We got a remote child.  */[0m
  732 |         remote = 1;[0m
  733 |       else if (pid < 0)[0m
      | [0;32m      } 
[0m[1msrc/job.c:758:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |               if (!block)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  759 |                 pid = WAIT_NOHANG (&status);[0m
  760 |               else[0m
      | [0;32m              } 
[0m[1msrc/job.c:760:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  760 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  761 | #endif[0m
  762 |                 EINTRLOOP (pid, wait (&status));[0m
      | [0;1;32m                                                
[0m[1msrc/job.c:765:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  766 |             pid = 0;[0m
      | [0;1;32m                    
[0m[1msrc/job.c:785:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |               if (!block || !any_remote)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  786 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/job.c:790:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |               if (pid < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  791 |                 pfatal_with_name ("remote_status");[0m
      | [0;1;32m                                                   
[0m[1msrc/job.c:793:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  793 |               if (pid == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  794 |                 /* No remote children either.  Finally give up.  */[0m
  795 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/job.c:901:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  901 |       for (c = children; c != 0; lastc = c, c = c->next)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  902 |         if (c->pid == pid && c->remote == remote)[0m
  903 |           break;[0m
      | [0;1;32m                
[0m[1msrc/job.c:902:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  902 |         if (c->pid == pid && c->remote == remote)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  903 |           break;[0m
      | [0;1;32m                
[0m[1msrc/job.c:905:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  905 |       if (c == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  906 |         /* An unknown child died.[0m
  907 |            Ignore it; it was inherited from our invoker.  */[0m
  908 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/job.c:916:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  916 |       if (job_counter)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  917 |         --job_counter;[0m
      | [0;1;32m                      
[0m[1msrc/job.c:938:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  938 |           if (r < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  939 |             e = strerror (errno);[0m
  940 |           else if (S_ISDIR(st.st_mode) || !(st.st_mode & S_IXUSR))[0m
      | [0;32m          } 
[0m[1msrc/job.c:940:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |           else if (S_ISDIR(st.st_mode) || !(st.st_mode & S_IXUSR))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  941 |             e = strerror (EACCES);[0m
  942 |           else if (st.st_size == 0)[0m
      | [0;32m          } 
[0m[1msrc/job.c:942:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  942 |           else if (st.st_size == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  943 |             e = strerror (ENOEXEC);[0m
      | [0;1;32m                                   
[0m[1msrc/job.c:945:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |           if (e)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  946 |             OSS(error, NILF, "%s: %s", c->cmd_name, e);[0m
      | [0;1;32m                                                       
[0m[1msrc/job.c:952:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  952 |       if (exit_sig == 0 && exit_code == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  953 |         child_failed = MAKE_SUCCESS;[0m
  954 |       else if (exit_sig == 0 && exit_code == 1 && question_flag && c->recursive)[0m
      | [0;32m      } 
[0m[1msrc/job.c:954:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  954 |       else if (exit_sig == 0 && exit_code == 1 && question_flag && c->recursive)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  955 |         child_failed = MAKE_TROUBLE;[0m
  956 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:956:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  956 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  957 |         child_failed = MAKE_FAILURE;[0m
      | [0;1;32m                                    
[0m[1msrc/job.c:968:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |           if (rm_status)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  969 |             DB (DB_JOBS, (_("Cleaning up temp batch file %s failed (%d)\n"),[0m
  970 |                           c->sh_batch_file, errno));[0m
      | [0;1;32m                                                    
[0m[1msrc/job.c:978:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  978 |       if (c->good_stdin)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  979 |         good_stdin_used = 0;[0m
      | [0;1;32m                            
[0m[1msrc/job.c:989:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  989 |           if (!dontcare && child_failed == MAKE_FAILURE)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  990 |             child_error (c, exit_code, exit_sig, coredump, 0);[0m
      | [0;1;32m                                                              
[0m[1msrc/job.c:998:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  998 |           if (exit_sig != 0 || delete_on_error)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  999 |             delete_child_targets (c);[0m
      | [0;1;32m                                     
[0m[1msrc/job.c:1025:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |                   if (output_sync == OUTPUT_SYNC_LINE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1026 |                     output_dump (&c->output);[0m
      | [0;1;32m                                             
[0m[1msrc/job.c:1038:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1038 |                   if (c->file->command_state == cs_running)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1039 |                     /* We successfully started the new command.[0m
 1040 |                        Loop to reap more children.  */[0m
 1041 |                     continue;[0m
      | [0;1;32m                             
[0m[1msrc/job.c:1044:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1044 |               if (c->file->update_status != us_success)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1045 |                 /* We failed to start the commands.  */[0m
 1046 |                 delete_child_targets (c);[0m
      | [0;1;32m                                         
[0m[1msrc/job.c:1048:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1048 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1049 |             /* There are no more commands.  We got through them all[0m
 1050 |                without an unignored error.  Now the target has been[0m
 1051 |                successfully updated.  */[0m
 1052 |             c->file->update_status = us_success;[0m
      | [0;1;32m                                                
[0m[1msrc/job.c:1065:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1065 |       if (! handling_fatal_signal)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1066 |         /* Notice if the target of the commands has been changed.[0m
 1067 |            This also propagates its values for command_state and[0m
 1068 |            update_status to its also_make files.  */[0m
 1069 |         notice_finished_file (c->file);[0m
      | [0;1;32m                                       
[0m[1msrc/job.c:1085:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1085 |       if (job_slots_used > 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1086 |         job_slots_used -= c->jobslot;[0m
      | [0;1;32m                                     
[0m[1msrc/job.c:1089:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1089 |       if (lastc == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1090 |         children = c->next;[0m
 1091 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:1091:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1091 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1092 |         lastc->next = c->next;[0m
      | [0;1;32m                              
[0m[1msrc/job.c:1102:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |           !handling_fatal_signal)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1103 |         die (child_failed);[0m
      | [0;1;32m                           
[0m[1msrc/job.c:1120:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1120 |       while (*ep != 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1121 |         free (*ep++);[0m
      | [0;1;32m                     
[0m[1msrc/job.c:1133:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1133 |   if (!jobserver_tokens)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1134 |     ONS (fatal, NILF, "INTERNAL: Freeing child %p (%s) but no tokens left",[0m
 1135 |          child, child->file->name);[0m
      | [0;1;32m                                   
[0m[1msrc/job.c:1149:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1149 |   if (handling_fatal_signal) /* Don't bother free'ing if about to die.  */[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1150 |     return;[0m
      | [0;1;32m           
[0m[1msrc/job.c:1155:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1155 |       for (i = 0; i < child->file->cmds->ncommand_lines; ++i)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1156 |         free (child->command_lines[i]);[0m
      | [0;1;32m                                       
[0m[1msrc/job.c:1187:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1187 |   if (!child->command_ptr)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1188 |     goto next_command;[0m
      | [0;1;32m                      
[0m[1msrc/job.c:1200:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1200 |       if (*p == '@')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1201 |         flags |= COMMANDS_SILENT;[0m
 1202 |       else if (*p == '+')[0m
      | [0;32m      } 
[0m[1msrc/job.c:1202:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1202 |       else if (*p == '+')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1203 |         flags |= COMMANDS_RECURSE;[0m
 1204 |       else if (*p == '-')[0m
      | [0;32m      } 
[0m[1msrc/job.c:1204:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1204 |       else if (*p == '-')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1205 |         child->noerror = 1;[0m
 1206 |       /* Don't skip newlines.  */[0m
 1207 |       else if (!ISBLANK (*p))[0m
      | [0;32m      } 
[0m[1msrc/job.c:1207:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1207 |       else if (!ISBLANK (*p))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1208 |         break;[0m
      | [0;1;32m              
[0m[1msrc/job.c:1231:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1231 |         if (p1[0] == '\n' && p1[1] == prefix)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1232 |           ++p1;[0m
      | [0;1;32m               
[0m[1msrc/job.c:1284:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1284 |     if (end == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1285 |       child->command_ptr = NULL;[0m
 1286 |     else[0m
      | [0;32m    } 
[0m[1msrc/job.c:1328:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1328 |       if (job_next_command (child))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1329 |         start_job_command (child);[0m
 1330 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:1351:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1351 |   if (! child->output.syncout)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1352 |     /* We don't want to sync this command: to avoid misordered[0m
 1353 |        output ensure any already-synced content is written.  */[0m
 1354 |     output_dump (&child->output);[0m
      | [0;1;32m                                 
[0m[1msrc/job.c:1358:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1358 |       || (NONE_SET (flags, COMMANDS_SILENT) && !run_silent))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1359 |     OS (message, 0, "%s", p);[0m
      | [0;1;32m                             
[0m[1msrc/job.c:1417:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1417 |   if (child->good_stdin)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1418 |     good_stdin_used = 1;[0m
      | [0;1;32m                        
[0m[1msrc/job.c:1430:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1430 |   if (child->environment == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1431 |     child->environment = target_environment (child->file,[0m
 1432 |                                              child->file->cmds->any_recurse);[0m
      | [0;1;32m                                                                             
[0m[1msrc/job.c:1445:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1445 |                             &is_remote, &id, &used_stdin))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1446 |         /* Don't give up; remote execution may fail for various reasons.  If[0m
 1447 |            so, simply run the job locally.  */[0m
 1448 |         goto run_local;[0m
 1449 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:1599:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1599 |   if (child->pid >= 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1600 |     ++job_counter;[0m
      | [0;1;32m                  
[0m[1msrc/job.c:1651:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1651 |       c->next = children;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1652 |       if (c->pid > 0)[0m
 1653 |         {[0m
 1654 |           DB (DB_JOBS, (_("Putting child %p (%s) PID %s%s on the chain.\n"),[0m
 1655 |                         c, c->file->name, pid2str (c->pid),[0m
 1656 |                         c->remote ? _(" (remote)") : ""));[0m
 1657 |           /* One more job slot is in use.  */[0m
 1658 |           ++job_slots_used;[0m
 1659 |           assert (c->jobslot == 0);[0m
 1660 |           c->jobslot = 1;[0m
 1661 |         }[0m
 1662 |       children = c;[0m
 1663 |       unblock_sigs ();[0m
 1664 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/job.c:1668:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1668 |       f->update_status = us_success;[0m
      | [0;1;32m      ^                            
[0m      | [0;32m      {                            ;} 
[0m[1msrc/job.c:1672:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1672 |       notice_finished_file (f);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1673 |       free_child (c);[0m
 1674 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/job.c:1743:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1743 |           if (out != in)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1744 |             /* Copy the text between the end of the last chunk[0m
 1745 |                we processed (where IN points) and the new chunk[0m
 1746 |                we are about to process (where REF points).  */[0m
 1747 |             memmove (out, in, ref - in);[0m
      | [0;1;32m                                        
[0m[1msrc/job.c:1747:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1747 |             memmove (out, in, ref - in);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/job.c:1747:13: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1747 |             memmove (out, in, ref - in);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/job.c:1768:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1768 |                   if (*in == closeparen && --count < 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1769 |                     break;[0m
 1770 |                   else if (*in == '\\' && in[1] == '\n')[0m
      | [0;32m                  } 
[0m[1msrc/job.c:1777:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1777 |                       for (p = in - 1; p > ref && *p == '\\'; --p)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1778 |                         quoted = !quoted;[0m
      | [0;1;32m                                         
[0m[1msrc/job.c:1780:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1780 |                       if (quoted)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1781 |                         /* There were two or more backslashes, so this is[0m
 1782 |                            not really a continuation line.  We don't collapse[0m
 1783 |                            the quoting backslashes here as is done in[0m
 1784 |                            collapse_continuations, because the line will[0m
 1785 |                            be collapsed again after expansion.  */[0m
 1786 |                         *out++ = *in++;[0m
 1787 |                       else[0m
      | [0;32m                      } 
[0m[1msrc/job.c:1795:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1795 |                           while (out > outref && ISBLANK (out[-1]))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1796 |                             --out;[0m
      | [0;1;32m                                  
[0m[1msrc/job.c:1804:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1804 |                       if (*in == openparen)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1805 |                         ++count;[0m
      | [0;1;32m                                
[0m[1msrc/job.c:1815:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1815 |       if (out != in)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1816 |         memmove (out, in, strlen (in) + 1);[0m
      | [0;1;32m                                           
[0m[1msrc/job.c:1816:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1816 |         memmove (out, in, strlen (in) + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/job.c:1816:9: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1816 |         memmove (out, in, strlen (in) + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/job.c:1833:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1833 |   if (job_slots != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m[1msrc/job.c:1834:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1834 |     while (job_slots_used == job_slots)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1835 |       reap_children (1, 0);[0m
      | [0;1;32m                           
[0m[1msrc/job.c:1850:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1850 |   else if (jobserver_enabled ())[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m[1msrc/job.c:1859:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1859 |         if (!jobserver_tokens)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1860 |           break;[0m
      | [0;1;32m                
[0m[1msrc/job.c:1873:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1873 |         if (!jobserver_tokens)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1874 |           break;[0m
      | [0;1;32m                
[0m[1msrc/job.c:1878:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1878 |         if (!children)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1879 |           O (fatal, NILF, "INTERNAL: no children as we go to sleep on read");[0m
      | [0;1;32m                                                                             
[0m[1msrc/job.c:1902:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1902 |       if (! cmds->fileinfo.filenm)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1903 |         nm = _("<builtin>");[0m
 1904 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:1907:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1907 |           sprintf (n, "%s:%lu", cmds->fileinfo.filenm, cmds->fileinfo.lineno);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/job.c:1907:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1907 |           sprintf (n, "%s:%lu", cmds->fileinfo.filenm, cmds->fileinfo.lineno);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/job.c:1911:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1911 |       if (c->file->phony)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1912 |         OSS (message, 0, _("%s: update target '%s' due to: target is .PHONY"),[0m
 1913 |              nm, c->file->name);[0m
 1914 |       else if (c->file->last_mtime == NONEXISTENT_MTIME)[0m
      | [0;32m      } 
[0m[1msrc/job.c:1914:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1914 |       else if (c->file->last_mtime == NONEXISTENT_MTIME)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1915 |         OSS (message, 0,[0m
 1916 |              _("%s: update target '%s' due to: target does not exist"),[0m
 1917 |              nm, c->file->name);[0m
 1918 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:1933:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1933 |               for (d = c->file->deps; d != NULL; d = d->next)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1934 |                 if (d->file->last_mtime == NONEXISTENT_MTIME)[0m
 1935 |                   len += strlen (d->file->name) + 1;[0m
      | [0;1;32m                                                    
[0m[1msrc/job.c:1934:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1934 |                 if (d->file->last_mtime == NONEXISTENT_MTIME)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1935 |                   len += strlen (d->file->name) + 1;[0m
      | [0;1;32m                                                    
[0m[1msrc/job.c:1937:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1937 |               if (!len)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1938 |                 OSS (message, 0,[0m
 1939 |                      _("%s: update target '%s' due to: unknown reasons"),[0m
 1940 |                      nm, c->file->name);[0m
 1941 |               else[0m
      | [0;32m              } 
[0m[1msrc/job.c:1944:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1944 |                   for (d = c->file->deps; d != NULL; d = d->next)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1945 |                     if (d->file->last_mtime == NONEXISTENT_MTIME)[0m
 1946 |                       {[0m
 1947 |                         if (cp > newer)[0m
 1948 |                           *(cp++) = ' ';[0m
 1949 |                         cp = stpcpy (cp, d->file->name);[0m
 1950 |                       }[0m
      | [0;1;32m                       
[0m[1msrc/job.c:1947:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1947 |                         if (cp > newer)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1948 |                           *(cp++) = ' ';[0m
      | [0;1;32m                                        
[0m[1msrc/job.c:1962:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1962 |   if (job_slots == 1 || not_parallel)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1963 |     /* Since there is only one job slot, make things run linearly.[0m
 1964 |        Wait for the child to die, setting the state to 'cs_finished'.  */[0m
 1965 |     while (file->command_state == cs_running)[0m
 1966 |       reap_children (1, 0);[0m
      | [0;1;32m                           
[0m[1msrc/job.c:1965:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1965 |     while (file->command_state == cs_running)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1966 |       reap_children (1, 0);[0m
      | [0;1;32m                           
[0m[1msrc/job.c:1988:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1988 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1989 |         /* Get the next line to run.  */[0m
 1990 |         child->command_ptr = child->command_lines[child->command_line++];[0m
      | [0;1;32m                                                                         
[0m[1msrc/job.c:2071:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2071 |   if (max_load_average < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2072 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/job.c:2079:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2079 |       if (proc_fd < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2080 |         DB (DB_JOBS, ("Using system load detection method.\n"));[0m
 2081 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:2111:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2111 |               if (p)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2112 |                 p = strchr (p+1, ' ');[0m
      | [0;1;32m                                      
[0m[1msrc/job.c:2113:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2113 |               if (p)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2114 |                 p = strchr (p+1, ' ');[0m
      | [0;1;32m                                      
[0m[1msrc/job.c:2129:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2129 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2130 |         DB (DB_JOBS, ("Failed to read " LOADAVG ": %s\n", strerror (errno)));[0m
      | [0;1;32m                                                                             
[0m[1msrc/job.c:2144:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2144 |           if (errno == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2145 |             /* An errno value of zero means getloadavg is just unsupported.  */[0m
 2146 |             O (error, NILF,[0m
 2147 |                _("cannot enforce load limits on this operating system"));[0m
 2148 |           else[0m
      | [0;32m          } 
[0m[1msrc/job.c:2148:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2148 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2149 |             perror_with_name (_("cannot enforce load limit: "), "getloadavg");[0m
      | [0;1;32m                                                                              
[0m[1msrc/job.c:2160:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2160 |       if (last_now == now - 1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2161 |         last_sec = LOAD_WEIGHT_B * job_counter;[0m
 2162 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:2162:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2162 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2163 |         last_sec = 0.0;[0m
      | [0;1;32m                       
[0m[1msrc/job.c:2186:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2186 |   if (waiting_jobs == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2187 |     return;[0m
      | [0;1;32m           
[0m[1msrc/job.c:2329:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2329 |       if (child->output.out >= 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2330 |         fdout = child->output.out;[0m
      | [0;1;32m                                  
[0m[1msrc/job.c:2331:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2331 |       if (child->output.err >= 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2332 |         fderr = child->output.err;[0m
      | [0;1;32m                                  
[0m[1msrc/job.c:2372:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2372 |   if ((r = posix_spawnattr_init (&attr)) != 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2373 |     goto done;[0m
      | [0;1;32m              
[0m[1msrc/job.c:2387:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2387 |     if (r != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2388 |       goto cleanup;[0m
      | [0;1;32m                   
[0m[1msrc/job.c:2400:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2400 |   if (fdin >= 0 && fdin != FD_STDIN)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2401 |     if ((r = posix_spawn_file_actions_adddup2 (&fa, fdin, FD_STDIN)) != 0)[0m
 2402 |       goto cleanup;[0m
      | [0;1;32m                   
[0m[1msrc/job.c:2401:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2401 |     if ((r = posix_spawn_file_actions_adddup2 (&fa, fdin, FD_STDIN)) != 0)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 2402 |       goto cleanup;[0m
      | [0;1;32m                   
[0m[1msrc/job.c:2403:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2403 |   if (fdout != FD_STDOUT)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2404 |     if ((r = posix_spawn_file_actions_adddup2 (&fa, fdout, FD_STDOUT)) != 0)[0m
 2405 |       goto cleanup;[0m
      | [0;1;32m                   
[0m[1msrc/job.c:2404:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2404 |     if ((r = posix_spawn_file_actions_adddup2 (&fa, fdout, FD_STDOUT)) != 0)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2405 |       goto cleanup;[0m
      | [0;1;32m                   
[0m[1msrc/job.c:2406:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2406 |   if (fderr != FD_STDERR)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2407 |     if ((r = posix_spawn_file_actions_adddup2 (&fa, fderr, FD_STDERR)) != 0)[0m
 2408 |       goto cleanup;[0m
      | [0;1;32m                   
[0m[1msrc/job.c:2407:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2407 |     if ((r = posix_spawn_file_actions_adddup2 (&fa, fderr, FD_STDERR)) != 0)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2408 |       goto cleanup;[0m
      | [0;1;32m                   
[0m[1msrc/job.c:2414:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2414 |   if ((r = posix_spawnattr_setflags (&attr, flags)) != 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2415 |     goto cleanup;[0m
      | [0;1;32m                 
[0m[1msrc/job.c:2422:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2422 |     for (pp = child->environment; *pp != NULL; ++pp)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2423 |       if ((*pp)[0] == 'P' && (*pp)[1] == 'A' && (*pp)[2] == 'T'[0m
 2424 |           && (*pp)[3] == 'H' &&(*pp)[4] == '=')[0m
 2425 |         {[0m
 2426 |           p = (*pp) + 5;[0m
 2427 |           break;[0m
 2428 |         }[0m
      | [0;1;32m         
[0m[1msrc/job.c:2453:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2453 |                            child->environment)) == EINTR)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2454 |     ;[0m
      | [0;1;32m     
[0m[1msrc/job.c:2465:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2465 |       for (pp = argv; *pp != NULL; ++pp)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2466 |         ++l;[0m
      | [0;1;32m            
[0m[1msrc/job.c:2471:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2471 |       memcpy (&nargv[2], &argv[1], sizeof (char *) * l);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/job.c:2471:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2471 |       memcpy (&nargv[2], &argv[1], sizeof (char *) * l);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/job.c:2474:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2474 |                                child->environment)) == EINTR)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2475 |         ;[0m
      | [0;1;32m         
[0m[1msrc/job.c:2484:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2484 |       if (cmd != argv[0])[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2485 |         child->cmd_name = cmd;[0m
 2486 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:2486:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2486 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2487 |         child->cmd_name = xstrdup(cmd);[0m
      | [0;1;32m                                       
[0m[1msrc/job.c:2495:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2495 |   if (r != 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2496 |     pid = -1;[0m
      | [0;1;32m             
[0m[1msrc/job.c:2500:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2500 |   if (pid < 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2501 |     OSS (error, NILF, "%s: %s", argv[0], strerror (r));[0m
      | [0;1;32m                                                       
[0m[1msrc/job.c:2501:5: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 2501 |     OSS (error, NILF, "%s: %s", argv[0], strerror (r));[0m
      | [0;1;32m    ^
[0m[1msrc/makeint.h:553:40: [0m[0;1;36mnote: [0mexpanded from macro 'OSS'[0m
  553 | #define OSS(_t,_a,_f,_s1,_s2) _t((_a), strlen (_s1) + strlen (_s2), \[0m
      | [0;1;32m                                       ^
[0m[1msrc/job.c:1187:7: [0m[0;1;36mnote: [0mAssuming field 'command_ptr' is non-null[0m
 1187 |   if (!child->command_ptr)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1msrc/job.c:1187:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1187 |   if (!child->command_ptr)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:1196:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1196 |   child->noerror = ANY_SET (flags, COMMANDS_NOERROR);[0m
      | [0;1;32m                   ^
[0m[1msrc/makeint.h:405:26: [0m[0;1;36mnote: [0mexpanded from macro 'ANY_SET'[0m
  405 | #define ANY_SET(_v,_m)  (((_v)&(_m)) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~
[0m[1msrc/job.c:1198:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1198 |   while (*p != '\0')[0m
      | [0;1;32m         ^~~~~~~~~~
[0m[1msrc/job.c:1198:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1212[0m
 1198 |   while (*p != '\0')[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:1212:22: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1212 |   child->recursive = ANY_SET (flags, COMMANDS_RECURSE);[0m
      | [0;1;32m                     ^
[0m[1msrc/makeint.h:405:26: [0m[0;1;36mnote: [0mexpanded from macro 'ANY_SET'[0m
  405 | #define ANY_SET(_v,_m)  (((_v)&(_m)) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~
[0m[1msrc/job.c:1228:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1235[0m
 1228 |     while (*p1 != '\0')[0m
      | [0;1;32m    ^
[0m[1msrc/job.c:1284:9: [0m[0;1;36mnote: [0mAssuming 'end' is equal to NULL[0m
 1284 |     if (end == NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~
[0m[1msrc/job.c:1284:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1284 |     if (end == NULL)[0m
      | [0;1;32m    ^
[0m[1msrc/job.c:1297:7: [0m[0;1;36mnote: [0mAssuming 'argv' is not equal to null[0m
 1297 |   if (argv != 0 && question_flag && NONE_SET (flags, COMMANDS_RECURSE))[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1msrc/job.c:1297:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/job.c:1297:20: [0m[0;1;36mnote: [0mAssuming 'question_flag' is 0[0m
 1297 |   if (argv != 0 && question_flag && NONE_SET (flags, COMMANDS_RECURSE))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~
[0m[1msrc/job.c:1297:34: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1297 |   if (argv != 0 && question_flag && NONE_SET (flags, COMMANDS_RECURSE))[0m
      | [0;1;32m                                 ^
[0m[1msrc/job.c:1313:7: [0m[0;1;36mnote: [0mAssuming 'touch_flag' is 0[0m
 1313 |   if (touch_flag && NONE_SET (flags, COMMANDS_RECURSE))[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1msrc/job.c:1313:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1313 |   if (touch_flag && NONE_SET (flags, COMMANDS_RECURSE))[0m
      | [0;1;32m                 ^
[0m[1msrc/job.c:1321:7: [0m[0;1;36mnote: [0m'argv' is not equal to null[0m
 1321 |   if (argv == 0)[0m
      | [0;1;32m      ^~~~
[0m[1msrc/job.c:1321:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1321 |   if (argv == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:1346:27: [0m[0;1;36mnote: [0mAssuming 'output_sync' is 0[0m
 1346 |   child->output.syncout = output_sync && (output_sync == OUTPUT_SYNC_RECURSE[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1msrc/job.c:1346:39: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1346 |   child->output.syncout = output_sync && (output_sync == OUTPUT_SYNC_RECURSE[0m
      | [0;1;32m                                      ^
[0m[1msrc/job.c:1349:3: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 1349 |   OUTPUT_SET (&child->output);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:58: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                         ^
[0m[1msrc/job.c:1349:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1349 |   OUTPUT_SET (&child->output);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:50: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                                                 ^
[0m[1msrc/job.c:1349:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1349 |   OUTPUT_SET (&child->output);[0m
      | [0;1;32m  ^
[0m[1msrc/output.h:31:29: [0m[0;1;36mnote: [0mexpanded from macro 'OUTPUT_SET'[0m
   31 | #define OUTPUT_SET(_new)    do{ output_context = (_new)->syncout ? (_new) : NULL; }while(0)[0m
      | [0;1;32m                            ^
[0m[1msrc/job.c:1351:23: [0m[0;1;36mnote: [0mField 'syncout' is 0[0m
 1351 |   if (! child->output.syncout)[0m
      | [0;1;32m                      ^
[0m[1msrc/job.c:1351:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1351 |   if (! child->output.syncout)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:1357:7: [0m[0;1;36mnote: [0mAssuming 'just_print_flag' is 0[0m
 1357 |   if (just_print_flag || ISDB (DB_PRINT)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1msrc/job.c:1357:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/job.c:1357:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1357 |   if (just_print_flag || ISDB (DB_PRINT)[0m
      | [0;1;32m                         ^
[0m[1msrc/debug.h:30:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISDB'[0m
   30 | #define ISDB(_l)    ((_l)&db_level)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~
[0m[1msrc/job.c:1357:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1357 |   if (just_print_flag || ISDB (DB_PRINT)[0m
      | [0;1;32m      ^
[0m[1msrc/job.c:1358:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1358 |       || (NONE_SET (flags, COMMANDS_SILENT) && !run_silent))[0m
      | [0;1;32m          ^
[0m[1msrc/makeint.h:406:28: [0m[0;1;36mnote: [0mexpanded from macro 'NONE_SET'[0m
  406 | #define NONE_SET(_v,_m) (! ANY_SET ((_v),(_m)))[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~
[0m[1msrc/makeint.h:405:26: [0m[0;1;36mnote: [0mexpanded from macro 'ANY_SET'[0m
  405 | #define ANY_SET(_v,_m)  (((_v)&(_m)) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~
[0m[1msrc/job.c:1358:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1358 |       || (NONE_SET (flags, COMMANDS_SILENT) && !run_silent))[0m
      | [0;1;32m          ^
[0m[1msrc/makeint.h:406:25: [0m[0;1;36mnote: [0mexpanded from macro 'NONE_SET'[0m
  406 | #define NONE_SET(_v,_m) (! ANY_SET ((_v),(_m)))[0m
      | [0;1;32m                        ^
[0m[1msrc/job.c:1358:48: [0m[0;1;36mnote: [0mAssuming 'run_silent' is not equal to 0[0m
 1358 |       || (NONE_SET (flags, COMMANDS_SILENT) && !run_silent))[0m
      | [0;1;32m                                               ^~~~~~~~~~~
[0m[1msrc/job.c:1357:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1357 |   if (just_print_flag || ISDB (DB_PRINT)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:1381:8: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 1381 |       (argv[0] && is_bourne_compatible_shell (argv[0]))[0m
      | [0;1;32m       ^~~~~~~
[0m[1msrc/job.c:1381:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1381 |       (argv[0] && is_bourne_compatible_shell (argv[0]))[0m
      | [0;1;32m               ^
[0m[1msrc/job.c:1398:7: [0m[0;1;36mnote: [0m'just_print_flag' is 0[0m
 1398 |   if (just_print_flag && NONE_SET (flags, COMMANDS_RECURSE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1msrc/job.c:1398:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1398 |   if (just_print_flag && NONE_SET (flags, COMMANDS_RECURSE))[0m
      | [0;1;32m                      ^
[0m[1msrc/job.c:1416:23: [0m[0;1;36mnote: [0mAssuming 'good_stdin_used' is not equal to 0[0m
 1416 |   child->good_stdin = !good_stdin_used;[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~
[0m[1msrc/job.c:1417:14: [0m[0;1;36mnote: [0mField 'good_stdin' is 0[0m
 1417 |   if (child->good_stdin)[0m
      | [0;1;32m             ^
[0m[1msrc/job.c:1417:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1417 |   if (child->good_stdin)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:1430:7: [0m[0;1;36mnote: [0mAssuming field 'environment' is not equal to null[0m
 1430 |   if (child->environment == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/job.c:1430:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1430 |   if (child->environment == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:1439:7: [0m[0;1;36mnote: [0mAssuming field 'remote' is 0[0m
 1439 |   if (child->remote)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1msrc/job.c:1439:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1439 |   if (child->remote)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:1476:20: [0m[0;1;36mnote: [0mCalling 'child_execute_job'[0m
 1476 |       child->pid = child_execute_job ((struct childbase *)child,[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1477 |                                       child->good_stdin, argv);[0m
      | [0;1;32m                                      ~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/job.c:2314:20: [0m[0;1;36mnote: [0m'good_stdin' is 0[0m
 2314 |   const int fdin = good_stdin ? FD_STDIN : get_bad_stdin ();[0m
      | [0;1;32m                   ^~~~~~~~~~
[0m[1msrc/job.c:2314:20: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msrc/job.c:2327:7: [0m[0;1;36mnote: [0mAssuming field 'syncout' is 0[0m
 2327 |   if (child->output.syncout)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/job.c:2327:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2327 |   if (child->output.syncout)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:2372:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2372 |   if ((r = posix_spawnattr_init (&attr)) != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/job.c:2372:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2372 |   if ((r = posix_spawnattr_init (&attr)) != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:2373:5: [0m[0;1;36mnote: [0mControl jumps to line 2495[0m
 2373 |     goto done;[0m
      | [0;1;32m    ^
[0m[1msrc/job.c:2495:7: [0m[0;1;36mnote: [0m'r' is not equal to 0[0m
 2495 |   if (r != 0)[0m
      | [0;1;32m      ^
[0m[1msrc/job.c:2495:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2495 |   if (r != 0)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:2500:7: [0m[0;1;36mnote: [0m'pid' is < 0[0m
 2500 |   if (pid < 0)[0m
      | [0;1;32m      ^~~
[0m[1msrc/job.c:2500:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2500 |   if (pid < 0)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:2501:5: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 2501 |     OSS (error, NILF, "%s: %s", argv[0], strerror (r));[0m
      | [0;1;32m    ^
[0m[1msrc/makeint.h:553:40: [0m[0;1;36mnote: [0mexpanded from macro 'OSS'[0m
  553 | #define OSS(_t,_a,_f,_s1,_s2) _t((_a), strlen (_s1) + strlen (_s2), \[0m
      | [0;1;32m                                       ^       ~~~
[0m[1msrc/job.c:2613:12: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2613 |       OSS (error, NILF, "%s: %s", argv[0], strerror (errno));[0m
      | [0;1;32m           ^
[0m      | [0;32m      {
[0m 2614 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/makeint.h:553:31: [0m[0;1;36mnote: [0mexpanded from macro 'OSS'[0m
  553 | #define OSS(_t,_a,_f,_s1,_s2) _t((_a), strlen (_s1) + strlen (_s2), \[0m
      | [0;1;32m                              ^
[0m[1msrc/job.c:2633:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2633 |         if (shell == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2634 |           shell = default_shell;[0m
      | [0;1;32m                                
[0m[1msrc/job.c:2637:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2637 |         while (argv[argc] != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2638 |           ++argc;[0m
      | [0;1;32m                 
[0m[1msrc/job.c:2672:9: [0m[0;1;35mwarning: [0m[1mUntrusted data is passed to a system call (CERT/STR02-C. Sanitize data passed to complex subsystems) [clang-analyzer-optin.taint.GenericTaint][0m
 2672 |         execvp (shell, new_argv);[0m
      | [0;1;32m        ^       ~~~~~
[0m[1msrc/job.c:2610:3: [0m[0;1;36mnote: [0mControl jumps to 'case 8:'  at line 2615[0m
 2610 |   switch (errno)[0m
      | [0;1;32m  ^
[0m[1msrc/job.c:2631:17: [0m[0;1;36mnote: [0mTaint originated here[0m
 2631 |         shell = getenv ("SHELL");[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~
[0m[1msrc/job.c:2631:17: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
 2631 |         shell = getenv ("SHELL");[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~
[0m[1msrc/job.c:2631:17: [0m[0;1;36mnote: [0mAssuming the environment variable exists[0m
 2631 |         shell = getenv ("SHELL");[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~
[0m[1msrc/job.c:2633:13: [0m[0;1;36mnote: [0m'shell' is not equal to null[0m
 2633 |         if (shell == 0)[0m
      | [0;1;32m            ^~~~~
[0m[1msrc/job.c:2633:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 2633 |         if (shell == 0)[0m
      | [0;1;32m        ^
[0m[1msrc/job.c:2637:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2637 |         while (argv[argc] != 0)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~
[0m[1msrc/job.c:2637:9: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2645[0m
 2637 |         while (argv[argc] != 0)[0m
      | [0;1;32m        ^
[0m[1msrc/job.c:2658:9: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2658 |         while (argc > 0)[0m
      | [0;1;32m        ^
[0m[1msrc/job.c:2658:9: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2672[0m
[1msrc/job.c:2672:9: [0m[0;1;36mnote: [0mUntrusted data is passed to a system call (CERT/STR02-C. Sanitize data passed to complex subsystems)[0m
 2672 |         execvp (shell, new_argv);[0m
      | [0;1;32m        ^       ~~~~~
[0m[1msrc/job.c:2686:12: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2686 |       OSS (error, NILF, "%s: %s", argv[0], strerror (errno));[0m
      | [0;1;32m           ^
[0m      | [0;32m      {
[0m 2687 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/makeint.h:553:31: [0m[0;1;36mnote: [0mexpanded from macro 'OSS'[0m
  553 | #define OSS(_t,_a,_f,_s1,_s2) _t((_a), strlen (_s1) + strlen (_s2), \[0m
      | [0;1;32m                              ^
[0m[1msrc/job.c:2886:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2886 |   if (restp != NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2887 |     *restp = NULL;[0m
      | [0;1;32m                  
[0m[1msrc/job.c:2890:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2890 |   while (ISBLANK (*line))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2891 |     ++line;[0m
      | [0;1;32m           
[0m[1msrc/job.c:2892:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2892 |   if (*line == '\0')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2893 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/job.c:2895:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2895 |   if (shellflags == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2896 |     shellflags = posix_pedantic && NONE_SET (flags, COMMANDS_NOERROR) ? "-ec" : "-c";[0m
      | [0;1;32m                                                                                     
[0m[1msrc/job.c:2899:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2899 |   if (shell == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m[1msrc/job.c:2945:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2945 |   else if (strcmp (shell, default_shell))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2946 |     goto slow;[0m
      | [0;1;32m              
[0m[1msrc/job.c:2950:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2950 |   if (ifs)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2951 |     for (cap = ifs; *cap != '\0'; ++cap)[0m
 2952 |       if (*cap != ' ' && *cap != '\t' && *cap != '\n')[0m
 2953 |         goto slow;[0m
      | [0;1;32m                  
[0m[1msrc/job.c:2951:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2951 |     for (cap = ifs; *cap != '\0'; ++cap)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2952 |       if (*cap != ' ' && *cap != '\t' && *cap != '\n')[0m
 2953 |         goto slow;[0m
      | [0;1;32m                  
[0m[1msrc/job.c:2952:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2952 |       if (*cap != ' ' && *cap != '\t' && *cap != '\n')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2953 |         goto slow;[0m
      | [0;1;32m                  
[0m[1msrc/job.c:2955:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2955 |   if (shellflags)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2956 |     if (shellflags[0] != '-'[0m
 2957 |         || ((shellflags[1] != 'c' || shellflags[2] != '\0')[0m
 2958 |             && (shellflags[1] != 'e' || shellflags[2] != 'c' || shellflags[3] != '\0')))[0m
 2959 |       goto slow;[0m
      | [0;1;32m                
[0m[1msrc/job.c:2958:89: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2958 |             && (shellflags[1] != 'e' || shellflags[2] != 'c' || shellflags[3] != '\0')))[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m 2959 |       goto slow;[0m
      | [0;1;32m                
[0m[1msrc/job.c:2986:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2986 |               if (ap == new_argv[0] || *(ap-1) == '\0')[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2987 |                 last_argument_was_empty = 1;[0m
      | [0;1;32m                                            
[0m[1msrc/job.c:3018:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3018 |           else if (instring == '"' && strchr ("\\$`", *p) != 0 && unixy_shell)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3019 |             goto slow;[0m
 3020 | #ifdef WINDOWS32[0m
 3021 |           /* Quoted wildcard characters must be passed quoted to the[0m
 3022 |              command, so give up the fast route.  */[0m
 3023 |           else if (instring == '"' && strchr ("*?", *p) != 0 && !unixy_shell)[0m
 3024 |             goto slow;[0m
 3025 |           else if (instring == '"' && strncmp (p, "\\\"", 2) == 0)[0m
 3026 |             *ap++ = *++p;[0m
 3027 | #endif[0m
 3028 |           else[0m
      | [0;32m          } 
[0m[1msrc/job.c:3028:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3028 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3029 |             *ap++ = *p;[0m
      | [0;1;32m                       
[0m[1msrc/job.c:3031:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3031 |       else if (strchr (sh_chars, *p) != 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3032 |         /* Not inside a string, but it's a special char.  */[0m
 3033 |         goto slow;[0m
 3034 |       else if (one_shell && *p == '\n')[0m
      | [0;32m      } 
[0m[1msrc/job.c:3034:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3034 |       else if (one_shell && *p == '\n')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3035 |         /* In .ONESHELL mode \n is a separator like ; or && */[0m
 3036 |         goto slow;[0m
 3037 | #ifdef  __MSDOS__[0m
 3038 |       else if (*p == '.' && p[1] == '.' && p[2] == '.' && p[3] != '.')[0m
 3039 |         /* '...' is a wildcard in DJGPP.  */[0m
 3040 |         goto slow;[0m
 3041 | #endif[0m
 3042 |       else[0m
      | [0;32m      } 
[0m[1msrc/job.c:3042:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3042 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m[1msrc/job.c:3051:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3051 |             if (! seen_nonequals && unixy_shell)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 3052 |               goto slow;[0m
 3053 |             word_has_equals = 1;[0m
 3054 |             *ap++ = '=';[0m
 3055 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/job.c:3051:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3051 |             if (! seen_nonequals && unixy_shell)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3052 |               goto slow;[0m
      | [0;1;32m                        
[0m[1msrc/job.c:3060:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3060 |             if (p[1] == '\n')[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1msrc/job.c:3067:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3067 |                 if (ap == new_argv[i])[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3068 |                   while (ISBLANK (p[1]))[0m
 3069 |                     ++p;[0m
      | [0;1;32m                        
[0m[1msrc/job.c:3068:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3068 |                   while (ISBLANK (p[1]))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3069 |                     ++p;[0m
      | [0;1;32m                        
[0m[1msrc/job.c:3114:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3114 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1msrc/job.c:3117:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3117 |             if (restp != NULL)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 3118 |               {[0m
 3119 |                 /* End of the command line.  */[0m
 3120 |                 *restp = p;[0m
 3121 |                 goto end_of_line;[0m
 3122 |               }[0m
 3123 |             else[0m
 3124 |               /* Newlines are not special.  */[0m
 3125 |               *ap++ = '\n';[0m
 3126 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/job.c:3123:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3123 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3124 |               /* Newlines are not special.  */[0m
 3125 |               *ap++ = '\n';[0m
      | [0;1;32m                           
[0m[1msrc/job.c:3133:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3133 |             new_argv[++i] = ap;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1msrc/job.c:3139:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3139 |             if (word_has_equals && ! seen_nonequals)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3140 |               /* An '=' in a word before the first[0m
 3141 |                  word without one is magical.  */[0m
 3142 |               goto slow;[0m
      | [0;1;32m                        
[0m[1msrc/job.c:3153:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3153 |                     if (streq (sh_cmds[j], new_argv[0]))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 3154 |                       goto slow;[0m
      | [0;1;32m                                
[0m[1msrc/job.c:3165:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3165 |             while (ISBLANK (p[1]))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3166 |               ++p;[0m
      | [0;1;32m                  
[0m[1msrc/job.c:3170:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3170 |             *ap++ = *p;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 3171 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/job.c:3176:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3176 |   if (instring)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 3177 |     /* Let the shell deal with an unterminated quote.  */[0m
 3178 |     goto slow;[0m
      | [0;1;32m              
[0m[1msrc/job.c:3183:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3183 |   if (new_argv[i][0] != '\0' || last_argument_was_empty)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 3184 |     ++i;[0m
      | [0;1;32m        
[0m[1msrc/job.c:3190:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3190 |       for (j = 0; sh_cmds[j] != 0; ++j)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3191 |         if (streq (sh_cmds[j], new_argv[0]))[0m
 3192 |           goto slow;[0m
      | [0;1;32m                    
[0m[1msrc/job.c:3191:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3191 |         if (streq (sh_cmds[j], new_argv[0]))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3192 |           goto slow;[0m
      | [0;1;32m                    
[0m[1msrc/job.c:3327:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3327 |                 while (ISBLANK (*f) || *f == '-' || *f == '@' || *f == '+')[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 3328 |                   ++f;[0m
      | [0;1;32m                      
[0m[1msrc/job.c:3334:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3334 |                     if (f[-1] == '\\')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3335 |                       esc = !esc;[0m
 3336 |                     else[0m
      | [0;32m                    } 
[0m[1msrc/job.c:3339:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3339 |                         if (f[-1] == '\n' && ! esc)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 3340 |                           break;[0m
      | [0;1;32m                                
[0m[1msrc/job.c:3444:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3444 |               memcpy (f, shellflags, sflags_len + 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/job.c:3444:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3444 |               memcpy (f, shellflags, sflags_len + 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/job.c:3461:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3461 |           memcpy(nextp, line, line_len + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/job.c:3461:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3461 |           memcpy(nextp, line, line_len + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/job.c:3476:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3476 |         if (strchr (sh_chars, *cp) != 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3477 |           *(ap++) = '\\';[0m
      | [0;1;32m                         
[0m[1msrc/job.c:3512:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3512 |                 if (!batch_mode_shell)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3513 |                   *(ap++) = '\\';[0m
      | [0;1;32m                                 
[0m[1msrc/job.c:3524:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3524 |              || strchr (sh_chars, *p) != 0))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3525 |           *ap++ = '\\';[0m
      | [0;1;32m                       
[0m[1msrc/job.c:3599:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3599 |     if (unixy_shell)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m[1msrc/job.c:3685:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3685 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 3686 |       fatal (NILF, CSTRLEN (__FILE__) + INTSTR_LENGTH,[0m
 3687 |              _("%s (line %d) Bad shell context (!unixy && !batch_mode_shell)\n"),[0m
 3688 |             __FILE__, __LINE__);[0m
      | [0;1;32m                                
[0m[1msrc/job.c:3782:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3782 |     if (!var)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3783 |       shellflags = xstrdup ("");[0m
 3784 |     else if (posix_pedantic && var->origin == o_default)[0m
      | [0;32m    } 
[0m[1msrc/job.c:3784:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3784 |     else if (posix_pedantic && var->origin == o_default)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 3785 |       /* In POSIX mode we default to -ec, unless we're ignoring errors.  */[0m
 3786 |       shellflags = xstrdup (ANY_SET (cmd_flags, COMMANDS_NOERROR) ? "-c" : "-ec");[0m
 3787 |     else[0m
      | [0;32m    } 
[0m[1msrc/job.c:3787:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3787 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 3788 |       shellflags = allocated_variable_expand_for_file (var->value, file);[0m
      | [0;1;32m                                                                         
[0m178 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[29/32][218.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpa94xgxqz.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/rule.c
[1msrc/rule.c:79:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |       for (k = 0; k < r->num; ++k)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   80 |         len += r->lens[k] + 1;[0m
      | [0;1;32m                              
[0m[1msrc/rule.c:82:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |       for (dep = r->deps; dep; dep = dep->next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   83 |         len += strlen (dep_name (dep)) + (dep->wait_here ? CSTRLEN (" .WAIT") : 0) + 1;[0m
      | [0;1;32m                                                                                       
[0m[1msrc/rule.c:86:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |       for (k = 0; k < r->num; ++k, sep = " ")[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   87 |         p = mempcpy (mempcpy (p, sep, strlen (sep)), r->targets[k], r->lens[k]);[0m
      | [0;1;32m                                                                                
[0m[1msrc/rule.c:89:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |       if (r->terminal)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   90 |         *p++ = ':';[0m
      | [0;1;32m                   
[0m[1msrc/rule.c:93:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |       for (dep = r->deps; dep; dep = dep->next)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m   94 |         if (dep->ignore_mtime == 0)[0m
   95 |           {[0m
   96 |             if (dep->wait_here)[0m
   97 |               p = mempcpy (p, " .WAIT", CSTRLEN (" .WAIT"));[0m
   98 |             p = mempcpy (mempcpy (p, " ", 1), dep_name (dep),[0m
   99 |                          strlen (dep_name (dep)));[0m
  100 |           }[0m
  101 |         else if (ood == 0)[0m
  102 |           ood = dep;[0m
      | [0;1;32m                    
[0m[1msrc/rule.c:96:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |             if (dep->wait_here)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   97 |               p = mempcpy (p, " .WAIT", CSTRLEN (" .WAIT"));[0m
      | [0;1;32m                                                            
[0m[1msrc/rule.c:101:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |         else if (ood == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  102 |           ood = dep;[0m
      | [0;1;32m                    
[0m[1msrc/rule.c:105:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |       for (sep = " | "; ood; ood = ood->next, sep = " ")[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  106 |         if (ood->ignore_mtime)[0m
  107 |           {[0m
  108 |             p = mempcpy (p, sep, strlen (sep));[0m
  109 |             if (ood->wait_here)[0m
  110 |               p = mempcpy (p, ".WAIT ", CSTRLEN (".WAIT "));[0m
  111 |             p = mempcpy (p, dep_name (ood), strlen (dep_name (ood)));[0m
  112 |           }[0m
      | [0;1;32m           
[0m[1msrc/rule.c:109:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |             if (ood->wait_here)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  110 |               p = mempcpy (p, ".WAIT ", CSTRLEN (".WAIT "));[0m
      | [0;1;32m                                                            
[0m[1msrc/rule.c:143:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |       if (dep->need_2nd_expansion)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  144 |         /* When pattern_search allocates a buffer, allow 5 bytes per each % to[0m
  145 |            substitute each % with $(*F) while avoiding realloc.  */[0m
  146 |         while ((d = strchr (d, '%')) != 0)[0m
  147 |           {[0m
  148 |             l += 4;[0m
  149 |             ++d;[0m
  150 |           }[0m
      | [0;1;32m           
[0m[1msrc/rule.c:152:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |       if (l > max_pattern_dep_length)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  153 |         max_pattern_dep_length = l;[0m
      | [0;1;32m                                   
[0m[1msrc/rule.c:166:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |       if (rule->num > max_pattern_targets)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  167 |         max_pattern_targets = rule->num;[0m
      | [0;1;32m                                        
[0m[1msrc/rule.c:186:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |           if (len > max_pattern_dep_length)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  187 |             max_pattern_dep_length = len;[0m
      | [0;1;32m                                         
[0m[1msrc/rule.c:189:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |           if (!dep->next)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  190 |             lastdep = dep;[0m
      | [0;1;32m                          
[0m[1msrc/rule.c:196:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |               if (p == dname)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  197 |                 ++p;[0m
      | [0;1;32m                    
[0m[1msrc/rule.c:203:15: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  203 |               memcpy (name, dname, p - dname);[0m
      | [0;1;32m              ^       ~~~~
[0m[1msrc/rule.c:129:3: [0m[0;1;36mnote: [0m'name' initialized to a null pointer value[0m
  129 |   char *name = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~
[0m[1msrc/rule.c:138:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 157[0m
  138 |   for (dep = prereqs; dep; dep = dep->next)[0m
      | [0;1;32m  ^
[0m[1msrc/rule.c:159:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  159 |   for (rule = pattern_rules; rule; rule = rule->next)[0m
      | [0;1;32m  ^
[0m[1msrc/rule.c:166:11: [0m[0;1;36mnote: [0mAssuming 'max_pattern_targets' is >= field 'num'[0m
  166 |       if (rule->num > max_pattern_targets)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/rule.c:166:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |       if (rule->num > max_pattern_targets)[0m
      | [0;1;32m      ^
[0m[1msrc/rule.c:169:30: [0m[0;1;36mnote: [0mAssuming 'dep' is not equal to null[0m
  169 |       for (dep = rule->deps; dep != 0; dep = dep->next)[0m
      | [0;1;32m                             ^~~~~~~~
[0m[1msrc/rule.c:169:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  169 |       for (dep = rule->deps; dep != 0; dep = dep->next)[0m
      | [0;1;32m      ^
[0m[1msrc/rule.c:171:31: [0m[0;1;36mnote: [0mAssuming field 'name' is non-null[0m
  171 |           const char *dname = dep_name (dep);[0m
      | [0;1;32m                              ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^~~~~~~~~
[0m[1msrc/rule.c:171:31: [0m[0;1;36mnote: [0m'?' condition is true[0m
  171 |           const char *dname = dep_name (dep);[0m
      | [0;1;32m                              ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/rule.c:182:28: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
  182 |           const char *p2 = p ? strchr (p, '%') : 0;[0m
      | [0;1;32m                           ^
[0m[1msrc/rule.c:182:28: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1msrc/rule.c:186:15: [0m[0;1;36mnote: [0mAssuming 'len' is <= 'max_pattern_dep_length'[0m
  186 |           if (len > max_pattern_dep_length)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/rule.c:186:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  186 |           if (len > max_pattern_dep_length)[0m
      | [0;1;32m          ^
[0m[1msrc/rule.c:189:15: [0m[0;1;36mnote: [0mAssuming field 'next' is non-null[0m
  189 |           if (!dep->next)[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1msrc/rule.c:189:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  189 |           if (!dep->next)[0m
      | [0;1;32m          ^
[0m[1msrc/rule.c:192:15: [0m[0;1;36mnote: [0mAssuming 'p2' is non-null[0m
  192 |           if (p2)[0m
      | [0;1;32m              ^~
[0m[1msrc/rule.c:192:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  192 |           if (p2)[0m
      | [0;1;32m          ^
[0m[1msrc/rule.c:196:19: [0m[0;1;36mnote: [0mAssuming 'p' is equal to 'dname'[0m
  196 |               if (p == dname)[0m
      | [0;1;32m                  ^~~~~~~~~~
[0m[1msrc/rule.c:196:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  196 |               if (p == dname)[0m
      | [0;1;32m              ^
[0m[1msrc/rule.c:198:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  198 |               if ((size_t) (p - dname) > namelen)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/rule.c:198:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |               if ((size_t) (p - dname) > namelen)[0m
      | [0;1;32m              ^
[0m[1msrc/rule.c:203:15: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
  203 |               memcpy (name, dname, p - dname);[0m
      | [0;1;32m              ^       ~~~~
[0m[1msrc/rule.c:203:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  203 |               memcpy (name, dname, p - dname);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/rule.c:203:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  203 |               memcpy (name, dname, p - dname);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/rule.c:212:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  213 |             /* This dependency does not reside in a subdirectory.  */[0m
  214 |             dep->changed = 0;[0m
      | [0;1;32m                             
[0m[1msrc/rule.c:219:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |           if (lastdep)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  220 |             lastdep->next = copy_dep_chain (prereqs);[0m
  221 |           else[0m
      | [0;32m          } 
[0m[1msrc/rule.c:221:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  222 |             rule->deps = copy_dep_chain (prereqs);[0m
      | [0;1;32m                                                  
[0m[1msrc/rule.c:225:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |       if (ndeps > max_pattern_deps)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  226 |         max_pattern_deps = ndeps;[0m
      | [0;1;32m                                 
[0m[1msrc/rule.c:266:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  266 |       memcpy (p + 1, target, len + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/rule.c:266:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  266 |       memcpy (p + 1, target, len + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/rule.c:271:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |   if (source == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  272 |     deps = 0;[0m
  273 |   else[0m
      | [0;32m  } 
[0m[1msrc/rule.c:279:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  279 |       memcpy (p + 1, source, len + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/rule.c:279:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  279 |       memcpy (p + 1, source, len + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/rule.c:305:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |       if (l > maxsuffix)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  306 |         maxsuffix = l;[0m
      | [0;1;32m                      
[0m[1msrc/rule.c:320:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |       if (d->file->cmds != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  321 |         /* Record a pattern for this suffix's null-suffix rule.  */[0m
  322 |         convert_suffix_rule ("", dep_name (d), d->file->cmds);[0m
      | [0;1;32m                                                              
[0m[1msrc/rule.c:327:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  327 |       memcpy (rulename, dep_name (d), slen);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/rule.c:327:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  327 |       memcpy (rulename, dep_name (d), slen);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/rule.c:337:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |           if (slen == s2len && streq (dep_name (d), dep_name (d2)))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  338 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/rule.c:340:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  340 |           memcpy (rulename + slen, dep_name (d2), s2len + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/rule.c:340:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  340 |           memcpy (rulename + slen, dep_name (d2), s2len + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/rule.c:344:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |           if (f == 0 || f->cmds == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  345 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/rule.c:354:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |               if (posix_pedantic)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  355 |                 continue;[0m
      | [0;1;32m                         
[0m[1msrc/rule.c:360:54: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the memory returned by 'alloca' [clang-analyzer-security.ArrayBound][0m
  360 |           if (s2len == 2 && rulename[slen] == '.' && rulename[slen + 1] == 'a')[0m
      | [0;1;32m                                                     ^~~~~~~~~~~~~~~~~~
[0m[1msrc/rule.c:302:31: [0m[0;1;36mnote: [0mAssuming 'd' is not equal to null[0m
  302 |   for (d = suffix_file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                              ^~~~~~
[0m[1msrc/rule.c:302:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  302 |   for (d = suffix_file->deps; d != 0; d = d->next)[0m
      | [0;1;32m  ^
[0m[1msrc/rule.c:304:26: [0m[0;1;36mnote: [0mAssuming field 'name' is null[0m
  304 |       size_t l = strlen (dep_name (d));[0m
      | [0;1;32m                         ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^~~~~~~~~
[0m[1msrc/rule.c:304:26: [0m[0;1;36mnote: [0m'?' condition is false[0m
  304 |       size_t l = strlen (dep_name (d));[0m
      | [0;1;32m                         ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/rule.c:305:11: [0m[0;1;36mnote: [0mAssuming 'l' is <= 'maxsuffix'[0m
  305 |       if (l > maxsuffix)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1msrc/rule.c:305:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  305 |       if (l > maxsuffix)[0m
      | [0;1;32m      ^
[0m[1msrc/rule.c:302:31: [0m[0;1;36mnote: [0mAssuming 'd' is equal to null[0m
  302 |   for (d = suffix_file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                              ^~~~~~
[0m[1msrc/rule.c:302:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 310[0m
  302 |   for (d = suffix_file->deps; d != 0; d = d->next)[0m
      | [0;1;32m  ^
[0m[1msrc/rule.c:312:31: [0m[0;1;36mnote: [0m'd' is not equal to null[0m
  312 |   for (d = suffix_file->deps; d != 0; d = d->next)[0m
      | [0;1;32m                              ^
[0m[1msrc/rule.c:312:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  312 |   for (d = suffix_file->deps; d != 0; d = d->next)[0m
      | [0;1;32m  ^
[0m[1msrc/rule.c:318:28: [0m[0;1;36mnote: [0mField 'name' is null[0m
  318 |       convert_suffix_rule (dep_name (d), 0, 0);[0m
      | [0;1;32m                           ^
[0m[1msrc/dep.h:105:33: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                                ^
[0m[1msrc/rule.c:318:28: [0m[0;1;36mnote: [0m'?' condition is false[0m
  318 |       convert_suffix_rule (dep_name (d), 0, 0);[0m
      | [0;1;32m                           ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/rule.c:320:11: [0m[0;1;36mnote: [0mAssuming field 'cmds' is equal to null[0m
  320 |       if (d->file->cmds != 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1msrc/rule.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (d->file->cmds != 0)[0m
      | [0;1;32m      ^
[0m[1msrc/rule.c:326:22: [0m[0;1;36mnote: [0mField 'name' is null[0m
  326 |       slen = strlen (dep_name (d));[0m
      | [0;1;32m                     ^
[0m[1msrc/dep.h:105:33: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                                ^
[0m[1msrc/rule.c:326:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
  326 |       slen = strlen (dep_name (d));[0m
      | [0;1;32m                     ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/rule.c:327:25: [0m[0;1;36mnote: [0mField 'name' is null[0m
  327 |       memcpy (rulename, dep_name (d), slen);[0m
      | [0;1;32m                        ^
[0m[1msrc/dep.h:105:33: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                                ^
[0m[1msrc/rule.c:327:25: [0m[0;1;36mnote: [0m'?' condition is false[0m
  327 |       memcpy (rulename, dep_name (d), slen);[0m
      | [0;1;32m                        ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/rule.c:329:36: [0m[0;1;36mnote: [0mAssuming 'd2' is not equal to null[0m
  329 |       for (d2 = suffix_file->deps; d2 != 0; d2 = d2->next)[0m
      | [0;1;32m                                   ^~~~~~~
[0m[1msrc/rule.c:329:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  329 |       for (d2 = suffix_file->deps; d2 != 0; d2 = d2->next)[0m
      | [0;1;32m      ^
[0m[1msrc/rule.c:334:27: [0m[0;1;36mnote: [0mAssuming field 'name' is non-null[0m
  334 |           s2len = strlen (dep_name (d2));[0m
      | [0;1;32m                          ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^~~~~~~~~
[0m[1msrc/rule.c:334:27: [0m[0;1;36mnote: [0m'?' condition is true[0m
  334 |           s2len = strlen (dep_name (d2));[0m
      | [0;1;32m                          ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/rule.c:337:15: [0m[0;1;36mnote: [0mAssuming 'slen' is not equal to 's2len'[0m
  337 |           if (slen == s2len && streq (dep_name (d), dep_name (d2)))[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1msrc/rule.c:337:29: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  337 |           if (slen == s2len && streq (dep_name (d), dep_name (d2)))[0m
      | [0;1;32m                            ^
[0m[1msrc/rule.c:340:36: [0m[0;1;36mnote: [0mField 'name' is non-null[0m
  340 |           memcpy (rulename + slen, dep_name (d2), s2len + 1);[0m
      | [0;1;32m                                   ^
[0m[1msrc/dep.h:105:33: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                                ^
[0m[1msrc/rule.c:340:36: [0m[0;1;36mnote: [0m'?' condition is true[0m
  340 |           memcpy (rulename + slen, dep_name (d2), s2len + 1);[0m
      | [0;1;32m                                   ^
[0m[1msrc/dep.h:105:28: [0m[0;1;36mnote: [0mexpanded from macro 'dep_name'[0m
  105 | #define dep_name(d)       ((d)->name ? (d)->name : (d)->file->name)[0m
      | [0;1;32m                           ^
[0m[1msrc/rule.c:344:15: [0m[0;1;36mnote: [0mAssuming 'f' is not equal to null[0m
  344 |           if (f == 0 || f->cmds == 0)[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/rule.c:344:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msrc/rule.c:344:25: [0m[0;1;36mnote: [0mAssuming field 'cmds' is not equal to null[0m
  344 |           if (f == 0 || f->cmds == 0)[0m
      | [0;1;32m                        ^~~~~~~~~~~~
[0m[1msrc/rule.c:344:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  344 |           if (f == 0 || f->cmds == 0)[0m
      | [0;1;32m          ^
[0m[1msrc/rule.c:352:15: [0m[0;1;36mnote: [0mAssuming field 'deps' is equal to null[0m
  352 |           if (f->deps != 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1msrc/rule.c:352:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  352 |           if (f->deps != 0)[0m
      | [0;1;32m          ^
[0m[1msrc/rule.c:360:15: [0m[0;1;36mnote: [0mAssuming 's2len' is equal to 2[0m
  360 |           if (s2len == 2 && rulename[slen] == '.' && rulename[slen + 1] == 'a')[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1msrc/rule.c:360:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/rule.c:360:29: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  360 |           if (s2len == 2 && rulename[slen] == '.' && rulename[slen + 1] == 'a')[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/rule.c:360:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  360 |           if (s2len == 2 && rulename[slen] == '.' && rulename[slen + 1] == 'a')[0m
      | [0;1;32m              ^
[0m[1msrc/rule.c:360:54: [0m[0;1;36mnote: [0mAccess of the memory returned by 'alloca' at index 1, while it holds only a single 'char' element[0m
  360 |           if (s2len == 2 && rulename[slen] == '.' && rulename[slen + 1] == 'a')[0m
      | [0;1;32m                                                     ^~~~~~~~~~~~~~~~~~
[0m[1msrc/rule.c:360:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |           if (s2len == 2 && rulename[slen] == '.' && rulename[slen + 1] == 'a')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  361 |             /* A suffix rule '.X.a:' generates the pattern rule '(%.o): %.X'.[0m
  362 |                It also generates a normal '%.a: %.X' rule below.  */[0m
  363 |             convert_suffix_rule (NULL, /* Indicates '(%.o)'.  */[0m
  364 |                                  dep_name (d),[0m
  365 |                                  f->cmds);[0m
      | [0;1;32m                                          
[0m[1msrc/rule.c:395:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |   for (r = pattern_rules; r != 0; lastrule = r, r = r->next)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m[1msrc/rule.c:398:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |         for (j = 0; j < r->num; ++j)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  399 |           if (!streq (rule->targets[i], r->targets[j]))[0m
  400 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/rule.c:399:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |           if (!streq (rule->targets[i], r->targets[j]))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  400 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/rule.c:406:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |                  d != 0 && d2 != 0; d = d->next, d2 = d2->next)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  407 |               if (!streq (dep_name (d), dep_name (d2)))[0m
  408 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/rule.c:407:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |               if (!streq (dep_name (d), dep_name (d2)))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  408 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/rule.c:417:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  417 |                     if (pattern_rules == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  418 |                       pattern_rules = rule;[0m
  419 |                     else[0m
      | [0;32m                    } 
[0m[1msrc/rule.c:419:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  420 |                       last_pattern_rule->next = rule;[0m
      | [0;1;32m                                                     
[0m[1msrc/rule.c:441:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |       if (pattern_rules == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  442 |         pattern_rules = rule;[0m
  443 |       else[0m
      | [0;32m      } 
[0m[1msrc/rule.c:443:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  444 |         last_pattern_rule->next = rule;[0m
      | [0;1;32m                                       
[0m[1msrc/rule.c:526:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |   if (pattern_rules == rule)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  527 |     if (lastrule != 0)[0m
  528 |       abort ();[0m
  529 |     else[0m
  530 |       pattern_rules = next;[0m
  531 |   else if (lastrule != 0)[0m
      | [0;32m  } 
[0m[1msrc/rule.c:527:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |     if (lastrule != 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  528 |       abort ();[0m
  529 |     else[0m
      | [0;32m    } 
[0m[1msrc/rule.c:529:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  530 |       pattern_rules = next;[0m
      | [0;1;32m                           
[0m[1msrc/rule.c:531:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |   else if (lastrule != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  532 |     lastrule->next = next;[0m
      | [0;1;32m                          
[0m[1msrc/rule.c:533:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |   if (last_pattern_rule == rule)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  534 |     last_pattern_rule = lastrule;[0m
      | [0;1;32m                                 
[0m[1msrc/rule.c:570:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  570 |   if (new_pattern_rule (r, override))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  571 |     r->terminal = terminal ? 1 : 0;[0m
      | [0;1;32m                                   
[0m[1msrc/rule.c:582:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |   if (r->cmds != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  583 |     print_commands (r->cmds);[0m
      | [0;1;32m                             
[0m[1msrc/rule.c:602:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  602 |       if (r->terminal)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  603 |         ++terminal;[0m
      | [0;1;32m                   
[0m[1msrc/rule.c:606:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |   if (rules == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  607 |     puts (_("\n# No implicit rules."));[0m
  608 |   else[0m
      | [0;32m  } 
[0m[1msrc/rule.c:618:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |       if (num_pattern_rules != 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  619 |         ONN (fatal, NILF, _("BUG: num_pattern_rules is wrong!  %u != %u"),[0m
  620 |              num_pattern_rules, rules);[0m
      | [0;1;32m                                       
[0m54 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[30/32][234.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpxd9c1oq3.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/variable.c
[1msrc/variable.c:97:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (len < 256)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   98 |     last_pattern_vars[len] = p;[0m
      | [0;1;32m                               
[0m[1msrc/variable.c:116:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |       if (p->len > targlen)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  117 |         /* It can't possibly match.  */[0m
  118 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/variable.c:126:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |       if (stem > target && !strneq (p->target, target, stem - target))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  127 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/variable.c:135:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |           && (*p->suffix == '\0' || streq (&p->suffix[1], &stem[stemlen+1])))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  136 |         break;[0m
      | [0;1;32m              
[0m[1msrc/variable.c:164:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |   if (result)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  165 |     return result;[0m
      | [0;1;32m                  
[0m[1msrc/variable.c:210:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  210 |   if (set == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  211 |     set = &global_variable_set;[0m
      | [0;1;32m                               
[0m[1msrc/variable.c:246:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |   if (env_overrides && origin == o_env)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  247 |     origin = o_env_override;[0m
      | [0;1;32m                            
[0m[1msrc/variable.c:251:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |       if (env_overrides && v->origin == o_env)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  252 |         /* V came from in the environment.  Since it was defined[0m
  253 |            before the switches were parsed, it wasn't affected by -e.  */[0m
  254 |         v->origin = o_env_override;[0m
      | [0;1;32m                                   
[0m[1msrc/variable.c:263:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |           if (flocp != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  264 |             v->fileinfo = *flocp;[0m
  265 |           else[0m
      | [0;32m          } 
[0m[1msrc/variable.c:265:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  266 |             v->fileinfo.filenm = 0;[0m
      | [0;1;32m                                   
[0m[1msrc/variable.c:279:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |   if (set == &global_variable_set)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  280 |     ++variable_changenum;[0m
      | [0;1;32m                         
[0m[1msrc/variable.c:283:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |   if (flocp != 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  284 |     v->fileinfo = *flocp;[0m
      | [0;1;32m                         
[0m[1msrc/variable.c:293:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |       && (*name < 'a' || *name > 'z'))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  294 |     v->exportable = 0;[0m
  295 |   else[0m
      | [0;32m  } 
[0m[1msrc/variable.c:297:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |       for (++name; *name != '\0'; ++name)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  298 |         if (*name != '_' && (*name < 'a' || *name > 'z')[0m
  299 |             && (*name < 'A' || *name > 'Z') && !ISDIGIT(*name))[0m
  300 |           break;[0m
      | [0;1;32m                
[0m[1msrc/variable.c:299:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |             && (*name < 'A' || *name > 'Z') && !ISDIGIT(*name))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  300 |           break;[0m
      | [0;1;32m                
[0m[1msrc/variable.c:302:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |       if (*name != '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  303 |         v->exportable = 0;[0m
      | [0;1;32m                          
[0m[1msrc/variable.c:340:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |   if (set == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  341 |     set = &global_variable_set;[0m
      | [0;1;32m                               
[0m[1msrc/variable.c:347:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |   if (env_overrides && origin == o_env)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  348 |     origin = o_env_override;[0m
      | [0;1;32m                            
[0m[1msrc/variable.c:353:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |       if (env_overrides && v->origin == o_env)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  354 |         /* V came from in the environment.  Since it was defined[0m
  355 |            before the switches were parsed, it wasn't affected by -e.  */[0m
  356 |         v->origin = o_env_override;[0m
      | [0;1;32m                                   
[0m[1msrc/variable.c:365:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |           if (set == &global_variable_set)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  366 |             ++variable_changenum;[0m
      | [0;1;32m                                 
[0m[1msrc/variable.c:411:47: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
  411 |   if (variable_changenum != last_changenum && streq (var->name, ".VARIABLES"))[0m
      | [0;1;32m                                              ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:425:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  425 |       for (; vp < end; ++vp)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m[1msrc/variable.c:476:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |       if (v && (!is_parent || !v->private_var))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  477 |         return v->special ? lookup_special_var (v) : v;[0m
      | [0;1;32m                                                       
[0m[1msrc/variable.c:552:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |   if (file == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  553 |     return lookup_variable (name, length);[0m
      | [0;1;32m                                          
[0m[1msrc/variable.c:618:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |   if (file->parent == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  619 |     l->next = &global_setlist;[0m
  620 |   else[0m
      | [0;32m  } 
[0m[1msrc/variable.c:785:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |   for ( ; from_var_slot < from_var_end; from_var_slot++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m[1msrc/variable.c:815:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  815 |   if (!setlist1 || setlist1 == &global_setlist)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  816 |     return;[0m
      | [0;1;32m           
[0m[1msrc/variable.c:826:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |           if (to == setlist1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  827 |             return;[0m
      | [0;1;32m                   
[0m[1msrc/variable.c:846:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  846 |       if (last0 == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  847 |         *setlist0 = setlist1;[0m
  848 |       else[0m
      | [0;32m      } 
[0m[1msrc/variable.c:848:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  848 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  849 |         last0->next = setlist1;[0m
      | [0;1;32m                               
[0m[1msrc/variable.c:862:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  862 |   sprintf (buf, "%u", makelevel);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/variable.c:862:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  862 |   sprintf (buf, "%u", makelevel);[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/variable.c:865:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  865 |   sprintf (buf, "%s%s%s",[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/variable.c:865:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  865 |   sprintf (buf, "%s%s%s",[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/variable.c:1016:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1016 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1msrc/variable.c:1019:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1019 |       return 0;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1msrc/variable.c:1022:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1022 |       if (v->origin == o_default)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1023 |         return 0;[0m
 1024 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1022:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1022 |       if (v->origin == o_default)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1023 |         return 0;[0m
      | [0;1;32m                 
[0m[1msrc/variable.c:1027:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1027 |       if (v->origin == o_default || v->origin == o_automatic)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1028 |         /* Only export default variables by explicit request.  */[0m
 1029 |         return 0;[0m
 1030 | [0m
 1031 |       /* The variable doesn't have a name that can be exported.  */[0m
 1032 |       if (! v->exportable)[0m
 1033 |         return 0;[0m
 1034 | [0m
 1035 |       if (! export_all_variables[0m
 1036 |           && v->origin != o_command[0m
 1037 |           && v->origin != o_env && v->origin != o_env_override)[0m
 1038 |         return 0;[0m
 1039 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1027:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |       if (v->origin == o_default || v->origin == o_automatic)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1028 |         /* Only export default variables by explicit request.  */[0m
 1029 |         return 0;[0m
      | [0;1;32m                 
[0m[1msrc/variable.c:1032:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1032 |       if (! v->exportable)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1033 |         return 0;[0m
      | [0;1;32m                 
[0m[1msrc/variable.c:1037:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1037 |           && v->origin != o_env && v->origin != o_env_override)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1038 |         return 0;[0m
      | [0;1;32m                 
[0m[1msrc/variable.c:1069:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1069 |   if (!file)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1070 |     ++env_recursion;[0m
      | [0;1;32m                    
[0m[1msrc/variable.c:1074:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1074 |   if (!recursive && jobserver_auth)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1075 |     invalid = jobserver_get_invalid_auth ();[0m
      | [0;1;32m                                            
[0m[1msrc/variable.c:1077:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1077 |   if (file)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1078 |     set_list = file->variables;[0m
 1079 |   else[0m
      | [0;32m  } 
[0m[1msrc/variable.c:1079:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1080 |     set_list = current_variable_set_list;[0m
      | [0;1;32m                                         
[0m[1msrc/variable.c:1096:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |       for ( ; v_slot < v_end; v_slot++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m[1msrc/variable.c:1102:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |             if (!islocal && v->private_var)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1103 |               continue;[0m
      | [0;1;32m                       
[0m[1msrc/variable.c:1113:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1113 |                 if (!isglobal || should_export (v))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1114 |                   hash_insert_at (&table, v, evslot);[0m
      | [0;1;32m                                                     
[0m[1msrc/variable.c:1116:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1116 |             else if ((*evslot)->export == v_default)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1117 |               /* We already have a variable but we don't know its status.  */[0m
 1118 |               (*evslot)->export = v->export;[0m
      | [0;1;32m                                            
[0m[1msrc/variable.c:1126:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1126 |   for ( ; v_slot < v_end; v_slot++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m[1msrc/variable.c:1135:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1135 |         if (! should_export (v))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1136 |           continue;[0m
      | [0;1;32m                   
[0m[1msrc/variable.c:1142:33: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1142 |                              || streq (v->name, MAKEFLAGS_NAME)))[0m
      | [0;1;32m                                ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:1142:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1142 |                              || streq (v->name, MAKEFLAGS_NAME)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1143 |           value = cp = recursively_expand_for_file (v, file);[0m
      | [0;1;32m                                                             
[0m[1msrc/variable.c:1146:29: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1146 |         if (!added_SHELL && streq (v->name, "SHELL"))[0m
      | [0;1;32m                            ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:1153:33: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1153 |         if (!found_makelevel && streq (v->name, MAKELEVEL_NAME))[0m
      | [0;1;32m                                ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:1156:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1156 |             sprintf (val, "%u", makelevel + 1);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/variable.c:1156:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1156 |             sprintf (val, "%u", makelevel + 1);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/variable.c:1166:37: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1166 |             if (!found_makeflags && streq (v->name, MAKEFLAGS_NAME))[0m
      | [0;1;32m                                    ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:1172:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1172 |                 if (!strstr (value, " --" JOBSERVER_AUTH_OPT "="))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1173 |                   goto setit;[0m
      | [0;1;32m                             
[0m[1msrc/variable.c:1177:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |                 if (!vars)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1178 |                   mf = xstrdup (concat (2, value, invalid));[0m
 1179 |                 else[0m
      | [0;32m                } 
[0m[1msrc/variable.c:1184:21: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1184 |                     strcpy (mempcpy (mempcpy (mf, value, lf), invalid, li),[0m
      | [0;1;32m                    ^~~~~~
[0m[1msrc/variable.c:1184:21: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1184 |                     strcpy (mempcpy (mempcpy (mf, value, lf), invalid, li),[0m
      | [0;1;32m                    ^~~~~~
[0m[1msrc/variable.c:1189:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1189 |                 if (found_mflags)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1190 |                   invalid = NULL;[0m
      | [0;1;32m                                 
[0m[1msrc/variable.c:1194:34: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1194 |             if (!found_mflags && streq (v->name, "MFLAGS"))[0m
      | [0;1;32m                                 ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:1199:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1199 |                 if (!strstr (value, " --" JOBSERVER_AUTH_OPT "="))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1200 |                   goto setit;[0m
      | [0;1;32m                             
[0m[1msrc/variable.c:1202:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1202 |                 if (v->origin != o_env)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1203 |                   goto setit;[0m
      | [0;1;32m                             
[0m[1msrc/variable.c:1207:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1207 |                 if (found_makeflags)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1208 |                   invalid = NULL;[0m
      | [0;1;32m                                 
[0m[1msrc/variable.c:1228:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1228 |   if (!added_SHELL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1229 |     *result++ = xstrdup (concat (3, shell_var.name, "=", shell_var.value));[0m
      | [0;1;32m                                                                           
[0m[1msrc/variable.c:1234:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1234 |       sprintf (val, "%s=%u", MAKELEVEL_NAME, makelevel + 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/variable.c:1234:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1234 |       sprintf (val, "%s=%u", MAKELEVEL_NAME, makelevel + 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/variable.c:1242:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1242 |   if (!file)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1243 |     --env_recursion;[0m
      | [0;1;32m                    
[0m[1msrc/variable.c:1251:7: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1251 |   if (streq (var->name, MAKEFLAGS_NAME))[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:1251:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1251 |   if (streq (var->name, MAKEFLAGS_NAME))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1252 |     reset_makeflags (origin);[0m
 1253 | [0m
 1254 |   else if (streq (var->name, RECIPEPREFIX_NAME))[0m
      | [0;32m  } 
[0m[1msrc/variable.c:1254:12: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1254 |   else if (streq (var->name, RECIPEPREFIX_NAME))[0m
      | [0;1;32m           ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:1311:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1311 |       newval = alloc_value = allocated_variable_expand (value);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1312 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1323:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1323 |             if (op[0] == '$')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1324 |               *(np++) = '$';[0m
      | [0;1;32m                            
[0m[1msrc/variable.c:1346:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1346 |       v = lookup_variable (varname, strlen (varname));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1347 |       if (v)[0m
 1348 |         goto done;[0m
 1349 | [0m
 1350 |       conditional = 1;[0m
 1351 |       flavor = f_recursive;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1msrc/variable.c:1347:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1347 |       if (v)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1348 |         goto done;[0m
      | [0;1;32m                  
[0m[1msrc/variable.c:1356:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1356 |       newval = value;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1357 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1371:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1371 |             if (v && !v->append)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1372 |               append = 0;[0m
      | [0;1;32m                         
[0m[1msrc/variable.c:1374:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1374 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1375 |           v = lookup_variable (varname, strlen (varname));[0m
      | [0;1;32m                                                          
[0m[1msrc/variable.c:1394:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1394 |             if (v->recursive)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1395 |               /* The previous definition of the variable was recursive.[0m
 1396 |                  The new value is the unexpanded old and new values.  */[0m
 1397 |               flavor = f_recursive;[0m
 1398 |             else if (flavor != f_append_value)[0m
      | [0;32m            } 
[0m[1msrc/variable.c:1398:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1398 |             else if (flavor != f_append_value)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1399 |               /* The previous definition of the variable was simple.[0m
 1400 |                  The new value comes from the old value, which was expanded[0m
 1401 |                  when it was set; and from the expanded new value.  Allocate[0m
 1402 |                  memory for the expansion as we may still need the rest of the[0m
 1403 |                  buffer if we're looking at a target-specific variable.  */[0m
 1404 |               val = tp = allocated_variable_expand (val);[0m
      | [0;1;32m                                                         
[0m[1msrc/variable.c:1421:21: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1421 |                 if (streq (varname, MAKEFLAGS_NAME)[0m
      | [0;1;32m                    ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/variable.c:1422:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1422 |                     && (s = strstr (v->value, " -- ")))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1423 |                   /* We found a separator in MAKEFLAGS.  Ignore variable[0m
 1424 |                      assignments: set_special_var() will reconstruct things.  */[0m
 1425 |                   cp = mempcpy (cp, v->value, s - v->value);[0m
 1426 |                 else[0m
      | [0;32m                } 
[0m[1msrc/variable.c:1426:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1426 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1427 |                   cp = mempcpy (cp, v->value, oldlen);[0m
      | [0;1;32m                                                      
[0m[1msrc/variable.c:1431:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1431 |             memcpy (cp, val, vallen + 1);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/variable.c:1431:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1431 |             memcpy (cp, val, vallen + 1);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/variable.c:1436:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1436 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1msrc/variable.c:1626:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1626 |       if (STOP_SET (c, MAP_COMMENT|MAP_NUL))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1627 |         return NULL;[0m
      | [0;1;32m                    
[0m[1msrc/variable.c:1633:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1633 |           if (end)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1634 |             return NULL;[0m
      | [0;1;32m                        
[0m[1msrc/variable.c:1643:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1643 |           if (!end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1644 |             end = p - 1;[0m
      | [0;1;32m                        
[0m[1msrc/variable.c:1651:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1651 |           if (!end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1652 |             end = p - 1;[0m
      | [0;1;32m                        
[0m[1msrc/variable.c:1685:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1685 |               var->flavor = f_append;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1686 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msrc/variable.c:1688:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1688 |               var->flavor = f_conditional;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1689 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msrc/variable.c:1691:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1691 |               var->flavor = f_shell;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1692 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msrc/variable.c:1694:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1694 |               goto other;[0m
      | [0;1;32m              ^         
[0m      | [0;32m              {         ;} 
[0m[1msrc/variable.c:1697:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1697 |           if (!end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1698 |             end = p - 1;[0m
      | [0;1;32m                        
[0m[1msrc/variable.c:1707:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1707 |       if (end)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1708 |         return NULL;[0m
      | [0;1;32m                    
[0m[1msrc/variable.c:1721:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1721 |               closeparen = ')';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1722 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msrc/variable.c:1724:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1724 |               closeparen = '}';[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1725 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1msrc/variable.c:1727:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1727 |               return NULL;[0m
      | [0;1;32m              ^          
[0m      | [0;32m              {          ;} 
[0m[1msrc/variable.c:1730:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1730 |               continue;[0m
      | [0;1;32m              ^       
[0m      | [0;32m              {       ;} 
[0m[1msrc/variable.c:1742:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1742 |               if (*p == c)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1743 |                 ++count;[0m
      | [0;1;32m                        
[0m[1msrc/variable.c:1766:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1766 |   if (!parse_variable_definition (line, v))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1767 |     return NULL;[0m
      | [0;1;32m                
[0m[1msrc/variable.c:1771:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1771 |   memcpy (name, v->name, v->length);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/variable.c:1771:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1771 |   memcpy (name, v->name, v->length);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/variable.c:1775:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1775 |   if (v->name[0] == '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1776 |     O (fatal, &v->fileinfo, _("empty variable name"));[0m
      | [0;1;32m                                                      
[0m[1msrc/variable.c:1801:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1801 |   if (flocp != 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1802 |     v.fileinfo = *flocp;[0m
 1803 |   else[0m
      | [0;32m  } 
[0m[1msrc/variable.c:1803:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1803 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1804 |     v.fileinfo.filenm = 0;[0m
      | [0;1;32m                          
[0m[1msrc/variable.c:1806:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1806 |   if (!assign_variable_definition (&v, line))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1807 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/variable.c:1846:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1846 |       for (dp = defined_vars; dp->name != NULL; ++dp)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1847 |         if (dp->len == len && memcmp (dp->name, name, len) == 0)[0m
 1848 |           return;[0m
      | [0;1;32m                 
[0m[1msrc/variable.c:1847:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1847 |         if (dp->len == len && memcmp (dp->name, name, len) == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1848 |           return;[0m
      | [0;1;32m                 
[0m[1msrc/variable.c:1867:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1867 |       origin = _("automatic");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1868 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1870:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1870 |       origin = _("default");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1871 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1873:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1873 |       origin = _("environment");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1874 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1876:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1876 |       origin = _("makefile");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1877 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1879:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1879 |       origin = _("environment under -e");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1880 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1882:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1882 |       origin = _("command line");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1883 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1885:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1885 |       origin = _("'override' directive");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1886 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/variable.c:1888:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1888 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1msrc/variable.c:1892:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1892 |   if (v->private_var)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1893 |     fputs (" private", stdout);[0m
      | [0;1;32m                               
[0m[1msrc/variable.c:1894:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1894 |   if (v->fileinfo.filenm)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1895 |     printf (_(" (from '%s', line %lu)"),[0m
 1896 |             v->fileinfo.filenm, v->fileinfo.lineno + v->fileinfo.offset);[0m
      | [0;1;32m                                                                         
[0m[1msrc/variable.c:1901:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1901 |   if (v->recursive && strchr (v->value, '\n') != 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1902 |     printf ("define %s\n%s\nendef\n", v->name, v->value);[0m
 1903 |   else[0m
      | [0;32m  } 
[0m[1msrc/variable.c:1911:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1911 |       if (p != v->value && *p == '\0')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1912 |         /* All whitespace.  */[0m
 1913 |         printf ("$(subst ,,%s)", v->value);[0m
 1914 |       else if (v->recursive)[0m
      | [0;32m      } 
[0m[1msrc/variable.c:1914:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1914 |       else if (v->recursive)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1915 |         fputs (v->value, stdout);[0m
 1916 |       else[0m
      | [0;32m      } 
[0m[1msrc/variable.c:1916:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1916 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1917 |         /* Double up dollar signs.  */[0m
 1918 |         for (p = v->value; *p != '\0'; ++p)[0m
 1919 |           {[0m
 1920 |             if (*p == '$')[0m
 1921 |               putchar ('$');[0m
 1922 |             putchar (*p);[0m
 1923 |           }[0m
      | [0;1;32m           
[0m[1msrc/variable.c:1920:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1920 |             if (*p == '$')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1921 |               putchar ('$');[0m
      | [0;1;32m                            
[0m[1msrc/variable.c:1934:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1934 |   if (v->origin == o_automatic)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1935 |     print_variable (item, arg);[0m
      | [0;1;32m                               
[0m[1msrc/variable.c:1944:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1944 |   if (v->origin != o_automatic)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1945 |     print_variable (item, arg);[0m
      | [0;1;32m                               
[0m[1msrc/variable.c:1986:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1986 |     if (rules == 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1987 |       puts (_("\n# No pattern-specific variable values."));[0m
 1988 |     else[0m
      | [0;32m    } 
[0m[1msrc/variable.c:1988:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1988 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1989 |       printf (_("\n# %u pattern-specific variable values"), rules);[0m
      | [0;1;32m                                                                   
[0m[1msrc/variable.c:1999:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1999 |   if (file->variables != 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2000 |     print_variable_set (file->variables->set, "# ", 1);[0m
      | [0;1;32m                                                       
[0m[1msrc/variable.c:2011:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2011 |       memcpy (t, file->name, l);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/variable.c:2011:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2011 |       memcpy (t, file->name, l);[0m
      | [0;1;32m      ^~~~~~
[0m130 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[31/32][240.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmp_rlezjmh.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/read.c
[1msrc/read.c:203:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |         if (*p != '\0')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  204 |           *p++ = '\0';[0m
      | [0;1;32m                      
[0m[1msrc/read.c:213:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |   if (makefiles != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  214 |     while (*makefiles != 0)[0m
  215 |       {[0m
  216 |         struct goaldep *d = eval_makefile (*makefiles, 0);[0m
  217 | [0m
  218 |         if (errno)[0m
  219 |           perror_with_name ("", *makefiles);[0m
  220 | [0m
  221 |         /* Reuse the storage allocated for the read_file.  */[0m
  222 |         *makefiles = dep_name (d);[0m
  223 |         ++num_makefiles;[0m
  224 |         ++makefiles;[0m
  225 |       }[0m
      | [0;1;32m       
[0m[1msrc/read.c:218:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |         if (errno)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  219 |           perror_with_name ("", *makefiles);[0m
      | [0;1;32m                                            
[0m[1msrc/read.c:248:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |       while (*p != 0 && !file_exists_p (*p))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  249 |         ++p;[0m
      | [0;1;32m            
[0m[1msrc/read.c:254:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  254 |           if (errno)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  255 |             perror_with_name ("", *p);[0m
      | [0;1;32m                                      
[0m[1msrc/read.c:284:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  284 |   memset (new, '\0', sizeof (*new));[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/read.c:284:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  284 |   memset (new, '\0', sizeof (*new));[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/read.c:323:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |       if (flags & RM_NO_DEFAULT_GOAL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  324 |         printf (_(" (no default goal)"));[0m
      | [0;1;32m                                         
[0m[1msrc/read.c:325:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |       if (flags & RM_INCLUDED)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  326 |         printf (_(" (search path)"));[0m
      | [0;1;32m                                     
[0m[1msrc/read.c:327:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |       if (flags & RM_DONTCARE)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  328 |         printf (_(" (don't care)"));[0m
      | [0;1;32m                                    
[0m[1msrc/read.c:329:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |       if (flags & RM_NO_TILDE)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  330 |         printf (_(" (no ~ expansion)"));[0m
      | [0;1;32m                                        
[0m[1msrc/read.c:341:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |       if (expanded != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  342 |         filename = expanded;[0m
      | [0;1;32m                            
[0m[1msrc/read.c:395:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |   if (deps->file == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  396 |     deps->file = enter_file (filename);[0m
      | [0;1;32m                                       
[0m[1msrc/read.c:418:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   if (deps->file->last_mtime == NONEXISTENT_MTIME)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  419 |     deps->file->last_mtime = 0;[0m
      | [0;1;32m                               
[0m[1msrc/read.c:463:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |   if (flocp)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  464 |     ebuf.floc = *flocp;[0m
  465 |   else if (reading_file)[0m
      | [0;32m  } 
[0m[1msrc/read.c:465:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |   else if (reading_file)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  466 |     ebuf.floc = *reading_file;[0m
  467 |   else[0m
      | [0;32m  } 
[0m[1msrc/read.c:503:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  503 |   memset (vmod, '\0', sizeof (*vmod));[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/read.c:503:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  503 |   memset (vmod, '\0', sizeof (*vmod));[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/read.c:507:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |   if (*line == '\0')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  508 |     return (char *) line;[0m
      | [0;1;32m                         
[0m[1msrc/read.c:520:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |       if (p2)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  521 |         break;[0m
      | [0;1;32m              
[0m[1msrc/read.c:527:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |       if (word1eq ("export"))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  528 |         vmod->export_v = v_export;[0m
  529 |       else if (word1eq ("unexport"))[0m
      | [0;32m      } 
[0m[1msrc/read.c:529:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |       else if (word1eq ("unexport"))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  530 |         vmod->export_v = v_noexport;[0m
  531 |       else if (word1eq ("override"))[0m
      | [0;32m      } 
[0m[1msrc/read.c:531:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |       else if (word1eq ("override"))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  532 |         vmod->override_v = 1;[0m
  533 |       else if (word1eq ("private"))[0m
      | [0;32m      } 
[0m[1msrc/read.c:533:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |       else if (word1eq ("private"))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  534 |         vmod->private_v = 1;[0m
  535 |       else if (!targvar && word1eq ("define"))[0m
      | [0;32m      } 
[0m[1msrc/read.c:549:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  550 |         /* Not a variable or modifier: this is not a variable assignment.  */[0m
  551 |         return (char *) line;[0m
      | [0;1;32m                             
[0m[1msrc/read.c:555:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |       if (*p == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  556 |         return (char *) line;[0m
      | [0;1;32m                             
[0m[1msrc/read.c:642:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |       if (nlines < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  643 |         break;[0m
      | [0;1;32m              
[0m[1msrc/read.c:656:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |                   if (ebuf->floc.filenm)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  657 |                     printf (_("Skipping UTF-8 BOM in makefile '%s'\n"),[0m
  658 |                             ebuf->floc.filenm);[0m
  659 |                   else[0m
      | [0;32m                  } 
[0m[1msrc/read.c:659:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  659 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  660 |                     printf (_("Skipping UTF-8 BOM in makefile buffer\n"));[0m
      | [0;1;32m                                                                          
[0m[1msrc/read.c:665:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |       if (line[0] == '\0')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  666 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:674:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |           if (no_targets)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  675 |             /* Ignore the commands in a rule with no targets.  */[0m
  676 |             continue;[0m
      | [0;1;32m                     
[0m[1msrc/read.c:684:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |               if (ignoring)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  685 |                 /* Yep, this is a shell command, and we don't care.  */[0m
  686 |                 continue;[0m
      | [0;1;32m                         
[0m[1msrc/read.c:688:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |               if (commands_idx == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  689 |                 cmds_started = ebuf->floc.lineno;[0m
      | [0;1;32m                                                 
[0m[1msrc/read.c:698:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  698 |               memcpy (&commands[commands_idx], line + 1, linelen - 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/read.c:698:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  698 |               memcpy (&commands[commands_idx], line + 1, linelen - 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/read.c:716:7: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  716 |       strcpy (collapsed, line);[0m
      | [0;1;32m      ^       ~~~~~~~~~
[0m[1msrc/read.c:572:3: [0m[0;1;36mnote: [0m'collapsed' initialized to a null pointer value[0m
  572 |   char *collapsed = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1msrc/read.c:627:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  627 |   while (1)[0m
      | [0;1;32m  ^
[0m[1msrc/read.c:642:11: [0m[0;1;36mnote: [0m'nlines' is >= 0[0m
  642 |       if (nlines < 0)[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/read.c:642:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  642 |       if (nlines < 0)[0m
      | [0;1;32m      ^
[0m[1msrc/read.c:648:11: [0m[0;1;36mnote: [0mAssuming field 'lineno' is equal to 1[0m
  648 |       if (ebuf->floc.lineno == 1)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/read.c:648:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  648 |       if (ebuf->floc.lineno == 1)[0m
      | [0;1;32m      ^
[0m[1msrc/read.c:651:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  651 |           if (ul[0] == 0xEF && ul[1] == 0xBB && ul[2] == 0xBF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1msrc/read.c:651:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msrc/read.c:651:32: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  651 |           if (ul[0] == 0xEF && ul[1] == 0xBB && ul[2] == 0xBF)[0m
      | [0;1;32m                               ^~~~~~~~~~~~~
[0m[1msrc/read.c:651:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  651 |           if (ul[0] == 0xEF && ul[1] == 0xBB && ul[2] == 0xBF)[0m
      | [0;1;32m              ^
[0m[1msrc/read.c:651:49: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  651 |           if (ul[0] == 0xEF && ul[1] == 0xBB && ul[2] == 0xBF)[0m
      | [0;1;32m                                                ^~~~~~~~~~~~~
[0m[1msrc/read.c:651:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  651 |           if (ul[0] == 0xEF && ul[1] == 0xBB && ul[2] == 0xBF)[0m
      | [0;1;32m          ^
[0m[1msrc/read.c:654:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  654 |               if (ISDB(DB_BASIC))[0m
      | [0;1;32m                  ^
[0m[1msrc/debug.h:30:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISDB'[0m
   30 | #define ISDB(_l)    ((_l)&db_level)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~
[0m[1msrc/read.c:654:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  654 |               if (ISDB(DB_BASIC))[0m
      | [0;1;32m              ^
[0m[1msrc/read.c:665:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  665 |       if (line[0] == '\0')[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1msrc/read.c:665:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  665 |       if (line[0] == '\0')[0m
      | [0;1;32m      ^
[0m[1msrc/read.c:672:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  672 |       if (line[0] == cmd_prefix)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/read.c:672:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  672 |       if (line[0] == cmd_prefix)[0m
      | [0;1;32m      ^
[0m[1msrc/read.c:709:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  709 |       if (collapsed_length < linelen+1)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/read.c:709:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  709 |       if (collapsed_length < linelen+1)[0m
      | [0;1;32m      ^
[0m[1msrc/read.c:716:7: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
  716 |       strcpy (collapsed, line);[0m
      | [0;1;32m      ^       ~~~~~~~~~
[0m[1msrc/read.c:716:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  716 |       strcpy (collapsed, line);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/read.c:716:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  716 |       strcpy (collapsed, line);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/read.c:736:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  736 |               if (vmod.define_v)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  737 |                 in_ignored_define = 1;[0m
      | [0;1;32m                                      
[0m[1msrc/read.c:749:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |           else if (vmod.define_v)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  750 |             v = do_define (p, origin, ebuf);[0m
  751 |           else[0m
      | [0;32m          } 
[0m[1msrc/read.c:751:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  752 |             v = try_variable_definition (fstart, p, origin, 0);[0m
      | [0;1;32m                                                               
[0m[1msrc/read.c:756:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |           if (vmod.export_v != v_default)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  757 |             v->export = vmod.export_v;[0m
      | [0;1;32m                                      
[0m[1msrc/read.c:758:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |           if (vmod.private_v)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  759 |             v->private_var = 1;[0m
      | [0;1;32m                               
[0m[1msrc/read.c:766:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  766 |       if (*p == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  767 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:777:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |           if (word1eq ("endef") && STOP_SET (*p2, MAP_COMMENT|MAP_NUL))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  778 |             in_ignored_define = 0;[0m
      | [0;1;32m                                  
[0m[1msrc/read.c:788:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |             if (i == -1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  789 |               O (fatal, fstart, _("invalid syntax in conditional"));[0m
      | [0;1;32m                                                                    
[0m[1msrc/read.c:797:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |       if (ignoring)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  798 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:810:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |           if (*p2 == '\0')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  811 |             export_all_variables = exporting;[0m
  812 |           else[0m
      | [0;32m          } 
[0m[1msrc/read.c:826:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |                   if (v == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  827 |                     v = define_variable_global (p, l, "", o_file, 0, fstart);[0m
      | [0;1;32m                                                                             
[0m[1msrc/read.c:855:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  855 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  856 |             /* No pattern means remove all previous selective VPATH's.  */[0m
  857 |             vpat = 0;[0m
      | [0;1;32m                     
[0m[1msrc/read.c:963:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  963 |                 if (! r && ! noerror)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  964 |                   OS (fatal, &ebuf->floc, _("%s: failed to load"), name);[0m
      | [0;1;32m                                                                         
[0m[1msrc/read.c:969:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  969 |               if (!f)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  970 |                 f = enter_file (name);[0m
      | [0;1;32m                                      
[0m[1msrc/read.c:978:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  978 |               if (r == -1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  979 |                 continue;[0m
      | [0;1;32m                         
[0m[1msrc/read.c:995:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  995 |       if (line[0] == cmd_prefix)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  996 |         O (fatal, fstart, _("recipe commences before first target"));[0m
      | [0;1;32m                                                                     
[0m[1msrc/read.c:1046:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1046 |             if (cmdleft != 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1047 |               O (fatal, fstart, _("missing rule before recipe"));[0m
 1048 |             /* This line contained something but turned out to be nothing[0m
 1049 |                but whitespace (a comment?).  */[0m
 1050 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1msrc/read.c:1046:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |             if (cmdleft != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1047 |               O (fatal, fstart, _("missing rule before recipe"));[0m
      | [0;1;32m                                                                 
[0m[1msrc/read.c:1059:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1059 |             continue;[0m
      | [0;1;32m            ^       
[0m      | [0;32m            {       ;} 
[0m[1msrc/read.c:1062:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1062 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1msrc/read.c:1117:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |                 if (colonp > p2 && colonp[-1] == '&')[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1118 |                   --colonp;[0m
      | [0;1;32m                           
[0m[1msrc/read.c:1124:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1124 |             if (wtype == w_eol)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1125 |               break;[0m
      | [0;1;32m                    
[0m[1msrc/read.c:1142:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1142 |             if (*p2 == '\0')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1143 |               continue;[0m
      | [0;1;32m                       
[0m[1msrc/read.c:1146:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1146 |             if (cmd_prefix == '\t' && strneq (line, "        ", 8))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1147 |               O (fatal, fstart, _("missing separator (did you mean TAB instead of 8 spaces?)"));[0m
      | [0;1;32m                                                                                                
[0m[1msrc/read.c:1155:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1155 |                  || (strneq (&p2[2], "eq", 2) && !STOP_SET (p2[4], MAP_BLANK))))[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 1156 |               O (fatal, fstart, _("missing separator (ifeq/ifneq must be followed by whitespace)"));[0m
      | [0;1;32m                                                                                                    
[0m[1msrc/read.c:1167:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1167 |           if (save == '&')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1168 |             also_make_targets = 1;[0m
      | [0;1;32m                                  
[0m[1msrc/read.c:1191:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1191 |         if (two_colon)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1192 |           p2++;[0m
      | [0;1;32m               
[0m[1msrc/read.c:1248:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1248 |                 if (cmdleft != 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1249 |                   *(cmdleft++) = '\0';[0m
      | [0;1;32m                                      
[0m[1msrc/read.c:1259:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1259 |             while (*q-- == '\\')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1260 |               backslash = !backslash;[0m
      | [0;1;32m                                     
[0m[1msrc/read.c:1261:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1261 |             if (backslash)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1262 |               p = strchr (p + 1, ':');[0m
 1263 |             else[0m
      | [0;32m            } 
[0m[1msrc/read.c:1263:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1263 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1264 |               break;[0m
      | [0;1;32m                    
[0m[1msrc/read.c:1302:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1302 |             if (target == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1303 |               O (fatal, fstart, _("missing target pattern"));[0m
 1304 |             else if (target->next != 0)[0m
      | [0;32m            } 
[0m[1msrc/read.c:1304:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1304 |             else if (target->next != 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1305 |               O (fatal, fstart, _("multiple target patterns"));[0m
      | [0;1;32m                                                               
[0m[1msrc/read.c:1308:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1308 |             if (pattern_percent == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1309 |               O (fatal, fstart, _("target pattern contains no '%%'"));[0m
      | [0;1;32m                                                                      
[0m[1msrc/read.c:1312:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1312 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1313 |           pattern = 0;[0m
      | [0;1;32m                      
[0m[1msrc/read.c:1321:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1321 |         if (beg <= end && *beg != '\0')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1322 |           depstr = xstrndup (beg, end - beg + 1);[0m
 1323 |         else[0m
      | [0;32m        } 
[0m[1msrc/read.c:1323:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1323 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1324 |           depstr = 0;[0m
      | [0;1;32m                     
[0m[1msrc/read.c:1340:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1340 |             memcpy (commands, cmdleft, l);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/read.c:1340:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1340 |             memcpy (commands, cmdleft, l);[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/read.c:1351:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1351 |   if (conditionals->if_cmds)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1352 |     O (fatal, fstart, _("missing 'endif'"));[0m
      | [0;1;32m                                            
[0m[1msrc/read.c:1373:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1373 |   if (comment != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1374 |     /* Cut off the line at the #.  */[0m
 1375 |     *comment = '\0';[0m
      | [0;1;32m                    
[0m[1msrc/read.c:1390:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1390 |   if (*name == '\0')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1391 |     O (fatal, &ebuf->floc, _("empty variable name"));[0m
      | [0;1;32m                                                     
[0m[1msrc/read.c:1393:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1393 |   while (p > name && ISBLANK (*p))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1394 |     --p;[0m
      | [0;1;32m        
[0m[1msrc/read.c:1420:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1420 |   if (p == NULL)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1421 |     /* No assignment token, so assume recursive.  */[0m
 1422 |     var.flavor = f_recursive;[0m
 1423 |   else[0m
      | [0;32m  } 
[0m[1msrc/read.c:1425:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1425 |       if (var.value[0] != '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1426 |         O (error, &defstart, _("extraneous text after 'define' directive"));[0m
      | [0;1;32m                                                                            
[0m[1msrc/read.c:1435:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1435 |   if (name[0] == '\0')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1436 |     O (fatal, &defstart, _("empty variable name"));[0m
      | [0;1;32m                                                   
[0m[1msrc/read.c:1438:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1438 |   while (p > name && ISBLANK (*p))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1439 |     --p;[0m
      | [0;1;32m        
[0m[1msrc/read.c:1450:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1450 |       if (nlines < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1451 |         O (fatal, &defstart, _("missing 'endef', unterminated 'define'"));[0m
      | [0;1;32m                                                                          
[0m[1msrc/read.c:1467:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1467 |               && strneq (p, "define", 6))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1468 |             ++nlevels;[0m
 1469 | [0m
 1470 |           /* If this is an 'endef', decrement the count.  If it's now 0,[0m
 1471 |              we've found the last one.  */[0m
 1472 |           else if ((len == 5 || (len > 5 && ISBLANK (p[5])))[0m
      | [0;32m          } 
[0m[1msrc/read.c:1477:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1477 |               if (*(next_token (p)) != '\0')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1478 |                 O (error, &ebuf->floc,[0m
 1479 |                    _("extraneous text after 'endef' directive"));[0m
      | [0;1;32m                                                                 
[0m[1msrc/read.c:1481:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1481 |               if (--nlevels == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1482 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/read.c:1494:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1494 |       memcpy (&definition[idx], line, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/read.c:1494:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1494 |       memcpy (&definition[idx], line, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/read.c:1501:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1501 |   if (idx == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1502 |     definition[0] = '\0';[0m
 1503 |   else[0m
      | [0;32m  } 
[0m[1msrc/read.c:1503:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1503 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1504 |     definition[idx - 1] = '\0';[0m
      | [0;1;32m                               
[0m[1msrc/read.c:1557:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1557 |       if (*line != '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1558 |         EXTRATEXT ();[0m
      | [0;1;32m                     
[0m[1msrc/read.c:1560:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1560 |       if (!conditionals->if_cmds)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1561 |         EXTRACMD ();[0m
      | [0;1;32m                    
[0m[1msrc/read.c:1574:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1574 |       if (!conditionals->if_cmds)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1575 |         EXTRACMD ();[0m
      | [0;1;32m                    
[0m[1msrc/read.c:1579:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1579 |       if (conditionals->seen_else[o])[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1580 |         O (fatal, flocp, _("only one 'else' per conditional"));[0m
      | [0;1;32m                                                               
[0m[1msrc/read.c:1587:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1587 |             conditionals->ignoring[o] = 2;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1588 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/read.c:1591:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1591 |             conditionals->ignoring[o] = 0;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1592 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/read.c:1606:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1606 |       for (p = line+1; ! STOP_SET (*p, MAP_SPACE|MAP_NUL); ++p)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1607 |         ;[0m
      | [0;1;32m         
[0m[1msrc/read.c:1612:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1612 |           || conditional_line (line, len, flocp) < 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1613 |         EXTRATEXT ();[0m
 1614 |       else[0m
      | [0;32m      } 
[0m[1msrc/read.c:1618:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1618 |           if (conditionals->ignoring[o] < 2)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1619 |             conditionals->ignoring[o] = conditionals->ignoring[o+1];[0m
      | [0;1;32m                                                                    
[0m[1msrc/read.c:1647:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1647 |   for (i = 0; i < o; ++i)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1648 |     if (conditionals->ignoring[i])[0m
 1649 |       {[0m
 1650 |         /* We are already ignoring, so just push a level to match the next[0m
 1651 |            "else" or "endif", and keep ignoring.  We don't want to expand[0m
 1652 |            variables in the condition.  */[0m
 1653 |         conditionals->ignoring[o] = 1;[0m
 1654 |         return 1;[0m
 1655 |       }[0m
      | [0;1;32m       
[0m[1msrc/read.c:1672:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1672 |       if (*p != '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1673 |         return -1;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:1690:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1690 |       if (termin != ',' && termin != '"' && termin != '\'')[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1691 |         return -1;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:1698:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1698 |           for (; *line != '\0'; ++line)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1699 |             if (*line == '(')[0m
 1700 |               ++count;[0m
 1701 |             else if (*line == ')')[0m
 1702 |               --count;[0m
 1703 |             else if (*line == ',' && count <= 0)[0m
 1704 |               break;[0m
      | [0;1;32m                    
[0m[1msrc/read.c:1699:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1699 |             if (*line == '(')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1700 |               ++count;[0m
 1701 |             else if (*line == ')')[0m
      | [0;32m            } 
[0m[1msrc/read.c:1701:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1701 |             else if (*line == ')')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1702 |               --count;[0m
 1703 |             else if (*line == ',' && count <= 0)[0m
      | [0;32m            } 
[0m[1msrc/read.c:1703:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1703 |             else if (*line == ',' && count <= 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1704 |               break;[0m
      | [0;1;32m                    
[0m[1msrc/read.c:1706:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1706 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1707 |         while (*line != '\0' && *line != termin)[0m
 1708 |           ++line;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:1707:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1707 |         while (*line != '\0' && *line != termin)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1708 |           ++line;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:1710:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1710 |       if (*line == '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1711 |         return -1;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:1717:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1717 |           while (ISBLANK (p[-1]))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1718 |             --p;[0m
      | [0;1;32m                
[0m[1msrc/read.c:1721:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1721 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1722 |         *line++ = '\0';[0m
      | [0;1;32m                       
[0m[1msrc/read.c:1729:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1729 |       memcpy (s1, s2, l + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/read.c:1729:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1729 |       memcpy (s1, s2, l + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1msrc/read.c:1731:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1731 |       if (termin != ',')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1732 |         /* Find the start of the second string.  */[0m
 1733 |         NEXT_TOKEN (line);[0m
      | [0;1;32m                          
[0m[1msrc/read.c:1736:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1736 |       if (termin != ')' && termin != '"' && termin != '\'')[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1737 |         return -1;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:1746:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1746 |               if (*line == '(')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1747 |                 ++count;[0m
 1748 |               else if (*line == ')')[0m
      | [0;32m              } 
[0m[1msrc/read.c:1750:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1750 |                   if (count <= 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1751 |                     break;[0m
 1752 |                   else[0m
      | [0;32m                  } 
[0m[1msrc/read.c:1752:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1752 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1753 |                     --count;[0m
      | [0;1;32m                            
[0m[1msrc/read.c:1761:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1761 |           while (*line != '\0' && *line != termin)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1762 |             ++line;[0m
      | [0;1;32m                   
[0m[1msrc/read.c:1765:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1765 |       if (*line == '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1766 |         return -1;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:1770:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1770 |       if (*line != '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1771 |         EXTRATEXT ();[0m
      | [0;1;32m                     
[0m[1msrc/read.c:1779:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1779 |   for (i = 0; i < conditionals->if_cmds; ++i)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1780 |     if (conditionals->ignoring[i])[0m
 1781 |       return 1;[0m
      | [0;1;32m               
[0m[1msrc/read.c:1780:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1780 |     if (conditionals->ignoring[i])[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1781 |       return 1;[0m
      | [0;1;32m               
[0m[1msrc/read.c:1832:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1832 |           if (v->flavor == f_simple)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1833 |             v->value = allocated_variable_expand (v->value);[0m
 1834 |           else[0m
      | [0;32m          } 
[0m[1msrc/read.c:1834:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1834 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1835 |             v->value = xstrdup (v->value);[0m
      | [0;1;32m                                          
[0m[1msrc/read.c:1846:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1846 |           if (!f)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1847 |             f = enter_file (strcache_add (name));[0m
 1848 |           else if (f->double_colon)[0m
      | [0;32m          } 
[0m[1msrc/read.c:1848:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1848 |           else if (f->double_colon)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1849 |             f = f->double_colon;[0m
      | [0;1;32m                                
[0m[1msrc/read.c:1855:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1855 |           if (!v)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1856 |             O (fatal, flocp, _("Malformed target-specific variable definition"));[0m
      | [0;1;32m                                                                                 
[0m[1msrc/read.c:1863:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1863 |       if (vmod->export_v != v_default)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1864 |         v->export = vmod->export_v;[0m
      | [0;1;32m                                   
[0m[1msrc/read.c:1902:30: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1902 |       if (!posix_pedantic && streq (nm, ".POSIX"))[0m
      | [0;1;32m                             ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/read.c:1918:32: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1918 |       if (!second_expansion && streq (nm, ".SECONDEXPANSION"))[0m
      | [0;1;32m                               ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/read.c:1925:25: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1925 |       if (!one_shell && streq (nm, ".ONESHELL"))[0m
      | [0;1;32m                        ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/read.c:1940:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1940 |           if (strchr (nm, '%') != 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1941 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:1964:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1964 |                   if (!strneq (nm, dep_name (d2), l))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1965 |                     continue;[0m
      | [0;1;32m                             
[0m[1msrc/read.c:1973:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1973 |               if (reject)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1974 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/read.c:1977:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1977 |           if (!reject)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1978 |             define_variable_global (".DEFAULT_GOAL", 13, t->name,[0m
 1979 |                                     o_file, 0, NILF);[0m
      | [0;1;32m                                                     
[0m[1msrc/read.c:1992:7: [0m[0;1;35mwarning: [0m[1mresult of comparison against a string literal is unspecified (use an explicit string comparison function instead) [clang-diagnostic-string-compare][0m
 1992 |   if (streq (file->name, ".WAIT"))[0m
      | [0;1;32m      ^
[0m[1msrc/makeint.h:327:9: [0m[0;1;36mnote: [0mexpanded from macro 'streq'[0m
  327 |    ((a) == (b) || \[0m
      | [0;1;32m        ^  ~~~
[0m[1msrc/read.c:2041:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2041 |   if (snapped_deps)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2042 |     O (fatal, flocp, _("prerequisites cannot be defined in recipes"));[0m
      | [0;1;32m                                                                      
[0m[1msrc/read.c:2059:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2059 |   else if (are_also_makes)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2060 |     O (fatal, flocp, _("grouped targets must provide a recipe"));[0m
 2061 |   else[0m
      | [0;32m  } 
[0m[1msrc/read.c:2061:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2061 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2062 |      cmds = NULL;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:2066:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2066 |   if (depstr == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2067 |     deps = 0;[0m
 2068 |   else[0m
      | [0;32m  } 
[0m[1msrc/read.c:2087:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2087 |           if (! pattern && ! implicit_percent)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2088 |             deps = enter_prereqs (deps, NULL);[0m
      | [0;1;32m                                              
[0m[1msrc/read.c:2102:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2102 |       if (pattern != 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2103 |         O (fatal, flocp, _("mixed implicit and static pattern rules"));[0m
      | [0;1;32m                                                                       
[0m[1msrc/read.c:2111:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2111 |       for (c = 1; nextf; ++c, nextf = nextf->next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2112 |         ;[0m
      | [0;1;32m         
[0m[1msrc/read.c:2125:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2125 |           if (implicit_percent == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2126 |             O (fatal, flocp, _("mixed implicit and normal rules"));[0m
      | [0;1;32m                                                                   
[0m[1msrc/read.c:2156:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2156 |       if (pattern && !pattern_matches (pattern, pattern_percent, name))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 2157 |         OS (error, flocp,[0m
 2158 |             _("target '%s' doesn't match the target pattern"), name);[0m
 2159 |       else if (deps)[0m
      | [0;32m      } 
[0m[1msrc/read.c:2159:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2159 |       else if (deps)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2160 |         /* If there are multiple targets, copy the chain DEPS for all but the[0m
 2161 |            last one.  It is not safe for the same deps to go in more than one[0m
 2162 |            place in the database.  */[0m
 2163 |         this = nextf != 0 ? copy_dep_chain (deps) : deps;[0m
      | [0;1;32m                                                         
[0m[1msrc/read.c:2171:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2171 |           if (f->double_colon)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2172 |             OS (fatal, flocp,[0m
 2173 |                 _("target file '%s' has both : and :: entries"), f->name);[0m
      | [0;1;32m                                                                          
[0m[1msrc/read.c:2177:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2177 |           if (cmds != 0 && cmds == f->cmds)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2178 |             OS (error, flocp,[0m
 2179 |                 _("target '%s' given more than once in the same rule"),[0m
 2180 |                 f->name);[0m
 2181 | [0m
 2182 |           /* Check for two single-colon entries both with commands.[0m
 2183 |              Check is_target so that we don't lose on files such as .c.o[0m
 2184 |              whose commands were preinitialized.  */[0m
 2185 |           else if (cmds != 0 && f->cmds != 0 && f->is_target)[0m
      | [0;32m          } 
[0m[1msrc/read.c:2197:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2197 |           if (f == default_file && this == 0 && cmds == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2198 |             f->cmds = 0;[0m
      | [0;1;32m                        
[0m[1msrc/read.c:2199:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2199 |           if (cmds != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2200 |             f->cmds = cmds;[0m
      | [0;1;32m                           
[0m[1msrc/read.c:2222:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2222 |           if (f != 0 && f->is_target && !f->double_colon)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2223 |             OS (fatal, flocp,[0m
 2224 |                 _("target file '%s' has both : and :: entries"), f->name);[0m
      | [0;1;32m                                                                          
[0m[1msrc/read.c:2231:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2231 |           if (f->double_colon == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2232 |             /* This is the first entry for this name, so we must set its[0m
 2233 |                double_colon pointer to itself.  */[0m
 2234 |             f->double_colon = f;[0m
      | [0;1;32m                                
[0m[1msrc/read.c:2261:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2261 |               if (! this->need_2nd_expansion)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2262 |                 this = enter_prereqs (this, f->stem);[0m
 2263 |               else[0m
      | [0;32m              } 
[0m[1msrc/read.c:2263:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2263 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2264 |                 this->stem = f->stem;[0m
      | [0;1;32m                                     
[0m[1msrc/read.c:2272:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2272 |           if (f->deps == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2273 |             f->deps = this;[0m
 2274 |           else if (cmds != 0)[0m
      | [0;32m          } 
[0m[1msrc/read.c:2279:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2279 |               while (d->next != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2280 |                 d = d->next;[0m
      | [0;1;32m                            
[0m[1msrc/read.c:2290:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2290 |               while (d->next != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2291 |                 d = d->next;[0m
      | [0;1;32m                            
[0m[1msrc/read.c:2302:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2302 |       if (nextf == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2303 |         break;[0m
      | [0;1;32m              
[0m[1msrc/read.c:2309:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2309 |       if (find_percent_cached (&name))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2310 |         O (error, flocp,[0m
 2311 |            _("*** mixed implicit and normal rules: deprecated syntax"));[0m
      | [0;1;32m                                                                        
[0m[1msrc/read.c:2358:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2358 |       while (! STOP_SET (*p, stopmap))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2359 |         ++p;[0m
      | [0;1;32m            
[0m[1msrc/read.c:2361:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2361 |       if (*p == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2362 |         break;[0m
      | [0;1;32m              
[0m[1msrc/read.c:2370:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2370 |           if (openparen == '\0')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2371 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:2383:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2383 |                   if (*p == openparen)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2384 |                     ++pcount;[0m
 2385 |                   else if (*p == closeparen)[0m
      | [0;32m                  } 
[0m[1msrc/read.c:2385:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2385 |                   else if (*p == closeparen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2386 |                     if (--pcount == 0)[0m
 2387 |                       {[0m
 2388 |                         ++p;[0m
 2389 |                         break;[0m
 2390 |                       }[0m
      | [0;1;32m                       
[0m[1msrc/read.c:2403:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2403 |           while (&p[i] >= string && p[i] == '\\')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2404 |             --i;[0m
      | [0;1;32m                
[0m[1msrc/read.c:2407:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2407 |           if (string_len == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2408 |             string_len = strlen (string);[0m
      | [0;1;32m                                         
[0m[1msrc/read.c:2414:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2414 |             memmove (&p[i], &p[i/2], (string_len - (p - string)) + hi + 1);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/read.c:2414:13: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 2414 |             memmove (&p[i], &p[i/2], (string_len - (p - string)) + hi + 1);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/read.c:2417:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2417 |           if (i % 2 == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2418 |             /* All the backslashes quoted each other; the STOPCHAR was[0m
 2419 |                unquoted.  */[0m
 2420 |             return p;[0m
      | [0;1;32m                     
[0m[1msrc/read.c:2424:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2424 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2425 |         /* No backslash in sight.  */[0m
 2426 |         return p;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:2443:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2443 |       if (!p)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2444 |         return NULL;[0m
      | [0;1;32m                    
[0m[1msrc/read.c:2450:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2450 |           while (&p[i] >= string && p[i] == '\\')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2451 |             --i;[0m
      | [0;1;32m                
[0m[1msrc/read.c:2454:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2454 |           if (string_len == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2455 |             string_len = strlen (string);[0m
      | [0;1;32m                                         
[0m[1msrc/read.c:2461:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2461 |             memmove (&p[i], &p[i/2], (string_len - (p - string)) + hi + 1);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/read.c:2461:13: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 2461 |             memmove (&p[i], &p[i/2], (string_len - (p - string)) + hi + 1);[0m
      | [0;1;32m            ^~~~~~~
[0m[1msrc/read.c:2464:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2464 |           if (i % 2 == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2465 |             /* All the backslashes quoted each other; the STOPCHAR was[0m
 2466 |                unquoted.  */[0m
 2467 |             return p;[0m
      | [0;1;32m                     
[0m[1msrc/read.c:2471:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2471 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2472 |         /* No backslash in sight.  */[0m
 2473 |         return p;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:2493:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2493 |           while (*e == '\\')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2494 |             ++e;[0m
      | [0;1;32m                
[0m[1msrc/read.c:2500:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2500 |               memmove (p, s, l);[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/read.c:2500:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 2500 |               memmove (p, s, l);[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/read.c:2504:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2504 |               if (*e == '\0')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2505 |                 break;[0m
      | [0;1;32m                      
[0m[1msrc/read.c:2511:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2511 |               memmove (p, s, l);[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/read.c:2511:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 2511 |               memmove (p, s, l);[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/read.c:2547:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2547 |   if (!p || p == *string || p[-1] != '\\')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2548 |     return p;[0m
      | [0;1;32m             
[0m[1msrc/read.c:2553:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2553 |   memcpy (new, *string, slen + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/read.c:2553:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2553 |   memcpy (new, *string, slen + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1msrc/read.c:2563:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2563 |       while (&np[i] >= new && np[i] == '\\')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2564 |         --i;[0m
      | [0;1;32m            
[0m[1msrc/read.c:2572:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2572 |         memmove (&pp[i], &pp[i/2], (slen - (pp - new)) + hi + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/read.c:2572:9: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 2572 |         memmove (&pp[i], &pp[i/2], (slen - (pp - new)) + hi + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msrc/read.c:2580:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2580 |       if (i % 2 == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2581 |         break;[0m
      | [0;1;32m              
[0m[1msrc/read.c:2613:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2613 |   if (ebuf->bufnext >= ebuf->bufstart + ebuf->size)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2614 |     return -1;[0m
      | [0;1;32m              
[0m[1msrc/read.c:2636:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2636 |       while (p > bol && *(--p) == '\\')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2637 |         backslash = !backslash;[0m
      | [0;1;32m                               
[0m[1msrc/read.c:2638:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2638 |       if (!backslash)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2639 |         break;[0m
      | [0;1;32m              
[0m[1msrc/read.c:2661:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2661 |   if (!ebuf->fp)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2662 |     return readstring (ebuf);[0m
      | [0;1;32m                             
[0m[1msrc/read.c:2696:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2696 |       if (p[-1] != '\n')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2697 |         goto more_buffer;[0m
      | [0;1;32m                         
[0m[1msrc/read.c:2708:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2708 |           memmove (p-1, p, strlen (p) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/read.c:2708:11: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 2708 |           memmove (p-1, p, strlen (p) + 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1msrc/read.c:2715:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2715 |           if (*p2 != '\\')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2716 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:2728:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2728 |       if (end - p >= 80)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2729 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/read.c:2744:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2744 |   if (ferror (ebuf->fp))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2745 |     pfatal_with_name (ebuf->floc.filenm);[0m
      | [0;1;32m                                         
[0m[1msrc/read.c:2783:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2783 |   while (ISSPACE (*p))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2784 |     ++p;[0m
      | [0;1;32m        
[0m[1msrc/read.c:2793:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2793 |       wtype = w_eol;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2794 |       goto done;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/read.c:2797:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2797 |       wtype = w_semicolon;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2798 |       goto done;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/read.c:2801:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2801 |       wtype = w_varassign;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2802 |       goto done;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/read.c:2805:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2805 |       if (*p == '=')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1msrc/read.c:2818:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2818 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2819 |             wtype = w_dcolon;[0m
      | [0;1;32m                             
[0m[1msrc/read.c:2821:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2821 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2822 |         wtype = w_colon;[0m
      | [0;1;32m                        
[0m[1msrc/read.c:2826:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2826 |       if (*p == ':')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2827 |         {[0m
 2828 |           ++p;[0m
 2829 |           if (*p != ':')[0m
 2830 |             wtype = w_ampcolon; /* &: */[0m
 2831 |           else[0m
 2832 |             {[0m
 2833 |               ++p;[0m
 2834 |               wtype = w_ampdcolon; /* &:: */[0m
 2835 |             }[0m
 2836 |           goto done;[0m
 2837 |         }[0m
 2838 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/read.c:2829:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2829 |           if (*p != ':')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2830 |             wtype = w_ampcolon; /* &: */[0m
 2831 |           else[0m
      | [0;32m          } 
[0m[1msrc/read.c:2849:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2849 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1msrc/read.c:2852:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2852 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1msrc/read.c:2869:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2869 |       if (END_OF_TOKEN (c))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2870 |         goto done_word;[0m
      | [0;1;32m                       
[0m[1msrc/read.c:2875:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2875 |           goto done_word;[0m
      | [0;1;32m          ^             
[0m      | [0;32m          {             ;} 
[0m[1msrc/read.c:2886:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2886 |           goto done_word;[0m
      | [0;1;32m          ^             
[0m      | [0;32m          {             ;} 
[0m[1msrc/read.c:2889:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2889 |           c = *(p++);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1msrc/read.c:2890:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2890 |           if (c == '$')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2891 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:2892:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2892 |           if (c == '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2893 |             goto done_word;[0m
      | [0;1;32m                           
[0m[1msrc/read.c:2899:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2899 |           if (c == '(')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2900 |             closeparen = ')';[0m
 2901 |           else if (c == '{')[0m
      | [0;32m          } 
[0m[1msrc/read.c:2901:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2901 |           else if (c == '{')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2902 |             closeparen = '}';[0m
 2903 |           else[0m
      | [0;32m          } 
[0m[1msrc/read.c:2903:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2903 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2904 |             /* This is a single-letter variable reference.  */[0m
 2905 |             break;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:2909:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2909 |               if (*p == c)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2910 |                 ++count;[0m
 2911 |               else if (*p == closeparen && --count < 0)[0m
      | [0;32m              } 
[0m[1msrc/read.c:2921:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2921 |           if (*p == '=')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2922 |             goto done_word;[0m
      | [0;1;32m                           
[0m[1msrc/read.c:2923:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2923 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/read.c:2926:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2926 |           switch (*p)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2927 |             {[0m
 2928 |             case ':':[0m
 2929 |             case ';':[0m
 2930 |             case '=':[0m
 2931 |             case '\\':[0m
 2932 |               ++p;[0m
 2933 |               break;[0m
 2934 |             }[0m
 2935 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/read.c:2933:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2933 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1msrc/read.c:2938:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2938 |           if (*p == ':')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 2939 |             goto done_word;[0m
 2940 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/read.c:2938:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2938 |           if (*p == ':')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2939 |             goto done_word;[0m
      | [0;1;32m                           
[0m[1msrc/read.c:2943:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2943 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/read.c:2952:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2952 |   if (startp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2953 |     *startp = beg;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:2954:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2954 |   if (length)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2955 |     *length = p - beg;[0m
      | [0;1;32m                      
[0m[1msrc/read.c:2977:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2977 |   if (arg_dirs)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2978 |     for (cpp = arg_dirs; *cpp != 0; ++cpp)[0m
 2979 |       ++idx;[0m
      | [0;1;32m            
[0m[1msrc/read.c:2978:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2978 |     for (cpp = arg_dirs; *cpp != 0; ++cpp)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2979 |       ++idx;[0m
      | [0;1;32m            
[0m[1msrc/read.c:2995:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2995 |   if (arg_dirs)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m[1msrc/read.c:3013:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3013 |             if (expanded != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3014 |               dir = expanded;[0m
      | [0;1;32m                             
[0m[1msrc/read.c:3022:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3022 |             while (len > 1 && dir[len - 1] == '/')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 3023 |               --len;[0m
      | [0;1;32m                    
[0m[1msrc/read.c:3024:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3024 |             if (len > max_incl_len)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3025 |               max_incl_len = len;[0m
      | [0;1;32m                                 
[0m[1msrc/read.c:3061:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3061 |               while (len > 1 && (*cpp)[len - 1] == '/')[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3062 |                 --len;[0m
      | [0;1;32m                      
[0m[1msrc/read.c:3063:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3063 |               if (len > max_incl_len)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3064 |                 max_incl_len = len;[0m
      | [0;1;32m                                   
[0m[1msrc/read.c:3075:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3075 |   for (cpp = dirs; *cpp != 0; ++cpp)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3076 |     do_variable_definition (NILF, ".INCLUDE_DIRS", *cpp,[0m
 3077 |                             o_default, f_append, 0);[0m
      | [0;1;32m                                                    
[0m[1msrc/read.c:3119:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3119 |               if (p != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3120 |                 home_dir = p->pw_dir;[0m
      | [0;1;32m                                     
[0m[1msrc/read.c:3127:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3127 |           if (is_variable)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3128 |             free (home_dir);[0m
      | [0;1;32m                            
[0m[1msrc/read.c:3137:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3137 |       if (userend != 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3138 |         *userend = '\0';[0m
      | [0;1;32m                        
[0m[1msrc/read.c:3142:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3142 |           if (userend == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3143 |             return xstrdup (pwent->pw_dir);[0m
      | [0;1;32m                                           
[0m[1msrc/read.c:3148:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3148 |       else if (userend != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3149 |         *userend = '/';[0m
      | [0;1;32m                       
[0m[1msrc/read.c:3213:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3213 |   if (NONE_SET (flags, PARSEFS_ONEWORD))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3214 |     findmap |= MAP_BLANK;[0m
      | [0;1;32m                         
[0m[1msrc/read.c:3219:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3219 |   if (size < sizeof (struct nameseq))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3220 |     size = sizeof (struct nameseq);[0m
      | [0;1;32m                                   
[0m[1msrc/read.c:3222:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3222 |   if (NONE_SET (flags, PARSEFS_NOGLOB))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 3223 |     dir_setup_glob (&gl);[0m
      | [0;1;32m                         
[0m[1msrc/read.c:3255:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3255 |       if (STOP_SET (*p, stopmap))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3256 |         break;[0m
      | [0;1;32m              
[0m[1msrc/read.c:3282:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3282 |       if (!p)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 3283 |         p = s + strlen (s);[0m
      | [0;1;32m                           
[0m[1msrc/read.c:3294:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3294 |       if (NONE_SET (flags, PARSEFS_NOSTRIP))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m[1msrc/read.c:3308:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3308 |             while (*s == '/')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3309 |               ++s;[0m
      | [0;1;32m                  
[0m[1msrc/read.c:3347:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3347 |           memcpy (tp, s, nlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/read.c:3347:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 3347 |           memcpy (tp, s, nlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/read.c:3385:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3385 |                   while (! STOP_SET (*e, findmap))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 3386 |                     ++e;[0m
      | [0;1;32m                        
[0m[1msrc/read.c:3388:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3388 |                   if (e == o)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3389 |                     break;[0m
      | [0;1;32m                          
[0m[1msrc/read.c:3406:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3406 |               if (! nlen)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3407 |                 continue;[0m
      | [0;1;32m                         
[0m[1msrc/read.c:3420:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3420 |               if (nlen == 1)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3421 |                 continue;[0m
      | [0;1;32m                         
[0m[1msrc/read.c:3449:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3449 |           if (tildep != 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3450 |             name = tildep;[0m
      | [0;1;32m                          
[0m[1msrc/read.c:3471:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3471 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m[1msrc/read.c:3475:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3475 |             out_of_memory ();[0m
      | [0;1;32m            ^               
[0m      | [0;32m            {               ;} 
[0m[1msrc/read.c:3479:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3479 |             tot = gl.gl_pathc;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 3480 |             nlist = (const char **)gl.gl_pathv;[0m
 3481 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/read.c:3485:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3485 |             if (ANY_SET (flags, PARSEFS_EXISTS))[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 3486 |               {[0m
 3487 |                 tot = 0;[0m
 3488 |                 break;[0m
 3489 |               }[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/read.c:3494:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3494 |             tot = 1;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 3495 |             nlist = &name;[0m
 3496 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1msrc/read.c:3500:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3500 |       for (i = 0; i < tot; ++i)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m[1msrc/read.c:3506:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3506 |             if (! found)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3507 |               /* No matches.  Use MEMNAME as-is.  */[0m
 3508 |               NEWELT (concat (5, prefix, nlist[i], "(", memname, ")"));[0m
 3509 |             else[0m
      | [0;32m            } 
[0m[1msrc/read.c:3512:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3512 |                 if (*newp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3513 |                   (*newp)->next = found;[0m
 3514 |                 else[0m
      | [0;32m                } 
[0m[1msrc/read.c:3514:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3514 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3515 |                   *newp = found;[0m
      | [0;1;32m                                
[0m[1msrc/read.c:3520:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3520 |                     if (! cachep)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3521 |                       found->name = xstrdup (concat (2, prefix, name));[0m
 3522 |                     else if (prefix)[0m
      | [0;32m                    } 
[0m[1msrc/read.c:3522:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3522 |                     else if (prefix)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3523 |                       found->name = strcache_add (concat (2, prefix, name));[0m
      | [0;1;32m                                                                            
[0m[1msrc/read.c:3525:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3525 |                     if (found->next == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3526 |                       break;[0m
      | [0;1;32m                            
[0m[1msrc/read.c:3533:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3533 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3534 | #endif /* !NO_ARCHIVES */[0m
 3535 |           NEWELT (concat (2, prefix, nlist[i]));[0m
      | [0;1;32m                                                
[0m[1msrc/read.c:3537:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3537 |       if (globme)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3538 |         globfree (&gl);[0m
      | [0;1;32m                       
[0m263 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[32/32][241.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/make-4.4.1/tidy-fixes/tmpj59xr8t2.yaml -p=/itch/common/crepos/cu-to-rtu/c/make-4.4.1 /itch/common/crepos/cu-to-rtu/c/make-4.4.1/src/file.c
[1msrc/file.c:111:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |       while (ISDIRSEP (*name))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  112 |         /* Skip following slashes: ".//foo" is "foo", not "/foo".  */[0m
  113 |         ++name;[0m
      | [0;1;32m               
[0m[1msrc/file.c:219:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |   if (! file_hash_cmp (from_file, &file_key))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  220 |     return;[0m
      | [0;1;32m           
[0m[1msrc/file.c:224:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |   while (from_file->renamed != 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  225 |     from_file = from_file->renamed;[0m
      | [0;1;32m                                   
[0m[1msrc/file.c:226:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |   if (file_hash_cmp (from_file, &file_key))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  227 |     /* hname changed unexpectedly!! */[0m
  228 |     abort ();[0m
      | [0;1;32m             
[0m[1msrc/file.c:232:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |   if (deleted_file != from_file)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  233 |     /* from_file isn't the one stored in files */[0m
  234 |     abort ();[0m
      | [0;1;32m             
[0m[1msrc/file.c:243:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |   for (f = from_file->double_colon; f != 0; f = f->prev)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  244 |     f->hname = to_hname;[0m
      | [0;1;32m                        
[0m[1msrc/file.c:258:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |       if (to_file->cmds == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  259 |         to_file->cmds = from_file->cmds;[0m
  260 |       else if (from_file->cmds != to_file->cmds)[0m
      | [0;32m      } 
[0m[1msrc/file.c:266:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |           if (to_file->cmds->fileinfo.filenm != 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  267 |             error (&from_file->cmds->fileinfo,[0m
  268 |                    l + strlen (to_file->cmds->fileinfo.filenm) + INTSTR_LENGTH,[0m
  269 |                    _("Recipe was specified for file '%s' at %s:%lu,"),[0m
  270 |                    from_file->name, from_file->cmds->fileinfo.filenm,[0m
  271 |                    from_file->cmds->fileinfo.lineno);[0m
  272 |           else[0m
      | [0;32m          } 
[0m[1msrc/file.c:272:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  273 |             error (&from_file->cmds->fileinfo, l,[0m
  274 |                    _("Recipe for file '%s' was found by implicit rule search,"),[0m
  275 |                    from_file->name);[0m
      | [0;1;32m                                    
[0m[1msrc/file.c:288:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |   if (to_file->deps == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  289 |     to_file->deps = from_file->deps;[0m
  290 |   else[0m
      | [0;32m  } 
[0m[1msrc/file.c:293:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |       while (deps->next != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  294 |         deps = deps->next;[0m
      | [0;1;32m                          
[0m[1msrc/file.c:300:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |   if (to_file->double_colon && from_file->is_target && !from_file->double_colon)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  301 |     OSS (fatal, NILF, _("can't rename single-colon '%s' to double-colon '%s'"),[0m
  302 |          from_file->name, to_hname);[0m
      | [0;1;32m                                    
[0m[1msrc/file.c:305:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |       if (to_file->is_target)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  306 |         OSS (fatal, NILF,[0m
  307 |              _("can't rename double-colon '%s' to single-colon '%s'"),[0m
  308 |              from_file->name, to_hname);[0m
  309 |       else[0m
      | [0;32m      } 
[0m[1msrc/file.c:309:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  310 |         to_file->double_colon = from_file->double_colon;[0m
      | [0;1;32m                                                        
[0m[1msrc/file.c:313:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |   if (from_file->last_mtime > to_file->last_mtime)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  314 |     /* %%% Kludge so -W wins on a file that gets vpathized.  */[0m
  315 |     to_file->last_mtime = from_file->last_mtime;[0m
      | [0;1;32m                                                
[0m[1msrc/file.c:368:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |   if (question_flag || touch_flag || all_secondary || no_intermediates)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  369 |     return;[0m
      | [0;1;32m           
[0m[1msrc/file.c:371:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |   if (sig && just_print_flag)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  372 |     return;[0m
      | [0;1;32m           
[0m[1msrc/file.c:376:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |   for ( ; file_slot < file_end; file_slot++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m[1msrc/file.c:388:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |             if (f->update_status == us_none)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  389 |               /* If nothing would have created this file yet,[0m
  390 |                  don't print an "rm" command for it.  */[0m
  391 |               continue;[0m
      | [0;1;32m                       
[0m[1msrc/file.c:392:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  392 |             if (just_print_flag)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  393 |               status = 0;[0m
  394 |             else[0m
      | [0;32m            } 
[0m[1msrc/file.c:397:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |                 if (status < 0 && errno == ENOENT)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  398 |                   continue;[0m
      | [0;1;32m                           
[0m[1msrc/file.c:402:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |                 if (sig)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  403 |                   OS (error, NILF,[0m
  404 |                       _("*** Deleting intermediate file '%s'"), f->name);[0m
  405 |                 else[0m
      | [0;32m                } 
[0m[1msrc/file.c:407:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |                     if (! doneany)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  408 |                       DB (DB_BASIC, (_("Removing intermediate files...\n")));[0m
      | [0;1;32m                                                                             
[0m[1msrc/file.c:416:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  416 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  417 |                           putchar (' ');[0m
      | [0;1;32m                                        
[0m[1msrc/file.c:456:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |       if (! new)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  457 |         new = ood;[0m
  458 |       else[0m
      | [0;32m      } 
[0m[1msrc/file.c:461:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  461 |           for (dp = new; dp->next != NULL; dp = dp->next)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  462 |             ;[0m
      | [0;1;32m             
[0m[1msrc/file.c:466:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |       for (; ood != NULL; ood = ood->next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  467 |         ood->ignore_mtime = 1;[0m
      | [0;1;32m                              
[0m[1msrc/file.c:480:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |   if (deps == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  481 |     return 0;[0m
      | [0;1;32m             
[0m[1msrc/file.c:493:31: [0m[0;1;35mwarning: [0m[1mUse of memory after it is freed [clang-analyzer-unix.Malloc][0m
  493 |           size_t nl = strlen (dp->name) + 1;[0m
      | [0;1;32m                              ^~~~~~~~
[0m[1msrc/file.c:480:7: [0m[0;1;36mnote: [0mAssuming 'deps' is not equal to null[0m
  480 |   if (deps == 0)[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1msrc/file.c:480:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  480 |   if (deps == 0)[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:485:7: [0m[0;1;36mnote: [0mAssuming 'stem' is non-null[0m
  485 |   if (stem)[0m
      | [0;1;32m      ^~~~
[0m[1msrc/file.c:485:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  485 |   if (stem)[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:490:14: [0m[0;1;36mnote: [0m'dp' is not equal to null[0m
  490 |       while (dp != 0)[0m
      | [0;1;32m             ^~
[0m[1msrc/file.c:490:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  490 |       while (dp != 0)[0m
      | [0;1;32m      ^
[0m[1msrc/file.c:497:15: [0m[0;1;36mnote: [0mAssuming 'percent' is null[0m
  497 |           if (percent)[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/file.c:497:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  497 |           if (percent)[0m
      | [0;1;32m          ^
[0m[1msrc/file.c:490:14: [0m[0;1;36mnote: [0mAssuming 'dp' is not equal to null[0m
  490 |       while (dp != 0)[0m
      | [0;1;32m             ^~~~~~~
[0m[1msrc/file.c:490:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  490 |       while (dp != 0)[0m
      | [0;1;32m      ^
[0m[1msrc/file.c:497:15: [0m[0;1;36mnote: [0mAssuming 'percent' is non-null[0m
  497 |           if (percent)[0m
      | [0;1;32m              ^~~~~~~
[0m[1msrc/file.c:497:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  497 |           if (percent)[0m
      | [0;1;32m          ^
[0m[1msrc/file.c:504:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  504 |               if (stem[0] == '\0')[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~
[0m[1msrc/file.c:504:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  504 |               if (stem[0] == '\0')[0m
      | [0;1;32m              ^
[0m[1msrc/file.c:515:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  515 |               if (variable_buffer[0] == '\0')[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/file.c:515:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  515 |               if (variable_buffer[0] == '\0')[0m
      | [0;1;32m              ^
[0m[1msrc/file.c:518:23: [0m[0;1;36mnote: [0mAssuming 'dp' is equal to 'deps'[0m
  518 |                   if (dp == deps)[0m
      | [0;1;32m                      ^~~~~~~~~~
[0m[1msrc/file.c:518:19: [0m[0;1;36mnote: [0mTaking true branch[0m
  518 |                   if (dp == deps)[0m
      | [0;1;32m                  ^
[0m[1msrc/file.c:522:19: [0m[0;1;36mnote: [0mMemory is released[0m
  522 |                   free_dep (df);[0m
      | [0;1;32m                  ^
[0m[1msrc/dep.h:128:30: [0m[0;1;36mnote: [0mexpanded from macro 'free_dep'[0m
  128 | # define free_dep(_d)        free_ns (_d)[0m
      | [0;1;32m                             ^~~~~~~~~~~~
[0m[1msrc/dep.h:127:30: [0m[0;1;36mnote: [0mexpanded from macro 'free_ns'[0m
  127 | # define free_ns(_n)         free (_n)[0m
      | [0;1;32m                             ^~~~~~~~~
[0m[1msrc/file.c:523:19: [0m[0;1;36mnote: [0m Execution continues on line 490[0m
  523 |                   continue;[0m
      | [0;1;32m                  ^
[0m[1msrc/file.c:490:14: [0m[0;1;36mnote: [0m'dp' is not equal to null[0m
  490 |       while (dp != 0)[0m
      | [0;1;32m             ^~
[0m[1msrc/file.c:490:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  490 |       while (dp != 0)[0m
      | [0;1;32m      ^
[0m[1msrc/file.c:493:31: [0m[0;1;36mnote: [0mUse of memory after it is freed[0m
  493 |           size_t nl = strlen (dp->name) + 1;[0m
      | [0;1;32m                              ^~~~~~~~
[0m[1msrc/file.c:495:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  495 |           memcpy (nm, dp->name, nl);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/file.c:495:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  495 |           memcpy (nm, dp->name, nl);[0m
      | [0;1;32m          ^~~~~~
[0m[1msrc/file.c:506:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  506 |                   memmove (percent, percent+1, strlen (percent));[0m
      | [0;1;32m                  ^~~~~~~
[0m[1msrc/file.c:506:19: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  506 |                   memmove (percent, percent+1, strlen (percent));[0m
      | [0;1;32m                  ^~~~~~~
[0m[1msrc/file.c:510:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  510 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  511 |                 o = patsubst_expand_pat (variable_buffer, stem, pattern, nm,[0m
  512 |                                          pattern+1, percent+1);[0m
      | [0;1;32m                                                               
[0m[1msrc/file.c:518:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |                   if (dp == deps)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  519 |                     dp = deps = deps->next;[0m
  520 |                   else[0m
      | [0;32m                  } 
[0m[1msrc/file.c:520:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  521 |                     dp = dl->next = dp->next;[0m
      | [0;1;32m                                             
[0m[1msrc/file.c:540:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |       if (d1->need_2nd_expansion)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  541 |         continue;[0m
      | [0;1;32m                 
[0m[1msrc/file.c:544:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  544 |       if (d1->file == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  545 |         d1->file = enter_file (d1->name);[0m
      | [0;1;32m                                         
[0m[1msrc/file.c:548:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |       if (!stem)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  549 |         /* This file is explicitly mentioned as a prereq.  */[0m
  550 |         d1->file->is_explicit = 1;[0m
      | [0;1;32m                                  
[0m[1msrc/file.c:568:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  568 |   if (f->snapped)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  569 |     return;[0m
      | [0;1;32m           
[0m[1msrc/file.c:624:15: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  624 |               strcpy (s, pcs);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/file.c:624:15: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  624 |               strcpy (s, pcs);[0m
      | [0;1;32m              ^~~~~~
[0m[1msrc/file.c:670:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  670 |           if (d->file == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  671 |             d->file = enter_file (d->name);[0m
      | [0;1;32m                                           
[0m[1msrc/file.c:674:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |           if (!fstem)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  675 |             /* This file is explicitly mentioned as a prereq.  */[0m
  676 |             d->file->is_explicit = 1;[0m
      | [0;1;32m                                     
[0m[1msrc/file.c:685:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  685 |     if (changed_dep)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  686 |       shuffle_deps_recursive (f->deps);[0m
      | [0;1;32m                                       
[0m[1msrc/file.c:700:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  700 |       if (!d->file)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  701 |         d->file = enter_file (d->name);[0m
      | [0;1;32m                                       
[0m[1msrc/file.c:718:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |   if (!second_expansion)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  719 |     f->updating = 0;[0m
      | [0;1;32m                    
[0m[1msrc/file.c:725:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |   if (all_secondary && !f->notintermediate)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  726 |     f->intermediate = 1;[0m
      | [0;1;32m                        
[0m[1msrc/file.c:730:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  730 |   if (no_intermediates && !f->intermediate && !f->secondary)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  731 |     f->notintermediate = 1;[0m
      | [0;1;32m                           
[0m[1msrc/file.c:734:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  734 |   if (f->variables)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  735 |     prereqs = expand_extra_prereqs (lookup_variable_in_set (STRING_SIZE_TUPLE(".EXTRA_PREREQS"), f->variables->set));[0m
  736 | [0m
  737 |   else if (f->is_target)[0m
      | [0;32m  } 
[0m[1msrc/file.c:737:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  737 |   else if (f->is_target)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  738 |     prereqs = copy_dep_chain (arg);[0m
      | [0;1;32m                                   
[0m[1msrc/file.c:743:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  743 |       for (d = prereqs; d; d = d->next)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  744 |         if (streq (f->name, dep_name (d)))[0m
  745 |           /* Skip circular dependencies.  */[0m
  746 |           break;[0m
      | [0;1;32m                
[0m[1msrc/file.c:744:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |         if (streq (f->name, dep_name (d)))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  745 |           /* Skip circular dependencies.  */[0m
  746 |           break;[0m
      | [0;1;32m                
[0m[1msrc/file.c:748:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |       if (d)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  749 |         /* We broke early: must have found a circular dependency.  */[0m
  750 |         free_dep_chain (prereqs);[0m
  751 |       else if (!f->deps)[0m
      | [0;32m      } 
[0m[1msrc/file.c:751:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |       else if (!f->deps)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  752 |         f->deps = prereqs;[0m
  753 |       else[0m
      | [0;32m      } 
[0m[1msrc/file.c:756:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |           while (d->next)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  757 |             d = d->next;[0m
      | [0;1;32m                        
[0m[1msrc/file.c:779:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  779 |   for (f = lookup_file (".PRECIOUS"); f != 0; f = f->prev)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  780 |     for (d = f->deps; d != 0; d = d->next)[0m
  781 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  782 |         f2->precious = 1;[0m
      | [0;1;32m                         
[0m[1msrc/file.c:780:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |     for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  781 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  782 |         f2->precious = 1;[0m
      | [0;1;32m                         
[0m[1msrc/file.c:781:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  782 |         f2->precious = 1;[0m
      | [0;1;32m                         
[0m[1msrc/file.c:784:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |   for (f = lookup_file (".LOW_RESOLUTION_TIME"); f != 0; f = f->prev)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  785 |     for (d = f->deps; d != 0; d = d->next)[0m
  786 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  787 |         f2->low_resolution_time = 1;[0m
      | [0;1;32m                                    
[0m[1msrc/file.c:785:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |     for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  786 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  787 |         f2->low_resolution_time = 1;[0m
      | [0;1;32m                                    
[0m[1msrc/file.c:786:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  786 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  787 |         f2->low_resolution_time = 1;[0m
      | [0;1;32m                                    
[0m[1msrc/file.c:789:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |   for (f = lookup_file (".PHONY"); f != 0; f = f->prev)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  790 |     for (d = f->deps; d != 0; d = d->next)[0m
  791 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  792 |         {[0m
  793 |           /* Mark this file as phony nonexistent target.  */[0m
  794 |           f2->phony = 1;[0m
  795 |           f2->is_target = 1;[0m
  796 |           f2->last_mtime = NONEXISTENT_MTIME;[0m
  797 |           f2->mtime_before_update = NONEXISTENT_MTIME;[0m
  798 |         }[0m
      | [0;1;32m         
[0m[1msrc/file.c:790:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |     for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  791 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  792 |         {[0m
  793 |           /* Mark this file as phony nonexistent target.  */[0m
  794 |           f2->phony = 1;[0m
  795 |           f2->is_target = 1;[0m
  796 |           f2->last_mtime = NONEXISTENT_MTIME;[0m
  797 |           f2->mtime_before_update = NONEXISTENT_MTIME;[0m
  798 |         }[0m
      | [0;1;32m         
[0m[1msrc/file.c:800:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |   for (f = lookup_file (".NOTINTERMEDIATE"); f != 0; f = f->prev)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  801 |     /* Mark .NOTINTERMEDIATE deps as notintermediate files.  */[0m
  802 |     if (f->deps)[0m
  803 |         for (d = f->deps; d != 0; d = d->next)[0m
  804 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  805 |             f2->notintermediate = 1;[0m
  806 |     /* .NOTINTERMEDIATE with no deps marks all files as notintermediate.  */[0m
  807 |     else[0m
  808 |       no_intermediates = 1;[0m
      | [0;1;32m                           
[0m[1msrc/file.c:802:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  802 |     if (f->deps)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  803 |         for (d = f->deps; d != 0; d = d->next)[0m
  804 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  805 |             f2->notintermediate = 1;[0m
  806 |     /* .NOTINTERMEDIATE with no deps marks all files as notintermediate.  */[0m
  807 |     else[0m
      | [0;32m    } 
[0m[1msrc/file.c:803:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  803 |         for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  804 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  805 |             f2->notintermediate = 1;[0m
      | [0;1;32m                                    
[0m[1msrc/file.c:804:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  804 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  805 |             f2->notintermediate = 1;[0m
      | [0;1;32m                                    
[0m[1msrc/file.c:807:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  808 |       no_intermediates = 1;[0m
      | [0;1;32m                           
[0m[1msrc/file.c:816:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  816 |   for (f = lookup_file (".INTERMEDIATE"); f != 0; f = f->prev)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  817 |     /* Mark .INTERMEDIATE deps as intermediate files.  */[0m
  818 |     for (d = f->deps; d != 0; d = d->next)[0m
  819 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  820 |         if (f2->notintermediate)[0m
  821 |           OS (fatal, NILF,[0m
  822 |               _("%s cannot be both .NOTINTERMEDIATE and .INTERMEDIATE"),[0m
  823 |               f2->name);[0m
  824 |         else[0m
  825 |           f2->intermediate = 1;[0m
      | [0;1;32m                               
[0m[1msrc/file.c:818:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |     for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  819 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  820 |         if (f2->notintermediate)[0m
  821 |           OS (fatal, NILF,[0m
  822 |               _("%s cannot be both .NOTINTERMEDIATE and .INTERMEDIATE"),[0m
  823 |               f2->name);[0m
  824 |         else[0m
  825 |           f2->intermediate = 1;[0m
      | [0;1;32m                               
[0m[1msrc/file.c:819:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |       for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  820 |         if (f2->notintermediate)[0m
  821 |           OS (fatal, NILF,[0m
  822 |               _("%s cannot be both .NOTINTERMEDIATE and .INTERMEDIATE"),[0m
  823 |               f2->name);[0m
  824 |         else[0m
  825 |           f2->intermediate = 1;[0m
      | [0;1;32m                               
[0m[1msrc/file.c:820:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |         if (f2->notintermediate)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  821 |           OS (fatal, NILF,[0m
  822 |               _("%s cannot be both .NOTINTERMEDIATE and .INTERMEDIATE"),[0m
  823 |               f2->name);[0m
  824 |         else[0m
      | [0;32m        } 
[0m[1msrc/file.c:824:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  825 |           f2->intermediate = 1;[0m
      | [0;1;32m                               
[0m[1msrc/file.c:830:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  830 |   for (f = lookup_file (".SECONDARY"); f != 0; f = f->prev)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  831 |     /* Mark .SECONDARY deps as both intermediate and secondary.  */[0m
  832 |     if (f->deps)[0m
  833 |       for (d = f->deps; d != 0; d = d->next)[0m
  834 |         for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  835 |         if (f2->notintermediate)[0m
  836 |           OS (fatal, NILF,[0m
  837 |               _("%s cannot be both .NOTINTERMEDIATE and .SECONDARY"),[0m
  838 |               f2->name);[0m
  839 |         else[0m
  840 |           f2->intermediate = f2->secondary = 1;[0m
  841 |     /* .SECONDARY with no deps listed marks *all* files that way.  */[0m
  842 |     else[0m
  843 |       all_secondary = 1;[0m
      | [0;1;32m                        
[0m[1msrc/file.c:832:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  832 |     if (f->deps)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  833 |       for (d = f->deps; d != 0; d = d->next)[0m
  834 |         for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  835 |         if (f2->notintermediate)[0m
  836 |           OS (fatal, NILF,[0m
  837 |               _("%s cannot be both .NOTINTERMEDIATE and .SECONDARY"),[0m
  838 |               f2->name);[0m
  839 |         else[0m
  840 |           f2->intermediate = f2->secondary = 1;[0m
  841 |     /* .SECONDARY with no deps listed marks *all* files that way.  */[0m
  842 |     else[0m
      | [0;32m    } 
[0m[1msrc/file.c:833:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |       for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  834 |         for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  835 |         if (f2->notintermediate)[0m
  836 |           OS (fatal, NILF,[0m
  837 |               _("%s cannot be both .NOTINTERMEDIATE and .SECONDARY"),[0m
  838 |               f2->name);[0m
  839 |         else[0m
  840 |           f2->intermediate = f2->secondary = 1;[0m
      | [0;1;32m                                               
[0m[1msrc/file.c:834:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  834 |         for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  835 |         if (f2->notintermediate)[0m
  836 |           OS (fatal, NILF,[0m
  837 |               _("%s cannot be both .NOTINTERMEDIATE and .SECONDARY"),[0m
  838 |               f2->name);[0m
  839 |         else[0m
  840 |           f2->intermediate = f2->secondary = 1;[0m
      | [0;1;32m                                               
[0m[1msrc/file.c:835:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  835 |         if (f2->notintermediate)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  836 |           OS (fatal, NILF,[0m
  837 |               _("%s cannot be both .NOTINTERMEDIATE and .SECONDARY"),[0m
  838 |               f2->name);[0m
  839 |         else[0m
      | [0;32m        } 
[0m[1msrc/file.c:839:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  839 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  840 |           f2->intermediate = f2->secondary = 1;[0m
      | [0;1;32m                                               
[0m[1msrc/file.c:842:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  843 |       all_secondary = 1;[0m
      | [0;1;32m                        
[0m[1msrc/file.c:845:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  845 |   if (no_intermediates && all_secondary)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  846 |     O (fatal, NILF,[0m
  847 |        _(".NOTINTERMEDIATE and .SECONDARY are mutually exclusive"));[0m
      | [0;1;32m                                                                    
[0m[1msrc/file.c:850:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |   if (f != 0 && f->is_target)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  851 |     export_all_variables = 1;[0m
      | [0;1;32m                             
[0m[1msrc/file.c:856:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |       if (f->deps == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  857 |         ignore_errors_flag = 1;[0m
  858 |       else[0m
      | [0;32m      } 
[0m[1msrc/file.c:858:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  858 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  859 |         for (d = f->deps; d != 0; d = d->next)[0m
  860 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  861 |             f2->command_flags |= COMMANDS_NOERROR;[0m
      | [0;1;32m                                                  
[0m[1msrc/file.c:859:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  859 |         for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  860 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  861 |             f2->command_flags |= COMMANDS_NOERROR;[0m
      | [0;1;32m                                                  
[0m[1msrc/file.c:860:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  860 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  861 |             f2->command_flags |= COMMANDS_NOERROR;[0m
      | [0;1;32m                                                  
[0m[1msrc/file.c:867:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  867 |       if (f->deps == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  868 |         run_silent = 1;[0m
  869 |       else[0m
      | [0;32m      } 
[0m[1msrc/file.c:869:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  869 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  870 |         for (d = f->deps; d != 0; d = d->next)[0m
  871 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  872 |             f2->command_flags |= COMMANDS_SILENT;[0m
      | [0;1;32m                                                 
[0m[1msrc/file.c:870:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |         for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  871 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
  872 |             f2->command_flags |= COMMANDS_SILENT;[0m
      | [0;1;32m                                                 
[0m[1msrc/file.c:871:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  871 |           for (f2 = d->file; f2 != 0; f2 = f2->prev)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  872 |             f2->command_flags |= COMMANDS_SILENT;[0m
      | [0;1;32m                                                 
[0m[1msrc/file.c:880:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  880 |       if (!f->deps)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  881 |         not_parallel = 1;[0m
  882 |       else[0m
      | [0;32m      } 
[0m[1msrc/file.c:882:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  882 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  883 |         /* Set a wait point between every prerequisite of each target.  */[0m
  884 |         for (d = f->deps; d != NULL; d = d->next)[0m
  885 |           for (f2 = d->file; f2 != NULL; f2 = f2->prev)[0m
  886 |             if (f2->deps)[0m
  887 |               for (d2 = f2->deps->next; d2 != NULL; d2 = d2->next)[0m
  888 |                 d2->wait_here = 1;[0m
      | [0;1;32m                                  
[0m[1msrc/file.c:884:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  884 |         for (d = f->deps; d != NULL; d = d->next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  885 |           for (f2 = d->file; f2 != NULL; f2 = f2->prev)[0m
  886 |             if (f2->deps)[0m
  887 |               for (d2 = f2->deps->next; d2 != NULL; d2 = d2->next)[0m
  888 |                 d2->wait_here = 1;[0m
      | [0;1;32m                                  
[0m[1msrc/file.c:885:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  885 |           for (f2 = d->file; f2 != NULL; f2 = f2->prev)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  886 |             if (f2->deps)[0m
  887 |               for (d2 = f2->deps->next; d2 != NULL; d2 = d2->next)[0m
  888 |                 d2->wait_here = 1;[0m
      | [0;1;32m                                  
[0m[1msrc/file.c:886:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  886 |             if (f2->deps)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  887 |               for (d2 = f2->deps->next; d2 != NULL; d2 = d2->next)[0m
  888 |                 d2->wait_here = 1;[0m
      | [0;1;32m                                  
[0m[1msrc/file.c:887:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |               for (d2 = f2->deps->next; d2 != NULL; d2 = d2->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  888 |                 d2->wait_here = 1;[0m
      | [0;1;32m                                  
[0m[1msrc/file.c:920:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  920 |   for (d = file->also_make; d != 0; d = d->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  921 |     if (state > d->file->command_state)[0m
  922 |       d->file->command_state = state;[0m
      | [0;1;32m                                     
[0m[1msrc/file.c:921:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |     if (state > d->file->command_state)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  922 |       d->file->command_state = state;[0m
      | [0;1;32m                                     
[0m[1msrc/file.c:1010:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1010 |       sprintf (p, "%04" PRIdMAX "-%02d-%02d %02d:%02d:%02d",[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/file.c:1010:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1010 |       sprintf (p, "%04" PRIdMAX "-%02d-%02d %02d:%02d:%02d",[0m
      | [0;1;32m      ^~~~~~~
[0m[1msrc/file.c:1014:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1014 |   else if (t < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1015 |     sprintf (p, "%" PRIdMAX, (intmax_t) t);[0m
 1016 |   else[0m
      | [0;32m  } 
[0m[1msrc/file.c:1015:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1015 |     sprintf (p, "%" PRIdMAX, (intmax_t) t);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/file.c:1015:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1015 |     sprintf (p, "%" PRIdMAX, (intmax_t) t);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/file.c:1016:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1016 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1017 |     sprintf (p, "%" PRIuMAX, (uintmax_t) t);[0m
      | [0;1;32m                                            
[0m[1msrc/file.c:1017:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1017 |     sprintf (p, "%" PRIuMAX, (uintmax_t) t);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/file.c:1017:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1017 |     sprintf (p, "%" PRIuMAX, (uintmax_t) t);[0m
      | [0;1;32m    ^~~~~~~
[0m[1msrc/file.c:1024:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1024 |   sprintf (p, ".%09d", FILE_TIMESTAMP_NS (ts));[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/file.c:1024:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1024 |   sprintf (p, ".%09d", FILE_TIMESTAMP_NS (ts));[0m
      | [0;1;32m  ^~~~~~~
[0m[1msrc/file.c:1026:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1026 |   while (*p == '0')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1027 |     p--;[0m
      | [0;1;32m        
[0m[1msrc/file.c:1041:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1041 |   for (; deps != 0; deps = deps->next)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1042 |     if (! deps->ignore_mtime)[0m
 1043 |       printf (" %s%s", deps->wait_here ? ".WAIT " : "", dep_name (deps));[0m
 1044 |     else if (! ood)[0m
 1045 |       ood = deps;[0m
      | [0;1;32m                 
[0m[1msrc/file.c:1042:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1042 |     if (! deps->ignore_mtime)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1043 |       printf (" %s%s", deps->wait_here ? ".WAIT " : "", dep_name (deps));[0m
 1044 |     else if (! ood)[0m
      | [0;32m    } 
[0m[1msrc/file.c:1044:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1044 |     else if (! ood)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1045 |       ood = deps;[0m
      | [0;1;32m                 
[0m[1msrc/file.c:1051:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1051 |       for (ood = ood->next; ood != 0; ood = ood->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1052 |         if (ood->ignore_mtime)[0m
 1053 |           printf (" %s%s", ood->wait_here ? ".WAIT " : "", dep_name (ood));[0m
      | [0;1;32m                                                                           
[0m[1msrc/file.c:1052:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1052 |         if (ood->ignore_mtime)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1053 |           printf (" %s%s", ood->wait_here ? ".WAIT " : "", dep_name (ood));[0m
      | [0;1;32m                                                                           
[0m[1msrc/file.c:1068:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1068 |   if (no_builtin_rules_flag && f->builtin)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1069 |     return;[0m
      | [0;1;32m           
[0m[1msrc/file.c:1077:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1077 |       if (cmd_prefix != RECIPEPREFIX_DEFAULT)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1078 |         putchar (cmd_prefix);[0m
      | [0;1;32m                             
[0m[1msrc/file.c:1082:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |   if (f->variables != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1083 |     print_target_variables (f);[0m
      | [0;1;32m                               
[0m[1msrc/file.c:1085:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1085 |   if (!f->is_target)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1086 |     puts (_("# Not a target:"));[0m
      | [0;1;32m                                
[0m[1msrc/file.c:1090:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1090 |   if (f->precious)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1091 |     puts (_("#  Precious file (prerequisite of .PRECIOUS)."));[0m
      | [0;1;32m                                                              
[0m[1msrc/file.c:1092:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1092 |   if (f->phony)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1093 |     puts (_("#  Phony target (prerequisite of .PHONY)."));[0m
      | [0;1;32m                                                          
[0m[1msrc/file.c:1094:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1094 |   if (f->cmd_target)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1095 |     puts (_("#  Command line target."));[0m
      | [0;1;32m                                        
[0m[1msrc/file.c:1096:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |   if (f->dontcare)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1097 |     puts (_("#  A default, MAKEFILES, or -include/sinclude makefile."));[0m
      | [0;1;32m                                                                        
[0m[1msrc/file.c:1098:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1098 |   if (f->builtin)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1099 |     puts (_("#  Builtin rule"));[0m
      | [0;1;32m                                
[0m[1msrc/file.c:1103:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1103 |   if (f->stem != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1104 |     printf (_("#  Implicit/static pattern stem: '%s'\n"), f->stem);[0m
      | [0;1;32m                                                                   
[0m[1msrc/file.c:1105:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1105 |   if (f->intermediate)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1106 |     puts (_("#  File is an intermediate prerequisite."));[0m
      | [0;1;32m                                                         
[0m[1msrc/file.c:1107:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1107 |   if (f->notintermediate)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1108 |     puts (_("#  File is a prerequisite of .NOTINTERMEDIATE."));[0m
      | [0;1;32m                                                               
[0m[1msrc/file.c:1109:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1109 |   if (f->secondary)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1110 |     puts (_("#  File is secondary (prerequisite of .SECONDARY)."));[0m
      | [0;1;32m                                                                   
[0m[1msrc/file.c:1115:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1115 |       for (d = f->also_make; d != 0; d = d->next)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1116 |         printf (" %s", dep_name (d));[0m
      | [0;1;32m                                     
[0m[1msrc/file.c:1119:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1119 |   if (f->last_mtime == UNKNOWN_MTIME)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1120 |     puts (_("#  Modification time never checked."));[0m
 1121 |   else if (f->last_mtime == NONEXISTENT_MTIME)[0m
      | [0;32m  } 
[0m[1msrc/file.c:1121:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |   else if (f->last_mtime == NONEXISTENT_MTIME)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1122 |     puts (_("#  File does not exist."));[0m
 1123 |   else if (f->last_mtime == OLD_MTIME)[0m
      | [0;32m  } 
[0m[1msrc/file.c:1123:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1123 |   else if (f->last_mtime == OLD_MTIME)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1124 |     puts (_("#  File is very old."));[0m
 1125 |   else[0m
      | [0;32m  } 
[0m[1msrc/file.c:1136:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1136 |       puts (_("#  Recipe currently running (THIS IS A BUG)."));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1137 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/file.c:1139:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1139 |       puts (_("#  Dependencies recipe running (THIS IS A BUG)."));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1140 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1msrc/file.c:1146:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1146 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msrc/file.c:1148:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1148 |           puts (_("#  Successfully updated."));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1149 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/file.c:1155:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1155 |           puts (_("#  Failed to be updated."));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1156 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msrc/file.c:1158:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1158 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1msrc/file.c:1160:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1160 |       puts (_("#  Invalid value in 'command_state' member!"));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1161 |       fflush (stdout);[0m
 1162 |       fflush (stderr);[0m
 1163 |       abort ();[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1msrc/file.c:1166:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1166 |   if (f->variables != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1167 |     print_file_variables (f);[0m
      | [0;1;32m                             
[0m[1msrc/file.c:1169:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1169 |   if (f->cmds != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1170 |     print_commands (f->cmds);[0m
      | [0;1;32m                             
[0m[1msrc/file.c:1172:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1172 |   if (f->prev)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1173 |     print_file ((const void *) f->prev);[0m
      | [0;1;32m                                        
[0m[1msrc/file.c:1203:3: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1192:24: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1192 |           error (NULL, strlen (_p->name) + CSTRLEN (# _n) + strlen (_p->_n),  \[0m
      | [0;1;32m                       ^       ~~~~~~~~
[0m[1msrc/file.c:1202:18: [0m[0;1;36mnote: [0mAssuming field 'name' is null[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1202:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1202:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1203:18: [0m[0;1;36mnote: [0mAssuming field 'hname' is non-null[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1203:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1203:18: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
[1msrc/file.c:1191:23: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                      ^~~~~~~~~
[0m[1msrc/file.c:1203:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:36: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:9: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m        ^
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1192:24: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1192 |           error (NULL, strlen (_p->name) + CSTRLEN (# _n) + strlen (_p->_n),  \[0m
      | [0;1;32m                       ^       ~~~~~~~~
[0m[1msrc/file.c:1204:3: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1192:24: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1192 |           error (NULL, strlen (_p->name) + CSTRLEN (# _n) + strlen (_p->_n),  \[0m
      | [0;1;32m                       ^       ~~~~~~~~
[0m[1msrc/file.c:1202:18: [0m[0;1;36mnote: [0mAssuming field 'name' is null[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1202:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1202:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1203:18: [0m[0;1;36mnote: [0mAssuming field 'hname' is null[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1204:18: [0m[0;1;36mnote: [0mAssuming field 'vpath' is non-null[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1204:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1204:18: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
[1msrc/file.c:1191:23: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                      ^~~~~~~~~
[0m[1msrc/file.c:1204:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1204:3: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:36: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/file.c:1204:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:9: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m        ^
[0m[1msrc/file.c:1204:3: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1192:24: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1192 |           error (NULL, strlen (_p->name) + CSTRLEN (# _n) + strlen (_p->_n),  \[0m
      | [0;1;32m                       ^       ~~~~~~~~
[0m[1msrc/file.c:1205:3: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1192:24: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1192 |           error (NULL, strlen (_p->name) + CSTRLEN (# _n) + strlen (_p->_n),  \[0m
      | [0;1;32m                       ^       ~~~~~~~~
[0m[1msrc/file.c:1202:18: [0m[0;1;36mnote: [0mAssuming field 'name' is null[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1202:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1202:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1203:18: [0m[0;1;36mnote: [0mAssuming field 'hname' is null[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1204:18: [0m[0;1;36mnote: [0mAssuming field 'vpath' is null[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1204:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1204:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1205:18: [0m[0;1;36mnote: [0mAssuming field 'stem' is non-null[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1205:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1205:18: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
[1msrc/file.c:1191:23: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                      ^~~~~~~~~
[0m[1msrc/file.c:1205:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1205:3: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:36: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/file.c:1205:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:9: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m        ^
[0m[1msrc/file.c:1205:3: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1192:24: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1192 |           error (NULL, strlen (_p->name) + CSTRLEN (# _n) + strlen (_p->_n),  \[0m
      | [0;1;32m                       ^       ~~~~~~~~
[0m[1msrc/file.c:1210:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1210 |       if (! d->need_2nd_expansion)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1211 |         VERIFY_CACHED (d, name);[0m
      | [0;1;32m                                
[0m[1msrc/file.c:1212:7: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 1212 |       VERIFY_CACHED (d, stem);[0m
      | [0;1;32m      ^
[0m[1msrc/file.c:1192:24: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1192 |           error (NULL, strlen (_p->name) + CSTRLEN (# _n) + strlen (_p->_n),  \[0m
      | [0;1;32m                       ^       ~~~~~~~~
[0m[1msrc/file.c:1202:18: [0m[0;1;36mnote: [0mAssuming field 'name' is null[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1202:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1202:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1202 |   VERIFY_CACHED (f, name);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1203:18: [0m[0;1;36mnote: [0mAssuming field 'hname' is null[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1203:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1203 |   VERIFY_CACHED (f, hname);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1204:18: [0m[0;1;36mnote: [0mAssuming field 'vpath' is null[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1204:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1204:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1204 |   VERIFY_CACHED (f, vpath);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1205:18: [0m[0;1;36mnote: [0mAssuming field 'stem' is null[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m                 ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1205:3: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1205:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1205 |   VERIFY_CACHED (f, stem);[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1208:21: [0m[0;1;36mnote: [0mAssuming 'd' is not equal to null[0m
 1208 |   for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m                    ^~~~~~
[0m[1msrc/file.c:1208:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1208 |   for (d = f->deps; d != 0; d = d->next)[0m
      | [0;1;32m  ^
[0m[1msrc/file.c:1210:11: [0m[0;1;36mnote: [0mAssuming field 'need_2nd_expansion' is 0[0m
 1210 |       if (! d->need_2nd_expansion)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/file.c:1210:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1210 |       if (! d->need_2nd_expansion)[0m
      | [0;1;32m      ^
[0m[1msrc/file.c:1211:24: [0m[0;1;36mnote: [0mAssuming field 'name' is null[0m
 1211 |         VERIFY_CACHED (d, name);[0m
      | [0;1;32m                       ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1211:9: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1211 |         VERIFY_CACHED (d, name);[0m
      | [0;1;32m        ^
[0m[1msrc/file.c:1191:20: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                   ^
[0m[1msrc/file.c:1211:9: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
 1211 |         VERIFY_CACHED (d, name);[0m
      | [0;1;32m        ^
[0m[1msrc/file.c:1190:5: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1190 |     do{                                                                       \[0m
      | [0;1;32m    ^
[0m[1msrc/file.c:1212:22: [0m[0;1;36mnote: [0mAssuming field 'stem' is non-null[0m
 1212 |       VERIFY_CACHED (d, stem);[0m
      | [0;1;32m                     ^
[0m[1msrc/file.c:1191:13: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m            ^~~~~~
[0m[1msrc/file.c:1212:22: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1212 |       VERIFY_CACHED (d, stem);[0m
      | [0;1;32m                     ^
[0m[1msrc/file.c:1212:22: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
[1msrc/file.c:1191:23: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                      ^~~~~~~~~
[0m[1msrc/file.c:1212:22: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1212 |       VERIFY_CACHED (d, stem);[0m
      | [0;1;32m                     ^
[0m[1msrc/file.c:1212:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1212 |       VERIFY_CACHED (d, stem);[0m
      | [0;1;32m      ^
[0m[1msrc/file.c:1191:36: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msrc/file.c:1212:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1212 |       VERIFY_CACHED (d, stem);[0m
      | [0;1;32m      ^
[0m[1msrc/file.c:1191:9: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1191 |         if (_p->_n && _p->_n[0] && !strcache_iscached (_p->_n))               \[0m
      | [0;1;32m        ^
[0m[1msrc/file.c:1212:7: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 1212 |       VERIFY_CACHED (d, stem);[0m
      | [0;1;32m      ^
[0m[1msrc/file.c:1192:24: [0m[0;1;36mnote: [0mexpanded from macro 'VERIFY_CACHED'[0m
 1192 |           error (NULL, strlen (_p->name) + CSTRLEN (# _n) + strlen (_p->_n),  \[0m
      | [0;1;32m                       ^       ~~~~~~~~
[0m[1msrc/file.c:1242:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1242 |       for (; fp < end; ++fp)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m144 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
